/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 239);
/******/ })
/************************************************************************/
/******/ ({

/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.10';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Gets the value at `key`, unless `key` is "__proto__".
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function safeGet(object, key) {
    return key == '__proto__'
      ? undefined
      : object[key];
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });

        return result;
      }

      if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });

        return result;
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(44)(module)))

/***/ }),

/***/ 17:
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 239:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(240);


/***/ }),

/***/ 24:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
 * Vue.js v2.5.16
 * (c) 2014-2018 Evan You
 * Released under the MIT License.
 */


/*  */

var emptyObject = Object.freeze({});

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value e.g. [object Object]
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it... e.g.
 * PhantomJS 1.x. Technically we don't need this anymore since native bind is
 * now more performant in most browsers, but removing it would be breaking for
 * code that was able to run in PhantomJS 1.x, so this must be kept for
 * backwards compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
})

/*  */

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm || {};
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  if (!getter && arguments.length === 2) {
    val = obj[key];
  }
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ("development" !== 'production' && customSetter) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ("development" !== 'production' &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "development" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ("development" !== 'production' &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "development" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "development" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
    "development" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'can only contain alphanumeric characters and the hyphen, ' +
      'and must start with a letter.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ("development" !== 'production' && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ("development" !== 'production' && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      "Invalid prop: type check failed for prop \"" + name + "\"." +
      " Expected " + (expectedTypes.map(capitalize).join(', ')) +
      ", got " + (toRawType(value)) + ".",
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

/*  */

function handleError (err, vm, info) {
  if (vm) {
    var cur = vm;
    while ((cur = cur.$parent)) {
      var hooks = cur.$options.errorCaptured;
      if (hooks) {
        for (var i = 0; i < hooks.length; i++) {
          try {
            var capture = hooks[i].call(cur, err, vm, info) === false;
            if (capture) { return }
          } catch (e) {
            globalHandleError(e, cur, 'errorCaptured hook');
          }
        }
      }
    }
  }
  globalHandleError(err, vm, info);
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      logError(e, null, 'config.errorHandler');
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */
/* globals MessageChannel */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using both microtasks and (macro) tasks.
// In < 2.4 we used microtasks everywhere, but there are some scenarios where
// microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690) or even between bubbling of the same
// event (#6566). However, using (macro) tasks everywhere also has subtle problems
// when state is changed right before repaint (e.g. #6813, out-in transitions).
// Here we use microtask by default, but expose a way to force (macro) task when
// needed (e.g. in event handlers attached by v-on).
var microTimerFunc;
var macroTimerFunc;
var useMacroTask = false;

// Determine (macro) task defer implementation.
// Technically setImmediate should be the ideal choice, but it's only available
// in IE. The only polyfill that consistently queues the callback after all DOM
// events triggered in the same loop is by using MessageChannel.
/* istanbul ignore if */
if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  macroTimerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else if (typeof MessageChannel !== 'undefined' && (
  isNative(MessageChannel) ||
  // PhantomJS
  MessageChannel.toString() === '[object MessageChannelConstructor]'
)) {
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = flushCallbacks;
  macroTimerFunc = function () {
    port.postMessage(1);
  };
} else {
  /* istanbul ignore next */
  macroTimerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

// Determine microtask defer implementation.
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  microTimerFunc = function () {
    p.then(flushCallbacks);
    // in problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else {
  // fallback to macro
  microTimerFunc = macroTimerFunc;
}

/**
 * Wrap a function so that if any code inside triggers state change,
 * the changes are queued using a (macro) task instead of a microtask.
 */
function withMacroTask (fn) {
  return fn._withTask || (fn._withTask = function () {
    useMacroTask = true;
    var res = fn.apply(null, arguments);
    useMacroTask = false;
    return res
  })
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    if (useMacroTask) {
      macroTimerFunc();
    } else {
      microTimerFunc();
    }
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, def, cur, old, event;
  for (name in on) {
    def = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    /* istanbul ignore if */
    if (isUndef(cur)) {
      "development" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "development" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once) {
  if (once) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$off(event[i], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    if (fn) {
      // specific handler
      var cb;
      var i$1 = cbs.length;
      while (i$1--) {
        cb = cbs[i$1];
        if (cb === fn || cb.fn === fn) {
          cbs.splice(i$1, 1);
          break
        }
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, ("event handler for \"" + event + "\""));
        }
      }
    }
    return vm
  };
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if ("development" !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure(("vue " + name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure(("vue " + name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ("development" !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$1 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$1; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "development" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "development" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      "development" !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ("development" !== 'production' && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : userDef;
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  if ("development" !== 'production' &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (methods[key] == null) {
        warn(
          "Method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject).filter(function (key) {
        /* istanbul ignore next */
        return Object.getOwnPropertyDescriptor(inject, key).enumerable
      })
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ("development" !== 'production' && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes) {
      if ("development" !== 'production' && slotNodes._rendered) {
        warn(
          "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
          "- this will likely cause render errors.",
          this
        );
      }
      slotNodes._rendered = true;
    }
    nodes = slotNodes || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      "development" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "development" !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () { return resolveSlots(children, parent); };

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = data.scopedSlots || emptyObject;
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */




// Register the component hook to weex native render engine.
// The hook will be triggered by native, not javascript.


// Updates the state of the component to weex native render engine.

/*  */

// https://github.com/Hanks10100/weex-native-directive/tree/master/component

// listening on native callback

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  // Weex specific: invoke recycle-list optimized @render function for
  // extracting cell-slot template.
  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
  /* istanbul ignore if */
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var options = {
    _isComponent: true,
    parent: parent,
    _parentVnode: vnode,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    hooks[key] = componentVNodeHooks[key];
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "development" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ("development" !== 'production' &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    // reset _rendered flag on slots for duplicate slot check
    if (true) {
      for (var key in vm.$slots) {
        // $flow-disable-line
        vm.$slots[key]._rendered = false;
      }
    }

    if (_parentVnode) {
      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (true) {
        if (vm.$options.renderError) {
          try {
            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
          } catch (e) {
            handleError(e, vm, "renderError");
            vnode = vm._vnode;
          }
        } else {
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ("development" !== 'production' && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ("development" !== 'production' && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if ("development" !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue (options) {
  if ("development" !== 'production' &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ("development" !== 'production' && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ("development" !== 'production' && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache, key, this$1.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
}

var builtInComponents = {
  KeepAlive: KeepAlive
}

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.5.16';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "development" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
}

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove () {
      if (--remove.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove.listeners = listeners;
    return remove
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (true) {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if ("development" !== 'production' && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (true) {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (true) {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (true) {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ("development" !== 'production' &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ("development" !== 'production' &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (true) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
}

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
]

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
}

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
}

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
  }
}

/*  */

function baseWarn (msg) {
  console.error(("[Vue compiler]: " + msg));
}

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
  el.plain = false;
}

function addAttr (el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
  el.plain = false;
}

// add a raw attr (use this in preTransforms)
function addRawAttr (el, name, value) {
  el.attrsMap[name] = value;
  el.attrsList.push({ name: name, value: value });
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  modifiers
) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
  el.plain = false;
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn
) {
  modifiers = modifiers || emptyObject;
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
    "development" !== 'production' && warn &&
    modifiers.prevent && modifiers.passive
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.'
    );
  }

  // check capture modifier
  if (modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }

  // normalize click.right and click.middle since they don't actually fire
  // this is technically browser-specific, but at least for now browsers are
  // the only target envs that have right/middle clicks.
  if (name === 'click') {
    if (modifiers.right) {
      name = 'contextmenu';
      delete modifiers.right;
    } else if (modifiers.middle) {
      name = 'mouseup';
    }
  }

  var events;
  if (modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }

  var newHandler = {
    value: value.trim()
  };
  if (modifiers !== emptyObject) {
    newHandler.modifiers = modifiers;
  }

  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }

  el.plain = false;
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.
function getAndRemoveAttr (
  el,
  name,
  removeFromMap
) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  if (removeFromMap) {
    delete el.attrsMap[name];
  }
  return val
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
      "? " + baseValueExpression + ".trim()" +
      ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: ("\"" + value + "\""),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var res = parseModel(value);
  if (res.key === null) {
    return (value + "=" + assignment)
  } else {
    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
  }
}

/**
 * Parse a v-model expression into a base path and a final key segment.
 * Handles both dot-path and possible square brackets.
 *
 * Possible cases:
 *
 * - test
 * - test[key]
 * - test[test1[key]]
 * - test["a"][key]
 * - xxx.test[a[a].test1[key]]
 * - test.xxx.a["asa"][test1[key]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;



function parseModel (val) {
  // Fix https://github.com/vuejs/vue/pull/7730
  // allow v-model="obj.val " (trailing whitespace)
  val = val.trim();
  len = val.length;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    index$1 = val.lastIndexOf('.');
    if (index$1 > -1) {
      return {
        exp: val.slice(0, index$1),
        key: '"' + val.slice(index$1 + 1) + '"'
      }
    } else {
      return {
        exp: val,
        key: null
      }
    }
  }

  str = val;
  index$1 = expressionPos = expressionEndPos = 0;

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.slice(0, expressionPos),
    key: val.slice(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (true) {
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead."
      );
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (true) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.'
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
    "?_i(" + value + "," + valueBinding + ")>-1" + (
      trueValueBinding === 'true'
        ? (":(" + value + ")")
        : (":_q(" + value + "," + trueValueBinding + ")")
    )
  );
  addHandler(el, 'change',
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
      "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;

  // warn if v-bind:value conflicts with v-model
  // except for inputs with v-bind:type
  if (true) {
    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (value$1 && !typeBinding) {
      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
      warn$1(
        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
        'because the latter already expands to a value binding internally'
      );
    }
  }

  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler (handler, event, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  handler = withMacroTask(handler);
  if (once$$1) { handler = createOnceHandler(handler, event, capture); }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    event,
    handler._withTask || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
}

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.lazy) {
      // inputs with lazy should only be updated when not in focus
      return false
    }
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
}

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def) {
  if (!def) {
    return
  }
  /* istanbul ignore else */
  if (typeof def === 'object') {
    var res = {};
    if (def.css !== false) {
      extend(res, autoCssTransition(def.name || 'v'));
    }
    extend(res, def);
    return res
  } else if (typeof def === 'string') {
    return autoCssTransition(def)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if ("development" !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {}

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
]

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "development" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
}

var platformDirectives = {
  model: directive,
  show: show
}

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if ("development" !== 'production' && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if ("development" !== 'production' &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
}

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (true) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
}

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
}

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        "development" !== 'production' &&
        "development" !== 'test' &&
        isChrome
      ) {
        console[console.info ? 'info' : 'log'](
          'Download the Vue Devtools extension for a better development experience:\n' +
          'https://github.com/vuejs/vue-devtools'
        );
      }
    }
    if ("development" !== 'production' &&
      "development" !== 'test' &&
      config.productionTip !== false &&
      typeof console !== 'undefined'
    ) {
      console[console.info ? 'info' : 'log'](
        "You are running Vue in development mode.\n" +
        "Make sure to turn on production mode when deploying for production.\n" +
        "See more tips at https://vuejs.org/guide/deployment.html"
      );
    }
  }, 0);
}

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});



function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var rawTokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index, tokenValue;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      rawTokens.push(tokenValue = text.slice(lastIndex, index));
      tokens.push(JSON.stringify(tokenValue));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    rawTokens.push({ '@binding': exp });
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    rawTokens.push(tokenValue = text.slice(lastIndex));
    tokens.push(JSON.stringify(tokenValue));
  }
  return {
    expression: tokens.join('+'),
    tokens: rawTokens
  }
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if ("development" !== 'production' && staticClass) {
    var res = parseText(staticClass, options.delimiters);
    if (res) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.'
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
}

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (true) {
      var res = parseText(staticStyle, options.delimiters);
      if (res) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.'
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
}

/*  */

var decoder;

var he = {
  decode: function decode (html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent
  }
}

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
var startTagOpen = new RegExp(("^<" + qnameCapture));
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
var doctype = /^<!DOCTYPE [^>]+>/i;
// #7298: escape - to avoid being pased as HTML comment when inlined in page
var comment = /^<!\--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n',
  '&#9;': '\t'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd));
            }
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(lastTag, html)) {
            advance(1);
          }
          continue
        }
      }

      var text = (void 0), rest = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (
          !endTag.test(rest) &&
          !startTagOpen.test(rest) &&
          !comment.test(rest) &&
          !conditionalComment.test(rest)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if ("development" !== 'production' && !stack.length && options.warn) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') { delete args[3]; }
        if (args[4] === '') { delete args[4]; }
        if (args[5] === '') { delete args[5]; }
      }
      var value = args[3] || args[4] || args[5] || '';
      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
        ? options.shouldDecodeNewlinesForHref
        : options.shouldDecodeNewlines;
      attrs[i] = {
        name: args[1],
        value: decodeAttr(value, shouldDecodeNewlines)
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if ("development" !== 'production' &&
          (i > pos || !tagName) &&
          options.warn
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /([^]*?)\s+(?:in|of)\s+([^]*)/;
var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
var stripParensRE = /^\(|\)$/g;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(he.decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;



function createASTElement (
  tag,
  attrs,
  parent
) {
  return {
    type: 1,
    tag: tag,
    attrsList: attrs,
    attrsMap: makeAttrsMap(attrs),
    parent: parent,
    children: []
  }
}

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;

  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function closeElement (element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
    // apply post-transforms
    for (var i = 0; i < postTransforms.length; i++) {
      postTransforms[i](element, options);
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
    shouldKeepComment: options.comments,
    start: function start (tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = createASTElement(tag, attrs, currentParent);
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "development" !== 'production' && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.'
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        element = preTransforms[i](element, options) || element;
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else if (!element.processed) {
        // structural directives
        processFor(element);
        processIf(element);
        processOnce(element);
        // element-scope stuff
        processElement(element, options);
      }

      function checkRootConstraints (el) {
        if (true) {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce(
              "Cannot use <" + (el.tag) + "> as component root element because it may " +
              'contain multiple nodes.'
            );
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce(
              'Cannot use v-for on stateful component root element because ' +
              'it renders multiple elements.'
            );
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (true) {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead."
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) { // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        closeElement(element);
      }
    },

    end: function end () {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      closeElement(element);
    },

    chars: function chars (text) {
      if (!currentParent) {
        if (true) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.'
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored.")
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      text = inPre || text.trim()
        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var res;
        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: res.expression,
            tokens: res.tokens,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    },
    comment: function comment (text) {
      currentParent.children.push({
        type: 3,
        text: text,
        isComment: true
      });
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processElement (element, options) {
  processKey(element);

  // determine whether this is a plain element after
  // removing structural attributes
  element.plain = !element.key && !element.attrsList.length;

  processRef(element);
  processSlot(element);
  processComponent(element);
  for (var i = 0; i < transforms.length; i++) {
    element = transforms[i](element, options) || element;
  }
  processAttrs(element);
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if ("development" !== 'production' && el.tag === 'template') {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var res = parseFor(exp);
    if (res) {
      extend(el, res);
    } else if (true) {
      warn$2(
        ("Invalid v-for expression: " + exp)
      );
    }
  }
}



function parseFor (exp) {
  var inMatch = exp.match(forAliasRE);
  if (!inMatch) { return }
  var res = {};
  res.for = inMatch[2].trim();
  var alias = inMatch[1].trim().replace(stripParensRE, '');
  var iteratorMatch = alias.match(forIteratorRE);
  if (iteratorMatch) {
    res.alias = alias.replace(forIteratorRE, '');
    res.iterator1 = iteratorMatch[1].trim();
    if (iteratorMatch[2]) {
      res.iterator2 = iteratorMatch[2].trim();
    }
  } else {
    res.alias = alias;
  }
  return res
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (true) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if."
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if ("development" !== 'production' && children[i].text !== ' ') {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored."
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if ("development" !== 'production' && el.key) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead."
      );
    }
  } else {
    var slotScope;
    if (el.tag === 'template') {
      slotScope = getAndRemoveAttr(el, 'scope');
      /* istanbul ignore if */
      if ("development" !== 'production' && slotScope) {
        warn$2(
          "the \"scope\" attribute for scoped slots have been deprecated and " +
          "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
          "can also be used on plain elements in addition to <template> to " +
          "denote scoped slots.",
          true
        );
      }
      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
      /* istanbul ignore if */
      if ("development" !== 'production' && el.attrsMap['v-for']) {
        warn$2(
          "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
          "(v-for takes higher priority). Use a wrapper <template> for the " +
          "scoped slot to make it clearer.",
          true
        );
      }
      el.slotScope = slotScope;
    }
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
      // preserve slot as an attribute for native shadow DOM compat
      // only for non-scoped slots.
      if (el.tag !== 'template' && !el.slotScope) {
        addAttr(el, 'slot', slotTarget);
      }
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(
              el,
              ("update:" + (camelize(name))),
              genAssignmentCode(value, "$event")
            );
          }
        }
        if (isProp || (
          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
        )) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if ("development" !== 'production' && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (true) {
        var res = parseText(value, delimiters);
        if (res) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.'
          );
        }
      }
      addAttr(el, name, JSON.stringify(value));
      // #6887 firefox doesn't update muted state if set via attribute
      // even immediately after element creation
      if (!el.component &&
          name === 'muted' &&
          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
        addProp(el, name, 'true');
      }
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
      "development" !== 'production' &&
      map[attrs[i].name] && !isIE && !isEdge
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead."
      );
    }
    _el = _el.parent;
  }
}

/*  */

/**
 * Expand input[v-model] with dyanmic type bindings into v-if-else chains
 * Turn this:
 *   <input v-model="data[type]" :type="type">
 * into this:
 *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
 *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
 *   <input v-else :type="type" v-model="data[type]">
 */

function preTransformNode (el, options) {
  if (el.tag === 'input') {
    var map = el.attrsMap;
    if (!map['v-model']) {
      return
    }

    var typeBinding;
    if (map[':type'] || map['v-bind:type']) {
      typeBinding = getBindingAttr(el, 'type');
    }
    if (!map.type && !typeBinding && map['v-bind']) {
      typeBinding = "(" + (map['v-bind']) + ").type";
    }

    if (typeBinding) {
      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
      // 1. checkbox
      var branch0 = cloneASTElement(el);
      // process for on the main node
      processFor(branch0);
      addRawAttr(branch0, 'type', 'checkbox');
      processElement(branch0, options);
      branch0.processed = true; // prevent it from double-processed
      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
      addIfCondition(branch0, {
        exp: branch0.if,
        block: branch0
      });
      // 2. add radio else-if condition
      var branch1 = cloneASTElement(el);
      getAndRemoveAttr(branch1, 'v-for', true);
      addRawAttr(branch1, 'type', 'radio');
      processElement(branch1, options);
      addIfCondition(branch0, {
        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
        block: branch1
      });
      // 3. other
      var branch2 = cloneASTElement(el);
      getAndRemoveAttr(branch2, 'v-for', true);
      addRawAttr(branch2, ':type', typeBinding);
      processElement(branch2, options);
      addIfCondition(branch0, {
        exp: ifCondition,
        block: branch2
      });

      if (hasElse) {
        branch0.else = true;
      } else if (elseIfCondition) {
        branch0.elseif = elseIfCondition;
      }

      return branch0
    }
  }
}

function cloneASTElement (el) {
  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
}

var model$2 = {
  preTransformNode: preTransformNode
}

var modules$1 = [
  klass$1,
  style$1,
  model$2
]

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
}

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

// KeyboardEvent.keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// KeyboardEvent.key aliases
var keyNames = {
  esc: 'Escape',
  tab: 'Tab',
  enter: 'Enter',
  space: ' ',
  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
  up: ['Up', 'ArrowUp'],
  left: ['Left', 'ArrowLeft'],
  right: ['Right', 'ArrowRight'],
  down: ['Down', 'ArrowDown'],
  'delete': ['Backspace', 'Delete']
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative,
  warn
) {
  var res = isNative ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    res += "\"" + name + "\":" + (genHandler(name, events[name])) + ",";
  }
  return res.slice(0, -1) + '}'
}

function genHandler (
  name,
  handler
) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    if (isMethodPath || isFunctionExpression) {
      return handler.value
    }
    /* istanbul ignore if */
    return ("function($event){" + (handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else if (key === 'exact') {
        var modifiers = (handler.modifiers);
        genModifierCode += genGuard(
          ['ctrl', 'shift', 'alt', 'meta']
            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
            .join('||')
        );
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? ("return " + (handler.value) + "($event)")
      : isFunctionExpression
        ? ("return (" + (handler.value) + ")($event)")
        : handler.value;
    /* istanbul ignore if */
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var keyCode = keyCodes[key];
  var keyName = keyNames[key];
  return (
    "_k($event.keyCode," +
    (JSON.stringify(key)) + "," +
    (JSON.stringify(keyCode)) + "," +
    "$event.key," +
    "" + (JSON.stringify(keyName)) +
    ")"
  )
}

/*  */

function on (el, dir) {
  if ("development" !== 'production' && dir.modifiers) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
}

/*  */

var CodegenState = function CodegenState (options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
  this.onceId = 0;
  this.staticRenderFns = [];
};



function generate (
  ast,
  options
) {
  var state = new CodegenState(options);
  var code = ast ? genElement(ast, state) : '_c("div")';
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: state.staticRenderFns
  }
}

function genElement (el, state) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state)
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el, state) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el, state)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data = el.plain ? undefined : genData$2(el, state);

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el, state) {
  el.staticProcessed = true;
  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
      "development" !== 'production' && state.warn(
        "v-once can only be used inside v-for that is keyed. "
      );
      return genElement(el, state)
    }
    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
  } else {
    return genStatic(el, state)
  }
}

function genIf (
  el,
  state,
  altGen,
  altEmpty
) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
}

function genIfConditions (
  conditions,
  state,
  altGen,
  altEmpty
) {
  if (!conditions.length) {
    return altEmpty || '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return altGen
      ? altGen(el, state)
      : el.once
        ? genOnce(el, state)
        : genElement(el, state)
  }
}

function genFor (
  el,
  state,
  altGen,
  altHelper
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if ("development" !== 'production' &&
    state.maybeComponent(el) &&
    el.tag !== 'slot' &&
    el.tag !== 'template' &&
    !el.key
  ) {
    state.warn(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + ((altGen || genElement)(el, state)) +
    '})'
}

function genData$2 (el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + (genProps(el.attrs)) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + (genProps(el.props)) + "},";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false, state.warn)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
  }
  // slot target
  // only for non-scoped slots
  if (el.slotTarget && !el.slotScope) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el.scopedSlots, state)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data
}

function genDirectives (el, state) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el, state) {
  var ast = el.children[0];
  if ("development" !== 'production' && (
    el.children.length !== 1 || ast.type !== 1
  )) {
    state.warn('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (
  slots,
  state
) {
  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
      return genScopedSlot(key, slots[key], state)
    }).join(',')) + "])")
}

function genScopedSlot (
  key,
  el,
  state
) {
  if (el.for && !el.forProcessed) {
    return genForScopedSlot(key, el, state)
  }
  var fn = "function(" + (String(el.slotScope)) + "){" +
    "return " + (el.tag === 'template'
      ? el.if
        ? ((el.if) + "?" + (genChildren(el, state) || 'undefined') + ":undefined")
        : genChildren(el, state) || 'undefined'
      : genElement(el, state)) + "}";
  return ("{key:" + key + ",fn:" + fn + "}")
}

function genForScopedSlot (
  key,
  el,
  state
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genScopedSlot(key, el, state)) +
    '})'
}

function genChildren (
  el,
  state,
  checkSkip,
  altGenElement,
  altGenNode
) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      return (altGenElement || genElement)(el$1, state)
    }
    var normalizationType = checkSkip
      ? getNormalizationType(children, state.maybeComponent)
      : 0;
    var gen = altGenNode || genNode;
    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (
  children,
  maybeComponent
) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function genNode (node, state) {
  if (node.type === 1) {
    return genElement(node, state)
  } if (node.type === 3 && node.isComment) {
    return genComment(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genComment (comment) {
  return ("_e(" + (JSON.stringify(comment.text)) + ")")
}

function genSlot (el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? ("," + children) : '');
  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (
  componentName,
  el,
  state
) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    /* istanbul ignore if */
    {
      res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
    }
  }
  return res.slice(0, -1)
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors
}

function checkNode (node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), errors);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), errors);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent (exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
    );
  }
  checkExpression(exp, text, errors);
}

function checkFor (node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier (
  ident,
  type,
  text,
  errors
) {
  if (typeof ident === 'string') {
    try {
      new Function(("var " + ident + "=_"));
    } catch (e) {
      errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
    }
  }
}

function checkExpression (exp, text, errors) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim())
      );
    } else {
      errors.push(
        "invalid expression: " + (e.message) + " in\n\n" +
        "    " + exp + "\n\n" +
        "  Raw expression: " + (text.trim()) + "\n"
      );
    }
  }
}

/*  */

function createFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompileToFunctionFn (compile) {
  var cache = Object.create(null);

  return function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = extend({}, options);
    var warn$$1 = options.warn || warn;
    delete options.warn;

    /* istanbul ignore if */
    if (true) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn$$1(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (cache[key]) {
      return cache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (true) {
      if (compiled.errors && compiled.errors.length) {
        warn$$1(
          "Error compiling template:\n\n" + template + "\n\n" +
          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
          vm
        );
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors)
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (true) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn$$1(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (cache[key] = res)
  }
}

/*  */

function createCompilerCreator (baseCompile) {
  return function createCompiler (baseOptions) {
    function compile (
      template,
      options
    ) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];
      finalOptions.warn = function (msg, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        // merge custom modules
        if (options.modules) {
          finalOptions.modules =
            (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(
            Object.create(baseOptions.directives || null),
            options.directives
          );
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      var compiled = baseCompile(template, finalOptions);
      if (true) {
        errors.push.apply(errors, detectErrors(compiled.ast));
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    }
  }
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  if (options.optimize !== false) {
    optimize(ast, options);
  }
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

// check whether current browser encodes a char inside attribute values
var div;
function getShouldDecode (href) {
  div = div || document.createElement('div');
  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
  return div.innerHTML.indexOf('&#10;') > 0
}

// #3663: IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
// #6828: chrome encodes content in a[href]
var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue.prototype.$mount;
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    "development" !== 'production' && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if ("development" !== 'production' && !template) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (true) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile end');
        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue.compile = compileToFunctions;

module.exports = Vue;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(46).setImmediate))

/***/ }),

/***/ 240:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__store_store__ = __webpack_require__(50);
window._ = __webpack_require__(11);

window.Vue = __webpack_require__(24);

/**
 * Next, we will create a fresh Vue application instance and attach it to
 * the page. Then, you may begin adding components to this application
 * or customize the JavaScript scaffolding to fit your unique needs.
 */

Vue.component('car-to-png-component', __webpack_require__(241));
Vue.component('wheel-to-png-component', __webpack_require__(246));



var isCarExists = document.querySelector('#car-to-png'),
    isLeftWheelExists = document.querySelector('#wheel-to-png');

if (isCarExists) {
    var app = new Vue({
        el: '#car-to-png',
        store: __WEBPACK_IMPORTED_MODULE_0__store_store__["a" /* default */],
        template: '    <div id="car-to-png-app-body">\n' + '        <car-to-png-component/>\n' + '    </div>'
    });
}

if (isLeftWheelExists) {
    var app_left_wheel = new Vue({
        el: '#wheel-to-png',
        store: __WEBPACK_IMPORTED_MODULE_0__store_store__["a" /* default */],
        template: '    <div id="car-to-png-app-body">\n' + '        <wheel-to-png-component/>\n' + '    </div>'
    });
}

/***/ }),

/***/ 241:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(242)
}
var normalizeComponent = __webpack_require__(17)
/* script */
var __vue_script__ = __webpack_require__(244)
/* template */
var __vue_template__ = __webpack_require__(245)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\assets\\js\\components\\Car2PngComponent.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6bd97949", Component.options)
  } else {
    hotAPI.reload("data-v-6bd97949", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 242:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(243);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(35)("8732fc0e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6bd97949\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Car2PngComponent.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6bd97949\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Car2PngComponent.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 243:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(34)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ 244:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    name: 'car-2-png-component',
    data: function data() {
        return {
            bodyBaseColor: '000000',
            bodyFillColor: '000000',
            bodyColorRange: [],
            progress: 0,
            canvas: null,
            canvasContext: null
        };
    },
    mounted: function mounted() {
        var that = this;

        var colorInput = document.querySelector('input[name="value_16"]');
        colorInput.addEventListener('change', function () {
            if (colorInput.value != '') {
                that.progress = 0;
                that.bodyFillColor = colorInput.value.replace('#', '');
            }
        });

        window.onload = function () {
            that.bodyFillColor = colorInput.value.replace('#', '');
        };
    },
    computed: {
        isSelfReady: function isSelfReady() {
            return this.bodyFillColor !== null;
        },
        carBodyColor: function carBodyColor() {
            var that = this;
            return that.bodyFillColor;
        }
    },
    watch: {
        isSelfReady: function isSelfReady(val) {
            var that = this;
            if (val) {
                console.log('isSelfReady');
            }
        },
        carBodyColor: function carBodyColor(val) {
            var that = this;
            console.log('carBodyColor changed', val);
            if (typeof val !== 'undefined') {}
        }
    },
    updated: function updated() {
        var that = this;
        that.$nextTick(function () {
            // Code that will run only after the
            // entire view has been re-rendered
            // Ждем пока перекрасится картинка
            console.log('Painting Done', that.progress);
            that.makePng();
        });
    },
    methods: {
        /**
         * Converts an RGB color value to HSL. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes r, g, and b are contained in the set [0, 255] and
         * returns h, s, and l in the set [0, 1].
         *
         * @param   Number  r       The red color value
         * @param   Number  g       The green color value
         * @param   Number  b       The blue color value
         * @return  Array           The HSL representation
         */
        rgbToHsl: function rgbToHsl(r, g, b) {
            r /= 255, g /= 255, b /= 255;
            var max = Math.max(r, g, b),
                min = Math.min(r, g, b);
            var h,
                s,
                l = (max + min) / 2;

            if (max == min) {
                h = s = 0; // achromatic
            } else {
                var d = max - min;
                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                switch (max) {
                    case r:
                        h = (g - b) / d + (g < b ? 6 : 0);
                        break;
                    case g:
                        h = (b - r) / d + 2;
                        break;
                    case b:
                        h = (r - g) / d + 4;
                        break;
                }
                h /= 6;
            }

            return [h, s, l];
        },
        /**
         * Converts an HSL color value to RGB. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes h, s, and l are contained in the set [0, 1] and
         * returns r, g, and b in the set [0, 255].
         *
         * @param   Number  h       The hue
         * @param   Number  s       The saturation
         * @param   Number  l       The lightness
         * @return  Array           The RGB representation
         */
        hslToRgb: function hslToRgb(h, s, l) {
            var r, g, b;

            if (s == 0) {
                r = g = b = l; // achromatic
            } else {
                var hue2rgb = function hue2rgb(p, q, t) {
                    if (t < 0) t += 1;
                    if (t > 1) t -= 1;
                    if (t < 1 / 6) return p + (q - p) * 6 * t;
                    if (t < 1 / 2) return q;
                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                    return p;
                };

                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                var p = 2 * l - q;
                r = hue2rgb(p, q, h + 1 / 3);
                g = hue2rgb(p, q, h);
                b = hue2rgb(p, q, h - 1 / 3);
            }

            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];
        },
        hexToRgbArr: function hexToRgbArr(hex) {
            var c;
            if (/([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
                c = hex.split('');
                if (c.length == 3) {
                    c = [c[0], c[0], c[1], c[1], c[2], c[2]];
                }

                //                    var cs = _.chunk(c, 2);
                //                    console.log('c', c);
                //                    return [parseInt(cs[0], 16), parseInt(cs[1], 16), parseInt(cs[2], 16)];
                c = '0x' + c.join('');
                return [c >> 16 & 255, c >> 8 & 255, c & 255];
            }
            throw new Error('Bad Hex ' + hex);
        },
        intToHex: function intToHex(num) {
            var hex = num.toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        },
        rgbToHex: function rgbToHex(r, g, b) {
            return "#" + this.intToHex(r) + this.intToHex(g) + this.intToHex(b);
        },
        setCacheColor: function setCacheColor(base, selected, rendered) {
            localStorage.setItem(base + '_' + selected, rendered);
            return rendered;
        },
        getCachedColor: function getCachedColor(base, selected) {
            var rendered = localStorage.getItem(base + '_' + selected);
            //console.log('rendered', rendered);
            return rendered !== null ? rendered : false;
        },
        bodyColorRecalc: function bodyColorRecalc(color) {
            var that = this;
            var rendered = false;
            if (this.bodyFillColor == null) {
                return color;
            }
            if (!(rendered = this.getCachedColor(color, this.bodyFillColor))) {
                if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.indexOf(this.bodyColorRange, color) < 0) {
                    var sortIndex = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.sortedIndex(this.bodyColorRange, color);
                    var leftPart = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.take(this.bodyColorRange, sortIndex);
                    var rightPart = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.slice(this.bodyColorRange, sortIndex, this.bodyColorRange.length);
                    leftPart.push(color);
                    this.bodyColorRange = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.union(leftPart, rightPart);
                }

                var currBodyColor = this.hexToRgbArr(color);
                var fillBodyColor = this.hexToRgbArr(this.bodyFillColor);

                var curr_hsl = this.rgbToHsl(currBodyColor[0], currBodyColor[1], currBodyColor[2]);
                var fill_hsl = this.rgbToHsl(fillBodyColor[0], fillBodyColor[1], fillBodyColor[2]);

                if (fillBodyColor[0] == fillBodyColor[1] && fillBodyColor[0] == fillBodyColor[2]) {
                    var L = 0.2126 * (currBodyColor[0] + fillBodyColor[0]) / 2 + 0.7152 * (currBodyColor[1] + fillBodyColor[1]) / 2 + 0.0722 * (currBodyColor[2] + fillBodyColor[2]) / 2;
                    fill_hsl[2] = L / 180;
                } else {
                    fill_hsl[2] = curr_hsl[2] + 0.18;
                }

                var idx = this.hslToRgb(fill_hsl[0], fill_hsl[1], fill_hsl[2]);

                rendered = 'rgb(' + idx.join(',') + ')'; //this.rgbToHex(idx[0], idx[1], idx[2]);

                this.setCacheColor(color, this.bodyFillColor, rendered);
            }
            return rendered;
        },
        makePng: function makePng() {
            var that = this;
            var svg = '',
                carSvg = document.querySelector('#car-svg'),
                carContainer = document.querySelector('#car-container');
            if (carSvg) {
                if (typeof window.XMLSerializer != "undefined") {
                    var xml = new XMLSerializer().serializeToString(carSvg);
                } else if (typeof carSvg.xml != "undefined") {
                    var xml = carSvg.xml;
                }

                that.canvas = document.createElement("canvas");
                that.canvas.setAttribute('id', 'output-canvas');
                that.canvasContext = that.canvas.getContext("2d");
                that.canvas.setAttribute('width', 2244);
                that.canvas.setAttribute('height', 827);
                carContainer.appendChild(that.canvas);

                that.canvas.height = carSvg.getAttribute('height');
                that.canvas.width = carSvg.getAttribute('width');
                canvg(that.canvas, xml);

                var canvasdata = that.canvas.toDataURL("image/png"); //.replace("image/png", "image/octet-stream");

                var body_render_img = document.querySelector('input[name="body_render_img"]');
                body_render_img.value = canvasdata;
                that.canvas.parentNode.removeChild(that.canvas);

                //                    var image = document.querySelector('#b64');
                //                    if (!image) {
                //                        image = new Image;
                //                        image.setAttribute('id', 'b64');
                //                        image.setAttribute('width', 2244);
                //                        image.setAttribute('height', 827);
                //                        image.setAttribute('crossOrigin', 'anonymous'); // This enables CORS
                //                        image.onload = function () {
                //
                //                            that.canvasContext.drawImage(image, 0, 0, 2244, 827);
                //
                //                            console.log('image', image);
                //


                //                            var a = document.createElement("a");
                //                            var i = new Image;
                //                            i.setAttribute('src', canvasdata);
                //                            a.appendChild(i);
                //                            a.download = "export_" + Date.now() + ".png";
                //                            a.href = canvasdata;
                //                            carSvg.parentNode.appendChild(a);
                //                            that.canvas.parentNode.removeChild(that.canvas);
                //                        };
                //                        //carSvg.parentNode.appendChild(image);
                //                    }
                //
                //                    image.setAttribute('src', b64);
                //                    that.canvasContext.drawImage(image, 0, 0, 2244, 827);
            }
        }
    }
});

/***/ }),

/***/ 245:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "car", attrs: { id: "car-container" } }, [
    _c(
      "svg",
      {
        attrs: {
          viewBox: "0 0 2244 827",
          width: "2244",
          height: "827",
          id: "car-svg"
        }
      },
      [
        _c("g", { attrs: { id: "allcar" } }, [
          _c("g", { attrs: { id: "body" } }, [
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D343F"),
                d:
                  "M239,623c-0.3,2.8-2.6,2.1-4.2,2.1c-9.2,0.1-18.5,0-27.7-0.1c-2-1.8-4.9,0-6.9-1.7\n                        c-1.3-6.2-2-6.4-8.2-2.9c-1.5,0.9-8.7-2-8.9-3.6c-0.1-1,0.7-1.4,1.4-1.8c3.6-1.9,7.8-2.8,9.2-7.5c0.4-1.4,1.9-0.8,3-0.4\n                        c4.5,1.6,8.2,1.1,11.2-3.3c1.7-2.5,4.2-2.6,7.5-2c4.8,0.9,8.3,3.2,11.1,6.8c2,2.6,3.7-2.4,5.6,0c0.3,0.4,0.5,0.9,0.6,1.4\n                        c0.1,1.9,1.5,3.3,2.2,4.9c1.6,3.5,0.7,5-3.2,5c-5.3,0.1-10.6,0.4-15.9-0.6c5.4,0.9,10.9,0.6,16.4,0.7c2.7,0,4.6-0.4,4.3-3.8\n                        c-0.1-1.7,0.2-3.4,2.6-3.4c0.6,0.7,0.8,1.5,0.8,2.3C240,617.9,240.2,620.5,239,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3E0DC"),
                d:
                  "M2083.1,429.1c-0.9,7.6,2.5,14.6,3.4,22c0.2,1.3,0.3,2.6,0.5,3.9c-2,0.6-0.9,1.8-0.6,2.8\n                        c0.7,2.5,0.6,4.6-2.2,5.7c-3.5-0.2-4.5-3.2-6.1-5.4c-0.8-1.1-1.8-2-2.4-3.2c0.3-4.7-4.8-6.2-6-9.9c-0.8-3.9-0.7-8.1-5.6-10\n                        c-1.7-0.7-2.4-3.4-3.1-5.5c-0.8-5,0.3-5.8,7.2-5.1c0.7,0-0.2-0.7,0-0.1c0.1,0.2-0.1,0.3-0.4,0.2c-1.5-0.4-3-0.3-4.4-0.6\n                        c-1.5-0.3-2.3-1.3-1.6-2.9c0.4-1,1.7-1,2.1-2c-1.7,1.7-4.1-2-5.7,0.8c-0.7,0.2-1.4,0.1-2-0.2c-0.8-0.4-0.2-2.6-2.1-1.5\n                        c-1.8,0-3.1-0.6-3.5-2.5c0.4-3.1-2.6-2.3-3.9-3.4c-1.3-1-4.4-0.3-3.5-3.5c1.2-0.7,2.4-0.7,3.6-0.4c8.2,2.9,16.5,5.2,24.8,7.9\n                        c3.5,1.6,5.7,4.6,7.9,7.5c1.1,1.8,1.6,3.8,1.7,5.9c0.2,0.6,0.1,1.2,0.5,1.7c-0.3-1-0.5-2,0.9-2.4\n                        C2082.8,428.9,2083,429,2083.1,429.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2D31"),
                d:
                  "M1241,192.1c6.3,4.3,13.1,7.7,19.8,11.3c17.3,9.5,34.3,19.4,51.2,29.6c0.7,0.6,1.8,1.1,0.8,2.3\n                        c-2.6,0.7-4.5-0.9-6.4-2.1c-20.6-12.6-41.5-24.5-62.8-35.8c-3.7-2-6.7-5.7-11.6-5.1c-0.8,0-1.3-0.4-1.9-0.9\n                        c-2.5-2.8-5.8-4.3-9-6c-5.4-2.9-11-5.5-16.3-8.5c-1.6-0.9-3.4-1.2-5.3-1.1c-4.6-0.6-8.3-3.4-12.3-5.4\n                        c-4.7-2.2-9.3-4.6-14.1-6.5c-1.4-0.8-2.9-1.5-4.3-2.2c-1.4-0.7-2.9-1.5-4.4-2c-4.7-1.6-8.8-4.4-13.5-5.9\n                        c-3.2-1.4-6.5-2.7-9.8-4c-1.5-0.7-3-1.4-4.5-2c-3.5-1.3-7.1-2.6-10.6-4c-1.7-0.8-3.5-1.5-5.3-2.1c-4.4-1.6-8.7-3.4-13.2-4.7\n                        c-5.2-1.9-10.5-3.5-15.8-5.2c-3.7-1.5-7.7-2.1-11.4-3.5c-1.7-0.7-3.6-0.8-4.6-2.7c1.2-2,2.8-1.1,4.3-0.7\n                        c7.6,0.9,14.5,4.3,21.8,6.2c5.8,1.6,11.5,3.5,17.1,5.8c0.6,0.1,1.1,0.2,1.7,0.2c15.1,5.1,29.6,11.8,44.3,17.8\n                        c18,7.4,35.4,15.9,52.7,24.6C1225.5,183.7,1233.4,187.7,1241,192.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B39F9D"),
                d:
                  "M1589,270.9c15.7-0.3,31.2,1.5,46.8,2.5c15.4,1,30.8,2.9,46.2,4.5c23.5,2.4,47,4.6,70.4,7.4\n                        c22.6,2.6,45.2,5.8,67.8,8.8c1,0.1,1.9,0.5,2.8,0.8c0.3,0.6,0.2,1.1-0.3,1.5c-6.6,0.7-13-0.9-19.5-1.3\n                        c-2.5-0.9-5.1-0.5-7.6-0.6c-13.7-2.6-27.7-3.3-41.5-5.5c-13.8-2.2-27.7-2.9-41.5-4.6c-9.6-1.2-19.2-1.7-28.8-1.9\n                        c-10.6-2.2-21.4-2.5-32.1-3.8c-17.1-2.1-34.3-4-51.6-4.1c-2.8,0-5.6-0.9-8.4-1.1C1590.4,273.1,1588.9,272.9,1589,270.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24F56"),
                d:
                  "M1341,658.8c-16.5,0.7-32.9-0.9-49.4-0.6c-66.7,1.1-133.4,0.4-200.1,0.9c-1.8,0-3.6-0.1-5.5-0.2\n                        c0.9-3.3,3.7-2.2,5.8-2.3c12.3-0.1,24.5-0.1,36.8-0.1c2.1,0,4.3,0.2,6.4-0.4c4.4-0.4,8.8-1,13.2-0.3c1.9,0.6,3.9,0.9,5.9,0.3\n                        c0.8-0.1,1.6-0.1,2.3,0c2.8,0.8,5.4,0.1,8.1-0.6c38.4-0.5,76.8-0.5,115.1-0.2c13,0.1,25.9,0,38.9,0c7.8,0.1,15.6-0.8,23.4,0.5\n                        C1344.7,658,1342.3,658.2,1341,658.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("947474"),
                d:
                  "M1589,270.9c3.8,1.6,8,1.8,12,2c18.6,0.5,37,2.5,55.4,4.8c9.2,1.2,18.4,1.6,27.6,3.3\n                        c0.3,0.6,0.2,1.1-0.3,1.5c-6.4,2.4-12.8-0.1-19.2-0.4c-17.7-0.8-35.2-4.1-53-4.6c-11.7-0.4-23.4-2-35.2-2.2\n                        c-12.4-0.2-24.4,1.8-36.5,4.2c-4.6,1.3-9.4,2-14.1,2.7c-2.6,0.4-5.7,1.2-7.8-1.6c1.1-2.3,3.5-1.5,5.3-2.1\n                        c0.5-0.1,0.9-0.1,1.4-0.2c3.2-0.2,6.4-0.8,9.4-2.1c0.5-0.2,1-0.3,1.4-0.5c9.2-2.9,19-1.9,28.3-4.2c0.8-0.2,1.7,0.1,2.3-0.6\n                        C1573.7,268.8,1581.3,270.3,1589,270.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58171F"),
                d:
                  "M736,105.1c15.5-2.3,31.1-2.9,46.7-3.9c39.7-2.7,79.5-2.5,119.3-2.1c5,0.1,10,0.6,14.9,1\n                        c-0.4,2.6-2.6,2.1-4.3,2.2c-3,0.2-6,0.1-9,0.1c-23.9,0-47.8-0.4-71.7,0.2c-12.5,0.3-25.1,0.6-37.7,1.8\n                        c-14.2,0.3-28.3,1.7-42.5,2.9c-3.5,0.3-6.9,0.1-10.4,0.2C739.6,106.9,736.9,108.2,736,105.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("816463"),
                d:
                  "M166.9,630.2c-11-6.4-21.4-13.8-31.8-21c-1.6-1.1-3.3-2.2-4.9-3.3c-2.9-1.8-5.7-3.7-8.1-6.1\n                        c-5.9-5.6-11.9-11.1-17.5-16.9c-6.9-7.2-9.9-15.9-9.6-25.9c-0.8-6.4-2-12.7-3.2-19c-0.8-4.2,0.1-8.3,1.3-12.3\n                        c1.1-3.5,1.6-7.1,1.4-10.8c1.4-2.5,2-0.3,2.9,0.5c0.9,1.6,0.8,3.5,1.2,5.2c0.1,0.5,0.1,1,0,1.5c-0.3,1.5-0.4,2.9-0.6,4.4\n                        c-0.1,0.5-0.2,1-0.3,1.5c-0.5,7.6-0.7,15.2,2,22.5c0.6,1.6,0.7,3.2,0.7,4.9c-0.2,1.9,0.6,3.6,0.8,5.4c0.3,2.5-0.2,5,0.5,7.4\n                        c0.2,0.7,0.3,1.4,0.5,2.1c0.1,0.4,0.2,0.9,0.3,1.4c1.5,4.7,5.2,8,7.1,12.5c0.7,0.9,1.5,1.7,2.4,2.4\n                        c16,14.5,33.8,26.6,51.7,38.7C165,626.7,167.8,627.3,166.9,630.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D5058"),
                d:
                  "M1737.9,443.1c-16.1-7.8-32.9-13.5-50.3-17.1c-15.7-3.3-31.6-3.8-47.5-3.5c-16.7,0.3-33,3.3-49.1,7.5\n                        c-1.5,0.8-3.1,0.5-4.7,0.3c-1.2-2.6,1.3-2.3,2.4-3.1c0.7-0.3,1.5-0.5,2.3-0.6c2.3-0.5,4.6-1,6.8-2.1c16.3-3.8,32.7-6.3,49.4-6\n                        c5.1,0.2,10.1-0.3,15.2,0.3c2.2,0.7,4.5,0.8,6.8,0.9c8.4,1.5,17.1,1.9,25.4,4.2c4.3,1.3,8.7,2,12.9,3.6\n                        c4.6,1.5,9.3,2.5,13.7,4.5c4.4,2,9,3.4,13.2,5.8c1.7,1,3.7,1.7,4.2,4C1738.5,442.3,1738.3,442.7,1737.9,443.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D5358"),
                d:
                  "M1039.3,659.2c-3,1.3-6.1,1.4-9.3,1.4c-39.5,0.3-79.1,0.5-118.6,0.6c-0.8,0-1.6-0.2-2.5-0.2\n                        c-3.3-1-6.6-0.4-9.9-0.4c-14-0.1-28,0-42-0.1c-2.3,0-4.6,0.2-6.9,0.8c-6.4-0.2-12.9,1.4-19.1-1.1c0.2-3,2.6-2.5,4.4-2.6\n                        c4.2-0.4,8.5,0.2,12.8,0c40.3,0.1,80.5-0.3,120.8-0.2c2,0,4-0.1,6,0.2c19.1,0.1,38.2,0,57.3,0.1\n                        C1034.7,657.6,1037.3,657,1039.3,659.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89444B"),
                d:
                  "M1039.3,659.2c-21.4-0.1-42.9-0.2-64.3-0.3c-0.9-2.5,1-2.8,2.6-3.1c2-0.4,4-0.2,6-0.2\n                        c38.9,0,77.7,0,116.6,0c9.9,0.1,19.9-0.1,29.8,0c2.1,0,4.4-0.4,6.1,1.4c-1.5,1.6-3.4,1-5.1,1c-13.2,0.1-26.4,0-39.6,0.1\n                        c-1.7,0-3.7-0.6-5.2,0.9C1070.5,659,1054.9,659.1,1039.3,659.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3945"),
                d:
                  "M1487,511.9c-0.3,0.7-0.7,1.4-1,2c-1.4,1.7-1.9,3.9-3.1,5.8c-4,10-8.5,19.9-11.6,30.3\n                        c-1.3,1.2-0.5,3.9-3.1,4c-0.8,0.1-1.6,0.1-2.4,0c-3.8-1.6-3.9-4.7-2.4-7.6c1.3-2.6,2.4-5.4,4.2-7.7c1.8-0.9,2.8-2,2.3-4.3\n                        c-1-4.6,1.1-8.7,2.5-12.9c0.6-2,2.3-3.2,4.4-3.7c2.3-0.5,3.2-2.1,4-4c0.4-0.9,0.9-1.8,1.6-2.6c1-1.1,2.1-1.4,3.5-1.1\n                        C1486.5,510.5,1487.1,510.9,1487,511.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1EDED"),
                d:
                  "M152,280c5.9-3.1,12.5-3.9,18.9-5c10.3-1.8,20.9-1.7,31.1-4.9c6.8-2.1,14.2-2.5,21.2-4.5\n                        c11.3-3.3,22.3-7.5,32.9-12.6c1.9-0.9,3.7-2.3,6.1-1.9c-0.1,2.4-2.2,2.7-3.7,3.6c-5,2.7-10.4,4.6-15.4,7.2\n                        c-7.1,2.4-14,5.2-21,8c-1.5,0.5-3,0.7-4.5,1.3c-8.8,1.7-17.5,4-26.3,5.3c-9.5-0.9-18,2.7-26.6,5.7\n                        C160.2,282,155.7,283.9,152,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0EBEC"),
                d:
                  "M2000,643l-0.5,0l-0.5,0c-11.9,1.1-23.7,2.9-35.7,3.5c-0.8,0-1.7,0-2.3,0.5l0,0\n                        c-13.5,1-26.6,4.9-40.2,4.9c-2.8,0-6.1,0.5-8-2.7c0.7-1.2,1.9-1.4,3.1-1.6c9.8,0.5,19.4-0.5,28.7-3.5c2.1-0.7,4.2-0.5,6.4-0.6\n                        c11.2-0.4,22.4-1.8,33.5-3.5c2.8-0.4,5.6-0.5,8.4-0.6c8.8-0.3,17.4-1.7,26-3.4c3.2-0.8,6.5-0.4,9.7-0.5c1.7,0.1,3.5-0.1,5,0.8\n                        c1.5,3.2-2.1,1.3-2.6,2.5c-0.7,0-1.3,0-2,0c-8.9,2.1-18.2,2.4-27.1,4.4C2001.2,643.6,2000.6,643.4,2000,643z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9555A"),
                d:
                  "M1585.9,430c1.7,0,3.4,0.1,5,0.1c-10.4,3.3-20.5,7.6-30.3,12.3c-20.4,9.7-37.2,24.1-52.3,40.6\n                        c-1.3,1.5-2.8,2.8-4.2,4.3c-0.8-0.1-1.3-0.6-1.6-1.3c-0.6-3.2,2.2-4.5,3.9-6.5c1.2-1.4,2.6-2.6,3.8-3.9\n                        c2.3-2.8,5.3-4.8,7.7-7.6c0.3-0.3,0.6-0.6,1-1c1.9-1.6,4.1-2.8,5.7-4.8c4.2-4.3,9.4-7.3,14-11.1c3-2.2,6.4-3.9,9.4-6.1\n                        c10.7-6.4,21.9-11.6,33.9-15.2c0.9-0.3,1.8-0.5,2.8-0.6C1585.2,429.4,1585.6,429.6,1585.9,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("865359"),
                d:
                  "M310,467.1c0,1.1-0.7,1.8-1.6,2.3c-18.3,11.9-32.7,27.6-44,46.1c-4.1,6.7-7,14.2-10.5,21.4\n                        c-1.8-0.7-2-2.2-2.1-3.8c0-0.5,0.1-1,0.2-1.5c3.1-7.1,6.4-14.1,10.9-20.4c5.8-8.3,11.4-16.8,18.4-24.2\n                        c4.4-4.8,9.5-8.9,14.1-13.4c0.7-0.6,1.5-1.2,2.2-1.8c2.3-1.8,4.6-3.6,7-5.2c1.6-1.1,3.3-2.3,5.4-1\n                        C310.4,466.3,310.4,466.7,310,467.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8E4E4"),
                d:
                  "M95,514c0.5,5.2,0.3,10.3-1.3,15.3c-1.1,3.2-0.9,6.5-0.2,9.9c1.2,5.9,2,11.8,1.5,17.8\n                        c-2.6-9.8-7.2-19.3-4-29.9c0.4-1.3,0.7-2.6,1.3-3.7c2.4-3.8,2-7.5-0.2-11.3c-8.6-14.9-7.6-30.4-2.3-46\n                        c1.3-3.9,4.8-6.8,5.2-11.1c1.2-2.1,1.2-4.9,3.8-6.2c1,0.6,1.1,1.5,1,2.5c-0.1,0.5-0.2,0.9-0.4,1.4c-1,2.1-2.1,4.3-2.9,6.6\n                        c-5.6,10.4-7.4,21.5-7.3,33.2c0.1,6.6,1.5,12.5,5.2,17.9C95,511.4,95.7,512.6,95,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63C4B"),
                d:
                  "M1462.9,645c0.1,0.6,0.1,1.2,0.2,1.8c0.7,1.4,0.4,2.9,0.4,4.3c-0.1,5.6-0.8,6.5-6.9,7.9\n                        c-6.1-1.3-12.2-0.5-18.3-0.5c-6.1,0-12.2-0.6-18.3,0.4c-0.7,0-1.3,0-2,0c-2.7-1-5.4-0.2-8.1-0.5c-1-0.1-2.6,0.2-1.6-1.8\n                        c6.6-2.2,13.4-0.6,20-1.1c3.4-0.3,6.9,0.4,10.2-1.1c5.2-1.4,10.6-0.5,15.8-0.7c4.8-0.2,4.9-0.5,3.9-5.3\n                        c-1.2-5.8-0.5-11.9-1.9-17.7c-0.5-2.2,1.1-4.4,2.3-6.5c1.6-2,0.7-4.7,2-6.8c0.4-0.5,0.9-0.6,1.4-0.4c1.1,2.7,0.3,5.5,0.5,8.3\n                        c0,2.6,0,5.2,0,7.7C1462.7,637,1462,641,1462.9,645z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E424C"),
                d:
                  "M310,467.1c0-0.4,0-0.8-0.1-1.2c-1.2-3,1.4-3.8,3.1-4.7c9.9-6,20.4-10.9,31.5-14.5\n                        c2.2-0.6,4.4-0.9,6.5-1.8c4.5-1.2,9-2.5,13.7-2.5c1,0.6,1.7,1.3,1.2,2.6c-3.7,1.2-7.4,2.5-11.1,3.7c-7.6,1.9-14.7,5.3-22.1,8\n                        l0,0c-4,2.1-8.1,4-12.1,6.1C317.1,464,314,466.7,310,467.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46063"),
                d:
                  "M853.2,661.2c-2.1,1.8-4.7,1.5-7.1,1.4c-20.4-0.2-40.9-0.7-61.3-0.4c-22.6,0.4-45.2,0.4-67.7,0.6\n                        c0.9-2.9,3.4-2.1,5.4-2.2c5.6-0.4,11.3,0.7,16.8-0.8c7.6-0.8,15.3-0.4,23-0.3c29.1,0.2,58.2-0.4,87.3,1\n                        C850.8,660.7,852.1,660.1,853.2,661.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C4850"),
                d:
                  "M335,216.9c11.7-6.2,23.8-11.5,36.1-16.6c6.3-0.6,11-5.3,16.9-6.8c1.6-0.4,2.9-1.8,4.7-1.2\n                        c1.7,1.2,2.3,2.1-0.2,3.5c-2.4,1.3-5,2.4-6.2,5.2c-0.4,0.3-0.8,0.5-1.2,0.6c-4.1-1.7-6.7,0.6-9.3,3.3\n                        c-0.3,0.3-0.7,0.5-1.1,0.7c-1.9,0.5-4,0.5-5.7,1.9c-0.6,0.3-1.3,0.5-2,0.6c-3.7,0.3-6.8,2.5-10.1,3.7\n                        c-1.7,0.4-3.5,0.2-4.9,1.3c-0.4,0.2-0.8,0.4-1.1,0.6c-1.5,0.4-2.7,1.3-4,2c-0.6,0.3-1.3,0.5-1.9,0.7c-3.1,1.4-6.3,2.5-9.8,1.8\n                        c-0.3-0.3-0.3-0.6-0.3-0.9C334.8,217.1,334.9,216.9,335,216.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE424C"),
                d:
                  "M638.5,649.1c-5.8-1.4-11.5-3.8-17.5-4.3c-0.4-1,0-1.8,0.4-2.7c0.5-0.8,1.2-1.5,2.1-1.9\n                        c1.9-0.5,3.8-0.9,5.7-1.6c1.6-0.6,3.8-0.7,4.5,0.9c1.7,4.1,5,4.3,8.6,4.4c0.8,0,1.6,0.4,2.3,0.9c0.8,0.8,1.5,2.2,2.6,2.2\n                        c7.2-0.1,12,6,18.6,7.2c1.6,1.7,5.4,0.8,5.7,4.3c-0.2,0.5-0.5,0.9-1,1.2c-4.2,1.4-7.6-0.9-11.4-2.2\n                        C652.1,654.9,645.7,651,638.5,649.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A5A5C"),
                d:
                  "M638.5,649.1c2.5-0.2,4.7,0.1,7,1.5c5.6,3.7,12.4,4.5,18.2,7.9c1.9,1.1,4.8,0.4,7.3,0.5\n                        c11,1.3,22,0.1,32.9,0.5c9.5,0.3,19-0.2,28.5-0.1c2.3,0,4.7-0.3,6.6,1.5c-3.5,2.1-7.3,0.5-10.9,1c-3.7,0.5-7.5-1-11,0.9\n                        c-14.1,0-28.3,0.3-42.4,0c-9.9-0.2-18.3-5.8-27.2-9.4C644.4,652.3,641.5,650.6,638.5,649.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EFEAEA"),
                d:
                  "M1460.8,281.1c5.5,0,11-0.1,16.4-0.2c0.3,0,4.4,1.8,1.5-1.7c0.7-0.4,1.3-0.9,2-1.3\n                        c2.2-1,4.5-1.2,6.8-0.9c10.3,1.1,20.4-1.7,30.6-2.1c3-0.1,5.6-3.5,8.9-1.2c-0.4,1.7-1.7,2.2-3.1,2.6\n                        c-10.5,2.1-20.6,5.9-31.5,6c-4,0-8,0.2-11.8,1.4c-1.1,0.3-2.2,0.4-3.3,0.5c-0.5,0-1.1,0.1-1.6,0c-1.3,0-2.7,0-4,0\n                        c-3.4-0.9-7-0.5-10.4-1.7C1460.8,282.2,1460.7,281.7,1460.8,281.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4DBDC"),
                d:
                  "M1217.7,180.1c-8.5-2.9-16.1-7.9-24.2-11.6c-22.4-10.3-44.9-20-67.9-28.9c-1.7-0.7-3.2-1.6-4.9-2.4\n                        c6.7-0.3,12,3.6,17.7,5.9c20.1,7.9,39.9,16.4,59.5,25.5c7.5,3.5,14.8,7.6,22.1,11.4C1219.4,180.7,1218.5,180.5,1217.7,180.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3D4D"),
                d:
                  "M565,636c-1-7.6-2-15.2-3-22.8c-0.4-11.6-4.8-22.4-6-33.8c-0.1-1.6-0.5-3.8,1.4-4.2\n                        c1.7-0.3,1.7,2,2.3,3.2c-0.1,6.6,3.4,12.2,5.5,18.2c0.4,7.9,3.5,15.6,1.6,23.6c-0.4,1.8,0.8,3.5,1.5,5.2\n                        c1.1,2.5,1.5,5.1,0.2,7.7C567.4,634.2,567.1,636.2,565,636z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("683436"),
                d:
                  "M440,171.1c15.4-6.9,31.3-12.5,47.3-18c10.5-3.6,20.9-7.5,31.7-10c0.8,0.5,2.1,0.1,2.2,1.5\n                        c-3.6,3.4-8.7,3.3-12.9,5.2c-0.5,0.2-0.9,0.4-1.4,0.5c-14.7,4.1-28.8,9.8-43.1,14.8c-4.1,1.6-8.4,2.7-12.3,4.5\n                        c-1.3,0.5-2.7,0.9-4,1.5c-2.1,0.7-4,1.8-6.3,1.5C440.3,172.4,439.8,172,440,171.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2093,487c-0.1,7.8,3,15.3,2.9,23.1c-0.1,17.7-1.9,35.1-10.1,51.3c-1.6,3.1-1.7,6.8-3.8,9.6\n                        c-2.3-3.2-0.4-6.5,0.2-9.5c0.6-3.2,1.8-6.4,3.5-9.3c7.4-12.9,7.7-26.8,6.3-41c-0.6-3.7-1.2-7.4-2-11.1\n                        c-0.3-4.1-2.5-7.9-1.8-12.2C2089.4,485.4,2091.4,487.4,2093,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F4A"),
                d:
                  "M1822.8,536.3c-3.2-6.4-6.1-12.8-9.5-19.1c-7.4-13.6-16.3-26.1-27.1-37.3c-1.8-1.9-3.5-4-5.2-6\n                        c0.9-1.9,2.2-1.2,3.6-0.6c4.8,3,7.5,7.9,11.1,12c2.4,2.8,4.3,5.9,6.6,8.7c2.6,3.1,4.4,6.8,7,9.9c0.5,0.5,0.9,1,1.3,1.5\n                        c0.9,1,1.8,2,2.2,3.3c0.5,2.6,2.2,4.6,3.7,6.8c0.3,0.4,0.5,0.8,0.7,1.2c1.5,3.8,4.2,7.1,5.7,10.9c0.3,0.9,0.7,1.8,1,2.7\n                        C1824.4,532.5,1825.8,534.8,1822.8,536.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BBA6A3"),
                d:
                  "M1910,310.8c12.6,1.8,24.5,6,36.8,9.1c21.7,5.5,42.9,12.4,63.2,21.6c0.7,0.3,1.4,0.9,2.1,1.3\n                        c-3.1,2.2-5.9-0.7-8.8-0.7c-1-0.2-1.9-0.6-2.7-1.2c-1.4-1.3-3.1-1.9-5-2.1c-1.2-0.2-2.4-0.8-3.4-1.4\n                        c-11.4-6.1-23.9-8.9-36.2-12.3c-9.1-2.6-18-5.7-27.5-7c-1,0-2-0.2-2.9-0.4c-2.2-0.7-4.3-1.5-6.6-1.9c-0.4-0.1-0.9-0.2-1.3-0.4\n                        c-1.8-0.7-3.7-1.2-5.6-1.6c-0.4-0.1-0.8-0.3-1.2-0.5c-0.6-0.4-1-0.8-1.2-1.5C1909.6,311.6,1909.7,311.2,1910,310.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA2A38"),
                d:
                  "M1822.8,536.3c1.8-2.1-0.1-4.2,0.2-6.3c-0.5-1.2,0.6-1.8,1.2-1.4c3.8,2.6,7,0,10.2-1.2\n                        c3.8-1.4,4.8-5.9,8.4-7.6c-0.2-0.3-0.3-0.6-0.3-0.9c-0.3-1,1.7-1.4,0.4-2.9c-1.1-1.2-0.2-2.5,1.6-2.6c0.7,0.1,1.3,0.5,1.9,0.9\n                        c1.4,1.3,2.5,2.8,3.2,4.7c0.2,0.7,0.1,1.4-0.1,2.1c-2.1,5.2-7.2,7.5-10.9,11c-2.1,2-4.5,3.8-6.8,5.6c-1.6,1.2-2.4,3.5-4.8,3.5\n                        c-1.5-1.3-2.4-3.1-3.9-4.4C1822.8,536.7,1822.7,536.6,1822.8,536.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C2125"),
                d:
                  "M559,132.1c17.4-4.9,35.3-7.9,53.1-11.1c5.6-1,11.3-1.9,16.9-2.9c1.3,0.2,2.5,0.3,1.9,2.2\n                        c-1,0.8-2.2,1.2-3.4,1.6c-1,0.3-2,0.5-3.1,0.5c-16.4,3.2-33,5.6-49.3,9.5c-4.1,0.8-8,2.3-12.2,2.4\n                        C561.4,134,559.4,134.6,559,132.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942835"),
                d:
                  "M1784,474c-1-0.5-2-0.7-2.9,0c-2.8-2.6-5.5-5.2-8.3-7.8c0.1-0.2,0.1-0.4,0.2-0.7\n                        c5.3-1.9,10.8-2.7,16.4-3.3c3.1,0,6.3-0.3,9.4,0.6c1,0.3,2.1,0.5,2.3,1.6c0.2,1.1-0.7,1.9-1.6,2.2c-3.6,1.3-5.9,5.7-10.6,4.4\n                        c-0.9-0.3-1.5,1.1-2.2,1.9C1785.9,473.8,1785,474,1784,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("883E42"),
                d:
                  "M1080.1,124.9c-1.4,0.4-3-0.4-4.1,1c-3.4,1.3-6.5-0.3-9.7-1c-3.4-0.8-6.7-1.9-10.1-2.6\n                        c-0.5-0.1-1-0.2-1.5-0.4c-5.1-1.6-10.4-2.7-15.6-3.6c-0.8-0.1-1.5-0.2-2.3-0.4c-3.2-0.8-6.4-1.3-9.7-2c-1.8-0.8-4-0.3-5.3-2.2\n                        c-2.5,0.4,3.2-1.8-0.4-1.2c-0.9,0.2-1.9-0.3-1.4-1.6c4.9-0.4,9.5,1.3,14.1,2.3c14.5,3.1,29.1,6.2,43.3,10.5\n                        C1078.4,124.1,1079.2,124.5,1080.1,124.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3A09E"),
                d:
                  "M2093.1,510.9c2.1,9,1,18-0.5,26.9c-0.9,5.5-3.2,10.3-5.7,15.2c-2.9,5.5-4.6,11.6-4.8,18\n                        c-0.3,2.1-0.2,4.2,0.7,6.1c-0.6,0.8-1.3,1.3-2.3,1.1c-1.4-0.7-1.9-2.1-2.7-3.2c-1.1-2-0.5-3.9,0.4-5.8\n                        c1.9-9.4,7-17.7,8.1-27.4c0.3-3,2.7-5.6,3.7-8.6c1.1-3.3,2.1-6.6,1.7-10.2C2091.9,519,2090.3,514.7,2093.1,510.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("874349"),
                d:
                  "M253,533c-0.1,1.5,0.3,2.8,1,4c-6.1,16.9-9.9,34.4-12.8,52.2c-0.2-0.1-0.4-0.3-0.6-0.4\n                        c-0.9-1.7-2-3.4-2.1-5.4c0-5.7,2.2-11.2,2.3-16.9c1.4-4.5,3.2-8.9,3.6-13.7c2.2-5.2,4.1-10.5,5.5-16\n                        C250.7,535.3,250.5,533.1,253,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("773339"),
                d:
                  "M1020,110.9c0.5,1,1.5,1,2.4,1.1c0.4,0,0.9,0.2,0.4,0.8c-0.2,0.2-0.6,0.2-0.9,0.2\n                        c-1.9,1.7-4,1.2-6.1,0.8c-7.2-1.3-14.3-2.6-21.6-3.5c-1.2,0-2.3-0.1-3.4-0.4c-6.8-1.3-13.8-1.9-20.7-2.5\n                        c-1.8-0.2-3.7,0-5.1-1.5c0.2-0.2-0.6-1.4-1-1.4c-0.7-0.2-1.1-0.7-1-1.4c8.7-0.2,17.1,1.9,25.7,2.4c8.9,0.6,17.7,2.5,26.5,3.9\n                        C1016.9,109.7,1018.4,110.4,1020,110.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBE9E5"),
                d:
                  "M2093,487c-1.3,2.2-2.8-0.2-4.2,0.2c-0.1-0.2-0.3-0.4-0.4-0.6c-0.9-3.4-0.1-7.2-3.1-9.9\n                        c0.1-2.3-0.7-4.4-1.6-6.5c-1-2.3-2.2-4.9,0.3-7.2c3.4-2.1,0.9-5,0.9-7.5c0-3.8,1.8,1.1,2.1-0.6\n                        C2089.7,465.5,2092.1,476.1,2093,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("967775"),
                d:
                  "M2092,589c0.4,0.6,0.8,1.2,1.2,1.8c0.8,3.4,2,6.8,4,9.6c3.4,5.1,3.7,9.7,0.1,14.7\n                        c-1,0.7-1.8,0.5-2.5-0.5c0.3-4,0.6-7.8-2.5-11.2c-2.5-2.7-5.1-4.1-8.8-3.1c-2.2,0.6-4.5,1.2-6.8-0.1c-1.3-1.1-1.7-2.5-1.2-4.1\n                        c0.4-1,1.2-1.6,2.2-2c3.5-0.5,6.8-2.3,10.6-1.4C2091,593.4,2090.5,590,2092,589z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("864247"),
                d:
                  "M166.9,630.2c-0.4-2.2-2.8-2.7-3.9-4.2c0.2-0.8,0.6-1.3,1.4-1.5c0.5-0.1,1-0.1,1.4,0\n                        c2.1,0.7,3.9,1.9,5.8,2.8c6.6,3.2,13,3.1,19.4-0.7c2.6-1.5,5.4-2.5,8.3-3.5c0.2-0.1,0.5-0.1,0.7-0.1c2.3,0.7,5.6-1.7,7,2.1\n                        c-6.1,1.4-11.9,3.6-17.6,6.6C182,635.7,174.2,635.2,166.9,630.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D2326"),
                d:
                  "M631,119.9c-0.6-0.6-1.3-1.2-1.9-1.8l-0.1-0.3c3.7-2.6,8.2-0.4,12.1-1.8l0,0c3.8-2,7.8-2.9,12.1-1.8\n                        c11.6-1.4,23.3-2.8,34.9-4.2c1.4,1.4,4.1-1.2,5.1,1.6c-0.8,1.3-2.1,1.6-3.4,1.7c-13,1.4-25.9,3.4-38.8,5.1\n                        c-5.4,0.7-10.7,1.9-16.2,2.3C633.4,120.8,632.1,121,631,119.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B59F9D"),
                d:
                  "M1910,310.8c0,0.4,0,0.8,0,1.1c-2.2,1.8-4.4,0.4-6.6,0c-7.3-1.3-14.4-3.4-21.8-3.8\n                        c-0.5-0.1-1-0.2-1.5-0.3c-2-0.7-4-1.4-6-2.1c-1.5-0.6-3.1-0.7-4.6-0.9c-0.5-0.1-0.9-0.2-1.4-0.3c-1.9-0.5-3.8-0.3-5.8-0.3\n                        c-2.4,0-4.8-0.1-7-1.3c-8.1-2.8-16.6-2.9-24.9-4.6c-2.6-0.5-5.3-0.4-7.4-2.4c0-0.4,0-0.7,0.1-1.1c15.7,1.3,31.1,5,46.6,7.6\n                        C1883.2,304.8,1896.8,307.2,1910,310.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D8285"),
                d:
                  "M494.2,481c-4.4-1.5-7.3-5.2-10.8-7.8c-15.7-11.6-32.9-20-51.8-24.9c-0.9-0.2-1.8-0.8-2.6-1.2\n                        c1.6-1.7,3.6-1.2,5.5-0.8c5.2,1,10,3.2,15.1,4.5c2,0.6,3.8,1.5,5.6,2.4c12.7,6.1,25,13.1,36.1,21.9c1.3,1.6,3.4,2.8,3.3,5.3\n                        C494.4,480.6,494.3,480.8,494.2,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8E5E5"),
                d:
                  "M127,388c-1.5-1.3-1-3.1-1-4.6c0-5.2-1-10.1-3.2-14.8c-2.6-5.7-4.4-11.6-3.4-18.1\n                        c0.3-1.7-0.3-3.6-0.9-5.3c-1-3.1-0.6-5.5,2.4-7.1c0.9,0.2,1.5,0.8,1.9,1.6c0.9,4.1,0.2,8.4,1.4,12.5c-1,7.9,1.6,15.2,4,22.4\n                        C127.9,379,129.7,383.7,127,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("682B34"),
                d:
                  "M450,452c-5.2-1.5-10.5-3-15.7-4.5c-1.8-0.5-3.5-1-5.4-0.4c-15-3.8-30.3-4.6-45.7-4\n                        c-3.2,0.3-6.5,1-9.4-1.2c0.8-2.7,3.2-2.2,5.2-2.3c2.4-0.1,4.8,0,7.2,0.3c4.6,1.2,9.2,0.9,13.9,0.4c0.5-0.2,1-0.3,1.6-0.4\n                        c14.3,0.8,28.5,2.7,42,7.8c0.5,0.1,1,0.3,1.5,0.5C446.8,449.4,449.9,448.8,450,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB4955"),
                d:
                  "M623,641c-0.4,0.7-0.7,1.3-1.1,2c-1,0.7-2.1,1-3.3,1c-10-0.4-20,1-30-0.8c-5.2,0-10.5,0-15.7,0\n                        c-0.6-0.7-0.6-1.4-0.3-2.2c0.6-0.6,1.2-0.9,2-1c11.7,0,23.3-2.1,34.9-1.4C614.1,638.8,618.8,638.9,623,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("985056"),
                d:
                  "M551.9,569c-7.1-19-16.2-36.9-27.1-54c4.4-1,4.8,3.1,6.7,5.3c0.5,1,1.2,1.8,1.9,2.6\n                        c0.5,0.7,1,1.5,1.4,2.3c2.8,5.2,5.9,10.3,8.7,15.6c0.6,2.2,1.1,4.4,2.9,6c0.6,0.8,1,1.6,1.3,2.6c0.8,5.1,3.4,9.7,4.7,14.6\n                        c0.4,1.6,1.2,3.1,0.7,4.8C552.9,569.3,552.4,569.4,551.9,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B89E9C"),
                d:
                  "M2065.2,369.9c9.1,5.1,17.8,11,25.9,17.6c1.7,1.4,3.3,2.9,3,5.4c-2.2,0.8-3.1-1.3-4.6-2.1\n                        c-0.5-0.4-1-0.9-1.4-1.4c-1.7-2.4-4-3.9-6.8-4.8c-9.8-6.6-19.7-12.9-29.8-18.9c-1.4-1.4-4.3-1.9-3.3-5\n                        c1.6,0.7,3.2,1.5,4.9,2.2c2.2,1.5,4.6,2.8,7.1,3.9l-0.1,0C2061.5,368.3,2063.5,368.9,2065.2,369.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("816765"),
                d:
                  "M2078,595c-0.7,0.3-1.3,0.7-2,1c-1.6-1.6-0.9-3.4-0.3-5.1c0.9-2,1.6-4.1,2.3-6.3c1-2.2,1.1-4.8,3-6.6\n                        c0.6-0.3,1.2-0.6,1.8-0.8c3.1,3.3,6.5,6.3,8.4,10.5c0.3,1.1,0.8,2.5-1.1,2.5c-1.8,0-3.6,0.7-5.4,0.7\n                        C2081.6,590.9,2079.4,592.3,2078,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D464F"),
                d:
                  "M1840.2,624c-1.1-23-4.4-45.7-10.3-67.9c0.2-0.1,0.4-0.2,0.7-0.3c3.1,1,2.7,4.4,4.2,6.5\n                        c0.7,2.3,0.3,5,2,7c0.3,0.7,0.5,1.5,0.6,2.3c1.8,14.8,3.9,29.6,5.7,44.4c-0.3,1.6-0.8,3.1-0.8,4.7c-0.1,1-0.2,2.1-0.8,3\n                        C1841.2,624.2,1840.7,624.3,1840.2,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68282C"),
                d:
                  "M963,103.1c1,1.5,2.8,0.4,4.1,1.3c-0.5,0.9-1.4,0.5-2.2,0.7c-1.4,1.4-3.1,1.1-4.9,0.9\n                        c-2.2-0.7-4.4-0.6-6.7-0.5c-8.6-0.7-17.2-0.9-25.8-1.4c-2.3-0.8-4.7-0.6-7-0.7c-3.9,0-7.9,0.1-11.8-0.1\n                        c-1.8-0.1-4.1,0.4-4.8-2.2c4.3-0.8,8.9,1,13.1-1C932.4,100.3,947.7,101.5,963,103.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("832C39"),
                d:
                  "M519.9,508.1c-3.6-3.1-6.3-7.1-9.3-10.8c-4.8-6.1-10.5-11.4-16.5-16.3c0.3-0.2,0.7-0.4,1-0.6\n                        c0.3-0.9,0.9-0.9,1.7-0.9c0.7,0.2,1.3,0.6,1.8,1c2,1.8,4,3.6,6,5.4c0.3,0.3,0.6,0.6,0.9,0.9c0.9,1.1,1.6,2.4,2.9,3.1\n                        c1.9,1.1,4.4-0.8,6.1,1.2c1.7,4.8,4.3,9.2,7.1,13.5c0.6,1.1,2.1,2,0.9,3.4C521.9,509,520.8,508.7,519.9,508.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A2025"),
                d:
                  "M693.3,111.1c-1.7-0.4-3.7,0.5-5.2-1c15.9-2.3,31.9-4.1,48-5c1.5,1.5,3.5,0.6,5.2,1\n                        c-0.8,2.6-3.1,2.1-4.9,2.3c-4.9,0.4-9.9,1-14.8,1.5c-0.8,0.2-1.7,0.4-2.5,0.4c-5.4,0-10.8,1-16.1,1.6\n                        C699.6,112.3,696.3,113.2,693.3,111.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F5055"),
                d:
                  "M1462,625c-0.4-2.7,0.9-5.6-0.9-8c-1.9-2.3-0.2-4.8-0.4-7.3c0.1-2.7,0-5.4,0-8.1\n                        c-1-15.9,3.2-31.1,6.2-46.4c0.2-0.8,0.7-1.5,1.2-2.1c2.2,0.2,1.7-2.5,3.2-2.9c-3,13.1-6.1,26.2-7.5,39.6\n                        c-1.2,11.8-0.7,23.6-0.9,35.4C1462.6,625.5,1462.3,625.4,1462,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("976868"),
                d:
                  "M2048.1,360.8c0.4,2.2,2.7,2.6,3.8,4.2c-1.6,1.6-3.4,0.7-5.2,0.5c-0.9-0.3-1.4-1-1.8-1.8\n                        c-0.7-1.1-2-0.7-2.9-0.9c-9.7-5.4-20.1-9.1-30-13.9c-1.5-0.7-3.1-1.3-4.2-2.6c-0.5-1.2,0.1-1.9,1-2.5\n                        c9.6,1.8,17.8,7,26.5,10.8c3.7,1.6,7.1,4,11.3,4.5C2047.2,359.7,2047.7,360.2,2048.1,360.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B19391"),
                d:
                  "M2046.8,359.1c-2.1,0.8-4,0.4-6-0.7c-10.4-5.3-20.9-10.2-31.8-14.4c-3,0.9-5.1,0.2-6-3\n                        c3,0.6,6.1,1.3,9.2,1.9C2024.1,347.4,2035.6,352.8,2046.8,359.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952B39"),
                d:
                  "M519.9,508.1c4.1,0.2,0.6-2.1,1-3.1c3.3-1.7,4.5,1.6,6.7,2.7c4.5,3,7.7,6.8,7,12.7\n                        c-0.2,0.5-0.5,0.8-0.9,1.1c-1,0.4-1.9,0.3-2.7-0.5c-2.4-1.7-2.6-5.6-6.2-6C523,512.9,521.1,510.8,519.9,508.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("62282B"),
                d:
                  "M559,132.1c1.1,1.4,2.7,0.7,4.1,1c-1.3,3.2-4.5,2.5-6.9,3.2c-8.8,1.6-17.2,4.6-25.9,6.8\n                        c-3.1,0.5-6,2.7-9.2,0.9c-0.8-0.1-1.6-0.2-2.1-1.1C532.1,138.5,545.5,135.1,559,132.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3DEDF"),
                d:
                  "M102.9,439.9c0.1-3.7,1.7-6.9,4.1-9.4c6.6-6.5,10.6-14.9,16.4-22c1.9-2.3,2.3-5.7,3.4-8.7\n                        c1.2,0.9,1.3,2.2,1.3,3.6c0,0.8-0.1,1.5-0.3,2.3c-1.5,5.3-5.7,8.9-8.2,13.6c-2.6,3.8-5.2,7.7-8.6,10.9\n                        c-2.4,2.2-3.3,5.3-4.4,8.2c-1.3,3.5-2.3,7.3-5.5,9.8c-0.5,0.1-1,0-1.4-0.3C99.4,444.7,101.8,442.6,102.9,439.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1E9EA"),
                d:
                  "M1400,275c11.9,3.3,24.5,0.9,36.5,4.1c1.6,0.4,3,1.2,4.6,1.7c-3.5,2.8-7.5,1.2-11.4,1.3\n                        c-6.5-0.8-13-2.5-19.7-1.3c-2.9-0.4-5.7-1-8.1-2.8C1401,277.2,1399.6,276.6,1400,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F4F4"),
                d:
                  "M2031,639c1-0.7,2-1.3,3-2c4.8-2.6,10.3-3,15.3-5c8.4-0.2,16.5-2.4,24.6-4.2c1.2,0,2.3,0.2,3.2,1.1\n                        c-5.7,3.3-12.3,3.4-18.4,5.3C2049.6,636.9,2040.4,638.4,2031,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("764849"),
                d:
                  "M440,171.1c0.3,0.3,0.7,0.7,1,1c0.1,2-1.5,2.5-2.8,3c-9.1,3.2-17.6,7.8-26.8,10.9\n                        c-2.2,0.4-4.2,1.3-6.3,2.2c-2.1,0-4.2,3.3-6.2-0.1C412.4,181.8,426,175.8,440,171.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F4F4"),
                d:
                  "M1913,649c6,3.7,12.6,2.5,18.7,1.4c9.7-1.8,19.5-2.8,29.3-3.4c-6.4,3.4-13.6,1.6-20.3,3.4\n                        c-10.6,2.8-21.4,4.6-32.1-0.4c-0.6-0.3-1.1-0.7-1.7-1c1-1.2,2.4-1.3,3.9-1.2C1911.7,648,1912.5,648.3,1913,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F4A54"),
                d:
                  "M1840.2,624c0.3,0,0.6,0,0.8,0c2.1,3,1.5,7.1,4.2,9.8c1.7,3.3,4.6,1.3,7,1.7\n                        c6.2,0.4,12.6-1.2,18.7,1.1c0.7,0.8,0.7,1.7,0.1,2.6c-2.8,0.4-5.6,0.5-8.4-0.1c-5.1,0-10.2-0.1-15.3,0c-4.6,0-7.1-2-7.1-6.7\n                        C1840.3,629.6,1840.2,626.8,1840.2,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E5257"),
                d:
                  "M267.9,249c10.7-6,21.7-11.3,33-16c0.1,0.2,0.3,0.4,0.4,0.6c0.1,2.5-1.8,3.4-3.5,4.5\n                        c-7,4.5-15.3,6.3-22.1,11.1c-2,1.4-4.4,1.4-6.7,0.8C268.6,249.7,268.2,249.4,267.9,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD424F"),
                d:
                  "M1871,639c0-0.7,0-1.3,0-2c-1.5-3.4,0.5-4.1,3.1-3.8c2.2,0.2,4.4,1.1,6.4,2.1c1.4,2.4,3.7,2.5,6,2.4\n                        c5.2-0.3,10.2,0.5,14.6,3.4c-1.3,3.6-4.8,1.6-7,2.8c-1.1,0.1-2.2-0.2-3.2-0.8c-2-0.6-4-1.2-6.1-1.8c-3.3-1.3-6.9-0.6-10.3-1.2\n                        C1873.3,639.9,1872,640.1,1871,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE9A99"),
                d:
                  "M1566,271c-4,2.9-9,3-13.6,3.5c-6.2,0.7-12.3,1.6-18.4,2.5c-0.3-1.3-3.9-1.8-1-3.9\n                        c0.7-0.1,1.4-0.2,2-0.3c0.2,0.1,0.4,0.1,0.6,0.2c3.2,0.6,6-1.1,9-1.8c3.8,0.2,7.5-1.7,11.3,0.1\n                        C1559.3,272.8,1562.6,269.9,1566,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("944D57"),
                d:
                  "M1737.9,443.1c0-0.4,0.1-0.9,0.1-1.3c1.8-1.3,3.5-0.3,5.1,0.5c8.1,4.1,15.8,8.8,22.5,15.1\n                        c1.1,1.5,3.4,2.6,2.2,5.1C1758.3,455.4,1748.2,449.2,1737.9,443.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6CACA"),
                d:
                  "M152,280c4.2,1.3,8.6,1,12.9,0.8c0.6-0.3,1-0.2,1.3,0.4c-1.2,2.8-3.9,2.3-6.2,3\n                        c-5.3-0.2-10.4,0.3-15.5,2.4c-3.6,1.5-5.3,3.6-5.3,7.4c0,2.3,0.2,4.7-2.1,6.3c-0.5,0.2-1,0-1.4-0.3c0.3-1.4,0.8-2.9,1-4.3\n                        c1.5-10.9,2.8-12.4,13.9-14.9C151.1,280.5,151.6,280.2,152,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("894E52"),
                d:
                  "M267.9,249c0.4,0.1,0.7,0.1,1.1,0.2c0.4,1.7-0.4,3.1-1.6,3.8c-7.5,4.2-14.9,8.9-23.5,10.7\n                        c-1.6-0.5-1-1.9-1.1-2.9c6.5-3.2,12.9-6.5,19.4-9.7C264,250.4,266,249.7,267.9,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("885155"),
                d:
                  "M399,188c2.4,2,3.9-1.5,6.1-0.9c2.2,1.7,0.6,2.5-0.8,3c-3.6,1.4-7.2,3-11.3,2.9\n                        c-5.6,1.1-10.8,3.4-15.7,6.4c-2.1,1.3-3.9,2.3-6.3,0.9C380,195.4,389.4,191.5,399,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86716D"),
                d:
                  "M2078,595c-0.3-3.4,1-4.7,4.6-5.2c2.8-0.4,6.3,0.8,8.5-2.1c0.3,0.4,0.6,0.9,0.9,1.3\n                        c0.1,3.9,0,7.1-5.7,4.7C2083.8,592.6,2081,595.7,2078,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("826565"),
                d:
                  "M127.1,404c-0.1-1.3-0.2-2.7-0.2-4c0-4,0.1-8,0.1-12c0-4.7,0-9.3,0-14c1.3-0.4,2,0.4,2.6,1.4\n                        c1.2,2.7,0.2,5.8,1.2,8.5c0.3,1,0.4,2.1,0.4,3.1c-0.1,3.7,0.5,7.4-0.9,10.9c-0.1,0.5-0.3,0.9-0.5,1.4\n                        C128.8,400.8,129.8,403.5,127.1,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F575C"),
                d:
                  "M551.9,569c0.4,0,0.7,0,1.1,0c3.1,0.7,2.6,3.7,3.4,5.8c0.5,1.3-0.4,2.9,0.6,4.2\n                        c-0.3,6.7,2,13,3.4,19.4c1.1,4.9,1.8,9.7,1.5,14.7c-2-9.2-3.8-18.5-5.9-27.7C554.8,580,553.3,574.5,551.9,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8515C"),
                d:
                  "M588.7,643.1c11.1,0,22.2-0.1,33.3-0.1c-0.3,0.6-0.6,1.2-0.9,1.8c-9.1,0-18.2-0.1-27.2-0.1\n                        C591.9,644.7,590.2,644.3,588.7,643.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("945A5E"),
                d:
                  "M301,232.9c8.3-4.6,16.8-8.8,25.7-12.1c0.5-0.3,1-0.3,1.5,0c1,2.2-0.6,3.1-2.1,3.7\n                        c-6.4,2.7-12.5,5.8-18.7,8.9c-2,1-4.1,1.2-6.1-0.2L301,232.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A1434F"),
                d:
                  "M1460.6,281.8c3.8,0.4,7.6,0.8,11.3,1.1c0.3,1.4,4.1-0.6,2.6,2.6c-7.4,0.6-14.8,0-22.2-0.7\n                        c-4.3-0.4-8.6,0.4-12.8-1.1c-0.5-0.3-0.8-0.7-0.9-1.3c1.3-2,3.7-0.2,5.2-1.3c3.1,0,6.2,0.1,9.3,0.1\n                        C1455.7,281.9,1458.2,281.1,1460.6,281.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("83454A"),
                d:
                  "M853.2,661.2c-1.1-0.2-2.2-0.3-3.2-0.5c0-0.2,0-0.5,0-0.7c18.1,0,36.2,0,54.3,0c1.6,0,3.4-0.5,4.7,0.9\n                        C890.4,661,871.8,661.1,853.2,661.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7A09F"),
                d:
                  "M2096.9,614.8c2.3-5,2.6-9.5-1.2-14.3c-2-2.5-3-6.1-2.5-9.8c2.3,3.8,4.8,7.5,6.8,11.4\n                        c2.4,4.6,1.5,8.9-2,12.7C2097.5,615.4,2097.2,615.4,2096.9,614.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F4F4"),
                d:
                  "M1961,647c1.9-1.6,4.5-1.8,6.5-1.7c10.6,0.6,20.9-3.5,31.5-2.3c-5.8,2.8-12.2,1.8-18.3,2.8\n                        C1974.2,646.8,1967.6,647.6,1961,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963342"),
                d:
                  "M1408,657c3,2.5,7-0.5,10,1.9c-14,0-28,0-42,0c-0.3-0.4-0.5-0.9-0.5-1.5c0.5-2.5-0.4-5.3,1.4-7.6\n                        c1-0.2,1.5,0.4,1.9,1.2c2.6,6,2.5,6,8.9,5.1c1-0.2,2-0.2,2.9-0.1c2.1,0.6,4.2,0.7,6.3,0.1c0.7-0.1,1.4-0.1,2.1,0\n                        c2.5,0.7,5.1,0.5,7.6,0.3C1407.2,656.5,1407.6,656.7,1408,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F4F4"),
                d:
                  "M2000,643c9.6-2,19.2-4,29-4c-6.1,2.7-12.5,3.9-19.1,3.8C2006.6,642.8,2003.3,645.6,2000,643z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1EEEF"),
                d:
                  "M653.1,114.3c-4,1-8,1.7-12.1,1.8c0.9-2,1.8-3.9,3.9-5C648.8,108.8,651.6,109.9,653.1,114.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F6A6B"),
                d:
                  "M1338.2,247.8c8.5,4.7,17.1,9.5,25.6,14.2c0.8,0.5,1.9,1,0.9,2.2c-10.4-3.4-19.8-8.5-28-15.9\n                        c-0.1-0.1,0-0.3,0-0.5C1337.3,247.5,1337.8,247.5,1338.2,247.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DED9D9"),
                d:
                  "M1555.9,271.2c-4-0.7-7.8,2.1-11.9,0.8c-3,0.4-5.8,2.3-9,1.2l0-0.5\n                        C1541.7,268.8,1548.6,267.3,1555.9,271.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B18B8A"),
                d:
                  "M1338.2,247.8c-0.5,0.1-0.9,0.2-1.4,0.3c-6.7-1.1-11.9-5.5-17.6-8.6c-2.1-1.1-5.4-1.3-6.1-4.5\n                        c-0.4-0.7-0.8-1.3-1.2-2C1321.1,237.3,1330,242,1338.2,247.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A85258"),
                d:
                  "M1502.9,486c0.4,0.4,0.8,0.8,1.2,1.3c-3.4,4.6-6.7,9.2-10.1,13.9c-0.2-0.1-0.4-0.2-0.6-0.3\n                        c-1.9-2.5,0.3-4.3,1.1-6.3C1497.3,491.7,1498.1,486.8,1502.9,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("874349"),
                d:
                  "M239,623c0-2.7,0-5.3,0-8c0.1-4-0.4-7.9-0.8-11.9c-0.1-0.8-0.1-1.7,0-2.5c0.7-2.4,0.2-4.9,0.5-7.3\n                        c0.2-1.7-0.3-3.8,2.2-4.3l0.3,0.2c-0.1,9.5-0.2,19-0.3,28.5C240.9,619.6,240.9,621.7,239,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3D9D9"),
                d:
                  "M1217.7,180.1c0.8-0.1,1.6-0.1,2.5-0.2c7.1,3.7,14.7,6.8,20.8,12.2\n                        C1232.9,188.7,1225.1,184.8,1217.7,180.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F4A52"),
                d:
                  "M374,442c3.1,0.4,6.1,0.8,9.2,1.2c-5.5,2.2-11.4,1.9-17.2,2c-0.3-0.7-0.7-1.4-1-2\n                        C367.8,440.9,370.7,439.9,374,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DFD5D6"),
                d:
                  "M1364.9,264.1c-0.3-0.7-0.7-1.3-1-2c8.7,3,16.4,8.2,25.3,10.7c-0.3,0.5-0.7,0.8-1.2,1\n                        c-4.3,0.4-8-1.3-11.7-3.2c-2.5-1.2-4.9-2.7-7.6-3.3C1367.1,266.6,1365,266.5,1364.9,264.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDC4C3"),
                d:
                  "M135.8,299.9c0.4,0,0.8,0.1,1.2,0.1c1.8,2.2,0.2,3.9-0.8,5.8c-0.2,0.4-0.5,0.7-0.8,1.1\n                        c-1.7,1.8-2.5,4.1-3.7,6.2c-0.6,0.9-1.4,1.7-2.2,2.6c-1.9,1.6-3.2,3.8-5.7,4.7c-0.5,0-0.9-0.1-1.1-0.6\n                        C128.4,314,132.1,307,135.8,299.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0EDED"),
                d:
                  "M641,116c-3.9,1.2-8,1.8-12.1,1.8c0.2-2.4-1.2-5.9,3.5-5.5c0.6,0.1,1.7,0.3,1.7,0.5\n                        C634.8,117.7,638.6,115.4,641,116z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A434A"),
                d:
                  "M1341,658.8c0.7-0.6,1.3-1.2,2-1.8c3.4-1.9,7-0.6,10.6-0.8c4.2,0.9,8.5,0.2,12.7,0.5\n                        c1.8,0.1,4.1-0.5,4.7,2.2C1361,658.9,1351,658.9,1341,658.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963342"),
                d:
                  "M1420,658.9c0.7-0.9,1.7-1,2.7-0.9c11.4,0.4,22.9-0.8,34.3,0.6c-0.5,1.2-1.3,0.8-2.1,0.5\n                        C1443.2,659.1,1431.6,659,1420,658.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D464F"),
                d:
                  "M1823,536.9c2.8-0.1,3.6,1.8,4,4.1c1.8,1.5,2.5,3.6,3.5,5.6c0.2,0.6,0.3,1.3,0.3,1.9\n                        c-0.1,1.1-0.5,2.1-1.1,3c-0.3,0.4-0.6,0.6-1,0.7C1826.8,547.1,1824.9,542,1823,536.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("965A5A"),
                d:
                  "M2089.1,402.2c-0.7,0.6-1.5,1.1-2.2,1.7c-0.9,0.3-1.3-0.3-1.6-1c-0.3-0.9-0.2-1.8,0.4-2.7\n                        c2-1.4,2.5-3.5,2.5-5.7c0-1,0-1.9,0.7-2.7c0.4-0.3,0.9-0.4,1.4-0.4C2095,395.1,2094.8,396.9,2089.1,402.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6C7C6"),
                d:
                  "M2096.9,614.8c0.4,0,0.7,0.1,1.1,0.1c-2.8,3.6-5.7,7.1-9.9,9.1c-0.6,0.5-1.2,0.5-1.9,0.3\n                        c-0.1-4.2,3.9-5.2,6-7.7c0.7-0.9,1-2,1.9-2.8c0.5-0.2,0.8,0,1,0.5C2095.4,615,2096.1,615.1,2096.9,614.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDC4C3"),
                d:
                  "M121.8,339c-0.3-0.4-0.6-0.7-0.9-1.1c-0.1-3.1-0.3-5.8-1.9-8.9c-1.8-3.4,1.3-6.7,3.6-9.4\n                        c0.2,0.1,0.3,0.3,0.5,0.4c1.3,3.3-2,6.5-0.1,9.8C123.1,333.1,124.4,336.3,121.8,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8515C"),
                d:
                  "M573,641c0,0.7,0,1.4,0,2.1c-6.4,0-7.5-1-8-7c0.7-1,1.3-2,2-3c1.5,1.3,1.3,3.5,2.4,5\n                        c0.4,0.5,0.7,0.9,1.2,1.3C571.4,639.9,572.4,640.1,573,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4DFE1"),
                d:
                  "M332.9,456.8c7-3.6,14.1-7.1,22.1-8C347.8,452.1,340.6,455.1,332.9,456.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A85258"),
                d:
                  "M1487,511.9c-0.3-0.3-0.7-0.6-1-0.9c-1.1-1.4-0.3-2.6,0.4-3.9c1.2-1.4,1.6-3.2,2.8-4.6\n                        c1.2-1.4,2.3-3,4.5-1.8c0.1,0.1,0.3,0.2,0.4,0.3C1491.8,504.8,1490.4,509,1487,511.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD7D7E"),
                d:
                  "M2086,402.9c0.3,0.3,0.6,0.7,0.9,1c-2.5,3.7-6.6,6.1-8.8,10.1c-1.2-0.7-1.6-1.7-1.4-3\n                        c1.7-3.1,5.3-4.8,5.9-8.6C2083.8,401.9,2084.9,402.1,2086,402.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0EBEC"),
                d:
                  "M1911,649c-1.4,0-2.7,0-4.1,0.1c-5.6,0.1-10.5-2-15-5c2.6-1.3,5.1-0.2,7.5,0.7\n                        c2.3,0.9,4.8,0.9,7.2,1.4C1908.3,646.9,1910.8,646.3,1911,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24F56"),
                d:
                  "M1371,658.9c-3.9-1.9-8-0.4-11.9-0.9c-2-0.3-4.3,0.8-6-1c2.2-2,4.9-1.6,7.4-1.5\n                        c5,0.2,10.1-0.9,15.1,0.9c0.6,0.4,0.8,0.9,0.6,1.6c0,0.3-0.1,0.6,0,0.9C1374.3,658.9,1372.7,658.9,1371,658.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8B3B3"),
                d:
                  "M1119,136.9c-6.1-0.8-11.6-3.5-17.1-5.8C1108.1,131.6,1113.9,133.2,1119,136.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7C4C2"),
                d:
                  "M2080.9,430.1c-0.7-2-1.3-4.1-2-6.1c-1-1.9-2.5-3.5-2.2-5.8c0.4-0.4,0.8-0.4,1.2-0.1\n                        c1.6,1.1,2,3.3,4,4c1.3,1.3,1.3,2.9,0.9,4.6C2082.4,427.9,2081.7,429,2080.9,430.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC7376"),
                d:
                  "M1454.8,659.1c0.7-0.2,1.4-0.3,2.1-0.5c6.7-1.5,5.9-6.9,6.1-11.8c0.9,1.7,0.9,3.5,0.9,5.3\n                        C1464,658.5,1461.4,660.5,1454.8,659.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAE7E7"),
                d:
                  "M102.9,439.9c-1,2.7-2,5.4-3,8c0.4,0.9-0.1,1.1-0.8,1.1c-2.3,1.3-2.1,4.4-4.2,5.9\n                        C96,449.1,99.5,444.5,102.9,439.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BCACAB"),
                d:
                  "M1533,273.1c-1.8,1.9,2.8,2.1,1,3.9l0,0c-0.9,0.8-2.1,0.4-3.1,0.5c-2.3-0.8-5.6,1.3-6.9-2.5\n                        c1-0.4,2-0.8,3-1.3C1529,273.5,1531,273.3,1533,273.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA8582"),
                d:
                  "M2089.1,402.2c0.4-2,2.4-3,3.1-5c0.9-2.7-0.1-4.1-2.2-5.2c-0.6-0.6-0.6-1.2-0.1-1.9\n                        c1.4,1,2.7,1.9,4.1,2.9C2095.4,397.7,2093.1,400.4,2089.1,402.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("954953"),
                d:
                  "M1767.9,462.4c-0.2-2-2.2-2.7-2.9-4.4c4.2-1.1,5.9,2.9,8.9,4.3c0.3,0.3,0.5,0.7,0.5,1.2\n                        c-0.4,0.8-1.7,1.1-1,2.3c-0.2,0.2-0.4,0.3-0.6,0.4C1770.7,465.5,1769.3,464,1767.9,462.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5C6C6"),
                d:
                  "M1906.8,647.2c-5.3,0.5-9.8-2.8-14.9-3.2c-0.3-0.3-0.7-0.7-1-1c1,0,2.1-0.1,3.1-0.1\n                        c1.6-0.8,3.2,0.4,4.8,0.3c1.5,0.5,3.1,0.6,4.7,1c1.3,0.4,2.6,0.8,3.6,1.9C1907.2,646.4,1907.2,646.8,1906.8,647.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DBCDCC"),
                d:
                  "M1387.8,273.1c0.5-0.1,0.9-0.2,1.4-0.3c3.8-0.4,7,2.4,10.7,2.2c0.7,0.7,1.4,1.3,2,2\n                        c-3.9,2.5-7.1-0.7-10.7-1.1C1389.9,275.3,1388.1,275.2,1387.8,273.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("896764"),
                d:
                  "M2078,418c-0.3-0.1-0.6-0.1-0.9-0.1c-0.4-0.2-0.6-0.5-0.9-0.8c-0.4-0.7-0.9-1.2-1.7-1.4\n                        c-1-0.3-2.1-0.6-2.7-1.5c-0.3-1,0.2-1.8,0.8-2.5c0.7-0.7,1.5-1.2,2.5-1.3c0.7,0,1.4,0.2,1.9,0.8c0.4,1,0.7,2,1.1,3\n                        C2078.1,415.3,2078,416.7,2078,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3E0DC"),
                d:
                  "M2082,427c0-1.7,0-3.3,0-5c6.1,1.4,3.2,4.3,1.2,7.1c0,0-0.3-0.2-0.3-0.2\n                        C2082.2,428.4,2081.4,428.1,2082,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A2434"),
                d:
                  "M1443.9,281.1c-1.4,1.5-3.3,0.6-5,0.9c-4.2,2.1-8.5,1.8-12.7,0.3c-0.3-3.1,1.7-1.5,3-1.4\n                        c3.9,0,7.9,0,11.8-0.1C1442,280.9,1443,281,1443.9,281.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4DFE1"),
                d:
                  "M320.8,462.9c3.7-2.7,7.4-5.3,12.1-6.1C329.4,460,325.4,462,320.8,462.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("955557"),
                d:
                  "M1871,639c1.3,0,2.6,0,3.9,0c0.6,0.6,0.6,1.2,0.1,1.8c-4.2,0-8.4-0.5-12.4-1.7\n                        C1865.4,639.1,1868.2,639,1871,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C3E3F"),
                d:
                  "M1875,640.8c0-0.6,0-1.2-0.1-1.8c3.9,1,7.9,1,12.1,1.1c-0.3,0.4-0.5,0.7-0.7,0.8\n                        c-0.5,0.2-1,0.2-1.4,0.3C1881.6,641,1878.3,640.9,1875,640.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7E2E3"),
                d:
                  "M122.1,599.8c3.1,1.5,5.7,3.6,8.1,6.1C126.6,605.1,123.8,603.1,122.1,599.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2D36"),
                d:
                  "M1462.9,645c-1.9-3.9-0.5-8-0.9-12c0.3-0.5,0.6-0.4,0.9,0C1462.9,637,1462.9,641,1462.9,645z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B6367"),
                d:
                  "M328.1,221.1c-0.5-0.1-1-0.1-1.4-0.2c2.5-1.9,5.3-3.2,8.3-3.9c0,0.4,0,0.7,0,1.1\n                        c0.3,0.5,0.3,0.9-0.1,1.4C332.8,220.4,330.8,222.4,328.1,221.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BBA3A1"),
                d:
                  "M2060.1,366.9c-3.2,0.2-5.2-1.8-7.1-3.9C2055.8,363.5,2058.2,364.7,2060.1,366.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2D9D8"),
                d:
                  "M2085.8,623.9c0.7,0,1.5,0.1,2.2,0.1c-2,1.8-4.2,2.9-7,3.1c-0.1-0.2-0.2-0.3-0.3-0.5\n                        c0.2-1.1,1.1-1.6,1.7-2.4c0.5-0.4,1-0.7,1.6-0.9C2084.7,623.3,2085.3,623.4,2085.8,623.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2D9D8"),
                d:
                  "M2077,629c-1,0-2,0-3,0c-0.3-1.8,1.2-2.2,2.4-2.8c1.6-0.4,3.2-0.6,4.6,0.7c0,0,0.1,0.2,0.1,0.2\n                        C2079.7,627.7,2078.4,628.4,2077,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1460.6,281.8c-2.5,0.1-5,0.6-7.4-0.5c2.5,0,5-0.1,7.6-0.1C1460.9,281.4,1460.8,281.6,1460.6,281.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6B6B"),
                d:
                  "M1482.9,519.8c0.2-2.4,0.9-4.5,3.1-5.8C1485.6,516.2,1484.7,518.2,1482.9,519.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F5353"),
                d:
                  "M1462.9,633c-0.3,0-0.6,0-0.9,0c0-2.7,0-5.3,0-8c0.3,0,0.6,0,0.9,0\n                        C1462.9,627.7,1462.9,630.4,1462.9,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BBA3A1"),
                d:
                  "M2065.2,369.9c-2.2-0.2-4.1-0.8-5.1-3C2062.1,367.3,2063.9,368.2,2065.2,369.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D464F"),
                d:
                  "M1829.9,556.1c-1-1.1-1-2.5-1.1-3.9l0.4-0.3c3,0.6,3.3,2,1.1,4L1829.9,556.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("97323E"),
                d:
                  "M239,601c0,0.7,0,1.3,0,2c1,3.3,0.3,6.7,0,10c-0.7,0.4-1.7,0.9-1.4,1.8c2,6.3-1.8,6.4-6.3,6.2\n                        c-5.7-0.2-11.5,0.2-17.1-2.1c5.5,0,10.9,0,16.4,0c1.4,0,3.2,0.7,4-1c0.8-1.6-1.1-2.2-1.6-3.3c-0.8-1.8-2.9-3.4-1-5.7\n                        c0.3-0.1,0.6-0.2,0.8-0.3c-0.3,0-0.6,0.2-0.8,0.3c-2.5-1.7-2.7,6.4-5.6,1.4c-1.4-2.4-4.4-3-5.3-5.7c-0.6-1.9-1.4-1.2-2.5-0.3\n                        c-1,0.8-2.3,0.9-3.1-0.2c-3.1-4.2-5.3-1.4-7.2,1c-3.3,4.3-9.1,5.4-13.7,2.3c-0.2,7-6.9,6.2-10.5,9.1c1.2,0.4,2.5,1,3.7,1.9\n                        c1.5,1.1,2.9,2.1,5-0.5c1.9-2.4,6.1-1.9,8.5-0.3c2,1.3-1.7,3.2-1.3,5.2l0,0c-4.1,1.5-8.3,3.1-12.4,4.6\n                        c-1.3,0.5-2.6,0.6-3.9,0.5c-1.2-0.1-2.4-0.3-2.9-1.5c-0.6-1.6,0.7-2.3,2.2-3.3c-3.8,0-7.3,0.2-10.6-1.4\n                        c-4.7-4.2-4.2-9,1.6-12.6c1.5-1,3-1.5,1.7-3.6c-0.2-0.4-0.3-0.9-0.4-1.3c-0.1-4.6,3.9-3.5,5.9-3.4c1.3,0.1,2.2,0.2,3.2-0.5\n                        c1.9-1.5,3.6-3.3,6.4-1.2c1.5,1.2,2.9,0.1,2.7-1.9c-0.2-2.2,0.6-3.2,2.8-2.8c0.7,0.1,1.8,0.1,1.9-0.3c0.9-4.6,7.6-4.4,7.9-9.4\n                        c3.8-0.1,6-2.8,8.2-5.3c2-2.3,3.7-6.2,7.4-4.2c3.7,1.9,2.8,6.2,1.7,9.3c-1.1,3.1-0.6,5.1,1.6,7c1.5,1.3,2.3,2.9,2.2,4.8\n                        c-0.2,4.4,3.4,6.2,6,8.6c1.4,1.3,2.7,0.5,3-1.5c0.3-1.8,0-3.6,0-5.5c0-1.5,0.6-3,2-3c2.1,0,1.1,2,1.2,3.1\n                        C239.6,599.1,239.7,600.1,239,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M239,613c-1.3-3.3,0.6-6.7,0-10c1.5,4,1.5,8,0,12C239,614.3,239,613.7,239,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("33221C"),
                d:
                  "M2072,416.9c-7.6-1.2-14.5-4.5-21.8-6.7c-1.1-0.3-2.7,0.2-3.5-1.2c-2.4-1.4-5.3-0.4-7.8-1.2\n                        c-7.2-2.3-14.3-4.8-21.2-7.8c-0.6-0.5-1.1-1.1-1.2-2c0.2-1.2,1-1.7,2.1-2c0.8-0.1,1.5,0,2.3,0.2c1.6,0.6,3.1,1.4,4.9,1.5\n                        c5.5,1.6,11.2,2.6,16.6,4.3c1.6,0.5,3.1,1.4,4.7,2.1c1.7,0.9,3.4,1.6,5.4,1.5c6.8,1.1,13,3.7,18.6,7.8\n                        C2071.7,414.6,2073.1,415.4,2072,416.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5D8D3"),
                d:
                  "M2056,419c0.7,0,1.3,0,2,0c1.6,1.5,1.2,3.6,1.3,5.4c0.1,2.1,0.6,3.7,2.7,4.6c1.5,2.8,2.4,5.5,6.2,7\n                        c3.2,1.3,2.4,5.7,1.8,9c-0.2,0.1-0.4,0.3-0.6,0.4c-0.5,0.1-0.9,0-1.3-0.1c-1.7-1.2-2.2-3.4-3.9-4.5c-1.6-1.6-2.7-3.6-4.2-5.4\n                        c-3.6-4.3-6.2-9.2-8.2-14.4c-2.4-2.3-5.5-2.9-8.5-3.8c-4.7-2.8-10.6-3.5-14.6-7.7c0.3-1.3,1.2-2.1,2.2-2.9\n                        c0.9-0.4,1.9-0.5,2.8-0.1c1.7,1.3,3.7,1.4,5.7,1.8c0.4,0.2,0.8,0.4,1.2,0.7c2.3,4,6.9,4.1,10.3,6.1c0.8,1.8,2.3,2.1,4,2\n                        C2055.8,417.4,2055.5,418.4,2056,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2062,429c-2.7,0.6-3.8-0.8-3.9-3.3c-0.1-2.2-0.1-4.5-0.1-6.7c2.3-3.1,5.7-0.9,8.5-1.6\n                        c0.2,0,0.8,0.9,0.7,1c-0.6,0.8-1.2,1.6-2,2.1c-0.9,0.6-3.1-0.7-2.7,1.6c0.3,1.4,2.1,0.5,3,1c1.8,0.9,3.5,0.3,6-0.1\n                        c-2.3,2.6-4.8,1.9-6.9,2C2061.9,425.1,2060.4,426.1,2062,429z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2084,463c-0.9,2.7-0.1,5.2,1.1,7.5c1.1,2.1,1.3,4.2,1,6.4c-0.2,0.1-0.4,0.2-0.7,0.3\n                        c-1-0.4-1.4-1.2-1.8-2.1c-1.4-5.6-5.7-10-6.4-15.8c0.2-1.1,0.8-1.8,1.8-2.2C2080.5,459.2,2081.3,461.8,2084,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2051,415c-4.8,0.1-9.1-0.8-11-6c1-0.9,2-0.9,3,0c3,1.3,6,2.6,9.1,3.9c0.7,0.3,1.9,0.4,1.2,1.5\n                        C2052.9,414.9,2051.8,414.8,2051,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3ECE9"),
                d:
                  "M2072,416.9c-0.3-1-0.6-1.9-0.9-2.9c0.2-0.3,0.5-0.3,0.9-0.2c1,0.4,2,0.8,3,1.3c1.2,0,1.4,1.2,2.1,1.8\n                        c0,0.3,0,0.7,0.1,1c0.6,2,1.2,4.1,1.8,6.1C2076.6,421.6,2074.3,419.3,2072,416.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5D8D3"),
                d:
                  "M2070,445c2.1,3.3,8.7,3.8,6,10c-0.2,0.1-0.5,0.1-0.7,0.2C2072.9,452.1,2069,449.9,2070,445L2070,445z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7DDD6"),
                d:
                  "M2043,409c-1,0-2,0-3,0v0c-0.6-0.8-2.7-0.2-2.1-2.2c0.5-0.2,0.9-0.2,1.3,0.1c2.9-0.7,5.2,0.7,7.4,2.1\n                        C2045.5,409,2044.2,409,2043,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5D8D3"),
                d:
                  "M2079,457c-0.3,0.7-0.7,1.4-1,2c-2.5-0.4-2.9-1.9-2-4l0.1-0.1C2077.6,454.8,2078,456.4,2079,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2AFAE"),
                d:
                  "M2082,427c0.3,0.6,0.6,1.2,0.9,1.9c-0.4,0.8-0.9,1.5-1.3,2.3c-0.2-0.4-0.4-0.8-0.6-1.1\n                        C2081,429,2080.8,427.8,2082,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2056,419c-0.8-0.4-1-1.2-1-2c0.8-0.1,1.6-1.3,2.1-0.5C2057.4,416.9,2056.4,418.2,2056,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2629"),
                d:
                  "M1364.9,264.1c1.3,0.7,2.7,1.4,4,2.1c3,1.7,6.2,3.2,9.3,4.7c1.8,0.9,2.9,1.9,0.8,3.6\n                        c-0.7,0.4-1.4,0.5-2.2,0.5c-0.8,0-1.7-0.1-2.4-0.5c-8.7-5.3-18.6-8.2-26.8-14.3c-1.2-1.4-2.5-2.5-4.3-3.1\n                        c-0.9-0.3-1.7-0.8-2.4-1.4c-21.1-13.3-43-25.2-64.5-37.8c-13.2-7.3-26.2-15-39.6-22.1c-1.9-1-4-1.8-4.9-4\n                        c1-3.2,2.8-0.8,3.8-0.3c13.2,7.3,26.3,14.9,39.5,22.1c12.7,6.9,24.8,15.1,37.9,21.4c7.9,4.4,15.8,8.8,23.7,13.1\n                        C1345.8,254.2,1355.2,259.4,1364.9,264.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73E4A"),
                d:
                  "M1232,191.8c15,8.4,30,16.8,45,25.2c-0.7,1.2-1.9,1.6-3.2,1.7c-6.5-0.6-11.6-4.5-16.8-7.9\n                        c-1.4-0.9-2.5-2.1-4.2-2.6c-0.4-0.2-0.9-0.3-1.3-0.6c-2.7-1.2-5.5-2.1-7.5-4.8c-2-2.6-5.9-2.3-8.8-3.9\n                        c-3.4-3.1-7.1-5.6-11.5-6.9c-0.5-0.1-0.9-0.3-1.3-0.5c-5.4-2.2-10-6-15.7-7.6c-8.8-4.6-17.3-9.9-27.1-12.4\n                        c-2-0.5-3.4-2-4.9-3.3c-1.4-1-2.9-1.8-4.5-2.6c-0.4-0.3-0.6-0.6-0.6-1.1c0.4-1.3,1.5-1.4,2.7-1.5c0.2,0,0.4,0,0.7-0.1\n                        c7.8,2.2,14.6,6.8,21.9,10c1.6,0.7,3.3,1.4,5,2.1c10.9,4.2,21.2,9.5,31.1,15.8C1231.4,191.2,1231.7,191.5,1232,191.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0434D"),
                d:
                  "M1055.1,121c0.3,0,0.6,0,0.9,0.1c3.4,3.4,8.3,3.7,12.3,4.2c8.3,1,15.6,5.1,23.8,5.8\n                        c5.5,1.1,10.7,3.1,15.9,5.1c0.3,0.4,0.3,0.8,0,1.2c-1.3,0.9-2.9,1.1-4.1,0.4c-2.3-1.5-2.3,0.8-3.2,1.6\n                        c-9.4-1.5-18.8-3.5-27.4-8c-3.1-1.6-6.6-0.6-9.6-1.9c-6.2-0.3-12-2.5-17.9-4.1c-6.6-1.8-13.3-3-20.1-3c-5.3,0-9.8-3.2-15-2.9\n                        c-2-1-4.1-0.9-6.2-1.1c-2.1-0.2-4.4-0.2-4.7-3.2c1.8-1.9,4.2-1.5,6.4-1.1c1.9,0.3,3.8,0.4,5.7,0.1c0.5,0,1,0.1,1.5,0.2\n                        c7.9,0.6,15.6,2.8,23.6,2.6c0.6,0,1.3,0,1.9,0.1C1043.9,120.1,1049.7,119.8,1055.1,121z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2454E"),
                d:
                  "M1092.1,131c-5.1,0.5-10.1,0-14.4-3.2c-0.6-0.5-1.6-0.8-2.3-0.7c-6.2,0.9-11.7-2.5-17.6-3\n                        c-2.4-0.2-2.9-1-1.8-3c6.7,1.6,13.4,3.3,20.1,4.9C1081.5,127.3,1086.9,128.6,1092.1,131z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2629"),
                d:
                  "M1231,190.9c-10.4-5.3-20.7-10.5-31.1-15.8c2.2-1.8,4.1,0,5.8,0.9c7.8,4,15.4,8.3,23.2,12.5\n                        C1229.9,189,1231,189.5,1231,190.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2414D"),
                d:
                  "M1108,137c0-0.3,0-0.6,0-0.9c4.5,1.1,8.9,2.6,13.1,4.9c-0.1,0.2-0.2,0.4-0.3,0.7\n                        c-2.2,3.5-4.9,1.5-7.5,0.7c-2.3-0.3-4.4-1.1-5.7-3.2C1107.4,138.4,1107.4,137.7,1108,137z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23B4B"),
                d:
                  "M1151,153c5.2,0.9,9.3,4,14,6c-0.2,0.2-0.3,0.3-0.5,0.5c-1.8,0.9-3.7,0.7-5.6,0.3\n                        c-0.4-0.2-0.8-0.4-1.2-0.7c-1.1-1.2-2.7-0.9-4.1-1.2c-2.3-0.6-3.9-1.8-3.1-4.5C1150.7,153.3,1150.9,153.1,1151,153z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F4D"),
                d:
                  "M1126.1,143c3.9,0.7,7.4,2.3,11,4c-0.1,0.2-0.2,0.4-0.3,0.7c-4.2,3.4-11.1,0.6-12-4.7\n                        C1125.3,142.6,1125.7,142.6,1126.1,143z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F4D"),
                d:
                  "M1141.1,148.9c3.6,0.7,6.9,2,9.9,4.1c0,0-0.1,0.1-0.1,0.1c-2.6,2.3-5.4,0-8.1,0.3\n                        c-0.5,0-0.9-0.1-1.3-0.3c-0.8-1.2-4.7-1.6-1.1-4C1140.6,149,1140.9,148.9,1141.1,148.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73E4A"),
                d:
                  "M1165,159c1.5,0.2,2.9,0.8,4,2c-0.1,0.2-0.2,0.4-0.3,0.7c-1.5,1.3-3.2,0.9-4.6,0.1\n                        c-2.9-1.7-0.1-1.9,0.8-2.7L1165,159z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2414D"),
                d:
                  "M1126.1,143c-0.4,0-0.8,0-1.1,0.1c-2.2,1.2-4.1,1.7-4-2l0.1-0.1C1123,141,1124.7,141.5,1126.1,143z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73E4A"),
                d:
                  "M1169,161c1.6,0.2,2.9,0.8,4,2c0,0-0.1,0.1-0.1,0.1c-1.7,0.2-4.3,2-4-2L1169,161z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F4D"),
                d:
                  "M1137.1,146.9c1.6,0.2,2.9,0.8,4,2c0,0-0.1,0.1-0.1,0.1c-2.1,0.8-3.8,0.9-4-2L1137.1,146.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("987876"),
                d:
                  "M1684,282c0-0.3,0-0.7,0-1c15.2-0.3,30.2,2.7,45.3,3.7c15.7,1.1,31,4.6,46.7,5.5\n                        c6.7,0.4,13.4,1.9,20.1,2.9c0.3,0.5,0.3,0.9-0.1,1.4c-1.4,0.9-2.9,0.9-4.4,0.8c-0.5,0-1-0.1-1.4-0.3\n                        c-3.4-0.7-6.8-1.2-10.3-1.2c-0.5,0-1,0-1.5-0.1c-2-0.4-4-0.2-6.1-0.2c-11.3-1.4-22.7-3.1-34-4c-9.7-0.8-19.3-2.7-29.1-3\n                        c-1.5,0-3-0.3-4.3-0.9c-2.9-1.8-6.2-0.9-9.3-1.1c-1.1,0-2.1-0.1-3.2-0.3c-2.2-0.8-4.6-0.7-6.9-1.2\n                        C1684.7,282.7,1684.3,282.4,1684,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A78C8B"),
                d:
                  "M1823,296c11,2,22.3,2.3,33,6c-0.4,0.5-0.9,0.8-1.4,1c-9-0.2-17.7-2.3-26.5-3.7\n                        c-7-1.1-14.1-1.5-21.1-2.9c-1.5-0.3-3-0.2-4-1.6c0-0.3,0-0.6,0-0.9C1809.7,294.1,1816.4,294.8,1823,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A78C8B"),
                d:
                  "M1796,294c0-0.3,0-0.7,0-1c2.3,0.3,4.9-0.8,7,1l0,0.1c-0.8,1.9-2.5,2.1-4.3,2c-0.5-0.1-1-0.2-1.4-0.4\n                        C1796.6,295.3,1796.2,294.8,1796,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63946"),
                d:
                  "M1136,657c-12,0-24,0-36,0c-0.7-0.5-1.4-1-1.2-2c0.4-0.4,0.8-0.8,1.3-1c9.9-0.1,19.7-1.1,29.6-1.2\n                        c7.2-0.1,14.4-1.3,21.7-1.3c5,0,10-0.6,15,0.5c5.6,2.2,11.3,2.2,16.9,0c2.4-0.8,4.9-0.6,7.4-0.6c15.6-0.3,31.3-0.2,46.9-0.4\n                        c12.6-0.1,25.3-1.1,37.8,0.9c8.1,1.3,16.1,1.4,24.2,1.6c3.5-0.1,7.1-0.2,10.6,0.3c2.7,1.1,5.7,0.3,8.3,1.6\n                        c0.5,0.4,0.6,0.9,0.3,1.5c-52,0-104,0-156,0.1c-2.3,0.7-4.6,0.7-7,0c-0.7,0-1.4,0-2,0c-1.7,0.7-3.3,0.8-5,0\n                        C1144.7,657,1140.3,657,1136,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53B49"),
                d:
                  "M1319,656.9c0-0.3,0-0.6,0-1c-3-0.9-6.5-0.7-8.2-4c0-0.9,0.6-1.4,1.3-1.7c1.9-0.5,3.8,0.2,5.7-0.5\n                        c17.9-0.7,35.8-0.3,53.7-0.2c1,0,2,0.2,2.9,0.7c2.4,1.9,1.6,4.4,1.4,6.8c-7.6,0-15.2,0-22.8,0c-3.3,1.3-6.7,0.2-10,0\n                        C1335,657,1327,657,1319,656.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89444B"),
                d:
                  "M1156,657c2.3,0,4.6,0,7,0C1160.7,658.5,1158.3,658.5,1156,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89444B"),
                d:
                  "M1149,657c1.7,0,3.3,0,5,0C1152.3,658.5,1150.6,658.4,1149,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5F60"),
                d:
                  "M1797,295c0.3,0,0.6,0,1,0.1c19.1,1.5,37.8,5.5,56.8,7.5c8.4,1.8,17,2,25.2,4.5l0,0\n                        c8.6,1.5,17.2,2.9,25.6,5.3c6.7,2.2,13.7,3.7,20.5,5.6c1.3,0.4,3.2-0.1,2.8,2.3c-2.2,1.6-4.7,1.2-7.1,0.6\n                        c-3.6-0.9-7.3-1.6-11-2.4c-8.9-2.1-17.7-4.1-26.9-4.4c-2.4-0.1-4.9-0.9-6.1-3.6c-2.2,1.1-4.4,1.7-6.7,0.3\n                        c-1.3-1-2.7-1.9-4.4-2.1c-19.7-2.5-39.1-6.5-59-7.7c-4.6-0.3-9.6,0.1-14-2.6c-2.3-1.4-5.4-0.4-8.2-0.6\n                        c-13.7-1-27.2-3.4-41-3.9c-11.9-0.4-23.7-3-35.6-3.6c-10.9-0.6-21.5-3.8-32.4-3.6c-8.3,0.2-16.6,0.3-24.8-0.5\n                        c-4.1-0.4-8.3,0-12.2-1.8c-2.8-1.3-2.3,1.5-3.2,2.5c-1.4,1.5-4.3,1.2-5,3.8c-0.9,0.8-1.8,1-2.8,0.2c-2-6.2-4.9-7.9-11.7-5.9\n                        c-4.1,1.2-8.1,1.4-12.3,1.4c-2.7,0-5.3-0.3-7.2-2.5c-1.6-1.8-4-1.5-6.1-1.5c-10.8,0.1-21.5-0.1-32.3,0\n                        c-5.6,0.5-11-1.7-16.6-1.9c-1.4,0-3.5-0.1-3.6-2.5c9.9-2.2,20-3.5,30.1-4c7.3-0.4,14.7-0.4,22.1,0.5c5.3,0.6,10.6,0.6,15.9,1\n                        c10.5,0.7,21.2,0.8,31.6,2.5c11.7,2,23.6,1.8,35.3,3.9c3.2,0.6,6.6,0.2,10,0.2c0.3,0,0.7,0,1,0c2.3,0.5,4.6,1.2,7,1\n                        c1,0,2,0,3,0c3.2,1.4,6.8-0.4,10,1c0.6,0.3,1.1,0.9,1.7,0.9c12.7,0.3,25.3,2.5,37.9,3.8c9.5,1,18.9,2.2,28.4,3.3\n                        c1.8,1.3,4.2-0.3,6,1v0c3.7,0.5,7.4,0.1,11,1c0.3,0,0.7,0,1,0C1792.9,295.3,1795.2,293.8,1797,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("946061"),
                d:
                  "M1539,278c2.8,1.1,5.6,1.7,8.8,1.4c3.7-0.3,7.2,2.5,11.2,1.6c8.4,0.8,16.8,0.7,25.3,1.1\n                        c2.2,0.1,4.6-0.7,6.6,0.9c-0.1,1.7-1.4,2.1-2.4,2.2c-6.1,0.3-12.2,2.5-18.3,0.3c-0.5-0.2-0.9-0.4-1.4-0.3\n                        c-8.4,1.5-16.7-0.5-25-0.3c-3.2,0.1-5.9-2.4-9-1.4c1,0.9,4.1-1.9,3.9,1.9c-3.8,1.7-7.8,0.6-11.7,0.9\n                        c-12,0.4-23.9-1.7-35.9-1.1c-1.2,0.1-2.3-0.1-3.4-0.7c-0.6-0.3-0.9-0.8-0.8-1.5c2.1-2,4.7-1.1,7-1.2c5.3-0.2,10.4-1.5,15.4-3\n                        c3-0.1,6.1-1.5,8.8,0.9c1.8,1.7,4.2,1.1,6.1,0.9C1529.1,280.2,1534.2,279.8,1539,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE9A99"),
                d:
                  "M1518,280c-3,0-6-0.1-9-0.1c1.3-2.8,3.8-1.6,5.9-1.9c1.9-0.2,3.9,0,5.9-0.1c1.3-0.1,2.5,0,3.3,1.1\n                        C1522.3,280.7,1520,279.7,1518,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE9A99"),
                d:
                  "M1530.9,276.9c1,0,2.1,0,3.1,0.1c-2.7,1.9-5.8,2.4-9,2c0-2.9,2.6-1.5,3.8-2.3\n                        C1529.5,276.5,1530.3,276.4,1530.9,276.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BCACAB"),
                d:
                  "M1529,277c-0.9,1.5-3.2,0.4-4,2c-0.3,0-0.6,0-0.9,0c-1,0-2.1-0.1-3.1-0.1\n                        C1522.8,274.5,1526.2,276.9,1529,277z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE444E"),
                d:
                  "M720.8,108.9c4.9-1.4,10.1-1.2,15.1-1.9c1.8-0.2,3.7,0.3,5.3-0.9c15.5-1,30.9-2,46.4-3\n                        c2.1-0.1,4.3,0,6.4,0c0.7,0.7,0.6,1.5,0.1,2.4c-1.5,2.1-3.6,2.8-6.1,2.8c-9.8,0.2-19.3,2.7-29,3.3c-0.8,0.2-1.7,0.1-2.5-0.2\n                        c-4.7-1.9-9.5-1.1-14.2-0.6c-3,0.3-5.9,0.9-8.9,0c-2-0.6-3.9,0.1-5.8,0.7c-2.1,0.7-4.2,1.1-5.9-1c1-1.8,2.7-0.7,3.9-1.1\n                        C724.2,109.1,722.4,110.2,720.8,108.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF4654"),
                d:
                  "M794,105c0-0.6,0-1.2,0-1.9c36.6-2.8,73.2-2.3,109.9-2c5.6,1.8,11.4,0.2,17,1.1c-0.9,3-3.4,3-5.7,2.6\n                        c-3.7-0.6-7.3-0.4-10.9-0.4c-24.3,0-48.5-0.1-72.8,0c-1.4-0.1-2.8,0.2-4.2,0.3c-4.6,0-9.3-1.5-13.6,1.4\n                        C807.1,106.3,800.4,107.8,794,105z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("784046"),
                d:
                  "M101,571c0-0.7,0-1.3-0.1-2c-1.3-2.5,0.4-5.5-1-8c-0.3-1.7-0.6-3.3-0.9-5c2.7,0,4.1-1,3.1-4\n                        c-0.4-1.4-0.6-3.2,1.1-3.9c1.4-0.5,2.3,1,3.2,1.9c1.3,1.4,2.4,3.1,5.2,3.5c-1.4-4.5-2.4-8.5-5.7-11.6c-3.5-3.3-4.6-7.4-3-12.1\n                        c1.1-0.2,2.1,0.3,2.5,1.2c3.5,8,10.1,14.2,12.7,22.6c2.7,4.9,3.9,10.7,8,14.9c1.1,1.1,1.9,2.4,1.5,4c-0.6,2.5,0.3,4.6,1.5,6.6\n                        c1.1,1.8,2.1,3.6,0.2,5.4c-1.8,1.8-3.8,1.9-5.7,0.1c-2.9-4.7-5.6-9.5-11.5-11.2c-3.6-1-5.2-3.7-5.9-7.2\n                        c-0.3-1.4-0.6-2.9-1.8-4.4c-1.6,1.4-1,3.2-1.1,4.9C103.3,568.4,104,570.6,101,571z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4148"),
                d:
                  "M164,625c-0.3,0.3-0.7,0.7-1,1c-18.2-11.8-36.2-24-51.9-39c-0.3-1.4-1.4-2.9,0.1-4.2\n                        c1.5-1.2,3.2-0.9,4.7-0.1c2.1,1,4.3,1.8,6.3,3c1.2,1.1,2.1,2.4,3.3,3.4c1.2,1,2.7,1.5,4,2.4c2.1,2,4.6,3.7,6.3,6.2\n                        c0.2,2.6,0.5,5.2,2.9,6.9c1.1,1.8,2.6,3.1,4.8,3.4c6.9,4.1,12.5,10.1,19.3,14.4C163.6,623,164.1,623.9,164,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E4145"),
                d:
                  "M103,530c0.7,4.7,0.9,9.4,5.5,12.9c2.5,2,3.3,6.3,4.7,9.6c0.4,0.9-0.3,2-1.1,2.6c-1,0.7-2,0.1-2.7-0.5\n                        c-2.2-1.7-4.3-3.5-6.4-5.2c-1,2.3,3.3,6.3-1.4,8.8c-1-0.3-0.8-2.5-2.5-2.2c-1.4-8.1-4.2-16-3.1-24.3c0.2-1.6-0.5-3.4,1-4.7\n                        c1.4,0.4,2.5-0.2,3.5-1c0.4-0.2,0.8-0.3,1.3-0.2C103.1,526.9,103.7,528.3,103,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D444B"),
                d:
                  "M122,587c-1.4-1.6-3.6-1.1-5.3-2.4c-2.9-2.3-5.6-2.6-5.7,2.4c-1-0.4-1.6-1-2-2c-1.4-5.1-4.4-9.3-8-13\n                        c0-0.3,0-0.7,0-1c2.7-2,0.6-4.6,0.9-6.9c0.3-1.8,0.1-4.2,2.1-4.5c2-0.2,2.4,1.7,2.6,3.8c0.7,6.9,6.1,9,11.6,11.7\n                        c2.5,1.3,5.4,4.9,5.7,8.9C124.3,585.6,124.3,587.1,122,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4E2527"),
                d:
                  "M95,514c-0.4-0.9-0.8-1.8-1.2-2.7c-0.3-0.7-0.5-1.5-0.6-2.3c-1.8-5.4-1.6-11.1-2.4-16.7\n                        c-0.9-6.8,1.1-10.6,5.7-12.8c1.7,0.7,3,1.9,3.7,3.7c-3,6.6-2.9,13.7-2.4,20.7c0.2,2.8,2.9,3.8,5.3,4.7\n                        c0.7,0.2,1.3,0.6,1.8,1.1c0.8,2.3-1.4,3.1-2.2,4.7c-1.5,1.2-0.4,4.8-3.9,4.3c-1.4-0.2-1-1.9-2-2.5\n                        C96.3,515.4,95.6,514.7,95,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82595C"),
                d:
                  "M101,572c4.8,3,8.5,6.7,8,13C106.4,580.7,103.7,576.3,101,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E4145"),
                d:
                  "M96.9,516.1c0.7,0.6,1.4,1.3,2.1,1.9c1.8,1.1,3.2,2.6,3.5,4.9c-0.1,1.2-0.5,2.3-1.4,3.1L101,526\n                        c-1.3,1-2.6,1-3.9,0c0.1-1.4-0.4-2.9,0.9-4.1c1.3-0.1,0.1-0.6,0.1-0.9C96.3,519.7,97.3,517.7,96.9,516.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("563334"),
                d:
                  "M97.1,526c1.3,0,2.6,0,3.9,0c-0.9,2.2-1.8,4.2-4,0.9C97,526.7,97,526.3,97.1,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82595C"),
                d: "M100,561c1.9,2.5,0.6,5.3,1,8C99,566.5,100.4,563.6,100,561z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("503030"),
                d:
                  "M98,521c1.1,0.6,2,1.3,1.8,2.6c0,0.2-0.4,0.7-0.5,0.6c-1.2-0.3-1.2-1.4-1.4-2.3\n                        C98,521.6,98,521.3,98,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M1585,429.8c-0.7,0.3-1.3,0.7-2,1c-1.2-1.4-2.5-2.6-4.3-3.3c-3.4-1.3-6-3-2.7-6.7\n                        c-1.5-1.9-5.6,2-5-2.8c0.1-1.1-0.4,0-0.5-0.2c-2.2,0.7-4.7,0.6-6.5,2.2c-4.6,4.2-10.5,4.6-16.3,5.5c-1.5,0.2-2.6,0.1-2.6,2.1\n                        c0,2.9-2.5,3.4-4.5,3.7c-2.5,0.5-2.4-2.1-3.4-3.5c-3,5.4-5.9,5.5-12.4,0.3c-0.4-1.7,0.7-2.9,1.6-4.1\n                        c5.9-3.6,12.5-5.3,19.1-6.9c3.9-0.9,7.5-2.8,11.6-2.7c1.3,0.9,2.6,1.9,4.7,1.9c-1.6-0.6-3.5-0.2-4.1-2\n                        c4.3-3.4,10.1-2.7,14.7-5c2.5-0.5,5-1.1,7.5-2.1c-1.7-0.2-3.6-0.3-4-2.2c-0.4-1.9,1.4-2.3,2.7-2.8c2.3-0.5,4.1,0.4,5.9,1.8\n                        c2.6,2,5.5,3.6,9,3.7c1.8,0.1,3.4-0.3,3.6-2.4c0.3-2.1-1.4-2.3-2.9-2.7c-0.6-0.2-1.3-0.2-2-0.2c-2.1-0.3-4.9-0.1-5.3-2.6\n                        c-0.3-1.9,2.6-2,3.9-3.2c0.7-0.3,1.4-0.5,2.1-0.6c3.1-0.7,6.7,1.3,9.3-1.9c1.2-1,2.8-1.1,4.2-1.6c0.5-0.2,1-0.3,1.5-0.4\n                        c2.4-0.3,4.8-0.2,7.2-0.3c5.2-0.5,10.5,1.3,15.5-1.3c0.5-0.2,1.1-0.4,1.7-0.5c6-0.4,12-0.1,18-0.2c20.6,0.6,41,2.9,60.8,9.1\n                        c1,0.4,1.9,1,2.6,1.8c0.6,2.5-1.2,2.9-2.9,2.8c-2.5-0.2-4.2,1.3-6.2,1.8c-0.2,2.4,4.2,1.6,2.5,4.1c-1.2,1.7-3.5,1.7-5.5,1.1\n                        c-1.3-0.4-2.6-1.5-4,0.2c-0.5,0.6-1.8,0.4-2.3-0.2c-4.9-4.7-4.8,0.2-6,2.9c-0.7,1.6-0.4,4.7-3.4,3.7c-5.4-1.8-6.2-3.3-5-7.3\n                        c-2.6,0.2-5.3,0.8-7.8-0.4c0.7,1,1.7,0.7,2.6,0.7c1.5,0.2,3.4,0.1,3.2,2.2c-0.2,1.9-2.1,1.9-3.5,2c-4.2,0.3-8.3,0.1-12.5,0.4\n                        c-4,0.2-3.4-2.7-3.1-5.2c-2.6,0.1-4.5,1.1-4.4,4.3c0.1,1.7-1.9,2.1-3,3.1c-0.5,0,0.7,0.4,0.3-0.1c1.7-0.8,2.9-0.7,3,1.5\n                        c-2.1,2.3-4.6,1.1-6.9,0.5c-1.7-5.5-5.9-5.5-10.6-4.9c-4.1,0.5-8.2,0-12.3,0.1c-1.1,0.6-1.5,1.9-2.6,2.3\n                        c0.1,0-0.2-0.1-0.2-0.1s0.1,0,0.2,0c1.4-0.3,1.6-2.2,3.1-2.3c3.6,2,7.4,0.4,11.1,0.4c1.8,0,3.6-0.1,5.4-0.2\n                        c3.1-0.2,4.1,1.3,4.3,4c0.1,0.8-0.1,1.4-0.6,2c-16.9,0-33.5,2.6-49.9,6.2c-2.2,1.5-4.1-0.4-6-0.9c-2.7-0.6-0.9-3.1-1.2-4.8\n                        c-0.6-3.1-3.1-1.3-4.9-0.9c-0.4,0.3-0.8,0.5-1.2,0.7c-0.8,0.6-1.8,0.8-2.3,2.1c1.5,1.2,4.4,0.1,5.2,2.6\n                        C1587.3,427.1,1586.2,428.4,1585,429.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791526"),
                d:
                  "M1774,463c-3.6-0.5-5.4-4.4-9-5c-8.3-6.5-16.6-13-26.9-16.2c-4.9-4.5-11.6-5.5-17.2-8.7\n                        c0.3-0.6,2.4-1.1,0-1.9c-1.6-0.5-3.2-1.5-3-3.5c0.2-1.9,2-2.6,3.5-3.2c6.8-2.8,13.7-3.8,20.9-1.7c2.7,0.8,5.6,0.2,8.4,0.8\n                        c3.5-0.5,7-0.5,9.7,2.2c2.2,2.2,4.3,0,6.5,0.2c1.2,0.1,2.4,0.5,3.4,1.2c2.5,1.7,4.4,3.5,0.6,5.8c-1.7,1-2.2,2.6-1.6,4.3\n                        c1.3,4.1-0.6,5.7-4.3,6.3c-1.8,0.3-3.6,0-5.1,0.7c3.4,0.4,6.8-1.3,10.3-1.8c2.7-0.4,5.8-1.2,7.1,2.4c0.5,1.3,1.1,0.9,1.9,0.6\n                        c1-0.5,0.9-1.1,0.2-1.9c-2.7-3.2-0.5-5.9,0.8-8.8c6.9,0.5,13,3.4,18.8,6.9c0.3,0.2,0.4,0.2,0.4-0.1c0-0.9,0.5-1.6,1.3-1.9\n                        c0.5-0.1,0.9,0,1.4,0.1c1.2,0.9,0.4,2.4,0.9,3.5c-0.1-2.2,1.6-2.1,3.1-2.4c1,0,1.9,0.1,2.8,0.4c0.7,0.2,1.3,0.6,2,0.9\n                        c3.8,1.9,8.9,1.1,11.5,5.6c-2.3,4-7.1,6.5-10.9,4.8c-2.8-1.3-4.9-1-7.2,0.4c-4.9-1.4-6.7-6.5-10.6-8.5\n                        c4.6,3.1,7.4,9.1,13.7,10.6c0.9,0,1.8,0.1,2.5,0.6c0.4,1.3-0.5,2.6,0.4,3.8c3.3,2.4,5.2,6.3,8.8,8.4c0.3,0.8-0.1,1.4-0.6,2\n                        c-2.2,2.1-4.5,3.9-7.6,4.3c-3.4,0.7-7,3-10.1-0.8c-0.3-0.4-0.5-0.8-0.7-1.3c-0.2-1.5,0.3-3,0.8-4.4c0.7-2,2.6-2.9,4.3-4.9\n                        c-5.7,0.9-11-1.4-16.3,0.2c-5.1,1.4-10.4,2.3-15.7,2.8c-1.2-1.1-1.1-1.7,0.6-1.9c1.9-1.2,4-1.5,6.1-1.6\n                        c6.4-1.5,13-2.2,18.8-3.9c-5.8,1.5-12.3,2.4-18.7,3.8C1778.1,462.3,1776.1,463.3,1774,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1827"),
                d:
                  "M1656,418c-1-1.6-2.8-0.5-4.4-1.6c2.4-1.3,4.1-2.9,3.2-5.8c-0.6-1.7,1.2-2.5,1.8-2.2\n                        c2.6,1.2,3.6-1.4,6.7-2.8c-1.9,2.5-2.6,4.1-2.3,6c0.2,1,0.3,2.2,1.6,1.9c5.2-1.3,10.5,0.1,16-1c-1.7-3.4-9.1,1.3-7-6.1\n                        c2.9,2.7,6.1,3.8,9.6,1.2c0.7-0.5,1.5-0.8,2.2,0c0.8,1,0.3,1.9-0.4,2.6c-0.7,0.8-2.4,1.2-1.7,2.7c0.7,1.6,2.2,1,3.5,0.6\n                        c3.4-1,1.2,2.1,2.5,3.2c2-3.6,0.8-8.9,5.7-10.8c0.7-0.3,1.3-1.1,2.2-0.6c1,0.7,0.3,1.4-0.1,2.1c-1.1,1.9,0.8,1.9,1.6,2.3\n                        c1.3,0.6,1.2,0.2,1.2-1.3c-0.1-1.8,1.3-1.1,2.4-0.3c2.1,1.6,4.4,2.1,7.4,0c-6.3,0.9-3.6-3.2-4.5-5.8c2,0.7,9.3-0.3,10.8-1.3\n                        c3.2-2,5.8,0.6,8.7,1c1.2,0.5,2.4,0.8,3.5,1.4c0.6,0.4,1.1,1,1.5,1.6c0.6,1.8,1.7,2.6,3.6,2.8c1.7,0.1,3.3,0.7,3.5,2.8\n                        c0,0.3,0,0.7-0.1,1c-1.1,2.8-3.7,5.4-1.9,8.8c-1.6,0.9-3.3,0.8-5,0.4c-5-2.2-9.3-0.8-13.4,2.2c-1,0.8-1.6,2.2-3.2,1.9\n                        c-0.4-0.1-0.5-0.9-1.1-0.6c0.4,0.5,0.9,1,1.3,1.5c-0.1,2.8-3,1.8-4.2,3c-4-1.3-8-2.6-12.1-3.9c-5.8-3.1-12.4-3-18.7-3.8\n                        c-4.4-0.6-8.2-3.8-12.9-2.9c-2.1-0.2-4,0.9-6.1,0.5C1656.8,418.7,1656.3,418.4,1656,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781922"),
                d:
                  "M1727,420c2,0,4,0,6,0c1.4-1.4,3-1.2,4.7-0.9c2.9,1.4,6,1.8,9.3,1.5c1.9,0.1,3.8-0.1,5.5,0.8\n                        c1.8,2.2-0.6,2.6-1.5,3.6c-5.8-0.1-11.5-2-17.3-2.1c-4.6-0.1-8.5,1.8-12.5,3.2c-0.7,0.2-2.5,0.4-2.4,2c0.1,1.7,1.9,1,2.6,1.8\n                        c1.4,1.5,3.8,0.6,5.7,2.1c-2.3,1.5-4.3,0.8-6.1,1.1c-4.6-1.4-9.2-2.8-13.9-4.1c0.5-2,3-1.5,4-2.9\n                        C1715.9,422.8,1721.1,420.6,1727,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1823"),
                d:
                  "M1663,417c3.5-0.2,6.8,0.5,10,2.2c2.7,1.5,6,2.2,9.1,1.7c4.5-0.6,8.3,2.1,12.5,2.5\n                        c0.6,0.1,0.9,0.9,0.3,1.5c-8.7-1.4-17.3-2.7-26-4.1c-1.9-1.1-4.2,0.2-6.1-0.9c-5.3-0.1-10.6-0.1-15.8-0.2c0-0.6,0-1.3,0-1.9\n                        c0.7-0.6,1.3-0.6,2,0c2.3,0.5,4.7,1.8,7,0c0.3,0,0.7,0,1,0C1659.2,419.1,1661.2,418.3,1663,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1584,419c2.2-2.4,4.8-1.8,7.4-1c0.9,0.3,1.7,1.1,1,1.7c-5.2,4.4,0.7,4.4,2.3,6\n                        c0.5,0.5,1.6,0.3,2.4,0.4c-1.8,1.3-4,1.3-6.1,1.8c-0.7-0.5-1.4-0.8-1.8,0.3c-1.1,0.6-2.1,1.2-3.2,1.9c-0.3,0-0.6-0.1-0.9-0.1\n                        c1.1-3.5,2.3-6.8-3.8-5.6c-2.3,0.5-2.2-1.2-1.4-2.9C1580.7,419.7,1582.7,420,1584,419c1.1,0.6,1.7,1.6,1.2,3.1\n                        C1586.8,420.1,1584.9,419.8,1584,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M1662.9,420.1c2.1,0.2,4.3-0.8,6.1,0.9C1666.9,420.8,1664.7,421.6,1662.9,420.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M1589.1,428.1c-1.1-0.9-0.4-1.5,0.4-1.7c1.1-0.3,1.3,0.6,1.4,1.5\n                        C1590.4,427.9,1589.7,428,1589.1,428.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983A46"),
                d:
                  "M1099,655c0.3,0.7,0.7,1.3,1,2c-15.3,0.4-30.6,0.5-45.9,0.4c-24.7-0.1-49.4-0.2-74.1-0.3\n                        c-1.7,0-4.2-1.2-5,1.8c-42.3,0-84.6,0.1-127,0.1c-0.8-0.5-1.6-0.9-0.9-2.1c1.8-1.5,3.8-2.6,5.7-3.9c3.2-2.3,7.2-2.4,10.3,0\n                        c2.8,2.2,5.6,2.6,8.8,2.5c10.8-0.2,21.5,0.1,32.3-1.6c9.1-1.5,18.6-0.4,27.9-0.3c4.5,0,8.9-0.7,13.3-1.7\n                        c6.1-1.3,12.2,0.2,18.4,0.5c22.2,1.2,44.4,2.1,66.5,0.8c13.1-0.7,26.1-1.6,39.2-1.6c6.1,0.6,12,3,18.3,2\n                        c2.1,0,4.2-0.1,6.3,0.2C1095.7,654.4,1097.5,653.9,1099,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3404D"),
                d:
                  "M847,658c0.4,0.3,0.7,0.7,1.1,1c-5.7,0.6-11.5-1.1-17.1,1c-9.5,1.1-18.9,0.2-28.4,0.5\n                        c-6.3-1-12.7-0.2-19.1-0.5c-5.5-0.4-11,1.5-16.5,0c-0.3-0.6-0.3-1.1-0.1-1.7c1.4-2.8,4-2.7,6.4-2.7c8.6,0,17.1-1.1,25.7,0\n                        c8.3-0.1,16.6,0,25,0c2.9,0,5.3-0.6,6.2-3.8c0.8-1.4,2.2-1.7,3.4-1.1C838.1,653,843.2,654.2,847,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3B43"),
                d:
                  "M767,659c3.3,1.9,6.7,0.9,10.1,0.5c2-0.2,3.9-0.3,5.9-0.4c6.3,1.3,12.7-0.4,19,0.9c9.7,0,19.3,0,29,0\n                        c6.3,0,12.7,0,19,0c0,0.2,0,0.5,0,0.7c-29.3,0-58.6,0.1-88,0.1C762.3,656.5,764.6,657.7,767,659z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1482,513.9c-1,2.6-1.5,4.8-5.5,5.6c-5,1-3.9,7.1-5.3,11c-0.9,2.4-0.6,5.5,1.4,7.7\n                        c-1.6,1.2-3.2,0.6-4.6,0.8c-2.3,1.4-3.3-2.8-5.2-1.5c-2.1,1.5-0.3,4.5-1.7,6.5c-1,1.4-0.6,3.2-1.1,4.8\n                        c-0.7,2.3-1.6,4.7-4.4,4.7c-2.6,0-5.8,1-7.1-2.8c-1-2.8-2.7-2.3-4.5-0.7c-4.2,3.7-5,8.8-5.4,14c0,0.5,0,0.9-0.2,1.4\n                        c-0.7,1.3-1.7,2.3-2.8,3.3c-0.5,0.5-1.1,0.9-1.8,1.2c-3.5,1.5-7.1,1.7-10.7,0.9c-1.4-0.3-3.6-0.5-3.7-2\n                        c-0.2-2.3,2.5-1.4,4-2.6c-2.2-1.1-4.2-0.5-6.2-0.2c-1.4,0.2-3.2,0.8-3.5-1.4c-0.2-1.9,1.3-2.5,2.8-2.8\n                        c1.9-0.4,3.9-0.9,5.3-0.3c-5.1,1-7.4-2.9-9.6-7c-0.8-1.5-1.9-2.2-3.5-2.4c-2-0.3-3.5-1.2-2.8-3.9c-1.9,2.5-3.7,4.9-7.1,4.8\n                        c-3.1-0.7-4.8-2.5-4.4-5.8c0.7-2.1,2.6-2.5,4.3-3.3c7.3-3.3,14.9-5.9,22.4-8.9c18.3-6.9,36.4-14.4,54.8-20.9\n                        C1477.6,513.5,1479.8,511.2,1482,513.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63945"),
                d:
                  "M1482,513.9c-5.5,0.3-10.5,2.5-15.3,4.5c-15,6.5-30.4,11.8-45.7,17.5c-3-1.8-7.1-1.7-9.2-5.3\n                        c-0.9-1.4-2.4-0.1-3.4,0.7c-1.8,1.3-3.7,1-3.7-1.1c0-3.9-2.9-5.3-5-7.4c0.3-3.9,3.7-5.7,5.9-8c1.6-1.6,4.4,0.2,5.8,2.3\n                        c1.3,1.9,1.3,3.4-1.5,4c6.2-2.7,12.7-1.5,19-2.3c1.4-0.2,3.1-0.1,3.5,1.1c1,3.6,4,3.2,6.2,3.1c2.8-0.2,5.9,0,8.2-2.5\n                        c2.2-2.3,4.5-4.4,6.5-6.9c4.5-5.8,4.5-5.8,9.9-0.5c1.1-5.3,3.8-6.4,8.8-6c3,0.3,5.9,1,8.8,1.5c1.8,0.4,1.7,2,2.2,3.3\n                        C1482.6,512.6,1482.3,513.3,1482,513.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1438.5,565.3c-3.2-4.9,2.4-17.8,7.6-18.5c2.3-0.3,2.7,2.1,3.5,3.6c1,1.8,6.4,3,7.4,1.4\n                        c2.4-3.7,4.2-8.4,3-12.2c-1.3-4.1,3.2-1.7,2.8-3.8c-0.1-0.5,0.3-1.5,1.1-0.3c0.3,0.4,0.4,1,0.8,1.3c1,0.8,2.2,1.5,3.3,2.3\n                        c-0.2,3-1.7,5.4-3.2,7.9c-1.5,2.5-1.8,4.6,1.2,6.1c1.2,1.5,0.4,2.8-0.4,4.1c-1.3,1.4-2.5,1.2-3.9-1.1\n                        c1.3,4.9-0.8,9.4,2.2,13.1c-0.1,8-2.9,15.6-2.7,23.7c0.1,2.5-0.1,5-0.2,7.5c-0.1,2.2-0.7,3.9-3.1,4.4\n                        c-2.6-0.1-2.7-1.9-2.6-3.9c0.4-5.5-0.5-11-0.9-16.5c-0.2-2.9,1-5.5,1.2-8.4c0.4-5.8-0.4-6.2-6.1-6c-4.8,0.1-10.3,3.1-14.5-1.9\n                        C1435.7,566.7,1436.7,565.6,1438.5,565.3c2.2,0.2,5.3,2.7,6.5-3.1C1443.3,567.3,1440.6,566.1,1438.5,565.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43E4E"),
                d:
                  "M1457,604c2.4-0.2,2.9-1.7,3-3.8c0.5-6.9,0.7-13.9,1.8-20.7c0.6-3.8,1.3-7.6,1.2-11.5\n                        c0.2-3.8-2-7.9,2-11c0.3-1.3,0.7-2.7,1-4c0.7,0,1.3,0,2,0c-0.1,8.2-2.7,15.9-4.2,23.9c-1.6,8.4-1.9,16.8-1.9,25.2\n                        c-0.8,2.9-0.6,5.9-0.1,8.8c-0.3,2-0.6,4.1-0.8,6.1l-0.1,0.1c-1.4,1-2.8,1.2-4-0.2c1.1-2.2,0.9-4.7,1.4-7\n                        c0.5-2.1-1.7-1.2-2-2.3C1455.9,606.2,1456,605,1457,604z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3844"),
                d:
                  "M1483,512c-0.7-1-1.3-2-2-3c-0.7-1.4-2.6-2.9-0.7-4.3c2.4-1.7,4.7-0.7,6.4,1.6\n                        c0.1,0.2,0.2,0.4,0.3,0.7c-0.3,1.3-0.7,2.6-1,4C1484.9,511,1483.7,510.8,1483,512z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("794C4F"),
                d:
                  "M191.1,275.1c8.9-1.8,17.8-3.5,26.8-5.3c0.4,0.5,0.4,0.9,0.1,1.5c-7.3,3.7-15.2,5.7-23.1,7.9\n                        c-5.2,0.1-9.8,2.8-14.9,3.1c-2.2-0.4-4.4-0.6-6.2-2.1c2.2-3.7,6.3-3.1,9.6-4C185.9,275.5,188.6,275.7,191.1,275.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("683235"),
                d:
                  "M242.7,260.8c1.2,0.6,0.6,1.4,0.3,2.2c-0.8,1.4-2.2,1.8-3.5,2.3c-4.6,1.6-8.5,4.9-13.6,5.4\n                        c-1.2-0.1-2.2-0.5-3.3-1c-0.4-0.2-0.7-0.6-0.8-1C228.6,265.7,235.5,262.8,242.7,260.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DED5D5"),
                d:
                  "M191.1,275.1c-5.5,2.5-12,1.9-17.4,4.8c-2,3.4-4.7,2.7-7.5,1.3c-0.5-0.1-0.9-0.2-1.4-0.3\n                        C173.3,277.1,181.8,274.2,191.1,275.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("683235"),
                d:
                  "M217.9,270.9c0-0.4,0-0.8,0-1.1c1.3-0.3,2.6-0.7,3.9-1c0.1,0.2,0.2,0.3,0.3,0.5\n                        C221.4,271.4,219.8,271.6,217.9,270.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CEBDBE"),
                d:
                  "M2019.2,637.3c-6.5,2.8-13.7,2.8-20.4,3.3c-11.9,0.9-23.6,2.6-35.5,3.6c-4.1,0.3-8.2,0.9-12.4,0.8\n                        c0.3-2.7,2.8-2.1,4.4-3c7.7-3,16.2-1.4,24-4c7.6-0.5,15-2.3,22.6-2.3c5.3,0.3,10.7-0.5,16,0.5\n                        C2018.5,636.3,2018.9,636.7,2019.2,637.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CFBCBC"),
                d:
                  "M1955,643.1c-0.9,1.5-3.1,0.3-4,1.9c-3.2-0.1-6.3,0.3-9.2,1.3c-8.4,2.8-17.1,3.1-25.8,2.7\n                        c-3.1-1-3.1-1-2.5-2.5c2.5-1.2,5.1-0.6,7.7-0.8c9.5-0.6,18.9-2.2,28.3-3.4C1951.4,641.9,1953.4,641.4,1955,643.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CEBDBE"),
                d:
                  "M2029,636.9c-3.3,0.1-6.5,0.2-9.8,0.3c-0.2-0.2-0.4-0.4-0.6-0.5c-1.1-0.5-3-0.6-1.1-2.5\n                        c0.5-0.3,1-0.4,1.6-0.5c4.5-0.2,8.9-0.4,13.3-1.6c3.3-1,6.9-1.2,10.2,0.4c0.9,2.7-1.6,2.2-2.7,2.7\n                        C2036.5,636.7,2032.5,635.5,2029,636.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3C4C5"),
                d:
                  "M2029,636.9c2.7-2.1,5.9-1.8,9-2c1.8-0.1,3.6-0.6,5-1.8c1.4-1.5,3.2-1.4,5-1c0.6,0.2,1,0.6,1.3,1.1\n                        c-5,1.7-9.9,3.7-15.3,3.8C2032.3,637,2030.7,637,2029,636.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5C6C6"),
                d:
                  "M1913,647.1c1,0.6,2,1.3,3,1.9c-1,0-2,0.1-3,0.1c-0.7,0-1.3,0-2-0.1c-1-1.5-3.1-0.5-4.2-1.8\n                        c0,0,0.3-0.4,0.3-0.4C1909.1,645.4,1911.1,645.4,1913,647.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1525,428c0.8,0.2,1.6,0.4,2.4,0.7c7,3.5,7.8,3.1,8.9-4.1c1.7,0.1,1.6,1.8,2.4,2.8\n                        c0.8,1-0.4,3.7,2,2.8c0.8-0.3,4.5-0.1,2.5-3.5c-0.8-1.3,1.9-3,2-2.9c4.3,2.5,8.5-4.1,13.4,1.3c-2.3-4.5,6.3-8.3,14.1-8.1\n                        c0.4,1.3-1.8,0.9-1.2,2.3c0.4,0,0.8,0.2,1.2,0.1c1.5-0.3,3.2-2.5,4.4-0.9c0.9,1.1,0.9,3-1.1,4.9c-1.7,1.6,1.8,2.4,3.1,2.9\n                        c2.3,0.8,4.6,1.2,3.9,4.5c-12.4,3.4-23.6,9.5-34.9,15.2c-2.2-0.8-3.3,0.6-4.8,1.9c-1.8,1.6-4,2.7-6.2,3.8\n                        c-0.7,0.1-1.4,0-2-0.4c-0.8-4.5,1.6-7.3,5-9.7c-1.1-1.1-4.5-1.8-0.9-5c-6,2.5-12.5,0.8-18.2,3.5c1.2,1.7,2.2,0.8,3.1,0.8\n                        c2.4,0,3.1,1.8,3.2,3.7c0.1,2.5-2,2.6-3.5,2.2c-5.1-1.5-8.4,0.5-11.5,4.6c-3.4,4.5-8.5,6.7-13.9,7.9c-2.6,0.6-4.1-1.4-3.4-4.3\n                        c0.7-2.5,2.7-3.7,4.6-5.1c0.5-0.4,0.7-0.7,0.2-0.3c-0.1,0.1-0.6-0.2-0.9-0.3c-1.6-1.5-1.5-2.8,0.2-4.1\n                        c1.1-0.8,2.2-1.4,2.9-2.6c0.3-0.4,0.6-0.8,0.9-1.1c3.3-2.4,6.7-4.8,9.9-7.4c1.7-1.4,3.5-2.8,5.8-1.3c0.8,0.5,1.2,0.6,1.4-0.3\n                        C1520.2,429.3,1522.8,428.9,1525,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC2A37"),
                d:
                  "M1502.9,486c-3.5,2.2-4.6,6.6-7.9,9c-1.4,1.1-2.8,1.2-4.2-0.1c-1-2.6,1.1-5.2-0.1-8.2\n                        c-1.9,2.8-5.2,2.7-8,3.6c-6.2,2-12.5,3.6-18.5,6.2c-1.2,0.5-2.6,0.4-3.9-0.2c-1.1-1.4-1.1-3-0.8-4.6c1.6-2.5,3.4-4.9,5.5-7\n                        c1.3-1.2,2.5-2.7,4.7-2.1c1.8,1.9,4,1.5,6.2,0.7c1.1-0.4,2.2-0.7,3.3-0.3c1.3,0.6,2.2-0.1,3-1c1.6-1.9,4.2-3.3,6.1-2.8\n                        c4.9,1.3,7.7-2.8,11.6-3.5c2.6-0.5,2.7-3.2,4.5-4.3c1.7-0.7,3.4-0.7,5,0c2.2,2.3-1.4,2.2-1.4,3.7c0.8,0.8,2.2,0,3,1\n                        C1509,479.8,1504.2,481.5,1502.9,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1E2B"),
                d:
                  "M1535,451c0.7,0,1.3,0,2,0c0.5,0.6,1.6,0.2,2,1c-4.7,3.7-9.3,7.3-14,11c-2,1.6-4.7,2.5-6,5l0,0\n                        c-1.7,0.6-3.5,1.1-5.3,0.7c-3-3.1-2.9-4.4,0.7-5.1c1.9-0.3,2.9-1.1,3.8-2.6c-2.8-0.6-6.2,3-8.4-1.2c3-3.5,7.4-4,11.3-5.3\n                        C1525.6,452.9,1530.2,451.4,1535,451z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02833"),
                d:
                  "M1514,468c1.7-0.1,3.3-1.4,5,0c-2,3.4-5.4,5.3-8,8c-0.5,0.1-1,0.1-1.5,0.3c-1.4,0.5-3.3,1.6-3.9-0.1\n                        c-0.7-1.7,0.7-3,2.7-3.2c0.6-0.1,1.1-0.6,1.7-0.9C1510.3,469.6,1511.9,468.6,1514,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1828"),
                d:
                  "M1539,452c-0.8,0-1.6-0.2-2-1c2.5-2.5,5.8-4,8.2-6.7c2.8-3.1,2,0.9,2.9,1.7\n                        C1545.5,448.8,1542.1,450.1,1539,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02833"),
                d:
                  "M1519,468c0.3-3.7,3.1-4.4,6-5C1523.7,465.5,1521.1,466.4,1519,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M296,474c-0.3,2.5-2.7,3.3-4.2,4.6c-11.1,9.5-19.6,21.3-27.8,33.2c-3.1-0.4-6.7,2.1-9.3-1.4\n                        c1.2-3.8,5.7-4.8,7.7-9c-9.1-1-17.8-2.2-26.7-2.6c-1.4-0.1-2.3-0.7-2.1-2.3c2.9-2.9,4.3-7.1,8-9.5c1.5-1,1.8-3.1,1.1-5\n                        c-1.8-5,1.2-3.5,3.6-2.7c-0.5-4.3-1.5-4.8-7.9-4.8c-0.4,0.2-0.9,0.2-1.4,0.2c-2.9-1.7-2.1-4.1,0.2-4.6\n                        c2.2-0.5,1.3-0.7,0.7-1.7c-0.9-1.5,0-2.5,1.2-3.3c3.8,0.1,6,2.9,8.6,5c0.7,0.6,1.5,0.2,2,0.7c0.8,0.6,1.6,1.1,2.2,2\n                        c0.1,0.3,0.3,0.5,0.6,0.6c-0.3-0.2-0.5-0.4-0.6-0.8c0.3-1.3,1.2-2.6,0-3.9c-0.2-0.4-0.3-0.8-0.2-1.3c0-0.1-0.2-0.2-0.2-0.2\n                        c-0.1,0.8,0.4,1.4,0.8,2.1c-0.1,1.3-0.6,2.2-2.2,1.7c-4.6-3.6-10.6-5.8-12.8-11.8c-0.5,2.2,3.9,3.2,1.6,6\n                        c-4.6-0.4-9.5,0.8-13.3-3.2c0-0.5,0.2-0.9,0.5-1.3c1-0.7,2.2-0.7,3.3-0.7c2.4,0,2.5-1.1,1.4-2.8c-0.8-1.3-1.9-2.7-1-4.1\n                        c1.9-2.8,1.2-4.1-1.9-5.2c-2.6-1-0.6-3-0.1-4.6c-1.6-0.6-3.5,1.3-4.6-0.5c-1-1.6,0.5-2.7,1.7-3.7c0.7-0.6,0.8-1.2,0.2-2.1\n                        c-2.6-3.6-2.5-3.8,2-5.7c-0.1,0,0.3,0,0.3,0s-0.2-0.3-0.2-0.3c-0.5-0.3-1-0.2-1.5,0c-1.7,1-3.5,2.6-5.4,1\n                        c-2-1.7-1.2-3.9-0.2-5.9c-2.5-1.6-6.4,1.2-8.2-2.6c4.5-3.4,10.1-2.4,15.1-3.4c5.9-1.2,12.3-1,17.6-4.6c4.4,0.9,5,5.2,7.2,8\n                        c5.9,9.9,11.4,20.1,18,29.7c7.5,5.9,15.2,11.6,22.9,17.4C293.9,471.6,295.5,472.2,296,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M344.9,447.9c-11,3.6-21.4,8.5-31.3,14.4c-1.5,0.9-3.4,1.5-3.6,3.7c-5.1,0.5-7.8,5-12,7.1\n                        c-3,0.9-4.5-1.7-6.4-3c-2.8-2-6.1-3.5-8.1-6.5c-2.4-4.1-2.7-8.1-0.8-12.6c1.4-3.4,1.2-7.1-0.3-10.6c0-2.9,1.2-3.6,3.7-2.1\n                        c0.6,2.6,4.4,3,4.3,5.4c-1.2-3.3,0.9-4.8,4.4-6c3-1,5.5-3.1,4.1-7c1.1-3.4,4.5-3.9,6.9-5.7c9.5-5.3,19.7-9,29.9-12.6\n                        c0.7-0.2,1.4-0.2,2.2-0.2c1.3,0.2,2.7,0,3.9-0.5c3.4-1.4,4.1,1.8,5,3.4c1.1,2.1-1.3,2.5-2.7,3.2c-0.7,0.3-1.4,0.8-2,1.3\n                        c1.4-0.6,3-2,4.3-0.2c1.1,1.6,1.3,3.8,0.7,5.8c-0.6,1.8-2.4,1.7-3.8,1.4c-4.5-0.9-6.9,1.1-7.8,5.3c-0.3,1.2-0.6,2.5-1.8,2.7\n                        c-3.5,0.6-4,3.4-4.8,6.3c0.9-0.9,0.9-2,1.5-2.8c1.1-1.3,2.2-2.8,4.1-2.3c2.1,0.6,1.9,2.5,1.6,4.1c-0.7,4.3,2.9,4.6,5.4,5.9\n                        C342.5,446.4,344.8,445.3,344.9,447.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("551220"),
                d:
                  "M255,510c2.1,1.8,4.6,0.8,6.9,0.8c1,0,1.9-0.5,2.1,0.9c-3.7,6.7-7.4,13.4-11.1,20.2\n                        c-0.6,0.5-1.2,0.8-2,0.9c-4.2-4.4-10.5-4.7-15.5-7.5c-0.1-0.3-0.3-0.6-0.4-0.9c-0.4-2.1-4.6-0.8-3.7-3.4\n                        c0.7-1.9,3.5-1,5.3-1.7c0.8-0.5,1.2-1.2,1.6-1.9c0.2-0.4,0.6-0.7,0.9-1c3.7-0.7,7.5-0.8,9.2-5.2c0.8-2.1,3.3-1.7,5.3-1.8\n                        C254.2,509.5,254.6,509.7,255,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80273D"),
                d:
                  "M284,463c4.4,3.8,8.9,7.3,14,10.1c-0.5,0.7-1.2,0.9-2,0.9c-9.6-5.8-18.3-12.9-27-20\n                        c-0.5-0.6-0.6-1.3-0.2-2C274.9,454.3,279.7,458.3,284,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731D28"),
                d:
                  "M251,532c0.6,0,1.2,0,1.9-0.1c0,0.3,0.1,0.7,0.1,1c-0.7,1.3-1.3,2.7-2,4c-0.9,0.8-1.3,1.8-1.5,3\n                        c-0.3,1.5-1.5,1.6-2.6,1.6c-1.3,0.1-2.4-0.5-2.6-1.8c-0.4-2.5-2.1-4.4-2.4-6.9C244.6,530.3,248.1,533.6,251,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("644849"),
                d:
                  "M94,509c0,0.8-0.1,1.5-0.1,2.3c-8.2-9.4-5.6-20.7-5.3-31.5c0.2-8,3.6-15,7.3-21.9\n                        c1.7-1.6,2.1-3.9,3.1-5.9l0,0c0.7-0.8,0.5-2.2,1.6-2.8c2-0.9,1.6-4.5,4.7-4.1c1.3,2.4-0.5,4-1.3,5.9c-1.3,2.2-2.1,4.6-3,7\n                        c-5,5.8-6.9,12.5-7.9,20.1c-0.8,6.8-2,13.4-1.2,20.2C92.3,502,92.9,505.5,94,509z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9AEAD"),
                d:
                  "M99,452c-0.2,2.4-0.7,4.6-3.1,5.9C96.4,455.7,97.2,453.5,99,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9AEAD"),
                d:
                  "M100.8,449.9c-0.6,0.7-1.2,1.4-1.8,2.1c0.1-1,0.1-2,0.2-2.9c0.3-0.4,0.5-0.7,0.8-1.1c0.3,0,0.6,0,1,0\n                        C101.6,448.7,101.6,449.3,100.8,449.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3542"),
                d:
                  "M1460,624c-1.5,3.5-3.8,6.6-1.3,11c1.2,2.1,0.2,5.5,0.3,8.3c0,1.5-0.2,3.1,0.2,4.4\n                        c2.3,7.3,2.3,7.3-5.3,7.3c-5,0-10,0-14.9,0c-0.5-0.7-0.5-1.5,0-2.3c4.3-1.6,8.8-0.3,12.2-0.7c-8.4-0.7-17.9,1.2-27.3-0.1\n                        c-5-3.2-10.7-0.6-16-1.9c-1.5-0.4-4.2,1.6-4.2-1.6c0-2.3,2-4.1,4.5-3.5c4.6,1.1,9.1-2.4,13.6,0c0.7,0.4,1.7-0.1,2.1-0.9\n                        c0.5-0.9-0.2-1.5-0.8-2.1c-1.3-1.7-2.5-3.5-4-5c-0.3-0.4-0.4-0.8-0.5-1.3c1.1-2.5,3.5-0.9,5.2-1.8c-0.1-1.4-1.7-1.4-2.2-2.3\n                        c-2.4-1.8-5.2-1-7.7-1.1c-7.8-0.3-15.7,1-23.2-2c-2-0.8-3.7-1.4-4.6-3.5c-0.5-1.4-0.9-2.8-0.1-4.2c3.9-2.7,8.3-0.3,12.4-1.2\n                        c16,0.8,32,1.9,48,2c3,0,6,0.1,8.9-0.5C1457.9,620.5,1459.8,621,1460,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74550"),
                d:
                  "M1460,624c-1.3-2.5-3.3-1.1-5.2-1.1c-7.9,0.2-16,0.9-23.8-0.2c-8.2-1.1-16.5,0.2-24.7-1.2\n                        c-2.7-0.5-5.5-0.3-8.3-0.5c-1.4-0.9-2.9-0.4-4.3-0.5c-1.5-0.1-3.2,0.2-3.2-2c0-1.8,1.4-2.9,2.9-2.9c4.2,0.1,8.5-1.4,12.7,0.3\n                        c0.9,0.4,1.8,0.7,2.8,0.5c-1.1,0.1-2.3,0-1.4-1.5c0.8-1.2,2.3-1.2,3.6-1.2c3.5-0.1,7,0.1,10.4-0.2c10.5-0.7,21,1.2,31.5,1.1\n                        c1.2,0,2.3,0.2,3.3,0.8c0.2,0.2,0.4,0.4,0.7,0.6c1,1.5,2.6,0.8,4,1C1460.6,619.3,1461.9,621.9,1460,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93647"),
                d:
                  "M1439,653c0,0.7,0,1.3,0,2c-0.5,2.8-2.7,2-4.3,2c-8.9,0.1-17.8,0-26.7,0c0,0-0.5,0-0.5,0l-0.5,0\n                        c-2.7,0.7-5.4,0.7-8,0c-0.7,0-1.3,0-2,0c-2,0.8-4,0.8-6,0c-1,0-2,0-3,0c-0.2-0.1-0.4-0.3-0.7-0.4c-0.5-4.2,3.1-4,5.5-4.6\n                        c2.4-0.6,5-0.2,7.2-1.7c1.4-0.5,2.9-0.5,4.3,0.1c0.4,0.1,0.8,0.3,1,0.6c-0.4,1.2,0.8,0.7,1.3,1.1c5.1,3.4,10.5,1.8,15.7,0.8\n                        C1427.9,651.8,1433.4,651.3,1439,653z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621125"),
                d:
                  "M374,442c-3,0.4-6,0.7-9,1.1c-4.7,1-9.3,2-14,3c-2.4-0.2-0.9-1.8-0.5-2.1c2.9-1.7,3.8-4.4,4.4-7.4\n                        c0.2-1.2,1.1-2.4,1.9-3.4c0.5-0.6,1-1.5,2-1c1,0.6,1,1.6,0.5,2.6c-1,1.1-1.3,2.2,0.1,3.4c-0.1-1-1.2-1.5-0.8-2.5\n                        c1.9-1.8,0.9-4.6,2.4-6.5c0.1-0.4,0.2-0.8,0.4-1.3c-0.2-3.7-1.5-7.4,1.1-11c1.2-1.7-0.4-3-2-3.8c-1-0.5-2.4-2.2-0.8-2.2\n                        c4.2-0.1,1.2-3,2.1-4.2c0.9-1.2,2.1-1.6,3.5-1.9c14.7-3,29.5-1.9,44.2-1.2c1.7,0.2,3.4,0,5,0.9c0.5,0.3,0.7,0.7,0.7,1.3\n                        c-2.2,2.5-5.3,1.5-8,2c-5.7,1-11.5,0.4-17.3-0.1c-0.7-0.2-0.2,1-0.2,0.3c0-0.3,0.1-0.5,0.3-0.4c2.6,1.2,5.3,0.5,7.9,0.4\n                        c4.3-0.1,6,2.3,6.6,6c1.2,7.1-2.7,12.1-7.6,16.3c-1.8,1.6-3.9,2.8-5.2,5c-1.4,2.4-4.4,1.2-7.1,3.2c4.4,0.3,7.9,0,11.4,0.3\n                        c1.8,0.1,4.2-0.7,4.7,2.2l0,0.1c-4.6,0.6-9.3,0.8-13.9,0C382.7,441.5,378.2,439.9,374,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M362,407.1c-0.1,2.9,3.7,1,4.2,3.4c-1.9,1.3-4.2-0.1-6.2,0.9c4.7,1.5,5.1,2.7,2.6,7.2\n                        c-1.2,2.1-0.7,4.5-0.2,6.8c0.3,1.3,1.1,2.5-0.5,3.4c-0.4-0.3-0.7-0.5-1-0.5c0.3,0.1,0.6,0.2,0.9,0.3c0.6,0.2,0,0.9,0.3,0.3\n                        c0.1-0.1,0-0.2-0.2-0.2c-1,2.1-0.3,4.9-2.8,6.2c-0.1-0.7,0.3-1.6-0.6-2.2c-1.2,2.3-2.4,4.5-3.5,6.8c5.6,1.9-3.1,1.4-0.5,2.8\n                        c-1.1,1.3-4.2,0.5-3.4,3.6c-1.8,1.3-4,1.3-6.1,1.9c-1.7-1.9-4.7,0.2-6-1.3c-1.9-2.2-7.1-3-4-7.8c0.4-0.6,0.2-1.7-0.7-2.2\n                        c-0.9-0.5-1.6,0.3-2.1,0.8c-1,1-2.3,1.9-1.7,3.8c0.7,2.2-1.4,2.1-2.4,2c-1.8-0.2-1.2-1.9-0.7-2.7c1.7-2.5,0.2-7.7,6-6.9\n                        c1.4,0.2,1.8-3.2,1.8-3.8c-0.3-4.8,3.2-5.1,5.9-4.5c6.3,1.4,4.4-2.7,4.6-6c-2.6,0.4-4.4,2.7-6.9,1.4c1.7-2.7,4.9-3.1,7.3-4.5\n                        c-1.6-4.3-5.3-2.6-8.2-3.2c0.4-1.2,1.3-1.9,2.4-2.3c6.3-2,12.8-3.2,19.3-4.5C360.6,406,361.4,406.4,362,407.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3404D"),
                d:
                  "M767,659c-1.7,0.5-4.2-1.2-5,1.8c-7.7,0-15.3,0.1-23,0.1c-21.1,0-42.1,0.1-63.2,0\n                        c-1.7,0-4.2,1.1-4.9-1.9l0,0c4.4-2.3,9.4-2.3,13.9-2.4c9.9-0.2,19.8,0.4,29.6,0.3c6.7-0.1,13.7-1,20.7-1.3\n                        c3.2-0.2,6.4,0,9.6,0c6,0.1,12-0.3,17.9,0.4C764.7,656.2,767,656,767,659L767,659z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93E4A"),
                d:
                  "M345,215c0.7,0,1.3,0,2,0c1.2-1,2.9-0.9,4-2l0,0c1.4-1.3,3.6-0.7,5-2c3.7-1.3,6.8-4.2,11-4\n                        c2.1,1.2,1.8,2.9,1,4.6c-0.7,1.8-2.1,2.4-3.9,2.1c-3.1-0.7-4.5,1-5.2,3.6c-0.6,0.4-1.3,0.7-2,0.8c-8.1,1.8-15.1,5.7-21.5,10.8\n                        c-1.5,1.3-3.4,1.2-5.2,1c-2.3-0.2-2.8,1.1-3,2.9c-0.3,0.3-0.7,0.6-1.1,0.7c-1.6,0.2-3.4-0.7-5,0.5c-4.1,2.2-7.4,5.7-12.2,6.5\n                        c-3.5,0.9-7,2-10.3,3.1c-4.2,1.4-8.1,4.2-12.1,6.4c-6.7,3.6-12.6,8.5-18.7,13.1c-2.2,1.6-2.5,3.5-2.1,6.1\n                        c0.4,2.7,2.3,2.1,4,2.7c3.8,1.2,7,3.3,7.6,7.7c-0.2,0.4-0.6,0.7-1,1c-1.5,0.7-3.8-1.3-4.8,1.3c-0.4,0.2-0.9,0.3-1.4,0.3\n                        c-4.8,0-9.6-0.7-14.4-0.3c-1.3-0.4-2.5-1.6-4-0.5c-0.4,0.1-0.9,0.1-1.3,0.1c-2.6-3.7-0.8-7.2,1-10.3c1.2-2.1,2.2-3.9,2.3-6.3\n                        c3.7-4.7,7.7-8.7,13.8-10.7c2.6-0.9,6.1-2.3,8.3-4.9c1.8-2,4-3.5,6.6-4.1c5.9-1.3,10.4-5.5,16.1-7.2c4.6-1.1,9.1-2.2,12.5-6.2\n                        c2-2.4,5.8-2.3,8.6-3.9c4.8-2.6,9.2-6.2,14.6-7.6C339,220.5,341.9,217.6,345,215z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5404B"),
                d:
                  "M359,217c-0.2-0.9-2-1.1-1.1-2.3c1.2-1.6,3.2-2.6,4.9-2.6c4.6-0.1,5.1-0.4,4.2-5c0.7,0,1.3,0,2,0\n                        c2.2-0.1,4.2-0.8,6-2l0,0c3.1-2,7.3-1.1,10-4c0.3,0,0.7,0,1,0c5.1-2.7,10.1-5.6,15.2-8.4c4.2-2.3,8.9-3.7,13.8-2\n                        c1.8,3-0.4,4-2.5,5.1c-2.4,1.2-5.4,1.7-6.6,4.6c-0.6,0.8-1.4,1.4-2.4,1.2c-0.9-1.4-1.9-1.6-2.7,0.1c-5,3.3-11.3,4.1-15.9,8.1\n                        c-0.7,0.7-1.3,1.5-2.2,2c-6.9-0.6-12.3,3.8-18.6,5.4C362.4,217.5,360.7,218.5,359,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA404C"),
                d:
                  "M415,191c-7.4-0.3-13.7,2.4-19.6,6.5c-2.8,2-5.7,3.9-9.4,3.4c-1.4-5,4.2-3.4,5.8-5.9\n                        c0.4-0.6,1.9-0.6,1.2-2.1c3.3-2.4,7.4-2.6,11-3.9c1.4-0.5,1.4-1,1-2c1.9-0.9,3.6-2.2,5.9-2c1.5,0.9,3.3,1.3,4.8,2.3\n                        c1.4,1,4,1.2,2.8,4.1C417.3,192.1,416.1,192,415,191z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA404B"),
                d:
                  "M385,201c-1.7,5.4-6.3,3.7-10,4C378.3,199.4,380.5,198.6,385,201z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F414A"),
                d:
                  "M345,215c-2.3,3.7-4.8,7.1-10,6c-0.6-0.7-0.6-1.4,0-2c0-0.3,0-0.6,0-1C338.2,216.6,342,217.1,345,215z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93E4A"),
                d: "M375,205c-1.9,1.1-2.5,5.8-6,2C370,203.4,373,205.7,375,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F414A"),
                d: "M356,211c-1,2.3-3.1,2-5,2C352,210.7,354.1,211,356,211z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F414A"),
                d:
                  "M351,213c-0.8,1.8-2.3,2.1-4,2C347.8,213.2,349.3,212.9,351,213z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3E49"),
                d:
                  "M623,641c-16-2.2-32,0.1-48,0c-1.9-3.2-0.3-4.6,2.7-5.2c0.8-0.2,1.7-0.3,2.5-0.1\n                        c7.7,1.9,15.4-1,23.1-0.1c4.5,0.5,8.4,0.4,8.5-5.7c0.8-2.1,1.1-4.5,4.3-4.5c2.6,0,2.6-2.3,3.2-4.2c0.7-2.3,1.8-3.4,4.1-1\n                        c2.1,2.1,5.6,2.1,8,3.9c10.3,5.3,21.6,6,32.7,7.5c10.3,0.2,20.6-0.4,30.9,0.3c2.6,0.9,5.3,0.6,7.9,0.6\n                        c31.1,0.1,62.1-0.1,93.2,0.1c0.6,0,1.2,0.1,1.7,0.2c1.6,0.4,3,1.3,4.4,2.1c1.9,1.1,4.1,1.9,5.5,3.7c1.9,2.5,0.8,5,0.2,7.6\n                        c-0.2,0.6-0.6,1.6-1.1,1.5c-5.3-0.6-9.9,3.2-15.4,2.3c-3.1-0.5-3.6-4-7-4.7c-5.4-1.1-9.6-0.5-13.1,4c-2.8,1.7-5.6,4.5-8.8,0.5\n                        c-0.6-0.8-0.8-0.5-1.2,0.3c-1.3,2.5-3.4,2.1-5.5,1.1c-0.7-1.6-0.6-3.7-3.2-3.7c-1.2,0-2.3-0.7-2.7-1.9c-0.8-2.2-2.3-3-4.6-2.9\n                        c-2,0.1-3.4-0.7-2.5-3.2c-1.7,1.7-0.6,3.5-0.5,5.2c0.2,3.5-1.1,5-3.8,3.3c-5.3-3.2-11.2-1.3-16.6-2.9c-1.1-0.3-1.9,0.2-2.7,1\n                        c-1.5,1.6-3.3,1.4-5,0.5c-3.1-1.6-6.5-0.8-9.6-1.2c-5.1-0.7-9.6,0.5-14.3,1.5c-1.6,0.3-3.8,0.4-5.7,0.5\n                        c-4.8,0.1-9.2,0.6-13.2,3.5c-0.8,0.6-1.8,0.8-2.8,0.4c-11.6-5.6-12.4-5.9-24.6-6.4c-2.9-0.4-7.4,1.5-8.5-0.9\n                        c-2.8-6.2-7-3.4-11-3.1C624,641,623.5,641,623,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3B46"),
                d:
                  "M644,645c3.5-2.7,7.4-1.3,10.8-0.3c3.1,1,8.2-2.3,8.7,3.8c2.4-0.4,2-4.5,4.7-3.2\n                        c2.4,1.2,1,3.3-0.4,6.1c4.8-2.6,8.3-5,12.9-5.2c1.2,0,2.2-1,3.5,0.1c0.7,0.6,1.8,0.9,2.4-0.5c0.5-1-2.2-2-0.3-2.7\n                        c1.6-0.6,2,1,2.3,2.4c0.2,1.1,1.2,0.8,2.3,0.5c3.9-0.8,7.5-5.6,12-1c1,1,0.8-1.8,2.8-1.6c3.5,0.4,6.9,0.6,9.9,2.6\n                        c1,0.7,2.2,0.8,2.6-0.3c1.3-3.7,3.1-2.8,5.6-1.3c0.5,0.3,3.6,3,3.9-1c0-0.2,1.1-0.5,1.2-0.4c2.3,3,6.6,1,9.1,3.4\n                        c0.8,0.8,1.9,1.8,3.1,1c1.4-0.9,0.1-2.1-0.1-3.2c-0.8-5.2,0.8-6.8,5.4-5.6c-0.1,1.8-2.6,0.5-2.9,2.3c0.3,0.2,0.7,0.7,1,0.6\n                        c3.1-0.7,5.8-0.6,6.4,3.2c0.4,2.3,2.2,1.3,3.1,1.4c3.6,0.4,3.8,2,2,4.6c-1.7,1.7-4,1.3-6,1.2c-3.4-0.1-5.1,1.3-5,4.8\n                        c-3.3,0-6.7,0-10,0c-5.5-2.1-11.1-1.1-16.7-0.8c-10.4,0.5-20.8-0.1-31.2,0.1c-7.1,0.2-14.2,0.4-21.1-1.4\n                        c-4.2-0.9-8.8-0.5-11.5-5.1c-1.1-1.9-3.7-1-5.5-0.9C645.9,649.2,644.3,648,644,645z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F47"),
                d:
                  "M666,655c1.1-0.7,1.7-2.5,3.2-1.9c8.6,3.8,17.6,1.4,26.4,1.7c11.6,0.5,23.3,0.1,34.9,0.1\n                        c1.7,0,3.9-0.8,4.4,2c-4.5,0-9.2-1-13.4,0.2c-10.9,3.1-21.8-0.5-32.6,0.6c-5.9,0.6-11.9,2.2-18,1.2c-0.1-1.7-1.3-2-2.8-2\n                        C666.9,657,666.1,656.4,666,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDB9B7"),
                d:
                  "M1529,277c-2.8,0-5.8-0.6-8,1.9c-4,0.5-8.1-1-12,1c-7.1,2.7-14.5,2.9-22,3.3c-2.4,1.5-4.8,1.7-7.1-0.4\n                        c1.1-0.4,2.1-1,3.2-1c11.4-0.2,22.4-3.2,33.6-4.6c2.7-0.3,4.6-2.6,7.3-2.2c1.9,2.2,5-0.3,6.9,1.9\n                        C1530.3,277,1529.7,277,1529,277z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984549"),
                d:
                  "M1479.9,282.9c2.4,0.1,4.7,0.2,7.1,0.4c0,0.3,0,0.5,0,0.8c-0.2,0.5-0.6,0.9-0.7,1.4\n                        c0.3,1,1.4,1.7,0.9,2.9c-0.4,0.6-1,1-1.8,1.1c-2.2-1.1-5.6-0.1-6.5-3.5c1-0.8,2-0.8,3-0.1c-1.1-1.7-4.4,0.4-4.8-2.7\n                        C1478,283.1,1479,283,1479.9,282.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E2025"),
                d:
                  "M1477,283.2c1.4,1.4,4,0.3,5.1,2.4c-0.9,0.9-2.1,0.3-3.2,0.6c-1.3,0.5-2.3-0.1-3.2-1\n                        c-0.2-0.7-0.3-1.4,0.3-2C1476.4,283,1476.7,283,1477,283.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984549"),
                d:
                  "M1476,283.1c0,0.6,0,1.2,0,1.8c-0.4,0.3-0.7,0.3-1,0c-1-0.7-2-1.3-3.1-2\n                        C1473.3,283,1474.7,283,1476,283.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53844"),
                d:
                  "M569,639c-2-1.6-2.1-3.8-2-6c2-2.7,1-5.3-0.4-7.8c-1.5-2.8-1.9-5.5-1-8.6c0.8-2.9,0.7-5.9-0.2-8.8\n                        c-1.2-3.8-1.7-7.7-1.4-11.8c0.3-2.2,0.8-4.4,3.5-4.5c3.3-0.1,2.4,2.9,3.2,5c3.2-1.3,3.7-3.6,2.5-6.3c-0.7-1.7-1.7-3.3-1.8-5.1\n                        c-0.2-2.4,0.5-4.4,3.4-4.4c2.4,0.1,3.7-0.8,4.2-3.1c0.2-1,1.5-2.3,1.9-1.8c2.4,3.2,4.6-1.2,6.8-0.1c2.3,1.2,1.3,4,3,5.6\n                        c1.5,2,1.5,4.7,2.9,6.8c1.2,1.9,1.9,4,4.4,4.9c1.3,0.5,2.5,1.7,2.9,3.2c0.6,2.7,2.5,3.7,4.9,4.1c1.7,0.9,3.1,2.2,3.6,4.1\n                        c0.7,0.6-1.5,2.2,0.8,2.2c0.4,0,0.8,0.1,1.2,0.3c0.7,0.6,1.1,1.4,0.8,2.4c-0.4,1-1.6,1.8-0.5,3.4c1.5-0.5,0.3-2.5,1.5-3\n                        c3.3,0.3,5.2,2.2,6,5.4c-5.9,3.9-8.5,3.8-12.7-0.3c-3.8-3.7-11.1-3.4-14.3,0.7c-0.6,0.8-1,1.7-2.2,1.9c-2.3-1-5-0.8-7.1-2.9\n                        c-2.1-2.1-6.4,0.4-6.6,3.6c-0.4,4.9,0.8,9.9-0.8,14.8c-0.5,0.6-1.2,0.8-2,0.6c-0.5-0.2-0.8-0.5-1.1-0.9\n                        c-1.3-3.4-0.3-6.9-0.4-9.5c0.2,2.9-2,6.4-1.2,10.2C570.7,635.4,570.6,637.4,569,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03641"),
                d:
                  "M588,576c-3.2-0.4-3.2,3.2-5.2,4.5c-0.9-1.3,0.5-3.5-2.2-4.1c-0.3,4.1-1.9,5.7-6.7,5.7\n                        c-3,0-1.1,4.5,0,6.5c2.2,4.2,1.5,7.6-2.4,9.5c-2.3,1.2-2.6-0.3-2.8-1.8c-0.2-1.4,2.4-3.3-0.5-4c-2.4-0.5-2.8,2.3-4.1,3.6\n                        c-2.1-3.9-3.9-7.9-5.2-12.2c-0.6-1.8,0.2-3.2,0.2-4.8c-0.3-2.5-1.5-4.7-1.8-7.2c0.3-1.8,1.3-3.4,2.4-4.8\n                        c0.6-0.7,1.8-1.5,1.6-2.4c-1.8-7,2.8-4.7,5.8-3.8c3,0.9,5.4-1,8.1-1.2c3.8,3.8,5.7,9.5,11.4,11.5c1.4,1.1,2.4,2.4,2,4.3\n                        C588.3,575.7,588.1,575.9,588,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63344"),
                d:
                  "M558,571c0,2.7,1.5,5.2,1,8c-1.3-0.6-0.6-2.1-1.4-3.1c-1,0.9-0.3,2.1-0.5,3.1c-1.3-3.3-2.7-6.7-4-10\n                        c-1.8-6.7-5.7-12.8-6-20c0-2.2,1.2-1.4,2.2-0.8c-0.4,2.2,1.7,3.2,2.5,4.9c0.4,1.8,1.8,2.9,2.9,4.2c0.2,4.1,1,8,3.5,11.5\n                        C558.6,569.4,558.6,570.3,558,571z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1414B"),
                d:
                  "M556.1,135.1c2.4-0.5,4.9-0.7,7.1-2c3.9-0.7,7.8-1.4,11.7-2.1c10.7-0.7,21.1-3.9,31.7-5.2\n                        c2-0.2,4-0.2,6-0.1c1.4,0.1,2.8,0.1,4.1,0.8c1.6,1.6,0.8,2.7-1,3.3c-1.4,0.5-2.9,1-4.4,0.9c-3.5-0.3-6.9-0.7-9,3\n                        c-0.1,0.2-0.6,0.4-0.9,0.3c-9.4-0.7-17.7,5.8-27.3,4.3c-5.7-0.9-9.2,4.2-14.3,5c-2.1,0.3-4.5,0.3-6.3,1.1\n                        c-3.6,1.6-8.4,0.3-11.1,4.4c-0.9,1.4-2.6,1.4-4.1,1.4c-2,0-4,0.3-5.7,1.5c-11.8,2.5-23,7-34.9,9c-1.5,0.2-2.9,0.5-4.4,0.3\n                        c-1.4-0.3-2.6-0.8-3.5-1.9c-0.8-1.9,0.5-2.7,1.9-3.3c5.3-2.2,10.6-4.9,16.9-4.1c-0.7-1-2-1.4-1.6-2.7c0.3-0.1,0.6-0.1,0.9-0.1\n                        c9.3-1.1,17.9-5,27-6.9c3-1.5,6.1-2.4,9.5-2.4C548.9,139.7,552,136.1,556.1,135.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("923F49"),
                d:
                  "M415,188c-1.2-1.1-3.8-0.4-4-3c8.4-3.5,16.9-7.1,25.3-10.6c1.6-0.7,3.5-0.9,4.8-2.4c2-0.7,4-1.4,6-2\n                        c1,0.9,2.6,1.4,2,3.3C439.2,181.9,428.5,188.2,415,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0454E"),
                d:
                  "M507,149.1c0.7,1.4,2.8,1.2,3.4,3.3c-4.2,1.4-9-0.1-12.8,2.6c-2.4,1.7-5.9,1.2-7.7,4.1\n                        c-7.8,2.7-15.5,5.7-23.3,8.5c-1.8,0.2-2.9-0.9-3.8-2.1c-0.3-0.5-0.2-0.9,0.1-1.4C477.6,158.9,492,153,507,149.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A03D48"),
                d:
                  "M463.1,165c1.5-0.1,1.9,1.4,2.9,2c0.8,0.7,1.1,1.6,1.4,2.5c1.3,5.3-0.6,7.4-6,6.7\n                        c-1.1-0.2-2.2-0.5-3.1-1.2c-2.5-2.5-5.5-2.4-8.7-1.7c-0.2-0.1-0.4-0.2-0.6-0.3c-0.6-1-2.2-1.4-2-3c1.2-0.7,2.5-1.1,3.9-1.1\n                        C455,167.8,459.4,167.5,463.1,165z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2434C"),
                d:
                  "M535,143c-9,2.2-17.4,7.1-27.1,6c4.4-1.6,8.8-3.2,13.2-4.9c3-0.7,5.9-1.3,8.9-2\n                        C531.7,142.5,533.6,141.3,535,143z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B444C"),
                d:
                  "M463.1,165c-2.8,5.2-7.7,3.9-12.2,3.9c3.6-2.7,8.2-3,12.1-4.9C463,164.4,463,164.7,463.1,165z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B17C7B"),
                d:
                  "M2078.9,585c-0.3,2.1-1,4.1-2,6c-3-0.8-2.2-3.3-2.3-5.3c-0.9-11.6,1.8-22.8,4.3-34\n                        c2.2-10,3.5-20.2,5.5-30.3c1-5.2,1.9-10.3,2.3-15.6c0.9-2.4,3.5-3.5,4.4-6c1.4,3.6,1.6,7.3,2,11c0,4.4-0.1,8.7-0.1,13.1\n                        c-5.4,10.1-7.1,21.4-10.4,32.2c-1.4,4.6-3.3,9-3.6,13.8c-0.8,1.7-1.9,3.3,0,5C2080.1,578.3,2078.6,581.6,2078.9,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A87070"),
                d:
                  "M2091.1,499.9c0.5,2.6-1.3,3.9-3.1,5.1c-1.7-1.9-1.3-4.7-2.8-6.7c-0.6-2.6-1.3-5.2-1.7-7.8\n                        c0-1.6-0.3-3.3-0.6-4.9c-0.1-1.8,0.2-3.5,0.9-5.1c0.5-0.9,1-1.8,2.3-1.8c2.5,2.3,1.6,5.7,2.8,8.4c0,0-0.1,0.1-0.1,0.1\n                        C2089.6,491.4,2090.3,495.6,2091.1,499.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61B2B"),
                d:
                  "M1845,514c-1.5,0.2-2.4,0.8-1.2,2.2c1.3,1.5-0.5,1.9-0.8,2.8c-3.2,4.6-6.8,0.3-10.4,0.4\n                        c1.1,1.3,3.5,1.2,3,3.5c-0.5,2.3-2.3,3.2-4.3,3.6c-2.9,0.6-5.9,1.3-8.5-1.2c-0.2-4.4-5-5.1-6.8-8.3c0-0.3,0-0.6-0.1-1\n                        c0-1.2,0-2.4,0.9-3.3c2.5-1.1,4.2-0.2,5.2,2.4c0.8-2.1,0-3.9-1.1-5.6c-1-1.7-1.6-3.7,0.5-4.7c2.1-1,4.1-0.2,4.5,2.3\n                        c0.9,5.3,4.6,4.6,8.3,4c0.2,0,0.5,0.6,0.6,0c0.8-4.9,1.1-5,5.9-3c0.3,0.1,0.6,0.2,1,0.3C1844.3,509.3,1845.2,511.3,1845,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1A26"),
                d:
                  "M1841,509c-0.4,0.6-1.2,1.1-1.6,0.3c-1.2-2.2-3.2-0.7-4.8-1.2c-0.4,2.1,1.2,2.7,4.1,3.7\n                        c-3.6,0.6-5.8,0.3-8,1c-3.6,1.2-4.7-1.9-5.6-4.7c-0.4-1.1,0.2-2.8-2-2.7c-0.8,0-1.7-0.3-2,0.8c-0.4,1.2,0.2,2.1,1.2,3\n                        c2.4,2.1,1.4,4.6,0.4,7.3c-1.8-1.8-3-4-5.8-3.5c-3.1,0.4-3.3-2.7-5-4c-0.7-1-1.4-2-2-3c2-3.5,5.1-5.9,8.7-7.6\n                        c0.5-0.1,0.9-0.1,1.4-0.1c4,0,7.6,0.8,10.1,4.4c1,1.4,2.7,1.8,4.4,1.4c2.1-0.3,4.3-0.5,6.4,0c0.4,0.1,0.9,0.4,1.2,0.7\n                        C1843.3,506.6,1841.5,507.6,1841,509z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA222F"),
                d:
                  "M1823,525c3.2,1.3,6.4,0.9,9.5-0.1c1-0.3,2.8-1,2.2-2.8c-0.8-2.5-2.3,0.2-3.5-0.2c0-4.2,1-6.5,5.3-3\n                        c2.1,1.7,4.3,1.1,6.5,0c0.4,0.5,0.8,1,1.1,1.5c-5,3.3-8.3,8.6-14.5,10.7c-3.2,1.1-4.3-2.5-6.7-1.3c-0.8-0.5-0.9-1.2-0.9-2.1\n                        C1822.6,527.1,1821.8,525.7,1823,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2636"),
                d:
                  "M1784,474c0.4-0.8,1.2-1,2-1c2.9,0,5.3,2.1,8.3,2c2.4,0.8,5,1.1,7,2.9c0.6,2.1-0.6,2.7-2.4,2.9\n                        c-1.3,0-2.5-0.6-3.9-0.3c-1.1,1.8,1.6,3.3,0.4,5c-0.2,0.2-0.3,0.3-0.5,0.5C1791.1,482.2,1788.4,477.3,1784,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1819,499c-3.2,2.1-5.4,5.5-9,7c-0.3-0.3-0.7-0.7-1-1c-0.5-0.6-0.6-1.3-0.4-2c0.7-1.7,3.2-2.3,2.5-4.9\n                        c-0.8-3.4,1.9-4.6,4.3-4.4C1818.2,493.8,1820.4,495.5,1819,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A11F31"),
                d:
                  "M1823,525c0,1.1,0.2,2.2-1,3c-2-3.7-4-7.3-6-11c2.8,0.8,4.7,3.2,7.4,4.2\n                        C1826.3,522.4,1822,523.6,1823,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2636"),
                d:
                  "M1802,494c-3.7-1.5-4.6-5.4-7-8l0.1-0.1c2.2-2.6,3.6,0.2,5.3,0.8c1.2,2,2,4.2,2,6.6\n                        C1802.2,493.6,1802.1,493.8,1802,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2636"),
                d:
                  "M1809,503c0,0.7,0,1.3,0,2c-3.1-3.2-5.5-6.8-7-11c0,0,0.1-0.1,0.1-0.1\n                        C1806.6,495.2,1808.4,498.7,1809,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A11F31"),
                d:
                  "M1812,509c2.9-0.2,2.8,3.3,5,4c0,1.1,0.2,2.3-1,3C1813.8,514.1,1811.9,512.1,1812,509z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("966868"),
                d:
                  "M1929,320c-6.3-2.2-12.7-3.7-19.2-4.9c-1.8-0.3-3.5-0.5-4.8-2.1c2-1.1,4-0.6,6,0l0,0\n                        c2.3,0.8,4.7,1.2,7,1.9l0,0c2.3,0.9,4.7,1.2,7,2c1,0,2,0.1,2.9,0.1c21.8,6.1,44,11.2,65,20c1,0.3,2,0.7,3,1\n                        c1.6,0.9,3.5,1,5,2.1c0.4,0.8,1.2,0.9,2,0.9c1.7,1.6,3.8,2.4,6,3c-0.3,0.6-0.7,1.3-1,1.9c-4,0.5-7.3-1.5-10.6-3.1\n                        c-4.8-2.2-9.8-3.7-14.8-5.3c-7.7-2.8-15.3-6-23.4-7.8c-2.4-1.3-5-2.1-7.6-2.4c-2.5-0.5-4.9-0.9-7.2-2.1\n                        c-4.5-2.3-9.7-2.2-14.2-4.2C1929.7,320.8,1929.3,320.4,1929,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE908F"),
                d:
                  "M1993,337c-5.9-0.6-10.9-3.7-16.4-5.3c-14.6-4.2-29.1-8.5-43.6-12.7c-1.7-0.5-3.6-0.7-5-2\n                        c9.4,1.1,18.2,4.4,27.3,6.8c10.4,2.7,20.7,5.8,30.8,9.4C1988.6,334.1,1991.1,335,1993,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A28281"),
                d:
                  "M1911,313c-2,0-4,0-6,0c-7.6-1.7-15.2-3.3-22.9-5c-0.8-0.2-1.4-0.7-2.1-1c10.3-0.2,20,3.4,30,5\n                        C1910.3,312.3,1910.6,312.7,1911,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A28281"),
                d:
                  "M1925,317c-2.6,0.1-5-0.3-7-2C1920.6,314.9,1923,315.4,1925,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A28281"),
                d:
                  "M1918,315c-2.6,0.1-4.9-0.4-7-1.9C1913.6,312.9,1915.9,313.4,1918,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B19391"),
                d:
                  "M2000.9,340.1c-1.9-0.1-3.7-0.5-5-2.1C1997.9,338,1999.8,338.3,2000.9,340.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902936"),
                d:
                  "M1830,547c-1.6-1.7-2.6-3.7-3-6c1.3-1.3,2.6-2.7,4-4c4.8-1,7.8-5.8,12.9-6.4c1-0.1,1.8-1.9,2.3-3.4\n                        c0.6-1.7,2-3.3,4.2-3.6c2.9,1.7,3.6,4.4,3.5,7.4c-0.2,0.9-0.7,1.9,1,1.9c1,0.9,1,1.9,0.6,3c-0.9,1.6-2.5,1.2-4,1.3\n                        c-2.2,0.2-4.3,0.2-6.5-0.2c-0.2,3.3-3.2,2.7-5.1,3.6c-1.8,0.9-1.7,2.7-2.4,4.2C1835.8,548.3,1832.9,547.5,1830,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831725"),
                d:
                  "M1849,519.1c-1-1.3-2-2.7-3-4c-1.1-3.4-2.8-6.6-4-10v0c-3.7-4.8-8-9.2-9.4-15.5\n                        c0.1-0.5,0.4-0.8,0.8-1.1c1.3-0.5,2.6-0.1,3.8-0.1c0.8,0,2.8,2.3,2.1-1c-0.1-0.6,0.5-1.4,1.1-1.4c2,0.2,2.4,1.9,2.9,3.4\n                        c1.1,2.7,3,5,4.1,7.7c0.7,4.6,0,9.9,5.6,12.4c1,0.5,0.7,2.5,2.1,3c0,1.1-0.8,1.5-1.5,2c-0.7,0.5-1.4,1-2,1.5\n                        C1850.6,516.8,1850.3,518.4,1849,519.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92202F"),
                d:
                  "M1850,524c-2.6,1.7-2.2,5.8-5,6.9c-4.7,1.9-8.3,6.4-14,6.1c5.8-5.5,13-9.5,17.9-16\n                        c0.2,0.1,0.4,0.2,0.5,0.3C1850,522.1,1850.7,522.9,1850,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931928"),
                d:
                  "M1842,505c2.5,2.9,4.4,6,4,10c-0.3-0.3-0.7-0.7-1-1c-1.7-1.4-1.2-4.5-4-5\n                        C1838.9,507.1,1842.8,506.6,1842,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1849,519.1c0.2-1.6,0.7-3,2-4.1c1.1,0.8,1.7,1.9,1.6,3.3c-0.6,1.7-0.9,3.8-3.6,2.7c0,0-0.2,0-0.2,0\n                        C1848.9,520.3,1848.9,519.7,1849,519.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A94851"),
                d:
                  "M693.3,111.1c8.6-0.7,17.2-1.4,25.8-2.1c1,2.5-0.9,2.9-2.5,3.2c-5.2,0.8-10.6,1.5-15.7,2.5\n                        c-8,1.7-16.2,0.6-24.1,3.1c-5.1,1.6-10.5,1-15.8,1.8c-7.3,1.1-14.7,2.7-22.2,2.9c-3.6-0.2-7.5,1-10.8-1.4\n                        c0.7-1.1,1.9-0.8,3-1.1c20.3-2.7,40.6-5.4,60.9-8.2C692.4,111.7,692.8,111.4,693.3,111.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A54853"),
                d:
                  "M613,127c-8-0.5-15.6,1.1-23.3,3.6c-4.5,1.4-9.8,0.3-14.8,0.4c10.9-3.6,22.3-4.6,33.4-6.9\n                        c5.5-1.1,11.1-1.9,16.6-2.8c0.8,2.2-3.4,1.3-2.4,4c0.2,0.6-2.5,1-3.9,1C616.7,126.2,614.7,125.4,613,127z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE434D"),
                d:
                  "M613,127c0.2-1.4,1-2.2,2.3-1.9c4,0.7,7.1-0.9,9.6-3.8c1-0.1,2.1-0.1,3.1-0.2c3.7,0,7.3,0,11,0\n                        c1.1,1.4,1.2,2.9,0.1,4.3c-7.2,3.3-14.5,4.7-22.1,1.7C615.7,127,614.3,127,613,127z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1C2C"),
                d:
                  "M1794,476c-3.1,0.1-5.9-0.6-8-3c0-3.2,1.3-4.9,4.6-3.3c1.1,0.5,2.1,0.8,2.6,0c1.6-2.8,4.4-3.6,7.8-4.8\n                        c-4.3-1.9-8.3-1.1-11.9-1.9c3.4-2,7.1-2.1,10.7-1c2.6,0.8,6.2-3,7.5,0.4c0.9,2.4-4.1,2.4-5,5.1c-0.1,0.2-0.1,0.3-0.2,0.4\n                        c-1.3,1.1-2.8,2.1-1,4c0,0.3,0,0.7,0,1c1.2,2.5-0.7,2.6-2.3,2.8C1797.2,476.1,1795.6,475.5,1794,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE4851"),
                d:
                  "M994,109c7,1.1,14.1,1.9,21.1,3.3c2.3,0.4,4.6,0.5,6.9,0.8c1.3,1.7,3.8,0.2,5.2,1.9\n                        c-4.7,2.1-9.4,0.2-14.1,0.1l0,0c-3.1-1.1-6.4-0.9-9.6-1c-2.9,0-5.5-1-8-2C994.1,111.5,993,110.7,994,109z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA434C"),
                d:
                  "M1013,115c4.7-1.1,9.4,0.6,14.1-0.1c3.4,0,6.8,0.7,9.9,2c-5.2,2.7-10.5,0.8-15.4-0.5\n                        C1018.7,115.7,1015.3,118.4,1013,115z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B34653"),
                d:
                  "M1055.1,121c-4.9,0.2-9.7,0.5-14.3-1.9c-1-0.5-1.6-0.9-1.8-2C1044.4,118,1049.9,118.7,1055.1,121z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA8E8B"),
                d:
                  "M2079,570c-1.9-3.3,0.5-6.1,1.3-9c2.1-8.1,4.2-16.2,5.9-24.5c1-4.6,3.6-8.9,6.8-12.6\n                        c0,4.6-1.6,8.6-3.1,12.9c-3.6,10.2-6.6,20.6-9.9,31C2079.8,568.6,2079.4,569.3,2079,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA8E8B"),
                d:
                  "M2078.9,585c-2.1-3.3-0.6-6.6,0-9.9c0.7,1,1.3,2,2,3C2080.9,580.5,2080,582.7,2078.9,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M239,601c-0.3-1.7,0.5-3.5-0.8-5.6c-2,2.9,0.5,6-0.8,8.5c-0.5,1,1,3-1.4,3.1c-1.5,0-3.6,0.7-4.3-0.5\n                        c-2-3.6-7.2-5.5-5.9-11.1c0.6-2.5-2.6-3.4-4-5.1c-1.4-1.7-1.5-3.1-0.5-4.3c1.7-2.1,2.1-4,1-6.4c-0.5-1.2,1.5-2.9-1-3.7\n                        c-2.2-0.7-3.5,0.7-4,1.9c-1.8,4-7,5.2-7.8,9.8c-1.8-0.3-1.5-3-3.5-2.6c-0.1-0.2-0.2-0.4-0.3-0.6c-0.1-4.1,0.4-8.3-1.7-12.1\n                        c-1.2-2.2,0.6-3.6,2.2-3.3c6,1.1,5.5-2.9,5.6-6.5c0-1.2,0.1-2.3,0.8-3.3c0.1-0.1,0.2-0.3,0.4-0.3c3.9-1.8,8.1-6.6,11.2,1\n                        c3.6,0.1,5,2.1,4.3,6.6c2.1-2.7,4.1-3.2,6-1.4c1.9,1.7,1.1,3.5,0.4,5.5c-0.9,2.3-1.4,4.8-1.6,7.3c-0.1,2.7-0.1,5.9,4.4,5\n                        c0.6-0.1,1.1,0.6,1.3,1.3c1.6,1.3,2.3,2.9,1.9,4.9C238.5,592.7,241.6,597.3,239,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2E3B"),
                d:
                  "M239,584c-3.2-2.5-2.7,2.3-4.5,2.4c-3.1-6.2-3.4-12.2,0.2-18.3c0.7-1.2-0.1-2.2-1.2-2.9\n                        c-1.1-0.7-2-0.9-2.9,0.5c-0.8,1.2-2,2.9-3.6,1.8c-1.7-1.1,1.5-1.9,0.7-3.3c-0.3-0.5-0.1-1.8-0.3-1.8c-3.8-0.8-6.2-3.1-7.6-6.7\n                        c-0.2-0.5-1.3,0.4-1.4,1c-0.1,4.7-3.3,2.1-5.3,2.3c-0.3-0.4-0.5-0.8-0.5-1.2c0.1-2,0.4-4,0.3-6c0.4-0.9,1.2-1.4,2-1.9\n                        c3.5-1.8,6.9-4.5,10.4,0.3c0.7,1,2.8,0.3,4.1-0.7c0.8-0.6,1.6-1.2,2.7-0.6c3.6,2,7.4,12.1,6.2,16.7c1.1-1.4,0.2-4.8,2.7-4.4\n                        c2.3,0.3-0.1,3.3,1.2,4.8C241.9,572.1,240.5,578.1,239,584z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2B37"),
                d:
                  "M242,566c-1.6-0.9-0.5-2.8-1.5-4.2c-1,1.8-1.8,3.5-1.3,5.5c0.4,1.6-0.6,1.7-1.7,1.5\n                        c-1.3-0.2-1.8-1.3-1.2-2.2c3.4-5.4,0.6-9.2-3-13c-1-1.1-1.4-2.8-2.6-5.1c-0.2,5.4-4.4,2.2-6.2,4.2c-0.1,0.1-1-0.2-1.2-0.5\n                        c-3.2-4-3.2-4-8.4-1.2c-1.4-2.7,1-4.6,1.5-6.9c3.3-3.3,6.2-7.6,11.9-3.4c0.6,0.4,3.7-1.5,5.6-2.6c2.8-1.6,4.8-1.2,6.3,2\n                        c1.9,4.2,3.9,8.3,4.7,12.8C246.1,557.8,243.3,561.7,242,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80262F"),
                d:
                  "M245,553c-2.7-0.6-0.8-4.5-3.6-5c2.3-3.7-2.9-5-2.6-8.3c0.2-1.8-1.6-1.8-3-1.3\n                        c-0.3,0.1-0.5,0.5-0.8,0.6c-2.9,0.8-4.8,4.1-9,1.4c-3.1-2-5.9,2.6-9.1,3.7c-0.2-0.2-0.3-0.4-0.5-0.6c0.4-5.3,2.5-9.8,5.8-13.9\n                        c6.7,0.4,13.5,0.6,19.7,3.5c1.3,1.4,3.3,2.2,3.1,4.7c-0.1,1.1-0.6,2.9,1.6,2.9c1.5,0,2.5-0.5,2.5-2.3c0-1,1-1.2,1.8-1.3\n                        C249.4,542.5,248.4,548.2,245,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA434C"),
                d:
                  "M994,109c3.6,3.5,8.1,3.8,12.7,4.1c2.1,0.1,5.1-1.8,6.3,1.9c-4.3,2-8.7-0.8-13,0\n                        c-2.5,2.7-5.6,1.4-8.2,0.7c-5.1-1.4-10.3-2.3-15.6-1.8c-6.6-2.6-13.7-0.4-20.4-2.4c-1.5-0.5-3.8,0.1-3.6-2.7\n                        c3.4-2.2,7.1-0.8,10.6-1.1c7.7,0.1,15.4-0.5,23,1.8c1.7,0.5,3.6,0.2,5.3-0.5C992,108.9,993,109,994,109z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE4851"),
                d:
                  "M991.1,108.9c-0.9,3.5-4.2,2.6-5.7,1.9c-6.8-3.1-13.9-1.2-20.9-1.8c-0.5,0-1,0-1.5,0\n                        c-1.1-1.7-5.1-0.2-4.3-3.9c0.4-0.5,0.8-0.5,1.3-0.1c1.6,0,3.3,0.1,4.9,0.1c7.5,1.9,15.3,1.6,22.9,3\n                        C988.9,108.2,990.1,107.9,991.1,108.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2088.9,487.1c-1.8-2.4-1.8-5.4-2.9-8.1c-0.6-0.7-0.6-1.3,0-2c0,0,0.1-0.1,0.1-0.1\n                        C2090.9,479.3,2088.8,483.5,2088.9,487.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE6C6D"),
                d:
                  "M2084,486c0,1.3,1,2.7,0,4c1.2,4.2,0.5,8.5,0.3,12.8c0.4-1.7-1.3-4,1.7-4.8c2.6,1.8,2,4.5,2,7\n                        c-1.1,18.2-5.6,35.9-9.2,53.6c-1.8,9.2-3.1,18.3-2.8,27.6c0,1.6-0.6,3.4,0.9,4.7c-0.8,1.6-1.2,3.3-0.9,5\n                        c-0.2,1.5,0.3,2.7,0.9,4c-0.2,0.8-0.7,1.4-1.6,1.6c-0.8,0.1-1.5-0.2-2-0.9c-0.8-1.6-0.5-3.2-0.3-4.9c0.1-1.3,0.7-3-0.1-3.9\n                        c-4.7-5.2-0.7-11-1.1-16.4c-0.4-5.6,0.4-11.3,2.2-16.7c2-5.7,2.2-11.8,4.3-17.4c0-0.1,0.1-0.3,0.1-0.5\n                        c-3.6-10.5,1.9-20.6,1.3-30.9c-0.1-1.9,0.3-3.6,0.7-5.4c0.9-4.1,0.1-7.5-1.3-9.5c-2.1-3.2-4.3-6.3-6.6-9.4\n                        c-1-2.1-1.7-4.3-0.1-6.5c2.4-1.2,3.1,1,4.2,2.2C2078.7,483.6,2080.8,485.6,2084,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C6A6A"),
                d:
                  "M2076,600.8c0.3-0.3,0.6-0.6,0.9-0.9c1.5-0.1,3,0,4.4-0.3c10.6-2.2,16.6,4.3,13.5,14.6\n                        c-0.3,0-0.6,0-0.9,0.1c-2.1,0.2-3.2-1.5-4.6-2.6C2084.9,608.2,2080.8,604.1,2076,600.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B313B"),
                d:
                  "M172,621c4.7,1.8,10.1-0.1,15.2,2.7c-2.1,1.5-5.1-0.5-5.8,3c6.8,1.6,12.1-4.6,18.5-3.7\n                        c-1,3.2-4.4,2.2-6.5,3.6c-9.9,6.8-19.3,4.6-28.5-1.7c-0.8-1.9-1.2-4.1-3.7-4.8c-3.4-0.8-4-3-2.8-6c0.5-0.6,1.1-0.8,1.9-0.8\n                        C164.9,614.9,168.5,617.9,172,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82353E"),
                d:
                  "M159,614c-0.2,2.8-0.2,5,3.9,5.2c3.1,0.2,3.3,3.1,2.1,5.8c-0.3,0-0.7,0-1,0c-7-5.3-14-10.7-21-16\n                        c-2-1-3.3-2.6-5-4c-2.8-1.6-3.1-4.2-3-7c3.4-0.8,5.1,2.1,7.5,3.3c4.4,3.3,8.8,6.8,13.6,9.5C157.5,611.6,158.7,612.3,159,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A28281"),
                d:
                  "M1880,307c-8.5-0.4-16.8-2.1-25-4c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3\n                        c0.4,0,0.7,0,1.1-0.1c2.2,1.5,4.6,0.9,7,1.1c1.9,1.2,4.1-0.3,6,1l0,0c1.5,1.2,3.5-0.2,5,1C1876.2,305.1,1878.3,305.5,1880,307\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A78C8B"),
                d:
                  "M1869,304c-2-0.3-4.2,0.8-6-1C1865,303.3,1867.2,302.3,1869,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A78C8B"),
                d:
                  "M1874,305c-1.7-0.2-3.6,0.7-5-1C1870.7,304.2,1872.6,303.4,1874,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60121F"),
                d:
                  "M490.9,476c-11.4-8.4-23.5-15.5-36.1-22c0.2-0.7,1.3-1,1.3-1c-4-0.5-7.1-3.7-11.1-4.1l0,0\n                        c-1-0.9-2.4-1.1-3.6-1.6c-1.3-0.6-3.3-0.8-2.7-2.9c0.5-1.6,2.2-2.1,3.6-2.1c2.1,0,4.3-0.1,6.4,0.6c2.4,0.8,4.6,0.5,6.7-0.8\n                        c3.5-2.3,5.8-1.5,6.4,1.7c-0.5-0.9-1.6-2.9-0.1-4.8c1.6-1.9,2.8,0.4,4.1,0.5c2.3,0.3,5-0.1,7.2-0.9c2.4-0.8-0.1-3.3,0.7-4.9\n                        c0.5-0.6,1.2-0.8,2-0.7c1.3,0.2,2.1,1.2,2.8,2.2c0.4,0.6,0.7,1.3,0.8,2c0.1,1-1,2.8,0.6,2.9c5.4,0.4,2.3,2.5,1.5,4.9\n                        c-0.8,2.1-3.4,4.6-0.5,7.3c0.2,0.4,0.2-0.5,0-0.5c-1.7-0.7-1.6-2.1-0.5-3.1c2-1.7,4.1-4.4,7.1-1.3c0.3,0.4,0.5,0.8,0.6,1.3\n                        c0.1-0.5-0.3-0.9-0.5-1.3c-0.8-1.4-1.8-2.9,1-3c3-0.1,5.4,0.8,6.8,3.8c1.4,2.9,0.4,4.7-2.2,6.2c2.1-1.7,3.9-0.2,6.2,0.7\n                        c-0.3-2.7-2.9-3.8-2.8-6c0.2-0.4,0.6-0.7,1.1-0.9c0.7-0.2,1.4-0.1,2.1,0.2c1.3,0.7,2,2,2.9,3c5.1,5.2,9.5,11.1,14.5,16.4\n                        c0.4,0.6,0.6,1.3,0.8,2c0.1,0.5,0.2,1,0.2,1.5c-0.4,7.7-0.8,8-7.3,4c-1.3-0.8-2.4-1.5-4.1-1c-1.4,0.4-2.6-0.5-3.3-1.7\n                        c-0.4-0.7,0-1.6-0.3-2.4c1.5,2.3-3.1,1.3-2,3.9c2,4.5,1.7,4.7-3.4,3.7c-1.1-0.2-1.9,0.1-2.9,0.4\n                        C493.2,478.4,492.4,476.6,490.9,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M445,449c5.4,0.1,10,2.6,14.5,5.5c-1.5-0.1-3.1-0.3-4.6-0.4c-1.9,0-3.2-1.4-4.8-2\n                        C448.9,450,446.3,450.6,445,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F222D"),
                d:
                  "M490.9,476c1.8-0.2,2.7,1.4,4.1,2c1.2,0.2,2.4,0.4,2,2c-0.6,0.1-1.2,0.3-1.8,0.4\n                        C493.8,479,492.3,477.5,490.9,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("482627"),
                d:
                  "M121.8,339c0-3.3,0-6.6,0-9.9c-0.6-3.8,1-6.9,3.3-9.7c1.2-1.5,2.9-2.7,3.8-4.4\n                        c0.6-0.7,1.2-1.4,1.8-2.2c2.3-1.7,2.7-4.6,4.2-6.8l0,0c0.5-0.6,1.1-0.6,1.8-0.4c1.7,1.2,3.5,1.2,5.5,0.9\n                        c0.5,0.1,0.8,0.3,1.1,0.7c0.3,1.4-0.4,2.4-1.6,2.5c-2.5,0.2-3.3,2.2-4.6,3.9c2-0.1,3.8-0.1,5.1,1.4c-3,2.3,1.2,1,1,2\n                        c0,1.5-1.2,2-2.3,2c-5.5-0.3-9.4,3.1-13.8,5.5c-2,1.5-2.9,3.5-2.6,6c0.5,2,0.3,3.9,0.1,5.9c-0.5,4.3-0.7,8.6,2.3,12.3\n                        c1.2,4.4,0.8,9,3.3,13.2c1.1,1.8-0.4,4.8-3.4,5.5c-3.4-2.7-1.7-6.8-2.6-10.1c-0.5-1.7,0.2-3.7-1.1-5.2\n                        C121.8,347.7,122.2,343.4,121.8,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C4D4F"),
                d:
                  "M123,352c3.3,2.8,2,6.9,3,10.4c0.4,1.5-0.4,3.3,1.1,4.6c1.4,0.6,2.8-0.5,4.2-0.2\n                        c1.4,0.1,2.9,0.1,3.9,1.4c0.7,0.2-1.1,1.3,0.2,1.1c1.4-0.2,2.6-0.4,3.9,0.1c0.7,0.4,1.1,0.9,0.9,1.7c-2.5,3.2-6.6,1.4-9.7,2.9\n                        c-0.3,0.3-0.6,0.6-1,0.9c-0.2,0.1-0.4,0.2-0.6,0.3c-0.6-0.4-1.3-0.7-1.9-1.1C123.9,367,122.1,359.7,123,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M474,434c1,1.5,2.1,2.8,1.6,4.9c-0.2,0.7,0.2,2-0.9,1.9c-3.2-0.5-6.4-1.2-9.1,1.6c0,0-0.3-0.2-0.4-0.2\n                        c-1.4-0.5,0-3.9-2.3-2.7c-2.4,1.3,0.1,3.5,0,5.4c0,0.7,0,1.3,0,2.8c-1.2-1.8-2.2-3-2.7-4.3c-0.5-1.4-1-2.1-2.3-0.9\n                        c-4.3,4.2-9.4,1.8-14,1.3c-2-0.2-2.9,0.9-4.6,0.6c0.9,3.3,4.9,2,5.7,4.8c-7.3-1.8-14.6-4-22-5.4c-7.3-1.3-14.7-1.8-22-2.6\n                        c-4.6-2-9.5-0.4-14.2-1c-1.5-0.2-4,1.1-4.1-1.2c-0.1-1.8,2.6-3.3,4-3c4.4,0.8,5.4-1.6,5.7-5c0.1-0.7,0-1.2,0.9-1.4\n                        c6-1.3,11.5-8.8,10.5-14.5c-0.6-3.8-2.6-6.6-6.8-5.7c-3.3,0.7-6-0.2-10.1-2.2c10.3,0.5,19.2-0.4,28.2-0.9\n                        c4.7-2.4,9.3-1.7,13.8,0.7c0.2,3.6-2.7,3.3-4.7,3.3c-3.1,0-6.3-0.2-9.4-0.8c-1.4-0.3-3.3-0.5-3.2,1c0.2,4-2.7,6.7-3.2,10.3\n                        c-0.2,1.3-0.8,2.9,0.6,3.6c1.5,0.8,2.8-0.5,4.1-1.1c1.7-0.7,1.1-4,3.6-3.5c2.5,0.5,4.2,2.5,6.5,4.4c0.4-1.4,0.1-3.4,1.8-3.6\n                        c4.6-0.5,9.2-3.9,13.9-0.4c3.6,2.8,7.6,2.7,11.7,1.9c2.6-0.4,4.7-0.2,5.6,3.3c0.9,3.8,3.1,1.2,4.8,0.3c1.6-0.8,3.4-2.1,5-0.5\n                        c1.2,1.2,1.1,3.2,0.6,4.8c-1,3.3-3.9,0.1-5.5,1.4c-0.8,0.1-0.3,1-0.3,0.4c0-0.1,0.1-0.2,0.2-0.2c1.6-0.7,3-0.1,4.3,0.7\n                        c1.6,1,2.6,1.7,4.6,0.1C471.2,430.9,473.1,432,474,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F4A52"),
                d:
                  "M387.1,441c4.6,0,9.3,0,13.9,0C396.3,442.5,391.7,442.5,387.1,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C13B49"),
                d:
                  "M573,633c0.7,0,1.3,0,2,0c6.1,1,6.3,0.7,5.7-5c-0.6-5,2.5-9.9,7.1-11.4c2.6,2.6,6.8,4,6.1,8.8\n                        c2.8-0.2,5.1-3.1,8-0.8c0.3,0.2,0.6,0.2,1,0.1c6.2-1.5,8-0.7,10.2,4.4c0.8,2.3-3.6,5.6,1.3,8c-6.5,0-13.1,0-19.6,0\n                        c-2.1,0-4.3-0.5-6.1,1.2c-1.3,1.2-2.5,0.3-4-0.5c-5-2.5-9.1-1-9.7,3.2c-0.7,0-1.3,0-2,0c-1.1-0.1-2.3,0.1-3-1\n                        C571.3,637.8,571.4,635.1,573,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2313D"),
                d:
                  "M549,549c-0.7-1-1.3-1-2,0c-0.8-0.4-1-1.2-1-2c-0.8-2.1,0.2-5.1-3-6c-3.6-5-6.7-10.2-9-16\n                        c0.6-0.6,1.3-0.7,2-0.4c0.6,0.3,1.2,0.7,1.5,1.2c1.6,2.5,3.1,4.6,5.9,0.9c0.9-1.2,3.1-1,4.5-1.7c1.3-0.7,3.8,1.1,4-2.4\n                        c0.1-1.6,2.1,2.4,3.2,0c1.7,0.1,2.7,1.1,3.6,2.4c5.4,8,10.5,16.3,15.3,24.7c0.4,0.7,0.5,1.6,0.4,2.4c-1,1.3-2.3,2.4-3.5,0.5\n                        c-2.5-4.1-7.1-6.3-9.5-10.6c-1.1-1.9-5.2-1.4-7.6-3.5c5.5,6.3,2.7,12.5,0.3,18.6c-3.2,0.3-3.1-1.9-3-4\n                        C552.2,550.7,550.1,550.1,549,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63344"),
                d:
                  "M542.9,541c6-0.6,4.3,2.8,3,6C542.7,546.2,543.2,543.4,542.9,541z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952B39"),
                d:
                  "M536,525c-0.7,0-1.4,0-2,0c-0.8-0.4-1-1.2-1-2c0.9-0.4,0.9-1.2,1-2l0,0c0.7-0.6,1.6-0.9,2.6-0.8\n                        c2,0.5,2.6,1.9,2,3.7C538.2,525.2,537.3,525.8,536,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2B38"),
                d:
                  "M534,521c0.5,1.1,0.7,2-1,2c-1.3-0.1-2-0.7-1.9-2C532,521,533,521,534,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A6765"),
                d:
                  "M2089.9,390.1c0,0.6,0.1,1.3,0.1,1.9c-0.3,0-0.7,0-1,0c-0.9,0.8-1.8,0.4-2.6-0.2c-3-3.6-6.9-6-11.1-8\n                        c-8.7-4.8-16.7-10.8-25.5-15.3c-1.4-0.7-3.2-1.3-2.9-3.5c1.7,0,3.3,0,5,0c10.4,5.6,20.4,12.1,30,19c2.5,1.4,4.8,3.2,6.9,5.1\n                        C2089.3,389.4,2089.6,389.7,2089.9,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA8582"),
                d:
                  "M2089,389.1c-2.9-0.9-5-2.9-6.9-5.1C2085.2,384.5,2087.4,386.3,2089,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33845"),
                d:
                  "M1844,634c-2.5-2.9-3.1-6.3-3-10c0-1,0-2,0-3c0.6-1.5,0.6-3.3,1.7-4.6c0.6-3.4-0.5-6.6-0.7-9.9\n                        c-0.1-1.8-0.5-3.7,0.6-5.3c0.8-0.8,2.3,0.1,2.8-1.5c1.5-4.9,0-10.3,2.6-14.9c-2.6-3-2-6.5-1.6-10c0.3-3.3,3-6.6,6.1-6.2\n                        c3,0.4,6-0.3,8.2-1.5c3.9-2,4.6,0,5.3,2.8c0.2,0.8,0.4,1.6,0.5,2.4c0.4,2.1-0.1,4.3,1.2,6.2c0.4,0.5,0.7,1.1,0.9,1.7\n                        c0.5,1.4,0.4,3.1,1.3,4.4c0.4,0.6,0.7,1.2,0.9,1.9c0.4,1.4,0.4,2.9-0.4,4.2c-3.7,0.6-6.5-2.5-10.5-2c0.5,1.1-1,2.6,0.6,3.9\n                        c0.5,0.1,0.9,0.2,1.2,0.5c2.1,3,1.9,5-1.7,7.1c-4.3,2.5-7,6.2-5.9,11.9c0.4,2,0,5.2-2.8,4.9c-2.5-0.2-6.3-0.6-5.8-5\n                        c-0.9,3.6,3.2,5.8,2.8,9.4c0.4,2.9,0.6,5.9,0,8.8c-0.4,1.8-0.7,3.6-2.8,4.2C1844.9,634.5,1844.4,634.4,1844,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3B48"),
                d:
                  "M1843,601c0.3,3.6,0.8,7.2,0.9,10.8c0.1,1.7,0.7,3.7-0.9,5.2c-0.3,0.4-0.7,0.4-1,0\n                        c-1.5-10.6-3-21.2-4.4-31.8c-0.6-4.7-1.1-9.5-1.6-14.2c0.4-0.4,0.9-0.5,1.4-0.4c1.7,1.2,1.6,3.2,2.1,4.9c1,3.4,0.4,7.4,4,9.8\n                        c0.3,0.2,0.3,0.6,0.4,0.9C1844.5,587.9,1843.8,599.2,1843,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91333F"),
                d:
                  "M1837,571c-0.3,0-0.7,0-1,0c0-0.7,0-1.3,0-2c-1.4-2.1,0.6-5.2-2-7c-2.9-1-1.2-4.9-3.8-6.1\n                        c0.8-1.6,0.7-3-1.1-4c0.3-1,0.6-1.9,0.9-2.9c1-0.7,1.8,1.6,3.2-0.1c1.3-1.5,3.2-1.2,4.5,0.7c0.8,1.9,0.7,3.9,0.6,5.8\n                        c-0.1,1.6,0.1,2.1,0.8,2.9c2.1,2.8,1.3,5.9,1,9C1839.7,569.1,1838.5,570.2,1837,571z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3B48"),
                d:
                  "M1834,562c3.3,2.1,3.3,2.1,2,7C1832.3,567.5,1834.7,564.3,1834,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A7424F"),
                d:
                  "M1842,617c0.3,0,0.7,0,1,0c-0.6,1.3-1.3,2.6-1.9,4C1841.1,619.6,1840.6,618.1,1842,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7434B"),
                d:
                  "M959,105.1c-0.1,2.8,4.2,1,4,3.9c-3.7,0-7.3,0-11,0c-3.1,3.2-7,0.5-10.4,1.2\n                        c-5.6,0.3-11.2,0.1-16.8-1.1c-8.2-1.7-16.5-0.3-24.8-0.8c-2.1-0.1-4.9,0.7-5.5-2.8c1-2.3,3.1-1.6,4.7-1.6\n                        c8.8,0,17.7,0.2,26.5,0c1,0,1-0.5,1.1-1.1c9-0.1,17.9,0.5,26.9,1.2C955.4,105.2,957.5,103.8,959,105.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0454B"),
                d:
                  "M927,102.9c0.6,0.5,1.3,1,2.7,2.1c-12,0-23.4,0-34.7,0c-1.8,1.6-4,1.6-6.1,1.6\n                        c-11.7,0-23.3,0.1-35-0.1c-1.5-0.1-3-0.1-4.6-0.1c-0.9,0.1-1.8,0-2.6,0c-4.3-0.1-8.6,0-12.9,0c-0.8,0-1.7,0-2.5-0.2\n                        c-1.4-0.6-3.8-0.9-1.3-3.2c26.8,0,53.6,0,80.5-0.1c3.5,0,7.2,2.2,10.4-0.7C922.9,102.2,925.1,101.5,927,102.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("773339"),
                d:
                  "M959,105.1c-1.7-0.4-3.6,0.4-5.1-1c2.1,0.1,4.3-0.8,6.1,0.8C959.7,105,959.3,105,959,105.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912531"),
                d:
                  "M527,509c-2.1-1.2-3-4.2-6-4c-3.8-3.9-6.4-8.5-7-14c0.2-2.5,2.3-2.1,3.7-2.3c3.1-0.4,6.2-1,9.4-1.3\n                        c0.5-0.1,1-0.1,1.6-0.1c1.5,0.2,3,0.5,4.4,1.1c6,6.2,11.3,12.9,15.5,20.5c0.6,1,1,2.1,0.6,3.3c-0.8,1.2-1.8,1.7-3.2,1.1\n                        c-1.6-1.6-1.3-4.1-2.9-5.7c-6.2-1.9-8.5-8.6-14.1-12c-1.1,2.9-1.4,5.4,0.4,7.4C533,507,529.9,507.9,527,509z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671420"),
                d:
                  "M529,488c-0.3,0-0.7,0-1,0c-4.4-0.6-8.1-2.8-12-4.5c-5.1-2.2-5.8-2-7.9,2.4c-1,0.5-1.7,1.6-3.1,1.1\n                        l0,0c-1.9-2.5-4.4-4.3-7-6c-0.3-0.3-0.7-0.7-1-1c-0.7-0.7-1.3-1.4-2-2c2.1-5,4.6,1.3,7-0.4c-1.2-2.2-2.5-4.5-3.8-6.7\n                        c1.9-1.3,2.4,1.1,4,0.7c1.3-1.2-1.2-3.6,1.6-4.7c0.1,1.3,0.2,2.4,0.2,3.6c-0.1,1.6,1.2,3.3,2,2.9c5-2.3,6.8,3.1,10.9,3.9\n                        c-1.2-2.5,0.6-4.8,0.1-7.3c0.2-0.1,0.4-0.2,0.5-0.2c6,4.6,11.2,9.8,14,17.1C530.9,487.8,530.2,488.4,529,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751826"),
                d:
                  "M507,485c0.3-0.1,0.9-0.2,0.9-0.2c0.1-6.1,3.7-3.9,6.9-3c4.2,1.1,7.5,4.7,12.3,4.1\n                        c0.2,0,0.6,1.4,0.9,2.1c-4.4,2.2-9.5,1-14,2.9c-2,0.4-4,1.4-6,0C507.3,489.1,506.5,487.1,507,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F222D"),
                d: "M498,481c3,1.2,6.2,2.2,7,6C501.9,485.9,500,483.4,498,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F222D"),
                d:
                  "M507,485c0.8,1.9,2,3.8,1,6c-1.6-0.9-2.9-2-3-4C505.7,486.3,506.3,485.7,507,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5434C"),
                d:
                  "M639,125c0-1.3,0-2.7,0-4c8.2-1.1,16.6-1.5,24.6-3.7c0.5-0.1,1-0.3,1.5-0.3c8.8,1.1,17.3-1.8,26-2.5\n                        c8.8-0.6,17.8-1.9,26.5-3.7c1-0.2,1.2-1,1.4-1.8c0.6,0,1.2-0.1,1.8-0.1c1.6,0,3.3,0,5.1,0c-0.5,1.9-2.6,0.3-3,1.8\n                        c1.8,0.3,3.6,0.7,5.1-0.9c0.9-0.9,2.2-1.2,3.2-0.9c7.3,2.5,14.6-1,21.9-0.1c1.6,0.2,3.5-0.4,3.8,2c-3.5,3.4-8.2,3.1-12.2,2.4\n                        c-4.2-0.8-7.4,0.2-10.6,2.5c-9.5,0-18.8,2.9-28.4,2.2c-2.8-1.3-5.5-1.3-8.6-0.3c-5.3,1.6-11-0.6-16.3,1.1\n                        c-7,2.4-14.2,3.5-21.6,3.6c-1.4,0-2.4,0.9-3.4,1.9c-3.2,1.5-6.7,1.4-10.1,1.9C643.6,126.2,641,126.9,639,125z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1461.9,610.9c-1.4-2.9-1.4-5.9,0.1-8.8C1461.9,605,1461.9,607.9,1461.9,610.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D5455"),
                d:
                  "M1983,337c4.3-0.6,7.9,1.8,11.5,3.3c4.5,1.9,9.2,3.4,13.5,5.7c11.9,5,23.9,9.8,35.2,16.2\n                        c0.8,2-0.3,2.9-1.9,3.4c-7.8-1.4-14.2-6-21.2-9.3c-5-2.4-10.1-4.4-15.3-6.1c-7.2-2.3-14-5.8-20.9-8.7c-1-1.7-4.2-1.8-3.7-4.7\n                        C1981.1,336.5,1982.1,336.3,1983,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E4E50"),
                d:
                  "M2047,365c7.8,4.7,15.6,9.4,23.3,14.2c1.9,1.2,3.8,2.6,5.7,3.8c3.5,2.9,7.4,5.3,11,8\n                        c0.4,0.8,1.2,1,2,1c0,1,0,2,0,3c-2.3,0.9-3.7-0.9-5.4-1.8c-7.1-3.7-13.1-9.2-20.4-12.4c-5.1-3.2-10.9-5.4-15.3-9.7\n                        c-1.9-1.8-5.5-0.8-6.3-4c1-1.9,2.1-3.7,4.5-4C2046.1,363.8,2046.2,364.6,2047,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("481518"),
                d:
                  "M2046,363c-1.3,1.4-2.6,2.7-3.9,4.1c-2,4-5.9,5.5-9.6,7.3c-0.5,0.1-0.9,0.2-1.4,0.2\n                        c-0.5-0.1-0.8-0.4-1.2-0.7c-0.3-1.7,0.8-2.5,1.9-3.5c2.9-1.9,5.5-4.5,9.1-5.4c1.2-0.5,2-1.5,2.3-2.8\n                        C2044.2,362.2,2045.8,360.3,2046,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992431"),
                d:
                  "M527,509c2.3-1.6,4.5-3.2,0.8-5.7c-0.5-0.4-0.7-1.5-0.7-2.3c0-2.6-1-5.8,1.7-7.2\n                        c0.8-0.4,3.7,2.1,4.8,3.9c1.4,2.2,4.1,3.1,4.8,6.1c0.6,2.3,5.1-0.3,5.7,3.2c0.7,1.2,1.3,3,0.3,3.6c-4.2,2.4-5,7.3-8.2,10.4\n                        c-0.7,0-1.3,0-2,0C533.9,515.7,532,511.4,527,509z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2454F"),
                d:
                  "M535,143c-1.7-0.2-3.5,0.6-4.9-0.9c8.6-2.7,17.2-5.3,26-7c0.1,0.3,0.2,0.6,0.2,1\n                        c-4.6,0.5-7.1,6.4-12.5,4.9C540.5,140.1,538,142.7,535,143z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F6665"),
                d:
                  "M100.8,449.9c0-0.7,0.1-1.3,0.1-2c1.4-2.8,3.2-5.5,4-8.5c1.4-5.1,4.1-9.2,7.7-12.9\n                        c2.3-2.4,4.1-5.1,6.1-7.7c0.4-0.3,0.9-0.3,1.3,0c0.5,3-1.6,5-3.3,6.9c-4.7,5.3-8.3,11.1-10.6,17.7c-0.2,0.6-0.7,1.1-1.2,1.5\n                        C103.6,446.6,102.2,448.3,100.8,449.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C605E"),
                d:
                  "M127.1,404c1.7-1.2,0-3.8,1.9-5c4.1,2.5,4.3,3.1,1.6,9.3c-1.3,1.4-2,4-4.8,2.6\n                        c0.2-1.8,0.8-3.5,1.1-5.3C127,405.1,127,404.5,127.1,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("826565"),
                d:
                  "M126.9,405.7c0.3,1.9,0.1,3.7-0.8,5.4c0.3,0.4,0.4,0.8,0.3,1.3c-0.9,1.9-2.1,3.5-3.5,5\n                        c-0.8,0.8-1.6,1.6-2.8,1.7c-0.4,0-0.8-0.1-1.2-0.1C120.8,414.1,125,410.6,126.9,405.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("802930"),
                d:
                  "M1376.9,274c0.7,0,1.5-0.1,2.2-0.1c1.8-1.5,3.7-1.7,5.9-0.7c1.9,0.9,4,1.3,6.1,1.7\n                        c3.7,0.1,7.1,2.4,10.9,2.1c2,2,5.2,0.8,7.2,2.9c-1,1.3-2.4,1.3-3.9,1.4c-8.8-0.4-17.4-2-26.1-3.3c-0.5,0-1-0.1-1.4-0.3\n                        C1376.1,276.8,1376.5,275.4,1376.9,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F4852"),
                d:
                  "M1405,280.1c1.4-0.1,2.8-0.1,4.2-0.2c6.8-1.8,13.4-0.2,20,1c-1,0.3-2.1,0.6-3.1,0.9\n                        c-5.4,1.9-10.9,0-16.3,0.5C1408,282.4,1405.6,282.8,1405,280.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0C0C1"),
                d:
                  "M2049.3,633.2c-0.5-0.1-1.1-0.3-1.6-0.4c0.5-2.9,2.8-3,4.9-3.1c2.9,0,5.6-0.6,8.2-1.6\n                        c4.8-0.1,9.4-2.2,14.2-2c0.5,0.2,0.9,0.5,1.2,1c-0.7,0.6-1.5,1.2-2.2,1.8C2065.9,631.3,2057.8,633.2,2049.3,633.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3A48"),
                d:
                  "M1845,634c3.9-3.8,1.9-8.6,2-13c0.7-1.2,0.9-3.1,3-2.5c1.9,0.5,1.9,2.1,2,3.6c0,1.5,0,3,0,4.5\n                        c0,0.2,0,0,0-0.5c0-10.4,0-9.8,10.2-10.5c9.7-0.7,15.7,4.8,21.6,10.8c1.1,1.1,2.2,1.9,3.6,2.3c1.6,1.5,0.1,2.6-0.4,3.8\n                        c-1.7,1.7-3.3,3.5-6,3.5c-2.2,0.3-4.1-0.5-6-1.4c-2.4-1.1-4.1-0.7-4,2.4c-6.7,0-13.3,0-20,0c-1-1.3-2.1-1.9-3.8-1.4\n                        C1846.3,635.8,1844.7,636,1845,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A7424F"),
                d:
                  "M1845,634c0.6,0.7,1.4,1.3,2.1,0.6c3.8-3.3,3.9-0.6,3.9,2.3c-2.4-0.9-6.5,2.4-7-3\n                        C1844.3,634,1844.7,634,1845,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983D48"),
                d:
                  "M299,239c-7.3,5.3-17.4,5.5-23.7,12.6c-1,1.1-2.5,0.9-3.5,1.4c-6,3.4-12.6,5.9-16.8,11.9\n                        c-1.5,1.9-3.1,3.3-5.8,3.3c-2.1,0-3.9,1-5.1,2.7c-2.8,4-5.3,8.3-11.1,9.1c7.2,4.9,14.9,4.5,22.7,3.7c1.9,0.1,3.8,0.3,4.8,2.3\n                        c0.2,5.1-3.8,2.2-6,2.8c4.3,1.4,8.8-2,13.4,2.1c-7,2.4-14.4,1.1-20.2,5.4c-1.6,1-3.2,2-5,0.6c-3-3.2-1.6-4.9,2.5-5.8\n                        c-2.9-0.2-5.3-0.2-7.7-0.7c-5.1-0.5-9.4-4.1-14.9-3.2c-1.7,0.3-3.2-1.7-3.4-3.7c-0.1-1.6,0.2-3.1,2.5-2.6\n                        c0.6-5,8.4-3.7,8.4-9.5c0-1,1.5-1.1,2.4-1.4c2.9-1.1,5.1-3,6.5-5.8c1.3-0.4,2.6-0.8,4-1.2c9.2-3.6,18.9-6.4,26-13.9\n                        c3.4,0.2,6.1-1.2,9.2-3c6.3-3.6,13.2-6.2,19.8-9.2C298.8,237.5,299.6,237.9,299,239z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E404A"),
                d:
                  "M299,239c-0.3-0.7-0.7-1.3-1-2c1.1-1.2,2.6-2.1,3.1-3.8c7.1,0,12.3-4.7,18.4-7.3\n                        c3-1.3,6.9-1.2,8.6-4.8c2.4-0.3,4.3-2.4,6.9-2.1c0,0.7,0,1.4,0,2c-5.5,3.2-11.9,4.9-16.4,9.9c-0.8,0.9-1.5,0-2.2,0.1\n                        c-1.6,0.4-4,0.4-4.6,1.4C309,237.9,303.6,237.6,299,239z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA4853"),
                d:
                  "M1881,636c1.7-1.3,3.3-2.7,5-4c3.2,0.8,6.3,2.4,9.8,1.5c4.1,0,8.2-0.3,12.3,0.4\n                        c6.7,1.4,13.4,0.3,20.2,0.7c2.1,0.1,4.3-0.4,6.3,0.9c1.5,2.4-0.4,3.2-2,3.1c-9.8-0.3-19.3,1.4-28.8,3c-1,0.2-2,0.1-2.8-0.6\n                        c-6.4-1.4-12.9-2.3-19.5-2.2C1878.6,638.9,1880,637.1,1881,636z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3E47"),
                d:
                  "M1901,641c10.4-2.2,20.8-4.9,31.7-3.3c1.1,0.2,1.8-0.6,2.3-1.6c0.5-0.4,1-0.6,1.6-0.6\n                        c4.6,0.2,9.2,0.1,13.7,0.1c1.9,0,4-0.3,5.6,1.2c-0.5,3.4-3.4,2.7-5.3,2.6c-11.9-0.5-23.3,2.1-34.7,4.8\n                        c-5.7,0.7-11.5-0.4-17.2-0.1c-1.6-0.4-3.1-0.8-4.7-1.2C1895.9,640.8,1899.1,643.3,1901,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B7A7B"),
                d:
                  "M1535,273.2c3.1,0.1,5.8-2.1,9-1.2C1541.2,273.4,1538.4,275.7,1535,273.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("866C6C"),
                d:
                  "M136.9,305.9c-0.6,0-1.3,0.1-1.9,0.1c0.5-2.1,2.4-3.7,1.9-6.1c0.2-0.5,0.6-0.9,0.6-1.4\n                        c-1.7-10.1,5-13.6,12.8-15.7c3-0.8,6.4,0,9.7,0.1c-0.6,3.3-3.8,2.5-5.7,3.8c-1.1,0.5-2.2,0.9-3.4,1.2\n                        c-1.1,0.2-2.3,0.2-3.4,0.3c-5.3,0.3-6.9,2.1-6.6,7.9c0.7,3.8,0,7.1-3.2,9.6C137.4,305.8,137.2,305.9,136.9,305.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69393C"),
                d:
                  "M154,285.9c2-1,4-1.9,6-2.9c2.1-0.6,4.2-1.2,6.3-1.8c2.5-0.6,5.2,0.5,7.5-1.3c2.1,0.4,4.2,0.8,6.3,1.1\n                        c0.1,0.7-0.2,1.4-0.8,1.6c-7.6,2.4-15.1,5.2-23.1,5.7C154.2,288.5,153,288.2,154,285.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("703D41"),
                d:
                  "M130,408c1-3.1,2-6.3-1-9l0,0c2.6-3.8,1.7-7.9,1-12c0-1,0-2,0-3c-0.9-2.2-0.4-4.5-0.4-6.7\n                        c1.6-1.1,1.9,0.3,2.3,1.2c0.6,1.5,0.6,3.1,0.9,4.6c0.9,5.1,2.6,9.9,6.7,13.4c0.9,0.8,1.3,1.6,0.7,2.6\n                        c-2.2,3.7-4.8,7.1-8.2,9.8C131.1,409.5,130.4,408.8,130,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C605E"),
                d:
                  "M130,387c1.6,4.2,2.6,8.3-1,12C130.4,395.1,129.9,391,130,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C605E"),
                d:
                  "M130,377c0,2.3,0,4.7,0,7c-2-2.8-0.6-6-1-8.9c0,0,0-0.1,0-0.1C130.7,375,130.7,375.9,130,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1475,284.9c0.3,0,0.7,0,1,0c1,0.4,1.9,0.8,2.9,1.2c2.2,1.5,5.3,0.6,7,3c0.6,0.6,0.6,1.3,0.2,2\n                        c-2.7,1.9-4.9,0.6-7.2-1.1c-0.9-0.6-2.3-2.5-3.1-0.7c-1.5,3.6-3.5,2.4-6,1.4c-3-1.2-6.2-0.3-9.3-0.5c-1.8-0.1-3.6,0.1-5.4-0.4\n                        c-1.2-1.1-2-2.4-4.1-2.4c-2.9,0.1-6,0.3-8.8-0.8c-1.2-0.7-2.2-1.5-3.2-2.4c-0.2-0.4-0.3-0.8-0.1-1.3\n                        C1451,283.6,1463,284.2,1475,284.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M1439,283c0,0.3,0,0.7,0,1c-0.2,0.2-0.5,0.3-0.7,0.5c-5.1,0-10.2-0.3-15.3-0.1\n                        c-13.6-0.2-27.2-1.3-40.8-1.8c-1.8-0.1-3.7-0.3-5-1.8c-1.1-1.6-0.1-2.7,0.9-3.8c1.6-0.3,2.9-0.9,4.7-0.3\n                        c7.2,2.6,14.8,2.4,22.2,3.4c2.8,1.7,5.8,0.8,8.7,0.8c4.1,0.1,8.3,0.2,12.3,0.9c4.3,0.1,8.6,0.2,12.9,0.2\n                        C1439,282.4,1439,282.7,1439,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93D4C"),
                d:
                  "M1388,657c-2.5,2-5.3,0.8-8,0.9c-1.8,0.1-1.8-1.4-2-2.8c-0.1-1.7,0.6-3.6-0.9-5.1\n                        c-1.8-4.7-3.2-9.4-1-14.4c4.1-1.8,8.5-0.9,12.8-1.1c6-0.3,12-0.2,17.9,0c4,0.8,8.4-1.1,12.2,1.6l0,0c0.1,2-1.6,1.9-2.8,2.2\n                        c-8.3,1.1-16.7,1.2-25.1,1.6c-8.1-0.8-8.1-0.8-8.7,7.8c-0.1,1.2-0.7,2.2-0.9,3.3c-0.3,1.7,1.5,2.3,1.9,3.6\n                        c-0.1,2.4,1.9,0.9,2.8,1.5C1386.8,656.3,1387.4,656.6,1388,657L1388,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E161F"),
                d:
                  "M1376.1,636.2c0.3,4.6,0.7,9.2,1,13.8c-0.5,2.6,1,5.6-1,8c-0.1-0.3-0.2-0.7-0.3-1c-0.3-2-0.6-4-0.9-6\n                        c-2-4.2-1.9-8.8-2.3-13.3c0.1-1.4,0-2.8,0.6-4.1c0.2-0.5,0.6-0.9,1.1-1.1c0.5-0.1,1.1-0.1,1.6,0.1c0.4,0.4,0.7,0.8,0.8,1.3\n                        C1376.8,634.8,1376.6,635.5,1376.1,636.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93D4C"),
                d:
                  "M1399,657c2.7,0,5.4,0,8,0C1404.3,658.5,1401.7,658.5,1399,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93D4C"),
                d: "M1391,657c2,0,4,0,6,0C1395,658.5,1393,658.5,1391,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3844"),
                d:
                  "M1491,494c1.1,1.5,2.6,0.9,4,1c0.1,2-2.2,3.6-1.3,5.8c-4,0.2-3.9,4.8-6.7,6.2c0,0,0,0,0,0\n                        c-1-1.1-1.2-2.5-1.3-3.9C1485.9,499.2,1485.9,495.1,1491,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("965F61"),
                d:
                  "M1391.1,274.9c-4.1,0.9-7.7-3.2-11.9-1c0.9-2.3-1.2-2.2-2.3-3c-2.6-1.7-5.9-2.1-7.9-4.8\n                        c6.5,1.7,11.9,6.5,18.8,6.9C1388.9,273.7,1390,274.3,1391.1,274.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("866C6C"),
                d:
                  "M129,315c-0.2,3.4-4,4.3-5,7.1c-0.8,2.3-1.4,4.7-2.1,7.1c-1.7-3.3,0.4-6.1,1.3-9\n                        C125.1,318.4,127,316.7,129,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("866C6C"),
                d:
                  "M135.1,306.1c-0.2,3-1.2,5.5-4.2,6.8C132.1,310.5,132.2,307.4,135.1,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962E3A"),
                d:
                  "M1837,549c-2.2-0.1-4.5-0.2-4,3.2c-1.9-0.5-1.6-2.6-3-3.2c0-0.7,0-1.3,0-2c1.7-2.9,5.4,1.1,7-2\n                        c0.2,0.2,0.3,0.4,0.5,0.5C1838.1,546.8,1838.1,548,1837,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F4447"),
                d:
                  "M2063,380c3.9-0.4,6.1,2.8,9,4.4c5.8,3.4,11.4,7,17,10.5c0.6,2.8,0,4.7-3.2,5.2\n                        c-0.1-0.2-0.1-0.4-0.2-0.6c0-0.3,0.1-0.7,0.2-1c-3.9-0.6-7.3-2.7-10-5.2c-3.3-2.9-7.7-3.6-10.7-6.5\n                        C2063.4,385.3,2062.4,382.7,2063,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBABAA"),
                d:
                  "M2086,402.9c-1.3,0.1-2.6,0.2-3.9,0.3c-2.6-0.4-3.8-2.1-4.6-4.3c0.2-0.8,0.7-1.3,1.4-1.6\n                        c2.6,0.1,4.9,1.1,6.9,2.8c0,0-0.1,0.1-0.1,0.1C2085.9,401.1,2085.9,402,2086,402.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBB6B4"),
                d:
                  "M2076,600.8c6.5,1.3,9.7,7.2,14.7,10.5c1.2,0.8,2.2,2,3.3,3c0,1.2-0.1,2.3-1.4,2.8\n                        c-1.6,1.1-3.3,1.2-5.1,0.7c-5.4-3.4-8.9-8.9-13.9-12.9c-0.4-0.3-0.7-0.6-1-1c-0.4-1.4,0-2.4,1.4-3\n                        C2074.7,600.9,2075.3,600.9,2076,600.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9555D"),
                d:
                  "M2087,616.9c1.9,0.1,3.7,0.1,5.6,0.2c-1.3,3.3-5.4,3.6-6.8,6.7c-0.6,0-1.2,0.1-1.7,0.1\n                        c-1.2-0.8-2.8,0.5-3.9-0.8c0.5-4,4.3-3.2,6.6-4.4c0.1-0.1,0.4,0,0.5-0.1c0.3-0.5-0.4-0.3-0.5-0.6\n                        C2086.7,617.6,2086.8,617.3,2087,616.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03C45"),
                d:
                  "M573,633c-0.1,2.7,0.9,5.9-3,7c-0.3-0.3-0.7-0.7-1-1c-0.4-2.1,0.7-4,1-6C571,632.1,572,632.2,573,633\n                        L573,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B27072"),
                d:
                  "M2077.9,399.2c1.8,0.9,3.1,2.4,4.2,4.1c0.3,0.7,1.9,1,1.1,1.8c-2.1,2-3.3,4.9-6.2,6\n                        c-0.6,0-1.3,0-1.9,0c-0.4-0.6-0.3-1.4,0.2-1.8c3.3-2.6,3.6-5.5,1.3-8.9c-0.2-0.4,0-0.9,0.3-1.4\n                        C2077.2,398.7,2077.6,398.8,2077.9,399.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2439"),
                d:
                  "M1780,463c-2,0.3-4,0.7-6,1c0-0.3,0-0.6,0-0.9c1.9-1.2,4-1.1,6-1c0.3,0.2,0.3,0.5,0.2,0.7\n                        C1780.2,462.9,1780.1,463,1780,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F2A33"),
                d:
                  "M1898.8,644.1c5.6-2.4,11.5-0.5,17.2-1.1c1.4,0.4,2.9-0.3,4.2,0.2c1.1,0.3,2.6,0.7,1.2,2.4\n                        c-5.9,0.7-11.7,0.8-17.5-0.5C1902.2,644.8,1900.2,645.6,1898.8,644.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E6F71"),
                d:
                  "M1903.9,645.1c6-0.1,12.1-0.1,18.1-0.2c1.9-1.6,3.8-1.4,5.8-0.3c0.8,1.3-0.1,1.6-1.1,1.8\n                        c-1.9,0.3-3.8-0.4-5.7,0.5c-2.7,0-5.3,0.1-8,0.1c-2-0.1-3.9-0.2-5.9-0.2C1906.1,646.2,1905,645.7,1903.9,645.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871B27"),
                d:
                  "M2071.9,413.9c-0.3,0.2-0.6,0.2-0.9,0.2c-6.3-2.4-12-6.4-19-7c-1.5-1.2-3.5-1.1-5-2\n                        c-1.6-0.2-3-0.8-4.1-1.9c0.3-0.4,0.7-0.8,1.2-1c3.4-0.1,6.2-2.3,9.6-2.4c0.5,0,1.1,0,1.6,0.1c1.6,0.4,3,1.1,3,3\n                        c-0.7,0.8-1.6,0.7-1.4,0.8c4.5-1.1,8.6,2.2,13.1,4.6c1.3,1,3.2,1.5,3.1,3.7C2072.7,412.6,2072.3,413.2,2071.9,413.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972D38"),
                d:
                  "M2073,411.9c-1-1-2.1-1.9-3.1-2.9c1.9-2.8,5.1-5.6,0.6-8.8c-1-2.1-3.3-3.7-2.5-6.5\n                        c4.3-0.5,7.3,1.4,8.9,5.4c3.6,6.4,3.6,6.4-1.9,11.9C2074.4,411.3,2073.7,411.6,2073,411.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4B403B"),
                d:
                  "M2077,416.9c-1.2,0-1.6-1-2.1-1.8C2076.8,413.9,2076.8,413.9,2077,416.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0C0C1"),
                d:
                  "M2080.9,626.9c-1.6,0.1-3.2,0.2-4.8,0.3c-0.1-0.1-0.2-0.3-0.3-0.4c0-1.5,1.2-2,2.3-2.5\n                        c0.7-0.3,1.4-0.4,2.2-0.3c1,0,2,0.1,2.7,0.9C2082.3,625.6,2081.6,626.3,2080.9,626.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5655"),
                d:
                  "M2083,625c-1,0-2,0.1-3,0.1c-0.5-0.4-0.6-1-0.4-1.6c0.1-0.2,0.3-0.3,0.4-0.5c1.4,0.2,3-0.4,4.1,1\n                        C2083.7,624.3,2083.3,624.6,2083,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M172,621c-3.9-2-7.7-4.1-11-7c-1.5-0.7-3.2-1.3-3.1-3.2c0.1-3.1-2.2-5.8-1.7-9c0.3-1,0.9-1.7,1.3-2.6\n                        c1.3-5.4,1.3-5.3,5.2-2.2c2.7,2.1,4.6,0,6.2-1.8c1.2-1.2,1.3-3,2.2-4.4c0.9-1.3,2-1.8,3.2-0.3c3.2,4,7.4,3.9,10.7-0.6\n                        c1.4-1.9,3.9-3.2,4-6.1c0-0.3,0.4-0.8,0.6-0.8c5.5,1.1,8.9-4.4,14.1-4.5c1.9,0,2.2,1.3,1.8,2.8c-0.4,1.3-0.9,2.5,0.5,3.6l0,0\n                        c2.1,3.3-1.8,4.7-2.4,7.2c-0.2,0.7-1.1,0.4-1.4-0.3c-0.9-2-1.9-1.3-1.8,0.3c0.4,5.2-2.3,4.6-5.8,3.2c-0.7,1.8,2.4,4-0.3,5.2\n                        c-1.8,0.8-4.4,2.5-5.4-1.3c0-0.2-1.2,0-1.9-0.1c0.5,3.8-5.5,1.6-4.4,6c-1.6-1.4,0.1-2.8-1.3-3.6c-1.3-1-1.7,6.3-3.6,0.4\n                        c-1.5,0.5-1.5,1.8-1.9,3.4c-0.3,0.6-0.4,0.7-0.4,0.8c0,0.1,0.1,0,0.2-0.4c0.1-0.3,0.2-0.5,0.4-0.8c-0.2,0.2-0.4,0.4-0.2,0.4\n                        c2.5,1.5,4,3-0.2,4.7C171.1,612,168.1,615.7,172,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M217.4,587.8c-0.8-0.1-1.2-0.6-0.9-1.3c0.2-0.5,0.8-1,1.4-1.1c0.8-0.1,1,0.6,0.9,1.3\n                        C218.7,587.5,218.1,587.8,217.4,587.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M232,609c1.3-1.5,2.4-1.2,3.4,0.3C234.1,610.7,233.1,609.3,232,609L232,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D343F"),
                d:
                  "M225.9,607c-0.2-0.8-0.5-1.2-0.4-1.5c0.2-0.3,0.7-0.5,1.1-0.7c0.1,0.3,0.4,0.6,0.3,0.9\n                        C226.7,606,226.4,606.3,225.9,607z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBDDD9"),
                d:
                  "M2039.3,406.9c-0.4,0-0.8,0.1-1.3,0.1c-1.3,1.1-2.7,1-4,0c-1,0-2,0-3,0c-1.1,1-2.5,1.3-3.9,1.8\n                        c-0.7,0.1-1.4,0.1-2.1-0.1c-2.7-0.9-5.4-1.7-7.9-2.9c-0.8-0.4-1.7-0.8-2.5-1.2c-5.8-2.2-11.3-5.3-16.8-8.1\n                        c-2.2-1.5-1.7-3.2-0.3-4.9c0.5-0.2,0.9-0.3,1.5-0.3c4.2,1.7,8.4,3.5,13.1,3.7c1,0,1.9,0.5,2.2,1.6c-0.9,2.4-3.3,0.1-4.4,1.2\n                        c2.8-0.4,5.4,0.7,8.1,1.5C2025.2,401.5,2032.4,403.8,2039.3,406.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901D28"),
                d:
                  "M2044,402.9c-0.4,0.1-0.8,0.1-1.2,0.2c-5.9-1.4-11.8-2.8-17.8-4.2c-1.1-1.2-2.8-1.3-4.2-1.8\n                        c-0.6-0.1-1.2-0.1-1.8-0.2c-1.1-1.3-2.9-0.6-4.2-1.5c-0.8-0.6-1.3-1.3-1.4-2.3c-0.2-3.4,2.2-4.9,4.9-5.1\n                        c2-0.1,4.8,0.5,4.8,3.6c0,1.9,1.6,1.4,2.5,1.5c2.1,0.3,4.3-0.3,6.4,0.7c0.4,0.2,0.8,0.4,1.1,0.8c0.4,0.6,0.5,1.2,0.4,1.8\n                        c-0.2,0.8-0.1,1.4,0.8,1.6c3.7-0.3,6.6,1.8,9.9,2.9C2044.6,401.7,2044.6,402.4,2044,402.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E3B35"),
                d:
                  "M2015,395c1.6,0.2,3.6-0.6,4.1,1.9c-0.7,0.3-1.4,0.7-2.1,1c-1.3,0.6-2.1,0-2.8-1\n                        c-5.4-1.7-11.4-1.6-16.2-5.2c0.9-2.6,2.8-1.2,4.4-1.1c2,0.8,4.2,1.1,6.3,1.3c0.5,0.1,0.9,0.2,1.4,0.4\n                        C2011.7,393.3,2013.4,394,2015,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F8F0E6"),
                d:
                  "M2014.1,396.9c0.9,0.3,1.9,0.7,2.8,1c0.3,0.4,0.7,0.8,1,1.2c-3.2,1.1-5.9-1.2-8.9-1.9\n                        C2010.8,397.1,2012.5,397,2014.1,396.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("552924"),
                d: "M2047,405c1.9,0,4-0.3,5,2C2050,407.1,2048.3,406.6,2047,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E3B35"),
                d:
                  "M2020.9,397.1c1.6,0,3.6-0.8,4.2,1.8C2023.4,398.9,2022.1,398.2,2020.9,397.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("602127"),
                d:
                  "M2052.9,420c1.8,5.5,4.9,10.3,8.2,14.9c0.5,0.9,0.5,1.9,0.4,2.9c-0.4,1.2-1.4,2.1-2.3,2.9\n                        c-2.5,1.9-4.2,4.7-7.5,5.6c-1.3,0.3-2.8,0.9-3.6-0.5c-0.7-1.3,0.5-2.2,1.3-2.9c1.9-1.5,3.2-3.4,3.5-5.8c2.1-2.7-0.2-3.2-2-3.9\n                        c-0.3-0.9,1.6-1.8-0.5-2.9c-1.9-1-4.5-2.3-4.7-5.2c1-1.4,3.1-1,4.1-2.3c0.7-0.7,0.8-1.5,0.9-2.4\n                        C2051.4,419.5,2052,419.2,2052.9,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D1B8B4"),
                d:
                  "M2075.9,455c0.2,1.6,0.8,3,2,4c2.3,5.4,4.6,10.7,6.9,16.1c-0.5,2-0.5,4.2-1.3,6.2\n                        c-0.8,1.2-1.8,1.5-2.9,0.4c-0.9-2.5-0.5-4.8,0.6-6.2c0,0.1-0.1,1.1-1.5,0.6c-1.5-1.7-1.1-4.1-1.8-6.1\n                        c-1.3-3.4-2.8-6.7-5.3-9.4c-0.7-3.5-4.9-4.9-5.4-8.6c0.7-2.3-1.3-5.2,1.6-7c0.3,0,0.7,0,1,0\n                        C2070.9,449,2074.1,451.6,2075.9,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DAA7A1"),
                d:
                  "M2068.9,445c-1.7,2.1,1.2,4.9-0.9,7c-5.5,1.7-10.7,5-16.8,2.2c-3.8-1.5-8.4-0.6-11.4-4.2\n                        c-0.1-1.5,1-2.1,2.1-2.7c0.5-0.2,0.9-0.3,1.4-0.4c1.2-0.1,2.5,0,3.6,0.4c6,3.2,10.8,2.3,15.8-2.2c1.7-1.6-0.3-4.2,2.2-5.1\n                        C2067.4,440.9,2067.3,443.7,2068.9,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B1E22"),
                d:
                  "M2025,408c0.6,0,1.1,0.1,1.7,0.1c0.8,0.3,1.7,0,2.3,0.9c5,2.4,10,4.7,15,7.1c0.3,0.9-0.2,1.2-0.9,1.5\n                        c-2.2,0.1-4.3,0.1-6.1,1.7c-4.6-0.7-8.2-4.9-13.3-3.9c-3.3-1.4-1.9-4.2-1.9-6.5C2022.3,406.7,2023.7,407.5,2025,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC6362"),
                d:
                  "M2065,440.1c1.4,6.2-3.3,7.6-7.3,9.6c-3.9,2-7.6,2.1-10.7-1.6c0.2-0.2,0.3-0.3,0.5-0.5\n                        c8.4-0.1,10-1.3,13.4-9.7c0.1-1,0.2-2,0.2-3C2062.4,436.7,2063.7,438.4,2065,440.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D4048"),
                d:
                  "M2043,417c0.3-0.3,0.6-0.6,0.9-0.9c3.4,0.3,6.2,2,8.9,3.9c-0.8,0.1-1.5,0.1-1.9,1\n                        c-3.3-1.1-6.9-0.1-10.1-1.8C2040.4,417.3,2042.4,417.8,2043,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2034,407c1.3,0,2.7,0,4,0c0.7,0.7,1.3,1.3,2,2C2038,408.3,2035,410.6,2034,407z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2028.9,409c-0.9,0-1.7-0.1-2.3-0.9c1.4-0.7,2.8-1.3,4.4-1.2C2031,408.4,2030.2,409,2028.9,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B99493"),
                d:
                  "M2083,481c0-2.1,0.4-4.2,1.9-5.9c0.4,0.6,0.7,1.3,1.1,1.9c0,0.7,0,1.3,0,2c-0.8,0.4-1,1.2-1.1,2\n                        C2084.2,481.5,2083.6,481.6,2083,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3F4C"),
                d:
                  "M1274,218c1-0.3,2-0.7,3-1c21.4,12.4,42.8,24.8,64.1,37.3c0.3,0.1,0.4,0.5,0.6,0.8\n                        c-1.2,1.3-2.8,1.2-4.3,1.2c-4-2.4-9.3-2.2-12.2-6.5c-4.6-3.2-9.2-6.3-14.1-9c-3.5-0.6-6.2-2.7-9-4.7c-0.4-0.2-0.8-0.5-1.2-0.7\n                        c-8.1-3.2-14.5-9.4-22.7-12.3C1276.3,222.2,1273.7,221,1274,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3404D"),
                d:
                  "M1337,255c1.6,0,3.2,0,4.8,0c0.7,0.4,1.5,0.7,2.2,1.1c0.9,1.5,2.8,1.8,4,2.9\n                        c9.2,5.9,19.2,10.3,28.9,15c0.7,0.9,0.6,1.9,0.3,3c-0.1,1.9-1.2,3-3,3.4c-3.7-0.8-5.6-5.1-9.8-4.9c-5.6-5.7-13-8.8-19.5-13\n                        C1341.8,260.6,1338.4,258.7,1337,255z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3F4C"),
                d:
                  "M1348,259c-1.8-0.3-3.6-0.6-4-2.9C1345.5,256.9,1347.3,257.2,1348,259z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4464F"),
                d:
                  "M1252,207c0.3,0,0.7,0,1,0c2.5,3.1,4.9,6.3,9.2,7.3c1.4,0.3,2.3,1.3,2,3c-1.7,2.5-4.6,1.8-6.9,2.5\n                        c-0.7,0.1-1.5,0-2.1-0.3c-1.2-4.5-5.1-5.9-8.7-7.6c-1.9-0.9-4-1.5-6-2.3c-2.3-2-5.1-2.9-7.8-4c-6.2-2.7-12.8-4.8-18.4-9\n                        c-3.1-3.1-7.4-4.5-11-6.7c-0.4-0.3-0.7-0.6-1-1c-1.1-1.9-2.6-2.6-4.9-2.7c-7.4-0.3-13.5-3.8-19.6-7.6c-3-1.9-5.5-4.6-9.6-4.8\n                        c-2-0.1-3.9-1.8-5.5-3.2c-1.5-2-0.4-3.2,1.4-4c5.3,0,9.6,3.2,14.2,5.3c1.6,0.7,2.9,1.8,4.9,2c2.7,0.2,5,1.5,7.3,2.9\n                        c5.2,3.2,11.3,4.5,16.8,7c5.1,2.8,10.1,6,15.9,7.4c0.3,0,0.7,0,1,0c0.1,2.5,2.1,2.9,3.9,3.7c1.9,0.9,4.2,0.9,5.7,2.6\n                        C1239.5,200.9,1244.2,207,1252,207z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC434D"),
                d:
                  "M1207,184c-1.9,0.7-3.8,1.2-5.2-1.1c-0.8-1.3-2.3-1.7-3.9-1.9c-3.4-0.6-6.7-1.4-9.2-4.1\n                        c-0.6-0.6-1.8-0.9-2.7-1c-4.7-0.6-8.3-3.6-12.5-5.1c-3.2-1.1-5.8-3.9-9.5-3.8c-1.9,1.2-3.5,0.3-5-0.8c-3.4-2.2-7-3.5-10.9-4.5\n                        c-4-2-8-3.9-11.9-6.1c-1.5-0.8-4-1.3-2.8-4.1c3.1-0.9,5.9,0.2,8.6,1.5l0,0c2.4,1,4.9,1.4,7,3.2c2.5,2.2,6.1,1.6,9,2.8v0\n                        c1.7,0.8,3.8,1.2,4.8,3.1c1.6,3.1,5.4,0.5,7.2,2.9c1.9,0,2.5,3.3,5,2c2.4,2.2,5.1,3.4,8.3,4.3c8.5,2.5,16.2,7,23.7,11.6\n                        c0.3,0.2,0.5,0.4,0.3,0.7C1207.2,183.9,1207.1,184,1207,184z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB414B"),
                d:
                  "M1264,217c-1.8-3.2-6.1-1.6-8.2-4.6c-1.2-1.7-3.2-2.9-2.8-5.4c1.2,0.5,2.8,0.6,3.6,1.4\n                        c4.7,5.2,11.3,7,17.4,9.6c3.4,5.1,9.9,5.1,14.4,8.6c4.2,3.2,9.1,5.6,13.6,8.4c-0.3,2.6-1.8,2.5-3.4,1.3\n                        c-1.7-1.3-3.5-1.3-5.5-1c-3.7-4.6-9.4-5.6-14.4-7.9c-4.6-1.8-8.7-4.3-12.6-7.4C1265.1,219.1,1264,218.6,1264,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB424A"),
                d:
                  "M1252,207c-4.6,2.8-8.5-0.7-11.1-2.8c-2.6-2-5.8-3.5-7.9-6.2c1-0.8,2-0.7,3,0\n                        C1242.5,198.9,1246.8,203.8,1252,207z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1170,165c-5.9,1.9-8.7-2.7-12-6c2.3,0,4.6,0,6.9,0.1c0.3,0.7-2.4,1.2-0.2,1.8\n                        c1.3,0.4,2.8,1.1,4.3,0.2c0.4,2.5,2.4,1.8,4,2C1172,163.7,1171,164.3,1170,165z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7404A"),
                d:
                  "M1207,184c0-0.3,0-0.7,0-1c6,1.3,11,4.7,16,8C1216.5,191.3,1211.7,187.9,1207,184z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C93F47"),
                d:
                  "M1236,198c-1,0-2,0-3,0c-2.7-1-5.3-2.1-8-3c-2.8-0.9-2.9-2.1-1-4C1228.8,191.9,1232.6,194.6,1236,198z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1175,167c-0.6,3.1-2.5,1.6-3.2,0.6c-0.6-0.8-1.3-1.7-1.8-2.6C1172.1,164.6,1173.4,166.1,1175,167z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d:
                  "M977,113c4.7-2.4,9.3,0.1,13.7,1c3.2,0.7,6.2,1.2,9.3,1c1.2,2.5,3.5,1.9,5.5,2c2,0.1,4.3-0.5,5.5,2\n                        c-0.2,0.2-0.4,0.4-0.5,0.6c-5.3,3.8-11.7,2.5-17.6,3.6c-10.4-2.2-21.1-3-31.5-5.5c-1.8-1.7-5.3-1.3-5.6-4.7\n                        c3.8-2,7.6-1.1,11.3,0.4C970.5,114.8,973.8,114.9,977,113z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d:
                  "M1011,119c3-1.3,5.6-1,8,1.6c1.2,1.4,3-0.4,4.7-0.3c12.3,0.8,24.2,3.9,35.9,7.3\n                        c1.7,0.5,3.1-0.9,4.4,0.4c0.5,1.4-0.1,2.6-1.1,3.6c-1.5,1.3-3.4,2-5.1,1.4c-5.3-1.8-11.2-0.8-16.4-3.4\n                        c-2.7-1.4-5.9-0.3-8.8-0.9c-1.1-0.2-2.4,0.1-3.4-0.4c-5.7-2.7-11.6-4.4-18.1-4.3C1008,124,1007.9,122.2,1011,119L1011,119z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4750"),
                d:
                  "M1063,131c0.3-1,0.7-2,1-3c8,0.7,15.1,4.5,22.4,7.1c4.8,1.7,10.4,0.2,14.6,3.9c0.2,0,0.5,0,0.7,0\n                        c2.2,1.3,6.4-0.6,6.6,4c-0.5,0.9-1.3,1.6-2.2,2.1c-7.2-1-14.3-2.5-20.7-6.2c-1.8-1.1-3.7-2.3-5.9-2.7\n                        c-5.4-1.4-11.6-0.2-16.2-4.4C1063.3,131.4,1063.1,131.2,1063,131z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1108,137c0,0.7,0,1.3,0,2c-1.8,1.6-1.8,1.6-7,0l0,0c-0.4-1.2-0.8-2.4-1.3-3.8\n                        C1102.8,134.8,1104.9,138.2,1108,137z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1142,153c-3.1,0.5-6-0.8-9-1c-4.7-1.6-10.1-0.6-14.5-3.6c0.1-2.2-0.9-3.2-3.2-2.6\n                        c-0.5,0-0.9-0.1-1.3-0.3c-0.8-0.5-1.3-1.2-1.4-2.2c0.1-1,0.8-1.6,1.4-2.2c2.3,1.7,4.6,1.8,6.9,0c0.4,2.5,2.5,1.8,4,2\n                        c2.4,4.2,8.1,6.1,12,4c0.8,1.7,2.3,2,4,2C1138,151.2,1142.9,151.3,1142,153z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0434D"),
                d:
                  "M1114,141c0,0.8-0.2,1.6-1,2c-1,1.1-2.3,1.2-3.7,0.9c-0.5-0.2-0.9-0.5-1.3-0.9c-1-3.7-5.7-0.9-7-4\n                        c2.3-0.7,4.7,1.3,7,0C1110,139.5,1111.5,141.7,1114,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1158,159c-6.8,1.8-11.2-2.6-16-6c1-0.7,1.7-2.5,3.4-0.7c1.5,1.5,3.7,0.5,5.5,0.8\n                        c-0.1,2.9,1.3,4,4.2,4C1156.2,157.1,1159,155.6,1158,159z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1790,294c-3.7-0.5-7.5,1.1-11-1C1782.8,291.5,1786.4,293,1790,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("947474"),
                d:
                  "M1705,284c-3.3-0.5-6.8,1-10-1C1698.3,283.4,1701.8,282,1705,284z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("947474"),
                d:
                  "M1692,283c-2.6,1.7-4.8,0-7-1C1687.4,282.1,1689.8,281.6,1692,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1779,293c-2-0.3-4.2,0.8-6-1C1775,292.3,1777.2,291.2,1779,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1797,295c-2-0.3-4.3,0.8-6-1c1.7,0,3.4,0,5,0C1796.4,294.3,1796.7,294.6,1797,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1855,302c0,0.3,0,0.6,0,1c-8.8,0.1-17.3-2.2-26-3.2c-7.8-0.9-15.5-3.2-23.5-2.9\n                        c-2.7,0.1-5.2-0.6-7.5-1.9c1.7,0,3.4-0.1,5-1c4.5,1.8,9.3,1.7,13.9,2.4C1829.6,298.4,1842.3,300.2,1855,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53742"),
                d:
                  "M1099,655c-1.3,0-2.7,1-4,0c-1.5-1.4-3.3-1-5-1c-2.9,0-4.1-1.3-3.9-4.2c1.5-5.5,2.6-6.5,8.4-5.2\n                        c4,0.9,7.9,0,11.8-0.1c1.9,0,3.8-1.2,5.2,1.4c0.8,1.3,2.5,0.5,3.5-0.2c3.7-2.7,7.6-3.2,12.1-2.6c7.5,1,15.2-0.8,22.7,1\n                        c3.7,0.9,7.4,1,11.3,1.1c4.1,0.1,5-1.2,4.3-4.7c-0.1-0.5,0.1-1,0.4-1.4c1.9-1,3.5-0.4,5.1,0.8c4,2.9,7.9,3,11.4-0.2\n                        c1.6-1.4,3-2,4.9-0.9c0.7,1.4,0.4,3.5,3.3,3.1c3.2-0.3,6.2,1.6,9.5,1.4c5,2,10.4,2.2,15.6,3.2c2,1.5,4.4,1.1,6.7,1.1\n                        c7,0.1,14.1-0.2,21.1,0.2c2.1,0.8,4.2,1.4,6.4,0.5c0.8,0,1.6,0.2,2.3,0.5c1.8,1.1,3.9,0.9,5.9,0.8c11.5-0.6,22.9,0.9,34.3,1.2\n                        c2.2,0.1,4.3,0.5,6.4,1.2c1.3,0.5,2.5,1.2,1.5,2.9c-5.5,0-11.3,1.2-16.4-0.2c-7.3-2-14.7-0.8-21.9-2.1\n                        c-4.5-0.8-8.8,0.5-13.2,0.5c-21.8-0.2-43.7-0.1-65.5-0.1c-5.3-0.9-10.7-0.9-16,0c-5.3,0-10.7,0-16,0\n                        c-4.3-2.1-8.9-1.1-13.2-0.9c-8.9,0.4-17.9,0.1-26.8,0.3C1106.8,652.5,1102.9,653.7,1099,655L1099,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93745"),
                d:
                  "M1300,654.9c-1.7-3.8-5.7-2.5-8.2-2.6c-3.7-0.2-7.5-0.1-11.3-0.7c-8.4-1.3-16.8-0.3-25.2-0.7\n                        c-1.7-0.1-3.9,0.8-4.3-2c1.7-1.8,4-1.4,6-1.4c8.2,0,16.4-0.1,24.6,0c5.3-0.1,10.6,0.3,15.8-1.1c0.3-0.7,0.7-1.3,1.3-1.8\n                        c3.9-2.1,6.7,1.2,9.5,2.7c0.9,0.5,3.9,1,3.8,3.5c-0.3,0.3-0.7,0.7-1,1c0.7,1,0.9,2-0.1,3C1307.3,655,1303.7,655,1300,654.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3743"),
                d:
                  "M1099,655c2.4-2,4.7-4,8.2-4c13.1,0.1,26.3,0,39.4,0.1c1.7,0,3.9-0.8,4.4,2\n                        c-6.2,0.6-12.6-1.4-18.6,1.8c-2.5,1.4-5.4-0.5-8.4-0.2C1115.8,655.5,1107.4,655,1099,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3742"),
                d:
                  "M1167,653c0.2-1.4,1-2,2.3-2c3.8,0,7.6,0,11.3,0c1.4,0,2.2,0.6,2.3,2c-0.2,1.4-1,2-2.3,2\n                        c-3.8,0-7.6,0-11.3,0C1168,655,1167.2,654.4,1167,653z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB4251"),
                d:
                  "M1311,655c0-1,0-2,0.1-3c2.7,1.3,5.3,2.7,8,4C1316.3,655.6,1313.4,657,1311,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3948"),
                d:
                  "M1374,637c0,4.7,1.5,9.2,0.9,14c-19.6,0-39.2,0-58.9,0c-5.4-1.5-9.3-5.2-13.2-8.9c-1-1-2-1.7-3.4-1.8\n                        c-4.8-0.3-9.3-2.4-14.2-1.9c-4.5-1.5-4.7-1.8-3-4.4c4.5-0.9,9-0.4,13.4-0.4c11.8-0.1,23.6,0,35.5,0\n                        c12.6-0.1,25.2,1.4,37.9,1.2C1370.8,635.2,1372.5,635.7,1374,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB333F"),
                d:
                  "M1286,638c2.9-3,5.7,1,8.8,0.2c1-0.3,3.3,0.7,5.1,0.8c0.8,0.1,2-0.1,2.4,0.4\n                        c3.9,4.7,8.8,8.2,13.7,11.6c-1.3,1-2.7-0.5-4,0c-4.3-2.1-7.8-6-13-6C1293.1,645.6,1289.5,641.8,1286,638z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5859"),
                d:
                  "M1636,287c0-1.8,0-3.6,0-5.6c7.6,3.8,15.2,3.2,22.6,3.8c10.3,0.8,20.6-0.2,31.1,1.5\n                        c11,1.7,22.3,2.7,33.5,3.3c5.2,0.3,11,0.4,16.5,2.2c5.3,1.7,11.5,1.9,17.1,1c5.6-0.8,10.9,0.7,15.8,1.9\n                        c5.6,1.3,11.5,1.8,16.7,1.8c6.2,0,11.5,3.7,17.5,2.7c5.6-0.9,10.9,1.1,16.3,1.7c7.6,0.8,15.2,1.7,22.7,2.9\n                        c7.4,1.1,14.7,3.5,22.3,3.3c2-0.1,2.8,0.5,2.9,2.4c-1.3,1.2-2.9,1.7-4.6,1.3c-6.8-1.6-13.6-2.8-20.4-3.9\n                        c-2.8-0.4-5.5-1.2-8.3-1.2c-10.6,0.1-21-1.5-31.5-2.9c-10-0.7-19.9-3.2-30-3.3c-1.4,0-0.9,0.8-1.3,1.3c-6.4,1.5-12.8,2-19-0.3\n                        c-2.6-1-4.9,0.3-7.2,0.5c-2.7,0.3-5.2,0.8-7.2-1.8c-1.1-1.4-2.9-1.5-4.6-1.4c-14.3,0.8-28.5-0.2-42.5-3.7\n                        c-4.5-1.1-9.1-0.5-13.7-2.1c-2.2-0.8-6.4,1.3-9.8,1.2c-1.2-0.3-1.9-1.1-2.2-2.3c-0.1-0.5,1.4-1.3,0.3-0.8\n                        c-5.5,2.4-11.2-0.8-16.6,0.9c-0.5,0.2-0.9,0.3-1.4,0.4c-1.7,0.2-3.4,0.4-5-0.6c-1.6-4.8-6-2.4-9-3.6\n                        C1636.6,287.7,1636.3,287.4,1636,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("945659"),
                d:
                  "M1637,287c2.3,0,4.6,0.1,6.9,0c3.5-0.1,3.4,1.6,2.1,4c2,0.9,4,0.8,6,0c0.3-0.2,0.6-0.4,0.9-0.4\n                        c5.8,0,11.5,1.3,17.1,2.4c2.8-2.2,7.6,1.9,9.4-3.1c0.3,0.1,0.6,0.3,0.8,0.4c9.1,4.1,19,3.9,28.6,5.8\n                        c8.5,1.7,17.5,1.7,26.3,1.1c3-0.2,7.2-2,8.6,3.2c0.3,1.1,2.1,0.8,3.2,0.2c2.6-1.5,6.1,0.5,8.2-2.4c0.1-0.1,0.4-0.2,0.4-0.2\n                        c5.7,6.6,13.1,1.3,19.5,3c1.3,1,2.4,2.1,4.3,1.7c3.4-0.7,4.5,1.1,3.8,4.2c-1.8,1.7-4,1.3-6.2,1.3c-0.9-0.1-1.7-0.3-2.4-0.7\n                        c-4.1-2.2-8.5-0.7-12.7-1.1c-2.5-0.2-5,0-7.5,0c-13.3-1.6-26.8-2.5-40.1-4.5c-7.8-1.2-15.5-1-23.2-1.5c-1.7,0-3.4,0-5-0.7\n                        c-4.2-2.5-8.7-0.9-13.1-1.3c-3.6-0.5-7.4,1.1-10.8-1.4c-3.2-1.8-6.7-2.6-10.4-2.6c-6.5,0-12.9-0.2-19.4,0.2\n                        c-0.9,0-1.7-0.2-2.5-0.6c-7.1-1.9-14.5-1.1-21.6-2.6c-1.7-0.3-4.3,0.6-4.1-2.7c8.5-1.8,17-2.7,24.9,2.3c0.8,0,1.6-0.2,2-1\n                        c1.6-1.3,3.3-1,5.1-0.3c2.1,0.9,2.2,0.8,4,0.5C1639.3,289.9,1635.6,292.2,1637,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("875151"),
                d:
                  "M1807,302c8.5,1,16.9,3,25.5,2.7c7.7-0.3,15.2,1.9,22.7,2.9c5.3,0.8,10.4,2.8,15.8,2.4\n                        c11,1.7,22,3.3,33.1,5c2.4,0.4,4.2,2.7,6.9,2c0.7,0.8,0.5,1.5-0.1,2.3c-2.5,1.5-5.1,1.4-7.7,0.5c-6.2-2.1-12.6-2-19-1.9\n                        c-6.6,1.5-13.1-0.5-19.6-1.1c-2.9-0.3-5.9-0.2-8.8-0.8c-0.5-0.1-1-0.3-1.5-0.6c-5.6-1.3-11.3-1.7-16.9-3\n                        c-4.6-1.1-9.5-1-14.1-2.6c-4.4-2.3-8.9-3.8-14-3.7C1805.6,306.2,1805.2,305,1807,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("915A5D"),
                d:
                  "M1629,291c-8.2-2.6-16.6-1.9-25-2c-4.7,2.6-10,2-14.5,0.8c-4.8-1.3-9.5-1.2-14.2-1.4\n                        c-3.9-0.1-7.8,0.2-11.7-0.3c-2.3-0.8-4.6-0.7-6.9-0.7c-4.5-0.7-9-1.2-13.6-1c-1.5,0-2.9-0.1-4-1.4c-1.6-2-4.2-0.1-6.3-1.7\n                        c5.2-0.7,10,0.2,14.9,0.8c5.1,0.5,10.3-1.6,15.4,0.9c1,0.5,2.6,0.3,3.8-0.6c0.6-0.5,1.9-1.2,2-1.1c4.2,5.1,9.5-0.8,14.1,1.5\n                        c2.1,1.1,4.5-1.4,6.9-1.2c-8.4,0.3-16.7-1.7-25.1-1.5c-1.9,0-4,0.8-5.7-1c11.8,0,23.5,0,35.3,0c2.1,0,4.5-0.6,5,2.6\n                        c0.2,1.2,1.4,1.4,2.4,1.3c4.8-0.6,9.7,1.2,14.5-1.5c2.7-1.5,6.6-1,9.8-0.1C1629.6,284.5,1630.2,287.5,1629,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("895657"),
                d:
                  "M1911,319c0-0.7,0-1.3,0-2c6,1,11.8,3.5,18,3c0.3,0,0.7,0,1,0c4.7,2.3,9.9,2.9,15,4\n                        c2.2,1.3,4.5,1.8,7,2c1.9,2,5.1,1,7,3c8.6,0.8,16.4,4.3,24,8c-1,0-2,0-3,0c-2.1,1.8-4.3,1.3-6.5,0.3c-7.7-3.5-15.8-5.4-24-7.3\n                        c-9.6-2.4-18.8-6.4-28.9-6.6c-0.7,0-1.2-0.6-1.7-1c-2.1-2-5.3-1.4-7.6-2.9C1911.3,319.4,1911.1,319.2,1911,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("915A5D"),
                d:
                  "M1637,287c-0.5,4.2,3.4,2.3,5.1,3.6c-3.9,1.5-7.5-0.7-11.1-0.6c-0.2-4.1,2.9-2.7,5-3\n                        C1636.3,287,1636.7,287,1637,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5859"),
                d:
                  "M1632.2,282.5c1,0.3,1.4,0.7,1.4,1.4c0,0.9-0.7,1-1.4,0.9c-0.4-0.1-0.9-0.7-0.9-0.9\n                        C1631.5,283.4,1632,282.9,1632.2,282.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93393E"),
                d:
                  "M1485,284.9c0.7-0.3,1.3-0.6,2-0.9c13.3-0.7,26.6,1.2,39.9,1c4.7,1.3,9.5,0.5,14.3,0.6\n                        c9.4,0.3,18.8,1.9,28.2,1.9c2.9,0.8,5.9,0.3,8.8,0.5c1.7,0.1,3.7-0.5,5,1.3c0.2,0.6,0.2,1.2,0,1.8c-0.9,1-2.1,1.2-3.3,1.3\n                        c-2.4,0.1-4.8,0.1-7.2-0.4c-4.5-1.2-9.3-1.1-13.8-1.2c-12.9-0.3-25.7-3-38.7-2.3c-3.1,0.1-6.1,0.2-9.2-0.3\n                        c-6.4-0.8-12.9-1.4-19.3-1.6C1489.3,286.4,1487,286.5,1485,284.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4575B"),
                d:
                  "M1570,288c-13.7,0.2-27.2-2.1-40.8-2.1c-0.7,0-1.5-0.6-2.2-0.9c4,0,8,0,12-0.1c6-0.1,12,0,18,1\n                        c1.8,1.3,4.1-0.2,6,1c4,0,8,0,12,0C1573.8,289.6,1571.8,288.4,1570,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7434C"),
                d:
                  "M830,103c-0.5,1.1-0.7,2,1,2c-0.5,3.5-4.4,6-8.3,4.5c-3.4-1.3-6.6-1.1-9.7-0.2\n                        c-5.2,1.5-10.6-1.3-15.7,1c-0.8,0.1-1.6,0.1-2.4,0.1c-10.6-0.6-20.9,2.4-31.5,2.3c-1.6,0-3.7,1.1-4.3-1.6\n                        c2.6-2.8,6.3-1.7,9.2-1.7c7.3,0,14.1-3.7,21.5-2.3c1.9,0.4,2.6-2,4.4-2c7,0,14,0,21,0c3.8-2.7,8-0.3,12-1\n                        C828,103.7,829,103.3,830,103z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C2454F"),
                d:
                  "M759,111c4.5,0.9,9,0.2,13.4-0.2c7.5-0.6,15-2.1,22.6-1.8c0.4,1.3-0.3,2-1.2,2.6\n                        c-4.1,0.3-7.7,3-12,1.9c-2.2-0.2-4.3-0.4-6.5,0.3c-1.2,0.3-2.3,0.7-3.5,1c-10.1,0.9-20.2,0.5-30.3,1.4\n                        c-2.2,0.2-4.7,0.7-6.6-1.2c1-3.5,4.9-4.3,6.7-3.6c5.4,2,10.2,0.3,15.3-0.4C757.7,111,758.3,111,759,111z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0454B"),
                d:
                  "M827,104c-3.9,2-8.1-0.4-12,1c0.2-1.3,0.9-2,2.3-2C820.5,103.2,823.9,102.6,827,104z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("813F47"),
                d:
                  "M142,602c-2.3-1.3-4.7-2.7-7-4c-2.1-1.9-4.6-3.4-6-6c-1-1.4-2.1-2.4-4-2c-1.3-0.7-2.3-1.7-3-3\n                        c0.7-1,1.3-2,2-3c1.7,1,3.3,1.3,4.9-0.4c1.7-1.8-0.5-2.5-0.8-3.7c-0.6-2.5-3.8-4.5-1.4-7.6c0.2-0.3,0.3-1.2,0.1-1.4\n                        c-3.7-2.6-4.9-6.6-6.7-10.5c-0.9-2-2.4-4.1-3.1-6.4c1.1-0.5,2,0,2.6,0.8c0.8,1.1,1.3,1.4,1.8-0.1c1.6,0.4,2.4,1.8,3.2,3\n                        c3.9,5.9,8.9,11,11.7,17.7c2.8,2.9,5.5,5.9,4.4,10.4c-0.7,2.4,0.5,4.1,1.8,5.9C145.3,595.6,145,599.4,142,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("864F55"),
                d:
                  "M121,555c-0.9,1.2-0.9,1.2-4-1c-3-9-9.5-15.9-14-24c-0.7-1.3-1.3-2.7-2-4c0-1.1-0.2-2.2,0.9-2.9\n                        c3.9,2.3,5.1,6.6,7.7,9.9c3.3,5.9,7.2,11.5,10.2,17.5C120.2,552,121.7,553.2,121,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("813F47"),
                d:
                  "M138,605c2.5,0.3,3.5,2.4,5,4C140.2,609.1,138.8,607.4,138,605z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D444B"),
                d: "M125,590c2.9-2.4,3.7-0.7,4,2C127.4,591.8,126,591.3,125,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("50131C"),
                d:
                  "M105,510c-0.7,0-1.3,0-2,0c1.7-2.7,3.4-5.2,7.3-5c3.1,0.2,4.1-1.7,3.2-4.6c-1.8-5.3-3.1-10.8-8.7-13.7\n                        c-1-0.5-2.5-1.3-1.6-3.1c0.9-0.6,1.9-0.6,2.8-0.3c4.9,2.2,10.2,2.8,15.5,3.6c1.8,0.3,3.6,0.7,5.2,1.6c1.1,1,1.3,2.3,1.4,3.6\n                        c0,3.7,0.8,6.9,4.9,8.2c0.9,0.3,1.6,1.3,1.9,2.2c1.3,3.5,3.8,5.8,6.8,7.7c3.1,2,3.9,4.7,2.4,8.1c-1.8,0.5-3.6-0.1-5.4-0.4\n                        c-7.3-0.2-14.2-3.3-21.4-3.9C113,513,108.5,513.2,105,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("552025"),
                d:
                  "M106,484c-1,0-2,0-3,0c-1.2,0.2-2.2,0-3-1c-1.3-0.7-3-1-3-3c-2.1-3.1-1.2-5.8,0.8-8.6\n                        c5.5-7.7,9.4-16.2,12.1-25.3c0.7-2.8,2.3-4.8,5.3-5.4c3.2-0.6,6.3-2.1,9.6-2.1c1.6,0.6,2.5,1.6,2.6,3.4\n                        c-1.1,2.6-3.1,4.6-4.7,6.9c-3.7,5.1-5.8,10.8-7,17c-0.3,1.4-1.1,2.4-1.8,3.5c-1.5,2.5-3,5.1-1.1,8.1\n                        C108.6,477.6,106.8,480.3,106,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("47171B"),
                d:
                  "M100,483c1.1,0,2.3-0.2,3,1c6.5,3.3,9.9,9,11.7,15.7c0.7,2.8,2.2,6.9-3.2,6.4\n                        c-3.9-0.4-5.7,2.6-8.5,3.8c-6.4-2.6-8.2-5.4-6.8-12.3c0.7-3.5,1.1-6.9,0.7-10.4C96.6,484.6,98,483.7,100,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("552E31"),
                d:
                  "M111,446c0.5,3.9-2.2,6.6-3.5,9.9c-2.5,6.4-5,12.7-9.9,17.8c-1.5,1.5-0.4,4.2-0.6,6.3\n                        c-6.1,3.5-5.2,9.2-4.6,14.8c0.5,4.7,1,9.4,1.6,14.2c-2.8-2.9-2.5-6.8-2.9-10.3c-1-9.1,0.3-18.3,1.3-27.2\n                        c0.6-5.4,3.2-11.2,8.6-14.5c2.3-1.7,3.9-3.8,4.9-6.5C106.8,448.3,108.1,446.1,111,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("59272C"),
                d:
                  "M108.9,533.1c-3.1-2.8-4.8-6.6-7-10c-1-1.7-2-3.4-3-5c1.4-0.1,2-0.7,1.5-2.2c-0.5-1.4,0.5-1.6,1.5-1.8\n                        c2.9,1,1.4,5.4,4.6,6.2c1.6,1,2.3,3,4.2,3.6c0.4,0.2,0.7,0.3,1.1,0.6c0.5,0.8,1.1,0.6,1.7,0.1c1,0,1.6,0.5,1.9,1.4\n                        c0.4,2.6,1.2,5.1,0.1,7.7C113.3,535,111,535.2,108.9,533.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1F27"),
                d:
                  "M107,521c-2.4,0.2-4.2-0.1-4.1-3.3c0.1-1.2-0.6-2.5-0.9-3.7c0.5-1.7,1.8-2.8,3-4c4,1,8,2,12,3\n                        c-2.9,3.5-4.8,7.4-5,12c-0.3,0-0.7,0-1,0C109.4,524,108,522.6,107,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671320"),
                d:
                  "M1558,415c-10.3,3.5-21.3,4.8-31,10c-1.1,0.8-2.2,1.1-3.5,0.6c-1.4-2,1-3.6,0.6-5.5\n                        c-0.3-1.8,0.8-4.2-2.9-4c-2.8,0.2-2.6-2.8-2.7-4.5c-0.2-3.3-2-4.4-4.4-2.8c-5,3.3-8.1-0.9-11.5-2.7c-1.6-0.8-2.6-1-4.2-1.1\n                        c-3.5-0.3-7.4,2.7-10.5-1.8c-1.1-1.6-4.7-1.6-6-0.9c-4.1,2.2-7.3,0-10.8-1c-0.9-2.2-2.9-1.5-4.4-1.6c1.4,0.2,3.3-0.5,4.3,1.5\n                        c-0.5,2.8-2.6,2-4.1,1.6c-3-0.7-5.4-1.4-8,1.5c-2,2.2-4.3,0.8-4.9-2.4c-0.4-2.3-6.9-4.5-9.1-2.5c-3,2.9-6.5,2.4-9.7,2.1\n                        c-3.2-0.2-6.2-1-8.8,1.6c-0.4,0.5-1.6,0.2-1.8,0.4c-1.9,1.9-0.2-5-3.1-1.2c-1.2,1.6-4.1,0.3-6.2,0.8c-3,0.6-6.1,1.5-9.1-0.4\n                        c-1.3-0.9-2.4-0.2-3.6,0.7c-3.9,3.1-5.6,2.8-8.8-1.8c3.1-2.6,7-2.7,10.7-3.3c3.9-0.6,7.9-1.1,11.7-2.1\n                        c9.6-2.1,19.2-4.3,29-5.6c0.5-0.1,1-0.1,1.5-0.1c1.7,0.3,3.3,0.5,5,0.9c1.4,0.5,2.8-0.1,4.1,0.2c2.3,0.5,4.7,0.1,7,0.6\n                        c12.2,1.9,24.5,3.1,36.8,4.5c5.2,0.6,10.5,1.3,15.8,1.4c3.1,0.9,6.4,0.9,9.4,2c7.2,2.7,15,3.7,22.4,4.9c5,0.8,10.7,0.3,16,0.9\n                        c1.1,0.1,3.1-2,5.2-2c2,0.1,4,0.2,5.6,1.7c2.1,2,2,3.6-0.9,4.6C1568.5,413.3,1562.7,412.4,1558,415L1558,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB1E2B"),
                d:
                  "M1593,397c-0.7,0-1.3,0-2,0c-5.4,2.9-10.9,5.1-17.2,4.8c-2.1-1-3.1-2.5-1.2-5.2\n                        c-4.6,3.9-7.3,1.9-9.7-2c-1-1.7-2.3-3.2-3.5-4.8c-0.9-1.2-2.1-2.2-3.7-1.9c-4,0.7-7.8-0.5-11.8-0.7c-0.4-0.3-0.7-0.7-0.9-1.2\n                        c-0.7-3.5,2-2.9,3.9-3.3c3.2-0.1,6.4,0,9.6,0.4c0.7,0,1.4,0,2.1,0.2c1.6,0.3,3.1,0.8,4.4,1.9c1.2,0.8,2.4,1.6,3.7,2.2\n                        c8.2,4.1,16.9,6.5,26.1,6.3c1.8,0,3.6-0.1,5.2,1.1C1597.5,398.3,1594.2,395.3,1593,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72151D"),
                d:
                  "M1573,410c3-2.7,0.4-3.8-1.5-4.9c-1.2-0.6-2.9,0.2-5.8,1.7c-0.8,0.4-2,0.2-2.9,0.1\n                        c-5.2-0.4-10.8,0-15.5-0.8c-7.3-1.2-15.2-1.9-22.2-5.2c3.3-2.4,7-1.1,10.5-1.3c8.6,1.2,17.2,1.7,25.7,2.8\n                        c3.5,0.4,6.9-0.3,10.4-0.7c1.6,0.2,3.3,0.3,4.9-0.1c1-0.2,2.5-0.6,2.4,1.4c-0.8,0.6-2.1,1.1-2.1,1.7c-0.1,1.2,1.2,1.2,2.2,1.3\n                        c1.4,0.1,2.8,0.2,5.5,0.3C1580.1,408.7,1576.8,410,1573,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB707B"),
                d:
                  "M1712,400.1c-19.9-5.8-40.3-8.5-61-9.2c-6.3-0.9-12.6-0.1-18.8-0.4c-1.1-0.3-1.7-0.7-0.8-1.9\n                        c6.4-2,12.9-0.8,19.4-1c9.3,0.1,18.5,0.5,27.6,1.9c9.6,1.6,19.1,3.2,28.7,5c3.1,0.6,6.1,1.2,8.1,4\n                        C1714.7,400.2,1713.2,399.8,1712,400.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871924"),
                d:
                  "M1579,403c-2.3-2.2-4.7,1-7,0c-0.5-0.7-0.1-1.2,0.4-1.7c0.2-0.1,0.4-0.2,0.6-0.3\n                        c6.2-0.5,12.1-2.3,18-4c0.1,2.2-2.1,1.6-3.2,2.5c1.9,2,4.3,1.1,6.4,1.5c2.1,0.4,4.9,0.6,4.6,3.7c-0.3,2.8-1.6,4.6-5.1,4.2\n                        c-3.9-0.5-7.5-1.7-10.3-4.5C1582.1,403.1,1580.7,403,1579,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1625"),
                d:
                  "M1523,425c1.3,0,2.7,0,4,0c-0.7,1-1.3,2-2,3c0.6,3.1-3.7,0.8-3.8,3.6c-0.1,2.9-1.4,3.4-4.1,1.6\n                        c-2.2-1.4-5.1,2.3-5.3,2.8c-2,3.7-5.9,4-8.7,6.1c-3-3.3-0.5-4.8,1.9-6.6c4.4-3.2,9.5-5.5,13.7-9.1\n                        C1519.8,424.9,1521.1,423.7,1523,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE6B73"),
                d:
                  "M1631,389c0.3,0.3,0.6,0.7,1,1c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3\n                        c-0.3,0.2-0.7,0.3-1,0.5c-5.1,1.9-10.4,0.7-15.6,1.1c-2.8,0.3-5.6-0.7-8.3,0.6l0.1,0c-1.5,1-3.7-0.4-5,1.3\n                        c-0.9,0.5-1.9,0.5-2.8,0c0.8-2.5-3.4-4.1-1.3-6.8c3-1.7,6.2-0.5,9.2-0.3c6.9,0.6,13.8,1.2,20.7,0.7\n                        C1629,388,1630.2,388,1631,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1649,418c-0.7,0-1.3,0-2,0c-0.7-2-1.6-3.6-4.2-3c-3.7,0.8-7.7-0.1-11.3,1.6c-2.6,1.3-3.5-2-5.4-2.6\n                        c2.1-1.2,4.3-1.8,6.9-1.3c3.9,0.8,7.9-1,12,0.1C1647.9,413.7,1649.6,414.7,1649,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E96F7D"),
                d:
                  "M1712,400.1c0.7-1.3,1.9-1.1,3.1-1.1c0.8-0.8,1.9-0.9,2.9-0.8c2.6,1.4,6.2,0.5,8.2,3.4\n                        c-0.6,1.5-2.1,1.2-3.3,1.5c-3.2,0.3-5.7-2.5-9-2.1C1713.3,400.8,1712.3,401.1,1712,400.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871924"),
                d:
                  "M1599,394.2c1-0.1,2-0.2,3-0.3c0.5-0.5,0.9-0.3,1,0.4c0.1,2.2-1.1,2.8-3.1,2.7c-2.3-0.1-4.6,0-6.9,0\n                        c1.2-1.9,3.8-0.1,5-2C1598.2,394.6,1598.6,394.3,1599,394.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1632,391c0-0.3,0-0.6,0-0.9c6.3,0.4,12.7-1,19,0.9C1644.7,390.9,1638.3,390.9,1632,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871924"),
                d:
                  "M1615.3,392.1c5.2-0.2,10.4-0.5,15.7-0.7c-0.9,2.5-3.1,1.5-4.7,1.5c-3.8,0.1-7.6,0-11.4,0\n                        C1614.7,392.5,1614.8,392.2,1615.3,392.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1558,415c1,0,2-0.2,2.9,0c1.3,0.3,2.7-1.8,3.8,0.2c0.3,0.6-0.1,1.3-0.8,1.5c-1.5,0.4-3,1.8-4.5,0.1\n                        C1558.9,416.3,1558.5,415.6,1558,415L1558,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1532.9,427.9c-1.1-0.1-1.8-0.5-1.7-1.5c0.1-1,0.8-1.4,1.7-1.1c0.9,0.3,1.3,1,1.3,1.9\n                        C1534.2,428.1,1533.4,427.9,1532.9,427.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE676F"),
                d:
                  "M1615.3,392.1c-0.2,0.3-0.3,0.5-0.4,0.8c-2.6,0.1-5.2,0.1-7.9,0.2\n                        C1609.6,390.9,1612.5,392.4,1615.3,392.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1623,416c-0.9,0.2-2,1.6-2.8-0.1c-0.1-0.3,0-1.1,0.3-1.3C1622,413.8,1622.4,415.1,1623,416L1623,416z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1646.8,409.8c1-0.3,1.1,0.3,1.1,0.8c0,0.7-0.5,1.2-1.2,1.3c-0.5,0.1-1.1-0.1-0.9-0.7\n                        C1646,410.6,1646.5,410.1,1646.8,409.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1623,416c1-0.6,1.4-2.2,3-2C1625.6,415.5,1625.6,417.8,1623,416L1623,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE676F"),
                d:
                  "M1603,394.3c-0.3-0.1-0.6-0.2-1-0.4c1.5-1.6,3.3-0.7,5.1-0.9C1606,394.3,1604.3,393.7,1603,394.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831725"),
                d:
                  "M1818,469c0.3-0.3,0.7-0.7,1-1c2.6-4.2,6.4-6.8,11.1-8.2c3.6,4.1,3.7,4.3,2,8c1.1-1.7,2.8-1.4,4.4-1.4\n                        c2.9,0,5.7-0.5,6.7-3.9c0.2-0.8,0.9-2,1.6-1.5c2.4,1.7,4.9,0.1,7.3,0.8c1.8,0.5,3.7,3.3,5-0.6c0.2-0.6,1.4-0.4,1.8,0\n                        c2.6,3.4,5.7,0.3,8.5,0.6c2.2,0.3,4.7-1.4,5.2-4.4c0.5-0.6,1.1-1,1.8-0.3c0.4,2.2,0.1,4.4,0.2,6.6c-0.1,0.5-0.3,0.9-0.7,1.2\n                        c-0.6,0.3-1.1-0.2-1.7-0.1c0.6,0.1,1.2,0.5,1.8,0c0.2-0.2,0.4-0.5,0.5-0.8c0.4-2.2-0.7-4.5,0.8-6.6c4.5-0.6,3.8,2.7,3.9,5.3\n                        c-1.2,7.3-3.1,9.1-8.7,8.5c-2.3,0.1-4.3-1.5-6.6-0.9c-0.4,0.1-0.9,0.1-1.3,0.2c-2.2,0.4-4.4,1-5.4,3.1\n                        c-1.7,3.4-4.2,3.8-7.2,2.3c-0.4,0.4-0.5,0.6-0.6,1c-0.6,3.6-0.3,7.8-6.4,6.4c-4.6-1.1-7.2,2.6-9.8,5.6l0,0\n                        c-3.4,0.1-3.8-3.4-5.2-5.2C1824.1,479.3,1820.2,474.6,1818,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931928"),
                d:
                  "M1818,469c3.3,4,6.2,8.3,9.2,12.5c1.7,2.5,3.5,5.3,5.8,7.5c1.9,6,7.3,10,9,16c-2.7,0-5.3,0-8,0\n                        c-2.2-3.5-2.3-7.9-5.4-11c-1.5-1.5-2.4-4.1-5-3.4c-2.8,0.7-2.6,3.5-2.8,5.7c-0.1,1,0,2-0.8,2.7l-0.5,0l-0.5,0\n                        c-1.8-4.9-3.7-5.8-6.6-3c-0.5,0.5-1.1,0.9-0.6,1.5c3.8,4.3-1.4,4-2.9,5.5c-2.1-3.2-3.8-6.7-7-9c-1-2.2-2-4.4-2-7\n                        c-1.6-2.1-1.6-4.6-2-7c1.4,0,2.9,0.1,3-1.9c3.6-1.2,6.8-3.2,10-5C1814,472.9,1815.7,470.4,1818,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1628"),
                d:
                  "M1780,435c-0.9,1.7,1.1,4.1-1.2,5.6c-0.5,0.3-0.4,1.6,0.3,1.6c1.9,0.1,3.4,0.4,2.6,2.8\n                        c-0.7,2.4-2.8,1.8-4.6,2.1c-0.5,0.1-1,0.2-2,0.4c2.2-3.3,0.9-4.6-2.2-4.3c-2.5,0.2-5.2,0.2-7.5,1.4c-3.1,1.7-5.9,0.9-8.8-0.8\n                        c2.5-0.3,4.6-1.8,7.5-1.3c3,0.5,5.1-1.1,3.8-5c-0.7-2-1.6-4.5,1.8-5.5c3.9-1.1,1.7-2.6,0.1-4c-0.4-2.3-5.6-1.5-3.7-5.4\n                        c6.8,1.1,12.5,4.6,17.7,8.9C1784.9,435.2,1781.6,434.1,1780,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1321"),
                d:
                  "M1830,460c-3.7,2.7-7.3,5.3-11,8c-2.1-0.2-3.9-0.1-4.6-3.1c-0.5-1.8-2.8-3.5-5.2-4\n                        c-0.1,0-0.2-0.2-0.3-0.3c0.4-0.2,0.7-0.4,1.1-0.7c0.4-2.7,2.8-3.6,4.7-4.9c5.7-3.4,10.9-7.5,17.2-9.8c1.9,0.2,3.9,0.8,4.1,2.8\n                        c0.2,2-2.2,1.4-3.3,2.2c-1.4,0.9-1.7,2.9-3.6,3.1c0.3,0.8,0,2.1,1.2,2.3c1.3,0.2,2.1,0.8,2.2,2.2\n                        C1832,459.1,1831.7,460.3,1830,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92192A"),
                d:
                  "M1766.1,422.7c-0.1,2.8,4.1,2.4,3.9,5.3c-1-0.3-2-0.7-3-1c-3.1-1.7-6.4-2.4-9.8-3\n                        c-1.6-0.3-3.3-0.3-4.2-2c-2,0-4,0-6,0c-2.9-1-6.3-0.1-9-2c-1.7,0-3.3,0-5,0c-4.7-3.6-0.2-6.1,1-9c2.2-0.8,2.2-0.8,3.3,2.8\n                        c1.8-3,4.3-2.8,6.8-1.4c2.2,1.3-0.1,2-0.6,3c2.4,0.7,3.8-1.5,5.8-2.1C1755.5,415.3,1762,416.8,1766.1,422.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151E"),
                d:
                  "M1815,456c-1.7,1.3-3.3,2.6-5,4c-0.9-1.3-2-2.7,0-4c-0.8-2.3-2.2-0.3-3.3-0.5\n                        c-1.4-0.8-3.2-1.2-2.7-3.5c2.3-0.8,4.3-1.6,7.1-0.5c3.9,1.4,7.6-1.1,10.9-3.5c1-2.5,3.9-3.1,5.3-5.1c1.6-1.7,3.4-2.8,5.8-2.8\n                        c1.4,0.2,2.4,0.8,2.4,2.4c-0.1,0.8-0.6,1.3-1.2,1.8C1827.3,447.2,1821,451.4,1815,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86192C"),
                d:
                  "M1780,435c-0.7-0.6-1.4-1.5,0.3-1.2c1.8,0.3,2.9-0.1,3.7-1.6c0.3-0.3,0.7-0.5,1.2-0.5\n                        c4,1,7.5,3.2,11.4,4.5c0.8,0.3,1.6,0.7,2.4,1.1c0.8,0.4,1.6,0.8,2.2,1.5c0.2,0.4,0.2,0.8-0.1,1.2c-0.8,4.7-5.6,1.7-5.7,1.5\n                        C1791.2,436.8,1784.7,437.9,1780,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3746"),
                d:
                  "M1833,441c-2.1,0.3-3.9,1.1-5.2,2.9c-5.9-0.5-12,0.6-17.9-0.9c-0.4-0.3-0.7-0.6-1.1-0.9\n                        c2.7-4.8,7.8-3.5,11.9-4.2c3.7-0.7,7.5-0.2,11.3-0.1c0.9,0,1.7,0.3,2.4,0.7C1836.3,440.6,1833.5,440.1,1833,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B94350"),
                d:
                  "M1833,439c-8.1,0.2-16.4-0.9-24.1,3.1c-1,0-1.9-0.1-2.9-0.1c-1.3-0.8-3-0.6-4.1-1.9\n                        c-0.3-0.1-0.6-0.1-0.9-0.1c-0.1-0.3-0.1-0.6-0.2-0.9c9.3-2.9,18.8-4.6,28.6-2.9C1831,436.5,1832.9,436.7,1833,439z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D2B3C"),
                d:
                  "M1810,443c4.5-0.2,9.1-0.1,13.6-0.6c2-0.2,3.1,0.2,4.3,1.5c-1.5,2.1-3.7,3-5.9,4.1\n                        C1818.7,444.7,1813.8,445.2,1810,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811724"),
                d:
                  "M1811,473c-3,2.3-5.2,6.2-10,5c-2.5-0.1-4.7-1.1-7-2c1.4-1.3,3-1.6,4.8-1.2c1.4,0.3,2.1-0.5,2.2-1.8\n                        C1804.3,475.4,1807.7,473.1,1811,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1628"),
                d:
                  "M1753,422c2.8,1.5,6,0.8,8.9,1.6c1.9,0.5,4.1,1.2,5.1,3.4c-3.4,1.6-6.2,1.8-9-1.6\n                        c-1.3-1.6-4.5-1.4-6.9-0.4C1751.7,424,1752.3,423,1753,422z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("83162E"),
                d:
                  "M1804,452c0.7,1.3,1.7,2.3,3,3c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3\n                        c-5.8-0.7-7.7-6.6-12-9.3c-1.7-1.1-3.8-2.6-4.3-5.6C1796.2,443.9,1798.7,449.7,1804,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871C2F"),
                d:
                  "M1780,463c0-0.3,0-0.7,0-1c6.6-1.4,13.3-2.8,19.9-4.2C1793.6,460.9,1786.7,461.5,1780,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86192C"),
                d:
                  "M1802,440.1c1.6,0.1,3,0.7,4.1,1.9c-0.7,0.2-1.9,0.1-2.1,0.5c-0.4,0.8,2.6,1.4,0.7,2.2\n                        c-1.5,0.7-2.5-1.1-2.6-2.7C1802,441.4,1802,440.7,1802,440.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811724"),
                d:
                  "M1801,472c-1-0.7-2.8-0.7-2.5-2.4c0.3-1.8,2.1-1.6,3.5-1.6C1801.7,469.3,1801.3,470.7,1801,472z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1321"),
                d:
                  "M1807,456c0-0.3,0-0.7,0-1c1.3-0.5,3.3-3.1,3,1C1809,456,1808,456,1807,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6970"),
                d:
                  "M1726,402c-2.3-1.9-5.9-0.6-8-3c2-1.8,4.3-1.3,6.6-0.8c5.4,1.3,10.7,3.3,16.5,2.5c1-0.1,2.1,0,2.2,1.3\n                        c0.1,0.7-0.4,1.1-1.1,1.2c0.7,0.9,0.9-0.3,1.4-0.3c5.3-0.3,9.8,2.2,14.2,4.6c1.2,0.7,0.9,2.4,0.2,3.6\n                        c-1.6,2.4-3.9,1.5-5.8,0.9c-3.2-1-6.4-1.6-9.7-2.3c-4.9-0.9-9.1-4.3-14.3-4.3c-0.5,0.1-0.9,0.1-1.3-0.2\n                        c-0.4-0.3-0.8-0.7-1.2-1C1726,403.4,1725.3,402.7,1726,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A24"),
                d:
                  "M1727,405.2c0.3-0.1,0.7-0.1,1-0.2c7.2,0.8,13.3,4.6,20,7c0.8,0.3,1.3,1.1,1,2c-1,3.1-4.4,2.1-6.3,3.9\n                        c-0.4,0.4-1.1-0.2-1.1-1.1c0-1.7-0.3-3.6,2.8-3.1c-2.6-0.4-5.5-3.2-6.1,1.7c-0.1,0.8-1,0.7-1.6,0.4c-1.2-0.5-1.7-1.5-1.5-2.8\n                        c0.1-0.9,2-3-1.2-1.9c-0.3-2.4-2.1-2.1-3.7-2C1727.3,409.3,1726.8,407.6,1727,405.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90182D"),
                d:
                  "M1727,420c-5.1,2.6-10.4,4.7-16,6c-0.9-0.4-1.8-0.7-2.7-1.1c-1.4-0.6-1.6-1.8-1-2.8\n                        c0.9-1.5,2.5-0.5,2.8,0.2c1.6,3,2.3,0.6,3.4-0.3C1717.2,418.9,1724,417,1727,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M1663,417c-1.5,3.5-3.8,2.1-6,1C1659,417.7,1661,417.3,1663,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M1660,413.1c-0.2,0.3-0.4,1.1-0.9,1.2c-0.9,0.3-1-0.6-1.1-1.2c-0.1-0.7,0-1.4,0.7-1.6\n                        C1659.8,411.3,1659.7,412.2,1660,413.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7982"),
                d:
                  "M1726,402c0.2,0.7,1,1.5-0.2,2.2c-1-0.3-1.9-0.7-2.9-1C1723.6,401.8,1724.9,402,1726,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1628"),
                d:
                  "M1738,420c3,0.7,6.2,0.5,9,2C1743.9,421.8,1740.5,422.9,1738,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M1584.7,420.8c0.7-0.5-1.8-1.6,0.3-1.8c2.1-0.2,1.6,1.9,2,2.8c0.7,1.7-1.1,1.1-1.8,1.1\n                        C1582.4,423,1585,421.5,1584.7,420.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13541"),
                d:
                  "M807,639c-1.7-1-3.3-2-5-3c-0.2-2.3,1.8-2.1,3.1-2.7c0.8-0.1,1.5,0,2.2,0.3c3.8,1.4,7.5,3.2,11.8,3.3\n                        c4,0.1,7.3,1.9,9.3,5.6c-0.1,3.9,2.6,5.1,5.2,3.5c4.2-2.7,8.6-2.1,13-2.2c2.4,0,4.6-0.2,6-2.6c0.8-1.4,2.3-2,3.8-2.2\n                        c1.7-0.2,3.8-0.6,4.5,1.2c0.8,2.1-1.8,2.1-3.1,3.1c4.3,1.4,8.4,2.6,12.8,1.7c1.3-0.3,3.3-0.5,3.8,0.6c1.3,3,2.9,1.9,4,0.3\n                        c1.3-1.8,2.9-2.3,4.7-2.1c6.3,0.8,12.8,1.4,18.5,4.5c1,0.6,2,1.5,3.2,1.3c8.1-2,16.5,0.7,24.5-1.9c3.5-1.2,6.7,1,10.2,1\n                        c3.9,0,7.5,2.7,11.5-0.9c1.8-1.6,5.5,0.2,8.3-0.1c15.8,0.4,31.6,0.2,47.5,0.2c5.7,0,11.6-0.6,17.4-1.4\n                        c0.9-0.1,1.6,0.1,2.2,0.8c1.4,2,4,3.7,6.2,3.1c6.3-1.8,12.6-0.4,18.8-0.6c4.6-0.1,9.3-1,13.9-0.2c2.4-0.4,4.7-1.2,7.1-0.8\n                        c2.8,3.3-0.8,3.1-2.2,4.2c-5.2,0-10.4-0.4-15.5,0.1c-24.6,2.6-49.2,1.6-73.8,2.1c-3.8,0.1-6.5-2.4-10.1-2.2\n                        c-3.6,0.2-7,1.7-10.7,1c-3.2-0.6-6.4-1.5-9.6-0.9c-15.4,3.1-31.1,0.4-46.3,2.4c-12.2,1.6-24.2,0.9-36.3,1.5\n                        c-2,0.1-4.3,0.7-5.1-2.5c-0.5-1.7-8.6-2.3-8.9-0.8c-0.8,4.3-4.8,2.5-6.8,4.3c-5.3-2.3-10.7-4.7-16-7\n                        C822.1,648.7,814.3,644.3,807,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F313D"),
                d:
                  "M1070,653c0.7-1.3,3.6-1.5,2-4c1.4-1.3,3-0.7,4.5-0.4c4.3,1.4,8.9,2.2,11.5,6.4\n                        C1081.8,656,1076,653.8,1070,653z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63946"),
                d:
                  "M1088,655c-3.8-2-7.4-4.7-12-5c-0.3-0.6-0.3-1.1,0.3-1.5c2.4-1.3,5-0.9,7.6-0.8\n                        c1.2,0.1,2.3,0.3,3.1,1.3c-0.3,2.8,0.6,4.3,3.8,4c1.6-0.1,3.8-0.8,4.2,1.9C1092.7,655,1090.3,655,1088,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3D48"),
                d:
                  "M807,639c8,4,16,8,24,12c0.7,4.6-0.9,6.4-5.8,6.1c-8.7-0.4-17.5-0.1-26.2-0.1\n                        c-1.7-2.2-3.9-2.9-6.6-2.8c-2,0.1-4,0.1-6,0c-1.6-0.1-3.8,0.3-4.4-1.5c-0.7-2.2,2-2,3.1-3.4c-3.6,3.2-7.8,1.8-11.7,2.2\n                        c-1.9,0.2-3.4,0.1-2.5-2.5c0.2-3.7,2.8-3.8,5.6-4.6c2.6-0.7,4.7-4.1,7.5-0.2c0.8,1.2,2.5,0.7,3.8,0.8c1.6,0.1,3.7-0.3,2.2,2.6\n                        c-0.9,1.7,0.9,1.4,1.6,1.3c3.6-0.7,7.7,0.5,10.6-2.4c2-2,3.1-0.5,4.7,1C806.5,644.4,809,641.8,807,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63C46"),
                d:
                  "M771,649c0.1,0.8,1,2.1,1.2,1.8c1.8-2.8,4.4-0.7,6.4-0.9c2.2-0.2,3.8,0.9,4-2.4\n                        c0.1-1.3,1.7-1.9,2.2-0.1c0.5,1.9,2.6,1.3,3.4,2.7c-0.7,3.3-4.2-0.1-6,2.9c4.5,0,8.5,0.1,12.5,0c2.9-0.1,4.4,1,4.2,4\n                        c-8.9-0.8-17.8,0.2-26.7,0c-2.1-0.1-3.9,0.3-5.3,2c-2.3-2.9-5.7-1.5-8.6-1.8c-4.4-0.5-9-0.1-13.5-0.1c-2.4-4.1-1.6-5.8,3.2-6\n                        c2.6-0.1,5.2,0,7.8,0c1.7-0.5,5.4,1.7,3.9-3.2c-0.3-0.8,2.2-0.7,3.3,0.6c2.8,3.2,2.7,3,5.3-0.5C769.7,646.3,770,649,771,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46063"),
                d:
                  "M802,660c-6.3-0.5-12.7,1.1-19-0.9C789.3,659.5,795.7,657.9,802,660z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1399,552c1.5-0.2,3.3-0.6,3.7-2c1.1-3.7,3.7-3.1,6.4-2.7c0.2,2-2.1,1.4-2.6,2.6\n                        c0.7,1.8,2.2,1,3.4,1.1c1.1,0.2,2.6-0.2,2.9,1.3c1.2,6.8,5.9,8.8,12.1,8.9c0.2,0,0.4,0.5,1,1.3c-4.3,0-8.5-1.3-12.4,2.3\n                        c3.6,1,6.3-1.9,9.1-0.4c1.3,0.7,4,0.1,3.7,2.4c-0.3,1.8-2.5,1.1-3.9,1.2c-0.8,0.1-1.5,0.2-2.7,0.3c5,2.6,9.7,1.7,14.4,0.7\n                        c0.1,4.4,3.1,9.2-1.9,12.9c-0.9,0.6-0.8,1.7-0.6,2.8c1.2,6.2,2.2,12.4-1.7,18.1c-0.2,0.3-0.5,0.7-0.3,0.8\n                        c6.8,4.9-2.4,5.2-2.3,8.2c-7.2,1.8-14.4,3.2-21.8,1.7c-0.8-0.4-1-1.2-0.9-2c0.1-0.5,0.3-0.9,0.7-1.3c1.3-1.6,3-1.6,4.9-1.7\n                        c2.1-0.2,5.6-0.9,5.4-2.5c-0.4-2.7,0.7-6.2-1.8-8.2c-3.1-2.5-6-6.1-11.1-3.6c-1.9,1-3.2-1.3-4.3-2.6c-1.2-1.6-1.6-3.6-2.4-5.4\n                        c-3.5-11.2-3.6-22.3,1.1-33.1c3.2,1.1,0.3,5.4,3.9,6.7c-1.4-2.1-3.1-3.9-2.3-6.4C1398.5,552.8,1398.7,552.3,1399,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1428,611c-0.7-1.3-0.6-2.6,0.6-3.5c0.8-0.6,2.8,0.9,2.6-1.1c-0.1-1.7-2-1.2-3.3-1.4\n                        c-0.5-0.1-0.9-0.3-1.4-0.4c6.1-5.8,6-12.5,3.1-19.6c-0.9-2.2,1.8-5.3,5.1-5.5c-5.2-3.3,0.4-6.9-0.8-10.4c0.3-0.3,0.7-0.7,1-1\n                        c5.9,2,11.8,1.4,17.7-0.3c2.8-0.8,4,1.3,4.2,3.5c0.2,2.4,0.2,5-0.4,7.4c-0.7,2.9,0.7,6.4,0,8.2c-2,5.2,2.5,10.1-0.3,15\n                        c-0.5,0.8,0,1.6,0.8,2.2c0,1.3,0,2.7,0,4c1.1,1.3,1.2,2.7,0.2,4.1c-3.7,1.2-7.3,1.6-11.2,0.7c-3.9-0.9-8-0.2-11.9-0.4\n                        C1432,612.3,1429.7,612.8,1428,611z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93C48"),
                d:
                  "M1400,523c3.5,0.8,6.2,2.2,5.3,6.6c-0.1,0.5,0.3,1.4,0.7,1.6c1,0.6,1.3-0.4,1.9-1\n                        c2.4-2.3,4.1-3.2,5.8,1c0.6,1.6,3.5,2.8,5.9,2.5c2.5-0.3,1.8,1,1.3,2.3c-7.3,3-14.7,6-22,9c-6.7-3.7-5-9.9-4.5-15.7\n                        c1.4-1.7,3.4-0.4,5.1-1c-1-1.8-4.2-3.4-0.8-5.8C1399.2,522.5,1399.7,522.7,1400,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13B46"),
                d:
                  "M1398,553c-3,9.9-5.2,19.8-1.2,30c0.5,1.2,0.2,2.6,0.2,3.9c-2.5,1.2-4.6,0.5-6.6-1.3\n                        c-1.5-4.2-0.5-8.5-0.8-12.7c0.2-5.8-0.3-11.6,0.3-17.4c1.2-2.8,0.1-6,1.8-8.7c1.1-0.8,2.2-0.8,3.3,0.1c-0.1,2.8,1.1,4.6,4,5\n                        c0,0.3,0,0.7,0,1C1398.7,553.5,1398.3,553.5,1398,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43F4E"),
                d:
                  "M1395,547c-1,0-2,0-3,0c-1.2-1.1-1.3-2.6-1.3-4.1c0-7-0.3-14.1,0.2-21.1c1.3-2.6-0.1-6.3,3.2-8.1\n                        c0.5,0.1,1.2,0.1,1.2,0.6c0.8,4.9,2.3,9.8-0.2,14.6c0.3,5.6-0.2,11.4,4,16C1397.7,545.7,1396.3,546.3,1395,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1434.2,564.4c0,1.4-0.9,2-2.1,2.2c-0.6,0.1-0.9-0.5-0.7-1C1431.9,564.4,1432.8,563.7,1434.2,564.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1400,523c-0.3,0-0.7,0-1,0c-0.7-0.6-1.3-1.4-0.9-2.1c1.6-3.4-1.1-5.4-2.6-7.7\n                        c-0.4-3.3,0.9-4.7,4.3-4.1c4.2,0.7,8.2-1.9,12.7-0.4c2.1,0.7,4.6,0,6,2.4c0.3,0.4,0.8,0.9,1.2,0.8c6.7-2.7,11.8,2.5,17.6,4\n                        c4.7,1.2,8.5,2.6,11.9-2c0.7-0.9,1.8-1.5,3.1-1.5c1,0.2,2.1,0.2,1.8,1.7c-1.2,4.8-5.8,7.3-8.9,10c-2.4,2.1-8.2,0.2-12.5-0.1\n                        c-1.3-0.1-0.1-0.9-0.1-1.4c-0.2-1.9-1.2-3-3.2-2.5c-5.8,1.4-11.9-0.6-17.6,2c-1.2,0.5-2.6-0.2-3.7-1.2c0.7-1.5,2.6,0,3.3-1.3\n                        c-2.9-4.8-3.5-4.9-6.8-0.8C1403.1,520.2,1400.4,520.5,1400,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33440"),
                d:
                  "M1454,514c-0.4-0.8-1.2-1-2-1c-1.6-3.3,1.3-5,2.6-7.3c1.8-6.4,8.4-6.1,12.8-8.8\n                        c2.8-1.7,7.8,0.1,10.5,2c3,2,6,2.9,9.1,4.1c0,1.3,0,2.7,0,4c-0.3-0.1-0.7,0-0.9-0.2c-1.4-1.1-2.9-2.4-4.8-1.6\n                        c-2.4,1,2,2.7-0.3,3.8c-1.2,0.6-1.3,2.8-2.8,2.5c-2.3-0.3-0.3-3.1-1.9-4.1c-1.1,1-0.6,4.2-3.7,1.9c-3.6-2.7-6.8-1.9-8.1,2.2\n                        c-1.1,3.5-2.7,4.1-4.1,1.2c-2.6-5.1-3.6-1.8-5.2,0.4C1454.9,513.5,1454.4,513.7,1454,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33440"),
                d:
                  "M1469.6,512.6c-0.9,0.4-1.6,0.9-2.4,1c-0.6,0.1-0.7-0.5-0.5-1c0.3-0.8,0.7-1.6,1.7-1.2\n                        C1468.9,511.6,1469.1,512.1,1469.6,512.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3945"),
                d:
                  "M1465,557c-0.3,2.7-3.1,5.2-0.2,8.3c1,1.1-2.4,1-1.8,2.7c-0.7,0.1-1.9,0.8-1.9-0.5\n                        c-0.1-4.7,0-9.3,0-13.6C1465.2,552.6,1461.2,558.3,1465,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1438,565.1c1.8-0.9,5.1,1.7,5.6-2.6c0-0.4,1.4-0.8,2.2-0.8c1.1,0,0.8,0.9,0.3,1.1\n                        c-2.4,1,2.3,3.4-0.6,3.6C1443,566.7,1439.8,568.5,1438,565.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1443.2,556.5c-1.4-4,0.7-5.2,2.6-6.1c0.9-0.4,2,0.5,1.8,1.7c-0.1,1-0.7,2-1.1,3\n                        C1445.4,552.8,1444.4,552.9,1443.2,556.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1457,612c0-1.3,0-2.7,0-4c0.6-0.9,1.2-1.7,2.2-3.2c0,4,0,7.3-0.1,10.6c0,0.2-1.4,0.4-2.1,0.6l0,0\n                        C1455.9,614.7,1455.9,613.3,1457,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("53101D"),
                d:
                  "M217.9,270.9c1.4-0.6,2.8-1.1,4.2-1.7c1-0.1,2.1-0.4,2.8,0.7c-4.4,8.2-12.4,11.1-20.5,13.7\n                        c-8.7,2.8-17.4,5.3-26.3,7.7c-7.3,1.6-14.3,4.7-21.9,5.4c-2.3-0.8-1.5-2.2-0.6-3.5c1.5-2.1,3.7-3.2,6-4.1\n                        c10.8-4.4,22-7.9,33.2-11.1C202.6,275.6,210.3,273.3,217.9,270.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61262E"),
                d:
                  "M195,278c-6.2,3.6-13.2,4.8-19.8,7.5c-5.2,2.1-10.6,3.7-15.7,6c-1.6,0.7-4,1.7-3.5,4.5\n                        c-1.1,4.1-5.8,5.1-7.5,8.7c-0.6,0.5-1.3,0.7-2.1,0.4c-5-1.5-5.1-5.3-4.5-9.5c1.9-4,6.3-5.4,9-8.6c1-0.4,2-0.8,3-1.2\n                        c1.5,3.2,4.3,1.1,5.9,0.8c6.8-1.5,13.4-3.7,20.1-5.6C185.1,280.5,189.7,277.6,195,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("944048"),
                d:
                  "M178,290.1c10.6-3.3,21.4-5.7,31.7-9.8c4.7-1.8,9.3-3.5,12-8.2c0.6-1,2.2-1.4,3.3-2.1\n                        c5.2-0.8,9.3-4,14-5.8c0.5,4.9-3.1,6-6.6,7.1c-0.6,0.2-1.7-0.8-1.3,0.9c0.8,3.6-0.8,5-4.4,5.1c-1.8,0-3.2,1.7-3.5,3.6\n                        c-0.3,1.6,0.1,3.4-1.9,0.8c-0.5-0.6-1.1,0.8-1.1,1.6c0.1,1.5,1.7,3,2.4,2.8c5.8-1.9,10.2,3.1,15.5,2.9\n                        c-0.1,2.2-1.9,2.2-3.3,2.1c-14.6-0.6-29.2,1.5-43.8,1.3c-3.8-0.1-7.6,0.1-11.4,0.2C177.8,292.7,175.7,292.6,178,290.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB8687"),
                d:
                  "M1921,646.9c2-2.1,5.1,0.2,7-1.8c0.9-1.3,2.4-1.8,3.8-2c13.3-2.5,26.6-5.1,40.2-5.5\n                        c2.4,0.2,4.9-0.6,6.9,1.4c-2.8,1.7-5.8,2.2-8.9,2c-5.2-0.4-10,1.7-15.1,2.1c-8,1-16.1,1.8-24.1,3\n                        C1927.6,646.6,1924.3,647.2,1921,646.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("823E40"),
                d:
                  "M1979,639c-2.3,0-4.7-0.1-7-0.1c1.5-3.7,4.1,0,5.7-1.5c-0.4-0.5-2.4,0.9-3-0.9c0.1-0.6,0.5-1,1-1.3\n                        c13.6-0.8,27.2-2.5,40.9-2.2c0.9,0.4,1.7,0.9,1.5,2.1l-0.4,0.1l-0.4-0.1c-4.9,1.9-10.3,0.3-15.3,1.9\n                        C1994.3,637.7,1986.7,638.3,1979,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5052"),
                d:
                  "M2002,637c4.9-1.9,10.1-2.3,15.3-1.9c0.5,0.5,0.9,1.1,1.4,1.6C2013.1,636.8,2007.6,636.9,2002,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5052"),
                d:
                  "M2018,635.1c-0.4-0.4-0.7-0.8-1.1-1.2c0-1.5,1.2-2,2.3-2.1c12.6-1.3,25.2-3.2,37.8-4.2\n                        c0.7-0.1,1.3,0.1,2,0.1c0.9,0.2,1.8,0.6,2.3,1.4c-2.7,1.6-5.7,1.7-8.7,1.9c-1.8,0.1-3.7,0.1-5,1.7c-1.6,0.1-3.1,0.2-4.7,0.3\n                        C2034.5,632,2026.5,636.1,2018,635.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1626"),
                d:
                  "M1519,427c-0.3,0.9-4,3.8-5,4c-4.1,0.8-11.3,8-11,11c0,0.3,0,0.7,0,1c-4.8-0.1-7.3,4-10.8,6.3\n                        c-0.1,0.1-0.1,0.3-0.3,0.4c-3.9,2.1-7.4,4.4-10.5,7.9c-2.1,2.4-7.4,1.3-10.3-0.6c-3.4-2.2-6.6-2.8-10.3-2.7\n                        c-0.8,0-1.7-0.1-2.5-0.3c-1.7-0.4-3.9-0.3-4-2.8c-0.1-2.9,2.2-2.8,4.1-3.4c-5.3,2.2-10.9,1.2-16.3,1.4\n                        c-5.1,0.2-0.8-3.6-2.4-5.1c1.3-0.5-0.2-0.9,0.3-0.5c0.3,0.2,0.2,0.3-0.1,0.4c-2.5,1.3-5.1,0.6-7-0.8c-2.1-1.4-4.5-4.2-6.3-3.4\n                        c-3.6,1.6-7.8,2-10.8,4.8c-0.7,0.7-1.4,1.5-2.3,1.8c-3.7,1.2-6,3.3-5.8,7.5c0,0.8-0.7,1.5-1.5,1.9c-5.2,0.5-10.1-0.6-14.8-2.7\n                        c-2.1-2.3-1.9-5.2-1.8-8c0.1-4.8-0.7-9.6,0.4-14.3c1.1-2.6,3.1-2.5,5.4-2.1c14.5,2.6,29.2,4.6,43.7,7.3c7,1.3,14.2,2,21,3.8\n                        c9.4,2.4,17.1-2.8,25.5-4.9c9.6-2.4,19.2-5.2,28.6-8.6C1516,425.7,1517.6,425.7,1519,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1625"),
                d:
                  "M1407,455c-1.2-5,0.7-7.3,5.5-9.8c3.6-1.8,7.4-3.6,10.8-5.7c3.8-2.3,6.5-1.2,9,1.9\n                        c1.9,2.3,6.3,2.4,7.9-0.2c1.4,2.4,0.4,4.9,0.5,7.7c2.6-1.9,5.1-3.2,7.8-0.5c1,1,2.1-0.1,3.1-0.6c3.6-1.5,7.2-1.6,10.8,0.5\n                        c-0.5,0.5-0.7,0.9-0.9,0.9c-2.3,0-6.1-1.3-6.3,1.4c-0.1,3.3,4.1,2.3,6.3,2.4c3.7,0.2,6.9,0,10.1,3c1.7,1.7,7.5,1.9,9,0.4\n                        c3.1-3,4.8-6.6,10-7.3c1.8-0.2,4.5-3.7,6.6-6c1.6-1.8,3.7-1.4,5.6-0.3c-0.8,1.5-1.8,2.6-3.5,3c-2.2,0.6-0.9,1.9-0.5,3\n                        c-5.6,4.1-9.5,10-15.2,14.1c-1.4,1.2-4.6-0.1-4.4,3.3c-0.1,0.5-0.3,0.8-0.7,1.1c-2.2,0.9-4.3,0-6.4-0.3\n                        c-2.2-0.3-4.2-0.7-5.6,1.8c-1.2,2.1-2.4,1.6-3.7-0.2c-2.4-3.5-4.5-3.5-5.9,0.5c-1.3,3.8-3.6,4.7-7.1,4.4\n                        c-1.1-0.1-2.7,0.2-3-1.1c-0.3-1.4,0.9-2.8,2.2-2.9c3.7-0.3,3.8-3.8,5.4-5.8c1.2-1.5,0.4-3.1-0.9-5c-1.4,1.7-1.9,5.2-5.2,2.5\n                        c-0.4-0.3-3.8,2.5-6.1,3.4c-2.2,0.9-3.9,1.3-4.2-1.8c-0.3-2.8-2.4-3.8-4.6-4.3c-2.5-0.6-3.6,0.9-3.9,3.2\n                        c-0.1,0.9-0.8,1.5-1.8,1.2c-0.8-0.3-1.4-0.9-1.4-1.8c-0.1-1.4,1-2.9-0.5-4.2c-0.4-0.9,0.6-1.6,0.6-2.2c0-1.6,3.3-1.7,1.4-3.9\n                        c-1.8-2.2-3.8-2.3-6-0.8c1.7-0.4,3.5-0.6,4.8,0.7c1.7,1.8-0.1,3.3-0.8,4.9c-0.4,0.7,0,1.3,0.5,1.8c0.8,1.8,0,2.9-1.5,3.6\n                        c-2,0.9-4.7,0.2-5.8,3.5c-0.5,1.6-2.4-0.6-3.7-1.1c-2.1-0.8-2.1-2.7-2.1-4.6c-0.8-1.7-2.6-1.6-4.1-2.1\n                        C1408.3,456.5,1406.8,456.8,1407,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1828"),
                d:
                  "M1483,462c1.9-0.1,3.1-1.6,3.9-2.8c3.2-4.5,6.8-8.3,12.1-10.2c1-0.3,1.4-2.6,2.7-1.4\n                        c1.8,1.7-1,1.8-1.5,2.7c-1,1.9-3.6,2.3-4.3,4.6c-0.3,1.2-0.6,2.3,0.4,3.2c1.1,1,1.6-0.5,2.5-0.7c3.6-1,7.5-1.1,10.1-4.6\n                        c1-1.3,2.4-2.3,3.5-3.8c2.7-3.7,6.5-5.4,11.2-3.2c0.9,0.4,2.2,0.7,2.6-0.3c0.3-0.8-0.1-2-0.5-2.8c-0.7-1.5-1.4-0.4-2.3,0.1\n                        c-1.2,0.6-2.7,0.8-3.7-0.3c-0.4-0.5-0.6-2-0.3-2.2c1.4-0.9,1.9-3,4-2.9c4.4,0.1,8.7,0.2,12.9-1.4c2.2-0.8,4.6-0.6,5.4,2.4\n                        c-0.8,1.3-2.3-0.7-3.1,0.6c0.2,1.4,1.4,1.7,2.5,1.9c1.1,0.1,2.6-0.6,2.6,1.2c0,1.3-1.5,1-2.4,1.1c-4.8,0.6-4.2,5.2-6.1,8\n                        c-1.6,2.3-4.5,2.3-6.5,2.7c-6.6,1.2-12.5,3.9-18.5,6.3c-3.6,4.3-9,5.4-13.7,7.2c-5.5,2.2-10.6,5-16.1,7.3\n                        c-1.2-0.1-2.3-0.4-3.2-1.2c0.3-2.2-0.2-4.7,2-6.3c0-0.3,0-0.7,0-1c0.4-0.8,1.1-1.6,1.9-1.5\n                        C1483.2,464.8,1482.4,462.9,1483,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1E2D"),
                d:
                  "M1460,492c0,1.3,1,2.7,0,4c0,0.2-0.1,0.5-0.1,0.7c-4.3,4.7-8.6,7.6-16,5.9c-3.7-0.8-8.5-0.5-12.8-0.4\n                        c-8.7,0.2-16.3-4-24.6-5.4c-1.1-0.2-2.1-0.9-3.3-0.6c-6.9,1.9-7.3,1.7-11-3.6c-0.6-1.8-0.6-3.5,0.1-5.3c1-1.5,2.2-2.8,4.2-2.9\n                        c8.6,0.2,17,2.2,25.6,3.2c3.1,1.4,6.2,2.8,9.8,1.7c0.7-0.1,1.4-0.1,2.1,0C1442.4,492.3,1451,494.7,1460,492z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A31E2C"),
                d:
                  "M1480,474c9.2-6.5,20.3-8.8,30-14c3.2,3,6.7-2.8,9.9,0.7c-2,1-1.6,5.7-6.6,4c-1.5-0.5-1.1,2.3,0.6,3.3\n                        c-1.3,1.3-2.7,2.7-4,4c-2,0-4,0-6,0c-2.3,3.3-6.4,2.2-9.4,3.9c-1.3,0.7-1.3-1.9-2.3-2.7c0.4,1.2,0.2,3.1-0.7,3\n                        c-6.5-0.9-7.6,6.5-12.7,7.7c-2.7-0.8-4.7,1.8-7.8,1c-2.1-0.5-0.7-1.5-1.2-2c-1.4-2.7,1-3.8,2.3-5.4c1.5-1.4,3.6-1.8,5.2-3.2\n                        C1478.3,474.1,1479,473.5,1480,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF303C"),
                d:
                  "M1487,503c-3.6,0.6-7.1,1.4-9-3.2c-0.4-1.1-2.1-0.8-3.2-0.8c-1.7,0-3.6,0.9-4.8-1.3\n                        c-0.2-0.3-1.2-0.6-1.2-0.6c-2.3,4.6-9.5,1.3-11.1,7.1c-0.3,1.3-1.5,1.7-2.7,1.8c-0.2-0.1-0.4-0.2-0.6-0.3\n                        c-1.6-2.3,0.5-3.5,1.6-4.9c1.3-1.6,3.2-2.8,4-4.8l0,0c10.5-3.7,21.7-5.6,31.6-11.1c0.8,3,1.7,6.1-0.6,9.1\n                        C1488,496.2,1486.6,499.2,1487,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1825"),
                d:
                  "M1473,478c-0.7,1.8-3.1,2.6-3,5c-5,1.1-6.1,6.6-10,9c-5.6,5.2-11.9,1.6-17.8,1.1\n                        c-2.6-0.2-6-0.8-8.3-3.2c-0.1-1.3,3.8-1.5,0.7-3.9c-1.6-1.2,1.6-4.4,4.5-4c3.3,0.5,6.5,1.3,8.8,4c1.2,1.5,2.3,1.9,3.5,0\n                        c1.8-2.8,3.6-5.7,5.9-0.3c0.3,0.7,1.4,1,1.6,0.5c0.8-2.7,4.9-2.2,5.1-5.4c0.1-1.5,0.9-2.5,2.4-2.8c2.3-0.5,3.5-1.7,4.4-4.1\n                        c1.2-3.1,3.8-2.5,6.1-1c1.1,0,2.3-0.2,3,1c-0.7,0.3-1.3,0.7-2,1C1476.6,476.4,1474.1,476,1473,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92330"),
                d:
                  "M1479,484c0.2-0.8-0.5-2.1,1-2.3c2.4-0.4,5.1-0.5,3.7-4.3c-0.1-0.3,0.7-3.5,2.8-2.3\n                        c5.1,3,5.1-0.9,5.8-5.1c0.9,2.2,1.4,3.6,2.2,5.5c2.3-3.9,6.6-1.6,9.5-3.5c-0.1,2.6-0.4,4.6-4,4.8c-1.7,0.1-4.7,0.3-5.1,3.6\n                        c-0.2,1.6-1.1,0-1.7-0.1c-4.2-0.6-8.2-0.5-10.9,3.6C1481.5,485.2,1480.1,485.4,1479,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M226,461c0.1,1.4,0.9,2,2.3,2c3.7,0,7.2,1,10.7,2l0,0c-2.1,2.4,0.7,3.7,1.5,5.5\n                        c-1.6,0.3-3.6-1.1-4.2,1.2c-0.4,1.5,0.4,2.1,1.8,2.2c0.9,1.4-0.2,5.9,3.9,2.3c-1.2-1-2.9-1-3.9-2.3c3.5-2.1,8.8-0.2,9.3,3.3\n                        c0.2,1.4,0.7,2.8,1.1,4.1c-1.5,1-2,0-2.6-0.8c-0.6-0.9-1.3-1.5-2.8-1.5c2.9,5.5,1.1,9.2-4.1,11.6c-0.5,0.2-1.3,1.1-1.2,1.3\n                        c2.3,4.5-2.1,3-3.6,4c-1.8,1.6-4,1.5-6.1,1.2c-13.5-1.9-26.7-5-40.3-6.2c-0.5,0-0.9-0.4-1.3-0.6c-1.5-2.3-1.2-3.7,2.5-3.7\n                        c-1.9-1.8-4.1-3.2-3.3-6.1c0.4-1.5,1.1-2.2,2.8-2.3c-2.2-1.2-4.5,0.5-6.6-1.3c-1-0.9-3.8,0.6-3.1,2.5c1.3,3.6-1.3,3.5-3.2,4\n                        c-2.2,0.7-4.6,0.8-6.9,0.2c-1-0.3-1.7-1-1.8-2.1c-0.1-1.1,0.3-2.2,1.4-2.4c2.2-0.4,3.7-2.2,6-2.6c-1.4-0.4-2.6-2.6-3.8,0.8\n                        c-0.8,2.3-2.5,0.2-3.4-1.3c-1.5-2.8,0.1-6.7-3.1-8.9c-0.4-0.3-0.3-1.4-1.1-1.4c-5.9,0-4.7-3.7-3.8-7.2\n                        c0.7-2.7-0.2-4.4-2.4-6.2c-3.7-3-3.4-9.8,0.6-12.4c2.2-1.4,4.5-0.4,6.3,1.3c0.7,0.7,0.6,1.9,1.7,2.4c2.1,0.9,3.2,3.3,6,3.1\n                        c-0.9-1.7-1.5-3.8-3.5-4.8c-2.9-1.5-5.2-3.1-3.5-6.9c0.6-1.4-0.6-1.6-1.6-1.8c-1.3-0.2-2.7-0.1-3.5-1.5\n                        c1.7-3.1,4.9-1.9,7.5-2.5c5.5-1.2,11-2.1,16.5-2.6c1.6,0.1,3.1-0.5,4.6-0.8c3.7-0.3,7.4-0.2,11.1-1.1c2.7-0.3,5.4,0.5,8-0.9\n                        c1.9-0.4,3.7-0.6,5.6,0.2c3.2,1.1,6.8-0.3,10.9,2.2c-0.7,0.2-1.5,0.2-1.9,0.5c-1.3,1.3-1.6,3.2-0.5,4.5\n                        c1.5,1.7,3.3,0.2,4.3-0.8c3.4-3.7,3.2-1,3.2,1.6c-2.5-0.7-2.7,2.4-4.9,2.6c5,1.7,5,1.8,0.5,8c2.4,0.2,4.7-3.1,6.8,0.1\n                        c-1.2,2-6.9,5.6,1.6,4.6c1.6-0.2,1.7,1.1,0.9,2.4c-1.7,2.6-3.3,4.9-0.3,8.1c1.2,1.2,0.9,4.1-2.6,3.3\n                        C228.7,460.9,227.3,461,226,461c-0.6-0.6-0.6-1.2-0.1-1.9c2.7-0.9,3.6-2.2,1.1-4.4c-0.8-0.7-1.5-2.4-2.6-1.2\n                        c-1.1,1.1,0.7,1.8,1.3,2.6c0.3,0.3,0.6,0.7,0.8,1.2c0.1,0.7-0.1,1.4-0.6,1.9c-1.8,1.6-3.7,2.1-5,0.5c2,1.1,1.7,3.8,2.1,6.3\n                        c0.3,0.4,0.3,0.8-0.1,1.2c-1.4,1.9-2.4,1-3.3-0.4c1.2,2.2,2.4,2,3.7,0c3.6-0.1,6.2,1.1,6.4,5.6c1-2.7,0.2-4.1-2.2-4.9\n                        c-1.6-0.5-3.6-0.3-4.9-1.9C223.4,463.7,221.7,460,226,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B1229"),
                d:
                  "M186,489c3.4,2.3,7.4,0.7,11.1,1.4c12.3,2.2,24.4,5.2,36.9,5.6c0,1.3,0.7,2,2,2\n                        c-0.5,3.4-1.4,6.5-4.3,8.7c-1.3,0.6-2.7,0.6-4,0.6c-16.1-3-32.3-5.2-48.4-8.1c-1.6-0.7-3-1.7-2.2-3.7c1.3-3.4,4.2-1.1,6.4-1.7\n                        c1.3-1.8-2-3.5-0.1-5.3C184.3,488.1,185.2,488.2,186,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70132C"),
                d:
                  "M187,427c-1.2,0.7-2.5,1.2-4,1c-0.5-0.5-0.7-1.3-0.3-1.8c3.6-3.3,5.5-8.9,11.8-8.5\n                        c6.1-1.7,12.5-1.9,18.7-3.2c9.1-1.9,18.5-2.1,27.4-5.1c3.7,0.7,4.9,3.1,4.4,6.6c-1.4,2-2.4,3.3-5.6,3.6\n                        c-9.2,0.8-18.3,2.8-27.4,4.4c-1.7,1.1-3.3,1.1-5,0c-1.3,1.3-2.9,1.7-4.7,1.4c-1.5-1.5,1.1-2.6,0.2-4.3\n                        c-2.2-0.2-3.9,0.8-5.4,2.4c-1.6,1.8-2.6,5-5.7,1.2C190.8,424,188.6,426.3,187,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79152F"),
                d:
                  "M232,506c1.4-2.6,1.3-6,4-8c2.5-2.4,5.2-0.5,7.5,0.1c7,1.8,14.5-0.6,21.5,3.2c-3.3,3.1-5.8,6.9-10,8.8\n                        c0,0-0.5,0-0.5,0l-0.5,0c-5.2,0.3-10.4,0-15.5-1C236.1,508.5,233.6,508.3,232,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C304B"),
                d:
                  "M269,452c0,0.7,0,1.4,0,2c-3.4-2.8-4.9-7-7-10.6c-3.7-6.4-8.1-12.5-11-19.3c0.2-0.1,0.4-0.3,0.6-0.4\n                        c2.8-0.1,3.1,2.5,4.1,4.1c1.3,2.1,2.7,4,4,6.1c2.2,4.4,4.9,8.6,7.5,12.8C268.2,448.3,269.9,449.7,269,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M239,465c0-1.7-1.3-2.6-2.1-3.8c-1.3-1.9-1.3-3.6,1.4-5.3c-1.1,6.3,3.9,8.3,7.3,10.8\n                        c1.8,1.3,3.1,2.7,4.4,4.3l0,0c-1.2-0.1-2.4,2.2-3.6-1C245.5,467.7,241.6,466.6,239,465L239,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F4B"),
                d:
                  "M245,416c-1.2-2.1-1.7-4.6-3.8-6.1c-1.4-0.9-2.2-2-1.3-3.7c4.1-0.7,4,3.4,5.9,5.2\n                        c1.4,2.2,2.5,4.5,4.1,6.5c1,1.9,2.9,3.6,1.2,6c0,0-0.1,0.1-0.1,0.1C249,421.4,247,418.7,245,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M238.8,429.1c-0.4,2.3-0.8,3.9-2.6,4.5c-0.2,0.1-1-0.5-1-0.7C235.1,430.8,236.4,429.8,238.8,429.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M252,473c-1.3,0-2-0.7-2-2l0,0c1-0.4,1.6-1,2-2l0,0C255.1,470.3,252.4,471.7,252,473L252,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M252,469c-3.3-2.1-1.6-3,0.8-4.3C253.8,466.7,251.5,467.6,252,469L252,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M237,425.4c0.7,0,1.3,0.3,1.4,1c0.1,0.7-0.5,1.2-1.2,1.2c-0.3,0-0.8-0.5-1-0.8\n                        C236,426.2,236.2,425.6,237,425.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M229.8,433.9c-0.2,0.1-0.6,0.6-0.9,0.5c-1-0.3-0.8-1.2-0.8-2c0-1.1,0.7-0.3,0.9-0.2\n                        C229.6,432.4,229.9,433,229.8,433.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M252,473c1.1,0.8,1.2,1.9,0.7,3.1c-0.1,0.1-0.6,0.2-0.8,0C250.5,475,251.7,474,252,473L252,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M234.2,427.9c0.3,0.8-0.2,1-0.6,1c-0.4,0-0.9-0.3-1.1-0.6c-0.3-0.5,0.2-0.9,0.7-0.9\n                        C233.5,427.4,233.9,427.7,234.2,427.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69122A"),
                d:
                  "M251,424c0.5-2.4-2-3.8-2.2-6c0.8-1.9,2.5-1.8,4.1-2c4.7-0.6,9.5-1.1,14.2-1.9\n                        c1.2-0.2,2.5-0.3,3.6,0.4c0.1,0.1,0.3,0.2,0.4,0.3c0.9,5.9,4.8,8,10.4,8.1c0.5,0,1,0.1,1.4,0.3c1.1,0.5,2.3,1.1,1.9,2.5\n                        c-0.4,1.2-1.6,1-2.6,0.8c-1.6-0.4-3.2-0.8-4.5,0c6.1-0.8,10.8,2,14.6,6.9c0.1,0.5,0.1,0.9,0.1,1.4c-0.6,1.7-2.4,2-3.5,3.1\n                        c-0.9,0.6-1.6,1.7-3,1.1c-2.4-1.4-3.2-0.4-3,2c-0.1,0.7-0.5,1.2-1.2,1.5c-2.4-0.6-2,1.7-2.8,2.7c-0.6,0.3-1.3,0.3-1.7,0.9\n                        c-3.5,4.8-3.9,4.8-6.9,0.3c-0.4-0.1-0.8-0.3-1-0.6c-2-1-3.3-2.5-4.1-4.6c-1.2-3.2-3.5-5.4-6.5-7\n                        C255.1,431.6,255.2,426.1,251,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1631"),
                d:
                  "M336,413c-9.9,4.5-20.4,7.8-30,13c-3.6,0.2-7,1.4-10.3-2.1c-1.9-2.1-6-0.5-9-1.2\n                        c-1.4-0.3-3.4,0-3.6-1.8c-0.3-1.9,1.5-1.7,2.8-1.7c0.1,0,0.2-0.1,0.1-0.3c-1.5-2.5,0.5-4.3,1.2-6.5c0.3-0.4,0.6-0.8,1-1\n                        c1.5-0.5,2.9-0.7,4,0.9c0.2,1.6-2.2,3.4,0.4,4.8c1.8,1,3.6,1.9,5.3-0.1c1.3-1.5,3.7-0.1,4.8-2c0.3-0.4,0.6-0.7,1-0.9\n                        c2.8-1.3,6-1.2,8.9-2c1.1-0.3,2.3-0.6,3.4-1c1.4-0.4,2.8-0.6,4.1-1.1c3.2-1,6.5-1.7,9.7-2.9c0.7-0.2,1.4-0.3,2.1-0.4\n                        c1.5,0,3,0,4.1,1.3c-0.3,2.2-2.8,1.5-3.7,2.8C333.4,411.9,335.5,411.2,336,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73132E"),
                d:
                  "M288,413c0.8,2-3,3.2-0.7,6c1.1,1.3-2.9-0.1-3.9,2.8c8.5-2.3,15,3.3,22.6,4.3c-2.1,2-5.3,2.5-7,5\n                        c-0.1,0.2-0.2,0.4-0.4,0.6c-1.6,1.3-3.6,1.8-5.4,2.8c-0.5,0.1-0.9,0-1.2-0.4c-4.8-4.9-10.6-7.7-18-7.3\n                        c3.6-0.7,6.7-2.8,10.1-1.2c-1.7-2.5-4.6-1.9-6.6-2c-6-0.4-6.8-3.9-6.6-8.6c-0.1-1,0.5-1.7,1.3-1.8\n                        C277.5,412.5,282.7,410.1,288,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M321.4,455.6c1.2-3.6-4.5-3.2-3.3-6.8c0.1-0.3-1.4-0.7-1.6-0.1c-0.5,1.6-3.6,1.7-2.5,4.2\n                        c1.4,2.9-1.4,4.8-1.6,7.3c-1.6-0.4-3,5.4-5.1,0c-0.5-1.4-3.1,1.7-5.3,1c0.3-3.2,0.6-6.4,1.1-9.6c0.4-2.3,1.7-3.3,3.8-1.4\n                        c1.1,1,2.2,2.3,3.9,1.2c1.9-1.3-1.8-2.4,0.1-4c3.2,3.7,5-2.7,8.2-1.3c-0.7-4.2,3.1-9.3-3.2-12.5c5.2,0.1,6.1,5.1,9.9,6.3\n                        c0.9,0.3-0.5,1.9-1,3c-0.5,1.2-2.9,2.9,0,3.7c0.8,0.2,3.9,4.6,4.1-0.9c0.1-1.4,2.6-1.3,3.8-1.1c1.7,0.3,1.5,2.4,1.7,3.8\n                        c0.1,0.7-0.6,1.2-1.3,1.1c-5.2-0.3-7.6,0.8-10.4,5.2C322.5,455,322.1,455.1,321.4,455.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601124"),
                d:
                  "M270,446c2.8-1.2,3.1-0.9,3.2,2.7c3.7,1.4,0.9-6.9,5.8-3.7c1.8,0.8,2.1,2.4,2,3c0,0,0.5-1.2-0.5-2.3\n                        c-2.3-2.3-0.1-2.9,1.5-3.7c0.3-0.3,0.7-0.7,1-1c3.3,3,1.9,6.9,1.1,10.1c-1.3,5-1.8,4.9,1.3,8.2c-1.5,1.5-2.3-1.9-3.5-0.9\n                        c-0.8,2.4,4.1,1.6,2.1,4.6c-5.1-3.5-10.5-6.7-15-11c-3.2-6.1-7.8-11.3-10.2-17.9c3.1-2.2,3.2,1.3,4.7,2.4\n                        C266.8,438.9,267.2,443.3,270,446c-0.3,0.4-0.6,0.8-0.4,1.4C269.6,446.9,269.6,446.4,270,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2038"),
                d:
                  "M336,413c-0.3-0.1-0.6-0.3-0.9-0.3c-2-0.2-5.2,1.1-5.3-1.6c-0.1-2.4,3.2-1.9,5.4-2.2\n                        c-0.9-1.4-2.2-0.6-3.1-0.9c-0.3-0.5-0.3-1,0.1-1.4c4.1-1.7,8.6-2.1,12.8-3.5c2-0.5,4.1-0.6,6.1-1.2c3.2,0.2,6.6-1.8,9.7,0.4\n                        c1.4-0.1-1.3,2.3,1.1,1.8c1.3-0.3,3.1-0.5,3.1,1.8c-1,0.4-2,0.7-3,1.1c-8,1.8-16.3,2.9-24,5.9C337.3,413,336.7,413,336,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601124"),
                d:
                  "M292,434c0.3,0,0.7,0,1,0c2.4-0.1,4.7-0.7,6-3c0,0,0,0,0,0c0.8,0.3,3-0.6,1.9,1.5\n                        c-1.5,2.8-2.1,6.8-7,6.5c-0.7,0-5,1.4-1.9,4.8c1.3,1.4-1,1.8-1.9,2c-2.3,0.4-0.6-0.9-0.6-1.5c0-2.5-4.3-2.1-3.5-5.2\n                        c1-0.4,1.6-1.1,2-2c1.2-0.9,3.4,0.2,4-2C292,434.7,292,434.3,292,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F22"),
                d:
                  "M178,498c13.3,2,26.6,4.1,39.8,6.2c3.4,0.5,6.8,1.2,10.1,1.9c1.3,1.7,1.2,3.2-0.3,4.3\n                        c-1.1,0.1,0,1.1-0.4,0.5c-0.1-0.2,0-0.3,0.2-0.4c1-0.3,2.6-0.6,2.7,0.1c0.7,5.2,5,3.9,8.1,4.9c0.7,0.2,1,0.8,0.7,1.5\n                        c0,0.3,0,0.7,0,1c-0.6,0.5-1.2,1.1-1,2c-1.6,1.9-4.1,0.4-6.2,1.4c1.4,1.3,5.8-0.7,4.2,3.6c-2.6,1.6-5.3,3-8.5,1.2\n                        c-1.2-0.6-2.5,0.2-3.8,0.1c-2.9-1.8-1.4-3.9-0.3-5.9c0.5-0.9,1-1.9,0.1-2.7c-1.4-1.1-0.7,1-1.5,1.1c-2.7,0.3-2.4-1.6-2.4-3.4\n                        c-1.9,1-1.2,3.3-3,4.6c-1.9-2.5-5.3-2.5-7.3-5.7c-1.2-1.9-5.6-0.9-8.4,0.4c-3,0.4-6,0.8-7.9-2.5c-0.2-0.4-0.7-0.8-1.2-0.8\n                        c-6.1,0.3-10.3-4.4-15.5-6.3c-3.3-1.2-5-4.7-4.9-8.6C174,495.2,176,496.7,178,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M239,517c-1.9-2.6-4.9-0.9-7.1-1.2c-4.6-0.7-2.7-2.3-1.8-4.6c-1.6-0.1-3.2-0.2-6-0.4\n                        c3.4-0.8,4.2-2.4,3.8-4.8c1.3,0,2.7,0,4,0c7.1,2.4,14.7,2.2,22,4c-2.9,0.7-5.2,1.7-6.6,5C245.8,518.7,241.9,516.4,239,517z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631321"),
                d:
                  "M224,526c1.5-1.5,2.8-2.4,4.9-0.7c2.2,1.8,4.6-1.4,7.1-0.3c1.9,2,4.4,0.8,6.6,1.3\n                        c3.7,0.8,5.8,3.6,8.4,5.7c-2.7,3.4-6.1,0.1-9,1c-6.8-0.3-13.4-1.7-20-3c-0.1-0.2-0.2-0.4-0.3-0.7\n                        C221.8,527.8,222.5,526.6,224,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M238,520c-0.7-0.2-1.8-0.1-1.4-1.2c0.4-1.1,1.6-0.7,2.4-0.8C239,518.8,238.8,519.6,238,520z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("643035"),
                d:
                  "M111,446c-2.8,2.2-4.3,5.2-5.5,8.4c-0.9,2.4-2.4,2.8-4.5,2.6c-1.6-2.8,1.1-4.1,2-6\n                        c3.4-3.1,3.3-7.8,5.5-11.5c4.4-7.6,9.3-14.8,13.5-22.5c1.3-1.7,2-3.9,4.1-5c0.9-0.6,1.9,0.7,2.8,0c3.3-2.6,3.3,0.3,3.9,2.3\n                        c-0.2,1.7-0.4,3.3-1.3,4.8c-3.9,1.4-6,4.1-7.4,8c-1.9,5.3-6.4,9.3-8,14.9C112.9,441.6,112,443.8,111,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("684345"),
                d:
                  "M122,417c-0.6,5.2-3.9,9.4-6.5,13.4c-3.5,5.5-6.4,11.2-9.4,16.9c-0.8,1.5-1.6,2.9-3.1,3.7\n                        c0-2.2,2.6-3.6,2-6.1c1.2-5.8,3.4-11.2,7.3-15.6c2.9-3.2,5.3-6.8,7.7-10.4C120.6,418.3,121.3,417.7,122,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3646"),
                d:
                  "M1380,651c1.2-2,1.3-4.2,1-6.4c-0.8-5.3,2.1-8,7.7-6.2c0.8,0.3,1.6,0.4,2.4,0.6\n                        c2.1,1.8,4.9,1.2,7.1,1.1c6.7-0.4,13.6,3.9,19.5-0.3c0.7-0.1,0.7-0.1,0.7-0.1c-1.1,0-2.4,1-3.3,0.1c-1.1-1.2,0-2.1,1-2.7\n                        c1.1,0,2.3,0.2,3-1c3.9,0.8,4.2,5.4,7.5,7.3c0.8,0.4-3.6,4-4.5,3.4c-4.4-3.1-8.5,0.9-12.3,0c-3.1-0.7-4.4-0.2-5.6,2.4\n                        c5.6,0,11,0,16.5,0c1.4,0,2.2,0.6,2.3,2c-6,2.6-12,2.3-18,0c-1.7,0-3.3,0-5,0C1393.3,652.1,1386.7,652.8,1380,651z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63843"),
                d:
                  "M1405,651c6,0,12,0,18,0c11.1-0.5,22.3,1.1,33.2-0.9c-1.1,3.7,2.8,2.8-17.2,2.9\n                        c-4.5,0-9.5-1.3-13.2,0.4c-4.2,1.9-8.3,0.8-12.2,1.8c-3.8,0.9-6.4-0.2-8.5-3.2C1405,651.7,1405,651.3,1405,651z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63A48"),
                d:
                  "M1387,624c2.9,4.7,8.1,4.3,12.3,4.8c6.5,0.8,13.2,0.2,19.8,0.2c2.1,0,4.1,0,3.9,3\n                        c-2.3,1.2-5,0.3-7.2,1.4c-0.5,0-0.9-0.1-1.4-0.3c-2.8-1.5-5.6-0.7-8.4,0c-6.7,1.1-13.2-0.9-19.8-1c-1.6-0.6-4.5-1-3.9-2.7\n                        C1383,627.4,1383.9,624.5,1387,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9424D"),
                d:
                  "M1421,615c-4.3,0-8.6,0-12.9,0c0,1.5,1.4,0.6,2,2.1c-4.6-0.3-9-0.6-13.4-0.4c-1.3,0-2.5-0.3-3.8,0.2\n                        c-0.8,0.3-1.7,0.5-1.7,1.5c0,1.4,1.1,1.4,2.1,1.6c1.6,0.2,3.4-0.6,4.7,1c-4,0-8,0-12,0c-0.2-0.2-0.3-0.4-0.5-0.6\n                        c-0.8-2.9,0.9-5,2.4-7.1c1.2-1,2.5-1.2,4-0.9c8.4,0,16.7,1.5,25.1,1.2C1418.4,613.5,1420.5,612.3,1421,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2313F"),
                d:
                  "M1416,632.9c2-2.7,4.6-1.3,7-0.9c1.3,0.2,3.5-0.4,3.2,1.7c-0.2,1.7-1.8,2.5-3.7,1.6\n                        c-1.2-0.5-2.5-0.6-3.5,0.7c-4,0-8.1,0-12.1-0.1c0.4-2.6,2.6-1.7,4.2-2.2C1412.7,633.3,1414.6,634.8,1416,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B3B46"),
                d:
                  "M1387,624c-0.9,1.5-1.4,3.6-2.6,4.3c-3.4,2,0.8,1.7,0.6,2.7c-1.9,1.8-4,1.4-6.2,0.9\n                        c-0.5-0.2-0.9-0.6-1.1-1.1c1.3-4.4,3.2-8.4,8.2-9.8c0,0,0.2,0,0.2,0C1386.4,622,1386.7,623,1387,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3341"),
                d:
                  "M1421,615c-3.9-2-8-0.6-12-1c-6-0.6-12.1,1.2-18-1c2-3.1,5-0.6,7.4-1.4c2.3,0.1,4.6-0.4,6.6,1.4\n                        c7.8,1.2,15.3-2,23-2c7.2,0.8,14.4-1.2,21.7,1c1.7,0.5,4.8-0.9,7.3,0c0,1.3,0,2.7,0,4C1445,615.7,1433,615.3,1421,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63843"),
                d:
                  "M1380,651c6.7-1.1,13.3-0.2,20,0c-1.2,2.6-3.6,1.8-5.6,2c-2.7,0.3-6-0.2-6.4,3.9c-0.7,0-1.3,0-2,0\n                        c-0.8-1-2.3-0.9-3-2C1381.8,653.8,1379.3,653.6,1380,651z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63843"),
                d:
                  "M1405,652c-0.5,0.8-1.1,2.1-2.1,1.5c-1.1-0.6-0.2-1.2,0.6-1.4C1404,652,1404.5,652,1405,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841726"),
                d:
                  "M415,405c-1.7,0-3.3,0-5,0c2.2-2.5,2.2-2.5,9.4-2.3c-1.4-1-3.9,1.2-4.6-1.7c0.8-0.9,2-1.2,3.1-1.2\n                        c11.7-0.6,23.2-3.2,35-2c1.9,0.2,3.5-0.1,5.1-1.2c2.9,0.3,3.5,3.4,5.6,4.7c0.5,0.6,0.8,1.2,0.6,2c-0.4,2.6-2.9,3.7-4.3,5.6\n                        c-1.1,1.6-2.9,1.3-4.2-0.4c-2.1-2.7-4.4-4.2-8-2.6c-2.2,1-3.9-1.6-6.1-1.6c-5.3,0.1-10.6-0.6-15.9,0.5\n                        C422.2,405.6,418.6,405.9,415,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1626"),
                d:
                  "M415,405c8.4,0.3,16.4-3.3,24.9-2c2,0.3,4.4-0.6,5.9,1.6c0.4,0.6,1,0.7,1.7,0.5c4.8-1.1,4.9-1,9.4,3.5\n                        c0.4,0.4,1.3,0.3,1.8,0.2c1.1-0.3,0.9-1.1,0.7-2c-0.5-1.7-1.1-2.6,1.4-1c1.7,1.1,0.7-3.4,3.2-2.9c1,0.5,1.4,1.4,1.7,2.4\n                        c0.1,0.8,0.1,1.5,0,2.3c-0.7,4.4-3.8,4.4-7.4,4.6c-6.6,0.3-12.7-2.9-19.3-2c-1.8-0.1-3.6-0.8-5.4-0.6\n                        c-1.5-0.6-3.5,0.3-4.5-1.7c-4.4-2.7-9.2-1.9-14-2C415,405.7,415,405.3,415,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182D"),
                d:
                  "M415,401c1.2,1.8,3.4,0.4,5.3,1.6c-3.6,0.7-7.2,0.7-10.2,2.3c-15-0.7-30.1-1.7-45,1\n                        c-1-1.4-2.6-0.7-3.9-1c-2.6-0.5,0.1-1.3,0-1.9c1.9-3.6,5.6-1.8,8.4-2.7c2-0.7,4.2-0.6,6.3-0.6c1.2,0,2.3,0.1,3.4,0.4\n                        c2.4,1,5,1.1,7.4,0.5c8.2-1.9,16.6-0.6,24.9-0.9C412.7,399.6,414,399.9,415,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M359.1,434.9c-0.4,2.6,2.6,1.4,3.2,3c-1.4,1.5-3.2,1.7-4.4,0.5C357.2,437.8,357.8,435.9,359.1,434.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M336.4,429.3c2-0.8,3.1-1.2,4.7-1.8C340.4,430.5,339,430.1,336.4,429.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621125"),
                d:
                  "M359,430.5c0.2-2.1,0.6-3.2,2.1-3.1c0.3,0,0.6,0.7,0.8,1.1C361.1,429.1,360.3,429.6,359,430.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9434F"),
                d:
                  "M326,233c0.3,0,0.7,0,1,0c2-2.2,4.2-3.6,7.3-2.7c1.1,3.2,0.6,5.6-3.1,6.6c-3.5,1-6.8,2.4-9.7,4.8\n                        c-0.6,0.4-1.2,0.7-2,0.7c-2.1-1.2-3.9-0.2-5.4,1.2c-4.5,4.2-10.2,6.1-15.6,8.7c-5,1.3-7,5.5-9.1,9.5c-0.7,1.4-0.6,3.3-2.6,3.7\n                        c-1.3,0-2.6-0.4-3.9-0.3c-4.8,0.5-5.4-0.2-3.5-4.7c0.7-1.8,2.5-3.6-0.7-4.7c1.8-3.8,4.4-0.9,6-1.2c-2.4-1.3-2.5-1.7-0.2-3.2\n                        c2.2-1.4,4.6-2.5,6.8-3.8c5.7-3.3,12.8-3.8,17.6-8.7c4.7-0.6,8-4.1,12-6C322.7,232.2,324.3,234.5,326,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3F4A"),
                d:
                  "M309,239c-0.7,1.3-1.3,2.4-2.9,3.2c-5.2,2.4-10,5.4-15.6,7c-2,0.6-3.6,2.2-5.4,3.3\n                        c-3.8,2.2,2,1,0.4,2.5c-1.8,0.8-4.5-1-6.5,1.1c0.5,2-1.3,2.8-2.2,4.1c-4.1,5.5-2.6,10.2,4.3,11.8c2.5,0.6,4.4,1.3,4.5,4.2\n                        c-0.5,1.9-2,2.7-3.5,3.7c-1.7,0.6-3.3,1.6-5,0.3c-1-3.6-4.3-5.1-7.1-6.9c-1.4-0.9-4.6,1.2-5-1.3c-0.6-3.6-1.7-7.6,2.6-10.3\n                        c5.6-3.6,11.1-7.5,16.5-11.4c4.3-3.1,9.4-4.7,13.9-7.7C300.5,240.5,305.4,240.6,309,239z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3E4A"),
                d:
                  "M255,285c-3.7,0.3-7.5,0.9-11.2,0.9c-2.5,0-4.8-4.1-7.5-0.3c-2.1-1.7-3.1-4.5-6-5.7\n                        c2.5-1,4.5-2.6,7.2-3.1c3-0.5,2.7-4.2,4.8-6c2.3-2,4.2-4.7,7.5-3.8c2.7,0.7,2.8-3.3,5.3-2.1c-0.2,2.5,0.8,5.1-2.5,6.8\n                        c-2,1-1.9,7.6-0.5,9.2C253.6,281.9,256.2,282,255,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE444F"),
                d:
                  "M359,217c3.6-0.8,7.3-1.5,10.5-3.5c4.2-2.6,8.7-3.2,13.5-2.5c1.1,1.7,0,2.6-1.4,2.9\n                        c-6,1.3-10.3,5.2-15.2,8.6c-4.6,3.1-10.4,4.6-15.7,6.8c-0.4,0.2-0.8,0.3-1.3,0.5c-2.6-0.1-3.7,2-5.2,3.5\n                        c-0.4,0.2-0.7,0.2-1.1,0.1c-1-1.2-3,1.3-3.8-1c-0.1-1.4-0.8-2.3-1.9-3.1c-0.1-1.6,0.9-2.5,2.1-3.1c6.1-2.5,11.4-6.4,17.4-9.2\n                        C357.7,217,358.3,217,359,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B04856"),
                d:
                  "M277,280c1.7-0.3,3.3-0.7,5-1c1.8,0.5,3.6,0.9,5.4,0.7c0.8,0,1.5-0.1,2.3-0.1c6.1,0,12.2-0.7,17.7,2.9\n                        c1.7,1.1,3.5,0.2,5.2-0.2c4.4-1.1,6.8,0.2,8.2,4.1c-4.2,2.1-8.7,1.2-13,1.3c-3.1,0.1-6.2-0.2-9.3-0.3c-1.1,0-2.2,0-3.4-0.2\n                        c-2.6-0.9-5.3-0.9-8-0.5c-6.1-0.8-12.2,0.4-18.2-0.8c-3.8-3.4-0.7-4,1.9-4.9c0.3,0,0.7,0,1,0c1.5,0.5,2.7-0.7,4-1\n                        C276.3,280,276.7,280,277,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4414C"),
                d:
                  "M357,217c-4.4,4.6-10.2,7.2-15.8,9.8c-1.6,0.8-3.1,1.1-3.2,3.2c-1,2-1.3,2-3-0.3c0-0.2,0-0.5-0.1-0.7\n                        c0.7-5.4,6.3-5,9.4-7.5c1.7-1.3,4.6-1.5,6.4-3.6C352.4,216.2,354.9,217.2,357,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6404D"),
                d:
                  "M271,281c-1.7,0.8-2.7,2.1-3,4c-2.5,2-5.2,1.5-8,1c-1.5-0.9-3.2-1.1-5-1c0.3-2.3-3.3-1.7-3-4l0,0\n                        c1-1.1,2-0.4,3,0C260.3,279.7,265.7,281,271,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4414C"),
                d:
                  "M335,231c-3.1-1.1-5.1,2.1-8,2c-2.5-3.6-0.1-4.3,2.7-4.4c1.7-0.1,3.5,0.3,5.3,0.4c0,0,0,0,0,0\n                        C335.6,229.7,335.6,230.3,335,231z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4414C"),
                d:
                  "M326,233c-1.7,4.2-3.3,0.4-5,0C322.7,231.1,324.3,232.3,326,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3E4A"),
                d:
                  "M255,281c-1,1.2-2-0.3-3,0c0.1-1,0.4-2,1.7-1.8C254.8,279.3,254.9,280.2,255,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6404D"),
                d:
                  "M276,280c-1.2,1-2.2,2.7-4,1C272.7,278.1,274.6,280.1,276,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M350,229c3.8-2.6,7.8-4.9,12.2-5.8c3.2-0.7,4.6-2.9,6.7-4.8c2.9-2.6,6.7-4.6,10.8-5.4\n                        c1.5-0.3,3.1,0.1,3.3-2c0-0.8,0.2-1.6,1-2c6.4-2.1,13.3-1.3,19.7-3.4c4.7-1.5,9.2-3.7,13.6-5.8c2-0.9,3.8-2.5,3.8-5.2\n                        c4.2,0.6,8.4,1.3,10.3,5.9c-10.7,3.3-20.5,9-31.2,12.1c-3.5,1-7.3,1.5-10.9,2.3c-4.1,0.9-7.7,3.5-11.2,5.8\n                        c-3.1,2-6.1,3.8-9.9,4.4c-4.7,0.8-8.7,3.1-11.9,6.7c-1.2,1.3-2.6,2.3-4.3,1.7C349.7,232.8,349.7,230.9,350,229z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24651"),
                d:
                  "M421,195c1.3,2.7-1.2,6.8-5.9,7.6c-5,0.8-8.7,4.5-13.8,5c-2.3,0.3-4.3,2.2-6.7,0\n                        c-0.8-0.7-1.5-0.2-2.2,0.3c-2.6,2-5.5,2.1-8.5,0.9c4.9-4.3,10.9-6.3,17-8c0.7-0.6,1.3-0.6,2,0c0.8,0,1.6-0.2,2-1\n                        c0.3-0.4,0.5-1,0.9-1.1c4.5-2,8.8-4.3,12.8-7.4c1.1,0.1,1.9,0.5,2.6,1.4C421.6,193.6,421.6,194.4,421,195z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5404B"),
                d:
                  "M419,192c-3.7,0.6-4,5.5-8.2,6c-1.8,0.2-4.1,0.7-5.8,2c0.2-2.8,2.5-3.4,4.6-4.5c2-1.1,5.7-0.6,5.4-4.5\n                        c1.3,0,2.7,0,4,0c0.1,0.2,0.2,0.3,0.3,0.5C419.2,191.7,419.1,191.8,419,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5404B"),
                d:
                  "M403,201c-0.7,0-1.3,0-2,0c0.1-1.3-0.3-3.5,1.7-3.2C404.5,198,402.7,199.9,403,201z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A03D48"),
                d:
                  "M415,188c12.8-1.8,23.5-8.1,34-15l0,0c0.5,0.4,1.5,0.2,1.7,0.8c1.4,3-3.8,11-6.9,10.5\n                        c-3.3-0.5-5.7,0.8-8.4,2.3c-5.1,2.8-10.2,5.8-16.5,4.3l0,0C418.5,188.9,416,189.4,415,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M613,629c-0.6-0.3-1.6-0.5-1.6-0.9c-0.5-4.1-2.4-1.9-4.1-0.5c-0.2-1.4-0.2-2.4-0.4-3.3\n                        c-0.1-0.7-0.7-1.2-1.4-1.1c-1.4,0.3,0.1,1-0.1,1.4c-0.8,1.7-3.4,2.8-3.8,1.9c-1.9-4-3.9,0-5.7-0.4c-1.5-0.3-2.3,1.9-4.5,1.3\n                        c2.8-3.3,1.8-5.7-1.6-7.5c-1.1-0.6-1.7-1.6-1.7-2.8c0.7-0.6,1.3-0.6,2,0c2.3-5.1,10.3-8.1,15.5-5.8c0.5,0.2,1.1,0.8,1.3,1.3\n                        c2,3.8,4.4,6,8.8,2.9c0.8-0.6,2.2,0.4,3.3-0.4c5.2,1.2,9.5,4,13.3,7.7c0.4,1.8-1.2,1.7-2.1,2.2c-2.2-0.8-3.8-4.2-6.9-1.8\n                        c-0.6,0.4-0.9-0.1-0.8-0.7c0.3-1.3,1.1-3-1.1-2.7c-1.6,0.2-0.7,2.1-0.9,3.3c-0.4,2.1-1.4,4.5-4.1,3.7\n                        C613.7,626,613.6,627.6,613,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811E2C"),
                d:
                  "M807,634c-0.7,0-1.4,0-2,0c-2,0.7-4,0.8-6,0c-0.3,0-0.7,0-1-0.1c-1.5-1-3.2-0.2-4.7-0.6\n                        c-1.5-0.3-2-1-0.6-2.2c2.2-1,4.6-0.7,6.9-0.7c18.4,0,36.9,0,55.3,0c16,0.2,32-0.4,48,0.3c2.7,1,5.6,0.7,8.4,0.7\n                        c45.6,0.1,91.2-0.1,136.7,0.1c1,0.1,1.9,0.3,2.7,1c0.5,0.6,0.5,1.1,0,1.7c-2.9,1.9-6.2,0.8-9.4,1.1\n                        c-45.4,0.3-90.7,0.1-136.1,0.1c-11.6,0-23.2-0.7-34.9,0.4c-2.4,0.2-4.9-0.7-7.4-0.5c-17.4,0.1-34.8,0.8-52.2-0.4\n                        C809.5,634.9,808.1,634.9,807,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A1222E"),
                d:
                  "M792,632.3c1.7,1.6,4.4-0.3,6,1.7c-32.5,0-64.9,0-97.4-0.1c-1.9,0-4,0.7-5.7-0.9\n                        c1.9-2,4.3-1.4,6.6-1.4c14.1-0.1,28.3,0,42.4,0c2.3,0,4.7,0.2,6.9-0.6c12.4-0.4,24.9-0.4,37.3-0.3\n                        C789.6,630.7,791.1,630.8,792,632.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D1B28"),
                d:
                  "M751,632.3c-1.6,1.2-3.5,0.7-5.3,0.7c-16.9,0.1-33.8,0.1-50.8,0.1c-10.6,0-21.2-0.1-31.8-0.1\n                        c0.1-2.2,1.9-1.9,3.4-2.2c4-0.1,8,0,12.1-0.1c21.8,0,43.6,0,65.4,0C746.4,630.6,749.1,629.9,751,632.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52B3B"),
                d:
                  "M666.1,631.9c-1,0.2-2.2-0.2-2.9,1c-11.3-1.7-22.8-2.4-33.1-7.9c0.6-0.6,1.3-1.2,1.9-1.9\n                        c0.5-0.6,1.2-0.8,1.9-0.7c1.8,0.7,3.4,1.6,5.1,2.6c3.8,2.1,7.9,3.1,12.2,3.6c1.2,0,2.5,0.2,3.7,0.4c1.5,0.5,3,0.6,4.5,0.6\n                        c2.1,0.1,4.3-0.3,6.3,0.9C666.2,630.9,666.3,631.4,666.1,631.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13947"),
                d:
                  "M799,634.1c2,0,4,0,6,0c-1,0.7-2,1.3-3,2C801,635.4,800,634.7,799,634.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3E49"),
                d:
                  "M746.8,644c0.6,0.1,1.4-0.1,1.4,0.9c0,0.8-0.3,1.8-1.4,1.6c-0.5-0.1-1-0.8-1.1-1.3\n                        C745.4,644.2,746.2,644.1,746.8,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3E49"),
                d:
                  "M742.9,648.7c0.2,0.4,0.6,0.8,0.6,1.2c0,0.9-0.7,1-1.3,0.8c-0.3-0.1-0.5-0.6-0.8-0.9\n                        C741.8,649.6,742.1,649.3,742.9,648.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D65763"),
                d:
                  "M1485,284.9c8.7,0.4,17.4,0.3,26,2.1c-4.9,3-10.2,0.9-15.2,1.4c-0.5,0-1.2-0.3-1.4-0.1\n                        c-0.5,0.7,0.4,0.7,0.7,1c0.8,0.6,1.7,0.9,2.5,1.3c4.9,2.3,9.8,4.5,13.8,8.3c0.2,0.8,0.1,1.5-0.2,2.2c-1.3,1.2-2.8,0.9-4.2,0.3\n                        c-6.8-3-13.2-6.6-19.2-11c-0.7-0.5-1.1-1.2-1.2-2.1C1487.3,286.5,1484.3,286.7,1485,284.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1918"),
                d:
                  "M1486.8,288.2c6.1,4.2,12.5,7.9,19.1,11.3c1.6,0.8,3.2,1.7,5.1,1.6c2.2-0.5,4.2,0.6,6.2,1.2\n                        c0.9,0.4,1.8,0.9,2.1,2c-0.3,1.2-1.2,1.5-2.3,1.8c-3.2,0.5-5.9-1.3-8.8-2c-3-1.4-6.1-2.7-9.1-4.2c-1.2-0.7-2.4-1.3-3.7-1.9\n                        c-2.6-1.4-5.4-2.6-8-4.1c-1-0.7-1.9-1.5-1.6-2.9c0-0.6,0.1-1.3,0.1-1.9C1486.2,288.8,1486.5,288.5,1486.8,288.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M590,617c-0.7,0-1.3,0-2,0c-5.3,3.5-6.4,6.3-5.1,12.7c0.3,1.8,0.6,3.9-1.7,4.6\n                        c-2.2,0.6-4.8,2.3-6.2-1.3c0-5.2,0.1-10.3,0-15.5c-0.1-2.9,0.3-5,4-4.5c2,0.3,3.5-0.9,5.6-2.4c-0.5,3.2-0.5,5.7,3.3,4.6\n                        C588.8,614.9,589.5,616.1,590,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661514"),
                d:
                  "M633.9,623.1c-0.6,0-1.3,0-1.9,0c-4.4-2.7-8.7-5.4-13.1-8.1c-1.7-2.1-3.6-3.8-5.8-5.2\n                        c-0.5-0.1-0.8-0.4-0.9-0.9c-0.4-0.7-0.7-1.3-1.1-2c-0.9-1.1-0.4-1.8,0.7-2.3c1.9-0.2,3,1.1,4.2,2.2c5.5,5.5,11.7,10.1,19,12.9\n                        c1.1,0.4,2.2,0.8,2.2,2.3C636.4,623.1,635.1,623.1,633.9,623.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3B47"),
                d:
                  "M605.8,601c-3.2,0.4-5.4-0.4-5.9-4.2c-0.4-3.6-4.9-3.5-6.4-6.7c-1.5-3-2.6-5.9-3.5-9.1\n                        c1-0.5,1.8-0.1,2.6,0.3c1.9,1.4,2.8,3.6,4.3,5.3c3.1,3.7,5.5,7.9,8.4,11.7C605.9,599.1,606.6,600,605.8,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("711618"),
                d:
                  "M605.8,601c-3.3-4.6-6.6-9.3-9.9-13.9c0.1-0.9,0.3-1.8,1.3-2.3c4.6,2.5,5.9,7.8,9.3,11.3\n                        c0.4,0.5,0.7,1.1,1.1,1.6c0.6,1.1,1.3,2.1,2.2,3c1,1.3,2.8,2.2,2.5,4.3c-0.8,0.4-1.1,1.1-1.1,2c-0.3,0-0.7,0-1,0\n                        c-1-0.2-1.5-0.7-1.2-1.8C607.9,603.7,606.8,602.4,605.8,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF3444"),
                d:
                  "M573,633c-1,0-2,0-3,0c-1-0.7-1.2-1.7-0.9-2.6c1.3-4.1,2.1-8.4,2.1-12.8c0.6,0,1.2,0.1,1.8,0.1\n                        C573,622.8,573,627.9,573,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M612.2,608.9c0.3,0.3,0.6,0.6,0.9,0.9c0,1.6,2.8,3.2,0.5,4.7c-1.9,1.3-3.1-0.9-3.9-2\n                        C608,610,610.9,609.9,612.2,608.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03641"),
                d:
                  "M592.1,582c-0.7-0.3-1.4-0.6-2.1-1c-2.3-1-1-3.4-2-5c0,0,0.2-0.1,0.2-0.1\n                        C591.3,576.7,592.8,578.6,592.1,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M608.9,605.1c0.4,0.6,0.8,1.2,1.2,1.8c-0.2,1.2-0.9,2.7-2.1,1.8C606.3,607.4,608.1,606.1,608.9,605.1z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8303D"),
                d:
                  "M554,557c0.1-1.8-0.4-3.9,0.4-5.4c3-5.9,1.1-10.2-4.2-13.9c2.9-1.5,5-0.7,6.9,1.1\n                        c2.1,1.9,3.1,0.7,4.1-1.8c0.4,7.8,8.1,9.9,11,15.6c0,0.1,1.1-0.4,1.8-0.7c1.4,0.4,1.8,1.5,2,2.7c0.3,1.9-0.7,3.5-1,5.3\n                        c-4.1,3.2-8.4,3.1-13.7-0.1c3.9,5.8-1.2,7.8-3.3,11.1C555.5,566.7,552.1,562.6,554,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681414"),
                d:
                  "M575.1,554.8c-0.4-0.9-0.7-1.9-1.1-2.8c-5.5-8.9-10.9-17.8-16.4-26.7c-0.6-0.9-1.7-1.6-2.5-2.3\n                        c-1.4-1.2-2.6-2.5-3.2-4.3c-0.5-2.4-2.9-4-2.8-6.7c-4.1-8.5-10.8-15.3-16-23c-0.1-0.2-0.3-0.4-0.4-0.6c0.2-0.5,0.4-0.8,0.9-1\n                        c0.7-0.2,1.4-0.1,2,0.3c3.1,2.4,4.9,5.9,7.4,8.9c3.7,5.3,7.9,10.1,11,15.9c4,5.4,6.8,11.6,10.8,17c2.9,5.1,6.1,10,9.2,15.1\n                        c6,9.7,11.4,19.7,17.8,29.1c1.4,2.4,3,4.6,4.4,6.9c0.8,1.3,2.1,2.6,0.9,4.3c-0.1,0.9-0.3,1.7-1.2,2.2\n                        c-1.3-1.7-2.5-3.4-3.8-5.1c-0.7-2.4-2.1-4.4-4-6.1c-0.3-1.5-0.9-2.9-2.1-3.9C581.1,567.1,577.8,561.1,575.1,554.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53843"),
                d:
                  "M575.1,554.8c4.6,5.1,7.3,11.5,11,17.2c-5.9-2-8.6-6.8-11-12C572.1,558.2,576.6,556.6,575.1,554.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53844"),
                d:
                  "M576.6,580.9c-1-0.1-1.5-0.7-1.2-1.6c0.3-0.8-0.4-2.3,1.2-2.1c1.3,0.1,0.6,1.3,0.9,2\n                        C577.8,580,577.7,580.7,576.6,580.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8303D"),
                d:
                  "M549,549c1.3,0.2,3.1-0.6,3.8,1.3c0.5,1.5-0.1,2.5-1.8,2.7C550.3,551.7,547,551.7,549,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434D"),
                d:
                  "M639,125c2.7,0,5.3,0,8,0c1.1,2.1-0.4,2.7-1.9,3c-6.3,1.1-12.5,3.3-19.1,3.5c-3,0.1-6.3,1.6-9.2,2.5\n                        c-4.9,1.7-10.1,0.4-14.5,2.3c-5.8,2.6-11.8,2.8-17.9,3.1c-1.9,0.1-2.9,1.6-4.4,2.2c-8.6,2-17.1,4.6-25.8,6.2\n                        c-3.8,0.7-7.5,2.8-11.5,3.8c-1.8,0.4-3.5,0.7-5.4,0.7c-1.6-0.1-3.3,0-4.5-1.3c1-3.4,3.9-1.4,5.9-2c1.3-0.4,3.8,1.2,3-2.7\n                        c-0.5-2.1,3-1.1,4.7-1.6c7-2.4,15.1-1.3,21-6.8c0.9-0.8,1.7-1.1,2.6-0.9c10.7,2.2,20.1-5.1,30.6-4.1c0.8,0.1,2-0.1,2-1\n                        c0.2-5,3.9-2.9,6-2.7c3.2,0.3,5.9-0.1,8.3-2.2C624.5,127.8,631.7,126.3,639,125z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE424D"),
                d:
                  "M533,151c1.7,0,3.3,0,5,0c0.2,2.9-2.2,2.7-4,3.3c-7.6,2.6-15.4,4.5-22.9,7.7\n                        c-3.2,3.6-7.9,2.5-11.9,3.7c-2.8-1.8-5,0-7.2,1.4c-5.4,3.5-11.1,6.2-17.2,8.4c-2.2,0.8-3.4,2-2.1,4.4c0.6,1.7,1.5,3.4,1.5,5.2\n                        c0.1,2.8-0.4,5.5-4.4,4.8c-0.7-0.3-1.2-0.8-1.5-1.4c-1.2-2.1-0.1-4.5-1.1-6.6c0-2.8,0.7-5.6,0.3-8.4c-0.5-3.4,1.5-5.4,4.3-5.5\n                        c8-0.4,14-5.5,21.1-8c6.9-0.4,13.5-2.1,20-4.5C519.5,153.2,526.2,151.8,533,151z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B13E49"),
                d:
                  "M493,160c-0.2,0.6-0.3,1.7-0.6,1.8c-6.4,1.9-11.4,7.2-18.6,7.2c-3.9,0-6.5,1.4-5,6.1\n                        c0.8,2.6-0.1,5.3-0.8,7.8c-2.8,1.4-4.1-0.9-5.8-2.3c-1.1-0.9-1.9-2.3-3.5-2.6c-0.8-0.1-1.7-0.1-2.2,0.7\n                        c-0.4,0.6-0.1,1.2,0.2,1.8c0.8,1.6,3.1,2.9,0.8,5c-2.3,0.8-4.2,0.2-5.9-1.4c-2.2-7.5-0.5-10.5,6.3-11.2\n                        c1.7,3.1,4.7,1.8,7.2,1.9c1.5,0,2-1.2,1.4-2.5c-0.7-1.8-0.6-3.6-0.6-5.4c7.8-3.4,15.1-7.9,24-8C491,159.3,492,159.7,493,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA404C"),
                d:
                  "M458,173c-6.1,1.4-6.5,6-6,11c-5.1,7.2-12.7,10-20.8,11.9c-4,1-7.5,0.6-10.2-2.9c-0.8,0-1.6-0.2-2-1\n                        c0-0.3,0-0.7,0-1c1.8-2.9,6.1,1.3,7.5-2.7c5.7,1,9-4.6,14-5.4c0.6-0.1,1.2-0.7,1.8-0.6c1.4,0.3,3.1,2.8,4.1,0.3\n                        c1.2-2.9,3.6-5.3,3.6-8.6c0-0.4-0.6-0.7-0.9-1.1C452,169.9,455,171.7,458,173z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("885554"),
                d:
                  "M2090.3,505.3c1,1.7,0.5,2.4-0.4,3.1c-0.1,0.1-0.7-0.3-0.7-0.3\n                        C2089.5,507.3,2089.8,506.6,2090.3,505.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C08786"),
                d:
                  "M2083,481c0.6,0,1.2,0,1.8,0c-0.7,1.6-1,3.2-0.9,5c-1.4,0.9-2.3,2.1-4.3,0c-2.2-2.3-4-5.1-6.7-6.9\n                        c-0.8,0.5-1.5,0.5-2.2-0.2c-0.1-0.6,0.1-1.1,0.6-1.4c3.9-0.6,7.4-0.3,9.7,3.5C2081.7,482.1,2082.4,481.9,2083,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A36262"),
                d:
                  "M2086,498c-2.4,2.6-0.2,5.5-0.6,8.3c-2.7-5.3-1.5-10.8-1.4-16.3C2085.5,492.4,2086,495.2,2086,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1820,499c0-2.4-1.2-4.7,0.5-7.4c1.5-2.5,4.9-4,6.7-1.5c3.3,4.4,7.4,8.6,6.8,14.9\n                        c-2.6,1.8-3.9-0.5-5.2-1.8c-2.1-2.2-3.7-4.9-7.4-3C1821.2,500.3,1820.5,499.4,1820,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1C26"),
                d:
                  "M1798,480c2,2,2,4.5,2,7c-1.9,0.8-3-2.2-5-1.1c-0.1-0.8-0.1-1.7-0.5-2.3c-0.9-1.3-2.5-3.1-1.7-3.9\n                        C1794.1,478.4,1796.3,478.5,1798,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5F60"),
                d:
                  "M1945,324c-5.4,0-10.5-0.9-15-4C1935,321.3,1940.2,321.8,1945,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5F60"),
                d:
                  "M1959,329c-2.3-1.2-5.5-0.1-7-3C1954.3,327.2,1957.5,326.1,1959,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1849.1,521c1.9-0.1,2.2-1.7,2.9-3c3.4-2.1,6.8-0.4,10,0.5c7.9,2.4,15.9,4.3,23.8,6.5\n                        c4.8,2,10.2,2.1,14.8,4.6c1.4,1.1,2.9,1.9,4.7,1.6c1.4,0.2,2.7,0.6,3.9,1c1.4,0.6,2.6,1.5,3.6,2.6c1,1.1,4,1,2.7,3.2\n                        c-1.2,2.1-3.4,3.2-6,1.1c-0.7,2.1-0.3,4,0.2,5.9c0.7,2.8-0.3,5.5-2.2,6.6c-2.7,1.6-2.9,3.7-3.2,6.3c-0.5,4.4-6.3,9.5-10.7,9.8\n                        c-1.2,0.1-3.1-0.1-3.1-1.1c-0.1-5-4.1-2.9-6.3-3.4c-5.3-1.3-5.4-1.1-5.4-7.4c-1.2,2-2.9,3.1-4.7,4.2c-5,2.8-5.2,2.6-5.6-3.8\n                        c0.9-3.2-1.9-5.8-1.5-8.9c0.1-0.6-0.6-0.7-1-0.6c-1.3,0.3-1.4,1.2-1.1,2.2c0.9,3-0.4,4.7-3.4,5.2c-2.6-1.3-2.5-4.1-3.6-6.3\n                        c-0.6-4.2-4-7.6-3.2-12.2c0-1.1,0.1-2.3-1-3c-0.6-0.1-0.9-0.5-0.9-1.1c0.1-3.1-1-5.7-3.1-7.9\n                        C1849.7,523,1849.4,522,1849.1,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962E3A"),
                d:
                  "M1855,536c1.4,4,3.7,7.6,4,12c-0.1,1.1,0,2.3-1,3.2c-2.7,1-3.7-0.2-4.9-2.7c-1.2-2.7-3.8-4.2-7.3-2.8\n                        c-2.9,1.2-6,1.8-8.8-0.7l0,0c-0.2-2.8-0.1-5.3,3.5-6c4.2-0.8,4.1-1,1.6-5.7C1846.5,537.8,1850.9,535.8,1855,536z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962E3A"),
                d:
                  "M1853.1,531.9c0.3,0.4,0.6,0.7,0.9,1.1c-0.1,0.6,0,1.6-0.9,1.2\n                        C1851.9,533.7,1851.9,532.7,1853.1,531.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1627"),
                d:
                  "M1847,497c-2.8-1.5-3-4.9-5-7c0.5-0.6,0.9-1.6,1.8-1.6c3.4-0.1,6-0.9,6.8-4.9c0.3-1.7,2.4-2.2,4-2.6\n                        c1.1-0.3,2.4-0.8,3.2,0.4c0.7,1-0.2,1.9-0.8,2.6c-1.8,2.2-0.3,2.9,1.6,3.3c6.7,1.3,13.6,0,20.3,1.4c0.5,0.1,1.2-0.1,1.2-0.6\n                        c0.6-4.4,3.4-5.2,7.3-5.4c2-0.1,3.3-2.6,4.8-4.1c2.7-2.8,5.7-5.2,10-3.4c0.5,2.4-1.2,3.6-2.6,5c-5,4.7-10.8,8.3-15.6,13.2\n                        c-1,1-3.1,1.5-2.5,3.2c0.5,1.5,2.6,1.3,4,1.5c11,2.3,22.1,4.6,33,7.3c1,0.2,1.9,0.6,2.8,0.9c1.9,1.1,4.6,0.1,6,2.5\n                        c-1.6,3.3-4.7,4.6-7.3,3.1c-0.6-0.3-1.2-0.8-0.8-1.5c0.4-0.8,1.3-0.5,2-0.6c-5.4,0.3-10.5,2.7-16,2c-3-0.4-5.2,1.4-7.7,2.6\n                        c-4.8,2.4-9.6,4.9-15.3,4.7c-1.5-0.1-4.5,0.1-3,3.4c-1.5,1.2-3,0.7-4.6,0c-2.9-1.1-6-1.7-8.9-2.7c-3.2-1-6.2-2.3-9.6-2.7\n                        c-1.5-0.2-2.7-1.2-3-2.9c0.4-0.8,1.2-1,2-1c-4-5.6-0.5-11.8-1.3-17.6c-0.1-1.1,0.1-2.3-0.3-3.3\n                        C1850.2,492.6,1852.2,499.3,1847,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1902,475c-4.6,0.2-8.1,2.2-10.5,6.2c-1.1,1.8-3.5,2.2-6.4,2.3c-1.4,0-3.6,0.5-3,3.2\n                        c0.6,2.5-1.9,3.6-3,3.3c-6.1-2.1-12.4-0.4-18.6-1.2c-3-0.4-5.7-0.8-6.8-4.2c1.1-1,3.2-0.9,3.6-3.3c-3.2,0.9-6.7,0.8-6.4,5.6\n                        c0.1,2.5-2.2,2.1-3.7,2.4c-1.7,0.4-3.6-0.6-5.2,0.7c0-1.3,0.1-2.6-1.3-3.4c-1.3,1.4-0.3,3-0.9,4.3c-2-1.6-4.5-1.6-6.8-1.9\n                        c0.1-1.5-0.7-3.2,2-3.7c2.4-0.4,3.8-2,2.7-5.4c1.3,7.3,7-2.2,8.8,3.3c1.6-2.8,1.7-5.8,1.4-8.9c1.5-0.7,2.2,0.9,3.4,1.3\n                        c1.7,0.6,3.3,1,4.2-1.6c1.1-3.4,3.9-4.6,7.5-3.9c-0.3,1-0.9,1.7-1.3,1.8c1.3-1.2,3.4-0.8,5.5-0.8c1.8,0,4-0.4,4.4,2.1\n                        c0.4,2.8-2.2,2.6-3.6,3c3.1,0,5.9-0.2,8.2-3.5c1.9-2.6,6.2-0.3,9.2-1.9c0.6-0.3,1.2,0.8,1,1.8c-1.9,1.9-1.5,3.6,0.4,5.3\n                        c0.8-1.8-2.3-2.8-0.9-4.7c2.5-2,5.5-3.2,7.8-5.7c1.9-2,5.3,0.4,8.2-1.5c2.2-1.4,4.8-2.7,7.1-4.2c0.4-0.2,0.9-0.2,1.3-0.2\n                        c1.7,1.8,0.9-0.8,1.5-0.9c0.4-0.3,0.8-0.4,1.2-0.5c1.8-0.1,3,1.1,4,2.3c0.7,2.8-1.9,3.2-3.2,4.6c-0.3,0.3-0.7,0.6-1,0.8\n                        c-2.2,1.6-4.1,3.5-5.9,5.5C1905.4,474.2,1904.2,476.4,1902,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1847,497c4.2,0.6,1.4-4.8,4.5-5.4c0.8-0.2,0.5-2.9,2.5-2.2c1.6,0.6,1.2,2.4,0.9,3.5\n                        c-0.9,4.7,2.3,10.1-1.9,14.3c0.4,0.4,1,0.7,1.3,1.1c1,1.4,2.6,2.8,0.7,4.6c-2.8-2.3-5.5-4.6-8.2-7c-0.7-0.6-0.7-1.4-0.5-2.3\n                        c0.5-2.7,0.3-3-1.8-3.7C1844.7,498.6,1847.3,499,1847,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81162C"),
                d:
                  "M1853,514c2.6,1.3,4.9,4.2,8.4,1.9c3.3,4.7,9.6,1.7,13.4,5.3c1.2,1.1,2.8,0.8,4.3,0.8\n                        c3,0.4,6,0.6,9,0.5c0.7,0.3,1.3,0.8,1.8,1.5c0.8,4.4-2.1,2.2-3.8,2.1c-6.7-0.8-13.1-3.1-19.6-4.8c-4.7-1.3-9.4-2.9-14.4-3.2\n                        c-0.3-1-0.7-2-1-3C1851.7,514.7,1852.3,514.3,1853,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2F3A"),
                d:
                  "M206,585c-8.4,0.5,2.2-4.6-2.2-5.3c-1.4,1.9-3.5,2.7-5.9,0.5c-1.1,1.9,1.7,2.3,0.6,4.1\n                        c-2.3-1.2-5.1,2.2-7.5-0.9c-0.1-0.1-1.2,0.4-1.2,0.5c0.4,6.4-6.6,7.8-8.5,13.2c-2.3-3.2-4.6-6.5-7.3-0.2\n                        c-0.8-2.5,0.8-4.6-0.9-6.6c-2.5,2.5-2.3,6.6-5.9,8.5c-4.4,2.3-5.7-0.3-7-3.6c-2,1.5-1,3.3-1.3,4.8c-4.4-0.7-3.3-4-2.6-6.4\n                        c1.2-4.1,3.7-7.4,7.4-9.6c2.3-1.4,3.2-3.4,4.2-5.8c2.3-5,4.9-9.3,11.1-11.3c3.5-1.1,8.5-1.5,10.5-6.1c1.9-1.3,4.2-1.3,6.3-0.8\n                        c4.7,1.1,7.2-2.3,10.2-4.5c0.3-0.4,0.7-0.6,1.1-0.7c2.3,0.5,4.6,1,5.8,3.3c0,0.3,0,0.7,0,1c-0.5,3.3,1.2,6.9-1.1,10\n                        c-1,1.3-1.4,4.4-3.9,1.1c-1-1.3-2.3-0.1-3.1,0.2C207,575.3,207.9,580,206,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80262F"),
                d:
                  "M217,544c0.8,2.8-1.7,4.5-2,7c-0.7,0.3-1.3,0.7-2,1c-1.9,1.2-4.6,0.9-6,3l0,0c-5.1-0.3-10-1.6-15.2-1\n                        c-1.1,0.1-3.3,0.2-2.6-2.3c1.2-1.5,3-1.8,4.7-2c2.6-0.3,5.3,0.5,7.7-1.1c4.3-0.4,8.4-1.5,12-4.1\n                        C214.7,544,215.7,543.3,217,544L217,544z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852934"),
                d:
                  "M207,555c0.2-4.6,3.3-3.3,6-3c2,2,0.9,4,0,6C211,557,209,556,207,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651322"),
                d:
                  "M217,544c-1,0.3-2,0.7-3,1c-1.9,2.1-4.4,1.9-6.9,1.7c-1.7-0.9-1.4-2-0.3-3.1c0.1-0.1,0.2-0.2,0.4-0.2\n                        c0.5,0,0.7-0.5,0.4-0.5c-7.1-0.8-14.1-2.1-21-3.4c-5.4-1-10.7-2-16.1-2.7c-2.5-1.8-5.6-1.3-8.4-2c-0.4-0.2-0.8-0.5-1.1-0.9\n                        c0-1.3,0.5-2.2,1.6-2.1c-4.3-1.8-9.8-1.9-12.5-7.4c-0.5-1-2-3.9-3.7-0.2c-0.9,2-2.5,0.5-3.8,0.1c-1.6-0.5-3-2.5-4.8-0.4\n                        c-5,1.8-6,1.3-8.2-4.2c0-2.4,1.7-2.8,3.4-2.2c2.3,0.8,4.2,0.1,6.2-0.6c1.8-0.1,3.5,0.1,5,1c1.9-0.9,4-0.6,5.9-0.2\n                        c6,1.4,12.2,1.4,18.2,2.9c11.2,2.5,22.6,2.9,33.9,4.9c5,0.9,10.2,1.4,15.2,2.2c1.8,0.3,3.6,0.6,4.9,2.2l0,0\n                        C221.3,535,217.8,539,217,544z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74751"),
                d:
                  "M977,113c-2.2,4-5.5,3.6-8.9,2.1c-3.9-1.7-8-2.1-12.1-2.1c-0.3,0.3-0.7,0.5-1.2,0.4\n                        c-1.3-0.6-2.5-0.1-3.7,0.5c-1.2,0.3-2.4,0.2-3.5-0.4c-2.5-2.1-6.1-0.2-8.6-2.3c-0.1-3.2,3.1-0.7,4-2.2c3,0,6,0,9,0\n                        c5.2,2.2,10.8,2.1,16.3,2C971.4,110.9,974.4,111,977,113z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A95E62"),
                d:
                  "M2074,600.9c-0.4,1-0.7,2-1.1,3.1c-0.6,0.6-1.3,0.6-2,0.3c-0.7-0.7-1-1.7-1.2-2.7\n                        c-0.2-0.7-0.3-1.4-0.4-2.1c0-1,0.7-2.1,0.3-2.9c-3.8-8.1-1-16.7-1.9-25c-1.2-4,2.4-5.9,3.9-8.7c0.4-1.6-0.6-2.8-1.2-4.2\n                        c1-4.5,2.4-8.9,3-13.6c0.6-4.6,0.3-8.8-4.1-11.9c-3.5-2.5-3.2-8.5,0.1-11.4c1.9-1.7,2,0.3,2.6,1.4c0.1-0.5-0.2-1.1,0-1.4\n                        c4.2-5.6,1-13.2,5-19c1.1-1.6-0.2-3.2-1-4.6c-2.5-4-4.1-8.3-3-13.1c2.9,1.8,4.1,5.1,6.3,7.5c4.1,4.5,3.4,9.3,1.8,14.5\n                        c-1.1,3.5,1.5,7.1,0,10.7c-2.9,7-2.1,14.1-1.5,21.5c0.5,6-1.9,12.5-3.8,18.5c-2.1,6.7-2.8,13.5-2.8,20.5\n                        c0,2.7,0.7,5.6-1.5,8.1c-1,1.1,0.2,1.1,1.1,1.8c2,1.5,2.6,4.4,2.1,7C2074.3,597,2073.9,598.9,2074,600.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4575C"),
                d:
                  "M2073,485c1.5,5.1,1.8,10.5,5.6,14.8c1,1.1,1.4,3.7-1.5,5.4c-1.5,0.9-1.2,4.3-0.9,6.7\n                        c0.1,1.1,1.1,2.3,0.2,3.3c-3.3,3.4-3.6,7.8-3.4,13.4c-2.6-2.6-1.4-4.8-2.1-6.5c-3.9,6.7-3.7,6.5,1.9,11.9\n                        c2.6,2.5,3.3,6.6,2.4,10c-1.3,5-1.3,10.4-4.1,15c1.4,1,0.6,3,2,4c-0.4,3.1-6.2,3.6-4,8c-0.4,0.5-0.6,1.2-1.4,1.3\n                        c-1.6-0.5-1.7-1.9-2.2-3.2c-0.1-0.5-0.1-0.9-0.1-1.4c2.8-9.4,4.3-19,4.7-28.7c0.1-1.6-0.8-2.3-1.9-3.2\n                        c-1.7-1.3-3.4-2.7-4.4-4.7c-0.7-1.3-1.5-2.9-0.2-4.1c2.4-2.2,2.3-5.7,3.8-7.7c3.1-4.1,2-8.9,3.8-13.1\n                        c1.5-3.6-1.5-6.6-1.5-10.1c0-2.3-0.7-4.4,0.6-6.7c0.8-1.5,0-3.2-0.5-4.8c-0.7-2.1-1.1-4.3,1.3-5.7c0.6,0.1,1.2,0.1,1.9,0.2\n                        C2072.3,481.1,2073,483,2073,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B3942"),
                d:
                  "M142,602c1.6-3.8,1.9-7.4-1.5-10.5c-2.1-2-2.1-4.2-0.5-6.5c2.2-0.3,2.3,1.9,3.4,2.9\n                        c2.5,1.4,4.8,3,5.7,6c0.5,1.6,1.9,2.2,3.3,2.8c2.1,0.8,3.7,2.1,4.6,4.3c1.7,4.2,1,9.2,4,13c-0.7,0-1.3,0-2,0\n                        C153.2,610.3,146.9,607,142,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M429,408c1.3,0.3,2.7,0.7,4,1c2.9,0.9,5.7,1.6,8.2,3.9c2.6,2.4,6.4,1.2,9.7,1.6\n                        c1.1,0.2,2.3-0.2,3.4,0.3c0.4,0.1,0.8,0.3,1.3,0.5c1.5,0.7,3.1,0.5,4.6,0.8c0.4,0.1,0.9,0.3,1.2,0.6c3.9,3.5,8.9,4,13.6,5.6\n                        c0.6,0.3,1.1,0.8,1.5,1.3c0.9,1.5,2,2.8,3.7,3.5c0.6,0.4,1,0.8,1.2,1.6c0,0.7-0.3,1.3-0.7,1.8c-0.5,0.4-0.9,0.9-1.6,0.4\n                        c-0.2-0.1-0.3-0.2-0.3-0.2c0.1,0.1,0.2,0.2,0.4,0.4c1.1,1.1,2.5,1.2,3.9,1.6c1,0.6,1.7,1.4,2.3,2.4c0.2,0.4,0.3,0.8,0.4,1.3\n                        c-0.2,1.6,0.7,3.7-0.9,4.5c-1.7,0.8-2.7-1.3-3.9-2.3c-0.6-0.5-1.3-1-1.9-1.5c-0.3-0.3-0.7-0.7-1-1c-0.9-0.4,0.1-2.8-2-2\n                        c-0.7,0-1.3,0-2,0c-3.2-2-5.6-2.3-5.9,3c-2-6.4-7.1-4.4-11.4-5c2.9-1.1,5.6-2.5,8.8-1.2c-0.2-2.1-0.3-3.6-0.4-5.4\n                        c-1.9,0.1-3.5,0.5-4.6,2.3c-1.4,2.2-3.3,0.7-5,0.5c-2.9-0.2-0.5-1.9-0.6-2.8c-0.3-3.4-2.6-2.2-4.5-2.3c-1.3,0-2.5,0.7-3.7,0.9\n                        c-5.2,0.7-8.4-2.9-12.4-4.6c-2.5-1.1-3.7,2.1-6.4,1.5c-3.1-0.7-3.7,2.5-3.8,6.5c-1.4-1.7-2.1-2.8-3-3.6\n                        c-2.9-2.5-3.7-2.5-6.3-0.3c-1,0.8-2.1,1.7-3.3,2.1c-2.7,0.9-5.5,1.1-4.7-3c0.5-2.2-1.2-5.5,2.7-6.5c0.9-0.2,0.3-2.1,0.3-3.2\n                        c-0.3-5.2,0.6-5.2,5.6-4.7C419.9,408.5,424.5,410.2,429,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M479,437c4-2.5,2.6,3.4,5.5,3.2c0.3-1.2-0.7-2.9,0.5-4.2c0.7-0.3,1.4-0.3,1.8,0.2c3,3.9,7,7,10,10.9\n                        c0.4,0.5,0.5,1.2,0.2,1.9c1.3,1.7,2.8,3.3,4,5.1c1,1.4-0.1,3.4-1.2,2.7c-3.2-2.3-5.9-1-8.8,0.4c-0.3-2.1,1.1-2.9,2-3.5\n                        c2.4-1.6,2.4-3.1,1.2-5.7c-1.5-3.2-4.4-1-6.3-2.4c0,0.8,0.1,1.6,0.1,2.4h0c-3.5-2.2-5.2,0.7-7.5,2.2c0.7,2.6,3.4-0.5,4.1,2.2\n                        c-2,0.7-4,1.7-5.4-0.8c-1.3-2.4,0.8-8.1,3.4-9.4c-1.6-1.1-3.7,0.9-4.8-0.8C476.7,439.8,478.2,438.4,479,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4D0F17"),
                d:
                  "M531,487c-3.8-6.4-9-11.6-14-17c0-0.7,0-1.3,0-2c0.2-0.1,0.5-0.1,0.7-0.2c6.9,4.1,10.9,10.9,15.6,17\n                        c0.7,1,0.6,2.2-0.3,3.2l0,0C531.9,488.6,531.4,487.9,531,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F16"),
                d:
                  "M517,468c-6.3-4.1-9.9-10.8-15-16c0.3-0.4,0.8-0.6,1.2-0.7c2.1-0.2,3.3,1.2,4.5,2.7\n                        c2.8,3.7,6,7.1,9,10.6C517.3,465.7,518.1,466.8,517,468L517,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671D29"),
                d:
                  "M497,449c-4-4.3-8-8.7-12-13c0-0.3,0-0.7,0-1c0.2-0.1,0.4-0.3,0.6-0.4c4.3,0.3,5.6,4.3,8.4,6.5\n                        c0.3,0.3,0.6,0.7,0.9,1c0.9,2.4,4.7,3.4,3.2,6.8C497.7,449,497.4,449,497,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F16"),
                d:
                  "M498,449c-0.1-3.1-4-3.9-4.1-7c3.7,0,5.4,3.3,7.9,5.2c0.7,0.5-0.5,1.3-1.2,1.7c-0.2,0-0.5,0-0.7,0.1\n                        C499.3,449,498.7,449,498,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M460.2,449c-2.2-1.4-3.3-2.1-3.6-3.9C459,445,459.3,446.6,460.2,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M476,434c0.2-0.7,0.2-1.9,1.2-1.4c1.3,0.7,0.6,2.2,0.8,3.4C477.3,435.3,476.7,434.7,476,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M488,448c0.8,0.5,1.9,0.5,2,1.6c0,0.2-1.6,0.9-2.1,0.7C486.4,449.7,488,448.8,488,448L488,448z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F16"),
                d:
                  "M503,452c-0.3,0-0.7,0-1,0c-0.7-1-1.3-2-2-3l0,0C502.8,448.2,503.8,449.2,503,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("744148"),
                d:
                  "M143,317c-1-0.1-2-0.1-3.5-0.2c1.1-0.8,1.8-1.3,2.5-1.8c0.5-0.9,1.3-1.4,2.1-1.9\n                        c1.6-0.8,3.2-1.2,5-1.4c2.8,0,5.4-1.1,8.1-1.5c0.5-0.1,1.1-0.1,1.6,0c6.5,1.3,12.9-0.7,19.3-0.7c1.7,0,3.7-0.9,5,1\n                        c-2.8,6-8.2,4.4-14.2,4.1c0.5,0.1,1.4,0.9,1.2,0.2c-0.1-0.3,0.1-0.4,0.4-0.3c3.6,1.6,7.4,1,11.2,1.1c2.1,0.1,4.3-0.3,6.2,1.1\n                        c0.3,0.5,0.3,1,0,1.5c-1.2,0.9-2.7,1.1-4.1,1.1c-1.8,0-3.6,0-5.4,0c-10.3,0.4-20.5-0.5-30.8-0.9\n                        C145.9,318.4,144.3,318.4,143,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4C1F22"),
                d:
                  "M123,330c0-2.5,0.7-4.7,3-6c2.2,0.5,4.5,0.8,4.6,3.8c1.1,2.9-1.9,5-1.9,8.4c2.1-3,1.8-5.9,2.6-8.6\n                        c0.5-0.2,1-0.3,1.5-0.3c6.9,2.3,13.9,4.3,21.3,4.5c1.2,0,2.3,0.3,3.1,1.3c-0.7,2.6-3,2.1-4.9,2.2c-3.9,0.2-7.9-0.1-11.8,0.2\n                        c-0.5,0.2-1,0.3-1.5,0.4c-5.1,0.9-5.5,1.4-4.8,6.4c0.2,1.8,1.1,3.6-0.3,5.2c-2.1,1.5-4.4,2.1-6.8,0.8c-2-4.4-2-9.1-2.2-13.7\n                        C124.7,332.7,124.4,331.3,123,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3A1014"),
                d:
                  "M147,304.9c0.3-0.3,0.7-0.6,1-0.9c2.6-2,5.6-1.7,8.6-1.6c11.1,0.3,22.1,0.1,33.2,0.2\n                        c10.3-0.1,20.6,0,30.9,0.9c1.5,0.1,3,0.2,4.2,1.2c0.5,2.2-1.2,2.2-2.6,2.5c-1.7,0.3-3.5,0.1-5.3,0.3\n                        c-12.1,0.1-24.1,0.1-36.2,0c-2.6,0-5.3-1-7.7,0.8c-0.7,0.3-1.4,0.3-2.1,0.1c-0.4-0.2-0.9-0.4-1.3-0.6c-3.6-1-7.2-0.5-10.8-0.1\n                        c-0.5,0.1-1.1,0-1.6,0c-2.6-0.5-5.2-0.3-7.8,0.3c-2.2,0.5-4.6,0.7-6.6-0.9c-0.3,0-0.6,0-1,0c-1.6,0.4-3.4,1.7-4.1-1.1\n                        C140.7,303.1,143.8,303.5,147,304.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3A181C"),
                d:
                  "M132,328c-0.4,0-0.8,0.1-1.1,0.1c-0.3,0.4-0.6,0.4-0.9-0.1c0-2.7-3.6-1.8-4-4c4.3-2.7,8.1-6.7,13.8-6\n                        c1.1,0.1,2.3,0.1,3.2-0.9c12-0.3,24,1.8,36,1.1c0.3,0.6,0.2,1-0.3,1.4c-2.7,1.5-5.9,0.3-8.7,1.4c-5.9,0.3-11.7,1.2-17.7,0.4\n                        c-5.3-0.7-10.5,0.9-15.7,1.3C133.3,322.9,133.7,326.4,132,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4C1F22"),
                d:
                  "M130.9,367.9c-1.3-0.2-2.9,0.5-3.9-1c4.8-3.8-1-7.4-0.5-11.2c0.2-2-0.5-4.5-0.5-6.8\n                        c0.4-0.4,0.9-0.5,1.4-0.5c2.9-0.4,3.7,1.3,3.8,3.7c0.1,2.5,0.4,4.9,2.8,6.3c1.6,1-0.5,3.5,1.3,4c2,0.6,4.3,0.3,6.3-0.5\n                        c2.3-0.9,4.1-2.8,6.7-2.9c1,0,2,0.3,2.9,0.9c0.4,0.3,0.8,0.7,1,1.1c0.1,0.5-0.1,1-0.5,1.4c-2.7,1.7-6.1,1.9-8.9,3.5\n                        c-2.9,0.5-5.7,1.4-8.6,1.3C133.2,367.7,131.9,367.1,130.9,367.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3D1E1F"),
                d:
                  "M143,307c3.3,0.3,6.6-0.6,9.8-0.9c1.7-0.2,3.7-0.7,5.2,0.9c-3.6,1.9-8,1.5-11.4,4.1\n                        c-1.1,0.8-3,0.8-2.6,3c-0.4,0.8-1.2,1-2,1c-2.3,0.1-4.7-1-7.3,0.7C136.1,311,140,309.4,143,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("2A0D0F"),
                d:
                  "M127,349c-0.3,0-0.7,0-1,0c-4.5-3.5-3.1-8.4-2.7-12.7c0.2-2.2,0.2-4.2-0.3-6.2c1.7,0.1,3.1,1,2.9,2.7\n                        c-0.6,5.2,2.2,10.1,1.1,15.3c0.3,0.2,0.5,0.4,0.3,0.7C127.2,348.9,127.1,349,127,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3D1E1F"),
                d:
                  "M138,306c1.1,1.4,2.6,0.8,4,1c-2,1.3-4,2.1-5.1-1.1l0,0C137.3,305.6,137.7,305.6,138,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66373E"),
                d:
                  "M134,367c2.9-1.2,5.8-2,9-2c0.7,0.7,1.6,0.1,2.3,0.3c1.1,0.1,2.1,0.1,2.5-1.2c1.2-1.2,3.1-1,4.2-2.2\n                        c0-0.3,0-0.6,0-0.9c0.3-0.3,0.7-0.4,1.1-0.4c0.8,0.2,1.5,0.6,2.1,1.2c8.3-2.6,16-6.5,23.4-11.1c3.3-2,6.7-3.4,10.6-3.5\n                        c1.3,0.4,2.1,1.2,2.1,2.7c-4.4,5.5-11.1,7.1-16.9,10.1c-4.8,2.5-10,4.5-15.2,6.4c-0.4,0.2-0.9,0.3-1.3,0.5\n                        c-1.8,0.4-3.5,1.2-5.1,2.1c-1.8,0.9-3.6,1.3-5.6,0.9c-2.7-0.8-5.4,0.3-8.2,0.1c-1.6,0-3.3,0.3-4.7-0.2\n                        c-0.9-0.3,0.3-0.6,0.7-0.8C136.2,367.6,134.3,367.6,134,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("331216"),
                d:
                  "M147,369c2.1,0.3,4-0.7,6-1c1.6-0.8,3.4-1.1,5-2l0,0c1.3-0.6,2.6-1,3.2,0.9\n                        c-4.1,4.9-10.3,5.2-15.8,7.2c-1.2,0.5-2.6,0.5-3.8,0.9c-4.3,0.9-8.7,2.8-12.6-1.1c0.2-2.3,1.9-1.8,3.3-1.8\n                        c2.6,0.1,5.2-0.3,7.7-1.2C142.1,369.7,144.4,368.6,147,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D3033"),
                d:
                  "M129,374c4.3,2,8.6,0.3,13,0c0.4-0.4,0.8-0.4,1.2-0.1c0.9,1.6,0.6,3.5-1,3.6c-4.8,0.3-4.7,3.6-4.9,6.9\n                        c0,0.5-0.4,0.9-0.6,1.3c-2.4,1.6-3.8,0.7-4.6-1.7c-2.3-1.9,0.3-5.1-2-7c0-0.8-0.1-1.6-1-2.1C129,374.6,129,374.3,129,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B4649"),
                d:
                  "M147,369c-2.2,1-4.5,2-7,2c-0.3-0.3-0.7-0.7-1-1C141.6,369,144,366.9,147,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B4649"),
                d:
                  "M134,367c1.1,0.2,2.7-0.6,3.1,0.6c0.4,1.2-1.2,1.2-2.1,1.4c-1.1-1.5-2.7-0.8-4.1-1.1\n                        C131.7,366.9,132.9,367,134,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621125"),
                d:
                  "M405.7,413.3c-0.3-0.4-0.6-0.6-0.6-0.8c0.2-0.6,0.4-1.3,0.8-1.7c0.6-0.4,0.9,0.1,0.7,0.7\n                        C406.5,412.1,406.1,412.7,405.7,413.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M591.3,633.9c-2.8,1.6-4.6,1-7.1,1C586.5,632.3,588.4,632.9,591.3,633.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2B38"),
                d:
                  "M552.9,518c0.7,1.6,1.4,3.3,2.1,4.9c-1.4,0.9,0.7,2.2-0.7,3.3c-1.9-0.1-0.8-2.4-1.9-3.3\n                        c-1.1,1.7-0.1,3.4,0.4,5.2c-3-2.9-8.3-2.3-10,1.2c-1.6,3.2-2.9,1.8-4.2,0.2c-1.1-1.4-1.8-3.1-2.6-4.6c1.1-0.1,1.8-0.5,1.9-1.8\n                        c0.1-1.4-0.5-2.1-1.9-2.3c0.4-1,1.2-2,0.2-3.2c-0.9-1.1-0.8-1.8,0.8-1.6c0.3,0,0.6,0.1,1,0.2c-0.1-4.5,5.6-5.1,5.9-9.3\n                        c2,1.6,2.1,3.8,2,6c1,1,2.7,1.6,2.9,3.2C549.2,519.3,551.4,517.9,552.9,518z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("965A5A"),
                d:
                  "M2087,391c-4.4-1.6-8.2-4.1-11-8C2080.2,385,2084.3,387,2087,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73A47"),
                d:
                  "M1888,629c-2.4,1.4-4.2,1.2-5.3-1.8c-0.9-2.2-3.9-1.9-9.6-7.2c-5.6-5.2-11-1.6-16.3-3\n                        c-3.1-0.8-3.9,1.1-3.9,4c0,3.3,0.9,6.8-1.9,10c0-2.8,0-5.6,0-8.4c0-1.2,0.5-2.8-1.2-3.4c-1.4-0.5-1.8,1.3-2.8,1.7\n                        c-0.2-3.7-3.7-6.9-1.2-11.4c-1.2,4.3,2.6,4.5,4.4,6.2c2,1.8,2.7-0.5,2.8-2.2c0.1-3.3,0-6.6,0.1-9.9c0-1.7,0.2-3.5,2.1-0.8\n                        c0.1,0.2,0.7,0.4,0.7,0.4c0.5-0.4,1.1-0.9,1.2-1.5c0.6-3.3,8.2-3.3,3.9-8.7c0.6-0.5,1.2-0.6,1.9-0.4c0.4,0.2,0.7,0.6,1,0.9\n                        c0.4,0.4,0.7,1.5,1.3,1c0.8-0.6,0.9-1.9-0.2-2.5c-1.5-0.8-2.8,0.2-4,1c-1.2,0.5-2.3,1.3-4.1,0.7c2.5-1.4,2.6-3.2,1-5.3\n                        c-0.9-1.2-0.3-2.9,1-2c3.5,2.3,8.4,1,11.1,4.7c3.1,2.8,4.9,7.1,9.8,7.7c-0.2,4.6,4.9,4.4,6.7,7.2c1.7,2.7,3.5,5.3,2.2,8.7\n                        c-0.7,1.9-0.4,3.9-0.1,5.9c0.1,0.5,0,0.9,0,1.4c-0.8,1.9-2.4,3.8-0.3,5.8c0,0.2,0.1,0.4,0.1,0.7\n                        C1888.2,628.6,1888.1,628.8,1888,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95303C"),
                d:
                  "M1870,586c-0.3-0.3-0.7-0.7-1-1c-1.4-1.5,0.9-3.7-1-5c-0.3-0.3-0.7-0.7-1-1c-0.7-1.2-0.8-2.3,0.3-3.3\n                        c2.5-0.8,4,0.1,5.2,2.5c2.4,5,7.3,7.6,11.2,11.1c2.2,2.1,3-1.5,4.8-0.9c3.5,1.8,7.4,2.1,11.2,3c-0.5,2.5,1.8,2,2.8,2.3\n                        c2.4,0.8,5.3-1.7,5.5-4.3c0.3-2.4,1.8-4.3,3.5-5.8c1.7-1.6,2.1,0.4,2.6,1.5c0.4,0.9,0.6,2.1,2,1.6c1.3-0.5,0.7-1.5,0.5-2.5\n                        c-0.6-2.6,1.2-5,1-7.7c-0.1-1,1.1-1.9,2.1-1.6c4.8,1.4,6.9-1.9,9.3-5c0.5-0.7,1.1-1.2,2-1.2c1.4,0.1,0.4,3.6,3.6,2.1\n                        c1.8-0.8,3.7,2.2,2.9,5c-4.8,7.9-11.7,14-17.6,21c-0.4,0.5-0.8,1.1-1.3,1.5c-0.9,1-1.6,2.1-2.5,3c-2.1,1.6-3.7,3.7-5.4,5.7\n                        c-0.7,0.9-1.4,1.8-2.1,2.6c-0.7,0.7-1.5,1-2.5,0.9c-4.3-0.8-6.2,3.5-9.6,4.6c-0.5,0-0.9-0.2-1.2-0.6c-1.3-1.8-0.9-3.1,0.7-4.7\n                        c2.5-2.5,5-5.2,5.5-8.5c-4.2-2.8-8.7-2.3-13.6-1.9c-5.3,0.5-8.3-4.8-12.2-7.5C1873.6,590.7,1871.4,588.5,1870,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3742"),
                d:
                  "M1858,551c0-1.1-0.2-2.3,1-3c1,2,1.9,4,2.9,6.1c2.8,4.5,3.7,9.6,5.2,14.5c0.1,1.3,0.1,2.7-0.5,3.9\n                        c-0.2,0.2-0.4,0.4-0.6,0.6c-0.8-2-1.5-3.9-2.4-6.1c-1,1-1.6,2.3-3.3,2.2c-4-0.2-7.9,0.8-11.6,2.3c-0.4,0.2-1.2,0.5-1.2,0.5\n                        c1.5,4.1-2.6,9,1.9,12.6c0.8,0.7,2.2,1.5,1.1,2.8c-1.1,1.3-1.9-0.8-3.4-0.4c2.9,5.9-1.3,11-1.1,16.8c-2.4-0.4-1.9-2.2-3.1-2.7\n                        c0.2-4.1-1.1-8.1-0.1-12.3c0.4-1.5,0.3-3.4-2-3.8c-1.7-0.3-1.9-1.6-1.9-3c0.1-3.8-1.1-7.4-2-11c-0.2-1.6,1.4-2,2-3\n                        c1.2-1.9,3.2-1,4.8-1.2c0.1-2.3-3.6-3.4-1.7-5.8c1.4-1.7,3.4-0.3,5.2,0.1c-0.4-1.2-2.6-2.4-1-3.5c3.4-2.3,6.9-0.3,10.2,0.5\n                        C1858.3,555.9,1855.8,553,1858,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3643"),
                d:
                  "M1870,586c2.5,1.7,5,3,7,5.8c1.5,2.1,4.7,4.1,7.2,5.7c2.4,1.4,6.3,2.8,9.4-0.4\n                        c1.1-1.2,3.2-0.4,3.6,0.4c1.7,3.5,4.4,2.6,8.3,1.4c-4.4,4.6-4.5,10.7-9.9,13c-0.3,0.1,0.3,2.1,0.4,3.2\n                        c-1.7,1.1-1.8,3.5-3.4,4.6c-1.3,0.9-2.5,2.8-4.6,1.4c-1.8-2.2-1.2-4.7-0.7-7.1c0.7-3.6-1.9-9.3-5.1-10.4\n                        c-1.5-0.5-1.7,1.3-3.3,1.7c1.2-4.2,0.1-6.3-4.4-7.1c-3.1-0.6-3.4-4.4-4.6-7C1870,589.3,1870,587.7,1870,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3643"),
                d:
                  "M1868,576c-1.2,0.7-1,1.9-1,3c-1.9-1.7-1.4-3.9-1-6l0,0c1.8-0.3,2.5,0.9,3,2.2\n                        C1869.3,576,1868.7,576.2,1868,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3643"),
                d:
                  "M1868,580c4.5,0.8,0.5,3.4,1,5C1867.3,583.6,1868.2,581.7,1868,580z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C333F"),
                d:
                  "M1858,551c-0.5,2.7,1.8,5.4,0.1,8.3c-0.9,1.5-1.8,2.4-2.8,0.7c-2.4-4-5.8-0.7-8.5-2.7\n                        c-0.3,3.8,4.7,1.7,3.5,4.3c-1.3,2.9-3.7,0.3-5.6-0.2c-0.8-0.2-1.7-0.5-2.2,0.4c-0.2,0.4,0.3,1.5,0.6,1.6\n                        c3.7,0.7,1.8,3.4,2,5.5c-2.2-0.1-4-2.2-6.2-0.9c0-2.6,1.1-6.3-0.2-7.7c-3.5-3.7-0.9-7.7-1.8-11.3c0-1.3,0-2.7,0-4\n                        c3.6,1.4,6.9-0.5,10.4-0.9c3.7-0.4,7.2,1.9,7.6,5.6c0.1,0.4,0.1,0.8,0.3,1.6C1856.3,548.3,1857.1,550,1858,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C2454F"),
                d:
                  "M943,109c-0.9,1.6-3.1,0.4-4,2c-1.2,1.7-2.8,1.5-4.5,0.8c-2.5-1.1-5.2,0.9-7.7-0.2\n                        c-0.5-0.2-1-0.4-1.4-0.7c-10.3-1.2-20.6-0.5-30.9-0.5c-9.8-0.1-19.6-0.1-29.5,0c-12.7,0.1-25.2,1.2-37.8,1.6\n                        c-6.7,0.2-13.6,1-20.3,0.3c-1.7-0.2-3.3-1.8-5.2-0.6c-0.9,0.3-1.8,0.3-2.8,0c-1-0.6-2.4-1-2-2.6c7.3-1.8,14.9-0.3,22.3-1.8\n                        c2.4-0.5,5.2,2.3,8.2,0.8c1.5-0.7,3.2-0.9,3.5-3c0.7,0,1.3,0,2,0c4.7,1.6,9.3,1.6,14,0c0.7,0,1.3,0,2,0c1.3,1,2.7,1.4,4,0\n                        c14,0,28,0,42,0c0.5,2.8,2.7,1.9,4.3,2c8.9,0.4,17.9-1.1,26.6,1C931.7,109.3,937.3,108.8,943,109z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7434C"),
                d:
                  "M847,105c-2.7,2.9-11.3,2.9-14,0C837.7,105,842.3,105,847,105z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7434C"),
                d: "M853,105c-1.3,3.3-2.7,2-4,0C850.3,105,851.7,105,853,105z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942A34"),
                d:
                  "M552.9,518c-2.1,1.6-4.6,4.7-5.1-1.2c-0.1-1.3-1.2-2.6-1.9-3.8c1-0.3,2-0.7,3-1\n                        C550.7,513.8,552.1,515.7,552.9,518z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751826"),
                d:
                  "M531,487c0.7,0.3,1.3,0.7,2,1c0,0.3,0,0.7,0,1c-1.4-0.1-2.9,0.4-4-1C529.7,487.7,530.3,487.3,531,487z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64650"),
                d:
                  "M580,141c1.1-2.1,2.8-3.3,5.2-3c6.5,0.8,12.6-1.6,18.3-3.8c2.9-1.1,4.1,1.2,6.3,0.6\n                        c3.8-1.1,7.2-4.4,11.7-2.1c0.5,0.3,1.3-0.4,0.9-1.3c-1.1-2.5,0.9-2.3,2.1-2.1c5.3,0.7,10.4,0.4,15.2-2.1\n                        c2.4-1.2,5.9,1.6,7.3-2.4c2.7-0.3,5.3-0.7,8-1c9.9-2.2,20-3.3,29.9-5.5c6.4-1.4,13.3-1.6,20.1-1.5c10.1,0.4,19.9-3.1,30-2\n                        c6.1-0.1,12.4-1.2,18.3-1.1c6.2,0.1,12.5-1.2,18.7,0.1c0.3,0.5,0.3,1-0.1,1.4c-2.1,1.8-4.6,2.6-7.3,2.4\n                        c-7.4-0.4-14.7,1.5-22.1,0.5c-4.3,0-8.7,0.2-13,0c-2.8-0.2-2.7,1.2-2.6,3c-2.3,1.4-4.8,1.1-7.2,0.5c-2.9-1.6-5.7-2-8.8-0.4\n                        c-2.4,1.2-5.2,0.2-7.7,0.7c-0.8,0.1-1.5,0.1-2.3,0.1c-4.2-0.1-8.2,0.7-12.1,2.6c-4.9,2.3-10.1,0.9-15.2,1.3\n                        c-5.4,0.4-11-0.2-15.6,3.8c-0.6,0.5-1.5,0.8-2.4,0.6c-10.9-1.6-20.2,6-30.9,5.3c-0.3,0-0.6,0.3-0.9,0.4\n                        c-0.5,0.2-0.9,0.4-1.4,0.5c-0.6,0.1-1.3,0.2-2,0.2c-1.7,0.1-3.8-2.3-4.8,1.4c-0.4,1.7-3.1,2-4.9,1.6\n                        c-4.6-1.2-9.2,0.3-13.7,0.2c-1,0-2,0-2.9,0.1c-2.4,0.6-4.6,1.9-7.1,1.8c-1.2,0-2.5,0-3.7,0c-0.5,0-1-0.1-1.5-0.1\n                        C581.2,141.9,580.5,141.6,580,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD434D"),
                d:
                  "M705,117c-2.9,3.2-6.9,1.7-10.1,1.6c-10.7-0.4-20.4,4.9-31.1,4.6c-2.8-0.1-5.6,2.9-8.8,0.8\n                        c0.8-1.7,1.6-3.3,4-3c4.8,0.6,9.5-1.2,14.2-0.8c2.7,0.2,3.4-2.5,6-2.8c4.4-0.4,8.7-0.4,13-0.4c2.4,0,4.8,0.2,7.1-1.4\n                        C701.3,114.2,703.4,115.3,705,117z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("894447"),
                d:
                  "M2040.9,364.9c-2.7,2.4-5.6,4.5-8.8,6.2c-0.6-0.2,0.2,0-0.5-0.1c-5.5-1-8.8-6.9-13.1-7.9\n                        c-5.3-1.1-10.2-1.9-14.3-5.6c-2.6-2.3-6.1-1.1-9-2.3c-10.7-3.9-21.3-8-31.5-13.1c-3.7-1.9-7.9-2.4-11.8-3.5\n                        c-1.6-0.8-3-1.8-2.4-3.8c0.6-2,2.4-1.9,4.1-2.2c3.3-0.5,6.2,0.9,9.1,2.1c6.9,2.9,14.5,3.3,21.3,6.1c5.5,1.4,11,2.8,15.7,6.4\n                        c0.6,0.5,1.5,0.4,2.3,0.6c9.9,2.7,19.1,7,28.1,12C2033.5,361.9,2037.3,363.3,2040.9,364.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C4B4D"),
                d:
                  "M1984,341c-0.6,0.2-1.3,0.8-1.8,0.7c-7.6-2.1-15.4-4-22.8-6.6c-2.1-0.8-4.1-0.9-6.2-1.1\n                        c-1.1-0.1-2.5-0.3-2.9,1.2c-0.4,1.5,1.3,1.8,1.7,2.8c-0.7,0.9-1.7,1.1-2.8,1.1c-7-1.3-12.8-6.1-20.1-6.2c-3-0.3-5.1-2.6-8-3.3\n                        c-1.6-0.4-1.9-1.6-0.8-3c4.1-2.9,8.9-2.1,12.9-0.7c5.2,1.9,10.7,1.5,15.9,3c8.5,0.3,16.2,3.6,24,6.5c2.4,0.9,4.6,1.5,7,1.5\n                        C1981.2,338.5,1984.2,338.1,1984,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B3E43"),
                d:
                  "M2085.9,400.1c-2.5,0.2-4.3-1.8-6.6-2.3c-5.9-2.1-11.3-5.2-16.9-7.8c-4.9-2.3-9.7-4.8-14.6-7.2\n                        c-3.8-2-7.6-3.9-11.6-5.5c-1.7-0.7-3.3-1.6-4.2-3.3c3.4-2.3,6.7-4.6,10.1-6.9c7.6,3.3,14.1,8.4,20.9,12.9\n                        c2.1,2.7,1.6,7.1,6.4,8.2c1.7,0.4,3,1.2,4.4-0.8c0.6,6,1,6.2,6.9,3.9c-2.2,3.6-2.1,5.6,2.7,5\n                        C2085.7,396.1,2086.1,398.2,2085.9,400.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901D28"),
                d:
                  "M2010,393.1c-0.4-0.1-0.9-0.1-1.3-0.2c-1.3-0.7-3-0.2-4-1.6c-1.5-1.9-4.4-0.4-5.8-2.4\n                        c0.2-2.1,2-2.4,3.5-3c9.3-3.2,18.1-7.4,26.9-11.7c0.2-0.1,0.5-0.1,0.7-0.2c0.4,0.1,0.8,0.1,1.2,0.2c4.9,3.2,10.8,4.5,15.4,8.2\n                        c0.6,1.1,1,2.2,0.7,3.4c-0.3,0.4-0.6,0.7-1.1,0.9c-0.5,0.1-0.9,0.1-1.4,0.1c-4.6-1.3-9.3-1.7-13.2-5.4c-1.6-1.5-6,0-8.5,2\n                        c-1,0.8-1.9,2.2-3.1,2.3c-4.6,0.6-6.4,3.8-7.2,7.8C2011.7,393.9,2010.8,393.6,2010,393.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("934449"),
                d:
                  "M1996,354c0.3,0.1,0.6,0.4,0.9,0.4c5.2-0.2,8.9,2.8,12.7,5.7c1,0.8,2.5,1.8,3.5,1.6\n                        c5-1.2,8.6,1.3,11.3,4.7c2.1,2.7,6.2,1.6,7.7,4.8c-0.7,1-1.4,1.9-2.2,2.9c0,0,0.1,0,0.1,0c-0.3,0.4-0.8,0.4-1.2,0.3\n                        c-1.5-1-3.2-1.8-4.6-2.9c-2.8-3-6.5-4.2-10.2-5.8c-6.4-2.9-13.4-4.7-19-9.1C1994.3,355.2,1995.2,354.6,1996,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E08588"),
                d:
                  "M2046,382.9c-3.4-2.6-7.6-3.8-11.3-5.9c-1.3-0.7-3.4-0.6-3.6-2.9c0.3-0.1,0.5-0.1,0.8-0.2\n                        c5.4,2.6,11.1,4.6,16.3,7.9c-0.1,0.7-0.5,1.2-1.1,1.5C2046.7,383.4,2046.3,383.3,2046,382.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C3237"),
                d:
                  "M132,384c0.9,1.5,2.6,1.4,4,2c2.9-0.4,3.6,1.9,4.3,3.8c0.7,1.8,1.7,3,3.3,3.8c1,2.7-0.1,4.8-1.7,6.8\n                        c-2.8,3.4-5.5,6.9-6.7,11.4c-0.4,1.4-0.9,3.5-3.3,2.2c-0.6-0.6-1.3-2.7-1.7-1.7c-2,5.1-2.8-0.8-4.2-0.3c0-0.3-0.1-0.6,0-1\n                        c2.1,0,2.2-2.6,4-3c3-0.8,4.9-3.1,6.4-5.5c1-1.5,2.3-2.7,3.2-4.1C134.5,394.9,132.7,389.8,132,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851F24"),
                d:
                  "M1374.2,280.2c1-1.1,2-2.1,3-3.2c0.3,0,0.6,0,0.8,0c-0.4,1-0.8,1.9-1.1,2.9c0,1.4-0.9,2.4-1.4,3.6\n                        c-1.5,2.7-3.4,5.2-5,7.9c-2.5,3.3-4.3,7.1-7.5,9.8c-0.8,0.1-1.3-0.3-1.7-1.1c-0.2-0.7-0.2-1.4,0-2.1c2.6-4.9,5.6-9.5,8.7-14\n                        c0.9-1,1.7-2,2.4-3.1C1372.9,280.4,1373.5,280.1,1374.2,280.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87484B"),
                d:
                  "M2061.4,629.2c-0.8-0.1-1.6-0.1-2.3-0.2c-0.3-0.6-0.2-1.1,0.3-1.5c4.7-1.8,9.8-2.2,14.6-3.5\n                        c1.6-0.4,3.3-0.3,4.5,1.2c-0.9,0.6-1.7,1.1-2.6,1.7C2071,627.2,2066.4,629.6,2061.4,629.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3D49"),
                d:
                  "M1895.1,634.9c-3.4,0.1-6.9,0.9-9.1-2.9c0.7-1,1.3-2,2-3l0,0c4.3-2.3,3,3.1,5.1,3.7\n                        C1894,633.2,1895.3,633.4,1895.1,634.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3424E"),
                d:
                  "M260,286c2.5-2,5.3-0.6,8-1c6.7,0.5,13.4-1.1,20,1c2.3-1,4.7,0.8,7,0c1,0,2,0,3,0\n                        c1.1,0.9,2.5,0.3,3.7,0.6c1.7,0.3,2.1,1.2,1.2,2.7c-8.6-0.1-17.2-0.4-25.9-0.1c9.6-0.5,19.1,0.2,28.7,0.4\n                        c14.9,0.3,29.8,1.5,44.7,2.8c5.1,0.5,10.3,0.7,15.4,0.5c1.7,0.4,3.6,0.6,5.3,1.1c1.6,0.4,3.7,1,2.5,3.5\n                        c-7.1,1.5-14.3,1.2-21.5,1.9c-3.1,0.3-6.3-0.3-9.3,0.8c-7.7,0.7-15.4,0.7-23.2,0c-7.7-1.7-15.5-1.4-23.3-1.6\n                        c-14.8-0.3-29.6-0.4-44.3-0.4c-2,0-4.1,0.1-5.1-2.2c2.4-4.8,7.5-3.4,11.4-4.8c2.2-0.8,4.9-0.1,7.4-0.4\n                        c-3.8-1.8-8.3,0.7-11.9-2C255.4,286.4,259.7,290.9,260,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3A44"),
                d:
                  "M191,291c7-0.1,14,0.4,20.9-0.4c8-0.9,15.9-1.2,23.9-0.7c0.7,0,1.4-0.6,2.2-0.9\n                        c1.8,0.1,3.3,1.5,5.3,0.4c1.7-0.9,3.9-0.2,4.1,1.4c0.4,2.4-2,2-3.6,2.1c-0.6,0.1-1.2,0.1-1.9,0.2c0.4,1.1,0.7,2,1.1,2.9\n                        c-0.6,0.6-1.4,0.8-2.2,0.8c-6.1,0.7-12.2,0.7-18.3,0.6c-12.9-1-25.9,1.2-38.8-0.3c-3-1.3-1.4-2.4,0-3.8\n                        C185.8,291.3,188.9,292.9,191,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B34B55"),
                d:
                  "M241,296c0.7,0,1.3,0,2,0c1.4,1.8,2.7-0.4,4-0.1c4.6,1.8,9.4,0.8,14.1,0.9c14.8,0.4,29.6-0.6,44.4,1\n                        c4.5,0.5,9.2-1,13.5,1.1c-0.7,3-3.3,2.5-5.2,2.2c-8.5-1.2-16.8-0.1-25.1,1.7c-5.4,1.2-10.9-0.1-16.4,0.8\n                        c-0.6,0.1-1.2,0.1-1.7,0c-7.4-0.6-14.9-0.5-22.3,0c-6.3,0.9-12.8,0.3-19.2,1.1c-2-1.1-5.4,0.6-6.2-3c1.2-1,2.6-1.2,4.1-1.2\n                        c10.6-2,21.3,0.3,31-0.1c1.5-0.2,0.6-1.2,0.9-0.6c0.1,0.2,0,0.3-0.4,0.3c-5.1,0.5-10.2,0.1-15.3-0.3\n                        C240.9,299.7,239.6,298.6,241,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1895.1,634.9c-0.8-1-2-0.8-3.1-1c-1-1.9-0.3-4-0.9-6c-0.1-4,4.6-3.2,5.9-6c0.8-1.4,2.2-1,3.5-1.2\n                        c3.1-0.4,6.5,1.4,9.3-1.6c0.9-1,2.2-0.1,3.3,0.4c3.1,1.3,6.3,2.1,9.6,2.7c0.4,0.2,0.7,0.6,1,1c0.2,2.1-1,4-0.9,6.6\n                        c2.2-2.2,3.7-1.4,4.7,1c0.7,1.4,2.8,1.9,2.6,4.6c-7.3-0.2-14.6,0.4-22-0.4C1903.6,635,1899.3,635,1895.1,634.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971929"),
                d:
                  "M1907.8,635.1c7.1,0,14.3,0,21.4,0c0-2.8-5.2-0.1-3.2-4.1c1.5-5.5,8.2-9.8,14.4-8.7\n                        c2.2,0.4,4.2,0.4,6.2-0.4c5.4,1,11.1-1.7,16.5,1.1c2,1.6,0.8,2.7-0.6,3.8c-5.4,2.6-11.2,1.9-16.8,1.6c-2.9,1.3-5,0.3-6.9-3.6\n                        c0.6,4.7-2.5,4.2-4.9,6.6c3.5-2.5,6-4.4,8.1-0.5c1.9,1.2,4.1,1,6.2,1.4c1.3,0.3,2.9,0.4,2.8,2.1c-0.1,1.5-1.6,1.4-2.7,1.4\n                        c-1.2,0.1-2.2,0.5-3.4,0.5c-2.9-0.2-5.9,0.4-8.7-0.4c-0.4,0-0.8,0-1.1,0c-7.3,0-14.6-0.1-21.8-0.2\n                        C1911.3,635.9,1909.4,636.3,1907.8,635.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1D23"),
                d:
                  "M1974.9,636.9c1.4,0.1,2.7,0.3,4.6,0.5c-2.8,1.4-5.5-0.2-7.5,1.6c-14.9,0.7-29.3,3.9-44,6.2\n                        c-2-0.1-4-0.1-6-0.2c-1.6-2-4.5,0.1-6-1.9c10.2-3.1,20.6-5.2,31.4-5.1c2.9,0,5.9,0.7,8.7-0.9c1.1-1.4,2.7-1.4,4.3-1.5\n                        C1965.2,636.1,1970.2,634.4,1974.9,636.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C14353"),
                d:
                  "M1960,637c-1.3,0-2.6,0.1-3.9,0.1c-5.1,0-10.2,0-15.4-0.1c-1.6,0-3.3,0.6-4.7-0.9\n                        c3.3-0.1,6.7-0.2,10-0.3c3.6-0.1,7-1.6,10.7-1.2C1958.2,635,1959.9,634.8,1960,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("562F31"),
                d:
                  "M151,287.1c-0.9,4.4-5.2,5.4-8,7.9c-0.8,1.2-1.6,2.1-3.1,1c-1.3-4.7,1.2-8.8,5.6-9\n                        C147.3,287,149.2,287.1,151,287.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("573335"),
                d:
                  "M139.9,296c1-0.3,2.1-0.7,3.1-1c-0.6,4.1,0.3,7.6,4,9.9c-3,0-6.1,0-9,1.1c-0.4,0-0.7-0.1-1.1-0.1\n                        C138.8,302.9,140.9,299.9,139.9,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8616B"),
                d:
                  "M1442,286c4.8,0.2,9.6,0.4,14.4,0.6c0.9,1.7-2.4,0.6-1.4,2.4c3.4,3.4,3.4,3.7-0.8,6.9\n                        c-6.5,1.1-13,0.4-19.6,0.5c-3.9-0.4-7-2.6-10.4-4.4c-1.7-0.9-2.4-2.2-1.6-4.1c1.3-1.4,3.1-1.4,4.7-2\n                        C1432.3,285.9,1437.1,284.6,1442,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2646B"),
                d:
                  "M1442,286c-4.9,1.3-10,1-15,1c-1.4,0.9-3,0.7-4.3,0.3c-6.7-2-13.5-1.2-20.3-1\n                        c-8.6,0.2-17.1-1.3-25.7-1.9c-0.9-0.1-1.5-0.7-1.8-1.5c0.1-1.4,0.9-2.3,2.1-3c4.7,2.6,10,1.3,15,1.8\n                        c10.3,1.1,20.7,0.9,31.1,1.3c5.3,0.7,10.6,1,16,1l0,0C1440.5,284,1441.9,284,1442,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E85762"),
                d:
                  "M1455,295c1.4-2,1.4-4,0-6c4.3,0,8.6,0,12.9,0c1.4,0,2.7-0.7,3.7,1.3c0.5,1,2.7,1.8,3-0.8\n                        c0.1-0.8-2-1.8,0.4-2.5c1.5-0.4,2.2,0.1,3.3,1c2.1,1.8,4.4,4,7.7,3.1c0.7,0.7,1.4,1.4,2.1,2.1c0.1,2.5-1.6,2.7-3.4,2.8\n                        c-1.1-0.6-2.2-1.7-3.6-0.7c-1.4,0.3-2.2-5.5-4.1-0.4c-0.5,0.6-1.2,1-2,1.2c-5.5,0.6-11.1,0.5-16.6,0.3\n                        C1457,296.2,1455.8,296,1455,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1439,284c-5.4,1.7-10.7,0.3-16-1C1428.3,283.3,1433.7,282.3,1439,284z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761723"),
                d:
                  "M1378.1,630.9c2.3,0,4.6,0,6.9,0c7.3,0.3,14.7,0.6,22,1c2.7-0.2,5.4-0.3,8,1c0.3,0.1,0.6,0.1,1,0\n                        c2.5,1.2,2,1.8-0.4,2.1c-2.9,0.4-5.9-0.8-8.7,0.9c-10.3,0.1-20.5,0.2-30.8,0.3c0-0.8,0-1.5,0-2.3c2.7-1,5.3,0,7.5-0.4\n                        c-1.5-0.9-4.2,1.2-5.9-1.2C1377.6,631.8,1377.7,631.3,1378.1,630.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3542"),
                d:
                  "M1416,637c-0.2,0.5-0.5,0.9-0.6,1.4c-0.2,1,0.3,1,1.2,0.9c1.7-0.3,3.5-0.8,5.8,1.3\n                        c-3.4-0.3-5.8,0-8,1.8c-1.7,1.4-4.5,1.2-6.3,0.4c-4.5-1.9-9.3-0.6-13.8-1.8c-1.4-0.4-3.1,0.1-3.3-2.1\n                        C1399.2,637,1407.8,639,1416,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93647"),
                d: "M1383,655c1.4,0,2.9-0.1,3,2C1385,656.3,1382,658.7,1383,655z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("421016"),
                d:
                  "M1375,633c-0.4,0.1-0.8,0.1-1.2,0.2c-1.8,1.6-4.1,1.2-6.2,1.2c-13.5,0.3-27-0.5-40.4-0.5\n                        c-9.6-1-19.3-0.3-28.9-0.5c-7.1-0.1-14.3,0-21.4,0c-41.5,0-83,0-124.5,0c-5.8,0-11.6,0-17.4,0c-2,0-4,0.2-5.8-1.1\n                        c-0.5-0.6-0.4-1.2,0.1-1.7c1.8-1.3,3.8-1.1,5.8-1.1c45.3,0,90.5-0.1,135.8,0.1c22.7,0,45.3,0.2,68-0.1\n                        c10.5-0.1,20.9,0.9,31.4,1.1C1372,630.6,1374.4,630.2,1375,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("2C0C0D"),
                d:
                  "M1375,633c-1-1.2-2.4-0.9-3.7-1c-26.6-1.6-53.2-0.8-79.8-1c-6.8,0-13.7-0.1-20.5-0.1\n                        c-1.1-0.7-3.7-1.1-0.7-2.7c1.8-1,3.9-0.6,5.9-0.6c20.5-0.1,41.1,0.1,61.6-0.1c11,0,21.9-0.4,32.9,0.3c2.2,0.7,4.7,1,5.7,3.6\n                        c0.1,0.6-0.1,1.1-0.5,1.6C1375.6,633,1375.3,633,1375,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963C48"),
                d:
                  "M1327.1,632.9c15.6,0.1,31.2,0.2,46.7,0.2c0,1.3,0.1,2.6,0.1,3.9c-1.4-0.2-2.9,0.4-4-1\n                        c-3-1.1-6.1-1-9.1-1c-15.4-0.2-30.9-0.8-46.3-0.6c-1.2,0-2.7,0.5-3.7-0.8C1316.1,631.3,1321.7,632.7,1327.1,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B75565"),
                d:
                  "M1375.9,633c0.1-0.2,0.2-0.5,0.2-0.8c0.6-0.8,1.2-0.8,1.9-0.1c2.1,1.3,4.5,0.3,6.7,1.7\n                        c-2.9,0-5.8,0-8.7,0C1376,633.6,1376,633.3,1375.9,633z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E89096"),
                d:
                  "M2047,382.8c0.4-0.3,0.8-0.6,1.2-0.9c10.6,4.8,21.2,9.7,31.1,15.9c-0.5,0.5-0.9,0.9-1.4,1.4\n                        c0,0-0.5-0.1-0.5-0.1l-0.5,0c-2.7-2.2-5.5-4.3-8.9-5.2c-2,0.3-3.5-0.8-5.1-1.6c-4.4-2.3-8.5-5.1-13.3-6.8\n                        C2048.4,385.1,2047.2,384.3,2047,382.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC787B"),
                d:
                  "M2071.1,604.1c0.6,0,1.2-0.1,1.9-0.1c0.4,0.1,0.8,0.2,1.2,0.3c0.3,1-0.1,1.8-0.4,2.7\n                        c-0.2,0.5-0.3,0.9-0.5,1.3c-1,1.9-1.1,4.2-2.5,5.9c-1.1,1.3-2.2,2.6-4.1,2.3c-2.2-0.4-2.8-2-2.6-4c0.1-0.7,0.5-1.4,1-1.9\n                        C2067.5,608.8,2069.1,606.2,2071.1,604.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992F39"),
                d:
                  "M2073.1,606.1c0.4-0.6,0.7-1.2,1.1-1.8c5,3.5,8.6,8.4,12.9,12.7c0,0.3,0,0.6,0,1\n                        c-0.9,1.1-2.1,1.2-3.4,0.9C2079.7,614.8,2077.1,609.9,2073.1,606.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851727"),
                d:
                  "M2083,618c1.3,0,2.7-0.1,4-0.1c0.5,0.1,1,0,1.4,0.2c1.3,0.6,0.3,0.7-0.2,1c-2.7,1.5-6,1.6-8.3,3.8\n                        c0,0,0,0,0,0c-7,2.6-14.5,3.4-21.8,4.9c-3.4,0.8-7,0.8-10.4,1.2c-1.1,0-2.4-0.2-3.5,0.1c-4.1,1.2-7.3,0.3-9.8-3.2\n                        c-0.5-0.7-0.5-2.5-2.2-1.9c-0.4,0.2-0.9,0.7-0.8,1.2c0.2,1.8,1.9,0.5,2.6,1.2c0.4,0.3,0.8,0.6,1.1,1.6\n                        c-4.7,1.2-9.6,0.1-14.1,0.6c3.7-0.2,7.7-0.1,11.6,0c1,0,3-0.6,2.2,1.8c-1.2,0.4-2.5,0.7-3.8,0.6c-3.2-0.1-6.3,0.2-9.4,0.7\n                        c-0.5,0.1-1,0.2-1.5,0.2c-2.3,0.1-3.9-0.5-4.1-3.1c-0.1-2.1,1-3.4,2.7-4.4c2.5-1.5,3.4,0.4,4.5,2.2c-0.8-1.5-1.7-2.7-3.2-3.5\n                        c-1.7-0.9-3.4-2.9-1.9-4.9c1.5-2,3.6-1.5,5.3-0.1c-0.5-1.1-2.3-1.4-2.6-2.9c0.9-4,3.2-5.3,6.8-3c5.3,3.2,11.3,2.6,17.1,3.7\n                        c3.1,0.6,5.2-1.3,7.6-2.1c4.4-1.5,7.7,2.7,11.9,1.8c1.5,0.4,2.4,1.5,3.3,2.6c0.3,1.4-1.3,2.3-0.8,3.9\n                        C2072.4,622.8,2077.4,619.2,2083,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2045,386c0.3,0,0.7,0,1,0c1.5,2.3,3.9,2.6,6.4,2.5c2.2,1,5.2,1.6,2.9,5.1c0.9,0.4,1.5,1,1.6,2\n                        c0,0.5-0.1,1.4-0.2,1.4c-4-0.7-0.5,3.5-2.7,4c-3.5-0.3-6.3,3.3-10,2c0-0.6,0-1.3,0-1.9c-0.5-2.6-2.7-2.3-4.5-2.8\n                        c-1.8-0.5-3.6-0.9-2.9-3.4c0.2-0.4,0.4-0.8,0.7-1.1c0.7-0.8,1.4-1.6,1.8-2.6c0.2-0.4,0.3-0.8,0.5-1.2\n                        C2039.7,386.2,2043.2,387.3,2045,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1D2D"),
                d:
                  "M2054,401c-0.4-2.4,0.3-4.3,2-6c5.6-2.5,10-1.1,15,5c5.2,3.1,4.9,5.5-1,9c-5.1-1.4-9.4-5.2-15.4-4.8\n                        c1.2-1.8,2.4-1,3.4-1.3c0.9-1.7,3.2-2.3,3.4-4.9c-2.7,0.1-4.3,2-6.4,3C2054.7,401,2054.3,401,2054,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2055,401c-0.1-2.3,2.6-2,3.4-3.9c0.7-1.7,3.3-0.6,4.2,0.1c1,0.8,0.8,2.8-0.7,3.8\n                        c-1.2,0.8-2.2,2.1-3.9,2C2057.4,401.6,2056.4,401,2055,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93252F"),
                d:
                  "M2071,400c-4.6-3-9.1-6-15-5c-1.5-1.9-0.7-5.3-4-6c-2.5,0.3-3.7-1.3-5-3c-0.3-1-0.7-2-1-3.1\n                        c0.3-0.1,0.7-0.1,1-0.2c7,3.7,14.4,6.7,21,11.1C2069,395.9,2070.9,397.5,2071,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9555D"),
                d:
                  "M2058,627.1c7.3-1.4,14.6-2.8,21.9-4.2c0,0.7,0,1.4,0,2.1c-0.5,0-1,0.1-1.5,0.1\n                        c-4.9-0.7-9.3,1.8-14,2.3c-1.8,0.2-3.6,0.5-5.4,0.6C2058,628.5,2057.9,628,2058,627.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("862F38"),
                d:
                  "M157,601c-3.5-3.1-9.5-3.4-10.5-9.6c-0.3-2.1-3.4-0.8-4.5-2.4c0.7-5,3.4-7.5,8.2-7.1\n                        c3.1,0.2,3.7-1.5,3.7-3.9c0-3-1.3-6.4,3.1-7.6c0.4-0.1,0.7-0.8,0.6-1.3c-1.5-5.5,3.1-6.7,6.3-8.9c4-2,8.1-4,12.6-4.8\n                        c1.2-0.2,2.2-0.5,3.3,0.1c0.9,0.8,0.6,2.6,2.9,2.3c2.7-0.3,5.4,0.8,7.3,3.1c0,2.5-0.1,5-3.8,4c-0.5-0.1-1.4-0.1-1.4,0.1\n                        c-1.5,5-6.7,2.3-9.4,4.6c-1.2,1-5.7,1.4-0.8,4c0.9,0.5,0.1,2.4-0.9,1.8c-4.2-2.8-4.2,0.9-4.4,2.9c-0.3,3.4-2,5.3-4.9,6.8\n                        c-3.9,2-5.7,5.8-7.1,9.7c-0.7,1.8-0.5,4.1,1.8,5.1C158.6,600.8,157.8,601,157,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("97323E"),
                d:
                  "M176.1,604.8c-0.3,1.5,0.6,3.2-1.3,3.9c-0.3,0.1-1.2-0.3-1.2-0.5C173.7,606.7,175.1,606,176.1,604.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FFFFFF"),
                d:
                  "M1997,392c1.3,1-0.8,3,1.1,3.9c12.7,4.4,18.4,15.2,24.1,26c1.4,2.6,1.1,5.5,0.9,8.3\n                        c-0.4,2-1.6,3.3-3.5,3.9c-2.1,0.5-3.9,1.7-5.6,3c-5.1,3.8-10.8,6.2-17.1,6.7c-0.5,0-1.1,0-1.6-0.1\n                        c-14.1-4.5-28.9-3.7-43.3-5.4c-3.5-0.4-6.8-1.6-10.1-2.6c-3.6-1.1-7.1-1.6-10.8-1.4c-1.6,0-3.3,0-4.8-0.7\n                        c-8.3-4.6-17.8-6-26.5-9.3c-1.7-0.6-3.5-0.8-5-2c-1.4-1.3-3.2-1.8-4.9-2.6c-2.1-0.8-4.2-1.8-6.4-2.4c-1.3-0.2-2.7-0.4-3.8-1.3\n                        c-1.2-1-2.5-1.8-4-2c-1.1-0.3-2.1-0.7-3.1-1.3c-2.1-1.4-4.3-2.3-6.7-3.1c-1.9-0.8-3.7-1.8-5.6-2.7c-3.1-1.6-6.4-2.6-9.6-4.2\n                        c-2.2-0.9-4.4-1.7-6.5-2.8c-7.5-3.1-14.4-7.3-22.1-10c-1.6-0.5-2.9-1.4-4.3-2.3c-1.4-1-2.8-2.1-4.6-2.6\n                        c-1.1-0.4-2.1-0.9-3.1-1.5c-4.2-2.5-8.7-4.5-13.1-6.6c-3.7-2.3-8.3-3.1-11.2-6.8c-1.7-3.6-0.2-5.7,3.1-7\n                        c2.9-1.2,6.1-1.6,9.1-2.8c0.5-0.2,1-0.3,1.5-0.4c3.9-0.2,7.8-0.9,11.5-2c0.5-0.2,1.1-0.2,1.7-0.3c4.7-0.2,9.3-0.1,14-0.1\n                        c15.1-0.1,29.9,2.9,44.7,5.2c12.5,1.9,25,4.9,37.8,4.9c7.6,1.7,15.4,2,22.8,4.2c3.7,1.5,7.1,3.9,10.8,5.4\n                        c2.3,1.8,5.1,1.2,7.7,1.8c2.3,0.8,4.8,0.4,7.2,0.9c0.5,0.1,1,0.2,1.4,0.4c2.5,1.1,5.2,1.4,7.9,1.7c5.3,1.5,10.5,3.8,16.1,4\n                        c2.3,0.7,4.6,1.5,7,2.1c2.2,0.9,4.1,2.1,6.1,3.3C1996.7,391.7,1996.9,391.8,1997,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("625759"),
                d:
                  "M2019.3,433.1c1.7-0.2,2.4-1.5,2.9-2.9c1.7-4.5,0.5-8.5-2.5-12c-3.2-3.7-3.8-8.8-6.9-12.6\n                        c-1-1.3,0.5-2.3,2.2-1.8c0.7,0.4,1.4,0.8,2.1,1.1c2.2,2,3.1,4.6,3.9,7.4c0.6,2.3,2.5,3.3,4.2,4.7c5,4.1,5.1,7.9,1.4,13.2\n                        c-2.1,3.1-4.4,5.7-7.7,7.4c-1.4,1-2.6,2.5-4.7,1.6C2013.6,435.3,2017.3,434.9,2019.3,433.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C6BCBC"),
                d:
                  "M2015,403.8c-0.8,0.4-2.4,0.4-1.1,1.8c4.2,4.8,5,11.4,9,16.3c2,2.5,1.5,5.6-0.7,8.2\n                        c-1.8-12.3-7.5-22.3-17.6-29.7c-2.1-1.6-4.3-3.1-6.5-4.6c1.6-1.6,2.3,0.3,3.2,1C2005.5,400,2010.7,401.1,2015,403.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("883237"),
                d:
                  "M1991,389.1c-2.5-0.5-5-0.5-7.2-2c1.2-1.9,3-1.7,4.8-1.5c2.2,0.2,4.4-0.1,6.5,0.6c1.3,1,2.4,2.2,4,2.8\n                        c1.6,0,3.3,0.1,4.9,0.1c1.7,0,1.2,1.1,1,2c-0.8,1-2,0.1-2.9,0.8c-1.4-0.2-2.8-1.5-4.2,0c-0.3,0.1-0.6,0.2-1,0.3l0-0.1\n                        C1994.8,391.4,1993.2,389.5,1991,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63454A"),
                d:
                  "M2020,412c-1-2.4-1.9-4.7-2.9-7.1c2.7,0.7,5.5,1.5,7.9,3.1c-0.5,0.7-2.2-1-1.9,1\n                        C2023,411,2021.2,411.2,2020,412z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2045,386c-0.6,2.7-5,1.6-5,5c-1.5-1-2.8-5.7-4.4,0.1c-0.4,1.4-2.8,2.2-3.6,3.9\n                        c-3-1.2-6.5,0.6-9.4-1.3c-0.9-0.6-3.3-0.9-0.3-2.1c0.8-0.3,0.3-0.9-0.5-1.1c-1.3-0.4-2.2-2.1-4.1-1.2\n                        c-1.7,0.8-3.5,1.5-3.8,3.7c-0.3,0.3-0.7,0.3-1,0c0-0.3,0.1-0.7,0-1c-1.3-4.5,0.5-6.4,5.1-6.7c3.5-0.3,4.6-5.4,8.9-4.8\n                        c1.6,0.2,3.4-0.7,5.1-1c0.9-0.2,1.1-0.1,0.9,1.7c-0.1,1,0.6,1.1,1,1.2C2037.7,383.7,2041.3,384.8,2045,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2038,394c-0.6,1.4-1.4,2.7,1.2,3c1.7,0.2,3.6,0.6,5.1,1.3c1.7,0.8,2.3,2.1-0.3,2.7\n                        c-3.7,1.3-6.4-2.8-10-2c-0.3-0.7-0.4-1.4-1-2c0-0.7,0-1.3,0-2C2034.9,395.6,2036.1,393,2038,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2038,394c-1.7,0.3-3.1,2-5,1c-0.3,0-0.7,0-1,0c-0.4-0.9-0.8-1.8,0-2.8c0.9-1.2,4.6-1.3,1.5-4.1\n                        c-0.3-0.3,0.6-1.2,1.2-1.1c1.8,0.5,4.2-0.5,5.3,1.9c0.2,0.6,0,1.3,0.1,1.9v0C2038.3,391.3,2039,393.2,2038,394L2038,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852E37"),
                d:
                  "M2013,393c0.3,0,0.7,0,1,0c0.3,0.7,0.7,1.3,1,2c-1.9,0-4,0.3-5-2C2011,393,2012,393,2013,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2033,397c1.7,0,1.5,0.9,1,2c-0.9-0.1-2.1,0.3-2.4-0.7C2031.2,397.1,2032.3,397.2,2033,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3737B"),
                d:
                  "M2002.2,391.8c0.7-1.2,1.9-0.5,2.9-0.8c1.2,0.6,2.4,1.2,3.6,1.8\n                        C2006.3,393.4,2004.3,392.4,2002.2,391.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("1C0C0B"),
                d:
                  "M2024,415c5.6-2.7,8.8,2.2,13,4c1.5-0.8,2.4,0.5,3.6,0.9c1.9,0.6,3.2,2.2,4.7,3.4\n                        c0.5,0.5,0.8,1.1,0.8,1.7c1.7,1.5,3.3,3.1,5.1,4.5c1.6,1.3,1.3,2.3-0.1,3.4c-0.3,0.5-0.8,0.8-1.3,1c-1.1,0.4-2.2,0.4-3.3,0.4\n                        c-5.9-0.3-11.5,2.7-17.4,2.3c-1.7-0.1-3.7,0.6-4.7-1.6c-0.4-2.2,0.9-3.6,2.4-5c3.9-3.5,3.9-6.5,0.4-10.4\n                        C2025.9,418.2,2023.7,417.4,2024,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("893B40"),
                d:
                  "M2047,448.1c-1.3-0.1-2.7-0.1-4-0.2c-3.7-4-3.6-4.5,1.4-11.4c1.2-1.3,2.5-2.4,4.5-2.2\n                        c1.8,0.6,3.7,1.2,5.1,2.6c1,4.5-2.9,6-5.5,8.6c5.4,0.9,6.8-4.3,10.5-5.7c-1,5.9-4,8.4-9.5,7.9c-0.8-0.1-1.6-0.4-2.4,0.2\n                        L2047,448.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15253"),
                d:
                  "M2047,447.9c5.3-0.7,10-2.3,11.9-8c0.6-0.6,1.3-1.3,1.9-1.9C2062,445.3,2055.1,450.3,2047,447.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E404C"),
                d:
                  "M2045,424c-1.6-1.1-3.2-2.1-4.8-3.2c-1.1-1.2-0.7-1.8,0.8-1.9c3.4,0.4,7.1-0.7,10,2c1,0.7,0.1,1.3,0,2\n                        C2049,423.8,2047,423.9,2045,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E434C"),
                d:
                  "M2053.9,437c-2,0.1-3.7-0.4-5-2.1c-0.4-1.1,0.5-1.4,1.2-1.8c0.3,0,0.6-0.1,0.8-0.1c1.7,0,3.5,0,5.3,0\n                        C2056.2,435.1,2054.4,435.6,2053.9,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8525E"),
                d:
                  "M2045,424c1.8-1.5,3.7-2.4,6-1c-0.5,3.4-3.2,1.7-5,2C2045.6,424.7,2045.3,424.4,2045,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1C4C2"),
                d:
                  "M2074,460c0.3,0.6-0.5,2.5,1,1.8c1.9-0.9,2.5,0.6,2.4,1.3c-0.7,4.7,4.1,8.1,2.6,12.9\n                        c-7.5,1.1-14.3-1.7-21.3-3.5c-2.4-0.6-3.6-3.3-4.9-5.4c0.2-1.4,0.4-2.9,0.2-4.4c-0.6-5.7,0.6-6.7,6.5-7.1\n                        C2065.6,455.3,2070.3,456.1,2074,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1BDBB"),
                d:
                  "M2074,460c-4.5-1.4-8.6-3.8-13.7-3.1c-5.2,0.7-6.6,1.5-5,6.7c0.7,2.2-0.3,2.5-1.3,3.5\n                        c-3.2,1.1-6.3,2-9.3-0.5c0.9-3.1,0.8-6-1.5-8.6c-2.1-2.4-1.4-4.2,1.9-4.5c1.9-0.2,3.8-0.7,5.8-0.4c4.2,1.9,8.3,1.4,12.1-0.8\n                        c1.8-1.1,3.2-1.2,4.9-0.2C2069.4,455.1,2072.9,456.6,2074,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4BEBC"),
                d:
                  "M2045,466c2.8,2,6.1-0.3,9,1c3.5,1.2,4.8,6.3,8.8,5.8c5.1-0.6,9.4,2.8,14.4,2.3\n                        c0.9-0.1,1.9,0.6,2.8,0.9c0.5-0.7,1.1-1.4,2.1-2.8c-0.4,3.1-0.8,5.4-1.1,7.8c-3.4-1-6.3-3.5-10.1-2.9\n                        c-0.5,0.5-1.1,0.6-1.8,0.5c-1-0.4-1.9-1-2.9-1.5c-0.4-0.2-0.8-0.4-1.2-0.5c-1.8-0.8-3.7-1.2-5.6-1.6c-1.3-0.4-2.7-0.6-4.1-0.7\n                        c-4.1-0.7-8.2-1.7-12-3.4c-2.6-1.6-3.2-3.6-1.3-6.2C2043.6,464.2,2044.5,464.7,2045,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DBB1B0"),
                d:
                  "M2045,466c-1-0.3-2-0.7-3-1c-5.7-0.9-11.5-0.9-17.2-1.6c-2.6-0.3-3.9-2.1-4.9-4.3\n                        c-1.1-2.4,0-3.9,2.2-4.8c4.8-1.3,10,0.3,14.7-1.9c1.6-0.7,2.3-0.9,1.8-1.8c0.2-0.6,0.6-0.8,1.1-0.6c3.7,1,7.5,2.1,11.2,3.1\n                        c-1.3,0.8-2.7,1.1-4.3,1c-1.4-0.1-3.4,0.2-3.5,1.1c-0.1,1.2,0.9,2.8,2,3.7C2048.3,461.4,2047.8,463.7,2045,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("461317"),
                d:
                  "M2039.7,449.9l-0.4-0.1l-0.3,0.2c-3.1,2.4-6.7,1.6-10.1,1.4c-3.5-0.2-7-0.5-10.3-1.6\n                        c-0.5-0.3-0.8-0.7-0.9-1.3c0.9-1.3,2-1.1,3.5-0.2c-2.4-1.7-5-0.4-7.2-1.1c-0.8-0.3-1.7-0.5-1.9-1.3c-0.2-1,0.7-1.4,1.4-1.8\n                        c3.9-1.8,7.3-4.7,11.9-4.4c1.3,0.1,2.7-0.2,3.7-1.2c2.6-2.9,5.8-2.6,9.1-2c1.8,1.3,0.5,2.2-0.3,3.2c-3.3,4-3.1,4.6,2,6.4\n                        c1.1,0.4,2.8,0.3,2.3,2.3C2041.3,448.8,2040.5,449.3,2039.7,449.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("51121B"),
                d:
                  "M2042.1,448.2c-1.1-1.8-2.9-1.1-4.4-1.3c-2.4-0.2-2.9-2.4-3.9-4c-1.3-2,1.2-2.2,2-3.2\n                        c0.9-1.1,2.2-1.9,3.3-2.8c0.1-0.2,0.3-0.4,0.4-0.6c2.1-1.4,4.2-2.1,5.7,0.7c-1.8,3.4-5.8,6.3-2.2,10.8\n                        C2042.7,448.1,2042.4,448.2,2042.1,448.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("32292C"),
                d:
                  "M2024,415c1.3,1.5,2.5,3,3.9,4.4c4.6,4.8,4.4,7.8-0.9,12c-0.9,0.7-2,1.2-2,2.6c-1.3,3.4-3.7,4.4-7.1,3\n                        c3.3-2.1,5.8-4.8,8-8c2.6-3.8,2.9-6.2-0.3-9.8c-2-2.2-5.4-3.4-5.7-7.1c0.4-1.6,2.3-1.8,3-3C2024,410.9,2020.9,413.5,2024,415z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("512226"),
                d:
                  "M2041,419c-0.8,0.4-0.9,1.1-0.8,1.9c-1.1-0.6-2.1-1.3-3.2-1.9c0.9-3.9,3.7-2.4,6-2\n                        C2042.3,417.7,2041.7,418.3,2041,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4454F"),
                d:
                  "M1293,235c1.9-0.9,3.7-1.2,5.6,0c1.1,0.7,2.3,1.9,3.4,0l0,0c2.4,2.8,5.5,4.7,8.8,6.1\n                        c4.5,3.8,10,5.4,15.2,7.9c2.8,3.6,7.7,3.3,11,6c7.2,7.1,16.9,10.6,24.9,16.4c1.2,0.9,2.1,2.4,3.1,3.6\n                        c-2.2,1.8-4.2-0.6-6.3-0.4c-5.5-3.2-11.6-5.3-16.5-9.5c-3.5-2.6-8.4-3.4-10.6-7.8c-0.3-0.6-1.1-0.7-1.7-0.8\n                        c-5.8-0.6-10-4.5-15-7c-7-3.5-13.3-8.3-20.6-11.3c-1.1-0.5-2-1.2-1.8-2.6C1292.7,235.4,1292.9,235.2,1293,235z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA444B"),
                d:
                  "M1326,249c-5.6,1-9.1-4.6-14.5-4.6c-0.9,0-1.5-2-1.5-3.4c0.1-0.6,0.4-0.9,1-1c0.5-0.2,1.1-0.7,1.3-0.5\n                        C1316.6,243.1,1322,245,1326,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB414B"),
                d:
                  "M1311,240c-0.3,0.3-0.7,0.7-1,1c-4.5,0.4-6.3-2.6-8-6C1305,236.7,1308,238.3,1311,240z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44A53"),
                d:
                  "M1359,274c2.4-2,3.8,1.8,6,1c4.5-0.8,6.3,3.1,9.2,5.2c-0.4,0.3-0.7,0.6-1.1,0.9\n                        c-1.7,0.8-3.5,2.1-5.2,0.1c-1.5-1-3.5-0.7-5-1.6C1361.1,278,1358.6,277,1359,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1255,219c0.7,0,1.3,0,2,0c4,0.8,7.1,3.6,10,5.9c4.6,3.5,9.3,5.5,15,5.3c2.1,0.9,4.3,1.2,6.2,2.5\n                        c0.8,2.5,2.6,3.7,5,4.8c8.3,4.1,16.2,9.2,24.2,13.9c1.5,0.9,2.7,1.9,2.3,3.9c-1.8,3.4-4.4,2.5-5.8,0.3\n                        c-2.9-4.4-8-2.1-11.5-4.3c-0.4-0.3,0.2,1.7-1,2.1c-3.1,1.2-5.4,0.5-8.1-1.8c-2.8-2.4-7.2-2.4-9.4-5.9\n                        c-1.5-3.6-5.1-4.1-8.1-5.2c-2.7-1-5-2.5-7.4-3.8c-7.4-3.7-12.8-10.6-20.9-13.2c-1.1-0.4-1.9-1.3-2.6-2.3\n                        c0.2-2.5,0-5.3,3.7-5.3c0.5,0.1,0.9,0.2,1.3,0.4c1,0.7,1.7,2.1,3.3,1.7C1253.9,218.2,1254.5,218.5,1255,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF4C57"),
                d:
                  "M1249,217c-3.4-0.7-1.8,3.5-4,4c-2.2,1.3-3.2-0.2-4.2-1.7c-0.2-1.4,0.4-2.5-0.6-4.2\n                        c-1.2-2.3-2.2-1.8-3.9-2c-5.7-0.7-11-2.6-14.3-7.5c-1.3-2-1.7,0-2.6-0.1c-0.5,0.1-0.9,0-1.3-0.2c-0.6-1.2-1.5-1.9-2.9-1.8\n                        c-0.9-0.5-1.9-0.8-2.9-0.1c-0.4,0.2-0.9,0.2-1.3,0.2c-1.2-0.1-2.4-0.6-3.1-1.4c-1.8-2.1-3.4-1-5.2-0.2c-1.8,0-3.3-0.4-4-2.3\n                        c1.1-2.5-1.2-2.7-2.4-3.4c-1.6-0.8-3-1.4-2-3.5c0.4-1.9-1.6-2.9-1.9-4.6c0-0.8,0.3-1.4,1-1.8c3.4,0,6.6,1,9.6,2.6v0\n                        c2.5,5,8,4,12,6c0.1,1.9,1.7,2.8,2.9,2.9c7.2,0.4,11.8,7.4,19.1,7.2c2.4,0,2.2,3.1,4,3.9c2.1,1.1,4.4,1.8,6.4,3.1\n                        C1249.3,213.4,1250.1,214.9,1249,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4954"),
                d:
                  "M1203,189c-3.6,0.9-6.7-1.1-10-2c-2.5-0.2-5.1-0.7-7.5,0.6c-4.9-4.2-12-4.3-16.8-8.9\n                        c-1.7-1.6-3.9-0.3-5.7-1.2c-1.1-1.1-2.3-2.1,0.1-3.1c-1.2,0-2.5,0.3-3.5-0.7c-0.6-0.6-1.2-1.2-0.9-2.1\n                        c0.6-1.8,2.1-1.8,3.6-1.7c0.2,0,0.5,0,0.7,0c5.9,3,12.1,5.1,17.8,9c4.7,3.3,11.1,7.5,18.5,5.6\n                        C1201.7,184.1,1202.7,186.7,1203,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4853"),
                d:
                  "M1282,231c-4.9,0.5-9.6,0.7-13.4-3.3c-3.4-3.5-8.6-4.7-11.6-8.7c2-2,5-0.2,7-2\n                        c4.9,1.8,7.5,7.6,13.4,7.8c1.1,0,1.6,1.1,1.6,2.2C1280,228.3,1282.6,228.4,1282,231z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4A54"),
                d:
                  "M1148,161c3.9-0.3,7.1,1.7,10.4,3.3c1.8,0.9,3.1,3.1,5.6,2.7c-0.6,0.9-2.1,1.5-1,3l0,0\n                        c-2.5,1-4.9,0.6-6.9-1c-2.8-2.3-5.8-2.1-9.3-1.8c-5.9,0.5-10.7-3.3-15.9-5.5c-0.8-0.4-0.6-1.8,0-2.7c3.6-2.5,7.3-2.9,10.8-0.1\n                        C1143.6,160.5,1146.1,159.6,1148,161z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4853"),
                d:
                  "M1249,217c-0.1-3-2.2-4.5-4.5-5.6c-1.3-0.6-2.9-0.7-3.5-2.4c5.9,0,9.8,4.3,14.5,6.8\n                        c0.3,0.2-0.3,2.1-0.5,3.2c-0.7,0-1.3,0-2,0c-0.8-0.9-1.8-1.7-3-2C1249.7,217,1249.3,217,1249,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4954"),
                d:
                  "M1215,195c-3.5,0.4-6.6-1.5-10.2-1.3c-3.1,0.2-1.2-3-1.8-4.7C1207.5,190.1,1211,192.9,1215,195z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24851"),
                d:
                  "M1148,161c-2.9,0.5-5.5,1-8-1.8c-2.6-2.9-6,0.4-9-0.2c-0.2-0.1-0.3-0.3-0.5-0.4\n                        c-0.8-1.3-1.7-2.5-3.4-2.4c-1.1-0.1-2.3-0.2-3.2-1c-0.4-1.9-1.2-3.1-3.6-3.3c-3.3-0.2-6.4-1.7-9.6-2.5\n                        c-3.1-0.8-4.4-2.6-4.7-5.5c0.4-0.8,1.2-1,2-1c0.3,0,0.7,0,1,0c1.4,1.3,3.6,0.7,5,2c0.3,0,0.7,0,1,0c1.2,1,3.1,0.5,4,2\n                        c0.3,2.1,1.9,2.2,3.3,2c4.1-0.6,7.4,1,10.7,3c3.6,3.3,8.3,4.6,12.4,6.9C1146.4,159.5,1147.5,159.8,1148,161z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4484F"),
                d:
                  "M1282,231c-0.4-1.8-3.1-1.8-3-4c4.4,0.7,8.5,2.2,12.3,4.8c1.4,1,0.8,2.4,1.7,3.2l0,0\n                        c-2.7,1.8-3.8-0.2-5-2C1285.8,233.1,1283.6,232.9,1282,231z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24C56"),
                d:
                  "M743,117c9.7,0.2,19.4,0.2,29-2c0.7-0.5,1.4-0.8,2.3-0.9c13-0.7,25.9-2.4,39.1-2.3\n                        c11.8,0.1,23.7,0.4,35.6-1.6c8.2-1.4,16.5,0,24.8-0.1c16.1-0.2,32.3-0.1,48.5-0.1c1.6,0,3.4-0.3,4.8,1v0\n                        c1.7,1.1,3.7,0.8,5.6,1.1c2.4,1,4.8,0.3,7.3,0c2.7-0.3,5.6-1,8.1,0.9c1.3,0,2.7,0,4,0c1-0.8,2-0.7,3,0c0.3,0,0.7,0,1,0\n                        c0.5,2.8,4.8,0.8,5,4c-0.4,1.1-1,2.1-1.7,3c-0.4,0.3-0.8,0.5-1.3,0.5c-2.9,0-5.6-0.6-7.8-2.7c-0.9-0.8-1.9-1.4-3.2-1.3\n                        c-10.9,0.7-21.8,0.1-32.8,0.6c-7.4,0.3-14.8,1.4-22.3-0.2c-4.2-0.9-8.7-0.7-12.9-0.2c-12.3,1.6-24.6-1-36.8,1\n                        c-4.8,0.8-9.5,2.7-14.7,2c-1.9-0.2-4,0-5.9-0.5c-2.3-0.7-4.6-0.6-6.8,0.5c-5.4,0.9-10.9,0.9-16.3-0.2c-2.7-0.6-5.3-0.8-7,2.1\n                        c-0.3,0.4-0.8,0.6-1.3,0.7c-4.3-0.7-8.4-2.9-12.9-0.2c-2.1,1.2-2.8,0.3-3.3-3.5c-1.5,5.2-5.7,4.1-9.5,4\n                        c-0.5,0.1-0.9,0.1-1.4,0.1c-3.7-0.3-6.9,0.2-10.7,1.8c-2.8,1.2-7.6,4.7-11.6,0.3c-1-1.1-2.5-0.2-3.6,0.5\n                        c-1.3,0.7-2.4,1.2-3.2-0.6c-0.7-3,0.6-4.7,3.6-5C739.9,119.6,742,119.4,743,117z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D84F58"),
                d:
                  "M1106,144c3.7,5.9,10.2,6.2,16,6.8c4.3,0.5,3.4,1.8,2,4.2c1.2,4.8-2,5.1-5.3,5.3\n                        c-4.4-0.8-8.6-2.1-12.1-5.1c-2.4-2.1-5.9-0.1-8.6-1.7c-4-6.4-10.9-6.1-17-7.1c-4.4-0.7-8.5-1.1-12-4.2\n                        c-1.6-1.3-3.9-0.5-5.8-0.8c-6.5-4.6-14.7-4.4-21.8-7.4c-4.4-1.9-9-2.9-13.9-2.3c-2.1,0.3-4-0.2-5.1-2.3c-1-1.9-2.5-3-4.8-2.8\n                        c-3.7,0.2-7.3-0.8-10.7-1.7c-4.3-1.2-8.1-0.9-12,0.9c-1.3,0.3-2.6,0.3-3.7-0.5c-1.4-2.4,0.8-2.5,2-3.3c6-0.7,12.1-1.1,18-3\n                        c1.7,2-1.9,1.8-1.4,3.4c1.4,1.1,3.2,0.6,4.7,0.5c4.4-0.3,8.4,0.2,12.1,3c2.3,1.7,5,1.6,7.6,1.2c6.1-0.9,11.3,3.4,17.8,2.8\n                        c3.1-0.3,7.2,2.4,11.2,1.1l0,0c1.3,1.6,3,2.6,5,3c4,0.8,8,0.7,12,1c1.9-0.4,3,1.1,4.4,1.9C1091,141.1,1098.6,142.2,1106,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8515A"),
                d:
                  "M993,122c-0.6,1-2.2,1.4-2,3c-3.1,2.3-6.3,1.4-9.4,0.2c-2.7-1.1-5.3-1.8-8.2-1c-6,1.6-9.7-3-14.4-5.1\n                        c0-1.3,0.7-2,2-2C971.8,117.9,982.4,119.6,993,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d:
                  "M1080,135c-0.6,0.7,1.6,4.2-1.4,2c-3.2-2.4-6.5-2-9.8-2c-3,0-5.3-0.6-5.8-4\n                        C1068.3,133.8,1074.3,133.7,1080,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4750"),
                d:
                  "M1119,147c-1.6-0.2-3.7,0.7-4-2c1.6-1,3.3-1,4.8,0.1C1120.3,145.5,1119.8,146.5,1119,147z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4750"),
                d:
                  "M1114,145c-1.9,0-4,0.3-5-2c1.3,0,2.7,0,4,0C1113.3,143.7,1113.7,144.3,1114,145z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3844"),
                d:
                  "M1087,649c-1,0-2,0-3,0c-4-4.2-4-4.2-2-7.5c-3.2,2-10.1-0.2-11.9-3.7c0-0.5,0.1-1,0.4-1.5\n                        c0.3-0.5,0.7-0.8,1.2-1.1c8.3,0.1,16.5,0.6,24.8,0.5c8.9-0.1,17.8,0.2,26.7,0.1c13.1-0.1,26.1,2.8,39.3,1.7\n                        c1.3-0.1,2.6,0.4,3.5,1.6c0.3,1.1,0.7,2.2,0.9,3.4c0.3,2.9,0.3,4.2-4,4.4c-10.3,0.3-20.1-3.9-30.5-1.9\n                        c-4.3,0.8-8.8-1.3-13.5,0c-2.6,0.7-3.5,4.8-7,3.3c-0.4-0.2-1.3,0.1-1.3,0c-1.5-6-5.8-1.8-8.1-1.5c-3.8,0.5-7.9,0.2-11-0.4\n                        C1087.5,645.4,1088.3,647.9,1087,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73A47"),
                d:
                  "M1071,637c0,0.3,0,0.7,0,1c-2.4,1.5-4.9,2.9-7.6,3.8c-4-0.1-6.7-2.4-9.3-5.1c-0.8-2.3,0.4-3.2,2.3-3.9\n                        c12.6-0.7,25.3-0.4,37.9-0.3c53.2,0.5,106.5,0.3,159.7,0.4c2.1,0,4.4-0.8,6.1,1.2c-0.5,2.2-2.5,2-4,2\n                        c-21.2-0.1-42.5,0.6-63.7-0.4c-0.9,0-1.9-0.1-2.5-0.4c1.2,0.5,2.7,0.4,4.3,0.7c1.7,0.3,2.7,1.2,1.9,3.1\n                        c-3.1,1.7-6.1,1.7-9.1-0.3c-1.1,0.2-2.9,0-3.2,0.6c-3.2,6.1-8.3,3.7-12.7,2.6c-1.6-0.4-3-2.7-5.1-3.2\n                        c-5.5,0-10.9-0.4-16.3,0.1c-10.1,1-19.8-3.3-29.9-2.1c-13,1.6-26-0.4-38.9,0c-3.3,0.1-6.5-1.6-9.8-1c-1.8,1-3.8,0.1-5.4,0.5\n                        C1067.2,636.7,1069.2,636,1071,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C13C43"),
                d:
                  "M1187,639c3,0,6,0,9,0c1.8-2.6,4.4-3,7.4-3c13.8,0.1,27.5-0.1,41.3,0.1c9.8,0.1,19.5-0.6,29.3-0.3\n                        c2.4,0.1,5.2-0.4,5.8,3.1c-0.5,4.1-3.8,3.7-6.5,3.6c-14-0.1-28.1,0.2-42.1,0c-8.1,0.2-16.1,0-24.2,0.1c-2.8,0-5.6-0.2-8.1,1.4\n                        c-2.8,2.6-5.2-2-8.3-0.6c-0.6,0.3-2.2-1.6-3.1,0.7c-0.4,1-1.5,0.2-1.5-0.8C1186.2,641.9,1186.7,640.4,1187,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M1199,644c-0.2-3.4,2.2-3,4.3-3c9.2,0,18.4,0,27.7,0c1.6,2.3,4,2.5,6.6,2.6c4.1,0.1,8.2-0.6,12.3,0\n                        c3.2,0.4,3.6,0.9,3.6,3.9c-12.2,0.9-24.5,0.3-36.7,0.3c-0.7,0-1.2-0.4-1.8-0.8C1209.4,647.6,1204,646.6,1199,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3840"),
                d:
                  "M1215,647c13,0,26,0,39,0c1-1.1,2.3-1.4,3.6-1.3c7.9,0.4,15.8-0.7,23.7-0.7c5,0,3.5,1.7,1.7,4\n                        c-10.7,0-21.3,0-32,0c-0.7,0-1.3,0-2,0c-1.3,0.7-2.7,0.8-4,0c-8.6,0-17.1,0-25.7,0C1217.7,649,1215.5,649.8,1215,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93745"),
                d:
                  "M1245,649c1.3,0,2.7,0,4,0C1247.7,650.4,1246.3,651.6,1245,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C23947"),
                d:
                  "M1283,649c0.6-3.4,0.6-3.8-2.9-3.1c-8.7,1.6-17.4,1-26.1,1.1c-1.8-3.2-5-2-7.6-2.2\n                        c-3.8-0.2-7.7,0-11.5,0.2c-3.1,0.2-4.3-1-3.9-4c14.4,0,28.8,0,43.2,0c1.7,0,4.2,1.1,4.8-2c2-1.7,3.8-0.8,5.9,0.1\n                        c4.9,2.2,9.4,5.2,14.1,7.9c-0.2,2.1-1.9,2.3-3.3,1.9C1291.4,648,1287.2,649.5,1283,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C03F4C"),
                d:
                  "M1299,647c-2.3,0-3.8-1-5.8-2.3c-4.2-2.7-8.7-5.8-14.2-5.7c-0.3-2.5-2.3-2-3.8-2\n                        c-20.8,0-41.5,0-62.3,0c-5.7,0-11.5-0.7-16.9,2c-2.9-3.8-7.3-2.7-11.4-2.4c0.1-0.5,0.1-1.1,0.2-1.6c25.1,0,50.1,0,75.2,0\n                        c6.4-2.7,12.9-1.1,19.4-1c0.6,0.2,1.1,0.6,1.5,1.1c1.7,1,3.4,1.9,5,2.9c4.5,2,7.9,6,13,7C1299,645.7,1299,646.3,1299,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1B27"),
                d:
                  "M1281,635.1c-0.3-0.1-0.6-0.1-0.9-0.2c0.3-2.3,2.2-1.6,3.6-1.9c7.4,0,14.8,0,22.1,0\n                        c1.8,0,3.6-0.3,5.2,0.9c20.3,0.5,40.7-0.9,61.1,1c-0.5,1.3-1.4,0.8-2.1,1C1340.3,635.3,1310.6,634.6,1281,635.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D5253"),
                d:
                  "M1807,302c-1.7,3.4,0.8,3.3,2.7,2.9c4.5-0.8,8.3,1.4,12.4,2.5c0.4,0.1,0.6,1.1,0.9,1.6\n                        c-2.1,2-4.8,1.1-7.2,1.4c-2.8-0.3-5.6-0.4-8.5-0.5c-4-0.9-7.9-2.4-12.1-1.7c-0.7,0-1.4-0.2-2.1-0.4c-2.8-1.5-5.7-1.8-8.8-1.3\n                        c-0.5,0-0.9-0.2-1.3-0.5c-0.9-1.3-0.9-3.6-3.8-1.9c-2.6,1.5-4.3,0-4.2-3c-0.7-0.5-1.3-0.9-2.3-1.7\n                        C1784.5,297.7,1795.7,301.3,1807,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("915A5D"),
                d:
                  "M1670,293c-6.2,1.2-11.9-2.2-18-2c0.6-1,1.7-1.4,2.5-1.2c5.1,0.9,10.2-0.2,15.3,0.3\n                        C1672.2,290.3,1668.2,292.1,1670,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("915A5D"),
                d:
                  "M1652,291c-2,1.9-4.4,0.7-6.6,1c-0.1,0-0.3-0.1-0.3-0.2c-0.1-0.7,0.5-0.6,0.9-0.7\n                        C1648,291,1650,291,1652,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5256"),
                d:
                  "M1807,309c2.7-0.6,5.3-0.6,8,0c0.3,0.2,0.5,0.5,0.8,0.5c12.7-0.5,24.7,5.1,37.4,4.7\n                        c0.7,0,1.3,0.4,1.8,0.8l0,0c4.3,1.6,9,1.1,13.4,2.6c2.4,0.8,5.4,0.9,5.8,4.4c-0.6,0.9-1.4,1.4-2.5,1.7\n                        c-7.2-1.2-14.5-2.1-21.4-4.7c-1.5-0.6-1.6,0.8-2.4,0.9c-7.7-1.1-15.3-2.2-23-2.7c-12-0.9-23.5-4.6-35.4-5.2\n                        c-3.8-1-7.8-0.8-11.5-2.3c-0.8-0.6-1.5-1.4-1-2.6c2-0.3,4.3,0.8,6-1c0.3,0,0.7,0,1,0c3,0,6.1-0.3,9,1c0.7,0,1.3,0,2,0\n                        C1798.8,308.6,1803.1,307.7,1807,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A25358"),
                d:
                  "M1777,307c0.3,0.7,0.7,1.3,1,2c-1.5,1.7-3.7,1.4-5.6,1.7c-13.2-1.1-26.3-3.5-39.5-4.7\n                        c-12.2-1.9-24.5-3.2-36.8-4.6c-1.9-0.2-4.5,0.7-5.2-2.4c4.3,0,8.6-0.3,12.9,0.1c8.6,0.8,17.1,1.9,25.7,3\n                        c5.6,0.8,11.2,2.4,17,1c2.7-0.6,4.5,3.1,7.5,1.9c4.5,0.8,9.1,1.1,13.7,1c2.5,0,4.9,0.2,7.3,1C1775.7,307,1776.3,307,1777,307z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F5458"),
                d:
                  "M1570,288c1.7-0.3,3.6,0.7,5-1c9.8-0.9,19.2,3.4,29,2c4.6,1.4,9.3,2,14,2c4.4,0,8.8,0.6,13,2.1\n                        c-1.2,1.3-2.8,1.3-4.3,1.3c-11-0.9-22.1-1.5-33-2.8c-3.5-0.4-7.4,1-10.6-1.6c-2.5-1.9-5.3-0.6-8-1\n                        C1573.3,288.7,1571.4,289.5,1570,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2E36"),
                d:
                  "M1627,293.1c1.3,0,2.7,0,4,0c0.4,0.3,0.7,0.5,1.1,0.8c10.1-0.7,20-0.2,29.9,2.2c3.5,1.9,7.3,0.5,11,1\n                        c2.3,1.1,4.8,0.2,7.1,0.5c1.2,0.1,2.7-0.6,3.1,1.3c-1.2,1.6-3,1.6-4.7,2.1c-10.5-0.5-20.9-2.3-31.4-2.7\n                        c-5.6-0.7-11.2-1.5-16.9-1.8c-1.8-0.1-3.7,0-5.2-1.4C1624.3,293.1,1626.4,293.8,1627,293.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892B34"),
                d:
                  "M1679,299.9c1.1-1.3,2.6-0.7,4-0.9c1-0.9,1.9-0.8,2.9-0.1c1.7,0,3.3,0.1,5,0.1c7.6,1,15.2,2,22.7,3\n                        c6.4,0.9,13,1.2,19.3,2.9c0.3,0.6,0.2,1.1-0.4,1.5c-5.3,0.9-10.5-0.4-15.7-1c-11.3-1.3-22.6-2.5-33.9-3.9\n                        C1681.5,301.3,1680,301.2,1679,299.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E5258"),
                d:
                  "M1662,296c-10,0.4-19.8-2.6-29.9-2.2c10-1.3,20.1-2,29.9,1.4c0.1,0,0.2,0.3,0.2,0.4\n                        C1662.2,295.8,1662,295.9,1662,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5256"),
                d:
                  "M1775,307c-4.3,0.8-8.7,0.2-12.9-0.4c-2.6-0.4-5.7,0.4-8.1-1.6c5.7,0,11.5,0,17.2,0\n                        C1772.8,305,1774.7,304.6,1775,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A74F56"),
                d:
                  "M1686,298.9c-1,0-2,0.1-2.9,0.1c-3-2.5-7.1,0.5-10.1-2c3.2,0,6.5,0,9.7,0\n                        C1684.1,297,1685.7,296.8,1686,298.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("864B4C"),
                d:
                  "M1949,329c-7,2-13.5-1.4-20.1-2.4c-3.3-0.5-5.9,1.3-8.9,0.4c-0.2-0.1-0.4-0.1-0.6-0.1\n                        c-2-1-4.2-0.6-6.3-1.1c-0.5-0.1-0.9-0.3-1.3-0.5c-5.3-1.3-10.3-3.8-15.9-3c-4.7-0.1-9.3-0.5-11.8-5.3\n                        c3.2-1.2,15.8-0.1,18.7,1.4c2.6,1.3,5.5,0.3,8.3,0.6v0c2.7,2,6.1,1,9,2c0.4,2.9,2,0.6,3.1,0.9\n                        C1931.8,323.8,1940.7,325.3,1949,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924F52"),
                d:
                  "M1884,317c3.7,2.3,7.3,4.8,12,4c5.7,1.1,10.9,4.6,17,4c2,1.8,4.5,2,7,2l0,0c2.4,2.8,6.4,2.7,9,5\n                        c-0.6,0.7-1.3,1-2.2,1.2c-6,0.2-11.6-1.7-17.3-3.2c-8.6-2-16.8-6-25.8-6.3c-2.7-0.1-4.7-3.8-7.8-1.3c-0.7,0.2-1.4,0.2-2-0.4\n                        c-3.8-4.4-9.4-3.5-14.2-5c-1.7-0.5-4.2,1-4.8-2C1864.8,314.3,1874.2,317.9,1884,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924F52"),
                d:
                  "M1855,315c-5.7,0.9-11.3,0.3-16.8-1.5c-5.3-1.7-10.7-3-16.4-2.5c-2.5,0.2-5,0.3-6.8-2c2.7,0,5.3,0,8,0\n                        c7.2,1.3,14.7,0.9,21.7,3.8c1.9,0.8,4.3,0.2,6.4,0.2C1852.7,313.1,1854.6,312.5,1855,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("946061"),
                d:
                  "M1563,287c-2-0.3-4.2,0.8-6-1C1559,286.3,1561.2,285.2,1563,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("875151"),
                d:
                  "M1920,321c-3-0.6-6.7,1.6-9-2C1914.2,319,1917.1,319.8,1920,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC4E59"),
                d:
                  "M1511,299c-1.2-1.2-2.3-2.3-4.2-2c-1.9,0.2-3.4,0-4-2.5c-0.7-2.8-5-0.4-5.8-3.5c0.3-1.1,0-1.7-1.1-2\n                        c-0.9-0.3-2.4-0.2-1.9-1.9c5.7,0,11.4,0,17,0c3,0,5.9,0.1,8.9,0.1c9.1,1.2,18.4,1.3,27.4,3.1c1.5,1,1.5,2.4,0,3.1\n                        c-1.9,0.9-3.8,2.5-6,2.2c-3-0.4-5.2,0.1-6.4,3.1c-0.6,1.3-1.8,1.3-3,1c-5.5-1.4-10.9-2.1-16.2,1\n                        C1514.1,301.7,1512.3,300.5,1511,299z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D04954"),
                d:
                  "M1573.1,291c2.3,0,4.7,0.1,7,0.1c3.4,0.8,6.8-0.6,10.2-0.1c5.4,0.9,11,0.7,16.4,1.6\n                        c1.4-0.1-1.7,2.1,0.8,1.6c4.6-1,9.2-0.6,13.8-0.1c1.3,0.1,2.9,0.2,2.9,2c0.1,1.6-1.4,2.1-2.6,2.5c-2.1,0.8-4.3-0.3-6.4-0.1\n                        c-2.1-0.1-4.3,0-6.4,0c-0.5,0-1,0-1.5,0c-6-0.4-12-0.4-17.9-1.9c-7.9-0.6-15.6-2.6-23.7-2.3c-1.7,0.1-4.4-0.5-2.5-3.5\n                        C1566.6,290.7,1569.9,290,1573.1,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94D56"),
                d:
                  "M1573.1,291c-3.4,0-6.7,0-10.1,0.1c-5,2.4-10,2.4-15,0c-9.2-0.1-18.2-3-27.5-2.6\n                        c-0.2,0-0.4-0.8-0.6-1.2c14.1-0.5,28,1.7,41.9,2.7C1565.6,290.1,1569.5,289,1573.1,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2D33"),
                d:
                  "M1606.9,293.2c-5.6-0.4-11.3-0.8-16.9-1.2c-2.2-1.4-4.8,0.4-6.9-1.1c0-0.3,0-0.6,0-1\n                        c14.7,0.1,29.3,2.1,44,3.1c-0.5,0.8-1.3,0.9-2.1,1C1618.8,294.8,1612.8,294.8,1606.9,293.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF454E"),
                d:
                  "M1583,290.9c2.3,0.6,4.8-0.7,6.9,1.1c-3.3-0.4-6.7,0.9-9.9-0.9C1581,291.1,1582,291,1583,290.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64650"),
                d:
                  "M797,109c0.7,0.7,1.3,1.3,2,2c-1.7,1.3-3.3,1.3-5,0c0.3-0.7,0.7-1.3,1-2C795.7,109,796.3,109,797,109z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74751"),
                d:
                  "M794,111c1.7,0,3.3,0,5,0c1,0,2,0,3,0c1-0.8,2-0.7,3,0c12.6-0.5,25.2-0.5,37.8-1.7\n                        c10.9-1,22.1-0.3,33.1-0.3c15.4,0,30.8,0,46.2,0c1.8,0,4.2-1.1,4.9,2c-16.3,0-32.6-0.4-48.9,0.2c-8.8,0.3-17.8-2-26.3,0\n                        c-11.5,2.8-23.1,0.1-34.5,2.1c-2.4,0.4-4.9,0-7.3-0.3c-11-1.3-21.7,2.1-32.6,2.2c-1.8,0-3.6-0.3-5.4-0.2c0-0.3,0-0.7,0-1\n                        c0.7-1.2,1.9-1,3-1c2.3-0.8,4.8,0.4,7-1c2.1,1.6,3.8,0.2,5.8-0.6C789.6,110.7,791.9,111.1,794,111z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64650"),
                d:
                  "M782,112c-2.1,2-4.5,1.7-7,1C777.1,111.1,779.7,112.4,782,112z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("803139"),
                d:
                  "M164,561c-1.3,1.2-2.5,3-4.1,3.5c-1.6,0.5-1.3,0.9-1.3,2.2c-0.1,2.2,3,6.6-3.3,5.6\n                        c-0.7-0.1-0.1,3.2-0.1,4.7c0.2,4.9-1.3,6-6.2,5.9c-3.2-0.1-5.9,2.6-7.1,6c-0.2-1.6-0.7-3-2-4c-1-2.3,0.2-5.8-3.9-6.5\n                        c-1.1-0.2-0.5-1.6-0.2-2.5c-0.7-2.4,0.1-4.8-0.8-7.3c-0.8-2.1,0.6-5.2,2.7-5.9c3.1-1.1,3.7-3.7,5.1-5.9c4.6,2,10.3-1.4,14.4,3\n                        c1.2,1.3,1.5-0.3,2.2-0.7C161.9,557.8,163.7,557.6,164,561z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("773039"),
                d:
                  "M143,557c0,2.8,0,5.2-3.8,6.2c-2.5,0.6-2.9,3.4-2.2,6.3c0.5,1.9,0.8,4.6-1,6.5c-3.7-2-4-6.5-6.7-9.5\n                        c-3.1-3.4-5.5-7.7-8.3-11.5c-0.6-1.4-2.2-2.2-2-4c1.7-0.2,3.1-1,4.2-2.2c2.3,1.9,4.7,3.3,7.9,2.5c5.1-1.3,8,2.5,11.4,5.1\n                        C142.7,556.6,142.9,556.8,143,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C2D34"),
                d:
                  "M123,549c0.4,4-1.1,4.4-4,2c-3.2-6.1-7.7-11.4-10.1-17.9c2.4,1.1,4.7,0.1,7.1-0.1\n                        c7,1.9,14.5,1.8,21.2,5.3c-0.3,1.3-3.6,1-1.7,3.6c0.5,0.7-1,1.4-2.1,1.2c-1.5-0.3-2.8-1.1-4.1-1.7c-2.2-1-3.5-0.6-3.7,2.1\n                        C125.4,545.6,125.4,547.9,123,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4B0D1E"),
                d:
                  "M168,522c-6.4-1-12.8-2.1-19.3-2.9c-1.6-0.2-3.3-0.2-4.7-1.1c-0.3-3-0.7-5.6-4-7.4\n                        c-2.9-1.6-5.7-3.9-6.3-7.8c-0.1-0.7-0.9-1.7-1.5-1.8c-7.9-1.3-4.7-7.5-5.2-12c0.2-0.2,0.5-0.3,0.7-0.5\n                        c9.6,0.6,18.9,2.8,28.3,4.6c0.8,0.2,1.6,0.4,2.4,0.4c4.3,0.7,9.2-0.5,12.6,3.5c1.1,1.3,2.8,2,3.2,4.2c0.3,1.6,1.1,4.1,4,2.7\n                        c1.2-0.6,2.3,0.5,2.5,1.1c2.2,5.2,7.6,3.2,11.3,5.2c0.4,0.2,1.2-0.2,1.8-0.3c0.1,5.5,4.6,3.2,7.3,4.1c1,1.7,4.6,0.8,4.2,3.3\n                        c-0.4,3-3.5,2.4-5.7,2.8c-1.3,0.3-2.5,0.8-3.9,0.2c1.3,0.7,3.6,0.5,3.3,2.2c-0.3,2-2.3,1.3-3.7,1.1c-3.4-0.6-6.9-1-10.4-1.4\n                        c-2.6-0.3-4.1-1.4-3.3-3.7c-0.5,3.3-3.2,4.6-6.3,3.5C172.5,521,170.4,521.7,168,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1924"),
                d:
                  "M106,484c-0.1-7-0.1-7,7-7c4.5-1.5,8.2,1.5,12.3,2.3c1.6,1,1.4,2.5,0.9,4c-0.6,1.7-0.4,3.2,1,4.5\n                        c0.2,0.5,0.1,0.9-0.2,1.2l0,0c-6.3-1-12.6-2.1-18.8-3.1C107.1,485.7,106.5,484.9,106,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1F26"),
                d:
                  "M139,517c-1.1,2.1-2.5,3.2-5.1,2c-1.1-0.5-2.6-1.7-3.9,0c-0.7,3.1-2.4,4-5.5,3.4\n                        c-4-0.7-8.2-0.5-11.5,2.6c-0.3,0.7-0.7,0.7-1,0c-1.7-6.4,0-10.3,5-12C124.6,512.8,131.6,516,139,517z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M186,489c-1,0-2,0-3,0c-5.6,1.6-11-0.8-16.4-1.3c-4.7-0.4-9.4-1.8-14-2.6c-0.5-0.1-0.9-0.4-1.3-0.7\n                        c0.5-4.2-2.9-0.6-3.8-2c-0.4-0.2-0.7-0.6-0.9-1c-0.4-0.9,1.9-1.7-0.3-3c-2-1.2-2.9-3.9-3.8-6.3c-0.6-1.6-1.3-3.1-2.6-4.2\n                        c-4.3-3.6-7.2-7.6-3.9-13.5c0.4-0.7,0.2-1.6,0.7-2.3c0.1-0.1,0.2-0.2,0.5-0.5c-1.4,0.9-1.2,2.4-1.8,3.6\n                        c-0.8,1.4-1.5,2.7-3.4,2.1c-1.2-0.8-1.9-1.9-1.5-3.3c1.1-3.9,0.1-6.8-3.2-9.1c-1.1-0.8-1-1.9-0.2-3c-0.7-1-1.3-2-2-3\n                        c1.5-3,4.5-2,6.8-2.7c2-0.6,4.2-0.4,6.2-1.2c1.6-0.8,2.9-2,4.8-2.2c0.7-0.1,1.5-0.2,2.2-0.2c1.5,0,2.9-0.5,4.3-0.8\n                        c2.2-0.3,4.5-0.1,6.8-0.8c1.1-0.1,2.1,0,2.9,0.8c1.3,0,2.7,0,4,0c2.6,0,5.5-0.1,2.1,3.5c-2.2,2.3-0.2,3.8,1.4,4.8\n                        c5,3.2,5.4,3.7,5.5,9.3c-1.7,1.5-2-5.6-4.2-0.7c0,0.1-0.3,0-0.5,0c0.6-3.8-4.6-3.2-4.6-5.5c-0.1-3.9-3.3-1.7-4.6-3.1\n                        c-0.1-0.1-0.8,0.4-1.2,0.7c3.8,3.8-1.9,3.3-2.4,5.2c-0.5,1.9,2.5,6.6,4.6,6.4c0.4,0,0.8-1.2,1,0.1c0.2,2.1,0.9,4.6,0.1,6.3\n                        c-1.5,3.6-2.4,5.6,3.1,5.5c1.5,0,4.9,4.5,4.4,5.9c-1,3,0.6,4.8,1.1,7.4c2.6-2.1,0.4-4.3,1-6.3c2.1,0.2,1.7,2.2,2.6,3.2\n                        c2.1,2.4,1.5-1.9,3.5-1c0.5,4.2-3.4,4.6-5.9,6c-0.9,0.5-2.4-0.1-2.2,1.8c0.2,2,1.6,1.2,2.6,1.3c2.7,0.4,5.2-0.7,7.9-1.3\n                        c-0.8-1.1-2.8-1.5-1.6-3.5c1.4-2.4,4.1-2.8,6.3-3.7c1.6-0.6,0.5,1.9,0.6,1.9c2.5,0.3,4.9,0.4,7.4,0.6\n                        c-0.3,1.2-1.1,1.9-2.2,2.4c-2.1,0.9-2.6,3.2-1.2,4.6c1,1.1,4.4,0,3,3.3c-1.2,2.9-2.5,0.4-3.8,0.2\n                        C186.3,487.7,186.1,488.5,186,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("52151D"),
                d:
                  "M127,442c0,0.3,0,0.7,0,1c0,3,4.1-1.5,4,2.3c-0.1,1.7-1,3.9,0.8,5.1c1.6,1,1.2,1.8,0.2,2.6\n                        c-1.6,1.4-0.5,2.7,0,4c2,3,0,5.8-0.7,8.4c-1.3,4.8-1.1,10.1-4.6,14.2c-0.2,0.1-0.5,0.2-0.7,0.4c-4.6,0.2-8.6-2.2-13-3\n                        c-1.3-2-3.9-0.1-5.4-1.7c4-3.2,7-6.8,6.4-12.3c-0.1-0.5-0.2-1.1,0.1-1.5C118.8,455.2,120.2,446.9,127,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63202A"),
                d:
                  "M139,436c-4.4,2.3-9.5,1.1-14,3c-3,1-6,2-9,3c-1.6-3.4,1-5.6,2.5-7.8c2.3-3.4,4.4-6.9,5.6-10.8\n                        c1-3.2,3.4-4.7,6.9-4.4c0.1,3.9,4.7,5,5.1,8.7C135.1,431.1,135.1,434.2,139,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1F27"),
                d:
                  "M137,539c-4.1-2.5-8.9-1.5-13.3-2.8c-2.7-0.8-5.2-1.8-7.7-3.2c-2.3-2.1-0.9-4.6-1-7\n                        c5.1-1.6,9.8,0.6,14.6,1.4c6.4,1.1,12.7,2.7,19.2,3c1.5,0.2,2.4,1,2.9,2.4c1,4.5-0.7,7.2-5.3,8.2\n                        C143.1,541.3,139.8,541,137,539z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66212A"),
                d:
                  "M149,531c-4.8,0.9-9.5-0.2-14.2-1.3c-6.6-1.5-13.2-2.5-19.8-3.7c-0.4-0.8-1.2-1-2-1\n                        c1.5-5.4,6-3.9,9.7-4c1.8-0.1,3.5,0.3,5.4,0.5c-0.6-1.6-1.5-3.7,1.9-2.5c1.5,3.7,3.3,6.7,8,4c0.1,0.2,0.3,0.4,0.4,0.5\n                        c0.5,5.1,5.3,3.6,8,5.2C147.6,529.2,148.6,529.7,149,531z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66212A"),
                d: "M107,521c1.7,1,3,2.3,4,4C108.6,524.7,107.3,523.4,107,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60121F"),
                d:
                  "M1519,427c-7.3,0.7-13.9,3.9-20.8,5.9c-9.3,2.6-18.6,5.2-27.7,8.5c-5.7,2.1-12-0.8-18-1.8\n                        c-15.7-2.7-31.4-5.7-47.2-7.7c-3.7-0.5-7.4-1.4-11-2.4c-1.3-0.4-2.2,0-3.3,0.4c-2-2.3-2.1-5.4-2.1-8c-0.1-9.1-1-18.2-2.3-27.2\n                        c0.1-3.1-0.6-6.3,0.8-9.3c2.5,0.3,2.6,0.3,2.8,2.8c0.2,3,0.2,5.9,0.9,8.8c0.4,2,1,3.8,2.9,4.9c1.3,0.7,2.6,1.3,3.9,2\n                        c1.5,0.8,3.1,1,3.4-1c0.5-3.3,4.1-2.4,4.5-2.1c4.7,4.2,10-1.5,14.7,0.9c0.6,0.3,1.2-0.5,1.1-1.2c-0.2-2.1,1.5-1.8,2.3-1.5\n                        c2.7,0.9-1.2,1-0.3,1.8c0.3,0.3,0.3,1,0.7,1.3c0.9,0.7,1.6-0.1,2-0.7c3.4-4.5,8.3-1.6,12.1-1.5c2.3,0.1,3.1-0.1,4.5-1.5\n                        c3.1-3,7.5-1.9,10,2c0.4,0.7,2,0.5,3.3,0.9c-1.1,0.5-1.9,0.8-3.2,1.4c2.6,1.5,4.8,2.2,6.1-0.6c1.4-3,2.7-2.6,5.3-1.4\n                        c1.8,0.8,4.2,2.6,6.4,0.3c2.3,0.1,4.7-0.4,6.8,0.9c0.5,0.3,1.2,0.3,1.9,0.5c0.9-4.2,3.4-1.1,5.3-1.4c3.6-0.5,5.2,1,5.7,4.6\n                        c1.9-1.1,0.7-3.1,2-4.1c0.3,0.2,0.9,0.2,1.1,0.5c1.1,1.7,1.6,3.5,4.4,1.7c1.4-0.9,4.9-2.9,4.9,2c0,1.3,1.2,1.4,2.3,0.8\n                        c0.6-0.3,1.1-0.7,1.6-1c1.8,6.8,5.7,1.4,8.7,1.5c2.2,0,4.4-0.9,3.5,3c-0.4,1.6,0.7,3.5,1.1,5.2c2.1,0.5,2.5-1.8,4.9-3.3\n                        c-2,3.8,0.1,6.4-0.1,9.6c-0.2,2.4-1.6,2.4-2.3,3.6C1521.4,425.2,1520,425.7,1519,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1446.1,391c-9.9,2.4-20,4.4-30.1,6c-2.3,0.8-4.8,0.8-7.2,1.4c-4.9,1.1-8.8-1.4-11.4-5.1\n                        c-2.3-3.4-3.8-3.4-5.7,0c-2.2-1.5-2.3-4.2-1.3-5c2.6-2.1,0-4.6-0.3-4.8c-2.9-1.7-2-4.5-2.5-6.9c-0.8-2.8-1.2-5.6-0.4-8.5\n                        c0.9-1.7,0.9-4.6,4.2-2.9c1,1.5,0.5,3.2,0.7,4.9c0.2,2.2-0.4,4.7,3.2,4.8c1.1,0,1.4,1.5,2.1,2.3c1.5,2,2.6,5.6,6.5,3.7\n                        c0.6-0.3,1.6-0.5,1.9-0.1c2.4,4.1,5.4,0.9,8.1,0.8c0.8,0,1.8-0.2,2.5,0.1c3.4,1.8,5.6,0,7.7-2.3c1-0.2,2.4,0,2.5,1\n                        c0.5,3.6,2.2,3.9,5.5,3.6c3.5-0.3,7.2,0.9,9.3,4.5C1442.2,390.4,1444.8,389.4,1446.1,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1626"),
                d:
                  "M1389,377c-1.2,2.9,1.4,4.7,2,7.1c0.1,0.6,0.3,1.6,0.9,0.4c0.7-1.3,1.6-2.1,2.5-0.7\n                        c0.5,0.8,0.6,2.8-1.1,3.2c-3.5,0.6-2,3.1-2.3,5.7c2.7-6.1,3.9-5,7-0.4c2.8,4.1,7.8,7.5,14,4.9c1.1-0.5,2.6-0.1,4-0.1\n                        c-6.2,2.7-13.1,2-19.4,4c-0.9,0.3-2,0.1-2.6,1c-2.9,1.6-3.4,0-4.1-2.6c-1.2-4.8,0.1-9.8-1.9-14.4c-1.7-2.4-2.4-5.1-1.3-8\n                        C1387.4,376.4,1388.2,376.4,1389,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("85182B"),
                d:
                  "M1516,399c-15.4-0.3-30.5-2.5-45.7-4.8c-2.8-0.4-5.7,0.4-8.3-1.2c-0.5-1.1,0.1-1.8,0.9-2.4\n                        c2.8-0.1,5.6,0.6,8.4,0.8c1.7,0.3,3.3,0.3,5,0.2c0.5,0,1,0,1.5,0c4.5,0,9,0.2,13.5-0.1c6.3-0.4,12.2,0.8,17.9,3.3\n                        c3,1.3,6.4,0,9.2,1.7C1519.6,399.2,1517.4,398.8,1516,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1516,399c1-0.7,2-1.3,3-2c0.2-0.1,0.4-0.3,0.6-0.4c5.2,0.4,10.3,0.9,15.5,1.9c0.8,0.6,1.4,1.4,1,2.5\n                        c-3.7,0-7.3,0-11,0C1522,400.3,1518.8,400.5,1516,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("85182B"),
                d:
                  "M1446.1,391c-1.6-1-4.7,2-5-2c3.4-1.1,6.9-1.4,10.4-1.3c1.7,0,3.4,1.1,4.1,3c0,0.5-0.1,0.9-0.5,1.3\n                        c-1-0.3-2,1.2-3,0c-1.5-1.3-3.5,0.1-5-1C1446.7,391,1446.4,391,1446.1,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1455,392c0-0.3,0-0.7,0-1c2.7-1.9,5.3-1.9,8,0c-0.3,0.7-0.7,1.3-1,2\n                        C1459.7,392.6,1457.1,393.9,1455,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60121F"),
                d:
                  "M1471.2,401.3c-2-1.8-4.4-0.8-7.5-2.3C1467.1,399.4,1469.7,397.6,1471.2,401.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1447,391c1.7,0.2,3.6-0.7,5,1C1450.3,391.7,1448.4,392.6,1447,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB616B"),
                d:
                  "M1562.1,385.8c-1-0.6-2-1.3-3-1.9c0.8-2.4,1.6-4.7,4.1-6.1c1.1-0.6,2.6-1.9,1.6-3.2\n                        c-2.5-3.3,0.2-4.7,1.9-6.6c0.9-0.7,1.8-0.9,2.9-0.7c3.7,0.9,7.1,2.6,11.1,2.5c1.6-0.1,3,0.8,3.4,2.5c1.2,4.8,4.9,5.2,8.9,5.3\n                        c5.6,0.2,6.4,1,6.9,6.1c-0.7,2.7-1.7,4.2-5.3,3.2c-3.9-1.2-8.2-0.9-12.3,0.1c-1.4,0.2-2.7,0.2-4.1,0.1\n                        C1572.9,385.4,1567.4,387.3,1562.1,385.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A25"),
                d:
                  "M1544,387c4.6-1.8,9.6-0.5,14-0.1c2.9,0.3,5.4,6.3,8,9.8c0.4,0.5,0.6,1.1,0.9,1.6\n                        c1.5-1,2.8-2.1,4.2-2.8c1.4-0.7,2.8,0.1,3.4,1.2c1.1,2-1,1.2-1.7,1.7c-1.2,0.8,0,1.7,0.1,2.6l0,0c-7.4,2.5-14.8,1.6-22.1-0.1\n                        c0.8-4.6-2.6-5.3-5.8-6.2c-1.7-0.5-3.7-1.1-3.7-3.3C1541.4,389.5,1541.2,387.3,1544,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871821"),
                d:
                  "M1557.2,383.7c-3.4,0.1-6.8,0.2-10.2,0.3c-7.4,0-14.7-0.6-22-0.7c-4.5-0.1-8.9-0.5-13.2-2\n                        c-1.8-2.3-1.4-3.9,1.6-4.5c1.4-0.3,2.9-0.2,4.3-0.7c2-0.6,4.2-0.2,6-1.3c3.3-1.7,7.1-0.8,10.5-1.8c2.1-0.2,4.2-0.7,6.2-1.4\n                        c1,0,1.9,0.3,2.8,0.7c2,0.8,4.1,1.4,5,3.7c-0.3,2.1-1.7,1.7-3.3,1.4c2.4,0.9,4.6,1.8,7.1,1.3\n                        C1554.4,379.7,1557.5,380.1,1557.2,383.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1A24"),
                d:
                  "M1544,387c-2.8,5.5-2.7,5.9,3,6.9c1.4,0.3,2.2,0.6,2.9,1.9c0.7,1.3,2.4,0.1,3.5,0.8\n                        c-0.5,1.2-1.4,1.9-2.4,2.4c-5.6,2.3-10.5,0.1-15.3-2.4c-4-3.8-9.3-4.7-14.2-6.5c-4-1.5-4.3-2.4-1.7-6.4\n                        c6.8-1.1,13.5,0.2,20.3,0.3c1.7,0,2.7,1.2,3.9,2C1544,386.3,1544,386.7,1544,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE676F"),
                d:
                  "M1578,386c1.3,0,2.7,0,4,0c5.4,0.2,10.9-0.6,16,2c-0.7,2.2,3.7,3.6,1,6.2c-0.4,0.3-0.7,0.5-1.1,0.8\n                        c-11.6,0.6-22.7-1-32.8-7.2c1.5-2.8,4.2-2.3,6.7-2.2C1573.9,385.6,1575.9,386.4,1578,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD6671"),
                d:
                  "M1557.2,383.7c-0.9-2.6-3.7-3-5.4-4.6c-1.6-0.5-3.3-1.1-3.9-2.9c-1.6-1.1-3.2-2.1-4.8-3.2\n                        c4.9-3.5,10.9-3.1,16.4-4.4c2.4-0.5,5.1-1.8,7.5,0.4c0.2,1.7-4.6,3-0.3,5.1c0.6,0.3,0.3,1.9-0.5,2.7c-2.5,2.2-5.2,4.4-7.1,7.1\n                        C1558.4,383.8,1557.8,383.8,1557.2,383.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1A2D"),
                d:
                  "M1544,386c-7-1.5-14.1-1.6-21.2-1.4c-1.1,0-1.9-0.3-2.8-0.6c-5.4,2.2-7.1,1.6-8-3\n                        c11.1,0.7,22.2,1.4,33.3,2.1c0.6,0,1.1,0.6,1.7,0.9C1546,384.7,1543,382.3,1544,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1578,386c-1.3,1.5-3,1.2-4.5,0.6c-3.1-1.2-5.7-0.3-8.3,1.2c-1-0.6-2-1.3-3.1-1.9\n                        C1567.4,385,1572.7,384.1,1578,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A25"),
                d:
                  "M1568,395.3c-1.4-0.6-1.7-1.4-1.6-2.5c0-0.1,0.6-0.4,0.8-0.3C1568.3,393.2,1567.8,394.2,1568,395.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1B2C"),
                d:
                  "M1536,396c4.9,1.6,9.8,3.1,15,3c0.5,2.7,2.7,1.9,4.3,2c5.9,0.1,11.8,0,17.7,0.1c-0.3,0.7-0.7,1.3-1,2\n                        c-12.2,2.2-24-0.7-36-2c-0.3-0.7-0.7-1.3-1-2C1534.3,397.7,1535,396.8,1536,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76068"),
                d:
                  "M1757,411c0.9-1.7,1.2-3.7-1.1-3.8c-5.6-0.3-10.1-6.4-16.3-2.1c0-2.9,2.4-1.5,2.8-2.9\n                        c-0.2-0.2-0.4-0.5-0.5-0.5c-5.1,2.3-9.9-0.5-14.7-1.4c-3.1-0.6-6-1.3-9.2-1.3c-1,0-2,0-3,0c-7.5-4.2-16-4.3-24.1-6\n                        c-4-0.8-8-1.4-11.9-2c-0.8-0.8-1.6-1.5-2.6-2.1c-3.3-1.9-3.5-4-0.1-6.1c3.9-1.5,8-2,12.1-2.1c1,0,2.2-0.2,2.9,0.4\n                        c3.7,3,7.8,5.4,12.2,7.3c9,2.2,18.1,3.8,27.4,3.4c2.8-0.1,5.1,1.1,7.7,2.4c7.6,4,15.5,8.8,24.5,7.5c4.2-0.6,8-0.5,11.8,0.9\n                        c0.3,0.4,0.5,0.8,0.6,1.3c-2.4,3.8-7.3,2.9-10.3,5.6c-1.2,0.5-2.8,1-3.7,0.2c-2.7-2.3-1.6,1.1-2.5,1.5\n                        C1758.3,411.6,1757.6,411.6,1757,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1598,388c-5.3-0.7-10.8-0.2-16-2c4.2-1.8,9-1.9,12.8-0.4c2.9,1.1,3.1-0.2,4.2-1.6\n                        c0.2,0,0.4-0.1,0.6-0.1c1.8-0.6,3.5,0,5.2,0.3c6.1-0.2,12.2,0.2,18.4-0.8c3.3-0.5,7.4,0.1,11.1,0.8c1.1,0.2,3.1,0.9,0.5,2.3\n                        c-0.3,0.1-0.6-0.1-0.6-0.2c0.3,0.6,1,0.3,1.2,0.1c2.1-2,4.5-3.1,7.3-3.7c2.8,1.5,5.6,3,8.5,4.3c0.3,0.7,0.2,1.4-0.4,1.9\n                        c-6.6,0-13.3,0.1-19.9,0.1C1620,390.5,1609,388.7,1598,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3666E"),
                d:
                  "M1651,389c0-0.7,0-1.3,0-2c4.8-2.2,10.1-2.1,15.2-3.3c1.6-0.4,3.3-0.2,4.8-0.7c1.8-0.2,3.6-0.5,5,1\n                        c-1.8,1.8-1.2,3.4,0.9,3.9c2,0.5,2.1,1.6,2.1,3.1C1669.7,389.7,1660.3,389.2,1651,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1825"),
                d:
                  "M1913,461c-0.3,0-0.7,0-1,0c-0.5,0.8-1.4,0.4-2,1l0,0c-3.1,0.6,0.7-4.8-3.3-3.7c-3.7,1-7.7,1-10.4,4.2\n                        c-1.2,1.4-2.7,1.9-4.1,2.5c-1.3,0.6-2.3,0.5-2.6-1.1c0-0.2,0-0.5-0.1-0.7c-3.2,5.2-7.1,5.5-11.5,0.8c-0.7-2.2,1.8-5.9-3-6\n                        c-0.6-0.1-0.7-0.7-1-1c-0.3,0.3-0.7,0.7-1,1c-1.5,0.8-2,3.5-4.5,2.5c-0.9-0.6-0.1,0.7-0.6,0.6c-5.7,1.4-9.2,0-10.7-4.1\n                        c-0.3-1.8-0.4-3.6,1.6-4.6c2.8-1.4,4,1.2,5.8,2.4c2.2,0.2,3.6-1,4.9-2.6c1.3-1.7,2.8-1.9,4.8-1c2.9,1.3,5.7,2.8,9.2,0.8\n                        c3-1.7,6.9-1.2,10.1-1c3.2,0.1,5.9-0.7,8.6-1.7c2.9-1,4.8-0.7,6,2.4c1.8-5,5.7-2.4,8.8-2.7c5.2,0.2,10.3,1.1,15.5,0.6\n                        c1-0.1,2.1,0.3,2.8,1c4.5,4.9,10.2,5.8,16.4,5.2c0.5-0.1,1.1-0.1,1.4,0.2c5.2,5.8,12.6,3.8,18.9,5.6c1.7,0.5,3.2,0.8,3.7,2.7\n                        c-0.5,1.8,4,2.1,1.5,4.5c-1.6,0.8-3.4,1.1-4.6-0.4c-2.8-3.6-6.3-2.9-9.9-1.9c-6.6-2-13-4.8-20.2-4.4c-2.6,0.2-4.9-1.8-7.5-2.6\n                        c-0.8-0.7-1.3-1.7-2.8-1.5c-5.9,0.6-11.8,0.8-17.7,1C1913.4,459,1913.9,460.6,1913,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1868,460c1.1-0.2,2.5,0.5,2.7-1.7c0.2-2.1,1.5-0.4,2.3-0.3c0.1,2.1,0,3.7-2.8,4.2\n                        c-3.9,0.8-7.7,3-11.7,0.2c-0.7-0.5-1.3-1.1-1.5,0.5c-0.6,5.6-3.4-0.4-4.9,0.9c-0.3-1.1-1.6-2.2-2-1.5c-2.3,4.5-3.7-1.5-5.8,1\n                        c0.4,4.6-4.3,4.3-7.9,4.6c-3.4,0.3-3.4-0.1-4.9,2.8c1-3.8,0.7-7.4-1.4-10.6c0.7-0.7,1.3-1.3,2-2c3.5-2.8,6.2-6.7,11-7.4\n                        c2.1,2,3.8,3.6,6.8,0.6c2.8-2.8,4.1,1.9,6.3,2.6c0.9,0.3,0.8,2.4,1.8,3.3C1860.4,461.1,1863.8,461.7,1868,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1878,464c1,0.5,2.1,1.1,3.1,1.5c5,1.7,7.2,0.5,8.4-4.5c1.1,1-0.1,2.7,1,3.5c5.2-2.8,9.3-7.4,15.8-7.6\n                        c4.3-0.1,5,1.5,3.7,5.1c-3.9,4.3-8.5,7.2-14.7,5.8c-1.3-0.3-1.4,0.4-1.8,1.1c-1.6,3.1-4.1,4.4-7.6,4.1\n                        c-0.1-0.8-0.6-2.1-1.4-1.4c-1.9,1.6-3.4,2.8-6,1c-1.4-1-2.4,0.7-2.5,2.1c-0.2,2.6-2.6,3.3-3.9,2.9c-2.8-0.9-4.9,0.4-7.5,1.1\n                        c0.8-2.2,2.4-3.4,4.7-3.7c0.9-0.1,1.5-0.7,1.3-1.7c-0.2-0.8-0.9-1.2-1.5-1.1c-3.2,0.7-7.7-2-9.1,4.7c-2-4.8,1.2-5.4,2.9-6.8\n                        c2.3,0,4.7,1.2,7,0C1874.6,471.2,1876.6,469.7,1878,464z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1870,470c-2.3,1.6-4.7,1.6-7,0C1865.3,467.3,1867.7,471,1870,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1874,465c-1,1.9-3.4-0.7-4.2,1.8C1870.9,464.1,1870.9,464.1,1874,465L1874,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1874,457c0.3,0.3,0.7,0.7,1,1c-0.4,2.3,0.9,4.9-1,7v0C1874,462.3,1874,459.7,1874,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1812.4,481.6c4-0.5,7.5,0.2,10.2,3.4c0.7,0.9,0.2,2.5-0.2,2.1c-2.4-2.8-7.3,1.6-8.8-3.2\n                        C1813.5,483.3,1812.3,482.9,1812.4,481.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1815.8,486.9c1.6,1.3,2.8,2.6,2.4,4.5c0,0.3-1.5,0.6-1.6,0.4C1815.5,490.4,1814.9,488.8,1815.8,486.9\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7982"),
                d:
                  "M1749,413.9c-6.6-3.9-14-6-21-9c0.1-1.4,1-2.4,2.2-1.5c3.9,2.8,8.8,3.1,12.8,5.6\n                        c1.9,1.1,4,1.4,6.1,1.6c7.8,0.9,13.6,6.5,21.3,8.3c3.9,0.9,8,4.1,12.4,5.3c3.1,1.2,3.8,3.8,4.2,6.7c0.2,1.6-0.7,2-2.1,1.2\n                        c-0.3,0-0.6,0-0.9,0.1c-6-3.2-11.9-6.3-17.9-9.5C1760.8,419,1755,416.2,1749,413.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M1843,451c-4.2,1.5-6.4,6.1-11,7c-2.2-1.1-4-2.6-5.2-4.8c-0.4-0.8-0.2-2.2-0.1-2.1\n                        c4,3.2,3.6-3.1,6.2-2.8c0.8,0.1,1.5,0.2,2.5,0.4c-0.5-2-2.2-1.9-3.3-2.7c-0.6-1.9,1.3-1.3,2-2c0.3-0.4,0.7-0.7,1-1.1\n                        c1-1.6,1.9-3.4,4-3.8c0.7-0.2,1.4-0.2,2.2-0.2c2,0.2,3.7,1.3,5.4,2.2c4.7,2.3,4.9,3.5,1.4,7C1846.7,449.6,1845.2,451,1843,451\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91293F"),
                d:
                  "M1834,444c-0.7,0.7-1.3,1.3-2,2c-5.7,3.3-11.3,6.7-17,10c-0.7-0.6-0.4-1.2,0.2-1.6\n                        c5.5-3.6,11-7.1,16.5-10.6C1832.6,443.3,1833.2,443.8,1834,444z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871A1F"),
                d:
                  "M1839,440c-1.3,1-2.7,2-4,3c0-1.3-0.7-1.9-2-2c0.7-0.7,1.3-1.3,2-2c0.6-1.9,2.5-2.5,3.8-3.7\n                        c3.8-2.8,7.8-5.1,11.5-7.9c0.7-0.5,1.5-1,2.2-1.5c4.2-2.5,7.7-6,11.9-8.4c1.6-0.7,2.9-2.1,4.4-3c0.9-0.4,1.8-0.4,2.7-0.1\n                        c0.4,0.2,0.7,0.6,0.8,1.1c0,0.5-0.2,0.9-0.5,1.3c-2.9,2.3-5.3,5.1-8.6,6.8c-2.6,1.3-4.4,3.8-7,5c-2.8,1.7-5.3,3.9-8.2,5.6\n                        c-0.4,0.3-0.7,0.5-1.1,0.8C1844.4,436.8,1841.8,438.5,1839,440z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8525C"),
                d:
                  "M1839.1,436.1c-0.9,1.6-2.7,2.1-4.1,2.9c-0.7,0-1.4,0-2,0c-7.6-3-15.3-3.1-22.9-0.4\n                        c-3.2,1.1-6.2,0.1-9.2,0.5c-0.7-0.3-1.3-0.7-2-1c1.8-2.1,4-3.2,6.7-3.6c3.8-1.4,7.7-1.5,11.6-0.7c6.4,1.3,12.7-0.7,19.1-0.9\n                        C1839.1,432.8,1840.1,433.3,1839.1,436.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7075"),
                d:
                  "M1784.9,432c2.4-3.2-0.2-5-1.9-7c0.5-0.7,1.3-1,2.1-1.1c3-0.5,5.7,0.2,8.1,2c1.5,1.9,5.5,1.5,5,5.3\n                        c-0.6,1.6-0.3,2.9,0.5,4.5c1,2-0.6,1.9-2,1.5C1792.5,436.2,1788.7,434.2,1784.9,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D2646D"),
                d:
                  "M1796.8,437.1c0.6-0.3,2.1-0.9,1.3-1.1c-3.4-1.2-1.4-3.2-1.1-5c3-1.9,6.2-1.7,9.4-0.8\n                        c0.9,0.4,1.3,1.2,1.4,2.1c0,1.3-0.5,2.2-1.8,2.7c-2.4,1.1-4.4,2.8-7.1,3.1C1798.2,437.8,1797.5,437.5,1796.8,437.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC7379"),
                d:
                  "M1785,425c-0.7,0-1.3,0-2,0c-4.4-0.9-8.9-0.7-12.3-4.9c-1.9-2.3-6.5-0.1-8.9-2.7\n                        c-5.1-5.5-13.1-4.3-18.8-8.4c4.1-0.6,7.6,1.7,11.4,2.3c1,0.2,1.8,0.8,2.6-0.3c0.7,0,1.3,0,2,0c5.5,0.6,10.6,3,15.9,4.3\n                        c2.4,2.9,4.6,6,8.6,7C1784.6,422.6,1785.5,423.6,1785,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73744"),
                d:
                  "M959,649c-2.2-0.1-4.3-0.2-6.5-0.3c-0.5,0-1-0.4-1.4-0.3c-5.5,2.3-5.6,0.8-12.3,1.3\n                        c-3.7,0.3-7.1-3.3-11.8,0.2c-3.4,2.5-10,0.6-15.2,0.2c-1.1-0.1-2,0-3.1,0.2c-2.9,0.5-5.9,2.3-8.7-1.6\n                        c-1.2-1.7-5.9,0.6-7.1-4.4c-1.1,2.9-1.2,5.1-4.3,2.2c-1.8-1.7-6.9-5.2-9.5,1.6c-1,2.6-4.7-1.4-7.4,0.2c0.2-1.9,1.6-1,2.2-2.1\n                        c-1.3,0-2.5-0.3-3.6,0.1c-4.4,1.6-8.4-0.5-12.5-1.6c-0.6-0.1-3.3,0.8-2.5-1.7c0.4-1.5,1.4-2.2,3-1.4c0.6,0.3,1.3-0.1,2.2-1.7\n                        c-3.4,0.2-6.5-0.8-7.8,3.3c-0.5,1.7-1.8,1.7-3.1,1.8c-2.8,0-5.7,0-8.5,0c-2.3,0-4.3,0-6.3,2c-2.5,2.4-5.6,1.1-8-1\n                        c-1.7-1.5-0.2-2.2,0.9-2.9c1.4-4.1,4.3-5.8,8.4-5.3c11,1.3,22.1-1.3,33.1,1.5c4.8,1.3,9.8-0.9,14.8-1.3\n                        c8.6-0.6,17.2-1,25.8-1.6c6.1-0.4,12.6,1.5,18.7,0.4c5.7-1,11.1,0,16.6,0.1c2.8,0,5.5,0.4,8.3-1c1.8-0.9,3.9-0.1,5.4,1.4\n                        c1.2,2.7,0.2,4.5-2.6,5.5c1,1.9,3.5,1.9,3.7,4C960.5,647.8,959.8,648.4,959,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63644"),
                d:
                  "M959,649c0.3-0.7,0.7-1.3,1-2c0.2-0.1,0.3-0.3,0.5-0.4c2-0.3,3.2-2.3,5.2-2.7\n                        c3.7-0.5,7.3-0.5,10.9,0.5c3.7,1,7.1-1.1,10.8-0.8c11.4,0.8,22.8-0.3,34.2,0.1c5.1,0.2,9.8-2.2,15-1.6\n                        c-6.7-2.8-13.8-0.5-20.6-2.1c-2.5-1.7-0.7-2.7,0.8-2.7c4.1-0.2,7.8-2.4,12.1-1.4c4.5,1,8.9-1.8,13.5-0.3\n                        c0.2,0.1-0.9-0.7-0.3-1.3c3-0.1,6-0.1,9-0.2c1.4-1,2.7-1.2,4,0.1c-0.7,1-0.6,2,0,3c1.1,1.4,1.3,3,1,4.7\n                        c-0.6,3,1.1,0.3,1.6,0.4c1.6,0.5,3,1.4,4.6,2c1.2,0.5,2.5,0.9,3.7,1.6c1.4,0.8,2.1,2.3,0.6,3.1c-1.6,0.8,0.1,1.5-0.4,2.2\n                        c-9.7-0.1-19.5-1.1-29.1,0.2c-3.8,0.5-8.2-1.9-11.9,1.5c-1,0.9-2.2-0.3-1.4-1.9c0.6-1.1,1.3-2.1,2.2-3.5\n                        c-6.7,2.2-13.2,1.7-19.4,1.8c-7.5,0.2-15.1,0.7-22.6,0.6C975.6,649.5,967.3,649.2,959,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13947"),
                d:
                  "M885,639c-7.3,1.7-14.6,2.5-22.2,0.6c-4.7-1.2-9.9-1.8-14.6,0.7c-2.4,1.2-3.5-1.4-5.5-1.3\n                        c-5.3,0.3-10.9-1.2-14.8,4c-3.6-3.7-7.8-5.1-13.1-5.3c-2.5-0.1-6.1-0.8-7.9-3.7c18.7,0,37.3,0,56,0c5.7,2.4,11.7,0.8,17.6,1\n                        c5.5,0.1,11,0,16.4,0c1.5,0,3.1-0.2,4.3,1.7C895.9,638.9,890.1,636.6,885,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93240"),
                d:
                  "M1066,651c-0.1-0.1-0.3-0.3-0.2-0.4c0.9-6.2-5.5-6.7-7.9-6.8c-3.9-0.2-2.8-1.9-2.9-3.8c0-1,0-2,0-3\n                        c2.8,1,4.9,3.5,8,4c3.7,0.8,7.2,2.2,10.4,4.3c1.3,0.9,3.1,1.5,2.6,3.7c0,0.3,0,0.7,0,1c-1.2-0.7-2.5-1.2-4-1\n                        C1070.6,651.4,1067.7,649.3,1066,651z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53742"),
                d:
                  "M1076,649c-3.4-4.3-9.1-4.6-13-8c2.7-1,4.6-3.9,8-3c0.2,2.1,1.9,2.3,3.3,1.9c2.7-0.6,5.2,2.7,8,0.2\n                        c0.6-0.5,1.8,0.5,2.5,1.8c-3.5,0.4-4.7,1.6-1.9,4.4c0.6,0.6,0.7,1.8,1,2.7C1081.3,649,1078.7,649,1076,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3845"),
                d:
                  "M1391,586c2.1-0.4,4,0.7,6,1c1.8,0.9,0.7,3.4,2.6,4.4c1.3,0.7,1.6,3.5,4.2,0.5c1.7-1.9,5.4,1.4,8,2.6\n                        c1.7,0.8,2.6,3,4.6,3.6c0.9,0.2,1.6,0.9,0.6,1.7c-3.7,3,0,4.4,1.6,6.6c-3.7,1.6-6.8,4.6-11.3,3.4c-0.3-0.1-0.9,0.8-1.4,1.3\n                        c-1.3-1-2.5,0.4-3.8,0.2c-1.1-0.3-2.7-0.1-3-1.3c-0.5-1.6,1.2-1.6,2.2-2.2c1.1-0.6,2.1-1.2,1.6-2.7c-0.5-1.4-1.6-1.5-2.8-1.1\n                        c-0.7,0.2-1.7,0.3-1.8-0.3c-1.4-4.5-6.6-4.1-9.2-7c-0.5-1.7-0.4-3.4,0-5.1c0.3-0.9,0.7-1.7,1.3-2.5c0.4-0.6,2.2-0.8,0.5-2\n                        C1390.7,586.7,1390.8,586.3,1391,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("933440"),
                d:
                  "M1389.9,596.9c1.7-0.6,3.4,3.2,5.3-0.1c0.3-0.5,1,1.4,1.7,1.9c1.4,1-0.8,7.4,4.2,2.7\n                        c1.2,1.2,3.6,1.2,3.8,3.4c0.1,1.7-0.4,3.3-2.2,4c-0.9,0.4-2-0.2-2.7,0.8c1.9,1.1,4.4-0.6,6,1.4c-0.3,0-0.7,0-1,0c-2,2-5,0-7,2\n                        c-2.3,0-4.7,0-7,0c-1,0.3-2,0.7-2.9,1C1387,608.1,1385.9,602.2,1389.9,596.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1398,553c0.3,0,0.7,0,1,0c0.2,1.4-0.6,3,1.3,3.9c4.9,2.2,2.2,3.8-0.6,5.6\n                        C1398.2,559.3,1397.8,556.2,1398,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3845"),
                d:
                  "M1398,613c1.5-3.7,4.7-1.3,7-2c0,0.7,0,1.3,0,2C1402.7,613,1400.3,613,1398,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1403.3,564.8c1.2-1.6,1.3-3.6,3.5-3.5c0.3,0,0.9,0.7,0.8,0.9C1407,563.8,1406,565,1403.3,564.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3845"),
                d:
                  "M1419.8,602c-0.4,0.5-0.6,1-0.9,1.2c-0.6,0.2-0.9-0.4-0.7-0.8c0.1-0.4,0.6-0.7,0.9-0.9\n                        C1419.2,601.4,1419.5,601.8,1419.8,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1412.3,560c-0.4,0.2-0.8,0.6-1.2,0.6c-0.6,0-0.9-0.5-0.6-1c0.2-0.3,0.8-0.4,1.3-0.4\n                        C1411.9,559.2,1412.1,559.6,1412.3,560z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63945"),
                d:
                  "M1396,513c0.5,0.5,0.9,1.2,1.4,1.4c2.5,0.9,5,1.5,1.9,4.8c-0.7,0.7-0.2,2.6-0.3,3.9\n                        c-3,4.5,2.6,3.1,3.5,5c-2.2,3.2-4.9,1.4-7.5,1c-0.3-5-0.7-10-1-15c-1.3-0.5-1.8-1.5-1.7-2.7c0.2-1.6,0.2-4.1,2-4.1\n                        c2.2,0.1,1.5,2.4,1.3,4C1395.5,511.8,1395.5,512.4,1396,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1419"),
                d:
                  "M1389.9,596.9c-1.8,5.6-0.3,11.5-1.9,17.1c-0.2,2.5-2.4,4.3-2.2,7c-3.4,2.4-5,6.2-7.7,9.1\n                        c-0.7-0.1-1.2-0.6-1.4-1.3c0.2-2.3,1.9-4,2.7-6c0.7-1.1,1.5-2.2,2.3-3.2c1.3-1.2,2.1-2.7,2.6-4.3c-0.1-4.5-1.2-9.1,0.7-13.5\n                        c0.6-2,0.8-4,0.7-6c0-0.5,0-1.1-0.1-1.6c0.4-5.4,1.6-10.7,1-16.1c1.1-8.3,0.7-16.7,1.4-25.1c1.3-5.2,0.3-10.5,0.6-15.8\n                        c0.1-1.5,0.1-3.1,1.3-4.3c0.7-0.2,1.2,0,1.5,0.7c-0.1,7.2,0.5,14.4-0.3,21.6c0,5.9-0.1,11.9-0.1,17.8c-1,4.4-0.3,8.9-0.4,13.3\n                        c0,1.6,0.3,3.3-0.5,4.8C1390,593,1390,594.9,1389.9,596.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741C1E"),
                d:
                  "M1391.1,555.1c0-7.4-0.1-14.7-0.1-22.1c-1.8-4.1-2.5-8.2,0.3-12.2c0.3,0,0.6,0,0.9,0\n                        c-0.1,8.7-0.2,17.4-0.3,26.2C1391.6,549.7,1392.8,552.6,1391.1,555.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("933440"),
                d:
                  "M1390,591c0.4-6-1-12.1,0.9-18.1c0,4.4,0,8.7,0.1,13.1c0,0.3,0,0.7,0,1c0.6,0.7,0.6,1.3,0,2\n                        C1391,589.8,1390.8,590.6,1390,591z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF303D"),
                d:
                  "M1396,513c-1.8-1.3-0.5-3.4-1.5-5.4c-0.5,2.4-2,4.2-0.5,6.4c-1.7,2-0.2,4.8-1.8,6.9\n                        c0,0-0.3,0.2-0.3,0.2c-2.6-5.5-1-11.3-1.1-17c0.3-1.4,0.8-2.6,1.4-3.9c0.5-0.9,1.6-2,2.3-1.6c5,2.3,10.7-0.1,15.5,2.7\n                        c1.7,1,3.4,1.2,5.3,0.9c2.7-0.4,4.7,0.8,7.1,1.9c2.6,1.2,6.4,2.2,9.8,1.9c3.4-0.3,6.6,0.3,9.8,1.1c3.2,0.8,6.6,0.9,9.7-0.9\n                        c1-0.6,2.1-1.1,3.2-0.2l0,0c-0.2,2.7-3.1,4.2-3,7c-1,0.8-2.4,1.5-3,2.6c-2.2,3.9-6,4.2-9.1,2.6c-5.1-2.6-11.1-2.7-15.8-6\n                        c-1.1-0.8-2.1-1.8-3.1,0.9c-0.7,1.9-3.3,0.2-3.9-1.4c-0.8-2.3-2.2-1.5-3.8-1.8c-4.7-0.8-9.3,0.9-13.8,0.3\n                        C1397,509.8,1396.1,510.7,1396,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("823C44"),
                d:
                  "M191,291c-0.4,2.8-2.8,1.5-4.3,2.1c-1.5,0.6-3,1.3-3.8,2.9c-0.2,2.7-2.3,1.7-3.8,1.9\n                        c-5.2,0.7-10.6-0.1-15.7,1.5c6.5,1,13-1.3,19.5,0.1c2.9,0.6,2.9,0.6,3.5,3c-0.5,0-1.1,0-1.6,0c-6.4,0-12.7,0-19.1,0.1\n                        c-0.7,0.2,0.4,1,0,0.4c6.5-1.2,13.1-0.2,19.6-0.5c1.5,0.4,3.7-1.5,4.5,1.4c-14,0-28,0.1-42,0.1c1.4-3.9,5.4-5.2,8-8\n                        c7.3-2,14.7-4,22-6c-0.1,0.7-0.9,2,0.6,1.6C182.7,290.4,186.9,291.3,191,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE4C57"),
                d:
                  "M2058,627.1c0.3,0.3,0.7,0.6,1,0.9c0,0.3,0,0.6,0,1c-11,1.2-22,2.1-32.9,3.6c-3,0.4-6.4-0.7-9.2,1.3\n                        c-14,0.3-27.8,2.3-41.8,2.1c-1.9,0.3-4,1.7-5.3-1c3-2.6,7-0.5,10.2-2c2.9-0.5,5.8-0.3,8.7-0.4c2.6-0.1,5.2,0.3,7.7-0.7\n                        c7.9-0.2,15.7-1.5,23.7-0.9c0.3,0,0.6,0,0.9,0c3.3-1.4,6.8,0.4,10.1-1c1.3-0.1,2.6-0.1,3.8-0.2c4-1.3,8.1-1,12.2-1.8\n                        C2050.8,628.1,2054.4,627.9,2058,627.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1414E"),
                d:
                  "M1970,635.1c1.4,1.6,3.4,0.7,5.1,1c-0.1,0.3-0.1,0.6-0.2,0.8c-5,0-9.9,0.1-14.9,0.1\n                        c-0.7-1.2-2-1-3.1-1c1.4-3.6,4.6-2,7.1-2.4C1966.1,633.6,1968.3,633.3,1970,635.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C141F"),
                d:
                  "M1392.1,503.1c-0.1,6-0.1,12-0.2,17.9c-2,3.9-0.4,8-1,12l-0.5,0h-0.5c-1.7-1.7-1.4-3.9-1.5-6\n                        c-0.1-7.2,0-14.5,0-21.7c0.1-5.9,0-11.9,0.1-17.8c0-1.6,0-3.1,0.4-4.6c1.2-7.9,0.3-15.9,1.5-23.7c0.3-2.1-0.2-4.4,1.5-6.1\n                        c5,0.7,10,1.3,15,2c2.5,1.4,6,0.3,8,3c-2.2,2.5-5.5,2.8-8.4,3.9c-0.5,0.2-0.9,0.3-1.4,0.4c-12.9,4.2-11.4,1.9-11,15.2\n                        c0,0.8-0.2,1.6-0.3,2.4C1391.3,487.6,1394.3,495.5,1392.1,503.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("470F16"),
                d:
                  "M1392,453c0.4,9.3-1.7,18.5-1.1,27.8c0,0.7-0.6,1.5-0.9,2.2c-2.1-2.2-1.2-5-1.4-7.5\n                        c-0.2-2.8,0.3-5.6-0.6-8.3c-0.6-5.9-0.9-11.9-0.5-17.9c0.2-2.8,0.3-5.7-0.6-8.4c-0.7-4.4-0.3-8.9-0.4-13.3\n                        c-0.5-9.8-1.7-19.6-0.9-29.4c0.3-1.4,0.2-3.1,2.3-3.1c2,11.6,2,23.3,3,35C1391.4,437.7,1390,445.4,1392,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1625"),
                d:
                  "M1470,445.9c6.1,2.3,7.9,1.8,9.6-3.4c0.6-1.9,1.6-1.5,2.5-1.2c1.4,0.5,2.8,0.7,4.5,0.5\n                        c0,2.1-4.7,3.4-1.1,5.9c-1.7,1-3.3,2.2-5,3c-0.8,0.4-2,0-2.8,0.4C1471.3,453.4,1471.3,453.5,1470,445.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1625"),
                d:
                  "M1434.7,441.6c-0.1-0.3-0.5-0.6-0.5-1c-0.1-0.5,0.2-1,0.7-0.7c0.3,0.1,0.7,0.6,0.8,1\n                        C1435.8,441.4,1435.4,441.6,1434.7,441.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1393,477c-1.2-3.1,0.3-6.4-0.6-9.6c-0.5-1.8,1.3-2.8,3-3.3c6.5-2,13-4.1,19.5-6.1\n                        c-0.7,3.2-0.7,3.2,3.8,6.3c0.7-1.7-1.1-6,3.7-3.8c1.3,0.6,4-0.6,3.5-3.5c4.1,0.2-0.4,4.3,2.2,5.2c2.4-1.2-1.4-5.7,2.6-5.5\n                        c7.1,0.4,8.9,2.4,8.7,7.6c7.2-2.6,7.2-2.6,8.6-5.9c2,0,1.5,2.4,2.6,3.1c0.8,0.1,1-0.4,0.9-0.9c-0.2-1.4-1.3-3.1,1.1-3.5\n                        c1.7-0.3,2.9,0.6,3.2,2.4c0.5,2.2,2.3,4.7-1.2,6.1c-0.8,0.3-0.8,1-0.7,1.6c0.1,2.3-0.1,4-3.2,3c-1.6-0.5-1.9,1.5-3.2,2.1\n                        c1.8,1.3,3.1-0.7,4.5-0.1c2.4,1,3,0.1,3.4-2.3c0.6-2.9,2-5,5.8-5.3c5.1-0.5-0.1,5,3.9,4.3c1-5.1,5-3.5,8.9-2.6\n                        c1.6,0.4,3.2,0.5,4.9,0.7c-1.2,1.8-0.1,4.4-2,6c-2.9-0.3-5.5-0.2-5.8,3.6c-0.1,0.9-0.4,2.2-1.6,2.2c-3,0-5.4,0.4-4,4.4\n                        c-3.6,0.3-4.2,4.9-7.1,5.4c-2.7,0.5-2.3-2.6-2.6-5.2c-0.9,1.5-3.2,0.5-2.5,3.2c0.5,1.8-1.5,2.1-2.6,2.2\n                        c-1.1,0.1-2.1,0.9-3.3-1.4c-2.1-4.3-9.2-4.8-12.4-1.8c1.1,1.7,2.8-0.5,4.2,1c-1.4,1.6-3.1,2.9-5.3,3.4c-0.7,0-1.3,0-2,0\n                        c-1.4,0.4-1.1-0.6-1.3-1.4c-0.5-3.7-1.9-5.7-6.3-4.5c-3.7,1-4.1,0.1-2.7-3.7c0.4-1-0.6-0.7-0.9-1c-1.8-1.6-3.8-0.7-5.7-0.3\n                        c-1.6,0.3-3.2,1.2-4.9,0.7c-2.3-0.7-3.8-2.4-3.6-4.8c0.3-2.5,2.6-1.3,4.1-1.4c1.1-0.1,2.3,0.2,3.4,0c-3.1-0.2-6.1-1.2-9.1-1.5\n                        c-3.9-0.4-7.7,0.1-10,4.1C1394.7,476.8,1394,477.4,1393,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1425.2,457.1c-1.1-1.5,0.4-1.9,0.6-2.8c0.2-1,1.7-2.2,0.2-3c-0.8-0.5-1.7-1-3.3,0.3\n                        c-2,1.6-1.6-2.4-4.7-2.4c6.5-2.6,10.8-2,13.1,4C1428.1,452.4,1427.4,455.9,1425.2,457.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1483,462c1.2,3.9-2.1,3.3-4,4c-1-1.1-2.9-2.4,0.4-3C1480.6,462.7,1481.8,462.3,1483,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1506.9,458.3c1.5-2.1,2-3.6,3.8-3.4c0.2,0,0.7,0.9,0.6,1.2C1510.7,457.5,1509.1,457.2,1506.9,458.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A82A36"),
                d:
                  "M1455,506c-5.3,3.7-10.7,3.3-16.7,1.4c-4.4-1.4-9.4,0.7-14-1.9c-0.5-0.3-2.5,0.3-3.4-1.4\n                        c-0.9-1.6-2.9-1.5-4-1c-3.6,1.6-6.2-0.5-9.3-1.4c-2.3-0.7-5.2-0.5-7.6,0.2c-1.6,0.4-1.6-0.5-2.1-1c-1.4-1.5-2.9-2.1-4.8-0.9\n                        c-0.8-2.3-0.9-4.7,0-7c2.2,2.2,6.1,4.8,7.6,3.2c1.8-1.8,3.3-1.9,4.5-1.3c5.2,2.6,11.5,1.4,16.3,4.4c4.3,2.7,8.5,1,12.7,1.7\n                        c1.2,0.2,2.3,0.1,3.3,1c0.5,0.4,1.7,0.8,1.7,0.7c2.4-4.5,5.6-1.2,8.3-0.8c5.5,0.8,8.7-3.2,12.5-5.8c0.3,2-1.1,3-2.3,4.5\n                        C1456.5,502,1453.6,503.1,1455,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881728"),
                d:
                  "M1393,477c2.4-6.5,8.5-6,13.8-7.2c1.3-0.3,1.1,0.8,1.5,1.4c0.4,0.7,1.4,1.8,1.8,1.3\n                        c3.3-4.7,4.7,1.6,7.5,0.6c-1.5,3.7-3.9,1.8-5.7,1.6c-1.4-0.1-2.9-1.4-4.2-0.1c-0.8,0.9,0.4,1.7,0.9,2.5c1,1.8,2.5,2.3,4.2,1.4\n                        c4.8-2.7,8.8-0.8,12.7,1.9c-1.1,2.8-3.2,0.4-5.7,1.6c3.8,2.5,6.5,0.5,9.6-0.8c0.7,3,3.5,5.2,2.8,8.8c-3.9,2-7.1,0.9-10-2\n                        c-2.8-2.6-6.5-2.8-9.9-3.7c-4.1-1.1-8.4-0.6-12.5-1.6c-2.1-0.5-1.8,1.4-2.6,2.3c-1.3,0.7-2.7,1.3-4,2c-0.8-2.7-0.8-5.4,0-8\n                        C1393,478.3,1393,477.7,1393,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1822"),
                d:
                  "M1397,485c-0.4-1.2-1.5-2.3-0.4-3.6c1.2-1.4,2.5-0.4,3.5,0.2c2.8,1.7,6.1,0.6,9,1\n                        c4.1,0.5,7.7,2.7,11.8,2.6c2.1-0.1,2.6,1.2,1.1,2.9c-3.2,2-6-0.5-9.1-0.7c-4.6-0.3-9.1-1.7-13.8-1.2\n                        C1398.4,486.1,1397.7,485.4,1397,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1393,479c0,2.7,0,5.4,0,8c0,2,0,4,0.1,6c0,2.3,0,4.6,0,7c-0.1,1.1,0.1,2.3-0.9,3.1\n                        c0-6.8-0.1-13.6-0.1-20.4C1392,481.4,1391.8,480,1393,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1828"),
                d:
                  "M1473,478c0.8-2.5,2.8-2.8,5-3C1477.1,477.3,1474.6,476.9,1473,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M159,432c-1,0-2,0-3,0c-5.3-1.6-5.4-2.3-1.1-6.3c2-1.7,4.2-2.8,6.7-3.1c9.1-1.2,17.9-3.5,27-4.9\n                        c1.8-0.3,4.3-2,5.4,1.3c-5.6,0.6-7.5,5.8-11,9C175,429,166.9,430,159,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M187,427c0.8-1,1.6-2.1,2.5-3c0.9-0.9,1.8-2.3,3.3-1.8c2.3,0.9-0.8,2.4,0.4,4.1\n                        c2.5-2.5,3.8-6.1,7.6-6.4c1.2-0.1,2.6-1.6,3.6-0.2c1.1,1.5-0.2,2.8-1,3.9c-0.4,0.5-0.9,0.9-1.4,1.4c-0.8,1-2.2,0-3,1\n                        C195,426.9,191,427.2,187,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M226,459c0-0.7,0-1.3,0.1-2.2c0.4-0.8-0.5-0.7,0.1-0.5c0.1,0,0.1,0.1,0,0.3c-0.3,0.6-0.8,0.1-0.2,0.4\n                        c0.1,0,0.2-0.1,0.1-0.2c-2.5-0.6-5.4-1.2-3.1-4.6c0.9-1.3,2.9-1.4,3.7,0.2c1.2,2.3,4.8,3.8,3.7,6.8\n                        C229.7,461.1,227.5,458.8,226,459L226,459z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M223,467c0-0.3,0-0.7,0-1l0,0c1.5,0.2,2.9,0.7,4.4,0.6c4.3-0.2,5.2,1.7,3.8,5.5\n                        c-0.4,1-0.4,2.2-0.6,3.8C227,473.4,229.3,466.4,223,467L223,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M238,474c2.4-0.1,4.3,1,6.4,2.2c-2.6,0.2-3.6,4.3-6.7,2.3C234.9,476.8,238.3,475.5,238,474L238,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M226,461c-2.8,0.6-2.3,3.2-3,5l0,0c-1.3-2.3-1.8-5.2-4.2-6.9c-0.7-0.5-0.8-1.5-0.1-2.1\n                        c1-0.9,1.4,0.2,1.7,0.8c1.4,2.6,3.5,1.6,5.5,1.1h0C226,459.7,226,460.3,226,461L226,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M176.8,470c-0.4,1.2-1.2,2-2.5,1.8c-1-0.2-1.2-1-1.1-1.9c0.1-1.2,0.8-1.7,2-1.7\n                        C176.3,468.1,176.9,468.7,176.8,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M155.5,446.8c3.1-1,4.9-1.1,7.5,0.5C160.1,448.2,158.3,448.3,155.5,446.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M223,467c-0.1,1.4-0.9,2.2-2.3,1.9c-2.5-0.6-1.5-2.8-2.2-4.6C220.5,464.9,220,468.9,223,467L223,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M199,426c0.7-1.2,1.9-1,3-1c1.7-0.3,3.3-0.6,5-1C205.2,428,201.6,425.2,199,426z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M151,484c10.7,1.7,21.3,3.3,32,5c0.9,1.8,3.3,3.5,1.9,5.6c-0.9,1.3-2.9,0.7-4.8,0.1\n                        c-2.6-0.8-2.9,1.1-2.1,3.3c-2.3-0.3-4.7-0.7-7-1c-4.2-1.3-8.5-2-13-2c-0.5-0.5-1-0.8-1.6-1.2c-1.1-0.6-2.9-0.7-2.4-2.6\n                        c0.5-1.6,2.3-0.7,3.6-1.2c-3.4,0.5-5.5-1.6-7.7-3.3C148.9,485.9,149.7,484.5,151,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1024"),
                d:
                  "M194,419c-6-1.1-11.6,1.2-17.3,2.3c-5.3,1-10.7,1.7-16.1,2.7c-2.2,0.4-3.8,1.9-5.7,3\n                        c-2.4-0.6-5-1-3.3-4.6c6.3-1.7,11.1-6.6,17.4-8.4c2.6-0.9,5.2-1.4,7.8-2.1c1.7-0.3,3.5-0.2,5.2-0.3c0.5,0,1-0.1,1.5-0.1\n                        c1-0.2,1.9-0.5,2.9-0.7c14.6-2.2,29.1-4.9,43.7-6.4c2.5-0.3,5-0.3,7.5-0.2c0.8,0.1,1.5,0.4,2,1.1c0.1,0.2,0.2,0.5,0.3,0.7\n                        c0.4,1.3,0.8,2.6,1.2,3.9c-3.8,3.7-8.9,2.9-13.4,3.8C216.6,415.9,205.3,417.3,194,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1531"),
                d:
                  "M267,415c-4.6,1.7-9.6,1.7-14.4,2.2c-1.3,0.1-2.5,0.4-3.8,0.8c-2.2-1.4-2.6-4-3.9-6\n                        c0.2-0.8,0.7-1.4,1.4-1.8c5-1.2,10.1-1.7,15-3.1c1.5-0.4,2.9-0.5,4.3,0.4c1.2,0.2-0.6,1.8,0.7,1.7c2.3-0.2,3.8,0.8,3.6,3\n                        c-0.1,2.2-2.3,1.2-3.6,1.5c-0.6,0.1-1.1,0.3-1.6,0.7C265.6,414.3,266.4,414.3,267,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661127"),
                d:
                  "M246,411c-0.3,0.3-0.7,0.7-1,1c-2-1.7-2.2-5-5-6l0,0c-0.5-0.7-0.8-1.5-0.5-2.3c5-2.9,10.3-2.7,15.7-2\n                        c2.6,5.3,2,6.5-3.5,8.3C249.8,410.6,247.7,409.8,246,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1836"),
                d:
                  "M267,415c-1-0.1-2-0.2-2.9-0.3c0.3-0.8,0.6-1.7,1-2.5c1.5-2.6,2.5,2.1,4,0.3c-1.3-2.4-1.3-2.4-5.3-2.7\n                        c0.9-0.7,1.6-1.3,2.3-1.8c3.3-2.2,7.3-2.3,11-3.3c1.7-0.1,3.3-0.2,4.8,0.8c1,2.1-0.6,1.7-2.2,1.8c2,0.4,3.2-0.6,4.5-0.8\n                        c1.3-0.3,2.9-0.5,3.3,1.1c0.5,1.8-0.8,2.7-2.4,3.1c-1.2,0.3-2.5,0.4-3.8,0.6c2.3-0.1,4.8-1.3,6.9,0.6c0,0.3,0,0.7,0,1\n                        c-5.7-0.1-11.5,0.2-17,2C269.7,415,268.3,415,267,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M282,442c-0.1,1-2.6,1.2-1.2,2.7c2.9,3,2.2,5.4-1.6,8.2c0.7-3.1,1.4-5.6-0.2-7.9\n                        c0-1.4-1.2-2.9,0.2-3.9C279.7,440.7,281.1,441.7,282,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M292,435c0.4,4.1-2.6,1.4-4,2C289.3,436.3,290.7,435.7,292,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B54D5C"),
                d:
                  "M313,413c-3.2,1.5-6.6,1.6-10,2c-4.6,3.2-7.4-1.1-10.1-3.2c-3-2.2,0-5.3,0.4-8\n                        c1.3-2.5,1.7-5.7,4.6-7.2c4.5,1.1,5.3,2.7,3,6.3c-2.2,3.4-1.4,5.6,2.6,5.8C307.3,408.9,309.7,411.8,313,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941B3A"),
                d:
                  "M294.2,404.1c0,2.4-2.7,6.1-1.1,6.7c3.3,1.4,5.5,5.7,10,4.2c0,0.3,0,0.6,0,1c-2,1.1-4.2,0.5-6.3,0.9\n                        c-2.6,0.5-4.5-0.9-4.7-3.9c-1-1.5-2.6-0.9-4-1c-2.6,0-5.2,0-8,0c1.5-2.7,5.5-0.9,7-4.4c-2.9,0.2-5.4,0.3-8.8,0.5\n                        c1.8-1,2.8-1.5,3.8-2.1C285.7,402.4,289.5,401.8,294.2,404.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8818A"),
                d:
                  "M332.1,407.3c0,0.2,0,0.4-0.1,0.7c-0.7,0-1.3,0-2,0c-4.1-0.4-8.2,0.3-12.2,0.2\n                        c-4.6-0.1-4.7-0.3-3.3-4.6c0.3-0.9-0.3-2,0.3-2.9c0.4-0.3,0.8-0.6,1.3-0.7c5.8-0.1,11.1-3.1,16.9-2.8c1,0.5,1.7,1.4,0.4,1.9\n                        c-1.4,0.6,0,1-0.3,1.5c-1.3,1.5-3.2,2.1-4.7,3.2C330.2,404.4,333.5,403.5,332.1,407.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C9626F"),
                d:
                  "M313,413c-4.6,0.2-8-4.1-13-3.6c-1.3,0.1-3-3.7-0.7-6.3c2.3-2.6,2.9-5-1.5-6c-0.8-0.1-1.1-0.6-1-1.4\n                        c0.9-1.8,1.7-3.7,3.2-5.2c0.4-0.2,0.9-0.4,1.3-0.4c0.7,0,1.4,0.2,2,0.7c0.1,4.4,3.2,8.6,0.7,13.4c-0.8,1.6,0.4,3.2,2.5,3.5\n                        c1.5,0.2,3,0,4.4,0.3c0.4,0.1,0.9,0.3,1.3,0.5c1.2,1.3,2.9,2.1,4,3.5C315.3,413,314.1,412.9,313,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D27781"),
                d:
                  "M312,409c-0.3,0-0.7,0-1,0c-2.9-1-6.4-2.6-5.9-5.7c0.6-3.5,4.9-2.5,7.6-3.1c0.8-0.2,1.6,0.2,2.2,0.8\n                        c-0.1,1.6,1.5,2,2.4,3.3c-0.8,1.3-3.1,0.1-3.5,2.1c0.2,0.1,0.6,0.6,0.9,0.6c3.1-0.1,6.3,0.6,9.3-0.5c2.4-0.9,4,0.9,6,1.6\n                        c-3,2-6.5,2.2-9.8,3.1c-1.4,0.4-2.8,0.8-4.3-0.3c0.8-2.7,3.3-1.6,5-2.3C317.9,408.1,315,410.2,312,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73132E"),
                d:
                  "M292,413c2.7,4.5,7.1,2.6,11,3c1,1.1,0.1,1.6-0.7,1.4c-1.8-0.4-2.7-0.4-4.2,1.5\n                        c-2.6,3.2-5.5-0.5-7.7-1.7C288.8,416.4,289.3,413.6,292,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8707A"),
                d:
                  "M312,409c3.1-1.8,6.5-0.6,10.1-1.2c-1.2,2.4-3.8,0.9-5.5,2.8c1.4,0.2,2.5,0.4,3.6,0.5\n                        c-1.2,1-2.6,0.9-4.1,1C314.1,412,312.1,411.7,312,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d: "M299,431c0,5.1-3.1,3.8-6,3C294.3,431.6,296.8,431.7,299,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69122A"),
                d:
                  "M270,446c0.3,1.3,0.6,2.5,0.9,3.8C269.5,448.8,268.1,447.7,270,446L270,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5989D"),
                d:
                  "M351,402.9c-1.8,0.8-3.7,1.3-5.7,1.2c-1.6,0.1-3.1,0.3-4.5-0.8c-2-3.5-2-3.6,1.6-3.8\n                        c0.9-0.1,0.1-0.4,0.2-0.5c1.8-3.1,4.7-3.6,7.9-3.7c0.4,0.1,0.9,0.3,1.3,0.6c1.5,1.4,4,0.4,5.3,2.5c-0.9,2.9-4.7,1.1-5.7,3.7\n                        C351.4,402.4,351.3,402.7,351,402.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE838E"),
                d:
                  "M342,403c1.1,0.4,2.2,0.8,3.3,1.2c-4.4,1.1-8.8,2.1-13.2,3.2c-0.7-4.1-4.7-1.6-7.2-3.6\n                        c3.2-0.6,5.6-2.3,8-3.7C336.2,400.4,338.9,402.2,342,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2E3F"),
                d:
                  "M351,402.9c0.1-0.3,0.2-0.5,0.3-0.8c2.7-2.7,6.3-2.8,9.8-3c2.5,0.8,4.9,0.3,7.3-0.4\n                        c3-1,6.1-1.6,9.2-0.3c1.7,2.2-1,1.7-1.6,2.5c-5.1,0.3-10.1,0.8-15,2.1C357.7,401.6,354.3,403.6,351,402.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("520F1E"),
                d:
                  "M168,522c2.2-1.3,3.8-3.7,7.1-1c1.6,1.4,4.7,0.1,5.9-2.7c0.5-1.1,0.9-3.7,2.7-2.6\n                        c2.6,1.6-0.6,1.9-1.1,2.9c-1,1.9,0.3,2.3,1.8,2.4c4.6,0.3,9.1,0.7,13.8,2.2c-0.9-2.4-2.9-1.7-4.2-2.5\n                        c3.1-2.3,7.7-0.6,10.8-3.7c-2-1.3-4,1.3-5.3-0.7c-0.9-1.4,2.4-0.5,1.4-2.2c3-3.6,6.8-1.2,10.1-1.2c2.8,0-0.5,2.2,0.5,3.7\n                        c2.3-1,5.2-2.2,4.9,3c-0.1-3.4,0.9-5.4,4.1-5.6c1.1,1.3-1.4,2.8,0.1,4c2.3,1.5,0-3.6,2.9-1.8c2.3,1.4,4.2,2.2,1,4.8\n                        c-1.6,1.3-2.6,3.1-0.7,5.1c-0.7,1.3-1.3,2.7-2,4c-12-1.7-24.1-3.4-36.1-5.2C179.9,523.9,174,522.9,168,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C202B"),
                d:
                  "M135,428c-0.2-0.8-0.3-2.2-0.5-2.2c-5.2-0.2-3.5-3.9-3.5-6.8c-0.1-1.8,0.1-3.5,1-5\n                        c3.7-6,7.4-12,10.9-18c0.4-0.7,0.1-2,0.1-3c-1.5-3.3-2.6-6.1,2.3-8c1.8-0.7,3.5-3,5.6-4.1c6.5,3.1,7.4,7,2.5,11.5\n                        c-2.1,1.9-4.2,3.7-5.2,6.5c-0.2,0.5-0.8,1.1-0.7,1.3c3,4.1-2,6-2.8,9c-1,3.5-2.9,7-5.8,9.6c-1.5,1.4-0.6,3.5-0.9,5.2\n                        c-0.3,1.5-0.7,2.9-1.6,4.1C135.9,428.3,135.4,428.3,135,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2313F"),
                d:
                  "M1415,632.9c-2.7,0.3-5.4-0.1-8-1C1409.8,630.9,1412.7,629.4,1415,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("421016"),
                d:
                  "M1376.8,628.8c0.4,0.4,0.9,0.9,1.3,1.3c-0.1,0.3-0.1,0.6,0,0.8c0,0.4-0.1,0.8-0.1,1.2\n                        c-0.6,0-1.2,0-1.9,0.1c-0.5-2.2-2.9-1.9-4.2-3.1C1373.5,627.6,1375.1,627.6,1376.8,628.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921922"),
                d:
                  "M415,401c-7.1,0-14.3,0.3-21.4-0.1c-3.5-0.2-6.6,1.8-10.1,1.4c-1.7-0.1-3.2-0.1-4.5-1.3\n                        c0.7-1.7,2.2-1.8,3.7-2c5.9-0.5,11.8-1.8,17.8-1.4c6.3,0.3,12.5-0.8,18.7-1.7c12.3-0.4,24.5-1.1,36.7-1.8c1.2,0,2.2,0.3,3,1.3\n                        c0.3,0.5,0.3,1,0,1.5c-1.3,2.1-1.6,2.1-4.8,2c-6.9-0.1-14.3-1.4-20.7,0.4C427.1,401.1,421,400.2,415,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("501116"),
                d:
                  "M481,429c-0.3-0.3-0.7-0.6-1-1c-1.5-1-2.5-2.4-3.4-4c-1.1-2-2.9-3.4-4-5.4c-0.5-0.7-0.9-1.5-1.4-2.2\n                        c-0.8-1.2-1.7-2.5-2.5-3.6c-0.3-0.3-0.5-0.7-0.7-1.1c-1.1-2.1-2.3-4.1-2.9-6.5c-0.8-0.5-1-1.3-1.1-2.2c-0.3-0.3-0.5-0.7-0.8-1\n                        c-0.7-0.5-0.8-1.2-0.8-2c0.2-0.8,0.6-1.3,1.4-1.5c1.4,0,2.1,1,2.7,2c0.9,1.4,0.9,3.5,2.8,4.3c0.3,0.3,0.6,0.7,0.8,1.1\n                        c2.2,3.6,4.6,7.1,6.7,10.9c1.3,3.9,4.4,6.2,7.5,8.6c0,1-0.2,2,0.6,2.8c0.7,0.9,1.6,0.7,2.5,0.5c1.2,0.2,1.7,1.2,2.4,2\n                        c1.2,1.3,2.7,2.2,4.1,3.2c0.6,0.4,1.2,0.8,1.4,1.5c-0.2,1.8-1.3,2.4-3,2.5c-2.8-0.5-4.1-3.8-7.3-3.5\n                        C483.4,432.7,481.6,431.3,481,429z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3545"),
                d:
                  "M462.9,400.1c0.1,0.6,0.2,1.3,0.3,1.9c-2.5-0.8-3.1-3.1-4.3-5c0-0.3,0.1-0.6,0.1-0.9\n                        c-0.3-0.2-0.4-0.5-0.3-0.8c0.1-0.3,0.2-0.4,0.2-0.4C462.1,395.2,462,398,462.9,400.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701425"),
                d:
                  "M472,416c0.7,0.4,1,1,1,1.8c0.3,0.4,0.4,0.8,0.4,1.3c-0.3,1-1.1,2.4-1.8,1.9\n                        c-3.3-2.1-7.8-0.8-10.6-4.1l-0.5,0l-0.5,0c-1.5-1.1-3.3-0.6-5-1l0,0c-4.1-2.5-9.3-2-13.4-4.4c-1.3-0.7-3.5-0.1-3.6-2.5\n                        c3.6,0,8-1.3,10.7,0.3c3.4,2,6.7-0.1,9.9,1.5c3,1.5,5.4-0.5,6.4-3.8c1.9,1.2,2.5,3.5,4.1,5l0,0\n                        C470.2,413.2,470.2,415.3,472,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M438,409c4.3,1.4,8.6,2.7,12.9,4.2c1.6,0.6,3.9,0.3,4.1,2.8c-4.7,1.1-9.5-2.3-14.1,0.6\n                        c-0.6-2.7-2-4.8-4.8-5.5c-1.4-0.4-2.5-0.7-3.1-2.1C434.7,407.6,436.3,408.8,438,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882E3B"),
                d:
                  "M469,412c-2.6-0.7-3.4-2.7-4.1-5c0.1-0.6,0.1-1.2,0.2-1.9C466.9,407.2,468.6,409.2,469,412z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B52738"),
                d:
                  "M419.1,397c-4.9,1.4-10,1.9-15,1.9c-8.4,0-16.7,0.7-25,2.1c-1,0-2,0-3-0.1c0.7-0.7,1.3-1.3,2-2\n                        c0.3-0.4,0.6-0.6,1-0.8c1.5-0.4,2.9-0.9,4.2-1.8c3.2-1.2,7.3,0.1,9.8-3.3c0.9-1.1,2.2-1,3.4-0.8c5.2,4.4,11.5,3.2,17.6,3.4\n                        C415.8,395.7,417.7,395.5,419.1,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4651"),
                d:
                  "M287,265c0.9-4.3,4.1-7.4,5.7-11.3c1.2-3,4.4-0.2,5.3-2.7c1.8,1.9,1.2,4,0.4,6.1\n                        c-0.9,2.2-0.2,3.5,2,4.2c4.8,1.5,7.4,4.7,8.1,9.6c0.1,0.7,0.6,1.1,1.1,1.6c2.2,1.8,4.8,1.2,7.3,1.3c0.7,0,1.4,0,2.1,0.1\n                        c4.7,0.3,9.2,3.1,14.1,0.7c1.6-0.8,2.5,1.4,3.9,1.7c6.9,1.2,13.6,2.1,20.5-0.5c2.5-0.9,4.7-2.5,7.3-3c1.3,0.8,2.1,2.1,3,3.3\n                        c1.3,2.6,1.3,4.9-0.9,7c-2,0.7-4.1,0.4-5,0.3c1-0.2,3.2,0.7,5.2-0.5c0.5-0.2,0.9-0.1,1.2,0.3c0.3,2.8-1.9,2.8-3.6,2.9\n                        c-3.5,0.3-7,0.4-10.3-1.2c-4.4-2.2-8.8-2.3-13.5-1.1c-2.1,0.5-2.2,0.4-3.7-2.3c-0.3-0.6-0.5,0-0.7,0\n                        c-7.2,0.4-14.3,0.2-21.5,0.4c-3.3,0.1-6.6,0.2-9.7-1.4c-2.1-1.1-3.6-2.3-3.7-4.8c0.7-3.6,0.3-5.5-4.4-4.5\n                        c-2.5,0.6-5.6-0.3-8.2-1.2C286.4,269.3,285.1,267.7,287,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5414C"),
                d:
                  "M287,265c-0.3,2.5,0.4,4.2,3.3,4.2c3.1,0,6,1.2,9.5,0.2c5.7-1.6,2.2,3.6,3.2,5.5\n                        c-2.2,1.9-5,1.4-7.5,1.2c-3.7-0.2-6,1-6.5,4.8c-0.7,0-1.3,0-2,0c-1.6-1.3-1-3.5-2-5c-0.8-1.7-1.6-3.1-3.9-3\n                        c-3.7,0.1-8.3-4.2-8.5-7.9c-0.2-3.4,3.2-4.9,4.7-7.4c0.4-0.7,1.1-1.1,1.7-1.7c1.8,0.2,3.6-0.4,5.3,0.5\n                        c0.2,1.7-1.3,1.1-1.9,1.6c-1.9,1.5-3.1,4.4-2.7,5.8c0.8,2.4,2.5-0.3,3.9-0.6C285.1,263,285.8,264.6,287,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24953"),
                d:
                  "M309,273c-1-0.2-3,0.4-2.5-1.3c1.4-5.7-2.2-7.6-6.4-9.1c-3.3-1.2-5.6-2.4-2.6-6.2\n                        c1.2-1.5,0.4-3.5,0.5-5.3c6.7-2.1,12.7-5.6,17.9-10.2c2.8-2.4,3-0.1,4.1,1.2c-0.4,3.4-3.7,7.1-6.8,7.5c-6.8,0.9-7.7,2.8-5.5,9\n                        c1.4,3.8,5.5,5.8,5.8,10.1c1.3,2.3,2.4-0.1,3.6-0.2c0.7-0.2,1.4-0.1,2.1,0.1c4.5,3.5,4.4,3.6-0.3,6.4c-0.7,0-1.3,0-2,0\n                        C314.8,272.5,311.6,273.9,309,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M313,269c-1.9-4.1-5.6-7-7.1-11.5c-1.5-4.3,1-10.5,5.3-9.7c5.7,1.1,6.3-3.5,8.9-5.9\n                        c0.3-0.3,0.7-0.7,1-1c1.1,0.7,0.7,2.5,2.2,2.9c0.3,0.3,0.5,0.7,0.6,1.1c0.4,2.4,0.1,4-3,4.3c-2.2,0.2-4.6,1.1-3.4,4.5\n                        c0.4,1-0.4,2.1-1.3,2.4c-3.4,1,0,2.3-0.2,3.4c-0.1,1.3,0.3,2.2,2.1,1.2c1.9-1.1,3.4,0.1,3.6,2c0.2,2,2,1.2,2.8,2.1\n                        c0.4,0.7,0.3,1.4,0,2.1c-1.5,1.4-2.9,3.2-5.3,1.8c-0.7,0-1.3,0-2,0C315.7,270,314.3,270.2,313,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24953"),
                d:
                  "M323,244c-3.7,1-1.3-2-2-3c3-3.1,6.5-4.9,10.9-5.3c3-0.2,1-3.9,3.1-4.7c0-0.7,0-1.3,0-2\n                        c1.1,0.1,1.2,3,3,1c2.5-1.1,1.9,0.7,2,2c-2.2,3.7-4.5,7-9.1,8.1C328,240.8,325.2,241.8,323,244z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B64754"),
                d:
                  "M285,276c3.2,0.7,1.6,3.2,2,5c-1.8-0.4-4.3,1.2-5-2C283,278,284,277,285,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB4F59"),
                d:
                  "M350,229c1.5,2.4,1.8,7.2,5.9,1c2.5-3.7,8.1-6.2,13.2-6.5c2.6-0.1,4.9-1.2,6-2.4\n                        c3.4-3.7,8.5-4,12.1-7.4c1.5-1.4,5.6-1.6,8.4-1.9c7.8-1,14.7-4.3,21.8-7.1c4.4-1.7,8-6,13.5-3.8c0.8,0.2,1.3,0.7,1.4,1.5\n                        c-0.1,0.5-0.2,0.9-0.6,1.3c-0.6,0.6-1.3,1.1-2.1,1.1c-5.3-0.2-8.5,2.9-10.8,7.2c-0.3,0.6-0.9,1-1.4,1.4\n                        c-5.6-1.4-10,2.4-15,3.6c-5.3,1.3-10.9,2.5-15.8,5.6c-3,1.8-6.5,2.9-9.4,5.2c-1.3,1-3,1.8-4.6,1.8c-6.9,0.1-11.8,5.1-17.9,6.7\n                        c-3.8,1-7.8,3.2-12.2,2.1c-0.2-1.8-1.2-3.7,0.4-5.5c0.3,0,0.7,0,1,0C345.5,230.9,348.5,231.1,350,229L350,229z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M343,233c-0.7,1.7,1.8,3.3,0,5c-1.1,0.5-1.1,1.9-2.3,2.3c-3.4,1.8-7.8,1.8-10.6,5.1\n                        c-0.3,0.4-0.6,0.8-1.1,1c-2.4,1.6-5.2,0.4-6.1-2.4l0,0c-0.5-2.9,1.8-3.4,3.6-3.7c5.7-0.9,9.2-5.1,13.4-8.3\n                        c0.4,0.6,1.1,1,1.5,0.4C343.7,228.6,342.7,232.3,343,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M350,229c-0.2,4-3.5,3.5-6,4C344.8,229.8,346.1,227.5,350,229z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B64754"),
                d:
                  "M289,281c-1.7-4.1-0.8-6.3,4.1-6c3.3,0.2,6.6,0,9.9,0c-0.6,5.3,4.4,5.5,6.9,5.7\n                        c5.7,0.3,11.8,1.6,17.2-1.7c2.7-1.7,0.8,2.8,3.2,2.2c2.7-0.6,5.6-0.1,8.5-0.1c0.4,1.7-1.8,0.4-1.7,1.6\n                        c2.9,1.7,5.6-0.7,8.4-0.9c4.4-0.4,7.6,1.9,11.4,2.7c3.6,0.8,8,2.6,11.2-1.4c0.5-0.6,1.1-0.8,1.9-0.9c4.1,0.6,7.9,1.8,11.5,3.8\n                        c1.9,1.1,3.1,2.2,0.5,3.9c-3.6,1-7.3,0.6-10.9,0.5c-13.9-0.3-27.7-2.1-41.7-2c-2.9,0-6-0.2-8.4-2.3c-3.2-2.5-6.4-4.6-10.4-1.2\n                        c-0.5,0.4-2.2,0.3-2.8-0.2C302.2,279.8,295.5,281.1,289,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6404D"),
                d:
                  "M321,286c8.7,2.1,17.7,1,26.6,1.7c11.7,0.9,23.6,1.9,35.4,1.3c0.2,0.1,0.4,0.3,0.6,0.4\n                        c1.2,1.8,3.2,2.1,5,2.8c1.4,0.6,2.4,1.5,0.3,2.7c-7.6-0.2-15.1-0.1-22.6-1.7c-20.3-0.1-40.5-2.8-60.7-3.2c-1,0-2-0.1-2.7-1\n                        c-0.3-3.3-4-0.9-5-3C305.7,286,313.3,286,321,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6404D"),
                d:
                  "M295,286c-2.3,2.3-4.7,0.2-7,0C290.3,284.2,292.7,285,295,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B74553"),
                d:
                  "M432,202c-0.3-0.3-0.7-0.7-1-1c-2.4-3.6-6.5-4.3-10-6c0-0.7,0-1.3,0-2c4.6,3,8.5,2.1,13.7,0.1\n                        c3.5-1.4,8.1-1.7,10.8-4.3c2.1-2,3.6-4.1,6.5-4.9c2,0.3,3.9,1.4,6,1c1.5-0.6,2.3,0.4,3.2,1.3c0.3,0.4,0.5,0.9,0.6,1.3\n                        c-0.8,3.6-2.5,5.9-6.4,3.8c-1-0.5-1.4-0.4-1.9,0.1C447.1,196.7,439.6,199.4,432,202z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53C4B"),
                d:
                  "M885,639c0.4-2.5,2.3-2,3.9-2c3.6,0,7.3,0,10.9-0.5c-6.6-0.1-13.1-0.4-19.7-0.1\n                        c-5.6,0.2-11.3-0.1-16.9-0.5c-0.6,0-0.3-1.1-0.1-1.8c59.7,0,119.4,0,179,0.1c0.6,0.5,1.3,0.9,2.3,1.6\n                        c-3.8,0.8-7.5,0.1-11.1,1.7c-1.5,0.7-5.7-1.2-8.1-0.3c-3.4,1.3-7.1-0.4-10.2,1.8c-3.1,1.7-6.5,1.2-9.7,0.9\n                        c-7.5-0.6-15-0.8-22.4-1.2c-5.5-0.3-10.8,1.3-16.3,1.2c-2.7,0-5.3,0.2-7.5-1.8c-2.2-1.5-4-1.3-6.7-0.3\n                        c-3.4,1.2-7.6,0.8-11.3,0.2c-8.5-1.3-16.9,0.9-25.4,0.4C905.4,637.7,895.2,638.7,885,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963B4C"),
                d:
                  "M1128.9,631.1c0.1,0.2,0.2,0.5,0.3,0.7c-1.3,1.5-3,1.1-4.7,1.1c-23.1,0-46.3,0-69.4,0.1\n                        c-2,0-3.9-1-5.9-0.2c-47.7,0-95.3,0.1-143,0.1c-1.2,0-2.4,0.1-3.3-0.9c3.8-2.8,8.2-0.9,12.2-1.5c17.6,0,35.1,0,52.7,0\n                        c2.5,0,5,0,7.4-0.8c2-0.4,4-0.3,6-0.3c46.7,0,93.4,0,140.1,0C1123.9,629.5,1126.7,628.8,1128.9,631.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921A28"),
                d:
                  "M1055,634c-1.3,0-2.7-0.1-4-0.1c0-0.3,0-0.6,0-0.9c1.7-1.1,3.6-0.5,5.3-0.5c31.9,0,63.7,0,95.6,0\n                        c39.9,0,79.9,0,119.8,0c2.3,0.4,4.5,0.5,6.9,0.2c1.4-0.2,3.6-1.4,4.5,1.3c-1.1,0.1-2.2-0.2-3,0.9c-6.7,0-13.3,0-20,0.1\n                        c-2-1.7-4.5-0.9-6.7-0.9C1187.2,634,1121.1,634,1055,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C06877"),
                d:
                  "M751,632.3c-22-0.1-43.9-0.2-65.9-0.3c-2.3,0-4.7-0.1-7-0.1c-0.3-0.7-0.1-1.3,0.6-1.6\n                        c2.2-1,4.6-0.7,6.9-0.7c19.2-0.1,38.3,0.1,57.5-0.1c35.3-0.2,70.6-0.1,106-0.1c1.8,0,3.7,0,5.4,0.9c0.7,0.4,0.9,0.9,0.6,1.6\n                        c-18.8,0-37.6,0-56.5,0.1c-2.2,0-4.3,0.2-6.5,0.3C778.3,632.3,764.7,632.3,751,632.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C15262"),
                d:
                  "M1152,632.9c-31.3,0-62.6,0.1-94,0.1c-2.3,0-4.7,0.1-7,0.1c-0.6-0.1-1.2-0.1-1.8-0.2\n                        c1.6-1.5,3.5-0.8,5.2-0.8c23.1,0,46.2,0,69.3,0c1.8,0,3.6-0.1,5.5-0.2c7.6,0.1,15.2,0.1,22.8,0.2c0.3,0.2,0.5,0.4,0.3,0.6\n                        C1152.2,632.8,1152.1,632.9,1152,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B65D6C"),
                d:
                  "M855,631.9c0-0.3,0-0.5,0-0.8c1.3-1.6,3.2-1.6,5-1.7c17-0.2,34,0,51,0.1c1.2,0,2.3,0.2,3.4,0.8\n                        c0.7,0.4,0.9,0.9,0.6,1.6c-4,0.1-8,0.1-12,0.2C886.9,632.1,871,632,855,631.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44D5F"),
                d:
                  "M678.1,631c0,0.3,0,0.6,0,0.9c-4,0-8,0-12,0c-0.1-0.3-0.1-0.6-0.1-0.9c0.2-0.8,0.7-1.4,1.5-1.8\n                        c1.3-0.5,2.6-0.4,3.9-0.1C673.5,630.1,676.2,629,678.1,631z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("501515"),
                d:
                  "M633.9,623.1c0.7-1.2,1.9-1.1,3-1.1c1-0.2,2.1-0.4,3.1-0.3c5.1,0.2,9.9,2.4,15.1,2\n                        c0.9,0,1.7,0.2,2.5,0.4c3.9,1,7.8,0.3,11.7,0.5c2.1,0.1,4.3-0.4,5.9,1.7c-1.1,2.7-3.5,1.8-5.5,2c-4.1,0.4-8.3-0.8-12.3,0.6\n                        c-0.3,0.4-0.7,0.6-1.2,0.7c-1.2-0.1-2.4-0.1-3.6-0.4c-5-0.4-9.8-1.9-14.5-3.4C636.8,624.6,634.6,625.1,633.9,623.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C35060"),
                d:
                  "M638,625.8c5.2,0.4,10.2,1.8,15.2,3.1c-0.4,0.9-1.5,0.4-2,1C646.5,629.3,641.9,628.6,638,625.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36579"),
                d:
                  "M667,630.1c-0.3,0.3-0.7,0.7-1,1c-2.3-0.1-4.5-0.1-6.8-0.2c-0.2-1,0.4-1.4,1.2-1.7\n                        c1.8-0.5,3.6-0.5,5.4,0C666.3,629.3,666.7,629.6,667,630.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44D5F"),
                d:
                  "M660.1,629.9c-0.3,0.3-0.6,0.6-0.9,0.9c-1.5,0-3,0.5-4.2-0.7c0.5-0.9,1.5-0.4,2.1-0.9l-0.1-0.4\n                        c0.9-0.7,1.9-0.7,2.9-0.2C660.2,629,660.3,629.4,660.1,629.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36579"),
                d:
                  "M657,629.2c-0.7,0.3-1.4,0.6-2.1,0.9c-1.3-0.1-2.5-0.2-3.8-0.2c0.7-0.3,1.4-0.7,2-1\n                        C654.5,629,655.7,629.1,657,629.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D74853"),
                d:
                  "M1548,291c5,0,10,0,15,0c0.2,1.4,1,2.1,2.4,1.9c8.7-1.1,17,2.1,25.6,2c-0.3,3.4-3.2,3.3-5.2,3.1\n                        c-5-0.5-10.5,1.6-15.1-2.7c-1.2-1.1-3.6,0.4-5.1,1c-5.6,2.4-13.4,4-18.8,4.9c-7.9,1.2-16.1-0.2-23.7,2.9\n                        c-2.2,0.3-4.2-0.7-6.3-1.2c-2.1-0.3-4.1-0.7-5.9-2c0-0.7,0-1.4,0-2.1c2.2,0.2,3.8,0.9,6.5-0.5c4.1-2.1,9.6-2.8,14.4,0.2\n                        c1.1,0.7,2.7,0.9,1.9-1.5c2.6-0.3,2.9-6.7,7.4-2.8C1541.6,294.8,1546.3,293.5,1548,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E75564"),
                d:
                  "M1494,287c0.7,1.1,1.9,0.9,3,1c0.8,0.1,2.2-0.4,2.2,1c0,1.2-0.9,1.9-2.2,2c-2.1,0.5-3.5-1.1-4.5-2.3\n                        C1490.4,286.1,1493.4,287.5,1494,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83C49"),
                d:
                  "M1516.9,303.1c2.4,0,4.8-0.1,7.1-0.1c9.2-1,18.5-1.2,27.8-1.4c26,0.1,52-0.2,78-0.1\n                        c12.1,1.5,24.2,1.9,36.3,2.2c2.2,0.1,4.2,0.6,6.3,1c4,1.4,8.2,0.8,12.4,1c0.9,0,1.7,0.2,2.5,0.4c6.8,1.9,13.8,1.5,20.7,1.6\n                        c1.8,0,3.7-0.2,5.4,0.5c0.7,0.3,1.6,0.5,1.3,1.7c-0.3,1-1.6,0.1-1.9,1.1c-0.6,0.2,0.6,0.5,0.1,0.1c-0.3-0.2-0.2-0.3,0.3-0.4\n                        c2.9-0.8,5.7-0.9,8.7,0c4.6,1.3,9.6,0,14.3,1c1.3,0.3,3.1,0.2,3.4,1.5c0.5,1.9-1.6,2.1-2.8,2.8c-5.3,0.8-10.6-1.2-15.9-0.6\n                        c-4.1-1-8.3-0.7-12.5-1.3c-12.8-0.7-25.5-2.5-38.3-3.4c-16.6-1.2-33.2-2-49.8-2.7c-17.5-0.7-35-0.2-52.5-0.4\n                        c-9.2,0.1-18.4-0.2-27.6,0c-3.9,0.2-7.9,0-11.8-0.1c-3.5-0.3-7.2-0.1-9.7-3.2C1518.2,303.8,1517.5,303.5,1516.9,303.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d:
                  "M1499.1,298.8c3,1.4,5.9,2.7,8.9,4.1c-0.4,2.8-2.6,2.4-4.5,2.6c-6.6,0.5-13.2,1.3-19.8,0.4\n                        c-1.5-0.2-2.9,0.4-4.4,0.8c-0.5,0.2-1,0.3-1.5,0.3c-2.6,0.1-5.1-1.1-7.7-0.7c-1.4,0.1-2.7,0.4-4.1,0.2\n                        c-5.5-0.9-11,0.3-16.4,0.9c-13.7,1.3-27.5,1.3-41.2,2.7c-7.6,0.8-15.3-0.3-22.9,1c-1.3,0.2-2.6-0.4-3.5-1.5\n                        c-0.9-1.9-0.1-2.7,1.7-3.2c2.1-0.6,4.3-0.8,6.4-0.8c13.6-0.3,27.2-1.1,40.7-2.2c5.2-0.4,10.5,0,15.7-1.2\n                        c9.4-0.1,18.7-0.5,28.1-1.8c6.3-0.9,12.9-0.1,19.3-0.7C1495.6,299.6,1497.4,299.3,1499.1,298.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD505B"),
                d:
                  "M1499.1,298.8c-2,4.2-5.9,2.1-8.8,2.2c-12,0.4-24,1.4-36,2.8c-2.6,0.3-4.9-1-7.3-0.8\n                        c-1.7,0.8-3.4,0.6-5.1,0.1c-0.1-1.3,0.7-2,1.7-2c5.3-0.3,10.1-3,15.5-2.5c6,0.6,11.3-2,16.9-3.6c0.3-0.3,0.7-0.7,1-1\n                        c1.5-0.5,2.6,0.8,4,1c1-1.4,2-1.3,3,0c3.7,2.4,8.1,0.6,11.9,2.2C1497.2,297.3,1498.3,297.9,1499.1,298.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841822"),
                d:
                  "M1518.9,304.2c3,0.6,6.1,1.2,9.1,1.9c0.8,0.9,2.8-0.1,2.8,1.3c0,2-2.1,2-3.4,2\n                        c-9.2-0.3-18.4,1.4-27.6,1.1c-2.6-0.1-4.4,0.6-5.6,3c-2.6,1.4-4.9,1-7.1-0.8c-1.6,0.3,2.1-2.1-1-1.7c-4.9,0.7-9.9,2.4-15,1\n                        c-1.3-0.5-2.8-0.8-3.2-2.4c1.3-2.1,3.4-1.7,5.3-1.8c3-0.2,6,0.3,8.9-0.7c10.5-0.1,21-2.1,31.6-1c1.2,0.1,2.3,0.1,3.2-0.8\n                        C1517.5,304.8,1518.2,304.5,1518.9,304.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73C4A"),
                d:
                  "M1516.8,305.1c1,1.9-0.3,1.9-1.5,1.8c-11.1-0.6-22.1,1.5-33.2,1.1c-3.4,1.1-6.7,0.2-10.1-0.2\n                        c-1.6-0.2-3-0.8-2-2.8c2.8-0.6,5.3,0.9,8,1c1.4,1,3,0.4,3.8,0.4c1.3-0.1,0.4-1,0.7-0.4c0.1,0.2,0,0.4-0.3,0.4\n                        c-1.1,0-2.2,0.4-3.2-0.4c1.8-1.4,3.7-1.4,5.9-1.3c7.8,0.6,15.5,0.6,23.1-1.7C1511.1,302.9,1513.6,305.5,1516.8,305.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1495.9,297.2c-4.1-0.3-8.7,2.8-11.9-2.2c1.7,0.1,3.2-0.1,3.9-1.9\n                        C1490.6,294.5,1493.3,295.8,1495.9,297.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23A46"),
                d:
                  "M639,622.6c-0.9,0.3-1.6,0.1-2.1-0.6c-9.5-3.8-17.6-9.7-24.7-17.1c-1.1-1.3-2.1-2.6-3.2-4\n                        c-0.8-0.9-0.7-2.5-2.1-2.9c-0.3-0.4-0.6-0.7-0.9-1.1c-0.4-1.2,0.2-1.9,1-2.5c2.5-0.9,4,0.5,5.5,2.1c1.3,1.4,2.6,3,4.7,3.2\n                        c1,0.3,2.1,0.6,2.4,1.5c0.5,1.6,0,3.8,2.9,3.3c0.6-0.1,1.3,0.9,1.1,1.4c-1.3,4.1,2.3,3.6,4.2,4.6c0.1,3.6,2.5,4.7,5.5,5.1\n                        c2.3,0.3,4.5,0.7,5.9,2.8c0.5,0.9,0.7,1.8,0.5,2.9C639.7,621.9,639.4,622.3,639,622.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3945"),
                d:
                  "M607,595c-0.3,0.7-0.7,1.4-1,2c-3-4-5.9-8.1-8.9-12.1c-2.1-3.6-4.1-7.2-6.2-10.9c-1-1.2,3.2,1,0.8-1.3\n                        c-1-0.9-0.8-2.4,0-3.6c4.3-0.5,4,4.1,6.4,5.8c0.7,0.5,1.4,1.2,1.4,1.9c0,5.8,4.1,9.3,7.2,13.3\n                        C607.9,591.7,608.5,593.3,607,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03540"),
                d:
                  "M606.9,598.1c5.2-2.4,0.8,2.4,2.1,2.9C607.8,600.4,607.1,599.4,606.9,598.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03641"),
                d:
                  "M570.5,560.1c-0.2,0.8-0.9,0.9-1.5,0.7c-0.7-0.2-1.3-0.6-1.2-1.3c0-0.2,0.8-0.4,1.3-0.4\n                        C569.7,559.1,570.5,559.1,570.5,560.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M517,468c-0.3-1-0.7-2-1-3c3-2.4,7.1-1.4,9.2,2.9c1.3,2.8,2.6,3.5,5.6,3.1c4.4-0.5,11.5,4.4,13,8.1\n                        c-0.5,2.6,1.7,5,0.4,7.6c-0.6,0.9-1.5,1.2-2.5,1.3c-2.2,0-4.5,1.2-6.6-0.1c-0.7,0-1.4,0-2,0c0.5-2.5-1.4-3.9-2.8-5.5\n                        C526,477.5,522.4,471.9,517,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962935"),
                d:
                  "M564,530.1c-4.5-5.2-7.1-11.5-10.9-17.1c-0.9-1.2-0.5-2.5-0.2-3.8c0.6-2.3,1.8-3.7,4.1-1.5\n                        c1,0.9,2.2,1.4,3.5,1.8c3.6,2.5,5.2,6.7,7.7,10.1c1.6,4.2,5.5,7.3,5.3,12.3c-1.5,1.6-3.3,1.2-4.2-0.3\n                        C567.7,529.2,565.9,529.9,564,530.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53641"),
                d:
                  "M592,569c0.1,1.1-0.1,2.5,0.5,3.3c3.5,4.4-1.6,0.7-1.6,1.7c-7-9-12.1-19.2-17.9-29\n                        c1.4-2.3,0.1-5.5,2.7-7.4c0.7,0,1.3,0.4,1.9,0.8c0.9,0.9,1.4,1.9,1.5,3.1c0,0.5,0,0.9,0,1.4c0.2,1.3-1.2,3,1,3.7\n                        c0.4,0.2,0.7,0.6,0.9,0.9c1.5,3.8,2.8,7.7,5.7,10.7C589.6,561.3,590.6,565.2,592,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M535,488c2.3-0.6,4.6-1.3,7-1c2.9,0.7,5.8,1.2,8.7,1.6c1,0.1,1.9,0.3,2.7,1c1.6,1.4,2.7,10,1.6,12.4\n                        c-3.2-0.2-6-1.3-7.7-4.1c-1.5-2.5-3.3-2-5.3-0.8C539.7,494,537.3,491,535,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1F2D"),
                d:
                  "M542,497c2.1-3.9,3.9-4.3,5.5-0.7c1.6,3.6,5.6,3.1,7.5,5.7c0.2,0.1,0.4,0.1,0.7,0.2\n                        c1.6,2.5,5.5,3.7,4.4,7.8c-2.7,1.2-3.6-1.5-5.4-2.8c-0.6,2.1-1.1,4-1.5,5.8C549.4,507.6,545.7,502.3,542,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D323D"),
                d:
                  "M576,538c-1.4,1.1-1.3,2.8-0.8,4c1.2,2.7-1.3,2.2-2.3,3.1c-3.3-4.8-6.5-9.7-9-15\n                        c3.2-2.5,3.4-2.4,5.6,0.7c0.9,1.3,2.2,1.2,3.5,1.2C575.3,533.4,577.2,534.9,576,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74551"),
                d:
                  "M580,141c0.7,0,1.3,0,2,0c0.2,0.5,0.3,1.2-0.1,1.4c-5.9,3.2-11.5,7.1-18.4,7.6\n                        c-3.7,0.2-7.2,0.3-10.4,2.4c-2.7,1.9-6.3,0.8-9,2.4c-7,4.1-15.3,3.3-22.6,6.4c-3.3,1.4-7,2.1-10.5-0.3\n                        c-0.5-0.4-1.2-1.1-0.2-1.3c5.1-1.2,10.1-2.1,14.9-4.7c2.1-1.1,5.5-2.2,8.6-2c1.6,0.1,2.9-0.4,3.7-2c5-1.1,10.5-0.7,14.6-4.6\n                        c2.1-2,4.2,0.1,6.7-0.6C566.1,143.9,572.8,141.3,580,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4A54"),
                d:
                  "M511,161c5.9,0.3,11.5-0.4,16.6-3.5c1.9-1.1,4.2-0.4,6.4-0.5c2.2-0.2,4,0.3,5.5-2.7\n                        c0.9-1.7,5.5-2.1,8.3-1.8c2.5,0.2,4.5-0.9,5.8-1.8c3.1-2.4,6.1-2.7,9.6-1.8c0.9,0.2,2.3,0.5,2.9,0c4.9-3.5,11.2-4.1,15.9-7.9\n                        c0.3,0,0.7,0,1,0c1.3,0.6,2.7,1.1,4,0c2.8,0.8,4.6-1.7,7-2c1,0.8,2,1.1,3,0c4.7,0.4,9.3-1.8,14-0.1c2,0.8,4.7-0.4,4.9-2.1\n                        c0.2-2.4,0.9-1.6,2.2-1.3c1.6,0.3,3.2,0.4,4.9,0.5c1,0.3-1.5,1.6,0.7,2c2.2,0.4,3.2,2.7,2.3,4.7c-0.8,1.9-2.8,1.1-4.4,0.6\n                        c-8.5-2.6-16.7-0.3-24.9,1.6c-3.1,0.7-6.9,0.5-7.9,5.2c-0.4,1.7-3.3,1.9-5.3,2.1c-1.8,0.2-3.7,0-4.8,2\n                        c-0.2,0.4-0.6,0.8-0.9,1.1c-1.1,0.6-2.3,0.2-3.5,0.1c-1.6-0.3-3.4,0-4.5-1.8c0.7-2.3,5.8,0,4.6-4.1c-0.1,1.5-0.6,3.1-2.7,2.6\n                        c-3.5-0.8-6.1,0.5-8.6,2.8c-1.7,1.6-5.1,0.8-5.7,4.4c-0.2,1.1-3,1-4.6,1.1c-3.7,0.1-7.3,0-11,0c-1.9,0-3.3,0.7-4.9,1.8\n                        c-3.4,2.2-7.4,3.6-11.5,1.5c-1.7-0.8-3.2-0.7-4.7,0.4c-1.2,0.9-2,2.2-3.3,3c-1.2,0.8-2.9,0.7-4.1,2.1c1,1.6,3.5,3,1.5,5.4\n                        c-2.1,1.8-4.6,1.9-7.2,1.5c-6.6-2.1-13.1-3.6-19.1,1.7c-0.3,0.3-0.7,0.5-1.2,0.6c-1.6-0.7-2.3-2.1-2.9-3.7\n                        c4-4.3,7.5-9.5,14.3-9.6C502.9,163.5,507.7,164.3,511,161z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34652"),
                d:
                  "M499,165c-1.4,1.5-2.4,3.7-5.1,2.2c-0.7-0.4-2.1,0.2-2.1,0.8c0.2,4.8-5.1,4.2-6.8,7\n                        c-2.6,1.6-5.5,2.7-7.5,5.1c-1.4,1.8-3.2,1.1-4.8,0.1c-0.2-0.1-0.4-0.1-0.7-0.2c-2.4-2.7-3-4,1.6-5.4\n                        c7.2-2.2,13.9-5.9,20.2-10.1C495.9,163.1,497.5,162.2,499,165z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34652"),
                d:
                  "M461,187c-1-0.7-2-1.3-3-2c-0.1-1-0.4-2-1.3-2.6c-1.8-1.2-3.2-3.6-1.7-4.8c1.8-1.5,4.8-2.3,6.9,0.7\n                        c1.5,2.2,3.3,4.2,6.1,4.7c3.9,1-1.3,3.7,1,5C466.2,189,463.6,187.9,461,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE545F"),
                d:
                  "M461,187c2.8-0.8,5.4-0.2,8,1c0.3,0.3,0.7,0.7,1,1c1.2,2,4.8,2.2,4.4,5.5c-1.1,1.9-3,1.7-4.8,1.7\n                        c-0.8,0-1.5-0.2-2.2-0.5c-0.4-0.2-0.8-0.5-1.1-0.9C464.7,192.1,462.3,189.9,461,187L461,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34652"),
                d:
                  "M474,194c-1.2-1.7-3.6-2.6-4-5c2.9,0.3,3.6-1.3,3.2-3.7c-0.3-1.8-0.8-3.5-1.2-5.3l0,0\n                        c2.3-0.1,2.4,2,3.2,3.3c0.8,2.7,2.5,5,3.3,7.6C478.6,194.2,476.1,193.8,474,194z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A25157"),
                d:
                  "M2069.2,477.8c0.6,0.1,1.2,0.2,1.8,0.2c0,0.3,0.1,0.6,0.1,0.8c-0.7,2-0.9,3.8,0,6.1\n                        c0.7,1.7,2.8,4.3-0.6,6.6c-0.6,0.4-1,6,1.2,8.4c1.9,2.2,1.4,4.7,0.8,6.6c-0.8,2.5-2.1,4.8-0.7,7.4c0.1,0.1,0.1,0.4,0.1,0.5\n                        c-4.3,2.9-2.4,9.3-6.2,11.9c-2.9,2-1.6,3.8-0.5,5c1.5,1.6,2.8,3.9,5.2,4.3c1.4,0.2,1.4,0.5,1.4,1.8c-0.1,8.7-3.3,17-3.1,25.8\n                        c0.1,2.1-2.6,3.4-2.7,5.8c-1.1,1.5-1.8,3-1.5,5c0.2,1.6,0.2,3.3-0.1,4.9c-0.3,1.4-0.4,3.3-2.2,3.4c-2.3,0.1-2.2-2-2.4-3.6\n                        c-0.2-1-0.1-2-0.1-2.9c1.6-7.1,1.5-14.6,5.1-21.5c2-3.8,1.7-8.5-0.5-13.6c-3.7-8.5-10.3-9.3-17.5-10.2\n                        c-0.4-0.1-0.8-0.4-1.1-0.7c-0.2-0.4-0.4-0.8-0.5-1.2c-0.4-1.3-1.5-1.3-2.6-1.5c-0.5,0-0.9-0.1-1.4-0.2c-2.3-0.7-4.7-0.6-7-0.6\n                        c-0.5,0-1,0-1.5,0c-1,0-2-0.2-3-0.4c-4.7-1-9.6-0.4-14.4-0.9c-0.7-0.2-1.4-0.6-1.7-1.4c0.1-2.9,2.3-3.2,4.4-3.5\n                        c1.8-0.2,3.5,0.4,5.3,0.3c8.8,0.5,17.5,2,26.1,3.5c6.8,1.2,10.2-1.5,11-8.2c0.4-3.3,1.2-6.5,3.3-9.2c3.3-4.3,1.3-9.3,1.6-14\n                        c1.2-3.4,3.9-6.6,2.1-10.6C2066.7,479.8,2066.4,478.2,2069.2,477.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931928"),
                d:
                  "M1827.6,494.4c0.1,0.7-0.1,1.2-0.7,1.1c-0.3-0.1-0.6-0.6-0.8-1c-0.1-0.2,0.2-0.5,0.4-0.8\n                        C1826.9,493.9,1827.3,494.2,1827.6,494.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1323"),
                d:
                  "M1866,569c-1.1-5.1-3.9-9.6-4.1-14.9c1.3-1.4,3.3-2.2,1.5-5.1c-1.3-2.1,0.1-4.2,3.2-3.5\n                        c1.3,0.3,2.5,0.7,3.8,1.1c-4.2,3.1,1.2,6.4-0.4,9.5c-1,0.9-3.8,0.2-2.2,3.3c1.2,2.3,1.1,5.1,2.2,7.9c1.7-2.5,3.8-2.2,5.9-0.8\n                        c0.7,0.6,1.2,1.3,1.3,2.2c-0.5,2.7,2.2,0.8,2.8,2c-0.1-0.6-0.7-1.3,0-1.9c1.7-1,3.5-0.3,6-1c-4.1,0.9-6.9,0.1-8.7-3\n                        c-0.7-1.3-1.5-2.6-3.3-2.5c-1.2-1-1-2-0.2-3.2c2.2-1.7,4.5-3.4,6.7-5.2c-2.7,2.8,0.2,5.5-0.1,8c-0.1,0.9,0.6,1.3,1.2,1\n                        c3.4-1.5,6.7-0.3,10,0.3c0.4,0.1,0.8,0.5,1.3,0.8c0,1.8-2.1,0.6-2.5,1.7c3.4,1.9,3.5,1.9,4.5-1.1c0.2-0.7,0.3-1.1,1.2-1.2\n                        c5.8-0.3,7.9-3.2,6.2-8.6c-0.6-1.9,0.4-2.6,1.6-3c4.4-1.5,4.1-1.7,3.6-6.3c-0.3-2.6,0.6-5.4-0.1-8.3c2.6-0.1,4.6,4.7,7.2,0.3\n                        c-2.7-0.4-3.8-3-5.9-4.4c0.3-0.4,0.7-0.7,1.2-0.8c2.8-0.6,5.1,1.5,7.8,1.5c0.7,0.1,1.5,0.2,2.2,0.3c2.9,1.2,6.1,1.7,8.8,3.2\n                        c2,2.4,6.2,2.9,6,7.2c-1,4.4-1.9,8.7-6.1,11.3c-0.7,0.4-1.9,0.4-2,1.2c-0.3,4-1.9,6.2-6.2,5.2c-0.4-0.1-0.6-0.3-0.6-0.1\n                        c0.1,0.3,0.4,0.6,0.4,0.9c0.1,2.1-0.2,4.3,0.8,6.2c0,0.5-0.1,0.9-0.4,1.3c-1.7,1.5-3.2,3.2-5.1,4.5c-1,1.1-1.7,2.3-2.9,3.3\n                        c-0.8,0.7-1.2-3.1-1.7,0.1c-0.4,2.8-1.2,6.9-6,6.2c-1.7-0.2-1.3,2-2.7,2.5c-3.6,1.4-7,3.9-11,0.7c-1.2-0.9-3.1-0.9-4.7-1.5\n                        c-2.1-5.4-7.5-6-11.9-8c-0.3-0.4-0.5-0.8-0.7-1.2c0.1-4.7,3.2-1.5,5-1.9c-2.1-0.8-4.2-0.9-6.4-0.4\n                        C1869.6,574,1867.1,572.4,1866,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1910,533c-0.3,0-0.7,0-1,0c-1.5,0.1-2.8-0.3-4-1c-1.2-0.7-2.8,0-4-1c-4.7-2.5-10.4-2.1-15-5\n                        c1-0.7,4.1,1.7,3-2c0.3-3.1-2-2.3-3.7-2.5c-0.7,0-0.1,0.8-0.1,0.1c0-0.1,0.2-0.1,0.5,0c0.9,0.2,2.6-0.7,2.3,1.5\n                        c-3.2,1.1-6.3,1.7-9-1c-3-4.2,1.5-4.9,3.1-4.8c7.5,0.4,13.1-3.1,18.6-7.3c1.7-1.4,4.3,2.5,5.8-0.8c5.8,3,11.6-2.6,17.2,0.4\n                        c-0.8,1.3-2.7-0.3-3.9,1.2c2.8,0.5,5.2,0.8,7.1-1.7c0.7-0.7,1.7-1.2,2.7-1c5.8,1.4,11.9,1.9,17.3,4.8c0.8,0.4-1,1.5,0.4,1.7\n                        c3.7,0.6,6.8,3.4,10.8,3.3c1.4,0,3.4,0.2,3.2,2.2c-0.2,2-2.1,1.6-3.5,1.8c-0.5,0-0.9,0-1.4-0.1c-1.3-0.3-2.7,0-4-0.2\n                        c-4.4-2.4-8.3-0.9-12.3,1.1c-1.8,0.9-4.1,3.5-4.8-1.3c-0.2-1.7-1.9-0.5-2.7,0.2c-3.9,3.3-7.9,0.6-11.2-0.5\n                        c-1.9-0.6-3.4-1-5.2-0.8c-2.3-1.2,1.5-3.8-1.1-4.9c-0.5-0.2-1-0.1-1.4,0.2c4.1,2.6-2.2,6.9,1.7,9.5c0.1,0.5-0.1,0.9-0.3,1.3\n                        C1912.1,527.6,1911.9,530.9,1910,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731426"),
                d:
                  "M1874,559c0,1.1-0.2,2.3,1,3c1.4,1.5,2.2,3,1,5c-1.3-0.3-2.5-0.6-3.8-0.9c-1.5,1.2,2,2.9-0.4,3.7\n                        c-1.8,0.6-2.5-1.1-3.2-2.5c-1.7-3.4-1-7.5-3.2-10.8c-0.7-1,0.1-2.4,1.7-1.2c0.9,0.7,1.8,0.6,2.8,0.7c0,1.7,0,3.3,0,5.2\n                        C1871.5,560.4,1872.7,559.7,1874,559z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1323"),
                d:
                  "M1901,531c1.4,0.1,2.9-0.4,4,1C1903.4,532.9,1902.1,532.4,1901,531z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1120"),
                d:
                  "M1902,475c1.9-0.1,2.8-2.6,5-2c2-2,4.2-3.8,6-6v0c3.8-2.2,7.7-3.9,12-4.6c5.9-0.9,11.4,1.3,17,2.2\n                        c0.6,0.1,1.9,1,3.2,1c3,0,6,0.1,7.9,3.1c0,0.2,0.2,0.4,0.1,0.5c-3.9,5.4,0.8,10.5,0.6,15.8c-0.1,1.2,1.8,1.2,2.8,1.6\n                        c1.2,0.5,3.6,0.2,3.1,2.3c-0.3,1.5-2.4,2.1-3.7,1.9c-3.6-0.6-5.5,1.4-6.9,3.8c-0.8,0.5,0.6,0.7,0,0.4c-0.2-0.1,0-0.2,0.3-0.4\n                        c3-2.4,5.2-0.2,7.5,1.3c1,0.7,0.7,1.9-0.3,2.5c-1.5,0.9-2.1,2.5-3,3.9c-0.8,1-1.2,2.1-1.5,3.3c-3.6,6.4-9.7,5.5-15,4.2\n                        c-5.3-1.3-10.7-1.9-16-2.8c-12.4-2.7-24.8-5.3-37.2-8.1c-1.9-0.4-4.6-0.3-5.1-2.3c-0.4-1.7,2.3-2.5,3.5-3.8\n                        C1888.3,486.3,1896.8,482.5,1902,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68131E"),
                d:
                  "M1921,507c7.8-1.5,15.1,2.5,22.9,2c3.6-0.2,6.3-1.1,7.1-5c1.3-1.2,3-1.3,4.6-1.4\n                        c3.8-0.4,5.1,1,3.7,4.5c-0.9,2-0.8,3.1,0.8,4.6c2,1.9,0.6,3.2-1.2,4.1c-0.7,0.3-1.5,0.4-2.3,0.5c-3.4,0.3-6.7-0.2-9.5-2.3\n                        c-6.5-2.4-13.2-4.1-20-5C1925.5,506.9,1922.5,509.1,1921,507z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1878.7,492.1c-2.8,1.9-2.1,4.5-3,6.5c-0.6,1.2-1.2,2.4-2.9,2.2c-1.9-0.2-1.7-1.7-1.8-3\n                        c0-1.3,0-2.6,0-4c0-2.6-0.3-5.6,3.5-2.1C1875.1,492.4,1876.7,492,1878.7,492.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1917,507.8c-1,0-2,0-3.2,0C1914.8,506.4,1915.9,507.4,1917,507.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("67131C"),
                d:
                  "M1953,469c-2.8-1.8-6.3-1.5-9.1-2.6c-2.9-1.2-5.8-0.9-8.6-1.8c-5-1.7-10-1-14.9-0.3\n                        c-2.4,0.4-4.1,3.7-7.4,2.7c1.3-1.3,2.7-2.7,4-4c1.4-4.1,4.4-5.3,8.5-4.8c3,0.3,5.7,1.5,8.7,1.8c8.2,2.7,17,3.1,25.1,6.2\n                        c1.4,0.5,3,0.6,3.9,2c-0.5,2.4-2.5,2-4.2,2.3C1956.9,470.4,1954.7,470.7,1953,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1934,461c-1.3,0-3,0.4-3.9-0.2c-5.2-3.5-9.3-1.5-13.1,2.3c-1.3-0.7-2.7-1.3-4-2c-1-4.1,2.1-2,3.7-2.7\n                        c5.3-2.5,11-0.1,16.3-1.4c2.2-0.5,2,0.8,2.1,2.2C1934.4,459.5,1934.3,460.3,1934,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1885.6,473.1c2,2,3.7,4.1,1,7.1c-1.1-1.6-1.8-3.7-5.2-3.5C1883.5,474.9,1884.7,473.9,1885.6,473.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("67131C"),
                d:
                  "M1913,467c-1.2,2.8-2.6,5.4-6,6C1907.7,469.7,1910.4,468.4,1913,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1910,462c0.4-0.8,1.2-1,2-1c0,1.4,0,2.8,0,4.3C1909.3,465,1911.8,462.4,1910,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1627"),
                d:
                  "M1888,523c-1.2-1.8-3.5-0.4-5.2-1.6c3.5-1.2,6.5,0.6,9.9,0.1c-0.9,2.1-2.4,2.3-3.8,2.5\n                        C1888.7,523.7,1888.3,523.3,1888,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852934"),
                d:
                  "M190,561c-3.7-0.5-7-4-10.9-0.9c-1.4-2,1.4-2.6,0.9-4.1c1.7-3.6,5.1-4.1,8.5-4.5\n                        c0.2,0.2,0.3,0.3,0.5,0.5c2.4,1.8,5,0.9,7.5,0.7c3.7-0.3,7.3,0.1,10.5,2.3c-1,1.3,0.1,2.9-0.1,4.1c-1.6,1.2-2.2-0.3-3.2-0.7\n                        c-0.9-0.3-1.7-0.2-1.9,0.8c-0.5,2.6-0.4,2.4-3.4,2.1C195.6,561,192.8,561.1,190,561z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72252D"),
                d:
                  "M194,551c-1.7,0.3-3.3,0.7-5,1l0,0c-2.1-1.5-5-1.4-7-1.1c-6.2,0.8-12-2.3-18.2-0.9\n                        c-2.8,0.6-6.4,0.4-5.4-4.5c1.3-2.1,3.7-1.6,5.6-2.5c1.6-0.5,3.3-0.9,4.9-0.5c9.2,2.1,18.6,3.2,27.9,4.4c1,0.1,1.9,0.5,2.3,1.6\n                        C198.3,551,195.3,549.2,194,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72252D"),
                d:
                  "M207,546c2.4-0.1,4.8,0.3,7-1c-3.2,3.8-7.1,5.3-12,4c-0.1-0.2-0.1-0.4-0.2-0.7\n                        C202.6,545.4,205.2,546.6,207,546z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2A32"),
                d:
                  "M194,551c0.7-3.2,3.2-1.6,5-2c1-0.4,2-1,3,0l0,0C200.1,553,196.6,550.2,194,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621823"),
                d:
                  "M202,549c-1-0.3-2,1.1-3,0c-7.5-2.2-15.5-1.9-23.1-3.7c-3.9-0.9-7.8-2.4-11.9-1.3c-0.2,0-0.4,0-0.7,0\n                        c-1.8-0.4-3.6-0.3-5.4-0.4c-2.8-0.2-5.5-0.7-8.3-1.3c-1.2-0.3-2.8-0.3-2.6-2.2c3.7-1,4-3.9,4-7c1.1-0.6,2.1-0.2,3.2,0.1\n                        c14.6,7.7,30.6,9.1,46.7,9.5c2.1,0.1,4.4-0.4,6.1,1.4c-0.1,0.7-1.1,1.3,0,2C205.8,547.7,202.7,546.4,202,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("500F1A"),
                d:
                  "M207,544c-13.4,0.9-26.6-1.3-39.6-3.7c-5-0.9-9.6-4.1-14.4-6.3c2.7-3.9,5.3-1.9,8,0\n                        c2.9,1.2,6.3-0.2,9,2c9.9,0.3,19.4,3,29.1,4.6c4.4,0.7,9,0.2,13.5,2.6C210.6,544.5,208.7,543.8,207,544z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111D"),
                d:
                  "M161,534c-2.7,0.4-5.3-2.6-8,0c-0.7-0.3-1.3-0.7-2-1c-0.4-1-1-1.6-2-2c-1-0.3-2-0.7-3-1\n                        c-1.9-3.3-6.9-2.9-8-7l0,0c-0.2-0.8-1-2.2,1-1.5c2.1,0.8,4.2,1.9,6.3,2.9c1.3-1.2-1-1.9-0.3-3.2c2.1,0.4,5-0.7,6,2.4\n                        c2,5.9,8,4.8,12.4,7.8C163.7,532.6,161,532.5,161,534z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111D"),
                d: "M170,536c-3-0.7-6.2-0.5-9-2C164,534.6,167.7,532.4,170,536z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d:
                  "M948,113c-3.8-0.3-7.5-0.5-11.2,0.8c-1.6,0.6-3.3,0-4.8-0.8c-0.8-3.4,1.2-2.5,3-2c1.3,1,2.7,0,4,0\n                        C941.9,111.9,945.7,109,948,113z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d: "M955,113c-1,0-2,0-3,0C953,109.9,954,111.4,955,113z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A84D55"),
                d:
                  "M2061,575c0.2,2.1-0.5,4.4,0.9,7.2c1.7-3.4,1.3-6.2,1.1-9c-0.1-2.1-0.4-4.5,3-4.2v0\n                        c0.8,1.7,0.4,3.6,1,5.3c-0.1,2.9-1,5.5-1.8,8.3c-1.5,5.6-1.7,10.8,3.5,14.8c0.9,0.7,0.6,1.9,1.3,2.6c0.3,0.4,0.6,0.7,1,1.1\n                        c-2.6,2.7-6.3,1.1-9.4,2.1c-1.5,0.5-3.3,0.3-4.9,0.8c-3.4,0.5-6.7,1.8-10.3,1c-2.4-1.1-5.4,0-7.7-2.5\n                        c7.3-4.1,5.1-10.3,3.7-16.4c-2-4,0.8-6.1,3.7-7.3c1.3-0.6,0.8-1.4,1.3-1.9c0.6-1.3,2-3.1,2.7-2.3\n                        C2053.8,578.5,2057.6,570.5,2061,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8595D"),
                d:
                  "M2070,600c-2.2-1.8-5.5-3.2-6.3-5.5c-2-5.7-0.2-11.6,1.5-17.2c0.3-1.1,0.8-2.1,0.7-3.3\n                        c0.4-0.9,1-1.6,2-2c0.3-0.3,0.7-0.7,1-1c-0.1,6.4,0,12.7-0.2,19.1c0,1-0.2,1.8,0.6,2.6C2071.4,594.9,2071.2,597.5,2070,600z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983F44"),
                d:
                  "M2057,602.9c4.5-1.7,9.3-1.6,14-1.9c0,1,0.1,2,0.1,3c-0.1,3.5-2.6,5.1-5.1,6.9\n                        c-0.3-0.3-0.5-0.7-0.6-1.1c0-0.5,0-0.9,0.1-1.3c0.3-1.3,0.5-2.6-0.9-3.5c-2.1-1.1-4.4-0.4-6.6-1.2\n                        C2057.6,603.6,2057.2,603.3,2057,602.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8595D"),
                d:
                  "M2073,563c-2.7-0.3-1.8-2.4-2-4C2073.7,559.3,2072.8,561.4,2073,563z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A25157"),
                d:
                  "M2068,572c-0.4,1-1,1.6-2,2c-1.1-1.7,0.3-3.3,0-5C2066.7,570,2067.3,571,2068,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M461,417c2.9,1.8,6.9,0.3,9.6,3.2c0.9,1,1.5-0.8,2.3-1.1c1.1,1.1,2.5,2.1,2.1,4\n                        C470.1,421.6,464.2,422.3,461,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671C2B"),
                d:
                  "M481,429c2.1,1,3,3.1,4,5c0.3,0.2,0.4,0.5,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3l0,0c-1.3,0-2-0.7-2-2\n                        c-1.7-0.3-2.7-1.3-3-3C480.3,429.6,480.7,429.3,481,429z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2C38"),
                d:
                  "M475,423c-0.6-1.4-2.2-2.2-2.1-4c0-0.4,0.1-0.8,0.1-1.2c1.9,1.7,3.4,3.7,4,6.2c-0.3,0.3-0.7,0.3-1,0\n                        C475.7,423.7,475.3,423.3,475,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671C2B"),
                d:
                  "M476,424c0.3,0,0.7,0,1,0c1.8,0.7,2.2,2.5,3,4C477.6,427.7,476.3,426.4,476,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M480,430c1,1,2,2,3,3c-2.3,1.3-3.7,0.8-4-2C479.3,430.7,479.7,430.3,480,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M460.7,421.4c1,0.1,1.2,0.9,1.2,1.8c0,0.6-0.2,1.5-1,1.4c-0.9-0.1-1.3-1-1.3-1.8\n                        C459.5,422,460,421.5,460.7,421.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M457.1,421.6c0.7,0.3,0.8,1,0.7,1.6c-0.1,0.6-0.1,1.5-1.1,1.2c-0.7-0.2-0.8-0.9-0.7-1.6\n                        C456.2,422.2,456.2,421.5,457.1,421.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d: "M455,416c2-1.3,3.6-0.6,5,1C458.3,416.8,456.4,417.7,455,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M479,431.1c-1.9-0.4-2.9-1.1-3.5-2.9C477.4,428.5,478.8,429,479,431.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M543,480c-1.2-3.5-8.6-8.1-12.2-7.7c-3,0.3-6.9,2-6.2-3.8c0-0.1-0.1-0.4-0.2-0.4\n                        c-2.9-0.8-4.5-5-8.4-3.1c-3.6-2.7-6-6.5-8.9-9.9c-1.2-1.4-2-3-4.1-3.1c-0.1-1.9-1.1-2.9-3-3c0.1-0.7,1.7-1.5,0.9-1.7\n                        c-3.1-0.9-4.2-4.1-6.9-5.3l0,0c-0.7-1.6-3.4-2.5-2-5c1.4,0,2.4-0.7,3-2c5.1-4.4,10.9-3.9,14.6,1.2c0.8,1.2,1.1,2.8,2.8,3.4\n                        c2.2-0.3,4.9,1.8,6.3-1.6c0.3-0.3,0.7-0.6,1.2-0.7c3-0.1,4.4,3,7.4,3.5c2.2,0.4,3.8,0.7,5.9-0.5c1.4-0.8,1.1-1.6,1.5-2.7\n                        c1.4-3.7,2.7-7.2,2.1-11.3c-0.2-1.1,1.2-1.9,2.5-1.9c2.4-0.1,1.9,2.1,2.7,3.5c0.5-2.4-0.8-4.8,0.9-6.8c1.5-1.1,2.5-0.3,3.3,1\n                        c-0.9-1.8-2-2.1-3.4-0.9c-2.6-1.5-2-3.6-0.8-5.4c1.1-1.7,1.1-4.9,4.5-4.1c1.4,0.3,2.9-0.7,4.3,0.1c0.4,0.3,0.9,1,0.7,1.2\n                        c-3.7,2.8-1.6,6.1-1,9.3c0.1-0.1,0-0.2,0-0.3c0.6-1.3,0.6-2.2-0.6-3.3c-1.3-1.2-1.1-1.5,1.7-1.9c0.9,0.9,1.9,1.1,3,0.8\n                        c-0.8-0.6-1.9,0.5-2.7-0.4c-1.7-1.5,1-4.1-1.4-5.4c-0.3-3.1,1.3-5.3,3.6-7.2c0.5-0.4,1.4-0.6,1.6-1.1\n                        c3.6-7.1,9.2-4.8,14.6-3.3c1.1,0.3,2.3,0.4,3.5,0.1c1-1.2,0-2.5,0.1-3.8c0.1-1,0-2,0.5-2.9c0.5-1,1.9-1.8,2.4-1.4\n                        c2.9,2.8,5.1-4.5,8-0.3c1.8,2.6,3.7,1.7,4.9-0.8c1.3-2.8,2.8-4.1,5.5-1.5c0.3,0.2,0.5,1.1,0.6,0.7c2-4.7,7.3-2.4,10.3-5\n                        c1-0.5,1.8-0.4,2.6,0.4c1,1,1.2,2.3,1.2,3.5c0.6-1.2,0.4-3.7,3.1-1.9c0.3,0.2,0.2,1,0.4,0.7c3.6-4.1,7.7-2.3,11.7-1\n                        c2.4,0.7,4.8,2,5.9-1.8c0.4-1.2,1.9-1.3,3-1.4c6.6-0.2,13.3-1.9,19.7-1.4c5.7,0.5,11.4-0.7,17.1,0.8c3.1,0.8,6.9-0.2,10.3,0.4\n                        c2,0.3,4,0.5,5.6,1.9c0.7,1.3-0.1,2-1.1,2.2c-1.6,0.3-3.1,1-3.5,2.4c-0.9,2.7-2.7,4.1-4.8,5.7c-1.9,1.5-3.2,3.3-4.7-0.1\n                        c-0.2-0.5-0.3-0.7-1-0.5c-2.6,0.6-4.6,4.7-3.2,9.1c0.4-6.1,3.8-6.6,7.7-6.6c4,0,5-3.9,6.8-6.3c3-4,3.3-4.3,6.4,0.3\n                        c2-0.5,3.1-2.2,4.6-3.3c2.1-1.5,3.9-1.4,4,1.6c0,1.4,0.3,2.8,1.5,2.6c3.5-0.7,4.5,1,4.6,4c0,0.6-0.3,0.2,0.1,0.4\n                        c4.8,2.7,9,6.2,13.8,8.9c0.8,0.4,2.7-0.4,3.1,0.8c0.8,2.4,2.5,4.1,4,6c0.3,0.4-0.4,1.2-1,1.5c-1.3,0.8-2.5,0.4-3.8-0.1\n                        c-1.8-0.7-1.2-2.9-2.7-3.8c3.7,7.8,3.7,8.9,0.3,11.5c3.5,2.7,8.2,0.6,12.2,2.3c0.3,0.3,0.6,0.7,0.8,1.1\n                        c-0.2,3.8,2.3,7.8,0.3,11.9c2.4-0.3,4.1,1,3.9,4.2c-0.1,1.7,0.5,3.2,1.9,4.4c1.3,1.1,1.3,2.6,0.8,4.1c-2.1,5.5-7.6,5.7-12,7.4\n                        c-2.4,0.9-2.9-2.2-4.7-3.2c1.6,2,1.6,3.7-1.2,3.6c-2.7-0.1-6.7,2.1-7.3-3.2c-0.1-0.9-0.7-1.5-1.8-1.2\n                        c-1.3,0.3-1.2,1.4-1.3,2.4c-0.2,0.4-0.5,0.8-0.9,1c-4.3,1.6-8.7,2-13.2,2.1c-1,0-2.1,0.3-2.9-0.2c-3.9-2.7-7.7-1.1-11.4,0.4\n                        c-3.5,1.4-5.4-0.4-7-3c-3-4.7-6.1-5.1-10.3-1.1c-3.6,3.4-8,3.2-12.1,2c-2.4-0.7-3.1,0-4.4,1.5c-3.7,4.3-4.5,4.4-9.8,1.3\n                        c1.8,2.9,1.7,4.8-1.9,5.2c-1.5,0.2-3,0.6-4.1,1.6c-3.2,2.8-6.5,3-9.9,0.5c-1.2-0.9-2.5-0.8-4.7,0.1c3.3-0.6,6.9,2.1,6.8,4.5\n                        c0,2.7-2.3,2.4-4.1,2.5c-1.8,0.2-3.7,0.2-5.5-0.2c-1.7-0.3-2.8-1.3-2.4-3.1c0.3-1.4,1.4-3.1-0.9-3.7c-1.8-0.5-4.3-1.9-5.6,0.1\n                        c-3.3,4.8-9.4,4.5-13.5,7.9c-1.2,1-3.1,1.3-4.3,0.4c-3.1-2.4-5.7-1.2-8.6,0.3c-1.6,0.9-4.9-0.3-3.6,3.7c0.3,1-1.7,1.3-2.8,1.2\n                        c-3.9-0.6-7.4,0.5-11.2,1.3c-3.4,0.8-7.9,1.2-10.9-0.2C547.7,480.7,544.5,483.3,543,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("440F17"),
                d:
                  "M492,437c0.7,1.7,1.3,3.3,2,5c-3.8-1.3-4.6-6.5-9-7c0-0.3,0-0.7,0-1C488.3,432.7,490,435.3,492,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("280D10"),
                d:
                  "M170,320c2.8-2,6-0.5,9-1c1.5-1.2,3.5,0.2,5-1c1.3,0,2.6,0,3.9-0.1c1.8-1.2,3.5-1.5,5.2,0.2\n                        c0.2,0.5,0.1,1-0.4,1.4c-2.5,1.6-5.2,2.8-8.4,3c0.6,1.6,2,2.6,1.6,4.2c-0.5,2.7-2.9,4.2-4.2,6.5c-1.1,1.5-2.1,3-3.2,4.5\n                        c-3,4-5.3,8.6-8.5,12.5c-0.9,1.1-0.7,2.4-0.7,3.7c-4.8,2.8-9.1,7-15.4,4.8c-0.2-2,1.2-3,2.4-4.1c4.7-4.3,8-9.7,11.2-15.1\n                        c2.4-5.1,5.7-9.5,9.6-13.8c-2-0.8-3.4-0.2-4.9-0.1c-1.7,0.1-3.6,0.3-3.8-2c-0.2-2.2,1.6-2.6,3.4-2.6c0.5,0,1,0,0.8-0.1\n                        C172.2,320.8,170.8,321.2,170,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("623235"),
                d:
                  "M179,306c12.6,0,25.3,0,37.9,0c3.1,0.8,6,0.4,9.1,0c3.4-0.5,7.1-1.7,10.1,1.5\n                        c-3.4,3.4-7.6,1.7-11.4,1.6c-1.6-0.1-1.6,0.7-2.1,1.4c-2.9,1.5-6.1,0.7-9.1,0.9c-2.6,0-5.1,0.4-7.7,0.1\n                        c-5.6,0-11.2-0.4-16.8,0.8c-2.1,0.5-4.3,0.5-6.1-1.2c-6.5-1-12.8,1.3-19.3,1c-2-0.1-4,0.1-5.7-1.1c3.6-4.2,8.2-4.2,13-3\n                        c0.7,0,1.3,0,2,0C174.7,306.3,177.1,307,179,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("854A50"),
                d:
                  "M183,311c8-0.1,16-1.6,24-0.9c-0.7,3.1-3.5,2.8-5.6,3c-4.1,0.5-8.2,1.1-13,2.4c3.6-0.3,6.6-2.1,8.8,1\n                        c-2.8,3.2-6,0.4-9.1,0.6c-2.3,0-4.6-0.1-6.9-0.1c-4.5,0-9.2,0.8-13-2.9C173.2,313.9,178.6,314.4,183,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("210A0B"),
                d:
                  "M171,308c-4.4,0.6-8.9,1-13,3c-0.3,0-0.6,0-1,0.1c-2.7,0.6-5.4,1-8.1,1.9c-1.6,0.4-3.3,0.7-4.9,1.1\n                        c-0.7-0.1-1.6,0.1-1.9-0.3c-1-1.2,0.4-1.8,1-2.2c4.6-2.6,9.2-5.5,14.9-4.6c0.3,0,0.7,0,1,0c4-0.8,8-0.8,12,0\n                        C171,307.3,171,307.6,171,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B1117"),
                d:
                  "M188.1,317.1c3-0.3,6.1,0.6,9-1c4.6-2.7,9.9-1.9,14.9-2.5c2.3-0.3,4.6,0,6.9,0c2.4,0.2,5-0.5,7.3,1.9\n                        c-3.4,2.9-7.3,2.5-11.2,2.7c-2.7,0.2-6.1-1.6-8,2c-0.6,0.5-1.3,0.7-2.1,0.9c-4.1-0.2-7.9-1.8-12-2.1c-1.4-1.7-3.4-0.7-5.1-1\n                        C188,317.7,188,317.4,188.1,317.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("623235"),
                d:
                  "M148.9,312.9c2.4-1.7,5.2-2.1,8.1-1.9C154.5,312.5,151.8,313.1,148.9,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B1117"),
                d:
                  "M184,318c-1.4,1.6-3.3,0.7-5,1c0-0.3,0-0.6,0-0.9C180.7,318.1,182.3,318,184,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("0B0506"),
                d:
                  "M170,320c2.4,0.2,4.9-0.5,7.6,0.6c-1.4,2.3-3.6,1-5.3,1.4c-1.2,0.3-3.1-0.4-3,1.6\n                        c0.2,2.1,1.8,1.1,3.1,0.8c2.2-0.5,4.5-0.6,7.4,0.1c-4.8,4.9-8.1,10.3-11.8,15.5c-2.6,2.6-3.4,7.2-8.2,7.4\n                        c-2.7-1.8-5.4-0.8-8.2-0.1c-6.3,1.7-6.7,1.6-10.6-3.8c-0.5-0.7-1.2-1.1-1.9-1.5c-4.2-2.3-4.2-3.7-0.2-7l0,0\n                        c5.5-1.1,11.2-0.1,16.7-0.6c0.4,0,3,0.8,1.2-1.4c-8.7,0.3-17.1-1.1-25-5c-0.8-5.3,2.1-6.4,6.7-7.1\n                        C149.2,319.2,159.6,320.9,170,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("250E0F"),
                d:
                  "M139,335c-1,2.4-5.5,5.9,1.8,5.7c1.3,0,1.1,0.9,1.4,1.6c2.2,5.2,3.2,5.4,8.8,4\n                        c2.8-0.7,6.4-3.6,9.1,0.7c-3.4,2.1-7.4,0.5-10.2,1.6c1.7,0.2,4-0.7,6.3-0.5c3.3,0.2,4.5,2.2,2.4,4.4c-2.8,2.9-5.2,6.5-9.5,7.5\n                        c-3.7,0.2-5.9,4-9.9,4.1c-3.9,0.1-6.4-0.4-5.1-5.1c-2.3-4-2.3-8,0-12c-0.3-1.4-0.7-2.9-1-4.3C131.6,336.2,132.5,335,139,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A2529"),
                d:
                  "M134,347c0,4,0,8,0,12c-3.9,0.3-4-2.3-4-5.2c0-2.1,0.9-5-3-4.8c0-0.3,0-0.7,0-1\n                        C129.4,348.3,131.7,347.6,134,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79333B"),
                d:
                  "M130,328c0.3,0,0.6,0,0.9,0.1c2.6,4-0.5,7-1.6,11.2c-2.4-2.8-3.1-4.9-0.8-7.3\n                        C129.6,330.9,130.1,329.6,130,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("250E0F"),
                d:
                  "M157,333c1.7,0.2,3.6-0.5,6.2,1.2c-8.6,1.5-16.4,0.5-24.2,0.8c3.2-2,6.7-0.5,10-1\n                        C151.6,333.6,154.5,335,157,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24E59"),
                d:
                  "M190,303.9c-1.1-1.3-2.7-0.7-4-0.9c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c0.3,0,0.7,0,1,0\n                        c3.1-2.5,6.7-1.3,10.1-1.5c3.2-0.2,6.3,0.1,9.5,0.1c4.5-0.1,8.9,0,13.4-0.1c1.2,0,2.8-0.6,3,1.5c1.5,2.2,4.5-0.1,6,2\n                        c0.3,0.5,0.3,1-0.2,1.4c-1.4,0.7-2.6,0.6-3.9-0.3C213.3,304.7,201.6,304.3,190,303.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1B23"),
                d:
                  "M224.9,305.1c1.4-0.1,2.8-0.2,4.1-0.2c6.6-1.5,13.1-0.4,19.6,0.9c1.7,0.5,3.2,1.2,4.1,2.9\n                        c0.6,4.6-1.8,3.7-4.4,2.3c-4-1.4-8.6-0.2-12.2-3.1c-4.2-2-8.7-0.4-12.9-1c-2-0.3-4.3,0.8-6.1-1\n                        C219.6,305.6,222.4,306.9,224.9,305.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3D1E1F"),
                d: "M171,307c-4,0-8,0-12,0C163,305.4,167,305.4,171,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3D1E1F"),
                d:
                  "M179,306c-1.8,1.4-3.8,1.9-6.1,1.9c-0.3-1-0.5-2,1.1-1.9C175.7,306,177.4,306,179,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("40171D"),
                d:
                  "M154,358c0.4,0.3,0.9,0.9,1.2,0.8c4.8-1.5,9.6-3,13.8-5.8c1.4-2.7,4.6-3,6.7-4.8\n                        c2.7-1.4,5-3.5,7.8-4.6c5-2,9.3-5.3,14.2-7.7c6.1-2.9,11.8-6.5,17.6-9.8c3-2.3,6.6-3.5,9.4-6c1-0.9,1.6-1.5,1.1-2.8\n                        c4.3-2.7,8.9-2.6,13.6-1.4c0.2,0.2,0.5,0.7,0.4,0.8c-0.9,1.2-0.5,2.2,0.3,3.2c-0.5,1.2-1.5,1.7-2.7,1.8\n                        c-1.9-0.2-3.9-0.3-5.4,1.3c-3.6,2.9-7.3,6.4-11.5,7.6c-4,1.2-6.3,4.1-9.5,6c-7.1,4.4-14.9,7.5-22.3,11.3\n                        c-5,1.2-9.4,3.9-13.9,6.3c-6.2,3.3-12.7,6.2-19.1,9.2c-0.6,0.3-1.7,1.4-1.9-0.3c0-0.3,0.6-0.7,0.9-1.1c-0.1-1.6-1.6,0.1-2-0.9\n                        c-0.3,0-0.7,0-1-0.1c-0.3,0-0.7,0-1,0C150.9,358.8,151.9,357.9,154,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3E1B1F"),
                d:
                  "M154,358c-1.4,0.6-2.3,1.6-3,3c-0.7-0.3-1.3-0.7-2-1c2.4-2.2,4.8-4.5,7.3-6.6c1.2-1,2.7-1.9,2.1-3.5\n                        c-0.5-1.6-2.3-0.8-3.5-0.9c-2.6-0.1-5.2,0-7.9-0.4c4.3-0.6,8.5-2,13-1.7c3.8-1,4.6-5.5,8-7C165.1,347.3,160.2,353.2,154,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B4649"),
                d:
                  "M152,361.9c-0.4,2.2-3,1.6-4,3.1c-1,0.5-1.7,1.6-3,1c-0.8,0-1.6-0.2-2-1\n                        C145.6,363,148.8,362.4,152,361.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E3238"),
                d:
                  "M188.9,347.9c6.4-5.8,14.7-7.9,22.1-11.9c2.7-1.6,4.7-4.9,8.7-3.5c1.5,1.8-0.1,2.7-1.1,3.8\n                        c-0.8,0.6-1.6,1-2.5,1.5c-7.8,3.1-14.3,8.5-21.8,12.1c-1.1,0.6-2.2,1.1-3.3,0.1C190.3,349.3,189.6,348.6,188.9,347.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3F1119"),
                d:
                  "M191,349.9c1-0.3,2-0.6,3-1c2.3,0.8,1.4,2,0.1,2.8c-2.1,1.3-4.2,2.6-6.4,3.7\n                        c-7.2,3.6-14.3,7.6-21.6,10.9c-1.6,0.7-3.2,2-5.1,0.6c-0.7-1.2-1.9-0.9-3-1c7.4-3.4,14.8-6.6,22.2-10.1\n                        C183.9,354.1,187.4,351.9,191,349.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B4649"),
                d:
                  "M153,361.1c1.4,0,2.6-1.4,4.2-0.8c-0.4,1.2-1.5,1.3-2.2,1.8C154.2,362,153.5,361.9,153,361.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3F1119"),
                d: "M158,366c-1.3,1.6-3,2.1-5,2C154.3,366.5,156,365.9,158,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("40171D"),
                d: "M145,366c1-0.3,2-0.7,3-1C147.4,366.7,146.6,367.5,145,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("571122"),
                d:
                  "M161,367c11.7-4.3,22.2-11,33.3-16.4c0.7-0.3,0.3-1.1-0.3-1.6c7.4-3.9,13.8-9.7,22-12\n                        c0.5,2.3-1.2,3.3-2.8,4c-2.8,1.3-5.3,3.2-7.8,5c-1.3,2.8,1.6,4,2.3,6c1.1,2.4,3,4.5,2.7,7.4c-3.5,3.5-8.5,2.9-12.7,4.5\n                        c-5.6,2.1-11.5,2.9-17.2,4.7c-1.2,0.4-2.3,0.7-3.5,1.1c-1.4,0.4-2.8,0.9-4.1,1.4c-7.1,2.6-14.5,4.1-21.4,7.4\n                        c-2.5,1.3-4.7,1.4-6-1.7c-0.5-1.2-1.6-2-2.6-2.9c-0.3,0-0.7,0-1,0C148.4,371.8,154.9,370,161,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("65262D"),
                d:
                  "M143,374c2.3-0.8,3.9,2.1,3.9,2.4c0.2,3.9,2.6,1.5,4.1,1.6c0.9,1,0.8,2,0,3c-0.3,0.9,0.7,2.6-1.5,2.2\n                        c-1.8-0.3-2.7,0.1-1.3,2c0.6,0.9,0.1,1.8-0.9,1.6c-6.7-1.6-3.6,3.6-4.3,6.1c-0.8-0.3-1.9,4.5-2.7-0.3\n                        c-0.4-2.5-1.4-5.4-4.3-6.7c0.1-1.1,0.2-2.2,0.3-3.4c0.1-2.9-0.5-6.4,4.4-5.7C142.8,377.2,143,375.6,143,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95303C"),
                d:
                  "M1898,623c-1.1,2.7-4.9,1.3-6,4c-0.5,0.6-1.2,0.7-1.9,0.5c-2.4-1.2-0.8-3.9-2-5.4c0-0.3,0-0.7,0-1\n                        c2.3-1.2,4.9-2,5.3-5.3c0.2-1.6,1.6-1.2,2.7-0.7c0,0,0.1,0.1,0.1,0.1c1.3,2-0.2,3.4-1,5c-0.2,0.2-0.4,0.4-0.5,0.7\n                        c-0.2,0.4-0.1,0.6,0.2,0.3c0.4-0.3,0.9-0.4,1.4-0.3C1897.2,621.2,1897.3,622.3,1898,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33845"),
                d:
                  "M1861,593c1.2-1.8,2.5-4.1,5-2.3c3.4,2.4-0.5,4.5-0.3,7.7c-2-2.1-2.3-3.8-2.7-5.5\n                        C1862.3,593,1861.7,593,1861,593z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3643"),
                d:
                  "M1888,622c3.6,0.5,0.6,3.6,2,4.9c-0.4,0.9-0.9,1.6-2,1.1C1882.9,626,1885.9,624,1888,622z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3A48"),
                d:
                  "M1888,628c0.7-0.4,1.3-0.7,2-1.1c0.7,0,1.3,0,2,0c0,2.3,0,4.6,0,7c-2.2-1,0.1-5.5-4-5\n                        C1888,628.7,1888,628.3,1888,628z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33845"),
                d:
                  "M1863.2,600.5c-1.1,0.6-2.1,0.6-3.4,0C1861,599.8,1862.1,599.7,1863.2,600.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2C37"),
                d:
                  "M1928,555c4.2-2.5,4.7-6.9,6-11c1.3-1.4,3-2.2,4.9-2.7c1.3,0,2.3,0.4,3.2,1.4c0.5,0.9,0.1,1.9-0.1,2.8\n                        c-1.3,6.3-3.7,12.1-8.1,16.9c-1.7,1.8-0.3,5.1-2.8,6.6c-3.1,3.5-4.7,9.7-11.7,6.8c-0.2-0.1-0.7,0.5-1,0.8\n                        c2.7,2.6-3.2,5.3,0.2,8.5c1.3,1.2-1.3,3-2.9,3.7c-1.5,0.7-2.5-0.2-2.6-1.9c0-0.9-0.1-1.9-0.2-3.4c-1.4,2-2.4,3.4-3.5,4.8\n                        c-0.8,1-0.9,1.1,0.6,1.7c1.3,0.5,1.1,3-0.6,2.7c-2.5-0.5-2.2,1.4-3.1,2.2c-1.5,1.3-6.3,0.3-7.2-1.6c-0.1-0.2,0.6-0.7,0.9-1.1\n                        c0.4-3.8,4.3-4.2,6.4-6c3.4-3,6-6.3,8.1-10.1c0.8-1.4,1.9-1.6,3.1-2.2c1.7-0.7,1.7-3,3.5-3.7l0,0c0.4-3.3,1-6.3,4.1-8.4\n                        C1927.3,560.2,1926.3,556.9,1928,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("98343F"),
                d:
                  "M1931,569c1-3.3-0.4-7.7,4.7-9.1c0.4-0.1,0.3-2.1,0.3-3.3c0.1-1.6,0-2.9,2.2-3.8\n                        c3.2-1.4,1.1-5.5,2.9-7.9c5.5-1.6,9.8,1.1,13.9,3.9c1.8,1.2,1.1,3.6,0.1,5.4c-0.8,1.4-2.5,2.2-2.6,4c-0.1,0.5-0.2,1-0.3,1.5\n                        c-1.6,3.8-5.2,6.1-7.5,9.5c-2.3,2.4-4.2,5.4-7.6,6.7c0.1-1.6-0.2-3-1.6-4c-0.8-0.6-1.6-1.2-2.3,0.3c-0.4,0.8,1.3,2.8-0.9,2.4\n                        c-1.9-0.3-0.2-1.9-0.5-2.9C1931.5,570.9,1931.2,570,1931,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92182A"),
                d:
                  "M1898,623c-0.7-0.7-1.3-1.3-2-2c2-4.9,5.8-8.2,10-11.1c0.8,0,1.5-0.1,2-0.9c4.8-2.1,7.7,2.2,11.4,3.6\n                        c2,0.8,3.8,2,5.8,2.7c4.4,3.1,9.6,3.8,14.7,4.7c1.7,0.4,3.1,1.3,5,1c1.5-0.3,2,0.6,1.1,2c-1.2,0.3-1.8,1.7-3.5,1.3\n                        c-7.4-1.6-12.6,0.7-16.5,6.7c-0.2-0.8-0.5-2.1-1.3-1.3c-1.2,1.1-1.8,3.3-3.7,1.9c-2.3-1.6,1.4-2.7,0.9-4.1\n                        c-0.7-2,1.2-2.9,0.7-4.4c1.8-0.5,2.7,0,3.5,1c-0.7-1.1-1.7-1.6-3.5-1c-2.4,0-5-0.4-7.8-1.6c-2.3-0.9-5.3-3.4-7,1.3\n                        c-0.5,1.6-1.4,0.2-2.1-0.4C1905,621.9,1899,622.5,1898,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33E48"),
                d:
                  "M1937,576c1.7-3,4.6-4.8,7-7c1.2,0.1,2.8-1.1,3.4,0.7c0.6,1.8,0.9,3.8-0.6,5.5\n                        c-2.5,2.9-5.3,5.7-6.9,9.3c-0.2,0.4-0.5,0.7-0.8,1.1c-1.2,0.9-2.4,1.8-3.1,3.2c-0.2,0.4-0.4,0.8-0.7,1.1\n                        c-1.1,1.5-2.4,2.7-4.4,2.5c-1.9-0.6-3.2,0.5-4.1,1.9c-1.9,3.2-4.6,3.7-7.8,2.8c3.5-6,9-10.4,13.4-15.6\n                        C1933.9,579.6,1934.1,576.6,1937,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93D4B"),
                d:
                  "M1919,597c4.1-0.1,6.5-3,9.1-5.6c1.1-1.1,2.5-2.1,2.9,0.6c-0.9,3-2.9,5.6-3.3,8.9c-0.5,1-1,2-2.2,2.3\n                        c-0.3-0.1-0.5-0.3-0.6-0.4c0.1,0.1,0.3,0.3,0.6,0.6c0.5,1.1,0.1,2.2,0,3.2c-0.1,1.7-0.1,3.4,0,5.1c0,1.5,0.8,3-0.4,4.3\n                        c-2.4,0.4-3.8-1.9-6-2.2c-0.4-1.1,0.4-1.8,0.6-2.8c0.8-3.6-0.9-5.2-4.6-4.2c-1.6,0.4-3.1,1.9-5,0.9c-0.2-0.1-0.2-0.5,0-0.9\n                        c1.4-2.6,2.7-5.3,6-6c1.1-0.7,1.7-1.8,2-3C1918.3,597.6,1918.6,597.3,1919,597z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1727"),
                d:
                  "M1918,574c-1.2,1.1-2.5,1.9-3.4,3.7c-3.1,6.4-9,10.3-14.6,14.3c-4.3,0.2-8.6,0.3-12-3\n                        c-1.5-0.6-3.7-0.5-3-3.2c0.7-0.4,1.4-0.4,2,0.2c2.2-1.8,4.6,0.1,6.1,0.7c4.3,1.7,6.4,1.6,9.7-2.3c0.3-0.4,0.8-0.8,1.2-0.8\n                        c6,0.1,6-4.6,7.1-8.5c0.2-0.6,0.7-1,1.1-1.5c1.8,1.2-0.4,2.5,0.4,3.7c2-0.2,1-2.7,2.5-3.2C1916,573.3,1917,573.3,1918,574z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2735"),
                d:
                  "M1885,586c1,1,2,2,3,3c-1,1.1-1.9,2.2-2.9,3.4c-4-4.7-10-7-13.1-12.4c-1-1.7-1.8-3.5-4-3.9\n                        c0.4-1.7-1.4-1.9-2-3c0-1.3,0-2.7,0-4c2,2.1,4.3,3.8,6.9,5c1.4,0.5,1.4,2,2,3c0,0.3,0,0.6,0,1\n                        C1878.4,580.6,1882.5,582.3,1885,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73844"),
                d:
                  "M1910,607c1.4,1.1,2.4-0.3,3.5-0.7c2.4-0.9,4.8-2.6,6.9,0.4c1.9,2.8,1.2,5.2-1.2,7.2\n                        c-3.6-1.8-6.8-4.6-11.1-4.8C1908.3,608.1,1909,607.4,1910,607z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1724"),
                d:
                  "M1906,610c-2.8,4.2-6.8,7.3-10,11.1c-0.3,0.3-0.7,0.6-1,1c-1.7,0-1.7-0.8-1-2c0.7-1.7,1.4-3.3,2-5\n                        C1899.3,613.1,1900.8,607.9,1906,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33E48"),
                d:
                  "M1918,598c1.4,2.4,0.4,3.2-2,3C1916,599.6,1916.7,598.6,1918,598z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74751"),
                d:
                  "M935,111c-1.5,0-2.9,0-3,2c-2,0.1-3.7-0.4-5-2C929.7,112,932.3,108.4,935,111z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64650"),
                d: "M805,111c-1,0-2,0-3,0C803,107.9,804,109.4,805,111z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44D57"),
                d:
                  "M578,154c-0.3-2.9,1.8-2.9,3.8-3c3.3-0.1,6.3,0,7.2-4.5c0.8-4,5.4-2.5,7.8-3.1\n                        c6.7-1.7,13.7-3.5,20.9-2.5c1.6,0.2,3.3-0.2,4.6,1.2c0.8,0.8,2.2,1.4,2.9,0.1c0.4-0.9,0-2.3-1-3.1c-1-0.8-3.6-1.1-1.1-3.2l0,0\n                        c10.9,3.1,20.2-2.8,30.3-4.9c6.2-1.3,12.6-2.5,19-3.3c6.7-0.9,13.3-2.4,20.2-2.2c3.7,0.1,5.5-3.5,8.6-4.6c0.7,0,1.3,0,2,0\n                        c2.7,3.8,7,1.3,10.3,2.6c1.4,0.6,3.3,0,4.8,0.5c0.4,0.2,0.8,0.5,1.1,0.8c0.4,3.3-2.4,2.9-4.2,3.4c-4.2,1.2-9,0.4-12.7,3.5\n                        c-4.5-0.1-8.8,0.8-13,2.7c-2.8,1.3-6.1,1.6-9.3,1.4c-3-0.1-6-0.1-8.6,1.9c-1.4,1.1-2.9,1.4-4.5-0.1c-0.4-0.4,0.8-1.6-0.1-0.7\n                        c-3.4,3.4-7.5,3.1-11.7,3.1c-6.7,0.1-13,2-19.5,3.1c-6.5,1.1-13.1,1.9-19.2,4.2c-3.8,1.4-6.9,1.6-10.5,0\n                        c-1.3-0.6-2.6,0.4-3.6,1.2c-1.9,1.5-4.2,1.9-6.5,2c-1.3,0-2.8-0.4-3.8,0.7C587.9,155.5,582.9,154.4,578,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4A54"),
                d:
                  "M701,121c-2.9,5.1-7.3,6.2-12.9,6.1c-7.9-0.1-15.7,1.3-23.1,4c-0.8,0.3-1.5,0.3-2.3,0.3\n                        c-6.9-0.4-13.2,2.1-19.7,3.9c-0.5,0.1-1.2-0.1-1.4,0.1c-6,6.7-12.3,1.6-18.5,0.6c1.6-4,5.3-1.8,7.9-2.3\n                        c4.4-0.8,8.8-0.7,12.9-3.6c2.8-2,7-1.5,10.6-0.7c1.4,0.3,2.9,0.6,3.7-0.6c2.7-4.3,7.3-3.5,11-3.6c5.1-0.2,10.2-1,15.3-0.3\n                        c3.6,0.5,6-3.2,9.7-3.3C696.4,121.6,698.7,121,701,121z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4A51"),
                d:
                  "M743,117c1.9,4.2-1.1,4.1-3.6,3.9c-3-0.2-4.9,0.6-4.4,4c-0.5,0.6-1.2,0.7-1.9,0.7\n                        c-2.4-1-7.1,0.8-6.1-4.7c-2.1-3.3-0.8-4.1,2.6-4C734,117.1,738.5,117,743,117z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4A51"),
                d:
                  "M719,125c-4.6,0.6-9.1-0.8-13.7-0.1c-2.8,0.4-2.2-2.2-2.3-3.9c3.5-0.8,7.2-0.1,10.8-1.8\n                        c1.3-0.6,4.4-1.5,5.2,1.8C720,122.3,720.2,123.7,719,125z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24C56"),
                d:
                  "M719,125c0-1.3,0-2.7,0-4c2.7,0,5.3,0,8,0c1.1,2.7,3.8,3,6,4C728.3,128,723.7,127.6,719,125L719,125z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74551"),
                d: "M587,141c-1.3,3-2.7,0.7-4,0C584.3,141,585.7,141,587,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74551"),
                d: "M597,139c-1,3.1-2,1.6-3,0C595,139,596,139,597,139z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984A4E"),
                d:
                  "M1996,354c-0.3,0.7-0.7,1.3-1,2c-0.5,0.6-1.2,0.9-2,1c-7.1-1.8-13.8-4.5-20.2-7.9\n                        c-1.7-0.9-3.3-1.4-5.1-1.4c-1.7-2.5-4.4-2.3-7-2.4c-3.4-3-8-3.6-11.8-5.9c-0.3-0.5-0.2-0.9,0.1-1.3c1,0,2,0,3,0\n                        c6.9,0,12.7,3.4,18.8,6.1C1979,347.8,1987.3,351.5,1996,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("995052"),
                d:
                  "M1949,338c0,0.3,0,0.7,0,1c-1,1.2-2.4,1.2-3.8,1.2c-0.8,0-1.6-0.2-2.3-0.5c-2.4-1.7-5.1-2.2-7.8-2.9\n                        c-3.1-0.8-6.5-1.2-8-4.8c0.7,0,1.3,0,2,0C1936.5,331.2,1942.2,336.3,1949,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1416"),
                d:
                  "M1999.1,388.9c-1.1-0.5-4.6,2.9-3-1.9c0.7-1.1,1.9-1.4,2.9-2c6.4-3.4,13-6.1,19.6-9.1\n                        c2.6-0.6,4.9-2.1,7.4-2.9c1-0.1,2,0,2.8,0.7c0.4,0.1,0.8,0.1,1.2,0.2c-0.1,2.2-1.9,2.4-3.4,3\n                        C2017.4,381,2008.3,385,1999.1,388.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2047,386c1.7,1,3.3,2,5,3c-3.4,1.7-5.1,0.1-6-3C2046.3,386,2046.7,386,2047,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24A4F"),
                d:
                  "M1993,356c0.7,0,1.3,0,2,0c8.2,2.5,15.1,7.9,23.7,9.6c2.5,0.5,4.9,2.7,6.3,5.3\n                        c-1.8,1.5-3.4,0.2-5.1-0.4c-6.7-2.5-13.2-5.4-20-7.5c-2.5-1.3-5.5-1.7-7.4-4C1992.1,357.9,1992.2,356.9,1993,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD7277"),
                d:
                  "M2000,361.9c8.7,2,16.5,6.4,25,9c1,1.3,3.9,0.2,3.8,2.9c-0.9,0-1.8,0-2.7,0c-2.4,0-4.6-1.1-6.8-1.9\n                        c-5.1-2.2-10.5-3.6-15.6-5.8c-1.8-0.8-3.9-1-5-3C1998.8,362.2,1999,361.6,2000,361.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76C76"),
                d:
                  "M1374.8,282.9c4.3-0.2,8.3,2.1,12.8,0.7c2-0.6,4.7,1.3,7.1,1.3c10.8,0.3,21.7-1.4,32.2,2.1\n                        c-1.1,1.5-2.6,0.8-4,1c-1.7,5.3-6.6,8.5-12.1,9.5c-5.8,1.1-11.1,0.1-16.7-1.2c-4.6-1.1-9.5-0.9-14.3-0.6\n                        c-1.8,0.1-3.6,0.7-5.2-0.7c-1.2-1.1-1.4-2.8-2.8-4c1.1,1.2,0.9,2.1-0.1,3c-2-0.3-2.3-1.6-1.9-3.2\n                        C1371,287.8,1373,285.4,1374.8,282.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36570"),
                d:
                  "M1369,280c0.6,3.5,3.1-1,4.1,1c-0.2,1.3-0.7,2.3-1.8,3.1c-3.8,4.9-10.3,4.3-15.1,7.4\n                        c-2.8,1.8-5.1-0.5-5.7-4.8c-1.8,0-3.3,1.6-5.2,1.2c-4-1.2-7-4.3-10.6-6.2c-6.4-4.6-13.2-8.6-19.7-13.1\n                        c-1.1-0.7-2.4-1.2-2.4-2.8c1.3-2.4,3-1.6,4.6-0.6c5.8,3.8,12.8,5.9,18.1,10.4c5.8,4.9,11.9,5.5,18.9,4.2\n                        C1359,279,1364,280.4,1369,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF6C76"),
                d:
                  "M1345.1,287c2.8,0.2,5-3.8,8.2-1.4c0.8,1.7-3.3,2.6-0.8,4.5c1.9,1.4,3.5,0.7,5.3-0.7\n                        c2-1.6,4.3-3,7.2-2.5c1.7,0.3,2.9-0.4,3.5-2c0.6-1.6,1.6-1.4,2.7-0.8c-3.1,4.7-6.2,9.3-9.2,14c-1.2,0.8-2.3,0.3-3.4-0.3\n                        c-3.6-2.4-7-5.1-10.7-7.2C1346.6,289.8,1344.6,289.3,1345.1,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA6D77"),
                d:
                  "M1369.9,290.8c0.7,1.1,1.4,2.2,2.1,3.2c0.1,0.2,0.2,0.4,0.2,0.6c-1.7,3.5-5.2,5.2-7.6,8\n                        c-1-0.1-1.9-0.4-1.7-1.7C1364.9,297.3,1367.2,293.9,1369.9,290.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73383C"),
                d:
                  "M1359,297c1,0.4,2,0.8,3,1.2c0,0.6,0,1.2,0,1.8c-2.8,2.5,1,3.1,1.3,4.7c-0.2,0.5-0.5,0.9-0.9,1.1\n                        c-2,0.8-4.1,0.7-6.2,0.4c-1-0.2-2-0.5-2.4-1.7c0.5-1.6,2.3-2.6,2-4.5C1356.2,298.3,1356.1,296,1359,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("461214"),
                d:
                  "M1362.9,304c-1.8,0-4,0.3-4.3-2.2c-0.2-2.4,2.6-0.6,3.3-1.9c0.3,0.4,0.6,0.7,0.9,1.1\n                        c0.3,1,1.2,1,2.1,1c0.4,0.4,0.5,0.8,0.4,1.4C1364.8,304.5,1364,304.8,1362.9,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C6525C"),
                d:
                  "M272,303c1.1-1.4,2.7-0.9,4.2-1c7.3-0.1,14.5,0,21.7-2.7c3.8-1.4,8.7-0.2,13,0.2\n                        c2.7,0.2,5.5,1.3,8.1-0.5c8,0,16,0,24,0c7.6-0.3,15.3-1.5,23-0.2c0.8,0.1,3-1.3,4.7-1.3c7.6,0,15.2,0.2,22.8,0.9\n                        c8.1,0.7,16.2,0.1,24.2-1.6c0.5,0.3,0.9,0.8,1.1,1.4c0.2,1.3,0,2.5-1.1,3.4c-6.7,1.6-13.5,1.6-20.2,1.8\n                        c-14.4,0.3-28.9-0.3-43.3,1.2c-8.5,0.8-16.9,0.9-25.3,0.8c-3.9-1.4-7.8-0.2-11.8-0.1c-13.8,0.3-27.7,1.1-41.5-0.8\n                        C274.3,304.2,272.9,304.1,272,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB4956"),
                d:
                  "M303,289c21.4,0.2,42.6,3,64,3c0.5,1.1-0.2,1.5-1,2c-10.9,0.6-21.7-0.9-32.5-1.9\n                        c-5.9-0.6-11.9-0.5-17.8-0.9c-11.7-1-23.4-0.9-35.2-1.2c-2.6-0.1-5.1-0.6-7.5-1.7C283,288.4,293,287.4,303,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4651"),
                d:
                  "M418,297c-3.3,4.3-8.3,2.3-12.2,2.7c-10.7,0.9-21.4-0.5-32-1.5c-5.2-0.5-10.4,1.3-15.7,0.8\n                        c-5-0.4-10-0.1-15-0.1c0.7-0.9,1.7-1,2.7-1c9.5,0.5,18.8-1.7,28.3-1c0.4-0.4,0.9-0.7,1.4-1c2.5-0.7,5.1-0.2,7.6-0.5\n                        c10.9,0,21.8,1,32.7-0.3C416.8,295.4,418.1,295.3,418,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF4551"),
                d:
                  "M375,297c-0.3,0-0.7,0-1,0c-1.7-3.6-5.8-0.8-8-3c0.3-0.7,0.7-1.3,1-2c1.5,0.8,3.1,1.1,4.8,1\n                        c6.1-0.6,12.1,0.8,18.2,1c8.8-1.2,17.5-0.4,26,2c-5.6,2.5-11.6,1.2-17.3,1.4c-5.1,0.1-10.5,0-15.7-0.4\n                        C380.3,296.2,377.7,296.2,375,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92414A"),
                d:
                  "M207,302c-6.7,0-13.3,0-20,0c-4-1.7-8-1.8-12.3-1.5c-5,0.4-10,0.1-16.1,0.1c4.5-3,8.4-3.7,12.6-3.6\n                        c4,0.1,8-0.2,11.9-1c13.3,0,26.7,0,40,0c-0.6,3.1-3.2,2-5.1,2.3c-4,0.5-8.1-0.8-11.9,0.8C206.3,300.1,207.5,300.7,207,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F454E"),
                d:
                  "M205,299c-0.8-0.2-2.1-0.2-2.2-0.6c-0.6-1.6,0.9-1.3,1.7-1.3c4.6-0.1,9.2,0,13.8-0.1\n                        c1.6,0,3.3,0.5,4.6-1c5.5-0.6,11.1,1.3,16.5-1.1c0.3-0.1,1,0.7,1.5,1.1c1,5.4,5.8,2.9,8.8,3.7c3.2,0.8,6.8,0.2,10.2,0.7\n                        c-11,0.9-22,0-32.9,1.6c-0.1-1.1-0.3-1.7-1.7-1.7c-4.4,0-8.8-0.2-13.3,0C209.7,300.3,207.1,300.8,205,299z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB5F67"),
                d:
                  "M272,303c6.6-0.6,13,1.6,19.5,1.6c10.3,0,20.6-0.7,30.8-1.3c2-0.1,3.9-0.3,5.7,0.7\n                        c-0.3,2.3-2.2,2.3-3.8,2.3c-8.5-0.3-16.9,0.9-25.4,1.1c-10.7-0.5-21.3,1.1-31.9,1.4c-4.5,0.9-9,0.4-13.5,0.8\n                        c-0.5,0-1-0.2-1.4-0.6c-1-0.7-2-1.5-3-2.2c-2.4-1.5-0.9-2.1,0.6-2.7c0.6-0.3,1.2-0.8,1.8-0.8c6.6,0.9,13.1-1.7,19.7-0.3\n                        C271.3,303,271.7,303,272,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993844"),
                d:
                  "M205,299c8.5,0,16.9,0,25.6,0c-0.6,2.7-3,1.5-3.6,3c-1.3,0-2.7,0-4,0c-5.3,0-10.7,0-16,0\n                        C206.4,301,204.8,300.5,205,299z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA5D67"),
                d:
                  "M250,305c-1.6-0.1-1.7,0.7-1,1.8c-6.7-0.7-13.3-1.3-20-2c0-0.3,0-0.6,0-0.9c6.3-1.6,12.6-0.9,19-1\n                        C250.2,302.2,250.7,302.9,250,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C6525C"),
                d:
                  "M250,305c0-1.3-0.7-2-2-2c7.7-1.6,15.3-1.6,23,0c-4.9-0.9-9.4,1.7-14.2,1.8\n                        C254.6,304.8,252.2,303.6,250,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B192C"),
                d:
                  "M1962,626c0.6-0.5,2.3-0.6,1-2c0.1-2.2,1.9-2,3.3-2c6.1-0.4,12.3-0.6,18.4-0.1\n                        c1.6,0.5,3.2,0.2,4.8,0.4c2.8,0.3,3.9,1.6,2,4.2c-1,4.7-3.6,5.9-8.4,4.7c-3.1-0.8-6.5,0.3-9.8-0.1c-2.2-0.6-4.4-1.3-6.8-1.4\n                        C1964.9,628.8,1962.3,628.8,1962,626z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A31B28"),
                d:
                  "M1967,629c2.3-1.1,4.1,0.2,6.1,1c0.2,1.4-0.8,1.6-1.8,2c-1.2,0.3-2.4,0.2-3.6,0.3\n                        c-1.7,0.1-2.6,1.5-3.7,2.6c-2.3,0.5-4.9-0.7-7.1,1.1c-3.6,0-7.2-0.1-10.9-0.1c1.1-1.4,3.1-0.3,4.9-1.6\n                        c-3.6-1.5-7.2-0.1-10-2.2c0.2-2.6,2.4-1.2,3.6-1.8C1952,628.8,1959.6,631,1967,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF1B2F"),
                d:
                  "M1967,629c-3.4,2.1-7.1,2.6-11.1,2.2c-3.9-0.4-7.9-0.2-11.8-0.2c-1.4-1.7-0.4-2.9,1-4\n                        c5.7,0.4,11.4,1,17-1C1963.7,627,1965.3,628,1967,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962236"),
                d:
                  "M1986,623c-7.1,0-14.2,0-21.3,0.1c-0.6,0-1.1,0.6-1.7,0.9c-5.6-2-11.4,0-17-1c-1.6-1.8-4.5,0-6-2\n                        c-0.9-0.7-2-1.4-0.6-2.6c4.6-1.2,8.8,1.4,13.2,1.7c9.3,1.1,18.7,0.2,28,0.5C1982.6,621.1,1985.3,619.8,1986,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A51A2D"),
                d:
                  "M1945,627c-0.7,1.2-1.2,2.5-1,4c-0.7,1.2-2.5-0.7-3,1c-3.5-6-4.6,0.3-6.8,1.1\n                        c-4.2-5.2,2.2-3.5,3.9-5.3c0.2-1.5-3.7-0.3-2.1-2.2c1.1-1.3,3.3-0.8,4.6,0.4C1941.9,627.2,1943,628.5,1945,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3656E"),
                d:
                  "M1375,294c4.2,1.7,8.5-0.1,12.9,0.4c3.5,0.4,7,0.7,10.5,1.6c3.9,1,7.7,2.1,11.5-0.3\n                        c0.8-0.5,1.4-0.3,2.3-0.1c4.2,1.1,5.9-0.8,5-6.2c2.5,1.2,4.9,2,5.8-1.5c0,1.3,0,2.6,1.8,3c3.3,0.7,5.6,3.8,9.2,4\n                        c-0.6,3.6-2.9,4.7-6.3,5.6c-8.7,2.4-17.5,1.7-26.3,1.7c-6.8,0.1-13.6,0.2-20.3,1.6c-1.6,0.4-3.3,0.4-4.9,0.1\n                        c-4.1-2.5-2.8-6.7-3.2-10.3C1373.7,293.4,1374.4,293.4,1375,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15B64"),
                d:
                  "M1375,303c15-2.8,30.1-1.5,45.2-2.2c3.3-0.2,6.7-2,10.4-1.9c2.4,0.1,1-3.7,3.4-3.9c7,0,14,0,21,0\n                        c1,0,2,0,3,0c0.6,1.7,2.2,3,2,5c-6.2-0.3-12,2.2-18,3c-11.4-0.9-22.7,1.7-34.1,1.6c-9.3-0.1-18.7,0.6-27.9,2.9\n                        c-2,0.5-3.6-0.2-5-1.4C1374.6,305,1372.5,304,1375,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1460,300c-1.2-1.4-3.4-2.5-2-5c6,0,12,0,18,0C1471.4,298.9,1465.9,300.2,1460,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1481,295c-1.7,1.3-2.7-0.4-4-1c-0.3-1-1.7-2.2-0.5-3.1c1-0.8,2.1,0.4,3,1.1\n                        C1480.4,292.8,1481,293.7,1481,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("381011"),
                d:
                  "M659.9,629.2c-1-0.1-2-0.3-3-0.4c-0.5-0.8-2.3-1.8,0.5-1.8c5.9,0,11.9,0,17.8-0.1\n                        c2.3-2,5.1-1.3,7.7-1.3c33.3-0.1,66.6,0,100-0.1c32.5-0.1,64.9-0.2,97.4,0.1c2.6,0,5.4,0.6,7.7-1.2c0.7-0.6,1.5-1.2,2-2\n                        c1.9-2.7,2.6-1.1,3.3,0.9c0.3,1.9,1.1,3.3,3.3,3.3c60.8,0.1,121.7-0.1,182.5,0c59.8,0,119.6,0.1,179.3-0.1\n                        c24-0.1,47.9-0.1,71.9-0.1c2.8,0,6.2-1.1,7.9,2.5c-21.8,0-43.6,0.1-65.4,0.2c-0.1,0-4.9-2.4-1.8,1.8c-45.2,0-90.4,0-135.7,0.1\n                        c-2.2,0-4.3,0.1-6.5,0.1c-46.5,0-93-0.1-139.5-0.1c-4.8,0-9.7,0.1-14.5,0.2c-9.9,0.8-19.8,0.3-29.7,0.3\n                        c-10.1,0-20.2,0.5-30.2-0.3c-20,0-40,0-60,0c-33.7-0.1-67.4-0.3-101.1-0.4c-3.5,0-7,0.1-10.4,0.2c-1.8-0.8-3.6-0.4-5.4-0.4\n                        c-20.5,0-41.1,0-61.6,0c-1.8,0-3.6,0.4-5.4-0.4c-1.4,0-2.7,0-4.1,0c-0.3-0.1-0.6-0.2-0.8-0.2\n                        C664.1,628.9,661.9,630,659.9,629.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4F5C"),
                d:
                  "M1152,632.9c0-0.3,0-0.6,0-0.8c31.7-0.1,63.3-0.2,95-0.2c10,0,20,0.1,30,0.2c-0.7,2.5-2.4,1.2-3.9,1.1\n                        c-38.7-0.1-77.4-0.1-116.1-0.2C1155.3,633,1153.6,632.9,1152,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D3241"),
                d:
                  "M1273.1,633.2c1.3-0.4,2.9,0.3,3.9-1.1c15.6,0,31.3,0,46.9,0c1.2,0,2.3-0.1,3.3,0.8\n                        c-5.3,0.7-10.8-1.1-16.1,1c-9.3,0-18.7,0-28,0c-1.5-1.5-3.3-1-5-0.5C1276.4,634,1274.6,634.5,1273.1,633.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3745"),
                d:
                  "M1338.2,628.9c-2-1.4-4.2-0.7-6.3-0.7c-82.3,0-164.6,0-246.9,0c-2,0-4-0.1-6-0.1\n                        c-0.3-0.7-0.1-1.2,0.5-1.6c2.5-1.2,5.2-0.7,7.9-0.7c43.3-0.1,86.6-0.2,130-0.2c7.2,0,14.3-0.3,21.5,0c3.3,0.2,6.7,0,9.9-0.9\n                        c0.8-0.3,1.7-0.4,2.6-0.3c3.5,1.1,7.1,3,10.3-0.8c1.9-1.5,4.2-1.9,6.6-1.9c24.8,0,49.5-0.2,74.3,0.1\n                        c11.5,0.1,22.9-0.5,34.4,0.6c1.2,0.1,2.3,0,3.3,0.9c-0.5,2.3-1.9,4-3.3,5.8c-1.6,0.1-3.2,0.2-4.8,0.3\n                        C1360.7,629,1349.4,629,1338.2,628.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1627"),
                d:
                  "M2065.9,609.9c0,0.3,0.1,0.7,0.1,1c-0.3,0.4-0.6,0.7-1,1.1c-0.4,0.4-0.7,1-1.2,1.3\n                        c0,0.4-1.5-0.7-0.5,0.5c0.3,0.3,0.7,0.5,1,0.9c0.2,0.4,0.1,0.8-0.2,1.2c-1.3,1.6-3.7,1.6-4.4,0.6c-2.3-3.5-5.7-0.2-8.4-1.5\n                        c-0.6-0.3-2.4,2-4.7,2.2c-5,0.3-9.9-2.2-15.1-0.5c-1.3,0.4-3.3-2.2-4.5-3.3c-3.7-3.3-4.2,0.4-6,1.7c-0.5,2.8-0.9,3.1-2.2,1.5\n                        c-0.9-1.2-2.5-1.6-3.2-3c0.7-4.5,3.8-7.9,5.4-12c1.1-2.7,2.4-1.3,3.4,0.2c1.8,1.8,4.1,1.9,6.4,1.9c5,0,10.1,0.3,15.1,0.4\n                        c3.7,0.6,7.3-1.3,11-1.1c0.3,0,0.7,0.1,1,0.1c-2.4,7-2.4,7-8.1,6.4c2.1,0.4,4.2,1,6.3,0c2-1,4.4-0.5,6.2-1.4\n                        C2064.8,607,2065.4,608.1,2065.9,609.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951B2A"),
                d:
                  "M2083,618c-4.7,4.5-11,4.6-16.8,5.8c-2,0.4-2.6-1.3-1.8-2.9c0.5-1.1,1.7-1.9,2.6-2.9\n                        c3.7-2.8,5.5-6.6,6-11.1c0-0.3,0-0.6,0.1-0.9C2078.2,608.6,2081.2,612.8,2083,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992F39"),
                d:
                  "M2073,606.9c0.5,5.1-0.3,9.4-6,11.1c-1.5,0.1-1.9-1.4-2.9-2.1c0-0.3,0-0.6,0-0.9c-0.6-0.7-0.6-1.3,0-2\n                        c0.3-0.3,0.7-0.7,1-1c0.3,1.4-0.2,3.4,1.8,3.6c1.8,0.2,2.9-1.5,3.6-2.9C2071.4,610.8,2071.3,608.5,2073,606.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2016,614c1.5,0,4-1.7,3.6,1.9c-0.1,0.6,0.4,0.9,0.8,0.5c0.3-0.3,0.3-0.9,0.5-1.4\n                        c1.8,1,3.3,2.3,2.8,5.2c-1.4-2-3.7-3.4-4.9-1.6c-1.2,1.7,0.7,3.7,2.7,4c2.4,0.4,0.5,4.2,3.8,3.7c-1.5,0.9-2.9,1.2-3.6,0.3\n                        c-0.7-0.9-0.4-2.9-2.5-1.1c-1.1,1-2.5,1.3-2.4,3.2c0.2,2.1,1.5,2.3,3.1,2.3c-7.9,1.8-16,2-24,2c-1.5,0.3-2.9,0.1-4.5-1.8\n                        c4.5-2.2,9.7-0.1,13.8-3.2c-4.9,0.7-9.5-0.9-14.2-1.2c-0.2,0-0.3-0.5-0.1-0.9c0.2-1,2-2.5-0.8-2.5c-1.4,0-2.8-0.3-4.2-0.5\n                        c-1.4-1.7-3.3-0.7-5-1c-0.3-0.5-0.2-1,0.3-1.4c4.3-2.1,9-2.7,13.6-2.7c5.9,0,11.1-1.5,16.1-4.4\n                        C2012.7,613,2014.4,613,2016,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2047.1,628c-4,1.1-8,1.9-12.2,1.8c-5.1-2-10.5-0.1-15.7-1.6c4.9,0,9.8,0,14.6,0\n                        c-8.3-1.1-1.1-5.2-2.6-8.6c3.5,2.1,2.6,7.4,7.2,6.3c0.1,0-1.6,1.3-0.7,2.6C2040.8,627.8,2044,628,2047.1,628z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2031.1,630c-3.2,1.7-6.7,0.7-10.1,1C2024.2,629,2027.7,630.4,2031.1,630z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2041.2,626.2c1.4-0.3,2.7-0.6,4.1-0.9C2044.3,627.4,2042.6,626.8,2041.2,626.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2038,394c-0.1-0.8-0.1-1.6-0.2-2.3c-0.2-0.8-0.6-1.7,0.5-1.9c0.5-0.1,1.2,0.8,1.8,1.2\n                        C2040,392.4,2039.3,393.4,2038,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2A32"),
                d:
                  "M159,546c0.5,5.3,4.8,3.3,6.7,2.6c2.4-0.8,4-0.4,6.2,0.2c2.6,0.7,5.2,1.8,8.2,0.4\n                        c2.9-1.3,5.9,2.8,9.2,0.3c0.3-0.2-0.1,1.6-0.3,2.4c-0.5,1-4.1-2.1-2.5,2c0.4,1-1.4,1.1-2.3,0.6c-2.1-1.2-3,0.4-4.2,1.5\n                        c-4.7,1-9.7,1.1-13.3,5c-0.8,0.9-1.8-0.1-2.7,0c-0.9-1.5-2.5-3.1-3.7-1c-2.2,3.9-3.4,0.9-4.9-0.3c-0.7-0.6-1.4-2.1-2.2-1.4\n                        c-4,3.4-6.9-0.3-10.2-1.2l0,0c-2.6-2.5-1.9-5.9,1.6-7.3c1-0.4,1.9-0.1,2.8-1.2C151.9,543,152.1,543.1,159,546z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("803139"),
                d:
                  "M157.1,582.2c0.3,0.6,0.7,0.9,0.7,1.3c0,0.7-0.4,1.2-1.1,1c-0.3-0.1-0.5-0.8-0.5-1.2\n                        C156.3,583,156.7,582.7,157.1,582.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF5B66"),
                d:
                  "M1775,404c0-0.3,0-0.7,0-1c-0.7-4.1,3.3-3.5,5.1-5c3.3-0.8,4.7-5.6,7.9-5.3c2.6,0.3,2.2-1.7,3.3-2.3\n                        c4.2-1.4,8.6-0.4,12.9-0.8c1.9-0.2,4.1,0.8,5.4-1.5c0-0.4,0.1-0.8,0.3-1.2c0.9-0.9,2-1.5,3.1-2.1c0.4-0.1,0.8-0.1,1.2,0.1\n                        c1.1,1.1,2.7,1.4,4,2.2c1.8-0.3,2.5,1.6,3.9,2.1c7.6,3.4,14.9,7.4,22.7,10.5c1.8,1.1,3.7,2,5.7,2.7c1.8,0.5,3.3,1.6,4.9,2.7\n                        c0.3,0.8,0.2,2.1-0.6,2c-4.7-0.6-10.4,3.5-14.1-2.6c-1.3,0.8-2.8,1.7-4.2,0.7c-4.5-3.6-10.2-4.6-15.1-7.3\n                        c-2.5-1.4-5-2-7.7-1.2c-9,2.5-18.4,3-27.1,6.4c-2.2,0.4-4.4,0.6-6.5,1.4C1778.3,405.1,1776.6,405.4,1775,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1E2B"),
                d:
                  "M1988,386.9c-1.5-0.8-2.9,0-4.3,0.2c-5.9,0.2-11.2-2.1-16.7-4c-0.6-0.6-0.7-1.2-0.3-1.9\n                        c1-1,2.3-0.7,3.5-0.7c-1.3-0.1-2.6-0.4-3.7,0.8c-1.4,0.9-2.8,0.6-4.1-0.1c-3.8-2.9-9.3-2.2-12.7-5.9c1.1-2.9,0.3-7.8,6.3-5.7\n                        c1,0.3,2.4-1.4,2.5-3c0.1-1.8,1-2.5,2.6-1.8c2.4,1.2-0.4-2,1.2-1.3c5.8-0.1,10,3.9,15,5.7c1.6,3.8,1.2,4.3-2.5,4.1\n                        c-1.2-0.1-2.9-1.3-3.5,0.4c-0.5,1.7,2.4,1.6,2.4,2.4c0.2,2.2,5.3,1.6,2.8,5.2c-0.2,0.2,0.7,0.1,1,0.2c2,0.2,4,0.2,5.8,0.9\n                        C1984.6,384.2,1988.9,382.8,1988,386.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B292F"),
                d:
                  "M1950,375c4.1,2.2,9,2.4,13,5c-1.1,1.2-2.5,1.7-4.1,1.1l0.1,0c-2.5-2.1-5.9-1.7-8.8-2.3\n                        c-6.1-1.2-11.4-4.2-17.3-5.9c-7.6-1.3-15.3-2.7-22.9-4c-0.3-0.3-0.7-0.7-1-1c-1.5-0.9-3.1-1.5-4.7-2.2c-1-0.4-2.2-1-0.9-2.4\n                        c1.4-0.8,3-0.8,4.5-0.8c0.5,0,1.1,0,1.6,0.1c12.6,2.9,24.8,7.3,37.5,9.4C1948.8,372.5,1949.6,373.4,1950,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("865251"),
                d:
                  "M1910,368c0,0.3,0,0.7,0,1c-9.6,0.9-18.7-2.8-28.1-3.4c-13.3-0.8-26-5.3-39.4-5.9\n                        c-5.1-0.2-10.3-0.6-15.4-0.8c1.7-3.8,5.6-1.3,8.2-2.9c9.1,0,18.1,1.6,27.1,2.9c14.1,2,28.2,4,42.1,7.2\n                        C1906.4,366.5,1908.2,367.1,1910,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6972"),
                d:
                  "M1879.9,415.2c1,1.4,2.8,0.1,3.9,1c1.3,1.6,3.1,2.3,5.1,2.5c0.8,0.8,1.8,1.3,2.8,1.9\n                        c5.7,3,11.7,5.2,17.7,7.2c1.2,0.4,2.4,1,2.8,2.4c-0.6,2.2-2.6,2.3-4.3,2.8c-5.7-0.2-10.2-4-15.6-5.2c-0.4-0.2-0.8-0.5-1.2-0.8\n                        c-2.8-2.3-6.3-2.9-9.5-4.4c-2-1.3-4.3-1.8-6.3-2.9c-1.5-0.8-3.5-1.3-3.4-3.7l-0.1-0.1c0.6-1,1.3-1.8,2.5-1.9\n                        C1876.4,414,1878.3,413.9,1879.9,415.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82272F"),
                d:
                  "M1926.1,432.9c1.6,0.1,3.2,0.1,4.7,0.2c10.7,1.9,21.2,4.9,31.9,6.9c3.7,1.5,8.5,1.1,10.2,6\n                        c-2,2.2-4.3,2.1-6.7,0.8c-2-1.1-4.3-1.6-6.4-2.5c-2.7-1.3-5.2-1.1-7.8,0c-5.2,0.2-8.8-4.3-13.8-4.9c-2-0.2-4.1-1-6.3-1.3\n                        c-3.1-1.9-7.7-1.5-9.2-6C1924.3,430.9,1925.2,432,1926.1,432.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F6F6"),
                d:
                  "M1963,441c-10.8-2.4-21.7-4.4-32.2-8c3.8-0.3,7.5,0.2,11.2,1.4c9.6,2.8,19.5,3.7,29.5,3.8\n                        c8.3,0.1,16.6,1.5,24.4,4.8c-3.7,2.4-7.8,1.6-11.6,1c-5.1-0.9-10.1-1.7-15.2-2C1967.2,441,1965,442,1963,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B79595"),
                d:
                  "M1968.9,441.2c7.1-1.4,13.7,2.1,20.6,1.9c2.1-0.1,4.3,0,6.4,0c0.3,0.1,0.6,0.1,0.9,0\n                        c3.5,0.5,6.7-2.6,10.4-0.9c-1.8,3.8-5.4,3.5-8.7,4.1c-5,0-10,0.1-14.9,0c-3.6-0.4-7-1.6-10.5-2.4\n                        C1971.5,443.6,1969.4,443.4,1968.9,441.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C26262"),
                d:
                  "M1926.1,432.9c-1-0.3-2-0.5-3-0.8c-3.8,0.5-7.1-1-10.4-2.4c-1.2-0.5-2.1-1.7-3.6-0.9\n                        c-6.5-1.6-12.2-5.1-18.2-7.8c1.3-0.8,2.6-0.7,3.9,0c8.2,2.7,16.5,5.3,24.6,8.2C1921.8,430.1,1924.8,430,1926.1,432.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("814243"),
                d:
                  "M1932.9,373c8.8,2.2,17.9,3.8,26,8.2c-2.7-0.6-5.5,0.4-8.1-1.2c-2.5-1.2-5.5-0.3-7.9-2.1\n                        C1939,377.7,1936.3,374.6,1932.9,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("794041"),
                d:
                  "M1812,358.9c-0.3,0.1-0.6,0.2-1,0.3c-4.1,0.4-8.1,1-12.1,1.7l0,0c-2.9,1-5.8,1.3-8.9,1.6\n                        c-0.8-0.4-1.4-1.1-1.3-2c0.6-1.5,2-2.3,3.4-2.5c7.1-0.9,14.1-3,21.4-2.1c1.1,0.3,2.7,0.7,2.2,1.9\n                        C1815.3,359.3,1813.1,358,1812,358.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("957473"),
                d:
                  "M1812,358.9c0.7-0.9,1.7-0.9,2.7-1.1c0.5-0.1,0.6-0.3,0.2-0.6c-0.2-0.2-0.6-0.2-1-0.3\n                        c-0.4-1.1,0.2-1.8,0.9-2.4c0.4-0.2,0.9-0.4,1.3-0.5c0.9-0.1,1.8,0,2.7,0.3c1.1,0.4,2.2,1.4,3.5,0.7c1.3-0.6,2.6-0.3,3.9,0\n                        c0.4,0.1,0.9,0.2,1.3,0.3c1.8,0.6,3.7,0.3,5.5,0.6c0.7,0.2,1.4,0.5,1.8,1.2c-2.3,2-5.6-0.3-7.9,1.7\n                        C1822,358.9,1817,358.9,1812,358.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F6F6"),
                d:
                  "M2007,442.1c-3.5-0.5-6.6,2.5-10.2,1c8.5-0.9,14.9-6.7,22.5-10c-1.6,2.1-4.6,2.9-5.2,5.9\n                        c0.2,1.3-0.8,1.7-1.6,2.2C2010.7,441.7,2009.1,443.4,2007,442.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE6E6E"),
                d:
                  "M1844.9,400.1c-8.1-2.8-15.8-6.3-22.9-11.1c4.9,0.1,8.4,3.5,12.7,5.2c3.5,1.4,6.9,3.3,10.3,4.9\n                        c0.3,0.2,0.4,0.4,0.3,0.6C1845.1,400,1845,400.1,1844.9,400.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7D0CF"),
                d:
                  "M1790,361.9c3-0.3,6-0.7,9-1c-2.2,2.3-5.5,2.1-8.2,2.9c-3.4,1-5.2,2.6-3.8,6.3c-0.5,0.3-1,0.2-1.5,0\n                        c-1.7-1.5-2.8-3.4-1.5-5.5C1785.2,362.3,1787.1,360.8,1790,361.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("915555"),
                d:
                  "M1797.9,376.3c4.5,2,9,3.9,13.1,6.7c-0.3,0.4-0.7,0.7-1.2,0.8c-5-0.5-9.4-2.5-13.1-6\n                        C1796.6,376.9,1797.1,376.5,1797.9,376.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("803F41"),
                d:
                  "M1797.9,376.3c-0.4,0.3-0.7,0.6-1.1,0.9c-2.1,1.1-3.6-0.7-5.4-1.2c-0.4-0.2-0.8-0.4-1.1-0.6\n                        c-1.4-0.9-3-1.5-4.5-2.3c-0.4-0.2-0.7-0.5-1-0.8c-0.2-0.4-0.2-0.8-0.2-1.2c0.3-0.6,0.7-1,1.4-1.2c0.3,0.1,0.6,0.1,0.9,0.2\n                        C1790.6,372.1,1794.3,374.2,1797.9,376.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A76765"),
                d:
                  "M1855,405.2c-1.6-0.8-3.3-1.5-4.9-2.3c-0.1-0.9,0-1.5,1.1-1c3.3,1.4,6.5,2.8,9.8,4.2\n                        c0.2,0.9-0.3,1.3-1.1,1.6C1857.7,408,1856.2,406.8,1855,405.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("814243"),
                d:
                  "M1958.8,381.2c1.4-0.4,2.7-0.8,4.1-1.1c1.1,1.4,2.6,0.9,4,1l0,0c0,0.7,0,1.4,0.1,2.1\n                        C1964.1,383.2,1961.4,382.6,1958.8,381.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7D0CF"),
                d:
                  "M1798.9,360.9c3.9-1.8,8-2,12.1-1.7C1807.1,360.6,1803.1,361.4,1798.9,360.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DFDD"),
                d:
                  "M1943,378c2.8,0,5.5,0.5,7.9,2.1C1948.2,379.6,1944.9,381.3,1943,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37671"),
                d:
                  "M1866.2,408.8c2.5,0.5,4.9,1.3,6.8,3.1c-0.1,0.2-0.3,0.4-0.4,0.6c-2.9,1.1-5.1,0.1-6.8-2.4\n                        C1865.7,409.5,1865.8,409.1,1866.2,408.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B07672"),
                d:
                  "M1851.2,401.9c-0.4,0.3-0.8,0.7-1.1,1c-1.7-0.9-3.4-1.9-5.1-2.8c0-0.3,0-0.6,0-0.9\n                        C1847,400.1,1849.1,401,1851.2,401.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE7976"),
                d:
                  "M1888.8,419.1c-2.2,0-4.5,0.1-5-2.8c2.1,0.9,4.2,1.8,6.3,2.7C1889.8,419.5,1889.3,419.5,1888.8,419.1z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37671"),
                d:
                  "M1860,407c0.3-0.3,0.7-0.6,1-0.9c1.7,0.9,3.5,1.8,5.2,2.7l-0.3,0.3c-0.6,0.6-1.3,0.8-2.1,0.9\n                        C1862,409.7,1860.1,409.5,1860,407z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7BFBD"),
                d:
                  "M1991,389.1c2.7-0.6,4.4,1.2,6.1,2.8C1994.4,392.4,1992.8,390.4,1991,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B67170"),
                d:
                  "M1888.8,419.1c0.4,0,0.9-0.1,1.3-0.1c1.6,0.5,3.5,0.6,4.6,2.1c-1.3,0-2.6,0-3.9,0\n                        C1890.2,420.4,1889.5,419.7,1888.8,419.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA817F"),
                d:
                  "M1879.9,415.2c-1.9-0.1-3.9-0.2-5.8-0.3c-0.6-1.8,1.3-1,1.8-1.7\n                        C1877.6,413.2,1879.1,413.5,1879.9,415.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E484D"),
                d:
                  "M1875.9,413.2c-0.6,0.6-1.2,1.1-1.8,1.7c-0.7,0.4-1.4,0.7-2.1,1.1c0-0.3,0-0.6,0-0.9\n                        c-0.8-1.4,0.2-2.1,1-2.9l0-0.3C1874,412.3,1874.9,412.7,1875.9,413.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A05B5C"),
                d:
                  "M1818.1,387c-1.8,0.2-3.3-0.2-4.2-1.9c-0.3-0.2-0.4-0.4-0.3-0.5c0.1-0.2,0.2-0.3,0.3-0.3\n                        C1815.6,384.8,1817.4,385.1,1818.1,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F4143"),
                d:
                  "M1814,384.2c0,0.3,0,0.5,0,0.8c-0.3,0-0.7,0.1-1,0.1c-0.6,0.4-1.3,0.5-2,0.2c-0.8-0.6-1.4-1.2-1.1-2.3\n                        c0.4,0,0.7-0.1,1.1-0.1C1812,383.4,1813,383.8,1814,384.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("351819"),
                d:
                  "M2012,440.1c0.7-0.3,1.4-0.7,2.1-1c1.7,0.2,2.5-1.6,3.8-2.1c2.5-0.6,5.3-0.7,7.1-3\n                        c0.2,1.6,1,1.4,2.4,1.5c6.7,0.2,12.9-2.9,19.6-2.5c0,2.5-1.9,2.3-3.5,2.4c-1.7,0.1-3.3,0.2-4.5,1.6v0\n                        c-3.3,0.3-7.1-1.3-9.1,2.9c-0.2,0.5-1.2,0.9-1.7,0.8c-5.8-0.7-10.3,2.6-15.6,5.1c3.5,0.1,6.6,0.3,9.9,1.9\n                        c-1.9,0.2-3.3,0.3-4.7,0.4c-2.2,1.7-4.7,1.1-7.1,0.8c-1.5-0.4-3-0.7-4.5-1.2c-2.8-1.5-3.1-2.6,0.2-4\n                        C2008.4,443,2010.7,442.2,2012,440.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951B28"),
                d:
                  "M1988,386.9c-0.3-3-4.5-1.1-5-3.9c1.5-1.5-2.8-2.4-0.3-4.1c2.1-1.4,4.1-1.1,6.1-0.1\n                        c3,1.4,6.3,2,8.8,4.4c0.8,0.8,2,1.4,1.4,2.8c-0.7,1.1-1.9,0.9-2.9,1C1993.4,387,1990.7,387,1988,386.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("461317"),
                d:
                  "M2039,437c1.5-3.7,6-1.3,8-4c1,0,2.1,0,3.1,0.1c-0.4,0.6-0.8,1.2-1.2,1.8c-1.7,0-2.6,1.4-3.8,2.2\n                        C2043.1,435.4,2041.1,436.6,2039,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641B22"),
                d:
                  "M2043,469.8c4.3,1.1,8.7,2.2,13,3.3c5.2,2.5,2.4,6.4,1.9,10c-0.3,0.7-0.7,1.2-1.3,1.6\n                        c-1.3,0.6-2.9,1-3-0.9c-0.1-3.4-2.7-3.6-4.9-4.4c-4.6-1.1-6.9-5.6-11-7.5c-2.6-1.8-5.3-1.7-8.1-0.5c-3.7,1.7-7.1,2.4-8.6-2.9\n                        c-0.4-1.5-2-2.2-3.5-2.6c-2-0.6-3.2-1.7-2.8-4c0.6-0.5,1.3-0.7,2.1-0.6c1.2,0.2,2.4,0.6,3.7,0.9c5.2,2,10.9,2.1,16.1,4.1\n                        C2038.9,467.3,2041.3,468,2043,469.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5B1B3"),
                d:
                  "M2043,469.8c-7.5-2.8-15.4-4.3-23.1-6.5c-0.1-1.2-3.1-0.7-1.6-2.8c0.6-0.9,0.7-3,2.7-1.6\n                        c1.6,2.9,3.9,2.9,7,3.2c4.6,0.5,9.8-0.5,14,2.8C2042.8,466.5,2041.5,468.5,2043,469.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B3139"),
                d:
                  "M2057,483c0-3.3,2.5-6.9-1-9.9c1.5-0.2,2.8,0.2,4,1c1.9,0.9,4,1.2,6,1.9l0,0c0.8,2.4-0.9,3.5-2.6,4.5\n                        c-0.4,0.2-0.9,0.3-1.3,0.3C2059.9,480.3,2059.2,483.4,2057,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853E45"),
                d:
                  "M2063,480c1.2-1.2,2.5-2.3,3-4c1.4,0,2.6,0.4,3.2,1.8c-1.1,1-2,2-0.2,3.2c-0.7,0.7-1.6,0.9-2.5,0.8\n                        C2065.3,481.2,2063.1,482.6,2063,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853E45"),
                d:
                  "M2066,476c-2.2,0.2-4.3-0.1-6-1.9C2062.2,474.2,2064.2,474.8,2066,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DAA7A1"),
                d:
                  "M2018.3,448.9c6.9,0.3,13.8,1.4,20.8,1.1c-0.2,1.5,1.1,1.8,1.8,2.4c-5.9,3.4-12.4,2.7-18.8,2.7\n                        c-2.6,1.7-4.8-0.9-7.2-0.9c-0.9-1.6-0.9-3.4-2.2-5C2014.8,448.3,2016.5,448.3,2018.3,448.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA5A8"),
                d:
                  "M2015,454c2.5-1.1,4.5,1.8,7,1c-1.2,1.1-2.4,2.2-1,4c-2.6,0.9-2.3,2.5-1.1,4.3c-1-0.4-2-0.8-3-1.1\n                        c-2.3-1-3.2-3-3.9-5.2C2012.4,455.2,2013.1,454.2,2015,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D18F8F"),
                d:
                  "M2015,454c-2.8,3.5,0.9,5.6,1.9,8.2c-0.6,0-1.2,0-1.9,0.1c-1.1,0.3-1.9-0.3-2.6-1\n                        c-2.4-3.1-5.9-5-6.3-9.9c-0.4-4.5,1-4.3,4-3.5c2.5,0.1,5,0.2,7.5,0.2c0.2,0.2,0.4,0.5,0.6,0.7\n                        C2012.9,447.8,2015.5,451.9,2015,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD4B56"),
                d:
                  "M1288,233c1.6,0.9,2.9,2.4,5,2c4.1,2.8,8,6.9,12.5,8c4,0.9,6.2,4.3,10.1,5.3c2.1,0.5,5.9,2.4,7.3,5.3\n                        c1.3,2.6,3,0.3,4.5,0.6c6.5,1.6,9,9,15.6,9.8c0.8,1.3,1,2.6-0.6,3.3c-1.3,0.6-3.3,0.2-3.6-0.8c-0.6-1.9-1.9-1.5-3.1-1.7\n                        c-3.1-1.6-7.2-1.9-8.3-6.2c-0.3-1.3-0.2,0.1-0.3,0.2c-3.4,1.1-5.9-0.3-8.1-2.9c-0.2-0.8,0-2-0.5-2.3\n                        c-8.7-5.3-17.1-11-26.3-15.3C1289.1,236.9,1287.6,236.3,1288,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0515B"),
                d:
                  "M1336,264c0.9,0.6,2.2-1,3.1,1.3c0.8,2.2,3.1,1.4,3.9-1.3c3.5,3.9,8.6,5.2,12.9,7.7\n                        c1.1,0.7,2.1,1.5,3.1,2.3c1.3,1.7,2.7,3.3,4,5c-5.6,0.4-11-0.2-15.6-3.7c-1.5-1.1-3.4-1.3-4.8-2.4c-1-1.9-2.1-3.6-4.2-4.7\n                        C1336.8,267.4,1335.2,266.3,1336,264z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25C64"),
                d:
                  "M1343,273c0.9-0.4,2-0.8,2.8,0c4.8,4.6,11.5,4.1,17.2,6c2,0.5,4.2-0.2,6,1c-1.8,1.1-3.8,1-5.8,1\n                        c-5.9,0-11.7,0.2-17.6,1c-2.4,0.3-6.7,0.6-7.8-3.7c-0.6-2.4-3.5-2.3-4.7-2.9c-6.2-3.1-12.2-6.3-17.9-10.2\n                        c-0.7-0.5-1.6-0.1-2.2,0.6c-1.2,0.7-1.9-0.1-2.6-0.9c-0.7-2.1-1.8-4.2-1.7-6.6c4.7-1.3,8.5,1.3,11.9,3.7\n                        c2.6,1.8,5.1,3.2,8.3,4C1334,267.3,1338.6,270,1343,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4565F"),
                d:
                  "M1343,273c-3.1,0.6-5.2-1.7-7.6-2.8c-3.2-1.5-6.1-3.7-9.9-3.2c-1.5,0.2-2.6-0.8-3.3-1.9\n                        c-2.8-4.4-8.3-4-12-6.8c-0.1-0.1-0.8,0.4-1.2,0.7c-3.1,1.8-4.3-0.5-5.6-2.7c-0.2-1-0.3-2-1.1-2.8c-0.1-0.2-0.2-0.4-0.3-0.5\n                        c-0.3-1.5-2.5-1.6-2.6-3.5c2.1-0.8,3.5,1.3,5.3,1.3c4.8-0.1,8.6,2,11.6,5.7c0.7,0.9,1.8-0.2,2.7-0.5c6.3,1.3,11.5,4.9,17,8\n                        c0.6,1.9,2,2.8,3.8,3.6C1342,268.5,1343.6,270.2,1343,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05968"),
                d:
                  "M1241,219c1.4,0.6,2.3,2.1,4,2c6,3.1,11.8,6.3,17.2,10.6c5.1,4.1,11.1,8,18,9.5\n                        c1.9,0.4,4.3,0.9,3.7,3.9c-0.7,0.9-1.7,1.1-2.8,1.1c-5.2-0.5-8.6-4.7-13.3-6.4c-6.7-4.2-13.4-8.4-20.4-12.1\n                        c-3.7-2.8-8-4.4-11.8-7c-1.3-0.9-4.1-1.4-2.3-4.2C1236.6,215.5,1239.7,214.8,1241,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05D69"),
                d:
                  "M1280.8,245.1c1.1-0.1,2.1-0.1,3.2-0.2c3,2.3,7.3,3,9.5,5c2.9,2.7,5.3,2.9,8.5,3l0,0\n                        c0.6,0.8,1.7,1,2,2c0.8,2.4,2.2,4.1,5,4c1.8,1.5,2.1,3.6,2,5.8c-1,0.9-1.9,0.2-2.7-0.3c-8.1-5.1-16.1-10.4-24.3-15.3\n                        C1282.6,248.2,1280.7,247.4,1280.8,245.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF4C57"),
                d:
                  "M1250,217c2.4-1.4,3.2-0.4,3,2C1250.3,220.9,1250.6,218.2,1250,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A5595B"),
                d:
                  "M1199,199c0.8,1.7,2.3,2,4,2c1.1,0.8,3.1,0.3,3.3,2.3c-0.2,0.8-0.8,1.2-1.6,1.4\n                        c-6.2-1-11.3-4.7-16.7-7.5c-13.9-7.2-28.2-13.5-42.3-20.2c-2.8-1.3-6-2.1-7.9-4.9c-0.1-0.5,0-1,0.3-1.4\n                        c5.4-1.3,9.4,2.5,13.9,4.2c7.3,2.8,14,6.8,21.2,9.9c4.7,2.4,9.5,4.8,14.3,7.1c0.4,0.2,0.8,0.4,1.3,0.6\n                        C1191.9,194.9,1196.3,195.7,1199,199z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9525C"),
                d:
                  "M1163,177c3.2,0.2,7-1.2,8.7,3.4c0.5,1.4,2.6,0,4.1,0.6c3.7,1.6,7.2,3.4,10.3,6c2.5,0.1,4.9,0.5,7,2\n                        c2.4,0.3,2.7,2.2,3,4c-2.7,1.2-5.3,1.5-8,0l0,0c-4.7-3.2-9.6-5.9-15-7.7c-3.6-1.8-7.4-3.3-10.2-6.3\n                        C1162.4,178.3,1162.5,177.6,1163,177z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1241,219c-2.2-2.9-5.3-1.8-8.1-2c-1,0.8-1.8,0.3-2.6-0.5c-1.8-3.9-6.5-4.4-8.9-7.6\n                        c-0.9-1.2-3-1.8-2.4-3.9c0.9-1.1,1.9-2.2,3.5-4.1c-0.2,3.2-0.2,5.7,2.9,6.4c2.2,0.5,2.8,3.4,6.1,3.3c2.3-0.1,5,1.2,7.8,0.9\n                        c4.4-0.4,0.3,2.9,1.5,4c1.2,0.6,2.3-2.2,3.4-0.4c1.3,2.2-1.4,1.5-2.1,2.3C1241.8,218,1241.4,218.5,1241,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25869"),
                d:
                  "M1219,205c2.7,2.2,4.7,5.1,8.2,6.5c1.7,0.7,3.9,2,3.8,4.6c-0.5,0.2-1,0.4-1.4,0.2\n                        c-8.3-3.7-16.6-7.3-23.6-13.2c-1-0.7-2-1.4-3-2.1c1.2-1.5,2-1.9,4-0.6c1.5,1,3.1,2.3,5.1,2.6c2.2,0.2,4.1,1.1,6,2\n                        C1218.3,205,1218.7,205,1219,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25466"),
                d:
                  "M1188,193c2.7,0,5.3,0,8,0c0.1,0.7-2.6,1.4,0.2,2c3.2,0.8,3.6,1.6,2.8,4\n                        C1195.2,197.2,1191.1,196,1188,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E44856"),
                d:
                  "M1193,189c-2.5,0-5.2,0.6-7-2c2.3-3.1,4.7-2,7,0C1193,187.7,1193,188.3,1193,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1218,205c-2.3,0.3-4.6,0.5-6-2l0,0c1-0.8,2-0.8,3,0.1C1216.4,203,1219.4,200.8,1218,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD5A59"),
                d:
                  "M1215,203c-1,0-2,0-3,0c0.1-0.8,0.2-1.7,1.3-1.8C1214.6,201,1214.9,202,1215,203z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE505A"),
                d:
                  "M1163,177c0,0.7,0,1.3,0,2c-2,1.2-2.9-0.9-4.4-1.3c-7.6-2.3-14.2-7.6-22.5-7.7\n                        c-0.5-0.1-0.9-0.3-1.3-0.6c-3.5-3.9-8.1-5.7-12.9-7.1c-1.8-0.5-4.1-0.3-3.9-3.2c3.1,0.3,5.7,0,6-4c1.3,0,2.7,0,4,0\n                        c1.4,1,2.4,2.3,3,4l0,0c1.5,3.6,5.3,3.5,8.1,4.9c4,2,8,2.7,12.5,1.2c2-0.7,3.6,1.6,5,2.7c2,1.6,3.9,2.3,6.3,2.2\n                        c-0.7,1.4-2.5,0.6-3.5,1.7c0.9,4.3,5.1-0.3,6.7,2.4C1166.3,176.3,1161.5,173.3,1163,177z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4A54"),
                d:
                  "M1131,159c-1.1-1.3-2.8-2.1-3-4C1130.6,155.1,1131.1,156.8,1131,159z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8515A"),
                d:
                  "M815,119c1.2-2.3,3-2.4,5.1-1.5c4.1,1.8,8.7,1.7,12.6,1c4.1-0.8,8.2-1.5,12.4-2.2\n                        c4.5-0.7,9.1-1.2,13.6-0.6c7.2,1,14.3-0.5,21.5-0.3c6,0.1,11.9,0.2,18,1c4.6,0.7,9.8-0.2,14.7-0.4c9.1-0.3,18.2-1.5,27.3-0.2\n                        c1.4,0.2,2.9-0.4,4.4-0.5c2.7-0.3,5.3-1.3,7.3,2.1c1.4,2.5,5.1,1,7.3,2.5c2.3,0.6,3.1,1.7,0.4,2.9c-2.3,1-4.9,0.4-7.4,0.1\n                        c-3.4-0.5-6.9-1.4-10.1,0.6c-1.4,0.7-2.9,0.8-4.4,0.4c-5.2-2.5-10.8-1.5-16.3-2c-3,0.8-6.1,0.5-9.1,0.4\n                        c-6-2.4-12.2-0.5-18.3-0.5c-1.5,0-2.9,0.4-4.4,0.2c-0.5-0.1-1-0.2-1.5-0.3c-6.5-0.8-12.9-0.1-19.3,0.2\n                        c-10.1,0.4-20.1,0.2-30.2,0.4c-6.1,0.2-12.2,1-18.3,0.5C818.1,121.7,814.2,123.5,815,119z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85662"),
                d:
                  "M820,122c3.2-0.3,6.4-0.9,9.6-1c18.1-0.4,36.2-0.7,54.3-1c1.7,0,3.7-0.7,5.1,1\n                        c-1.5,2.3-3.9,2.4-6.2,2.4c-15.3-0.3-30.6,0.8-45.9,1.3c-14.9,0.5-29.8,1.1-44.7,2.6c-3.6,0.4-7.3-0.4-10.9,0.7\n                        c-13.7,1.2-27.4,3-41.1,4.4c-6.1-0.4-12,0.5-18,1.5c-1.6,0.3-3.2,0.5-4.8-0.4c0.3-3.6,3.7-6.5,7.5-6.1c3.6,0.4,7,0.2,10.3-1\n                        c5-1.9,10.1,0.9,15.2-0.6c4.5-1.3,9.2-1.7,13.5-3.9l0,0c1-0.8,1.9-0.3,2.7,0.3c3,2.1,6.7,2.2,9.5,0.9\n                        c4.7-2.2,9.2-1.3,13.9-1.1c0.3,0,0.7,0,1,0c2.6-1.9,5.2-2.4,8.4-1.3c4.8,1.7,9.8,0.6,14.8,0.8C816.1,121.6,818.1,121,820,122z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D95762"),
                d:
                  "M942,123c-0.9-2.3,0.7-1.8,2-2c4.8-0.6,9.5,1.2,14.3,1.1c2.9-0.1,1.5-1.1,0.7-2.1c0-0.3,0-0.7,0-1\n                        c2.4,0.4,5-1.2,6.8,2.8c0.9,2.1,5.8,1.7,8.9,0.7c1.7-0.5,3.3-0.8,4.8,0.2c3.5,2.4,7.5,2.4,11.5,2.2c1.3,0,2.7,0,4,0\n                        c0.8-0.6,1.8-1.2,2.7-1c8.3,2.1,17.3,1.2,25.3,5c1.3,2.5,4,1.8,5.6,1.5c4.3-0.8,8.1-0.1,11.9,1.8c6.6,3.3,14.2,3.1,20.8,6.6\n                        c1,0.5,1.6,1,1.7,2.1c-0.6,0.7-1.3,0.9-2.1,1c-9-2.4-18.5-3.2-27.3-6.5c-1.8-0.7-3.8-1.2-5.8-1.1c-2-0.1-4.1,0.2-6-0.6\n                        c-0.4-0.4-1.3-0.6-0.6-1.5c-5.5,1.2-10.8-2.4-16.3-0.5c-1.2,0.2-2.4,0.3-3.6-0.4c-0.4-0.3-0.6-0.7-0.5-1.2\n                        c0.4-0.5,0.9-1,1.5-0.2c-0.2-0.6-0.7-0.6-1.1-0.4c-1.3,0.5-2.6,0.6-3.9,0.3c-4.1-0.7-8.2-1.6-12.4-1.7\n                        c-9.6-1.8-19.4-2.5-29.1-2.8c-4-0.1-7.9-0.4-11.9-0.9C942.8,124.4,942.3,123.9,942,123z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6535B"),
                d:
                  "M764,122c0.8,1.5,0.5,2.9-1.3,2.9c-5.5-0.1-10.5,3.3-16.1,2.2c-6-1.2-11.6,2.3-17.4,1.8\n                        c-5.1-0.5-8.8,0.9-12.3,4.2c-0.4,0.3-0.8,0.4-1.3,0.2c-1.6-1.1-3.4-0.5-5.1-0.6c-2.6-0.1-5.6,1.1-7.6-1.6\n                        c1.3-1.6,1.2-3.9,5.1-2.8c2.8,0.8,8,0.3,10.9-3.2c4.7,0.2,9.3,0.7,14,0c0.7,0,1.3,0,2,0c3.1-1.2,6.4-4.2,9.1,0.7\n                        c0.4,0.7,1.9,0.4,2.6-0.6c0.4-0.5,0.8-1.6,1-1.6c2.7,0.4,4.8-0.7,7.2-1.8C757.5,120.5,761,120.5,764,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6535B"),
                d:
                  "M820,122c-9.7,2.4-19.3-0.3-29,0c-0.8-5.9,5.1-4.9,6.6-4.3c5.8,2.4,11.7,0.6,17.4,1.3\n                        C815.3,122.3,819,120,820,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6535B"),
                d:
                  "M790,122c-2.2,1.3-4.5,2.6-7,0.6c-0.7-0.5-1.6-0.3-2.3,0.1c-5.7,3.4-11.3,3.3-16.7-0.7\n                        c3.2-1.3,7.5,1,10-3.1c0.4-0.6,0.9,0.5,1,1.1c0.5,2.8,2.1,1.5,3.2,0.8C782.5,117.9,786.3,119.7,790,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75964"),
                d:
                  "M1061,141c0.7,0,1.3,0,2,0c2.7-1.3,4.8-1.3,7.1,1.4c1.2,1.4,4.5,2.1,6.5,2.2c4.8,0.2,9.3,1.7,13.9,2.2\n                        c4.1,0.5,6.4,2.2,7.4,6.1c-0.2,0.8-0.7,1.3-1.6,1.5c-6.1-0.2-11.3-3.4-16.9-5c-2-0.6-4.1-1.1-6.2-1.6\n                        c-1.2-0.4-2.2-1.1-3.3-1.9c-2-1.3-4.3-2.2-6.6-2.8C1062.4,142.9,1060.7,142.9,1061,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5A68"),
                d:
                  "M1097,153.9c0.3-0.3,0.7-0.6,1-0.9c6.5-1.8,11,2.9,16.3,5c1.2,0.5,2.3,1.1,3.7,1.1\n                        c0.4,0.5,0.9,1.5,1.2,1.4c5.6-1,8.8,4.7,13.9,5c3,0.2,1.5,2.3,1.9,3.5c-1.9,1.5-3.4-0.1-5-0.7c-8.6-3.7-17.3-7.2-26.1-10.2\n                        C1101.9,156,1098.3,156.9,1097,153.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8515A"),
                d:
                  "M1023,129c-8.1-1.4-16.3-1.3-24.2-4c-1.1-0.4-2.5,0-3.8,0c2.5-3.6,6.5-2.3,9.6-2\n                        c4.9,0.6,9.5,2.7,14.7,2.2C1021.4,124.9,1022.7,126.7,1023,129z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E84A58"),
                d:
                  "M1121.9,153.8c-1.7,1.6-3,1.4-4.7,0.4C1118.6,152.6,1120,152.8,1121.9,153.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53742"),
                d:
                  "M1071,637c-1.6,0-3.2,0-4.8,0c0-0.3,0-0.7,0-1c1.6,0,3.3,0,4.9,0C1071,636.3,1071,636.7,1071,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("945659"),
                d:
                  "M1807,309c-4-0.6-8.5,1.5-12-2C1799.2,306.3,1803.2,307,1807,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("945659"),
                d:
                  "M1793,307c-3-0.2-6.2,0.7-9-1C1787.2,304.3,1790.2,304.4,1793,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0565E"),
                d:
                  "M1789,311c6.9-1.5,13.3,1.6,19.9,2.6c11.3,1.6,22.6,3.1,34,3.9c1.8,0.1,2.9,2.5,5,1.5\n                        c0.3,0.4,0.3,0.9-0.1,1.3c-1.2,0.8-2.7,1.2-3.8,0.5c-1.7-1.2-2.2,0.8-3.4,0.9c-16-2.4-31.8-5.3-47.8-7.8\n                        c-1.3-0.2-2.6-0.5-3.7-1.3C1788.8,312.1,1788.7,311.6,1789,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A7575B"),
                d:
                  "M1848,320c0-0.3,0-0.7,0-1c0.9-0.3,0.3-2.5,1.7-1.8c7,3.6,15.1,2.9,22.3,5.8c1.8-1,3.6,0.5,5.4-0.1\n                        c3.1,0.9,6.5,0.6,9.6,1.8c0.6,0.7,0.6,1.5,0.2,2.4c-0.6,0.6-1.4,0.9-2.3,1c-11.2-1.7-22.3-3.7-33.4-5.8\n                        C1850.1,322,1848.6,321.7,1848,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE545C"),
                d:
                  "M1789,311c0,0.3,0,0.6,0,0.8c-5.6,1.6-10.9,0.5-16-2.1c1.5-1.4,3.3-0.6,5-0.8\n                        C1781.7,309.4,1785.5,309.2,1789,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4585C"),
                d:
                  "M1877,324c-1.7-0.3-3.4-0.7-5-1c0.4-0.8,1.2-1,2-1c0.7,0,1.3,0,2,0c0.7-0.6,1.5-0.5,2,0.2\n                        C1878.4,323,1877.7,323.6,1877,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B252E"),
                d:
                  "M1773,309.8c5.3,0.7,10.7,1.4,16,2.1c17.7,3,35.3,6,53,8.9c3.3-0.5,6.4-0.3,9.2,1.8\n                        c-0.4,1.2-1.4,1.7-2.5,2.1c-6.6-0.2-13-2.3-19.5-3.2c-13.4-2.3-26.7-4.5-40.1-6.6c-9.1-1.4-18.3-2.4-27.5-3.8\n                        c-1.6-0.5-3.2-0.8-4.8-0.7c-8-1.4-16.4-0.2-23.8-4.5c0-0.3,0-0.6,0-1C1746.5,305.7,1759.7,308,1773,309.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C4424C"),
                d:
                  "M1672,306c-5.8-2.1-11.9-0.8-17.8-1.3c-7.7-0.6-15.5-0.8-23.2-1.7c-0.5-1.9-1.4-2.8-3.7-2.8\n                        c-3.9,0.1-7.9,0.7-11.7-0.6c-1-0.7-1.5-1.5-0.6-2.6c2.8-0.4,5.8,1.9,9.1-1.5c-7.5,0-14.2,0-22,0c1.9-2,3.9-0.9,4.7-2.3\n                        c6,0.3,12,0.6,18,0.9c5.5,1.8,11.3,0.8,16.9,1.9c1.7,0.3,3.6,0.1,5.2,1c7.3,2.7,14.9,2.6,22.5,3c1.2,0.1,2.3-0.1,3.5,0.1\n                        c0.9,0.2,2.2,0.3,1.8,1.7c-0.3,1-1.5,0.3-2,0.7c10.8-2.2,21.4,0.3,32.1,2.1c1.2,2.4-0.2,2.7-2.2,3c-5.3,1-10.5-0.8-15.8-0.7\n                        c-0.7,0-1.3,0-2,0C1680.7,305.8,1676.3,306.3,1672,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF4652"),
                d:
                  "M1705,305c-11.3,0.5-22.4-3.7-33.9-1.6c0.2-2.4,2.6-0.5,2.8-2.3c-8.1-0.5-16.3,0.9-24.1-2\n                        c-1.3-0.5-2.7-0.3-2.8-2.1c10.8,0,21.3,2.1,32,2.9c18,2,36,4,54,6c8,1.1,16,2.1,23.9,3.2c-0.2,3.6-3.4,3.1-5.2,2.9\n                        c-3.2-0.4-6.2-0.6-9.4,0c-1.1,0.2-2.2-0.3-3.2-0.9c-0.9-0.6,1.6-1.8-0.2-1.3c-5.1,1.3-10.1,1.5-15-0.6\n                        c-4.3-1.8-8.9,0.6-13.2-1.2c-1-1.3-2.4-1.8-4-1.9C1706,305.9,1705.5,305.5,1705,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C4B4D"),
                d:
                  "M1913,325c-2.6,1.9-5.1,1.9-8,0.1c-2.2-1.4-4.8-2.3-7.5-2.1c-1.6,0.1-2.2-0.5-1.5-2\n                        C1902.1,320.6,1907.7,322.1,1913,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C4B4D"),
                d:
                  "M1920,327c-3.2,2.3-5.4,1.2-7-2C1915.3,325.7,1918.5,323.3,1920,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A55559"),
                d:
                  "M1927,332c3.7,1.9,7.3,3.9,11.7,4.2c1.8,0.1,3.5,1,4.3,2.8c-0.7,0.9-1.8,1.2-2.9,1.3\n                        c-8.6-1.4-17.3-2.3-25.2-6.1c-3.9-1.8-8.6-1.1-11.9-4.4c-0.2-0.6,0-1.1,0.5-1.4c1.9-0.8,3.8-0.3,5.6,0.5\n                        C1915.2,329.1,1920.8,332.1,1927,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5256"),
                d:
                  "M1909,329c-2,0-4,0-6,0c-5.6-0.2-10.9-1.8-16-4c-3.4,0-6.7,0.2-10-1c0.5-1.1,0.7-2-1-2\n                        c0.8-2.1,2.8-2.7,4.8-1.4c1.3,0.9,2.1,1.6,4,1.8C1893.2,323.4,1901.2,325.8,1909,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF454E"),
                d:
                  "M1551,303c-8.3,0.1-16.6-0.3-24.9,0.9c-0.9,0.1-1.6-0.1-2.1-0.8c5.5-2.1,11.4-1.3,16.9-2.1\n                        c4.7-0.7,9.8,0.2,14.5-2.1c1.5-0.7,4-4,6.2-0.3c0,0.1,1.2-0.3,1.2-0.5c0.1-3.4,2.8-3.4,5-3.6c1.4-0.2,3-1.6,4.4,1.3\n                        c1.2,2.5,15.5,1.4,18.7-0.7c3.8,2,8.1,0.9,12.1,1.9c1.2,0.3,2.6,0.1,3.9,0.1c1.6,3.6-0.3,4.6-3.4,4.5\n                        c-13.6-0.7-27.3,0.9-40.9,0.6C1558.8,302,1554.8,301.7,1551,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74148"),
                d:
                  "M1551,303c2.3-3.7,6.2-1.8,8.9-1.7c12.6,0.1,25-1.3,37.6-1.4c2,0,4.7-0.4,5.8,0\n                        c3.9,1.6,3.4-0.8,3.7-2.9c0.3,0,0.7,0,1,0c2.3,2.3,5.3,1.3,8,2c5.7,0,11.5,0,17.2,0c0.7,2.5-2.8,2-2.2,4\n                        C1604.3,303,1577.7,303,1551,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF454E"),
                d:
                  "M1616,299c-5.3,1.4-7.1,1-8-2c2.3,0,4.7,0,7,0C1615,297.8,1615.2,298.6,1616,299z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732932"),
                d:
                  "M159,546c-0.6,0.2-1.3,0.8-1.8,0.7c-7.3-1.3-7.9-1-9.9,5.7c-1.6,0.8-1.2-3.7-2.9-1.3\n                        c-1.1,1.5-4.5,3.2-1.3,5.9c-1.3-0.1-3.1,0.5-3.6-0.9c-1.9-4.9-6.1-3.6-9.4-3.4c-3.4,0.2-5.8-0.1-6.9-3.7\n                        c0.9-2,1.5-3.9,1.2-6.2c-0.4-3.5,1.8-4.7,5-2.9c1.7,0.9,3.2,2.3,5.6,2.5c-0.5-2-1-4.1,2.2-3.3c3.3,0.3,6.7,0.7,10,1\n                        c3.7,2.1,8.3,0.9,12,3c1.6,0.5,3.5,0,5,1h0C162.8,545.9,160.2,544.1,159,546z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M151,484c-0.3,1-1.7,1.8,0.9,2.6c2,0.6,3.8,2.7,7.1,3.8c-2,0.5-3.1,0.7-4.2,1c0,2.2,3.5,1.2,3.2,3.6\n                        c-10.3-2-20.7-4-31-6c0-0.3,0-0.7,0-1c-2-2.4-0.6-4.9-0.5-7.4c0.2-0.7,0.8-1.4,1.4-1.2c6.2,2,13,0,19.1,2.7l0,0\n                        C148.2,483,150.4,481.8,151,484L151,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("50131C"),
                d:
                  "M127,480c0,2.7,0,5.3,0,8c-1.9-0.3-3.2-0.9-2.4-3.2c0.5-1.6,0.9-3.2,1.4-4.8l0,0\n                        C126.3,479.7,126.7,479.6,127,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("470E1C"),
                d:
                  "M127,480c-0.3,0-0.7,0-1,0c2.6-7.5,4.2-15.3,6-23c2.1,0,2-1.9,2.6-3.2c1.2-2.5,2.9-4.1,6-4.1\n                        c-4.7,1.4-2.1,7-5.5,9c-0.3,0.2,0,1.3,0,1.9c5.5-1.5,0,6.1,5.4,6.4c2.9,0.2,3.3,6.9,5.8,10.1c1.4,1.8,2.9,2.8,0.7,4.8\n                        C140.2,482.6,133.6,481.4,127,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631126"),
                d:
                  "M136,428c-0.2-1.5,0.3-2.8,1-4c1.4-2.2,2.7-3.8,5.8-4.6c3.7-1.1,4.4-5.9,5.1-9.5\n                        c1.1-5.9,2-6.3,7.2-3.8c3.1,1.5,5.4,3.8,8.1,5.6c1.6,1.1,2.9,2.2,0.9,3.8c-1.6,1.3-3.6,4.4-5.6,1.7c-1.9-2.5-4-0.4-5.9-1.4\n                        c-0.8-0.4-1.1,1.4-0.3,2.2c1.8,1.9,1.5,3.5-0.3,5.1c-0.6,2.5,2.4,2.3,3,4c-4.3,2.6-0.1,3.5,1,5c-2.1,1.9-4.7,0.6-7,1\n                        c-1.5-0.5-2.9-0.1-4,1c-0.7,0-1.3,0-2,0c-1.8-0.9-2.4-2.6-2.8-4.4c-0.3,1,0,2.2-0.4,3.2c-0.5,1.2-1.3,2-2.6,1.7\n                        c-1.7-0.3-1.5-1.6-1.2-2.7C136.2,430.6,135.5,429.3,136,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M136,428c0.7,1.8,2.6,3.5,0.3,6.5c4.6-2.5,1.3-6.7,3.8-9.3c1,3.2,2,6,2.9,8.8c-1.7-0.1-2.6,1.4-4,2\n                        c-4.9-0.5-5.6-2-4-8C135.3,428,135.7,428,136,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("470E1C"),
                d:
                  "M151,484c-1.3-0.7-2.7-1.3-4-2c1.4,0.1,2.8-1.4,4.2-0.3c0.6,0.4,1.9-0.2,1.7,1\n                        C152.8,483.2,151.7,483.6,151,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M145,434c0.7-2.8,2.2-2.4,4-1C147.8,433.7,146.5,434.2,145,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M166.6,442c0.3,0.3,0.8,0.5,0.9,0.9c0.1,0.6-0.4,0.9-0.9,0.7c-0.4-0.2-0.6-0.7-0.9-1\n                        C165.9,442.4,166.2,442.3,166.6,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651322"),
                d:
                  "M138,523c1.9,1.1,3.4,2.9,5.7,3.6c1,0.3,3.5,1,2.3,3.4c-2.1-0.7-4.2-1.6-6.4-2.1\n                        C136.1,527.1,136.4,525.3,138,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("501116"),
                d:
                  "M1388,395c-1.2,0.7-0.9,1.9-1,3c-0.6,0.3-1,0.2-1.5-0.3c-1-1.8-1.2-3.8-1.7-5.7\n                        c-0.7-5.9-0.3-11.8-0.3-17.7c-0.2-10.1-1.1-20.2-1.9-30.3c0-2.7-0.2-5.3-0.1-8c0.6-2.5-1-5.6,2.2-7.2\n                        c2.7,3.7,2.4,8.1,2.6,12.4c0,0.5,0,1.1,0,1.6c0.5,7.1,2.2,14.1,1.9,21.2c-1.3,4.2-0.3,8.7-1.1,12.9c0.3,2.7,0.6,5.3,0.9,8\n                        C1388,388.3,1388,391.7,1388,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871726"),
                d:
                  "M1463,391c-2.7,0-5.3,0-8,0c-2.3-2-4.5-3.3-7.8-1.7c-1.7,0.8-4.1-0.1-6.2-0.3c-3.9-3.1-8-5.1-13.2-3.1\n                        c-1.5,0.6-2.4-0.2-2-2.2c0.3-1.5,0.7-3.5-1.9-3.8c-1-0.8-1.6-1.8-1.7-3.1c0.3-2.1,0.1-4.3,1.9-5.8c1-0.1,1.3,0.5,1.6,1.1\n                        c2,5.3,5.9,7.2,11.5,6.9c3.9-0.2,8.2-2.4,11.7,1.4c2.6-2.1,5.7,0,8.5-1.2c2-0.9,4.3-1.9,6.7-0.6c0.9,2.2,0.9,4.2,0.5,6.6\n                        c-0.5,3.1-1.7,3.5-3.5,3.1c1-0.3,3.4,1,3.4-2.4c0-0.9,0.6-1.6,1.6-0.7c0.1,0.1-0.3,0.9,0.6,0.3c1.8-1.1,3.4-2.6,6.2-1.5\n                        c3.9,1.6,7.9,3.7,12.4,3.3c1.3-0.1,2.3,0.6,2.3,2c0,1.8-1.1,2.7-2.8,2.9c-2.6,0.3-5.3-0.6-7.8,0.5c-0.3,0-0.7,0-1,0\n                        c-1.4-1.5-3.3-0.8-5-1C1468.1,393.4,1465.6,391.5,1463,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1827"),
                d:
                  "M1423,377c0.3,1,0.7,2,1,3c-1.7,1.3-1.9,3.4-2.4,6.1c-3.2-4.6-7.3-3.6-11.1-2.9\n                        c-2.1,0.4,1.2,2.1-0.3,3.3c-2.1-1.1-2.8-4.2-4.9-4.9c-2.3-0.9-3.4,3.6-6.3,2.6c-0.6-1.7,2.2-1.5,1.6-3.2\n                        c-1.9-0.9-7.1,1.6-4.5-4.2c0.3-0.6-0.3-0.8-0.8-0.9c-8.2-0.4-3.1-6.5-4.2-10c2.5-3.2,5.8-1.7,8.9-1.5c2.6,3,0,4.2-2.1,5.6\n                        c1,1.7,2.6,2.3,4.2,2.2c6.2,0,11.7,3.6,18,3.1C1421,375.5,1422.2,376,1423,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911A2F"),
                d:
                  "M1400,365c-2.9,1.2-6.1-0.7-9,1c-2.8-2-1.5,2.1-3,2c-0.9-1.6-0.5-3.3-0.2-5c0.8-0.9,1.9-1.2,3.1-1.3\n                        c2.9,0.3,5.6-1.1,8.5-0.7C1402.2,362.7,1402.3,363.4,1400,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801722"),
                d:
                  "M1388,363c0,1.7,0,3.3,0,5c-0.2,3.1,0,6.1,1,9c-0.6,0-1.2,0-1.8,0c0-4.7-0.1-9.3-0.1-14\n                        C1387.3,362.7,1387.7,362.6,1388,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1477,393c2-1.9,4.4-0.7,6.6-1c1.6-0.2,3.3-0.5,3.1-2.4c-0.2-2-2.6-1.2-3.1-1c-4.5,1.4-7.3-3.1-11.5-3\n                        c-1,0-1.3-0.6-2.9,0.1c-3.4,1.4-6.8,5-12.4,2.2c10.1,1.7,5.9-5.3,7.2-9c2.5-1.8,4.9-0.4,7.5,0.2c3.2,0.7,6.1,3.2,10,1\n                        c1.9-1.1,4.4,1,6.3,2.2c3.1,1.8,6,3.1,9.8,1.3c1.9-0.9,4.2-0.8,3,2.6c3.7,0.8,5.4,5.2,9.6,5.1c2,0,4,0.3,5.9-0.1\n                        c1.8-0.3,3.9-0.5,4.8,1.5c0.9,1.9-0.9,3-1.9,4.2l0,0c-4-0.8-7.9-0.1-12.2-1.6c-3.8-1.3-8.3-3.6-13.4-2.6\n                        C1488.1,393.8,1482.5,393,1477,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1471,392c2-1.4,3.9-2.1,5,1C1474.3,392.8,1472.4,393.7,1471,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921927"),
                d:
                  "M1519,397c1.5-4,1.4-5.6-4-4.4c-4.3,1-9.4,0.5-12.2-4.4c-0.4-0.7-0.9-1-1.5-0.4\n                        c-0.9,0.8-2,1.8-2.9,0.4c-1.1-1.7,1-2.5,1.9-3.9c-0.8-0.1-1.7-0.4-1.9-0.1c-3.7,4.4-7.3,1.2-10.5-0.6c-1.8-1-4.1-0.8-5.4-2.8\n                        c-2.9,4.2-6.6-0.8-9.4,0.7c-1.4,0.8-1.1,0-1.5-0.5c-0.5-0.6-0.6-1.5-1.7-1.5c-2-0.1-3.9-0.4-5.9-0.6c-2.6,0.3-5.2,0.6-7.5,2.1\n                        c-1.1,0.7-2.1,1.2-3.1,0.2c-0.7-0.7-1.4-1.7-2.5-0.9c-1.4,1.1,1.3,1.8,0.4,3c-2.1,0.5-2-1.7-3-2.6c-3.4-2.7-7.5-0.9-10.8-0.5\n                        c-6.8,1-11.9-1.6-12.9-8.6c-0.6,1.8-1.1,3.5-1.6,5.2c-5.6-0.7-11.4-0.3-16.7-3c-2.4-1.2-5.3,0.6-8-1.3\n                        c-3.2-2.1-0.5-4.9-0.1-4.8c3.6,0.7,1.1-2.1,1.9-2.9c1.6-1.7,1.1-2.6-1-3c0.1-2.5,1.8-1.9,3.3-1.7c2.1,2.1,3.5,5.3,7.3,1.5\n                        c1.8-1.8,3.3,1,4.3,2.6c0.8,1,1.9,1.1,3.1,1.2c8.2,0.5,16.4,1.9,24.4,3.6c5.2,1,10.5,1.3,15.7,1.7c7.7,0.6,15.2,2.9,23,2.7\n                        c5.6-0.2,10.7,1.9,15.9,3.4c2.5,0.7,4.7,0.9,6.6-1.1c5.1-0.4,10.3-1.5,15.2,1.1c-1.1,1.4-2.7,1.1-4,1c-2.8-0.3-2.2,1.4-2,3\n                        c1.4,4.4,5.1,2.7,8,3c-1.9,3.1-0.9,4.3,2.6,5.1c4,0.9,7.8,2.7,11.7,4.2c1.2,0.5,1.6,1.5,1.7,2.7c-0.3,1-0.7,2-1,3\n                        C1529.6,398.9,1524.1,399.4,1519,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC5D66"),
                d:
                  "M1643,383c-3.3,2.1-6.4,4.6-10.7,3.9c0.3-1.7,2.3-0.1,2.8-1.5c-3.7-1.4-8.1,1.8-11.5-1.6\n                        c-5.1,4.6-11.3,0-16.7,2.1c-0.7,0.3-1.8-0.5-2.8-0.8c-1.3-2.4-3.3-1-5-1v0c0.1-3.8-1.7-5.3-5.5-5.1c-3,0.2-7.5,1.1-8.6-2\n                        c-2.2-6.1-7-5.9-11.7-6.8c-1.5-0.3-2.9-1.4-4.3-2.1c0.2-0.2,0.3-0.4,0.5-0.5c1.8-0.9,3.8-0.6,5.6-1.3c1.6-0.4,3.4-0.4,5-1.1\n                        c2.2-0.6,4.3-1.5,6.6-1.1c0.5,0.1,0.9,0.3,1.3,0.6c0.4,0.5,0.6,1.7,0.9,1.5c3.4-1.9,6.4-0.3,8.7,1.6\n                        c5.3,4.4,11.8,5.7,17.9,7.5c5.5,1.6,10.6,4.5,16.6,4.4C1635.8,380.3,1639.6,381.2,1643,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6F76"),
                d:
                  "M1567,369c-8.1,0.3-15.8,3.1-23.9,4c-0.8-0.3-1.5-0.6-2.3-0.9c-0.3-0.4-0.4-0.8-0.3-1.3\n                        c1.1-2.5-0.7-4.2-1.8-6.1c-0.1-0.5,0.1-0.9,0.3-1.3c1.5-2.2,0.3-3.6-1.3-5.1c-1.8-1.7-3.5-3.4-3.5-6.2c2.1-3.5,3.8-1,5.4,0.4\n                        c3.5,3.2,6.3,7.2,10.7,9.5c4.3,2.3,8.7,4,13.7,3.5c1.6-0.2,3.3-0.1,4.8,0.9c0.4,0.4,0.5,0.9,0.2,1.4l0,0\n                        C1568.2,368,1567.4,368.2,1567,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A24"),
                d:
                  "M1518,377c-5.3,0-10.7,0-16,0c-4.9-0.7-9.4-2.4-13.5-5.1c-1.5-1-3-2.7-4.6,0.1\n                        c-0.4,0.7-1.6,0.9-2.3,0.5c-4.1-2.2-9.6,0.7-13.1-3.7c-0.4-0.5-0.8-0.7-1.5,0.1c-1.7,2-3.8,1-5.4,0c-2.2-1.4-4.1-1.7-6.5-0.8\n                        c-1.4,0.5-3.6,1.6-4.3-0.5c-0.7-2.1,2-2.1,2.9-3.2c-0.9,0.2-1.5,1.1-2.4,1.5c-1.1,0.5-1.6,2.7-3.2,1.4\n                        c-1.4-1.1-0.3-2.3,0.4-3.5c1.2-2.2-2.6-1.4-2-3.2c1.2-3.5,4.5-3.1,7.2-3.7c3.2,0.8,6-0.7,8.8-1.8c0.4-0.2,0.9-0.3,1.3-0.3\n                        c1.3,0.2,2.9-0.4,3.7,1.2c0.4,2.2,1.3,3.4,4,2.7c4-1.1,8.1-0.5,12.2-0.5c2.1,0,3.8,0.8,5.1,2.5c0.9,2.5,4.6,2,5,5.3\n                        c0.1-1.8-1.2-3.1-0.3-4.6c0.3-0.3,0.7-0.6,1.2-0.7c4.6-0.8,5.2,4.2,8.3,5.6c0.7,0.1,1.6,0,1.9,0.5c3.9,4.8,9.8,4.3,15,5.5\n                        c0.9,0.2,2,0.4,2.2,1.7c-1.8,2.2-4.2,1.9-6.3,1.8c2.4,1.1,5.5-1.9,8.1,0.6C1522.2,377.8,1520,376.7,1518,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1467,355c-1,0.3-2,1.6-3,0c-0.5-1.2,0.2-2,1.1-2.6c5.5-2.1,11.4-1.6,17-3.3c1.5-0.4,3.1-0.5,4.7-0.2\n                        c0.5,0.1,1,0.2,1.5,0.4c10.3,3.1,20.8,5.6,30.7,9.7c5.5,2,10.9,4.3,15.9,7.5c1.3,0.9,3,1.4,3.5,3.2c-0.1,2.3-2.4,2.8-3.4,4.3\n                        c-3.4,2.1-7.6-0.1-11,2c-3,0-5.9,0-10.1,0c3.3-1.5,6.2-1,8.1-3c-1.2-2.7,0.8-2.6,2.4-2.8c1.6-0.1,3.2,0.8,5-0.2\n                        c-9.8-2.3-18.8-7-28.7-8.9c-6.9-1.8-13.2-6-20.8-5.5c-2.4,0.2-4.9,0.4-7.3,0.5C1470.6,356.3,1468.6,356.5,1467,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1A2B"),
                d:
                  "M1547.9,376.1c1.4,0.8,3,1.4,3.9,2.9c-1,1-1.9,2.5-3.6,0.8c-1.4-1.4-3.4-1.8-5.5-2.1\n                        C1543.9,375,1546.7,378.2,1547.9,376.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02534"),
                d:
                  "M1535,374c-0.7-2.7,2.1-2.7,3.1-4.1c1.4-0.8,2.3-0.2,2.9,1.2c0,0.4-0.1,0.7-0.1,1.1\n                        C1539.5,374.5,1537.1,374,1535,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E55861"),
                d:
                  "M1781,399c-1.9,1.5-4.9,1.3-6,4c-2.4-0.4-4.8,0.8-7.1-1.1c-1.9-1.5-1,2.3-2.9,1.9\n                        c-6.8-1.4-14.1-0.4-19.9-5.4c-1.4-1.2-2.9-1.5-4.6-1.5c-1,0-2.5,0.3-2.7-0.7c-1.2-4.9-5.1-2.9-8.1-3.3\n                        c-4.7-0.6-9.5-0.6-14.1-1c-4.5-0.5-8.8-3.1-13.5-2c0.4-0.4,0.5-0.8,0.5-1.3c0.1-1.9-1.7-4.6,0.6-5.5c2.1-0.8,4.9-0.2,7,1.3\n                        c2.9,2,5.6,3.6,9.1,1.2c1-0.7,2.3-0.6,3.4-0.1c6.4,3,13.2,2.6,20,2.7c0.5,0.2,0.9,0.4,1.3,0.7c1.9,1.3,3.4,3.8,6.4,2\n                        c0.8-0.5,1.9,0.3,2.8,0.6c7.8,2.9,16,3.1,24.2,3.3C1779.7,395,1782.7,394.9,1781,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2545D"),
                d:
                  "M1743,389c-7.1,1-14,0.9-20.7-2.3c-1.1-0.5-2.2-1-3.2,0.2c-2.4,2.9-5,2.2-7.3,0.2\n                        c-2.4-2.2-6-1.4-8.4-3.5c-1.4,1.9,0.6,4.6-1.5,6.4c-0.2-1.4-0.2-3.9-2.2-2.5c-3.4,2.3-3.8-0.1-4.9-2.1\n                        c-1.2-2.4-3.1-3.8-5.9-3.4c-0.3-0.6-0.2-1,0.3-1.4c6.4-2.3,13.2-2.9,19.9-3.8c1.9,0.4,4.9-0.5,3.7,3.3\n                        c-0.1,0.3-0.4,0.7-0.3,0.7c0.5,0,0.9-0.3,1.4-0.5c2.2-0.6,4.3-0.7,6,1.1c0.2,0.2,0.3,1.7,1.1,0.3c2.1-3.6,3.9-1,6,0.2\n                        c4.1,2.4,8.8,1.9,13.4,2.1C1744.6,384.1,1745.2,385.2,1743,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD515A"),
                d:
                  "M1689,381c0,0.3,0,0.7,0,1c-4.4,0-8.8,0.7-13,2c-1.7,0-3.3,0-5,0c-5.4,1.7-9.9-1.5-14.8-2.7\n                        c-0.8-2.6,1.6-2.3,2.8-3.2c5.3-2.4,10.9,0,16.2-1.2C1679.8,378.3,1685.2,376.7,1689,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5545D"),
                d:
                  "M1775,404c4.2,0.3,7.7-3.1,12-2c-2.6,5-6.8,7.9-12.3,9c-3.2,0.6-6.3,0.1-9.2-1.3\n                        c-0.2-0.2-0.4-0.4-0.5-0.6C1767.3,405.2,1771.9,406.2,1775,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6970"),
                d:
                  "M1775,416c-5.6-0.7-11.1-1.9-16-5c0.7-0.8-1.7-4.5,2.2-2.2c1,0.6,2.5,0.2,3.8,0.2l0,0\n                        c2.5,0.8,5,1.3,7.6,1.7C1775.6,411.2,1776.9,413,1775,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF5763"),
                d:
                  "M1656,381c3.3,0.1,6.5-0.5,9.2,2.4c1.4,1.4,3.8,0.5,5.8,0.7c-6.6,1.2-13.1,3.5-20,3\n                        c-3.5,0.4-6.2-1-8-4c-4.3,1.3-7.8-2.5-12-2c-1.1-3.8,2.1-3,3.9-3.2c5.3-0.7,10.5,1.2,15.8,0.4c0.7,0,1.5,0,2.2,0.3\n                        C1654,379.1,1655.1,380,1656,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB616B"),
                d:
                  "M1599,384c2-1.1,4.2-3.7,5,1C1602.4,384.2,1600.5,385.4,1599,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961926"),
                d:
                  "M1843,451c1.2-1.1,2.4-2.2,3.7-3.2c2.8-2.3,4.4-4.4-0.7-5.8c2.1-1.9,4.5-1.3,6.9-1\n                        c0.6,0.2,1.5,0.4,1.6,1c1.2,6.4,6,6,10.8,5.7c0.8-0.1,1.6,0.2,2.4,0.4c7.6-0.4,15.3,0.5,22.6-1c6.4-1.3,13-0.6,19.3-2.4\n                        c2.5-0.7,4.4,0.9,6.5,1.9c0.9,1,1.6,2,0.9,3.4c-0.5,0.2-1.1,0.7-1.4,0.5c-4.1-2-6.5-1.2-6.7,4.5c-1.7-6.6-5.8-5.4-9.3-3.5\n                        c-2.6,1.4-4.6,2-7.6-0.8c0.7,2.1,0.9,2.9,1.3,4.1c-0.6-0.2-1.2-0.2-1.5-0.5c-2.7-2.6-8.8-2-10.8,1.2c-1.3,2-1.8,0.8-2.8-0.2\n                        c-2.2-2.4-4.6-4.8-8.2-2.2c-1.7,1-3.7,1.5-5,3c-0.5-1.3-4.8,2.7-2.9-2.1c0.4-1-1.1-0.8-1.8-0.8c-2.9,0-2.2,2.3-2.3,4\n                        c-0.6-0.3-1.6-0.4-1.7-0.8c-0.3-2.6-4-2.2-4.2-4.9c0,0-1.2-0.1-1.3,0c-1,3.3-4.9,2.2-6.9,4.5\n                        C1844.5,454,1845.2,452.1,1843,451z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941926"),
                d:
                  "M1917,450c-0.3-1-0.7-2-1-3c0.9-2.2,2.6-2.6,4.9-2.4c12.2,1.5,24.2,3.9,36,7.4\n                        c0.8,0.2,1.8,0.2,2.3,0.8c3.8,4.3,9.7,4.2,14.4,6.7c2.6,0.2,5.3-0.3,7.8,0.5c1,0.3,1.9,0.7,1.9,1.9c0,0.9-0.5,1.6-1.3,1.8\n                        c-2.3,0.7-4.4,2.5-6.9,1.2c-2.6-3.9-7-3-10.6-3.3c-4.1-0.3-8-0.7-10.7-3.9c-1.3-1.6-1.4-0.5-2.6-0.4\n                        c-3.6,0.3-7.3-0.8-10.9-1.7c-1.4-0.3-2.3-2.4-4.3-1.2c-0.7,0.4-1.4,0-0.8-0.9c2.4-3.5-2.3-1.6-2.3-3.2\n                        c-2.6,2.1-5.5-0.7-7.4-0.1C1922.1,451.4,1919.7,449.3,1917,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961923"),
                d:
                  "M1975,465c2.5-0.9,5-1.8,8.8-3.3c-4.8-1.2-8.4-0.5-11.8-0.8c-0.1-5.7,4.8-2.9,7.2-4.2\n                        c5.4,0.3,10.7,1.2,14.3,5.8c2.2,5.6-0.9,10.2-7.9,11.6c-0.8,0-1.6-0.2-2.3-0.5c-0.5-0.2-0.9-0.5-1.2-0.9\n                        c-0.9-1.1-2.1-2.1-1.3-3.8c1.5-0.7,2.8-2.4,4.9-1.1c-2.7-1.7-4.1,1-6.1,1.8c-1.2,0.1-2.6,0.4-2.6-1.6c0.6-1.7-0.9-0.8-1.4-1\n                        C1974.4,466.6,1973.8,466.1,1975,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A182A"),
                d:
                  "M1934,461c-0.5-1.1-0.7-2,1-2c4.8-0.1,9.2,1.8,14.2,1.8c4,0,10,1.4,13.8,5.2c2,0.5,4.9-0.6,5.2,2.8\n                        c-0.3,0.4-0.7,0.7-1.2,0.9c-1.7,0.3-3-0.3-4-1.7C1953.3,465.7,1943.7,463.3,1934,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("94192A"),
                d:
                  "M1968,469c-0.7-2.6-3.8-1.3-5-3c3.1-2.6,6.4-3,9,0.4c1.5,1.9,2.9,2.2,4.9,1.6c0.7,1.2,1.9,1,3,1\n                        c0.3-0.4,0.7-0.4,1,0c-0.2,1.5,1.4,1.9,2,3c-1.2,1.4-2.8,1.8-4.5,1.3C1974.9,472.1,1971.1,471.5,1968,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d: "M1865,456c0-3.8,2.8-2.9,5-3C1869,455,1867.4,456.2,1865,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1868,460c-1.1-0.3-2.8-0.2-2.3-1.7c0.4-1.4,1.5-0.7,2,0.3C1867.9,459,1867.9,459.5,1868,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62232"),
                d:
                  "M1854,442.1c-2.7,0-5.3,0-8-0.1c-1.7-0.7-3.4-1.3-5.1-2c0.7-3.3,4.8-3.2,6-6l0,0\n                        c0.9-0.6,1.9-0.5,2.8-0.7c0.5,0.1,0.9,0.3,1.3,0.6c-2.1,4.4,1.9,5.8,4.1,8.1C1854.8,442.4,1854.4,442.4,1854,442.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33744"),
                d:
                  "M1847,434c-0.3,3.7-4.3,3.7-6,6c-0.7,0-1.3,0-2,0C1840.9,437,1844.1,435.7,1847,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8525D"),
                d:
                  "M1865.2,418.1c-4.1,2.9-7.8,6.3-12.3,8.7c-3.3,0.6-6.4-0.5-9.6-0.8c-0.4-0.1-0.9-0.2-1.3-0.4\n                        c-1.1-0.7-2.4-1.1-3.7-0.9c-0.7-0.1-1.3-0.3-1.7-1c0-3.2,2.5-3.1,4.2-2.5c2.5,0.9,3.7-0.4,5.2-1.7c0.4,0.1,0.6,0.1,0.6,0.1\n                        c0-0.2-0.1-0.3-0.3-0.4c-0.7-0.4-1.3,0-1.9,0.2c-1.8,0.6-3.9,1.3-5-0.6c-0.9-1.5,0.9-2.8,2-3.6c2.5-1.8,0.9-5.8,4-7.1\n                        C1852.5,410.2,1859.1,413.7,1865.2,418.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85964"),
                d:
                  "M1865.2,418.1c-6.1-1.8-11.4-5.3-17.1-8.1c-1.1-0.5-2-1-3.1-1c-2.2-0.4-5.1,3.2-6.5-1.3\n                        c1.6-1.2,0.7-3.6,2.5-4.7c0.5,0,1.4,0,1.4,0c0.4,3.4,3.2,5.8,5.3,3.5c2.7-2.8,5.6,2.1,7.3-1.4c1.7,0.6,3.3,1.2,5,1.9\n                        c1,1.3,2.5,1.8,4,2.1c1.6,2.2,4.9,2.9,5.3,6.1C1868.1,416.4,1866.9,417.6,1865.2,418.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45863"),
                d:
                  "M1806,435c0.3-0.7,0.7-1.3,1-2c4.8-2.1,10.1-1,15.1-1.7c3.7-0.6,7.2-0.4,10.5-3.4\n                        c1.9-1.7,6-0.9,9.1-1.9c0.9-0.3,2-0.3,2.9-0.5c2.1,1.1,5.2-0.5,6.5,2.6c-3.8,3-7.8,5.7-12,7.9c-1.5-0.2,0.5-3-1.3-2.3\n                        c-2.9,1.2-6.1-0.6-8.5,0.5c-5.9,2.7-11.5,0.4-17.1-0.1c-1.8-0.2-3.2,0.2-4.4,1.5C1806.8,436.7,1806.1,436.5,1806,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE2E3B"),
                d:
                  "M1855.9,427.9c2.6-1.3,4-4.3,7.1-4.9c1.4-0.1,2.4-0.9,3.4-1.8c3.4-2.7,4.8-2.4,7.9,1.3\n                        c-0.1,0.5-0.3,0.9-0.7,1.1c-1.2,0.9-2.6,0.9-3.7,2.8c-2.4,4-7.2,4.5-11.9,3.2C1857.1,429.3,1856.3,428.8,1855.9,427.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3444B"),
                d:
                  "M1874,423c-2.3-2.6-4.7-3.9-7.8-0.9c-0.8,0.8-1.9,2.1-3.3,0.8c3.2-2.1,5.4-5.5,9.1-6.9\n                        c2.4,3.5,7.4,2.6,10,5.9C1879.7,424.2,1877,425.1,1874,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0686F"),
                d:
                  "M1869.3,415.2c-1.7-2.1-4.9-2.9-5.3-6.1c0.7,0,1.3,0,2,0c1.7,2.6,4.3,3,7.1,3c-0.3,1-0.7,2-1,2.9\n                        C1871.1,415.1,1870.2,415.1,1869.3,415.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3A49"),
                d:
                  "M1855.9,427.9c0.8,0.1,1.7,0.3,2.2,1.1c-1.4,3.7-5.2,3.6-8,5c-1,0-2,0-3,0\n                        C1849.9,432,1852.9,429.9,1855.9,427.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC5762"),
                d:
                  "M1851.1,428.2c-2-1.9-4.9-1.1-7.1-2.2c-1.1,0.6-2.1,0.8-2-1c3.8-0.2,7.4,0.4,10.9,1.8\n                        C1852.3,427.3,1851.7,427.7,1851.1,428.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE626C"),
                d:
                  "M1807,431c-3.3,0-6.7,0-10,0c0.9-3.6-3.9-1.4-4-4c-1.1-2.9,1.2-2.8,2.8-3c1.9-0.3,3.7,0.7,5.7,0.8\n                        c-3.2-2.3-6.4-4.6-8.8-7.7c-0.7-0.9-1.7-1.8-0.1-2.8c4.8-0.7,9.2,1,13.8,1.7c2.2,0.6,4.4,1.1,6.5,2c1.9,1,4,1.6,5.6,3\n                        c1.1,0.9,2.7,1.8,2.4,3.5c-0.3,1.6-1.8,2.3-3.3,2.5c-1,0.1-1.7-0.4-1.1,1.2c0.6,1.7,0,4.1-1.7,3.9c-2.3-0.2-5.4,2.2-7.1-1.4\n                        c0-0.1-0.3-0.2-0.5-0.1C1807.1,430.7,1807.1,430.9,1807,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3656D"),
                d:
                  "M1792,415c3.2,2.7,5.7,6.4,9.9,7.9c1.6,0.6,2,1.9,1.5,3.2c-0.9,1.9-2.2,0.3-3.2,0\n                        c-2.5-0.8-5.2-2.7-7.1,1c-2.5-1.5-5-2.5-8-2c-0.6-1.4-1.7-1.9-3.1-2.2c-3.9-0.6-6-3.2-6.9-6.8c0.4-3.1-0.9-4.7-4-5\n                        c-2.2-0.2-4.3-0.5-6-2c3.4-0.1,6.6,1.6,10,1c5.3-0.1,10.3,1.8,15.3,3C1791.3,413.2,1792.2,413.7,1792,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA5D68"),
                d:
                  "M1807,431c0.1-1.3-0.3-2.8,1.8-2.9c1.4,1.1-2,3,0.3,3.6c1.8,0.4,4.2,0.5,5.7-0.4\n                        c2.9-1.9-0.8-4.4,0.3-7.1c1.6,3.1,3.4,1.6,5.2,0.3c-1.4-3.1-5.1-3.2-7.2-5.4c0.5-0.5,1-1,1.7-0.9c7.8,0.7,15.6,1.3,22.4,5.9\n                        c0.7,0,1.3,0,2,0c1.1,0,2.1,0.3,3,1l0,0c0.4,0.8,1.2,1,2,1c-1.9,1.8-5.5,0.4-6.6,3.5c0,0.1-0.4,0.2-0.4,0.2\n                        c-4.4-3.8-5.9,2.8-9.8,2.7c-3.8-0.1-7.9-0.6-11.9,1c-2.3,0.9-5.5-0.2-8.2-0.5C1807,432.3,1807,431.7,1807,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3644"),
                d:
                  "M959,638c8.4,1.6,16.6-1.3,24.9-0.8c7.2,0.4,14.3,1,21.4,1.5c3.2,0.2,6.5-0.7,9.6,0.3\n                        c6.8,0,13.7,0,20.5,0c1.3,0,2.9-0.3,3.3,1.5c0.3,1.3,0.6,2.8-0.4,3.8c-1.2,1.2-2.8,1-4.1,0c-0.7-0.5-1.2-1.4-2.1-1\n                        c-8.1,3.6-16.7,0.4-25,1.8c-6.8,1.2-13.5-0.7-20.2-0.1c-2.4,0.2-5-0.5-7.2,1.4c-0.5,0.4-1.8,0.6-2.3,0.3\n                        c-4.3-3-9.1-1-13.6-1.6c-1.2,0.9-3.2,0.3-4,2c-2.9-2.3-3.3-4.4-1.4-7.2C958.9,639.3,958.9,638.6,959,638z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13541"),
                d:
                  "M875.8,644c-0.9-0.1-2.5-0.1-2.5-0.3c-0.2-1.2,0.9-0.6,1.5-0.7c0.4-0.1,0.9,0.2,1.3,0.3\n                        C876,643.5,875.9,643.8,875.8,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73744"),
                d:
                  "M960,647c-0.6-4.5,1.7-3.4,4-2C963.9,648.2,961.8,647.3,960,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13B46"),
                d:
                  "M1391,589c0-0.7,0-1.3,0-2c1.2,0.2,3.2-0.4,3.1,1.4C1394,589.5,1392.1,588.8,1391,589z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B3642"),
                d:
                  "M1387.9,578c0.6,5.7-0.7,11.3-1,17c-3,4-6.8,4.8-11.5,3.4c-2.5-0.8-4.9-1.8-7.5-2.5\n                        c-2.7-0.7-5.2-0.7-7.7,0.5c-0.5,0-1-0.1-1.4-0.3c-0.7-0.7-0.5-2.2-1.7-2.2c-6.3-0.2-12.3-3.1-18.4-3.2\n                        c-6.7,0-12.8-2.7-19.4-2.9c-1.7,0-3.5-0.4-2.6-3c5.9-2.3,11.7-4,17.4,0.6c0.2,0.1,0.5-0.6,0.9-0.8c4.1-1.6,8-1.6,11.8,1.1\n                        c2.4,1.7,4.7,1.1,7-0.3c1.8-1.1,3.6-1.9,5.4-0.1c0.3,0.3,1.1,1,1.1,0.6c1.4-5.1,5.1,0,7.7-1.8c1.8-1.2,4.2,0.9,5.5,3.1\n                        c1.3,2.3,3.3,3.6,6.1,3.4c2.5-0.2,4.1-1.1,4.1-3.8c0.1-0.7,0.3-1.4,0.5-2.1C1386,582.7,1384.5,579.1,1387.9,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1D2B"),
                d:
                  "M1386,602c-2.3,4.5,0.8,9.4-0.9,14c-7.3-2.5-14.8-1.6-22.3-1.3c-8.5,0.3-16.9,1.3-25.4,0.3\n                        c-2.1-0.8-4.4-0.5-6.5-1.4c-3.6-1.8-7.5-1.1-11.2-1.3c-4.1-0.3-8.3,0.8-12.3-0.9c-1.2-1.9,0.5-2.4,1.6-3.2\n                        c1.4-0.5,2.8-0.5,4.3-0.2c3.6,1,7.3,0.4,11,0.5c3.5,0.1,7-0.2,10.5,0.3c4.1,1.2,8.2,0.5,12.4,0.7c4.1,0.1,8.2,0,12.3,0.1\n                        c2.8,0.1,5.2-0.6,7.3-2.5c1-1,3.1-1.3,2.7-3.1c-0.4-1.8-2.2-2.7-4-3.2c-2.3-0.6-5.1,0-6.6-2.6c2.1-2.7,4.9-1.1,7.4-1.1\n                        c0.5,0,0.9,0.1,1.4,0.3c3.8,2.5,9.4,0.9,12.1,5.8c0.5,0.9,1.4-0.2,2.1-0.4C1383.2,602.3,1384.4,601.2,1386,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24650"),
                d:
                  "M1337.1,614c14.6,0.5,29.1-1.7,43.7-0.8c2.2,0.1,4,0.2,4.3,2.9c-0.4,1.7-0.8,3.6-2.9,4.1\n                        c-2.1,1.7-4.6,1.6-7.1,1.4c-10.5-0.8-21.1-1.1-31.7-1.6c-4.5-0.9-9.1,0.1-13.5-1.1c-1.7-1-5.5,0-4.6-3.4\n                        c0.7-2.9,3.6-3,6.1-1.9C1333.3,614.4,1335.2,613,1337.1,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA333E"),
                d:
                  "M1343,619c6.4,0,12.8-0.4,19.1,0.2c6.7,0.7,13.4,0.9,20.1,0.9c-0.1,1.4-0.8,2.3-2,2.9\n                        c-5.6,1.5-11.1-0.5-16.6-0.1c-6.8,0.4-13.7,0.1-20.5,0.1C1342,621.7,1341.8,620.3,1343,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43D4B"),
                d:
                  "M1387.9,578c-1.8,2-0.3,5.4-2.9,7c-0.3,0-0.5-0.1-0.8-0.1c-2.3-0.9-2.2-2.9-2-4.8\n                        c0.2-6.9,1.6-13.8,1.3-20.7c-0.2-4,0.9-7.5,3.9-10.3c0.5-0.4,1-0.4,1.6-0.3c0.6,1.4,0.6,2.8,0.1,4.2\n                        C1389,561.3,1389,569.7,1387.9,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3D49"),
                d:
                  "M1388.9,549c-0.3,0-0.6,0-0.9,0c-0.6,0.3-1,0.2-1.4-0.3c-1.7-3.2-0.8-6.6-0.4-9.7\n                        c0.7-5.2,0-10.2-1-15.2c0.3-3.5,0.6-6.9,0.5-10.4c0-3.1,0.1-6.1,0.4-9.2c0-0.8,0.1-1.5,0.2-2.2c0.4-1.2,0.7-2.4,1.7-3.3\n                        c0.5-0.1,1,0,1.3,0.4c0.4,1.9-0.3,4,0.5,5.9c0,9.3,0.1,18.6,0.1,27.9c0,1.3,0,2.6,0,3.9C1388.6,540.9,1390.4,545.1,1388.9,549\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892837"),
                d:
                  "M1386,602c-2.3,1.2-4.6,2.4-6.9,3.7c-1-7.3-9-3.6-12.1-7.7c2.6-2.4,5.4-0.9,8-0.2\n                        c4.3,1.2,8.3,1.1,11.9-1.8C1387,598.1,1387.2,600.1,1386,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912D3B"),
                d:
                  "M1386.9,596c-0.9,2.9-2.2,3.9-5.8,3.3c-4.6-0.8-9.3-1.9-14.1-1.3l0,0c-2.3-0.8-5-0.2-7-2\n                        c3.5-4.5,8.2-1.8,11.2-0.4c5.7,2.7,10.6,2.8,15.7-0.6C1386.9,595.3,1386.9,595.7,1386.9,596z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741C1E"),
                d:
                  "M1388.9,549c0.7-4-0.8-8.2,1-12.1c-0.3,5.4,1,10.8-0.8,16.1C1389.1,551.6,1389,550.3,1388.9,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92414A"),
                d:
                  "M186,302c0,0.3,0,0.7,0,1c-6.9,0-13.8,0-20.8,0c0-0.3,0-0.7,0-1C172.1,302,179.1,302,186,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931927"),
                d:
                  "M1991,626c5-1.1,9.8,2.3,14.8,0.7c1.2-0.4,2,0.4,1.9,1.6c-0.1,0.9-0.5,2.4-1.5,2.2\n                        c-4.4-0.6-8.5,2.8-13.2,1c1,0.5,2.1,1,3.1,1.5c-2.2,1.6-4.7,0.7-7.1,0.9c-3.4-1.7-7-0.1-10.4-0.4c0.1,0.1,0.1,0,0.2,0\n                        c0.5,0,1,0.1,1.3,0.5c-3.2,1.8-6.7,0.5-10,1c-2-0.1-4-0.1-6-0.2c-0.1-2.2,0.5-3.8,3-3.9c1.3,0.7,2.7,1.3,4,0\n                        c0.8,0,1.6-0.2,2-1c5.2,0.6,10.5-1.5,16,1.3C1989.2,629.2,1987.5,626.3,1991,626z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831820"),
                d:
                  "M1980.1,634c-1.6,0-3.2,0-4.9,0c4.2-0.2,8.1-2.4,12.4-1.8c1.1,0.2,1.3,0.8,1.4,1.6\n                        C1986,634,1983,634,1980.1,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741C1E"),
                d:
                  "M1389,467c2,5.2,0.5,10.7,1,16c0,1.4-0.1,2.7-0.1,4.1c-0.6,0.3-1.1,0.1-1.5-0.4c-1.1-1.9-0.7-4-0.9-6\n                        c0.4-4.4-0.9-8.8,0.8-13.1C1388.6,467.4,1388.8,467.2,1389,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881927"),
                d:
                  "M1389,487c0.3,0,0.6,0,0.9,0.1c0,6-0.1,12-0.1,18.1c-1.5-1.9-0.5-4.1-0.9-6.1\n                        C1387,495,1386.5,491,1389,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B1321"),
                d:
                  "M1388,441c1.5,1.3,0.9,3.1,0.9,4.7c0.1,7.1,0.1,14.2,0.1,21.3l-0.1,0.1c-1.4,0.6-2.8,0.7-3.9-0.6\n                        c-0.6-0.7-1-2.2-2.1-1.8c-6.6,2.3-14.5,1.3-19.9,6.1c-6.5,5.7-13.5,3.3-20.5,3c-1-1.4-1.9-2.4-3.9-1.6\n                        c-4,1.7-8.5,1.5-12.6,2.6c-2.1,0.6-5.8,1.8-4.8-3.2c0.3-1.4-0.9-0.5-1.6-0.4c-5.7,0.7-11.6-0.2-17.1,2.3\n                        c-3.7,1.7-6.9-1.7-10.6-1.4c-10,0.8-20.1,0.2-29.9,2.8c-8.8-1.4-17.5-2.2-26.5-0.4c-4,0.8-8.9,0.5-13.1-1.1\n                        c-1.4-0.6-2.5-0.3-3.8-0.1c-1.8,0.2-3.6,0.8-5.2-0.6c-0.2-0.1-0.3-0.5-0.6-0.5c0.3,0.4,0.2,0.8-0.1,1.2c-1.3,1-2.8,1.2-4.2,1\n                        c-7-1-14.2,0.8-21.2-0.8c-2.4-0.5-5-1.5-7.3-0.3c-2.1,1.1-3.4-2.6-5.8-0.3c-0.7,0.7-1.8-1.7-1.2-3.3c1-1.6,1.9-3.4,3.3-3.3\n                        c0.1,0-0.6-0.4-1.3-0.9c-1.1-0.7-2.6-1.7-2-3.1c0.9-1.7,2.6-1.1,3.8-0.2c3.1,2.4,0.7-0.8,1-1.2c1.8-1.8,4.3-1.7,6.3-2.7\n                        c2-1,3.4-2.4,5.4,0c2.3,2.7,4.8,1.1,7.1-0.3c1.4-0.8,2.9-2.3,4.5-0.9c2,1.6,3.3,2.4,4.6-0.7c0.6-1.3,2-0.8,2.9,0.1\n                        c0.7,0.7,1,1.7,1.3,2.6c0.9,2.7,4.4-0.1,5.2,2.6c0.5,1.7-1.5,4,1.4,5.2c0.3-3,1-5.7-3.4-7.1c-2.2-0.7,0.9-3.7,0.8-5.7\n                        c0.2-0.4,0.4-0.8,0.8-1.2c1.3-0.3,1.8,0.6,2.1,1.5c1.3,3.1,3.6,4.4,6.9,4.3c1.3,0.8,3.2,0.6,3.7,2.5c0,2,1.5,3.2,2.7,5.3\n                        c-1.1-3.4,0.8-4,2.7-4.6c3.5-1,7.1-1.9,10.7-1.7c3.2,0.2,6.1-3,9.7-0.6c0.5,0.4,2.1-3.5,4.1-4.4c1.1-0.7,2.2-1.1,3.4-0.6\n                        c2.7,1.6,2.5,3.8,1.1,6.2c-0.2,0.3-0.5,0.5-0.7,0.6c-0.7,0.4-1.3-0.4-1.9,0c0.2,0.3,0.4,0.5,0.7,0.7c1.2,0.8,1.2-0.6,1.7-1\n                        c1.5-1.4,0.9-3.7,2.2-5.2c2-1.7-0.4-2.7-0.7-4c-0.6-1.3-1.1-2.6-0.9-4c3.1-0.7,5.4,0.6,6.5,4.1c0.8,2.5,1.4,4.7,4.4,1.8\n                        c0.6-0.6,1.8-0.4,2.4,0.1c3.6,3.1,9.1-0.2,12.6,3.6c0.4,0.5,1.2,0,1.8-0.3c4.5-1.9,4.5-1.9,3.9,3.1c1.2-0.8,1-2,1-3.2\n                        c0-4.2,1.8-5.8,5.7-4.8c2.3,0.6,4.3,1.6,6.7,0.2c0.9-0.6,1.9,0,2.8,0.4c5.4,2.7,10.9,3.8,16.4,0.3c1.7-1.1,3.7-0.4,5.3,0.2\n                        c2.7,1.1,5.1,1.2,7.5-0.5c1-0.7,2.1-0.9,3.3-0.7c4.2,0.9,4.1-1.2,2.2-5.2c1.1,3.3,2.8,5.8-2,5.3c-3.1-0.4-6.1-1.4-9.5,0.9\n                        c-2.9,1.9-7.4-1.8-7.6-5.5c-0.1-2.4-0.7-5,1.2-7.2c0.5-0.3,0.9-0.4,1.5-0.5c12.2,1.6,24.1,4.6,36.2,6.7c0.5,0.1,1,0.2,1.5,0.4\n                        c1.7,0.7,3.5,0.5,5.3,0.7c3.4,1,6.9,0.8,10.3,1.7c3.4,0.9,5.1-0.3,4.8-4C1386.6,444,1386.6,442.2,1388,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601120"),
                d:
                  "M1386,398c0.3,0,0.6,0,1,0c-0.6,9.7,0.4,19.4,1,29c-0.8,3-2.9,3.3-5.4,2.7c-10-2.6-20.2-3.6-30.3-5.6\n                        c-5.9-1.2-12-1.9-18-3.1c-1.7-0.7-3.5-0.6-5.3-0.8c-0.8-0.1-1.6-0.4-2.3-0.8c-1.4-1.2-1.9-2.7-1-4.5c1.8-1.7,4.1-2,6.4-2.5\n                        c15.4-3.4,30.9-6.2,46.4-8.9C1382.1,402.9,1384.4,401,1386,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771628"),
                d:
                  "M1327,419c0.7,0,1.3,0,2,0c1.5,1.2,3.5-0.2,5,1c10.6,1.7,21.2,3.1,31.8,5.3c6.1,1.3,12.5,1.3,18.4,3.5\n                        c1.8,0.7,2.7-0.9,3.8-1.8c0,4.6,0,9.3,0.1,13.9c-0.3,3.4,1.5,7.9-0.8,10.1c-2.2,2-6.1-0.9-9.3-1c-2.4-0.1-4.6-0.5-6.8-1.1\n                        c-1.5-1.2-3.5,0.2-5-1v0c0.3-2.7,2.5-2.1,4.1-2.2c2.8-0.2,5.6,0.4,8.5,0.5c0.7,0,1.3,0.3,2,0.4c1.3,0.2,2.2-0.3,2.8-1.6\n                        c0.6-1.4-0.8-10.8-1.7-11.6c-1.4-1.2-2.4-0.3-3.4,0.6c-1.3,1.2-2.6,1.1-3.2-0.4c-2.2-5.3-7-4.3-11.1-4.4\n                        c-2.2-0.1-4.3,0.3-6-1.4c-1.1-1.1-2.3-1.2-3.7-0.8c-4.4,1.3-8.4,0.5-12.2-1.8c-1.5-1-3.1-1-4.8-0.9c-4,1.3-7.4-0.9-11-1.7\n                        c-1.2-0.2-1.9-1.4-1.6-2.7C1324.8,418.7,1325.6,418.2,1327,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881728"),
                d:
                  "M1422.6,476.5c0.5-3,4.1,3.5,3.4-2.1c-0.1-0.5,1.6,0.3,2.3,1c0.8,0.9,2.7,1.3,2.2,2.9\n                        c-0.4,1-1.8,1.8-2.9,1.3C1425.7,478.7,1424,477.4,1422.6,476.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F23"),
                d:
                  "M224.6,453.5c1.8,0.2,2.1,1.7,2.8,3C225.5,455.9,225.5,455.9,224.6,453.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D122A"),
                d:
                  "M180,368c9-3.4,18.4-5.6,27.8-7.5c1.2-0.2,1.8-0.6,2.2-1.5c4.3,1.7,4.6,6.5,7.5,9.3\n                        c0.9,1,1.7,2,2.3,3.3c0.6,1.6,1.2,3.2,2.3,4.5c0.3,0.3,0.5,0.7,0.7,1.1c0.7,1.5,1.5,3,2.6,4.3c0.3,0.4,0.5,0.7,0.7,1.1\n                        c0.9,2.3,3.2,4.1,2.6,7c-1.3,3.6-4.8,3.7-7.6,4.9c-5,2.2-10.5,3.2-14.2,6.1c8.2-1.1,17-4.5,26.4-4c3,2,5,4.6,4.8,8.4\n                        c-8.8,1-17.7,2.3-26.5,2.9c-4.5,0.3-8.7,1.9-13.1,2.5c-4.1,0.6-8.3,0.9-12.5,1.6c-1.6-1.7,0.5-2.9,0.6-4.4\n                        c0.1-1.6,0.1-3.1-0.6-4.7c-1-2.2-2.7,1.3-3.6-0.5c-0.6-0.4-1.1-1-1.7-1.4c0.3,0.7,1.1,0.8,1.5,1.3c4.4,4.3,4.5,5,1.8,10.8\n                        l-0.5,0l-0.5,0c-2-0.8-4-0.8-6,0c-2.6,1.1-5.2,1.7-8,2c-1.6-2.6,0-3.6,2.1-4.3c2.4-0.8,4.8-0.9,7.3-0.7\n                        c-3.5-0.4-5.1-2.5-4.2-5.8c0.5-2-0.2-2.2-1.7-3c-2.1-1.2-8.2,0.3-4.6-5.8c0.5-0.8-1.8-1-2.6-1.8c-1.1-1.1-2.3-2.1-1.3-3.8\n                        c0.9-1.5,2.2-1,3.5-0.4c1.3,0.6,3.1,1,3.9,2.1c2.9,3.8,4.8,1.5,6.8-0.7c0.1-0.1,0.3,0.2,0.3-0.1c-1.1-0.1-1.4,0.8-1.8,1.5\n                        c-0.5,0.7-0.9,1.5-1.9,1.1c-1.2-0.5-1.1-1.7-0.8-2.5c1.7-4.4,0.8-8-2.8-11.1c-0.5-0.4,0,0.2-0.3-0.4c-0.6-1.3,1.6-7,2.9-7\n                        C176.9,372.2,178.4,370.1,180,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M180,368c0,5.2-3.6,5.5-7.4,5.4c-0.6,2,1.8,1.2,2,2.6c-1,0.8-3.3-0.2-3.2,2c0.1,1.6,1.1,2.7,3,2.4\n                        c1.4-0.2,2.8,0.4,1.6,1.8c-1.7,1.9-3,2.9,1,2.3c0.6-0.1-0.1,1-0.3,1.5c-0.8,2.1-1.5,4.3-2.2,6.6c2.9-0.2,1.5-3.9,4-3.8\n                        c0.2,0,0.4,1.5,0.5,2.3c-0.8,0.8-1.5,1.9-2.4,2.4c-1.5,0.9-3.2,4.5-4.9-0.3c-0.6-1.6-3.8-2.2-5.9-3.2c-0.3-0.1-1,0.1-1.2,0.4\n                        c-0.2,0.3-0.1,1.1,0.1,1.3c0.7,0.7,1.6,1.7,2.3,1.6c1.8-0.2,2.7,0.1,3.2,2c0.7,2.6-2.4,1.1-2.7,3.1c3.1,0.8,5.8,3,10.4,1.6\n                        c-1.9,2.9-3.9,4.8-2.5,7.6c1.6,2.9,5.3-0.6,7,2.5c-3.1,1.7-6.5,0.5-9.7,1.4c-2,0.5-4.1,0.7-3.7,3.5c-6.1,1.9-10.3,7.6-17,8\n                        c0-1.6,1.7-3.4-1-4.6c-3.2-1.4,0-3.1,0.4-4.3c0.6-1.9,1.9-0.8,2.9,0.3c2.8,3,2.4-2.2,4.4-1.5c0.9,1.2-1.3,3.8,0.7,4.1\n                        c1.5,0.2,3.2-1.7,5.1-2.9c-4.4-3.2-8.5-6.1-13.1-9.4c-2.7,3.6-2.7,8.8-5,13.1c-1.2,2.1-1.1,4.4-4.6,3.3c-2.4-0.8-2.6,3-4.8,3\n                        c-2.1-5.9,4.1-8.3,5.4-12.8c0.3-1.1,2.1-2.3,1.6-3.4c-1.6-4.3,1.3-3.9,4.3-4.1c-2.7-0.5-4.1-0.8-2.4-4\n                        c2.6-4.9,6.3-8.4,10.5-11.9c-3.6-1.1-2.7-5.4-5.5-6.9c0-1,0-2,0-3c6.7-4.5,14.7-5.3,22-8c1.6,0.8,2.9,0.3,4-1\n                        C177.7,367.8,178.9,368,180,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M184,413c1.7-4.1-0.5-7.5-2-11c1.9,1.1,2.7-2.8,4.2-1.1c2,2.2,3,4.9,0.9,7.9c-0.6,0.9-0.8,2.1-1.2,3.2\n                        C185.3,412.3,184.7,412.7,184,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F4B"),
                d:
                  "M238.1,405c-1.7-2.7-3.3-5.4-5-8c-2.1-1.7-4-3.5-3.3-6.6c0.3-0.4,0.8-0.5,1.2-0.6\n                        c3.5,2.3,4.4,6.4,6.8,9.4c1,1.5,1.8,3.1,2.1,4.9c0,0.7,0,1.3,0,2C239.4,405.7,238.7,405.3,238.1,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d: "M177,413c2-1.5,4-1.5,6,0C181,413,179,413,177,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F132A"),
                d:
                  "M277,406c-3.7,0.7-7.1,2.3-11,2c-6.8,0.2-13.1,3.3-20,3c0.8-1.2,2-0.9,3.1-1.1\n                        c6.7-1.2,6.8-1.4,5.8-7.9c1.4-1.6,3.5-1.3,5.2-2c4.2-1.2,8.5-1.6,12.9-1.3C278,399.8,279.1,401.8,277,406z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("78142F"),
                d:
                  "M260,401c-1.4,1.7-3.3,0.7-5,1c-5,0.7-10,1.3-15,2c-0.9-1.4-1.9-2.7-2.8-4.1c0.5-3.8,2.8-5.3,6.5-5.4\n                        c3.5-0.1,6.9-1.2,10.4-1.1c1.5,0,2.9,0.5,4.3,1c1.5,0.6,3.8-0.9,4.5,1.8C263.4,398.8,261.1,399.6,260,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C152C"),
                d:
                  "M277,406c-0.1-2.4,1-5.5-3-6c-0.3-0.6-0.2-1.1,0.3-1.5c6.5-3,13.8-1.3,20.5-3.3\n                        c0.9-0.1,1.7,0.1,2.3,0.8c0.2,0.4,0.5,0.7,0.7,1.1c-1.2,2.3-2.4,4.7-3.6,7c-4.2-0.5-8.2,0.3-12.2,1.9\n                        C280.3,406,278.7,406,277,406z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB9097"),
                d:
                  "M342,403c-3.4,0.3-6.7,0.2-9-3c-0.5-0.2-0.1-1.1,1-2c0.3-0.4,0.7-0.7,1.1-0.9c1.7-0.6,3.9-1,3.5-3.4\n                        c-0.5-2.2-2.7-1.4-4.2-1.4c-6.2-0.3-6.2-0.3-7.7-6.6c1.2-3.7,4.6-1.4,6.8-2.6c3-1.5,6.6-1.8,8.9-4.7c0.8-1,2.1-0.7,3.2-0.4\n                        c1.9,1,4,1.6,4.7,3.9c-0.5,1.6-2.5,1.5-3.3,2.7c0.6,2.2,2.5,3,4.3,3.8c2.5,1,2.8,3.8,3.4,5.7c0.8,2.6-2,2-3.6,2.1\n                        c-2.6,1.1-6.5,0.3-7.1,4.5c0,0.1-0.9,0.2-1.3,0.1c-0.8-0.2-1.4-2-2.3-0.7C339.3,401.5,341.5,401.9,342,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8707A"),
                d:
                  "M315,401c-3,0.5-6.1,1-9.9,1.7c2.3,2.4,4.1,4.4,6,6.3c-3-0.8-9.1,2.3-8.1-3.7c0.8-5-0.7-9.6,0.1-14.3\n                        c1.1-0.5,1.7,0.1,2.4,0.8c2.5,2.1,5.5,1.2,8.1,0.8c4.7-0.7,5.9,3.2,8.3,5.4c1.1,1.1-0.3,2.1-1.5,2.3c-1.4,0.2-2.9-0.3-4.3,0.7\n                        C315.7,401,315.3,401,315,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF7E86"),
                d:
                  "M316,401c1.1-2.2,3.7-0.7,5.5-2c-0.8-1.7-5.4-0.4-3.4-4.3c0.5-0.9-1.5-0.7-2.3-0.7\n                        c-3.1,0-6.3-0.1-9.4,0.4c-3.3,0.5-1.8-1.1-1.4-2.4c3-0.7,6.2-0.7,9.1-2.3c0.9-0.5,2.2-0.9,2.9-0.3c3.8,3.3,8.2,1.6,12.4,2\n                        c6,0.5,6,0.4,5.7,6.6c-0.3,0-0.7,0-1,0C327.9,398.3,322.3,401.6,316,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7828C"),
                d:
                  "M335,398c-0.4-0.6-1.1-1.2-1-1.7c1.4-6.8-3.4-4.2-6.2-4c-3.8,0.3-7.6,2.4-10.7-1.9\n                        c-0.9-1.3-2.8,0.5-4,1.1c-2.6,1.4-5.2,2.1-8,0.5c-0.7-0.3-1.3-0.7-2-1c-0.6,0-1.3,0-1.9,0c0-2.7,2.5-2,3.8-2.8\n                        c6-0.6,10.9-4.5,16.6-5.9c0.9,1.7,2.2,2.1,4.1,1.5c0.7-0.2,1.6,0.1,1.4,1.3c1,5.3,4.3,6.8,9.3,6.1c1.4-0.2,4.2-1.3,4,1.7\n                        c-0.1,2.2-0.1,5.4-3.9,5.2C336,398,335.5,398,335,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99243B"),
                d:
                  "M297.1,396c-0.7,0-1.4,0-2.1,0c-2,1.1-4.2,0-6.3,0.8c-1.4,0.6-3.6,1.8-3.9-0.7\n                        c-0.3-2.5,2.4-1.1,3.4-1.6c-1.7,0.1-3.8-0.2-4.2-2.6c-0.3-1.9,1.7-2.1,3-2.7c1.4-0.4,2.9-0.7,4.4-1c3.1,0.3,6.2,0.9,8.8,2.8\n                        C299.6,393,299,394.9,297.1,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("98394F"),
                d:
                  "M300.2,391c-3.3,0.4-6.1-1.6-9.3-2c-4.9,0.5-7.9-2.9-11.4-5.6c-0.8-1-1.4-2.1-0.6-3.4\n                        c4-0.6,5.8,3.4,9.1,4.4c3.8,2.1,7.8,3.4,12.2,3.2c1.7-0.1,3.7-0.3,4.9,1.5c-1,1.3-3.2,0-4,1.8C300.8,391,300.5,391,300.2,391z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE9EA2"),
                d:
                  "M351,396c0.6-1.3,2.1-0.7,3.5-1.6c-3.4-0.6-2.2-3.7-3.5-5.4c0.5-0.9,1.2-1.7,2.2-1.9\n                        c5.9-1.2,11.7-3.8,17.7-0.5c0.5,4.5-3,6-6,7.4c-1.7,0.8-3.1,1.5-4.3,2.9c-3.2,1.6-6.4,0.6-9.6,0.2\n                        C351,396.7,351,396.3,351,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9FA6"),
                d:
                  "M351,397c3.4,0,6.7,0.2,10-1c1.3-2.9,4.1-1.6,6.3-2.2c4.1-0.5,8.1-0.1,12.2-0.2c1.2,0,2.3,0.2,3.3,0.9\n                        c1.1,2.1-0.9,2.1-1.9,2.7c-1.1,0.3-2.1,0.6-3.2,0.7c-5.7-0.3-10.9,2.6-16.5,2.2c-3.4-0.1-6.5,1.6-9.8,2c-0.4-0.4-2.1,0-1-1.2\n                        c1.4-1.6,3.5-2.2,6.3-2C354.5,397.3,352.2,398.9,351,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4303B"),
                d:
                  "M361.1,400.1c5.5-1.6,11.2-2.5,17-3.1c0.8,0.4,1.6,0.8,1,2c-0.3,0-0.7,0-1,0c-3.7-0.1-7.4,0-11,1.4\n                        C365.1,401.2,363,401.6,361.1,400.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA2230"),
                d:
                  "M419.1,397c-2.5,0-4.9,0-7.4,0c-5.5-0.1-11.4,1.1-15.7-3.9c0.4-0.7,1.1-1,1.9-1.2\n                        c2.8-0.6,5.8,0.6,8.4-1.2c0.4-0.3,0.9-0.5,1.3-0.6c1.9-0.5,3.9-0.3,5.8-0.6c1.8-0.5,3.5-2.1,5.5-0.8c0.9,2.6-2,3.1-2.7,5.3\n                        c8.4-0.4,17,0.1,25.5-0.6c2-0.2,3.9-0.3,5.9-0.2c1.8,0.2,1.6-1.3,1.5-2.4c-0.1-0.9,0.2-2.4-1.2-2.2c-1.4,0.2-2.9,1.7-3.5-0.8\n                        c-0.6-2.3-2.1-4.8-0.2-7.1c1-1.2,1-2.8,2.2-3.8c0.4-0.2,0.9-0.3,1.4-0.3c3.1,1.9,3.5,5.7,5.8,8.2c1.1,3.4,4.6,5.9,3.3,10.1\n                        c-5,2.4-10.5,0.8-15.7,1.5C434,397.4,426.5,396.9,419.1,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34750"),
                d:
                  "M457,394.9c-1.4-3.3-2.7-6.5-4.1-9.8c-0.5-0.4-0.5-0.9,0-1.3c4.2,2.5,6.2,6.2,6.2,11\n                        c-0.1,0.4-0.1,0.8-0.2,1.2C458.3,395.7,457.7,395.3,457,394.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1121"),
                d:
                  "M512,441c-3.1-1-2.6-5-5.2-6.3c-0.9-0.5-2.7-5.3-3.2,0.3c-0.1,1.1-1.5,1.1-1.9,0.5\n                        c-2.1-3.5-4.4-1.1-6.7-0.5c-0.7,0-1.3,0-2,0c-0.7-2.6-2.6-4.8-3-7.5c1.4-5.3,1.4-5,6.6-3.5c2.9,0.9,6.3,0.8,9.4,0.2\n                        c-0.7-1.5-2.5-2.6-3.6-4.2c-0.6-0.8-1.2-1.7-0.5-2.7c0.7-1,1.8-0.9,2.7-0.5c2.4,1.1,5,1.7,8.8,2.2c-2.9-0.7-4.8-1.3-3.8-3.7\n                        c0.8-1.9,2.2-3.4,3-5.5c1.3-3.6,3.7,1.7,5.8,0.2c0.6,0.1-0.1-0.9,0-0.2c0,0.2-0.1,0.3-0.4,0.2c-2.3-0.8-4.4-2-6.9-2.4\n                        c-1.9-0.3-3.2-2.3-0.6-3.8c1.7-1-0.2-2.1,0.5-2.9c0.1-0.1,0.3-0.3,0.4-0.3c4.7,0.8,8.6-1.3,12.5-3.2c1.8-0.9,3-0.7,4.2,1\n                        c1.9,2.6,4.8,2.1,5.7-0.1c2-5.1,6.4-5.3,10.4-6.1c4.3-0.9,8.4-2.9,12.9-3c1-0.1,1.9,0,2.8,0.5c1.4,1.9,0.4,3.2-1.3,3.9\n                        c-3.6,1.4-5.9,3.7-8.2,6.9c-2.8,3.9-8,4-12.7,4.2c-0.5,0-0.9-0.6-1.4-0.5c-0.5,0.1-0.1,0.3-0.1,0.6c1.1,4.1-1.5,4.8-4.7,5\n                        c-0.8,0.1-1.2,0.7-1.1,1.4c0.5,5.2-3,8.1-6.3,11.2c-0.3,0.3-0.7,0.7-1,1c-2.2,2.8-3,6.2-4.1,9.4\n                        C517.6,436.4,516,439.5,512,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641222"),
                d:
                  "M511,401c0.8,0.5,1.6,1.1,2.4,1.7c-0.6,1.6-2.5,1.4-3.4,2.9c1.2-1.4,3,5.7,3.9-0.5\n                        c0-0.3,1.1-0.7,1.6-0.6c0.6,0.1,1.3,0.7,0.9,1.4c-0.5,1-1.4,2.1,0.1,3c2.2,1.4,1.2-1.1,1.8-1.5c1.2-1,1.3,0.6,1.4,1\n                        c0.2,2.8-1.6,2.8-3.6,2.4c-2.2-0.5-2.2-0.5-1.6,1.8c0.4,1.4-0.4,1.2-1.3,1.1c-1.8-0.1-2.8,1.2-2.9,2.7\n                        c-0.1,1.8,1.7,1.1,2.6,1.4c1.5,0.6,2.4,1.1,1.4,2.8c-1.5,2.4-1.6-0.2-2.5-0.5c-2.9-1-6.2-0.5-9-2.6c1,3.7,6,5.3,5.4,8.4\n                        c-2.2,5-2.3-5.9-4.3,1.1c-2.9-1.7-5.9-1.6-9.2-1.1c-1,0.1,0.5-2-0.3-3.3c-1.6,1.2-3.2,2.2-3.3,4.5c-0.4,0.3-0.7,0.4-1.2,0.2\n                        c-1.3-1.7-1.7,0.2-2.5,0.6c-1.9,0.9-3.1,0.5-3.3-1.8c-4.1-1.8-7.1-4.4-8-9c0-5,0-5,4.4-3.4c2.4,0.9,13.8-1.5,15.2-3.5\n                        c0.8-1.2,2.1-2.1,1.4-4.6c-1.3-4.1,4.3-7.3,9.8-6.1C508.4,399.3,510.2,399,511,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1325"),
                d:
                  "M507,401c-2.9-1.1-5.2-1.4-7.7,1.6c-2.1,2.6-1.7,3.5,1.4,4c-3.1,3-5.3,5.6-9.6,7.1\n                        c-3.8,1.3-8.4-1.2-11.2,3c-0.9-1.3,0.5-3.7-2.3-3.3c-0.9,0.1-1.2,0.2-0.8,1.1c0.3,0.6,0.8,1.3,0.6,1.7c-0.1,0.4-1,0.6-1.5,0.9\n                        c-2.9-3.3-4.9-7.2-7-11c4.1-3.8,5.1-3.9,8-0.5c0.2,0.2,0.2,0.6,0.4,0.9c1.4-6.1,4.9,2.1,6.7-1.5c-0.7-0.6-2.2-0.1-3.1-0.8\n                        c-1.1-0.9-1.5-2.1,0-2.6c5.9-2,10.1-6.8,15.7-9.3c1.8-0.5,3.6-0.5,5.4-0.5c2.8,0.3,5.6-0.3,8.5,0c1.6,0.8,1.6,2.9,0.7,3.1\n                        C507.4,395.4,508.3,398.9,507,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M496,393c-4.6,3.9-9.3,7.7-15.3,9.6c0.9,1.7,2.8,0,3.9,1.1c0.6,0.5,2.9-0.9,1.7,1.5\n                        c-0.4,0.9,0.2,2.8-2.4,2c-2-0.6-4.3,0.3-5.1-3.1c-0.8,2.2,1,3.5-0.6,5.6c-1.4-6-4.8-6.4-9.2-3.6c0-0.3,0-0.6,0-1\n                        c-1.6-0.9-1.8-2.9-3-4c-0.7-0.7-1.3-1.3-2-2c-0.6-0.7-0.6-1.4-0.2-2.1c0.8-0.7,2-1.3,2.7-0.8c3.3,2.2,6.4,0.3,9.7,0.1\n                        c3.6-0.3,6.4-1.7,9.4-3.2C489.1,392.4,492.6,390.3,496,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1614"),
                d:
                  "M464,397c0,0.7,0,1.3,0,2c-0.4,0.4-0.7,0.7-1.1,1.1c-2-1.2-2.1-3.7-3.7-5.2c-2-3.7-4-7.4-6-11.1\n                        c-3.2-4.1-5.5-8.8-7.7-13.5c-0.2-0.7-0.2-1.5,0-2.2c0.3-0.7,0.9-1.2,1.6-1.5c0.5,0,0.9,0.1,1.4,0.4c3.1,4.4,4.9,9.5,7.5,14.1\n                        c1.4,2.3,2.4,4.7,3.8,7c0.3,0.5,0.6,1.1,0.9,1.7c0.8,1.7,2.3,3,3.1,4.7C464,395.3,464.1,396.2,464,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1121"),
                d:
                  "M484,426c1.1,1,2.2,2.2,3.6,0.3c0.6-0.8-0.9-2.8,1.1-2.6c1.6,0.2,1.3,2,1.4,3.3c0.5,1.6,1.7,3.3-1,4\n                        c-0.7-0.7-1.3-1.3-2-2c-1,0.8-2,0.7-3,0C483.8,428,480.2,427,484,426z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M489,431c1.5-1.1,0.9-2.6,1-4c0.3,0,0.7,0,1,0c0.8,2.6,2.8,5,2,8C492.2,433.1,489.2,433.5,489,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882E3B"),
                d:
                  "M472,416c-2.9,0.1-2.5-2.3-3-4C470.8,412.7,471.1,414.6,472,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1325"),
                d: "M466,401c1.8,0.7,2.2,2.5,3,4C465.5,405.5,467,402.4,466,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d: "M484,429c1,0,2,0,3,0C486,432.1,485,430.6,484,429z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F2A9AF"),
                d:
                  "M397.6,392.9c-0.5,0.1-1,0.1-1.5,0.2c-1.2-0.1-2.4-0.1-3.4,0.7c-3,1.7-5.9,3.1-9.4,1.3\n                        c-1.1,0-2.2-0.1-3.3-0.1c1.6-2.9,2.6-6.9,7.2-3.4c0.5,0.4,1,0.2,1.3-0.2c3.9-4.2,9.1-3.7,14.3-3.6c-0.6-2.6-4.3-2.2-3.8-5\n                        c0.4-0.4,0.9-0.6,1.4-0.8c6-0.8,12-0.4,18-0.3c0.9,0.1,1.7,0.3,2.4,0.7c1.3,1.1,0.9,2.4,0.2,3.6c-1.5,2.2-4.3,2-6.2,3.4\n                        c-2.5,0.7-5.2,0.8-7.7,1.4l0-0.1C404.2,393.2,400.6,391.9,397.6,392.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4303B"),
                d:
                  "M383.3,395.1c3.1-0.4,6.3-0.9,9.4-1.3c-0.2,3-2.8,2.7-4.7,3.1c-1.6,0.4-3.3,0.1-4.9,0.1\n                        c-0.6,0.8-1.3,1.6-2.4,1.3c-1-0.3-1.2-1-0.5-1.9C381.1,396,382.2,395.6,383.3,395.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2E3F"),
                d:
                  "M380,396.4c0.5,2.4,1.9,0.8,3,0.6c-0.4,2.6-2.4,1.8-4,2c-0.3-0.7-0.7-1.3-1-2\n                        C378.7,396.8,379.4,396.6,380,396.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD404B"),
                d:
                  "M370,283c-0.7,0-1.3,0-2,0c-0.3,0-0.7,0-1,0l0,0c0.1-2.3,1.2-4.7,0-7c0.2-0.5,0.6-1.2,0.9-1.1\n                        c2.4,0.9,4.9-1,6.8-0.5c6,1.9,12.3,0.3,18.2,2.4c4.3,1.5,8.7,1.4,13.1,0.5c0.5,0,1,0,1.5,0c4.8,1.9,9.8,1.2,14.8,1.4\n                        c0.4,0.7,0.5,1.4,0.3,2.1c-4.7,7.5-12.3,4.6-18.7,4.6c-4.7,0-9.5-1.4-14.4-1.1c-2.6,0.2-5.3-0.1-7.5-2.1\n                        c-1.2-1.1-2.8-1.3-4.2-0.9C375.1,282.2,372.5,282.4,370,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34954"),
                d:
                  "M319,269c1.7-0.7,3.3-1.3,5-2c4.8,2.7,9.6,5,15.4,4.8c3.1-0.1,5.7-2,9.1-1.8\n                        c5.6,0.4,11.2,0.8,16.7,2.3c0,0.2-0.1,0.5-0.1,0.7c-1.1,0.1-2,0.5-1.9,1.8c0.4,3-0.1,4.4-2.8,1.7c-1.1-1.1-1.6-0.5-2.5,0\n                        c-5.4,3.6-11.5,2.3-17.2,1.5c-2-0.3-5.8,1.5-6.5-2.7c0-0.1-0.7-0.3-0.9-0.1c-4.8,4.2-9.5-0.2-14.2-0.2\n                        C321.3,272,321.3,272,319,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44651"),
                d:
                  "M407,278c-5.4,2.1-10.8,1.7-16.1-0.4c-1.6-0.7-3.2-0.6-4.9-0.5c-3.6,0-7.1-0.3-10.7-1.2\n                        c-2.6-0.7-5.5,0.1-8.3,0.2c-1.3-0.6-2-1.6-2-3l0,0c2.6-1.6,5.5-1.6,8.2-1.1c10.3,1.8,20.9,1.1,31.1,3.4\n                        C405.9,275.6,408.1,275.2,407,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34954"),
                d: "M309,273c3.2-1.3,6.2-2,8,2C314.3,274.5,311,276.4,309,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B64754"),
                d:
                  "M367,283c-2.2,1.8-4.5,0.7-6.9,0C362.4,283,364.7,283,367,283L367,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4651"),
                d:
                  "M313,269c1.3,0,2.7,0,4,0c-0.9,3.4-3.6,1.7-5.6,1.8c-0.5,0-1.3-0.7-0.6-1.3\n                        C311.3,269.1,312.2,269.2,313,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94B57"),
                d:
                  "M407,278c-0.3-0.5-0.6-1.5-0.9-1.6c-13.7-1.2-27.4-2.3-41.1-3.4c-4.5-1-9.1-1.5-13.8,0.3\n                        c0.5-1.2,0.9-2.1,1.5-3.4c-5.7,1.4-11,3.8-16.6,3c-4.5-0.7-9.5-0.9-12-5.9c0-0.7,0-1.3,0-2c0.1-2.7,2.3-2,3.6-1.8\n                        c4.1,0.7,8.6-0.2,12.4,1.9c1.4,0.8,2.5-0.1,3.7-0.4c11.2,1,22.2,4.5,33.5,3.4c2.4-0.2,4.2,1.2,6.2,1.8\n                        c4.3,1.3,8.5-0.2,12.6,0.6c8.4,0.1,16.5,1.6,24.4,4c2.3,0.7,4.1,2,4.9,4.5c0.1,1.5-0.2,2.9-1.2,4.1c-1.8,0.5-2-0.7-2.2-2\n                        c0-0.7,0-1.3,0-2C416.9,280,412,278.2,407,278L407,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA505B"),
                d:
                  "M344,265c-1.1,2.3-2.4,2.5-4.8,1.4c-4.8-2.1-10-2.6-15.2-1.4c-1.1,0.4-2.1,0.8-3.2,1.1\n                        c0.1-4,0.1-3.9-3.8-2.4c-2.1,0.8-2.3-1.4-2.2-2.4c0.1-2.3-0.6-3.6-3.2-3.6c1.6-2.1,7.8-1.2,3.3-6.3c-0.8-0.9,3.4-2.9,5-2.9\n                        c3.8,0,3.2-2.2,3.2-4.5c1.4,1.9,1.4,1.9,3,0.5c0.1-0.1,0.1-0.3,0.2-0.4c4.4,4.1,5.1-6.7,9.6-2.4c1-2.7,2.3-4.6,5.2-1.7\n                        c-1.5,4.2-5.4,6.2-8.8,8.6c-2,1.5-4.9,6.7-3.9,8.8c1.5,2.8,3.4,5.2,7.3,4.6c2.6-0.4,5.3-0.9,7.9,0.1\n                        C345.4,262.8,345.4,263,344,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0545F"),
                d:
                  "M344,265c1.1-1.1,0.7-1.6-0.6-2c-2.3-0.7-4.6-0.2-6.8,0c-8.1,0.9-11.1-3.2-8.6-10.7\n                        c1-2.9,1-4.6,4.9-5.6c2.3-0.6,5.8-4,8.1-6.8c0.4-1-0.8-3.4,2-2c0.4,0.6,1.1,1,1.7,0.6c2.3-1.7,4.1-5.2,7.8-2\n                        c0.3,0.2,2.1-0.9,2.9-1.7c1.2-1.1,1.6-4.3,4-1c0.4,0.5,0.8-0.2,0.9-0.6c1.6-4,5.3-3.8,8.6-4.2c4.2-0.5,7.3-2.6,10.9-4.7\n                        c5.2-3,10.9-6,17.1-7.3c3.6-0.8,7.1-2,10.8-2.7c2.6-0.5,5.3-1.8,5.8-4.9c2.8-0.1-0.4,4.7,3.4,3.4c0.1,0.2,0.3,0.4,0.4,0.6\n                        c0.3,2-0.9,3.2-2.6,3.7c-10.7,3.3-20.7,8.8-31.7,11.3c-2.7,0.6-4.5,2.8-6.6,4.4c-5.1,3.8-11.6,3.2-17,6.1\n                        c-4.3,2.4-8.2,5.4-12.6,7.6c-0.4,0.2-0.6,0.4-0.5,0.7c2.5,5.7-4.2,6.8-5.3,11.2c10.3,3.5,20.9,5.6,32,5.2\n                        c4.6,1.7,9.7-0.3,14.3,2c1.4,2.1,3.8,2.2,5.9,2.9c1.5,0.5,3.8,0.6,2.7,3.3c-1.5-0.7-2.8-1.1-4.7-0.5c-3.4,1.2-6.7,0.1-9.9-1.3\n                        c-1.7-0.7-3.8-0.9-5.6-0.7c-10.5,1-20.5-2.9-30.9-3.4C344.6,266.1,344.3,265.4,344,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4B58"),
                d:
                  "M461,187c2.6,1.8,4.5,4.3,6,7c-2,3.5-5.6,4.7-9.1,5.3c-2.3,0.4-3.9,0.5-4.7,3.2\n                        c-0.9,2.7-5.6,3.9-8.2,2.8c-1.6-0.7-2.5-3.4-4.5-2.1c-1.3,0.9,0,3.2-1.1,4.6c-3.9,0.5-5.6-2.2-7.3-4.9c0-0.3,0-0.7,0-1\n                        c1.3-0.9,1.1-3,3.4-3.1c6.7-0.4,11.6-4.7,17-8c0.8-0.5,1.3-1.6,2.9-0.5C458.8,192.6,460.4,190.5,461,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0555F"),
                d:
                  "M432,203c2.3,1.7,4.7,3.3,7,5c2,0.2,5.2-1.5,4.6,2.9c-0.2,0.7-0.6,1.3-1.1,1.9c-0.7,0.8-1.6,1-2.7,0.8\n                        c-2.8-0.9-5.9-1.2-6.9-4.8c-0.2-0.6,0.1,0.1-0.2-0.4c-0.8-1.3-2-0.8-3.1-0.9c0.5,0.3,1.4,0.2,1.3,1.2c-0.1,0.7-0.8,1-1.2,1.4\n                        c-2.3,2.5-5.6,3.3-8.4,5.1c-2.2,1.3-3.2-0.6-4.2-2.1l0,0c1.8-1.7,2.3-4.2,3.8-6.1C423.9,203,428.6,204.9,432,203z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23E49"),
                d:
                  "M422,281c0.6,0.6,1.2,1.3,1.9,1.9c1.6,4.4-0.6,7.2-3.9,9.6c-11.4,0.5-22.6-1.5-34-1.9\n                        c-1.3,0-2.1-0.9-2.9-1.7l0,0c-2.7-2.4-5.3-4.9-9.5-3.8c-1.4,0.4-1.6-2.5-3.5-2.2c3.9-3.6,9.4-3.9,13.3-0.9\n                        c2,1.5,4.6,1.4,6.6,1.1c4.4-0.6,8.6,0,12.8,1c4.4,1.1,9-1.6,13.3,0.8c1.3,0.7,1.6-1,1.9-1.6C418.9,281.6,420.5,281.6,422,281z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13540"),
                d:
                  "M383,289c8.3,0.7,16.5,1.5,24.8,1.9c4.1,0.2,8.2,0.2,12.2,1.1c1.5,2.7,1.1,4.8-1.9,6.1\n                        c-0.1-0.3-0.1-0.7-0.2-1c-0.4-0.8-1.1-1-1.9-1c-8.7,0-17.4-0.7-26-2C388,291.8,382.7,294.3,383,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A74B5D"),
                d:
                  "M915,631.1c20,0,40,0,59.9,0c-1,1.2-2.4,0.8-3.7,0.8c-18.7,0-37.5,0-56.2,0\n                        C915,631.7,915,631.4,915,631.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C25461"),
                d:
                  "M671,630.1c23,0,46,0.1,69.1,0.2c1.1,0,2.2,0.4,3.4,0.7c-21.8,0-43.6,0.1-65.4,0.1\n                        C675.7,630.6,673.2,631.9,671,630.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE384C"),
                d:
                  "M783,627c-33.4,0-66.9-0.1-100.3-0.1c-2.5,0-5,0-7.5,0.1c-4.1-1.4-8.4-0.5-12.6-0.9\n                        c-1.9-0.2-4,0.4-5.7-0.9c2.2-2.2,5-1.5,7.6-1.5c31.5-0.1,62.9,0,94.4-0.1c2.5,0,5,0.4,7.3-0.9c1.4-0.7,2.8-0.9,4.3-1\n                        c1.7,0,3.3,0,5,0.2c0.5,0.1,1,0.2,1.5,0.4C779,623.8,782.8,623,783,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73946"),
                d:
                  "M767,623c-0.8,3.3-3.5,1.9-5.4,1.9c-32.9,0.1-65.9,0.1-98.8,0.1c-2,0-4,0.1-6,0.1\n                        c-0.6,0-1.2-0.1-1.8-0.1c-0.7-0.8-0.6-1.6,0.1-2.4c4.8-2.2,9.8-0.3,14.7-0.9c9.4-0.5,18.9-0.3,28.3-0.1\n                        c17.5-0.4,35.1,0,52.6,0C756.2,621.8,761.8,620.3,767,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3A4A"),
                d:
                  "M655,623c0,0.7,0,1.3,0,2c-5.5,0.6-10.6-1.8-16-2.4c0-0.2,0-0.5,0.1-0.7c3.1-2.2,6.6-2.3,10.2-2.1\n                        c0.5,0.1,0.9,0.2,1.4,0.3c1.2,0.6,2.2,1.4,3.4,1.9C654.5,622.3,654.8,622.6,655,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52B3B"),
                d:
                  "M659.9,629.2c2.1-0.1,4.3-0.6,6.2,0.7c-2,0-4,0-6,0C660,629.7,660,629.4,659.9,629.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E151A"),
                d:
                  "M1568,306c17.2,0,34.3-0.4,51.4,0.2c24.4,1,48.8,1.9,73,4.9c5.5,0.7,11.3-0.3,16.7,1.8\n                        c-1.1,1.3-2.6,1.5-4.1,1.4c-4.5-0.3-8.8,0.5-13.1,1.9c-12.5-1.1-25-1.4-37.5-2.8c-1.5-0.2-3-0.1-4.5-0.1c-7.2,0-14.3,0-21.5,0\n                        c-1.3,0-2.5-0.1-3.7-0.4c-4.6-1.2-9.3-0.5-13.9-0.6c-11.7-0.2-23.3-3.2-35.1-2c-1.7-0.1-3.5,0-5.2-0.6\n                        C1569,309.1,1567.5,308.2,1568,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4149"),
                d:
                  "M1705,305c0.7,0,1.3,0,2,0c0.8,1.7,3,0.6,4,2c0.6,0.3,1.2,1,1.7,0.9c5.6-1,10.8-0.3,16.4,1.3\n                        c4,1.2,8.7,0.2,13.1,0.2c-0.7,0.3-1.4,0.6-2,1c5.2-1,10.4,0.4,15.6,0.1c0.5,0,0.9-0.9,1.3-1.4c1.5,0,3-0.4,4.2,0.8\n                        c1.7,2.6,4.5,1.7,6.8,2.1c9.2,1.5,18.6,1.8,27.8,4.1c3.9,0.9,8.3-0.3,12,2.2c0.9,1,1.6,2.1,1.5,3.5c-0.3,0.5-0.7,0.8-1.3,0.9\n                        c-5.6-0.6-11.3,0.3-16.9-0.8c-1.4-1.5-3-2.3-4.8-2c1.3,0.3,3.1-0.2,4.1,1.6c-0.1,0.6-0.4,0.9-0.9,1.2\n                        c-1.6,0.7-3.2,0.3-4.9,0.1c-11.7-1.8-23.6-3.1-35.4-4.6c-0.6-0.1-1.1-0.2-1.7-0.3c-2.1-0.7-4.2-0.3-6.3-0.6\n                        c-1.6-0.2-3.8,0.4-4.2-2.2c0.6-0.5,1.3-1,2.8-2.1c-5.4,0.8-9.6-1.2-14.4-0.3c-4.1,0.8-8.3-2.7-12.8-1.8\n                        c-0.6,0.1-0.4-0.6,0.1-0.8c0.4-0.2,0.9-0.3,1.3-1.1c-5.3,0-10.6,0-15.9,0c-3.8,0-7.4-0.7-11-2c2.1-1.8,4.3-0.8,6.5-0.3\n                        C1697.5,307.5,1701.3,306.8,1705,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B141E"),
                d:
                  "M1692,315c5.4-2.9,11.4-1.8,17.1-2.1c4-0.1,8-0.2,11.9,1c7.8,1.8,15.8,2.1,23.7,2.6\n                        c1.1,0.1,2.3-0.3,3.3,0.4l0,0c1,1,2.4,1.2,3.7,1.4c5.4,0.7,10.7,2,16.2,1.7c4.8-0.2,9.2,1.9,14.1,2.4c5.3,0.5,10.8,1.4,16,2.6\n                        c2.6,0.6,5.6,0,7.5,1c3,1.6,6,1.6,9,2.1c0.5,0.1,1,0,1.5,0c0.7,0,1.4,0.1,2.1,0.4c1.6,1.3,3.7,1.3,5.5,1.7\n                        c3,0.6,6.1,1.2,9.2,1.7c2.3,0.4,3.3,1.6,1.1,3.6c-5.5,1.2-10.7-0.7-15.9-1.5c-13.3-2.9-26.9-4.1-40.2-6.8\n                        c-9.3-1.8-18.8-1.9-28.1-3.8c-2-0.4-4.3-1-6.3,0.1c-1.6,0.4-3.1,0.6-4.3-0.7c-6.8-2.4-14-2.6-21.1-3.4\n                        c-7.5-0.9-15.1-2.1-22.7-2.2C1693.8,317.2,1692,317.2,1692,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972837"),
                d:
                  "M1570,309c1.6,0,3.3,0,4.9,0.1c-0.8,3.3-3.7,2.3-5.7,2.3c-12.7-0.3-25.3,1.6-38,1.1\n                        c-1.5-0.1-3,0.2-4.4,0.7c-7.9,0.6-15.8,0.2-23.8,0.3c-2.5,0-5-0.1-7.5,0.1c-0.6,0-1.1-0.2-1.5-0.5c-0.5-3.1,0.6-4.2,4-4\n                        c10.6,0.6,21.1-1.9,31.8-0.7c0.1-1.7-1.7-1.1-1.9-2.1c4,0,8,0,12.1,0c1.8,1.2,3.8,1,5.8,0.9c6.3-0.2,12.6,0.2,18.9,0.5\n                        C1566.7,307.6,1568.4,308,1570,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811723"),
                d:
                  "M1570,309c-8.8,0.4-17.5-1.6-26.3-1c-1.6,0.1-3-0.3-3.7-1.9c9.3,0,18.6,0,28-0.1\n                        C1568.7,307,1569.3,308,1570,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1748,317c-8.5-0.2-17.1,0.4-25.4-2c-0.6-0.2-1.1-0.7-1.6-1c5.4-0.6,10.6,1,16,1.1\n                        C1740.4,317.2,1744.6,314.8,1748,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4149"),
                d:
                  "M1672,306c1.5-2.6,3.6-1.3,5.2-0.5c2.5,1.2,5.8-2,7.8,1.5C1680.7,306.9,1676.2,307.5,1672,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53B47"),
                d:
                  "M1470,305c3.4,3.6,7.9,2.8,12.1,3c-2.9,1.7-6,0.6-9.1,1c-1.7,0.2-3.6-0.5-5.1,0.9\n                        c-3.6,2.9-8,1.3-11.9,1.8c-5.8,0.8-11.8,1.2-17.6,1.6c-4.1-0.4-8.1,0.6-13.2,1.4c2.1,0,3,0,4,0c0.8,0,1.5,0.2,2.2,0.4\n                        c3.7,0.8,7.3,0.8,10.9-0.2c1.1-0.3,2.3-0.3,3.5-0.3c5.3,0,10.6,0,15.8,0c1.8,0,3.7-0.2,5.2,1c0.3,3.4-2.4,2.4-4,2.6\n                        c-5.7,1-11.5,0.4-17.3,0.7c-18.1,1.2-36.3,2.9-54.4,3.3c-1.7,0-3.3,0.1-4.9-0.4c-2.4-1-3-3.7-4.8-5.3\n                        c-1.3-1.2-2.5-2.5-4.4-2.7c-1.8-0.7-3.2-1.8-3.5-3.8c0-0.6,0.2-1,0.6-1.4c2.4-0.9,4.1,1.1,6.2,1.6c4.5,1.6,8.9-0.3,13.3-0.2\n                        c9.8,0.3,19.6-0.6,29.3-1.3c10.9-0.7,21.8-1.1,32.7-2.3c2-0.2,4.3,2.5,6.3-0.7c0.6-0.9,3.4-0.7,5.2,0.2\n                        C1468,305.7,1469,305.4,1470,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC545D"),
                d:
                  "M1379,311c-1.7-0.7-3.3-1.3-5-2c2.2-0.9-1.3-3.1,1-4c3.2,3,6.9,0.9,10,0.3c11.6-2.4,23.3-2.1,35-2.4\n                        c5.6-0.1,11.3-0.7,16.8-2c2.8-0.6,2.8,3.5,5.3,2.1c1.7,0,3.3,0,5,0c-3.2,1.2-6.4,1-9.8,1c-3.5,0-7.3,0.6-10.8,1.2\n                        c-6.1,0.9-12.2-0.2-18.1,0.9c-8.2,1.5-16.5,0.2-24.7,1.6c-1,0.2-1.5,0.4-1.6,1.3C1381.3,310.1,1380.1,310.6,1379,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3434E"),
                d:
                  "M1379,311c0.1-2,1.5-2,3-2c4.7,2.5,9.4-0.1,14.1-0.2c14.8-0.2,29.7-1,44.5-1.9\n                        c7.2-0.4,14.5-1.3,21.7-1.9c1.6-0.1,3.4-0.6,4.7,0.9c-13.9,3.6-28.3,1.6-42.4,3.8c-5.2,0.8-10.5,1.2-15.7,1.1\n                        c-8.5-0.1-16.9,0.6-25.3,1.1C1382.1,312,1380.3,312.5,1379,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53B47"),
                d:
                  "M1479,306c1.3,0,2.6,0,3.8,0c-1.7,1-3.3,1.6-4.8,0C1478.3,306,1478.6,306,1479,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B171D"),
                d:
                  "M1430.9,316c-0.6,0-1.3,0-1.9,0c1.3-3.3,4.3-2.7,6.6-2.3c5.6,0.9,11-0.7,15.1-0.3\n                        c-2.3,0.2-6.1,0.2-9.9,0.5c-1.4,0.1-3.5,0.6-3.8-1.8c10.3-0.6,20.5-2.4,30.8-2.1c1.1,0.1,2.3-0.2,3.1,1\n                        c-0.1,0.1-0.3,0.4-0.3,0.4c-0.5-0.2-0.5,0.3-0.2,0.3c3.6-0.1,7.2,0,10.8-0.4c1.9-0.2,4-0.7,5.7,0.9c2.3,0.6,4.6,1.4,7.1,1\n                        c0.3,0,0.6,0,0.9,0c2.2-1.2,4.8,0.4,7-1c8.3,0,16.7,0,25,0c1.5-0.2,3.5-1.8,3.7,1.4c-4.1,1.7-8.5,1.8-12.7,1.8\n                        c-15.6,0-31.2,1.9-46.9,1.3c-8.7-1.5-17.4-1.3-26.1-0.5c-1,0-2,0-2.9,0.1C1438.4,316.8,1434.6,316.7,1430.9,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2B3E"),
                d:
                  "M1486.9,312c-6.6,0-13.2,0-20.1,0c1.2-1.7,2.8-0.6,4.1-1c6,0.7,11.9-1.8,18.2-0.6\n                        C1488.3,310.9,1487.6,311.4,1486.9,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3643"),
                d:
                  "M767,623c-5.3,0-10.7,0-16,0c-0.5-0.4-1-0.8-1.7-0.9c-13.6-0.9-27.2-2.5-40.8-1.7\n                        c-3.6,0.2-7,1.4-10.4,2.6c-9.7,0-19.3,0-29,0c-0.8-1.7-1.7-2.9-4-2.8c-3.6,0.1-7.2,0.3-10.8-0.3c-1-0.2,0.6,1.3-0.5,1.5\n                        c-1,0.5-1.9,0.2-2.8-0.4l0,0c-0.7-0.8-2.4-0.4-2.4-1.9c-2.6-4.9-4.2,0-6.2,0.6c-1.3,0.4-2.4,0.3-3.4-0.7\n                        c-2.1-1.9-4.6-2-7.2-2.1c-3-0.1-4.9-3.2-3.8-5.9c-0.1-1.1-0.2-2.3,0.2-3.3c0.7-1.4,1.3-3.3,3.3-3.3c2.2,0,2.4,1.9,2.6,3.5\n                        c0,0.2,0,0.3,0.1,0.5c0.2,1.5,0.3,3.5,2.3,3.1c1.9-0.4,1.1-2.4,1.1-3.8c0-2.2-1.4-4.5,0.2-6.7c0.4-0.3,0.8-0.3,1.3-0.2\n                        c4.3,0.7,8.3,2.7,12.5,2.2c-0.7-0.2-1.8,0.1-2.8-0.2c-1.1-0.3-2.4-0.4-1.8-2.2c0.6-0.5,1.2-0.7,1.9-0.9c4.1-0.2,8.3,0,12.4,0\n                        c3.2,0,6.7,0.8,9.1-2.5c1.1-1.6,2.9-0.8,4.2-0.6c4.3,0.7,9-1.9,13.2,1.7c0.6,0.5,5.4,1.3,6.1-3.1c0.6-3.6,9.7-7,12.9-5.2\n                        c0.3,0.2,0.8,0.3,0.8,0.5c-0.1,4.2,3.2,2.7,5.3,3.1c5,0.8,10,1.3,14,5.2c1.6,1.5,4.5,0.4,6.7,0.9c0.5,0.1,0.9,0.3,1.3,0.6\n                        c0.3,0.3,0.6,0.7,0.9,1.1c4.6,5.1,10.2,8.6,17,10.1c1.5,0.3,3.2,0.3,3.7,2.1c1.5,5.1,5.7,5.4,9.9,5.8c3.8,0.4,3.8,0.4,4.4,3.3\n                        C769.7,623,768.3,623,767,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03540"),
                d:
                  "M607,595c0.3-4.3-3.2-6.8-5.4-9.3c-1.8-2-3.3-3.1-2.7-5.9c0.4-1.9-0.4-3.5-1.9-4.8\n                        c-0.7-2.6-2.2-5.7,1.7-6.9c3.7-1.2,5.5,1.1,6.4,4.3c0.6,0.3,0,3.3,1.8,0.7c2.4-3.4,2.9-3.4,4.8,0c1.6,2.9,6,3.9,8.6,1.4\n                        c1.5-1.4,2.1-1,3.9-0.5c4.5,1.2,9.4,0.5,13.4-2.1c1.7-1.1,3.3-2.3,5.4-2.1c6.6,0.5,13.1-1.6,19.7-0.9c1.9,0.2,2.6-1.9,4.2-1.9\n                        c2.3-0.8,4.3-2.5,7-1.9c4.2,2,8.6,3.8,11.3,8c-3.7,1.7-7.4,3.8-11.8,3c-1-0.2-2-0.1-2.8,0.6c-3.6,3.2-7.8,3.9-12.2,1.9\n                        c-3.1-1.4-6.6,3-9.4-0.7c-0.2,0.6-0.4,1.3-0.9,1.8c-0.8,1.1-2.2,2.5-3.2,1.7c-4.1-3.1-7.4,0.7-11,1.1c-3,0.3-4.5,2.9-4.9,6.1\n                        c-0.3,2.5-1.4,4.5-4.1,1.5c-0.2-0.2,0.4-0.8-0.4-0.6c-5.3,1.8-5.3,1.8-8.6-1.4c0.6,4.7,0.9,5.3,3.7,6.5c1.3,3-2,4.2-2.6,6.4\n                        c-2.6,0.3-3.8-1.7-5.1-3.3C610.6,596,609.3,594.7,607,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M617,601c-0.5-1.1-3.6-2.4,0.3-3c1.8-0.3,1.7-1.7,1.7-3c1.3-1.3,3.1-1.1,4.7-1.2\n                        c6.4-0.5,12.8,1,19.3,0c2.1-0.3,4.6,0.1,4.8,3c0.2,3-2.1,3.4-4.4,3.5c-1.5,0.1-3,0.3-4.4,0.7c-2.3,3.2,1,6.3,0,9.5\n                        c-0.4,1.1,0.5,3.2-1.5,2.9c-1.6-0.3-4.2,0.3-4.5-2.8c-0.2-1.8,1.2-4.7-1.3-5.1c-1.3-0.2-2.2,2.9-3.1,4.7\n                        c-0.1,0.3-0.4,0.5-0.6,0.8c-1.3,0-2.7,0.1-4,0c-1.6-0.2-3.3-0.4-1.5-2.6c0.6-0.8,0.6-2-0.2-2.7c-0.9-0.9-1.8-0.3-2.5,0.5\n                        c-0.8,0.8-1.8,1.1-2.5,0.1c-0.6-1-0.5-2,0.6-3C619,602.2,618.9,602,617,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF3647"),
                d:
                  "M639,619c1.3,0,2.7,0,4,0c2-1.3,4-1.6,6,0c0.7,0.7,1.3,1.3,2,2c-4-0.6-7.9,0.9-11.9,0.9\n                        C639,620.9,639,620,639,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A5313C"),
                d:
                  "M604,573c-0.3-2.7-1.6-4.7-4.3-4.2c-3.6,0.6-2.6,3.8-2.7,6.2c-0.4-0.6-0.7-1.2-1.1-1.7\n                        c-1.3-1.5-2.6-2.9-3.9-4.3c-3.1-2.7-3.2-7.2-6-10c1.4-1.4,3.5-1.4,4.5-0.3c4.4,4.8,10.2,4.2,15.7,4.6\n                        c4.4,0.4,8.9,0.5,13.4,0.5c3.3,0,6.1-2.2,9-3.7c9.9,0.1,19.6-2.9,29.5-1.6c4.3,0.1,8.4,0.7,12.5,2c0.3,0.5,0.8,1,0.1,1.7\n                        c-1.8,1.5,0.8,0.5,0.7,1.1c1.1,0.7,2.9,0.7,2.6,2.7c-2.8-1-4.4,2.3-7,2c-8.5,0.2-16.8-2.8-25.4-1.8c-1.1,0.1-2.5-0.8-3.2,0.6\n                        c-2,4-5.7,3.9-9.1,3.4c-7.4-1-14.9,1.3-22.3-0.4c-1.3-0.3-0.4,0.6-0.4,0.6C606.7,572.3,606.6,573.9,604,573z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A111E"),
                d:
                  "M543,480c3.9-3,8.1,4.5,11.9-0.5c4.8,4.3,9.2-1.4,13.8-0.6c1.9,0.3,3.8,0.5,5.7,0.7\n                        c0.3-2.4-3.6-1.4-2.6-3.7c0.8-1.8,2.7-0.2,4.1-0.9c1.1-0.6,2.8,0.2,3.8-0.9c2.4-2.5,4.6-2.8,7.1,0c0.8,0.9,2.7,1.2,3.2,0.5\n                        c3.4-4.9,11-2.6,13.9-9.1c1.2-2.7,5.5-0.3,8.2,0.6c1.7,0.6,3.7,2,0.7,4.2c-1.6,1.2-0.3,2.4,1.4,2.5c2.8,0.1,5.5,0,8.7,0\n                        c-4-5.9-4-5.9-5.6-2.7c-1.6-1.1-1.6-2.7-0.7-3.9c1.1-1.5,3.5-1.2,4.5-0.6c3.6,2,6.3,3,9.8-0.5c1.1-1.1,3.8-3.6,6.4-1.4\n                        c0.7-2-0.8-2.5-1.1-3.6c-0.2-1-0.5-2.2,0.5-2.7c2-1.1,1.2,1,1.8,1.7c1.3,1.4,4.3,2.4,4.7,1.7c1.3-2.6,5.9-3.2,4-7.8\n                        c7.6,6,15.2,4.3,18.1-3.8c0.9,2.3,2.1,2.9,4.1,1.8c2.6-1.3,4-0.8,4.8,2.5c1.2,5.2,3.5,5.7,8,2.4c1.2-0.8,1.2-0.8,5.3,1.3\n                        c0.7-1.3-1.5-3.2,0.5-3.9c2-0.7,1.7,1.4,2.2,2.5c0.8,1.7,2.3,2.2,4.2,1.9c4.9-0.6,9.7-1.2,14.6-1.8c0.7,0.7,1.4,0.4,2.2,0.2\n                        c-0.7,0-1.5,0.5-2.2-0.2c-1.3-1.6-2-3,0.8-3.9c1.5-0.5,3.4-1.4,3.5,0.8c0.5,6.9,5.2,2.7,7.9,3.8c0.5-2.7-4.5-1.7-2.7-3.8\n                        c2.1-2.5,3.5,1,4.9,2.2c0.8,0.7,1.2,2.2,2.7,1.1c3.4-2.6,8.6-1.8,10.9-6.2c0.8-0.8,1.7-1.5,2.6-2.1c0.8-0.5,1.7-0.7,2.7-0.5\n                        c1.2,0.4,2.1,1.3,2.4,2.4c0.8,2.5,2.8,2.6,4.3,1.4c2.8-2.4,5.5-1.4,8.4-0.5c0.6,0.2,0.4-1,0.2-0.4c-0.1,0.3-0.2,0.4-0.3,0.3\n                        c-2.5-0.8-4.3-1.8-0.8-3.9c1.5-0.9,1.8-2.7,2.9-4c1.2-1.4,2.5-2.9,4.5-2.6c4.3,0.6,8.7-0.2,13,0.4c2.9,0.4,2.9,1.6,1.6,3.7\n                        c-0.9,0.8-1.9-0.1-2.9,0.2c1.4,0.6,2.7,0.9,4,0c1.7-0.3,3.3-0.4,4,1.6c-0.4,1.3-1,2.6-1.1,4c-0.3,0.4-0.6,0.6-1.1,0.7\n                        c-2.3,0.4-5.3-2-6.8,1.7c-1.7,1.2-3.6,1.7-5.6,2c-24.8,3.4-49.3,7.8-74.1,11.2c-1,0.1-1.9,0.6-2.9,0.7\n                        c-16.1,2.4-32.2,5-48.3,7.5c-15,2.3-29.8,5.2-44.9,6.7c-1.9-0.1-3.8-0.1-5.6,0.5c-2.6,0.4-5.1,1.4-7.7,1.4\n                        c-1.6,0-3.1,0.1-4.6,0.6c-1.5,0.4-3.1,0.4-4.7,0.7c-5.3,0.9-10.7,1.5-16.1,1.8c-2-0.1-3.9-0.2-5.9,0.1\n                        c-0.5,0.1-0.9,0.2-1.4,0.2c-2.7-1.4-5.3,0.6-8,0.4c-0.2,0-0.5-0.1-0.7-0.1C543.3,484.1,542.8,482.1,543,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741523"),
                d:
                  "M559,484c5.7,0,11.4-0.8,17-2c1.7,1.5,2.3,3.2,1.3,5.3c-1.1,2.3-2,4.3-0.2,6.9c1,1.4-0.4,2.4-1.8,2.7\n                        c-1.5,0.4-3,0.3-4.4,0c-0.4-0.1-1.2-0.1-1,0.2c0.4,0.6-0.1,1.4,0.7,1.7c0.6,0.2,1.3,0.1,2,0c4.3-0.7,4.7,1.7,4,5\n                        c-0.2,0.7-0.7,1.2-1.3,1.7c-5,0-5.4,3.2-5,7.1c-0.1,0.5-0.4,0.8-0.8,1c-2.3,0.7-4.1-0.1-4.9-2.2c-1.6-4.8-6.1-6.6-9.6-9.4l0,0\n                        c-0.7-4.4-0.9-9-3.3-13.3c-1.9,1.8,1,2.5-0.4,3.7c-0.8,0.6-1.6,0-1.8-0.7c-1.1-3-3.2-3.9-6-2.9c-2.5,0.9-1-1.1-1.4-1.7\n                        c0.8,0,1.6-0.2,2-1l0,0c3-0.6,6-0.6,9-1l0,0C554.9,483.8,557.2,485.3,559,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M575,505c0.3-0.3,0.7-0.7,1-1c1.6-1,3.3-0.8,4.9,0c0.3,0.4,0.5,0.8,0.8,1.2c0.2-0.7-0.7-0.7-0.9-1.2\n                        c-0.5-0.5-1.3-0.4-1.9-0.7c-1.3-0.6-2.5-1.5-1.9-3c0.5-1.3,2.1-1,3.1-0.5c2.3,1.2,5.4,0.4,7.2,2.9c0,0-0.4,0.7,0.2,0.2\n                        c3.6-3.1,3.6-3.1,5.8,1.2c-0.1,0.7,0.1-0.2-0.1,0.5c-3,13.8-2,15,11.6,15c4,0,8,0.2,12,0c5-0.2,8.2,1.9,9.9,6.6\n                        c0.8,5.1,0.4,4.7-6,6c-2.7,0.6-2.9,0.3-3.3-2.7c-1.8,0.2-2,2.7-4,2.7c-0.1,0-1.5-2.8-0.6,0.2c0.6,2.1,0.5,4.3,0.3,6.4\n                        c-0.2,1.3-0.5,2.8-2.4,2.6c-1.4-0.2-1.6-1.6-1.6-2.8c0-1.5,0.5-2.9,0.4-4.5c-0.2-3.2-1.4-4.4-5-5c1,0.5,1.9,0.2,2.6,0.6\n                        c0.9,0.6,1.7,1.5,1.3,2.4c-1.4,3.2-4.3,2-6.4,2.3c1,0.1,2.4-0.1,3.8,0c1.9,0.1,2.5,1.5,2.6,3.1c0.1,1.5-0.5,3.9-2,3.4\n                        c-4.8-1.3-3.6,2-3.8,4.3c-0.1,0.8-0.3,1.6-1,2.2c-5.2,2.3-9.6-0.3-14.1-2.2c-3.4-1.4-6.5-3.2-8.5-6.4c-0.3-0.4-1.3,0-1.9,0.1\n                        c-0.3-0.3-0.7-0.7-1-1c-0.2-2.4-2.4-3.8-3-6c-1.2-4.4-4.2-7.9-5.9-12c1.9-1.9,1.2-5,3-7c3.2,0,4.1-1.9,4.2-4.7\n                        C574.3,507.2,574,505.9,575,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M570,513c-1,2.3,2.4,6.5-3,7c-2.3-3.3-4.7-6.7-7-10c-0.5-3.4-4.4-4.7-5-8c1.7-0.1,4-1.9,4.2,1.7\n                        c0.1,1.2,1.4,1.2,2.3,1.5c1.8,0.7,3.3,1.1,3.3,3.9C564.8,511.8,566.9,513.6,570,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962331"),
                d:
                  "M658,560c-7.8-0.4-15.5-0.3-23.2,1.8c-2.1,0.5-4.5-0.4-6.8-0.7c-11.5,3.1-23,4.2-34.1-1.8\n                        c-2.6-1.4-5.7-1.3-8.1-3.6c-2.6-2.5-4.9-5.1-5.9-8.6l0,0c-1.9-0.7-1.3-2.7-2-4c0-0.3,0-0.7,0-1c1-0.8,1.9-0.4,2.7,0.2\n                        c7.6,6.4,15.8,11.5,26,12.8c2.5,0.3,4.9,0.7,7.4,0.6c9.4-0.4,18.8,0,28.3,0.1c4,0.6,8.1,1,12.1,1.9\n                        C655.9,557.9,657.8,557.7,658,560z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1624"),
                d:
                  "M642,557c-8.6,0-17.2,0-25.8,0c-9.1,0-18.1-1-25.9-6.1c-4.2-2.7-8.2-5.9-12.3-8.9c-0.3-1-0.7-2-1-3\n                        c1-3.1,3-2.8,4-0.5c1.5,3.5,3,6.1,7.3,4.5c1.2,4.5,5.6,2.2,8,4c1.8,1.3,3.1-0.1,4.6,0c5.5-0.5,10.3,2.2,15.5,3.5\n                        c1.6,0.4,3.1,1.3,4.8,1.1c6.7-0.6,13,2.1,19.6,2.7C641.8,555,642.4,555.8,642,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12C38"),
                d:
                  "M580,547c2.8,1.1,2.3,4.5,5.3,6.3c6.5,4,13.1,7.2,20.5,8.7c5.2,1.1,10.2,0,15.3-0.7\n                        c2.3-0.3,4.6-0.2,6.9-0.4c-0.7,3.9-5.1,3.7-6.9,3.8c-5.8,0.3-11.8,1.1-17.5-1.1c-0.4-0.2-1.1-0.3-1.3-0.1\n                        c-4.5,4.2-7.2-0.4-10-2.4c-2.1-1.5-3.9-2.2-6.3-2.2C582.1,555.9,580.7,551.6,580,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12C38"),
                d:
                  "M578,543c0.7,1.3,1.3,2.7,2,4c-0.7,0.6-1.4,1.2-2.7,2.2C577.6,546.7,577.8,544.8,578,543z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D14C57"),
                d:
                  "M515,174c0.1-1.7-0.4-2.9-2.3-3.1c-1.2-0.1-1.6-1-1.5-2.2c0.1-1.2,1-1.7,2-1.7c2.9-0.1,5-1.3,6.4-3.9\n                        c0.7-1.3,2-2.5,3.7-1.4c3,1.8,6.3,1,9.4,1.1c1,0,4,1.2,3.8-2.3c-0.1-2,1.9-1.3,3.1-1.3c4.5-0.1,9,0,13.5,0\n                        c1.8,0,3.7,0.1,5.3-1.6c-1.4-0.3-2.6-0.6-4.1-0.9c0.5-0.6,0.7-1.2,1-1.3c3.7-0.5,7.5-0.2,10.3-3.8c0.7-0.9,3.2-1.7,4.1-1.2\n                        c5.8,3.4,3.4-1.9,4.2-4.1c2.9,5.7,2.8,6.1-2.7,7.6c1.3,0.1,2.6,0.1,3.9,0.2c-0.2,2.7-2.6,0.7-3.6,1.7c-0.7,0.1,0.2,1-0.1,0.4\n                        c-0.1-0.3,0-0.4,0.2-0.4c1.4,0,3.2-1.2,3.5,1.4c-3.1,1.8-6.8,1.5-10,2.8c-2.4,0.4-4.9,0.7-7,2.3c-1.4,1.1-3.3,1.9-5.1,1.8\n                        c-6.8-0.3-12.5,2.6-18.2,5.5c-1.2,0.6-2.5,0.8-3.9,0.8c-4.9-0.6-9.6-1-13.1,3.6C517.2,174.5,515.9,174.6,515,174z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4515E"),
                d:
                  "M515,174c2.5-1.8,6.3-2.1,6.9-6.1c0.1-0.6,1.2-0.8,1.7-0.3c1.8,2.2,4.3,1.1,6.4,1.4\n                        c0.2,2.3-1.7,2.5-3.1,3c-2.6,1-5.2,1.9-7.2,4c-7.8,4.1-16,7.5-24.4,10.2c-5.3-0.1-8.9,4-13.5,5.5c-1.4,0.4-2.6,0.2-3.7-0.8\n                        c-2-2-2.6-4.7-4-7c4.4-3.3,4.4-3.3,6.3,0.8c-0.3-2.1,0.6-3.8,1.8-5.3c1.6-2,3.9-1.2,5.9-1.5l0,0c0.8-1.9,2.2-0.4,3.3-0.6\n                        c3.6-0.5,7.5,0.6,10.6-2.8c1-1.1,3.4-0.7,5.1,0.3C509.7,175.2,512.4,174.8,515,174z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45560"),
                d:
                  "M578,154c2.1-1.3,4.5-0.9,6.8-1c2.6-0.1,5.6,0.4,6.2-3.3c0.3-1.4,1.1-0.5,1.8-0.4c2.1,0.2,4.9,1,6.1,0\n                        c4-3.6,7.8-3.3,12.5-1.4c2,0.8,5.4-0.8,7.2-1.9c4.2-2.3,8.6-2.1,12.9-2.9c6.4-1.2,12.7-2.5,19.1-3.7c1.5-0.3,3-0.2,4.5-0.3\n                        c0.6,1.5,0,2.6-1.2,3.6c-4,1-7.9,2.6-12.2,2.4c-9.7,1.7-19.2,4.3-29.1,5.4c-1.7,0.2-3.2,0.7-4.6,1.6c-1.3,0.9-2.7,1.4-4.2,1.9\n                        c-1.8,0.5-3.6,0.4-5.4,0.4c-4.7-0.4-9.2,0.7-13.7,2.2c-0.6,0.7-1.3,1.1-2.3,1.1c-1.5-0.3-2.9-1-4.1-2\n                        c-0.1-0.2-0.2-0.4-0.3-0.6C578,154.7,578,154.3,578,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D14C57"),
                d:
                  "M488,178c-1.5,1.8-4.8,0.2-5.8,3.1c-0.4,1-1.5,1.9-0.8,3.1c0.5,1,2.5,2.2,0.2,3\n                        c-1.7,0.5-2.6-1-2.6-2.7c0-0.6-0.2-1.3-0.3-2.1c-1.7,0.6-3.2,1.1-4.6,1.6c-0.2-1.6-0.7-3-2-4c3.2,0.3,5.6-0.9,7.5-3.5\n                        c1.3-1.7,3.5-1.6,5.4-1.5C487.2,174.8,486.7,177.3,488,178z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D14C57"),
                d:
                  "M507,175c-2.8,0-5.4-0.3-7.4,2.6c-1,1.5-2.9,4.2-5.7,0.4c-1.9-2.5-1.1,2.1-2.6,2.2\n                        c-1.7,0.1-0.7-3.8-3.3-2.2c0.1-1-0.1-2,0.9-2.7C492.8,172.4,502.5,172.2,507,175z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45560"),
                d:
                  "M575,157c-0.7-0.3-1.4-0.7-2.1-0.9c-0.6-0.2-1.2-0.1-2.1-0.2c1.3-1.5,3.4-0.1,4.2-1.8c1,0.3,2,0.7,3,1\n                        l0,0C578,157.2,576.7,157.4,575,157z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C65260"),
                d:
                  "M443,211c-0.5-0.5,1.1-2.8-1.4-1.6c-1.6,0.8-2-0.5-2.6-1.4c0-0.7,0-1.3-0.1-2\n                        c-0.4-1.7-0.9-3.9,0.6-4.8c1.7-1,3.3,0.6,4.6,1.9c3.2,2.8,5.9,1.8,8.1-2c0.3-0.6,1.2-6,5.8-3c1.4,0.9,5.8-2.6,8.9-4.1\n                        c0,0.3,0,0.7,0,1c1.1,2-2.1,1.9-1.7,3.6c-0.5,1.3-1.4,2.1-2.5,2.9c-1.6,0.8-3.4,1.2-4.8,2.4c-3.6,2.4-7.4,4.2-11.1,6.3\n                        C445.8,210.9,444.6,212.2,443,211z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C25E6B"),
                d:
                  "M463,201c-0.1-1.5,1.4-1.9,2-3c1.3-1,2.8-1.8,4-3c1.7-0.3,3.6,0.7,5-1c0.7-1.9,3.9-0.3,4-3\n                        c1.3,0,2.7,0,4,0c0.4-0.4,0.8-0.4,1.2,0c-0.1,2.3-2.2,2.7-3.7,3.5c-4.4,2.3-8.9,4.4-13.1,6.9c-1,0.4-1.9,0.5-2.9,0\n                        C463.3,201.3,463.1,201.1,463,201z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4B58"),
                d:
                  "M469,195c-0.3,2.4-2.2,2.6-4,3c-0.6-1.8,2.1-1.5,2-3C467.7,195,468.3,195,469,195z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F444B"),
                d:
                  "M2066,481c1,0,2,0,3,0c0.3,4,1.2,8.2-3,11c0.9,5.8-3.4,9.5-5.7,14c-0.2,0.4-0.5,1-1,1.1\n                        c-6.3,2-10.1,8.7-17.1,9.3c-1.7,0.2-2.8,1.8-4.2,2.5c-3.7,1.8-5.8,1.1-8.1-2.7c-0.4-3.5-0.6-6.9,0.1-10.4c0.8-1.3,0-3,0.9-4.2\n                        c3.8-1.9,7.7-2.7,12-2.1c2.7,0.4,5.3-0.3,7.4-2.2c1.3-1.1,2.8-1.7,4.4-2.2c5.7-1.8,9.3-5.5,10-11.6\n                        C2064.9,482.6,2065.2,481.7,2066,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2031,517c2.5,3.8,5.5,1.8,7.5,0c1.3-1.2,2.3-2.3,4-2c3.5,0.5,4.8-1.2,4.7-4.2\n                        c2.1-1.1,1.4,2.3,3.4,1.4c-0.2-1.7-1.9-4.5,2.7-3.8c1.2,0.2,7.4,0.1,6-5.4c0-0.1,0-0.5,0.1-0.5c5.6-1.4,4.2-7.2,6.6-10.6\n                        c1.1,5.6,2.9,11.3-2.1,16.2c-1.4,1.4-1,3.2-1,4.7c0,3.7-2.9,6.6-2.3,10.4c0.2,1.5-0.9,2.1-1.7,1.6c-4.2-2.4-8.1,1.5-12.7,0.1\n                        c-6.7-2.1-13.7-3.1-20.9-3.1c-0.8,0-1.5-0.6-2.3-0.9c-1.7-1.2-3.8-2.2-1.5-4.7C2024.8,515.3,2028,514.9,2031,517z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2061,575c-1.2,0.5-2.4-1.9-2.8-0.8c-1.8,5-4.4,3.3-7.4,1.4c-1.5-0.9-1.8,1.1-2.8,1.5\n                        c-0.2-0.1-0.4-0.3-0.6-0.4c-1.6-4-0.8-3.2,1.8-5.4c2.1-1.8,5.6-3.3,6-6.9c0.3-3.1,1.6-5.6,3.8-7.8c3.9-3.9,2.9-8.9,2.2-13.7\n                        c-0.3-1.8-1.9-2.1-3.6-1.6c-1.8,0.6-3.6,0.6-5.4,0.6c-1.6,0-3.7-0.7-3.5-2.1c0.6-3.7-3-5.8-3-9.1c0.1-0.2,0.2-0.4,0.3-0.6\n                        c5.2-0.9,10.5-0.3,14.6,2.6c3.9,2.7,6.1,8.2,7,12.2c0.8,3.3,1.2,9.7-3.3,13.2c-0.6,0.5-1.3,1.4-1.2,2\n                        C2064,565.2,2060.8,569.9,2061,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA5456"),
                d:
                  "M2014,523c0.3,0.3,0.7,0.7,1,1c0.4,0.5,0.3,0.9,0,1.3c-0.4,0.3-0.9,0.5-1.4,0.7\n                        c-0.5,0.1-1,0.2-1.5,0.2c-4,0.6-8.3-1.1-12.2,1.3c-5.5,3.8-10.6,8.3-17.1,10.5c-0.8-1.2-0.4-2.3-0.1-3.5\n                        c1.9-3.6,5.2-5.5,8.6-7.1c2.4-1.1,4.6-2.5,6.5-4.4c1.3-0.9,2.8-1.2,4.3-1.3c2.3-0.1,4.5-0.2,6.8-0.8\n                        C2010.9,520.4,2013.4,519.9,2014,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB4550"),
                d:
                  "M2014,523c-4-3.1-8,1.5-12,0c-2.7-3.1,0.1-3.8,2-4.8c4.6,0.2,9-0.1,13.2-2.8c2.8-1.8,3.2-1.3,3.8,1.6\n                        c0.7,1.3,1.3,2.7,2,4C2020.1,522.2,2016.4,519.7,2014,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2931"),
                d:
                  "M2032.9,525.1c0.4,0,0.7-0.1,1.1-0.1c2.6,0.9,5.4,0.4,8,1c0.3,0,0.6,0,1,0c0.6,0.7,1.7,0.3,2.3,1.1\n                        c0,1.8-1.6,1.8-2.7,2.5c-0.4,0.2-0.8,0.3-1.3,0.5c-2.4,0.8-5.1,0.9-6.3,3.7c-0.3,0.8-1.4,0.4-2.2,0.1\n                        c-0.6-0.4-1.1-0.9-1.4-1.6c-0.1-0.5-0.1-0.9,0-1.4C2032.2,529.1,2031.8,526.9,2032.9,525.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4849"),
                d:
                  "M2032,531c0,0.4-0.1,0.8-0.1,1.2c-1.7,0.2-2.7-1-3.9-1.9c-2.6-2.5-5.5-4.5-9.5-4.2\n                        c-1.2,0.1-2.6,0-3.4-1.4c-0.1-0.2-0.1-0.5-0.2-0.7c5,0.1,10.1-1.1,15,1.1C2031.5,526.8,2032.2,528.8,2032,531z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("602427"),
                d:
                  "M2032,531c-1.3-1.8-2.5-3.6-2-6c1,0,2,0,2.9,0C2033.5,527.2,2033.7,529.3,2032,531z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2042,526c-2.8,0.6-5.5,0.4-8-1C2036.7,525.2,2039.5,524.4,2042,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2046,529c0,0.3,0,0.7,0,1l0,0c-0.9,1.1-1.9,1.8-3.3,1.3c-1.1-0.4-1.3-1.3-0.6-2.3l0,0\n                        C2043.3,528.3,2044.7,528.2,2046,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0444C"),
                d:
                  "M2046,529c-1.3,0-2.7,0-4,0c1-0.7,1.9-1.3,2.9-2c0.9-0.3,1.4-0.1,1.1,1\n                        C2046,528.3,2046,528.7,2046,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2046,528c-0.4-0.3-0.7-0.7-1.1-1c-0.8,0-1.5-0.2-2-1C2044.1,526.5,2046.8,524.7,2046,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1916,520c2.2-1.8,4.5-4.1,5.9,0.7c0.1,0.4,0.7,0.6,1,0.9c2.4-4.8,6.3,4.1,8.8-1\n                        c1.1-2.3,3.5-2.1,5.2-1.2c2.1,1.1-1.2,2.3-0.4,3.8c5.2-2.5,10.3-7,16.5-2.2c1,0.8,2-0.2,3,0c0.3,0,0.7,0,1,0\n                        c-0.1,4.4-1.1,5-6.6,3.5c0.2,1.4,2.1,3-0.2,4c-1.8,0.7-3.7,2-5.1-0.5c0.3,5.2-1,6.8-6.1,7.3c-0.5,0.1-1.2-0.1-1.4,0.3\n                        c-3.1,4.5-6.1,0.6-9.1-0.1c-2.8-0.7-5.6-0.7-8.5-0.4c-0.7,0-1.3,0-2,0c-1.1-2.9,1-4.6,2.5-6.4c0.5-0.6,1.4,0.3,1.9-0.5\n                        c-0.7,0.3-1.6-0.5-2.3,0.2c-0.5,0.5-0.6,1.2-1,1.7c-1.7,1.6-3.9,1.7-5.4,0.4c-2.1-1.9,0.3-3,1.3-4.3l0,0\n                        c0.8-0.4,0.6-1.2,0.5-1.9c0.1-1.5-1.1-2.7-0.6-4.2C1915.3,519.6,1915.6,519.7,1916,520z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1920,535c0.3-0.8-0.3-2.7,1-2.1c2.7,1.4,5,1.4,7.4-0.4c0.6-0.4,1.5,0.1,1.3,0.8\n                        c-0.9,3.4,0.4,2.4,2.3,1.4c3.2-1.7,0.3,2.9,2.8,2.5c1.2-1.7,1.2-5.7,5.9-2.9c2.2,1.3,2.8-3,3.3-5.1c0.2-1-1.3-1.9-0.5-3.5\n                        c2.4-0.4,3.6,6.3,7.1-0.3c0-0.4-4.2,1.3-2.9-1.1c1-1.9,3.2-1.8,4.8-0.7c3.5,2.3,3.7-0.5,4.5-2.6c1.2-0.3,2.3-0.5,3.5-0.8\n                        c-5.3-0.4-9.8-3-14.3-5.3c-0.1-0.1-0.2-0.2-0.3-0.3c0.4-0.2,0.7-0.4,1.1-0.7c3.3,0.5,6.6,1.4,10,1c3.7,0.8,7.4,1.1,11.1,1.8\n                        c2.9,0.6,5.8,1.1,7.9,3.6c0.6,1.2,0,1.9-1.1,2.3c-1.7,0.6-3.4,1.1-5.2,1.5c-4.7,1-9.7,1.1-12.9,6c-1.5,2.3-5,3.3-7.9,3.7\n                        c-2.5,0.3-4.3,1.7-6,3.2c-1.2,1.1,0.8,0.9,1,1.5c1,1.2-0.1,2-0.5,3c-0.3,0.6-0.7,1.1-1.3,1.5c-1-0.3-2-0.7-3-1\n                        c-3.4-1.2-7.1-1.5-10-4C1926,537.2,1922.8,536.7,1920,535z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1915,526c-0.4,1.2-0.8,2.4-1.2,3.6c4,1.5,5.4-0.6,5.6-4.6c2.2,1.3,3,4,6,3.3\n                        c-5.4-0.6-6.2,3.3-7.4,6.6c-2.9,0.4-5.1-2.4-8-2C1910.7,530,1910.2,526.1,1915,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791627"),
                d:
                  "M1928,555c-0.1,6.1-4.7,10-7,15c-3.9-1.8,0-6-2.6-8.3c1-1.3,2.1,0,3.1-0.1c2.1-0.2,5.4-1.3,4-3.5\n                        C1922.4,553.1,1927.9,556.5,1928,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761525"),
                d:
                  "M1885,586c-3.8-2-7.4-4.4-9.9-8c5-1.4,7.7,4.6,12.6,4c0.9-0.1,1.7,1.3-0.1,1.6\n                        c-2.4,0.4-0.5,1.5-0.5,2.4C1886.3,586,1885.6,586,1885,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1876,567c-0.3-1.7-0.7-3.3-1-5c0.2-1.2,0.8-2.8,2.1-1.5c6,6.2,5.9,6.3,11.4,6.7\n                        c-2.7,2.1-5.6,1.8-8.5,1.8c-1,0.8-2,0.9-3,0C1876.7,568.3,1876.3,567.7,1876,567z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("78161E"),
                d:
                  "M1929,538c3.2,1.7,7.6,0.4,10,4c-1.6,0.9-2.9,2.4-5,2C1934.1,540.6,1929.4,541.1,1929,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761525"),
                d:
                  "M1875,577c-0.7-1-1.4-2-2-3c2.9-1.5,6.2,1.2,9.2-0.7c-1.2,1.7-2.5,3.1-4.8,2.2\n                        C1875.8,575,1875.1,575.5,1875,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791627"),
                d:
                  "M1918,574c-1,0-2,0-3,0c2.5-0.6,2.9-4.4,6-4C1919.9,571.3,1920.5,573.8,1918,574z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731426"),
                d:
                  "M1877,569c1,0,2,0,3,0c0,0.8,1.8,1.1,0.9,1.8c-1.9,1.4-3.7,0.4-5.1-1.2c0,0,0.1-0.3,0.3-0.4\n                        C1876.3,569.1,1876.7,569.1,1877,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1895.6,568.7c0.5,1.1,0.7,2.5-0.4,2.7c-1.5,0.3-0.8-0.9-0.5-1.6\n                        C1894.8,569.4,1895.2,569.1,1895.6,568.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1916,520c-0.3,0-0.7,0-1,0c-0.8,1.6,1.4,2.5,1,4c0.3,0.9,2,1.2,1.5,2.2c-0.6,1.2-1.6,0-2.5-0.2\n                        c-2.7-2.8-3.9-5.7-0.3-8.7c-1.1-1.3-2.2,0.6-3.2-0.2c-0.3-1.4,1-1.8,1.7-2.6c2.1-2.6,2.9,1.1,4.7,1c1,0-0.3,1.1-0.8,1.4\n                        C1915.9,517.7,1916,518.9,1916,520z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1929.6,518.6c0,1-0.6,1.2-1.3,1.2c-0.9,0-1.6-0.5-1.9-1.4c-0.2-0.7,0.2-1.3,1-1.3\n                        C1928.6,517.1,1929.3,517.7,1929.6,518.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1941.8,518.3c0.1,0.7-0.2,1.3-0.9,1.5c-1,0.2-1.6-0.3-1.6-1.2c0-0.7,0.4-1.3,1.2-1.3\n                        C1941.1,517.2,1941.6,517.5,1941.8,518.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d: "M1956,521c-1,1.3-2,1.3-3,0C1954,520.7,1955,519.4,1956,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1424"),
                d:
                  "M1963,468c1.3,0.3,2.7,0.7,4,1c0.9,1,2.1,1.8,3.3,2.1c3.7,0.9,4.4,3.6,5.1,6.9\n                        c0.5,2.3,6.5-0.6,6.2,4.7c-0.1,1.6,3.9,0.5,3.7,3.3c0.6-2.5,3.9,0.6,4.8-2.6c1-3.6,4.4-5.2,8.1-5.6c1.7-0.2,3.2-0.7,4.8-1.2\n                        c0.5-0.1,1,0,1.4,0.1c0.5,0.1,0.9,0.3,1.4,0.5c2.3,0.9,4.9,0.6,7.2,1.8c2.5,1.3,2.9,2.8,1,5c-5,5.6-9.3,11.9-13.1,18.4\n                        c-2,3.3-4,6.6-7.9,8.2c-3.2,2-6.9,3.1-9.5,6.2c-1.1,1.4-3,1.8-4.6,1.2c-5.6-2.2-11.5-1.2-17.2-2c-1-0.1-2-0.2-2.7-1\n                        c2.7-4.2-2.3-3.1-3.3-5c0.5-0.5,1-1.2,1.6-1.7c1.1-1.1,2.2-2.3,1.6-3.9c-0.9-2.3-2.5-0.2-3.8-0.4c-1.3-0.2-2.6,0-4,0\n                        c0-1.3,0.7-2,2-2c2.5-2.8,5.9-3.3,9.4-3.4c2.1,0,4.3,0.1,6.8-0.5c-1.6-2.6-1.8-5.4-3.6-7.8c-1.6-2.2-1.4-5.4-0.6-8.1\n                        c1.2-4,0.9-7-3.6-8.8c-1.7-0.6-3.7-1.9-2.4-4.5C1960.4,468.9,1961.9,469.5,1963,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641222"),
                d:
                  "M1959,469c0.4,2,1.8,3.6,3.5,3.8c5,0.5,4.4,4.2,4.5,7.4c0.1,4-4.3,9,2.5,11.6\n                        c-2.1,2.9,0.4,4.1,1.9,5.9c1,1.2-0.5,2-1.7,2.2c-2.2,0.4-5,0.8-6.6,0.4c-3.9-1.1-6.7,1.4-10,1.7c0.7-2,0.3-4.8,5.2-4.5\n                        c-4.6-2.3-7.6-5.4-10.1,1.8c-0.2-2.8-1.5-5.1-1-5c4,0.7,1.4-7.7,6.8-4.6c1.7,1,3.5-0.3,5.7-1.3c-1.7-0.3-2.9-0.4-4.1-0.8\n                        c-2-0.6-4.4-0.7-3.1-4.2c1.1-2.9-3.7-5.6-0.7-9c0.1-0.1,0-0.8-0.2-0.9c-1.2-0.6-4.4,1.1-3.3-2.2c0.4-1.1,3.3,0.1,4.4-1.6\n                        c0.2-0.3,0.3-0.6,0.5-0.8C1955,469,1957,469,1959,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761521"),
                d:
                  "M1959,515c4.2,0,8.3,0,12.5,0c2.1,0,4.1-0.1,6.1,1.3c1.8,1.2,3.9,1.5,5.6-1.5c2-3.4,6.5-3.9,9.8-5.8\n                        c0,5.7-3.8,9-7.7,12.2c-1.7,1.1-3.6,1.1-5.5,1.1c-1.4-0.1-2.8-0.2-3.8-1.3c-4.3-2.8-9.4-3-14.2-3.9c-1.8-0.4-3.6-0.6-4.8-2.1\n                        C1957.7,515,1958.3,515,1959,515z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72252D"),
                d:
                  "M164,544c-1.7-0.2-3.6,0.7-5-1C161,541.7,162.6,542.3,164,544z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B04951"),
                d:
                  "M2046,604c-6.3,1.7-12.7,1-19.1,0.9c-1.8,0-3.7-0.5-3.9-2.9c0.4-3.3,1.7-6.3,3-9.3\n                        c1.4-2.2,2.1-4.9,4.7-6.2c2.2-1,2.9,1.7,4.9,2.1c3.8,0.7,6,0,7.4-3.5c4.3,5.1,2.5,15.6-3,17.6\n                        C2041.9,603.7,2044.4,602,2046,604z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB444C"),
                d:
                  "M2043,585c-0.1,4.1-0.4,7.8-6,4.3c-0.2-0.2-0.7-0.2-0.9-0.1c-2.7,1.6-4.2,0.4-5.1-2.2\n                        c-1.4-2.7,0.9-3.9,2.1-5.7c4.4-2.3,8.2-5.6,11.9-8.8c2.3,0.7,1.9,3,3,4.5v0c0.5,3.5-3.7,3.3-4.8,5.8\n                        C2042.9,583.6,2041.9,584.1,2043,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701421"),
                d:
                  "M2065.9,609.9c-3-1.9-6-0.4-8.5,0.6c-3.2,1.3-6.1,0-9.2,0.2c-0.8,0.1-1.4-0.9-1.4-1.8\n                        c0.1-1.3,1.2-0.9,1.9-0.9c0.8,0,1.7-0.1,2.5,0.2c3,1,5,1,4.5-3c-0.2-1.7,2-0.9,2.3-2.1c2.7,0,5.5-0.6,8,1c0.8,1.7,0.7,3.3,0,5\n                        C2066,609.3,2066,609.6,2065.9,609.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1627"),
                d:
                  "M2066,609c0-1.7,0-3.3,0-5C2067.6,605.7,2067.4,607.4,2066,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M783,447c-0.3-2.7-2.4-1.8-4-2c-1,0.3-1.3-0.1-1-1c0.1-0.8,0.2-1.6,0.3-2.4c-3.3,1-6.9-1.5-10.2,0.6\n                        c-0.4,0.3-0.1,1-1.2,0.4c-4.1-2-8.7-0.1-8.4,3.8c0.4,4.9-2.3,0.6-3.1,1.6c0.3,2.9,3.3,1.2,4.7,2.7c-3.7,1.1-7.5-0.7-11.2,2\n                        c-3.8,2.7-4.6-2.9-6.9-4.7c-0.7-0.4-0.3-1.3-1-1.7c-0.5,0.8-2,1.3-1,2.7c-0.7,1.2-1.9,1-3,1c-0.4-1.2,1-3.1-1.4-3.6\n                        c-0.5-0.1-1.2-0.9-1.2-1.5c-0.2-4.5-2-7.8-7.6-8.1c2-2.3,3.2-0.2,4.6-1.5c-2.9-3-0.9-6.8-1.2-10.7c0.6-0.8,2.1,0,2.9-1\n                        c-1.3-0.2-2.3,0.2-2.9,1c-3.4-0.2-6.9-1.9-8.9,2.5c-1.3-0.4-1.3-1.4-1.1-2.4c0.7-2.6-0.4-2.8-2.3-1.6c-1.2,0.7-2.4,2-3.2,0.2\n                        c-0.8-1.7,1.6-1.1,2.2-1.9c0.8-1.1,3.7-2.3,2.4-2.9c-3.4-1.7,1.6-8-4.9-7.3c3-1.7,3.1-1.7,4.7,0.5c1.3,1.9,2.9,2.5,5.9,1.3\n                        c-2.4-1.3-5.9-1.1-4.2-5c0.5-1.1-0.8-1.2-2.3-0.8c-2.7,0.8-5.5,0.1-5.9-3.6c-0.4-3-3.9-3-4.8-3c-5.6,0-5.1-3.7-5.3-7.2\n                        c-4.7,1.4-5.6,0.7-5.2-4c0-0.4-0.4-1.1-0.7-1.1c-0.6,0-1.7,0.2-1.7,0.4c-0.1,2.8-4.2,1.9-4.3,5c0,1.5-1.6,0.5-2-0.3\n                        c-0.5-1-0.5-2.3-1-3.3c-0.8-1.3-3.3-1.2-3.2-0.7c1.4,4.5-4.2,4.2-4.5,7.2c-0.1,0.7,0.6,1.4,1.4,3.2c-3.4-2.3-6.2-0.8-9-1\n                        c-1.7-0.1-2.4,0.9-1.8,2.6c0.6,1.6,0.4,3.4-1.3,3.6c-1.7,0.2-2.5-1.9-3.7-3c-1.6-1.5,0.4-1.7,0.7-2.5c0.9-2.6,2.5-4.5,4.4-6.4\n                        c0.5-0.5,0.8-1.2,1.5-1c1.1,0.4,1.9,1.2,2.3,2.4c0.2,0.7-1.7,1.9,0.4,2.1c1,0.1,1.8-0.6,1.7-1.9c-0.2-4,1.9-2.2,3.7-1.4\n                        c-1.5-6.1,4.3-5.3,6.9-7.5c0.1-0.5,0.2-0.9,0.5-1.3c0.3-0.4,0.6-0.7,1-1c4.3-2.8,10.5-2.3,14.6,1.1c3.1,2.6,6.1,3.2,10,1.1\n                        c4.5-2.3,9.3-5.9,14.7-1.5c1.7,1.4,3.3,2.7,3.5,5c1.5-0.5,2.1-1.5,2.7-3.1c1-2.5,3.5-2.3,5.6-2c2.2,0.3,1.6,2.1,1.3,3.6\n                        c-0.8,3.2,2,2.8,3.7,3.6c-1.4-0.8-3.8-0.9-2.6-3.4c0.2-0.4,0.8,0.1,0.9-0.4c-0.3-0.1-0.5-0.2-0.7-0.5c-0.9-2-0.5-3.7,1.2-4.9\n                        c2-1.4,2.3,1.2,3.5,1.7c2.2,0.9,4.1,2.9,6.6,0.2c2.1-2.2,5.2-1.4,7.6-0.7c2.9,0.9,1.4,2.9,0.1,4.6c-0.9,1.2-3.5,2.2-1.2,4.3\n                        c0.5,0.5,0.6,2.2,2.5,0.4c2.2-2.1,5.1-0.2,5.4,2.6c0.5,4.1,2.1,3.7,4.8,2.1c1.1-0.6,2.4-1.7,3.5-0.3c1,1.3-0.2,2.5-1,3.5\n                        c-2.7,2.9-7.2,4.1-9,9.5c2.5-4.7,6.5-6.4,9-9.5c1.6-1.4,3.6-2.9,5-0.4c1.6,3.1,3,2.5,4.8,0.5c2.4-2.7,4.2-1.3,5.9,0.9\n                        c0.9-1.1,0.6-2.5,1-3.8c0.9-2.8,2.3-4.5,5.5-3c1.4,0.7,2.9,1,4.4,0.7c5.9-1.5,11,1.5,16.3,2.9c1.7,0.5,3.2,0.5,4.8-0.1\n                        c2.2-0.9,4.6-1,6.9-0.4c1.8,0.5,2.7,2.2,1.2,3.3c-3.5,2.4-0.9,6.2-2.5,9c-0.6,1.1,1,1.9,2.5,2.3c-3.1-1.8-2.7-3.8-0.7-5.8\n                        c2.2-2.1,3.3-1.7,5.1,1.1c1.1,1.7,3.5,2.7,3.3,5.3c0.3-0.5,0.2-1.2,0-1.7c-1-2.6-0.5-5.3,2-5.8c3.1-0.7,3.8,2.5,4.5,4.8\n                        c0.3,1.1-0.3,2.9,1.9,1.3c0.3-0.2,0.1-0.3,0.3,0.2c2,4.5,6.2,7,9.4,10.4c1.4,1.5,0.9,4.3-0.8,6c-1.8,1.9-4.2,1.6-6.6,1.1\n                        c-0.8-0.2-1.5-0.7-1.6-1.7c-0.1-1,0.5-1.6,1.4-1.8c1.6-0.4,3-0.9,3.4-2.8c-1.7,0-2.7,1.2-3.8,2.1c-1.2,1-3.6,2.2-0.7,4.3\n                        c1.4,1.1,1,3.1,0,4.6c-1.1,1.6-2.5,2.8-4.4,2.9c-1.2,0.1-1.8-0.6-1.8-1.9c0-3.8-0.3-5.1-1.9-7.1c0.4,1.6,1.9,2.4,1.6,4\n                        c-0.3,1.5-0.8,2.9-2.1,3.8c-1.5,1-3.2,0.7-4.8,0.5c-1.5-0.2-2.9-0.1-4.5,0.4c1.9,1.1,2.1,2.6,0.7,4c-2,2.1-4.4,1.3-6.6,0.6\n                        c-2.2-0.7-3.1-2.2-1.8-4.8c-1.8,1.4,0,5.2-3.8,4.9c-3.1-0.2-1.9-3-3.7-4.9c0.5,7.2-5.6,7.2-9.3,9.2c-3.1,1.7-7,0.2-10.4-1.3\n                        c0.7-2.4,2.5-1,4.3-2c-4.7,1.6-10-0.4-11.9,5.6c-0.5,1.7-2.4,0.5-3.6,0.5C782.3,449,782.3,448,783,447z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M688,385c-0.3,0.3-0.7,0.7-1,1c-5.4-0.4-10.6-3-16.2-0.4c-1,0.5-1-1.4-1.5-2c-0.9-1.2-1.7-0.4-1.9,0.8\n                        c-3.7-1.9-7.9,2.9-11.5-1.1c-1.4-1.5-3.2,0.8-4.9,0.9c-5.4,0.3-10.8,0.5-16.2,0.8c-0.9,0.1-2-0.6-2.6,0.5\n                        c-2,3.9-3.9,4.5-7.7,2.2c-2.9-1.7-6.1-0.9-9.1-0.6c-2.5,0.3,0,2.8-1,4c-1.9-0.6-0.7-2.9-2.1-3.7c-1.8,0.1-0.7,2-1.9,2.8\n                        c-0.8-1.4-1.5-2.9-2.3-4.3c1.3-1.9,3.2-2.2,5.2-2.3c4.8-0.1,9.5-1.3,14.4-1.2c0.5-0.2,1-0.3,1.6-0.3c2.1,0.1,4.2,0.4,6.2-0.4\n                        c28.6-3,57.2-4.6,85.9-6.5c9.6-0.6,19.2-1.4,28.7-2.6c2.6-0.3,5.3-0.4,7.9,0.2c4.1,0.5,8.2,2.4,12.4,0.2\n                        c1.2-0.6,2.6-0.6,3.9-0.5c9,0.8,17.7-1.3,26.6-2.5c8.6-1.1,17.3-0.6,25.9-0.1c2.1,0.1,3.4,1.3,1.2,4.5\n                        c3.3-3.8,6.2-5.7,9.8-2.1c0.2,0.2,0.3,0.2,0.4,0c1.6-4.3,5.5-3.8,8.9-4.3c1.2-0.2,2.3,0.5,2.8,1.7c1.1,2.6,1.2,2.8,4.4,1.4\n                        c2.7-1.2,3.8,0.2,4.7,2.1c1,2.1,1.8,4.4-1.4,5.5c0.4,0.3,1,0.1,1.6,0.3c4.9,1.5,6,0.6,7.3-4.8c0.6-2.8-0.8-6.1,2.1-8.4\n                        c0.6,0.1,1,0.4,1.3,0.9c1.3,6.7,1.4,13.5,2.6,20.1c1.8,9.9,2.7,19.9,4.4,29.8c1.2,7.1,1.2,14.5,2.4,21.6\n                        c0.1,0.8-0.2,1.6-0.7,2.3c-10.9-4.6-21.4,0.6-32,1.7c-8.7,0.9-17.5,1.7-26,3.8c-1.6,0.4-3.3,0.3-4.9-0.1\n                        c-1.2-0.1-1.2-1.7-2.8-1.9c1,0.7,1.9,1.3,0.9,2.3c-1.8,1.3-3.9,1.8-6.1,1.8c-5.5,0.1-10.8,1.4-16.1,2.5\n                        c-3.2,0.7-6.5,1.5-9.5-0.8c0.4-1-1.6-2.8,1-3c1.3,0.2,3.6,3.3,3.7-0.1c0.1-4,2.5-3.4,4.7-3.9c2.7-0.5,5.6,0.9,8.1-1.5\n                        c0.4,3.5-3,1.4-3.6,3.2c2.5,0.4,5.1,1,7.3,0.8c2-0.1,4-2.1,6.3-2.7c2.9-0.8,4.6-2.2,3.1-5.6c-0.6-1.3,1-1.9,1.7-1.8\n                        c1.9,0.3,3.2,1.5,3.3,3.6c0,0.6-2.1,1.6,0.2,1.9c0.9,0.1,2.7,0.7,2.3-1.4c-0.6-3.5,2.7-3.3,3.7-5.5c1.1,1.4,1,2,0.5,2.5\n                        c-0.8,0.9-2.6,1.3-1.9,3c0.7,1.7,2.5,1.2,3.9,1.5c1.8,0.4,3.9,0.4,4-1.5c0.1-3.1-2.8,0.7-3.9-1.6c1.8-2.4,4.6-3,7.4-2.7\n                        c6.3,0.6,7.3-0.5,5.1-6.4c-0.2-0.4,0-1,0-2.6c1.5,3.3,3.1,5.3,6.2,5c-0.2,2.4-3.1,2.9-2.9,5.7c2.6-1,4.9-2,5.2-4.8\n                        c0.3-2.8-2.7-2.7-5.5-4.7c4.7,1.1,4.1-3.6,7.2-4c1.2-0.1,2.2-1.8,3.9-0.8c1,0.6,0.4,0.7,0.2,1.5c-0.6,1.7-0.4,3.5-3.1,2.9\n                        c-0.5-0.1-1.2,0.3-2.5,0.7c2.8,1.6,5,1.7,7,0.5c1.8-1.1,1.4-3.3,1-5c-0.5-2.3-2.6-2.8-4.6-3.2c-1.6-0.4-5.2,1.1-2.4-3\n                        c0.4-0.7-1.3-2.8-2.3-4.7c-0.2,1-0.3,1.4-0.4,1.8c0,1,1.5,2.5-0.7,2.6c-1.7,0.1-1.6-1.5-1.5-2.6c0.4-3.1-0.9-5.4-3-7.8\n                        c-3.5,2.5,0.1,8.1-4.3,10.3c1-2.2,1.5-4.2-0.2-6.3c-1.5-1.9-2.6,0.3-3.8,0.2c-1.4-1.6,1.9-2.4,0.6-3.9\n                        c-4.5,2.1-4.5,2.1-1.4,7.1c-5.3-0.1-5.4-0.1-4.2-5c0.7-2.6-0.2-4.5-1.5-6.4c0.8-1,1.6-0.2,2.4-0.3c1.1-0.2,2-0.7,1.9-1.9\n                        c-0.1-1-1.2-1-2-1c-0.8,0-1.7-0.2-2.5,0c-3.8,1.2-7.5,2.5-11.3-0.4c-1.8-1.4-2.6,1-4.1,2.5c-0.2-4.4-2-5.2-5.9-4.4\n                        c-2.7,0.6-5.9,1.6-8.9-1c-1.9-1.7-2.5,1.1-2.9,2.6c-0.5,1.7,0.3,3.6-1.4,5c-0.7,0.6-1.2,1.9-2.3,1.4c-1.4-0.6-0.5-1.6,0-2.4\n                        c0.7-1.1-0.3-1.4-1-1.8c-0.9-0.5-1.1,0.1-1.7,0.8c-3.5,3.8-4.8,3.6-7.1-0.4c-1.3-2.3-2.9,0.6-4.3,0c-0.3-1.1,1.2-2.1,0.2-3.5\n                        c-2.4,1.7-4.9,3-8,3.6c-0.1-1.8-0.1-3.6-0.3-5.4c-0.2-1.8-1.7-2.6-3.2-2.5c-2.4,0.3-0.4,1.5-0.3,2.4c0,0.3-0.3,0.9-0.7,1.1\n                        c-0.8,0.3-2.3,0-2.1-0.4c1.7-3.9-5.8-1.6-3.6-5.5c0.3-0.5,1.5-0.9,1.4-1.3c-0.4-2.6,4.4-1.8,3.1-4.8c-2.6,1.2-6.2-2.6-8.1,1.6\n                        c-0.8,1.7-2.4,1.8-3.2,0.8c-1.7-2-6.4,0.3-5.9-4.5c-2.3,1.5-1.7,3.5-1.3,5.4c-1.1,4.2,3.6,1.8,4.5,3.8c-7.6,0.9-9-0.3-6.9-6.7\n                        c-2.6,1-7.1-1.3-5.6,4.5c-1.8,0.3-3.3,1-4,3.2c-0.4-3.4-1.1-6.2-4.2-7.8c-3.1-1.6-11.9-0.5-14.3,2.8c-1.1,1.5-1.7,1.8-2.9,0.8\n                        c-1.4-1.1-2.5-1.2-3.9-0.1c-0.4,0.3-1.8,0.1-1.8,0c-0.8-5.8-6.5-3.9-9.6-6C692.1,381.3,690.2,384.5,688,385\n                        c-0.7-0.8-1.6-1.3-2.7-1.4C686.4,383.8,687.3,384.2,688,385z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M523,422c1.3-2.5,4.5-3.4,5.2-6.4c0-0.2,0.2-0.3,0.2-0.4c0.6-3.7,0-8.4,6.2-7.4c0.1,0,0.2-0.2,0.3-0.3\n                        c2.6-3.1,4.8-4.2,9.8-4.8c1.8-0.2,4-2.6,4-4.5c0-1,0.5-1.1,1.1-1.1c3.7-0.4,4.9-5.4,9.2-4.8c0.2,0,0.6-1.4,0.9-2.1\n                        c0.2-2.3,2.2-2.2,3.7-2.4c11.9-1.2,23.8-1.7,35.7-3c2.5-0.3,5.4-0.7,7.6,1.4c-0.8,1.2-2.1,1.9-3.4,1.9c-3.7,0.1-7.2,0.2-7.1,5\n                        c-2.1-0.1-1.8-0.9-1.6-1.7c0.1-1.2-0.3-1.9-1.6-2c-1.5-0.1-2,0.4-1.7,2.1c0.3,2-2,2.3-3,3.5c-1.1-1.2-4.2,1.6-4.3-2\n                        c0-0.7-0.7-1.5-1.7-1.4c-1,0.1-1.3,0.8-1.4,1.7c-0.1,1.1,0.3,2.7-1.3,2.8c-2.5,0.1-0.3-1.7-0.7-2.3c-0.3-0.4-1.5-0.4-2.3-0.4\n                        c-1.3,0.1-1.7,0.9-1.5,2c0.3,2.1,0,4.3,1.2,6.5c-2.8-1.3-6,1.9-8.7-1.5c-1.3-1.6-3.6,1.6-6.2-0.3c-3-2.1-2,2.7-3.5,3.6\n                        c-3.3,2.1-6.1,4.5-6.9,8.6c-2.1,0.1-3.9,2.9-6.2,0.5c0.3,3-5.2,4.8-1.8,8.5c0,3-0.3,5.9,1.1,9c-2.5,0.3-3.7-0.4-4-2.6\n                        c-0.1-1,1-2.7-1.3-2.1c-1.6,0.4-2,1.6-0.9,3.1c2,2.7,0,4.8-1,7c-0.4,0.9-2.4,1.1-1.6,2.6c0.6,1.1,2.3-0.7,3.6,1.5\n                        c-3.8,0.6-7.5,5-9.7,3.8c-2.6-1.4-7.3-0.7-8.3-5c-0.1-0.2-1.2-0.2-1.9-0.2c0.8-3.2,2.9-3.9,6.1-3c-0.4-1.9-1.1-3.7-0.8-5.6\n                        c-2.9,2.3-4,5.5-5.3,8.6c1.8,3.5-1.1,3.3-2.9,3.3c-1.3,0-2.6-1.3-4.1-0.3c5.1-4.1,6.1-10.3,8.4-15.8\n                        C521,423.9,520.9,422,523,422l0,0.3l0.3-0.2L523,422z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721524"),
                d:
                  "M607,386c-15.1,1-30.2,2-45.3,3.1c-0.6,0-1.1,0.6-1.7,0.9c-1,0-2,0-3,0c-2.1-1-5.9,2-6.3-2.8\n                        c3.4-3.7,8.5-2.6,12.5-4.5c2.8-0.5,5.3-2.4,8.3-2.2c1.9,0.7,3.8,0.8,5.9,0.5c9.2-1.3,18.5-2.2,27.8-2c3.2,1,6.5,0.7,9.8,0.5\n                        c5.1-0.3,9.6,1.5,14.1,3.4c-4.3,1.6-8.9,1.4-13.3,1.9c-2.6,0.3-5.2,0.4-7.7,1.1C607.7,385.4,607.3,385.4,607,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M551,423c-2.2-0.9-1-4.4-4.1-5.1c-1.4-0.3-0.3-2.3,1.1-2.7c1.7-0.5,3-1.2,3.1-3.2c4,0.9,0.5,3.4,1,5\n                        c-0.4,0.6-3.2-0.5-1.3,1.1C553,420.1,551.3,421.4,551,423L551,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M547.9,422.8c0,1.3-0.4,2-1.7,2.1c-2.9,0.2-0.3-4.2-3.2-3.9c0.6-0.3,1.1-0.8,1.7-0.9\n                        C546.6,419.9,547.8,420.9,547.9,422.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M554.8,420.9c-0.3-1.7-2.7-2.4-1.7-4c0.5-0.8,0.5-3,2.4-2.4c1.1,0.3,1.6,1.4,0.6,2.3\n                        C554.9,417.9,556.7,419.4,554.8,420.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M555.4,408.9c1.1-2.1,2.3-3.1,4.5-3.1C559,407.7,558.1,408.9,555.4,408.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M572.5,404.9c-0.7-0.2-1-0.5-0.7-1c0.2-0.3,0.8-0.6,1.1-0.5c0.2,0,0.4,0.6,0.6,1\n                        C573.2,404.6,572.8,404.8,572.5,404.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M578.7,399.7c-0.3-0.2-0.7-0.4-0.9-0.7c-0.3-0.6,0.2-0.9,0.7-0.8c0.4,0,0.9,0.3,1.1,0.6\n                        C579.8,399.3,579.4,399.6,578.7,399.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M551,423c0.8-0.2,1.5-0.3,2.3-0.5c0.1,0.3,0.3,0.8,0.2,0.9C552.5,424.3,551.7,423.9,551,423L551,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601226"),
                d:
                  "M198,337c-4.7,2.7-9.3,5.3-14,8c-1.3-1.6-3.7-0.3-5-1.7c-0.3-0.6-0.4-1.2-0.3-1.8\n                        c0.4-1.8,0.2-3.7-0.7-4.4c0.8-1.5,1.2-3.3,2.9-4.1c2.6,0.4,2.5-2.1,3.5-3.4c2.5-3.2,5-6.1,9.7-4.3c1.2,0.4,2.5,0.7,3.8,1\n                        c1.2,0.4,2.2-0.5,3.3-0.7c-1-0.1-2.1,0.2-2.5-1.2c3.2-3.3,5.7-3.2,8.2,0.6c0.9,4.4-2.7,4.8-5.3,5.4c-3,0.7-6,1.5-8.6,3.1\n                        c-0.8,0,0,1-0.2,0.4C195.7,333.1,197.4,334.1,198,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1A2C"),
                d:
                  "M206,325c-2-2.9-4.5-2.1-7-1c-1.2,1.7-3,2.1-5,2c-5.4-1-8,2.1-9.7,6.5c-1,2.5-1.2,2.6-3.4,0.4\n                        c0.1-2.8,3.1-3.7,4-5.9c2.9-5.1,8.1-6,13.2-7.1c2.3-0.1,4.5,1.6,6.8,0.2c0.7,0,1.3,0,2,0c6.4-3.2,13.3-1.8,20.1-1.9\n                        c2.5,0.5,1.8,1.3,0.2,2.3c-3.8,2.2-7.5,4.5-11.2,6.7C212.3,328.1,208.9,327.9,206,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("541522"),
                d:
                  "M178,337c1.8,2.1,2.4-2,4.3-0.4c-1.1,2-2.2,4.2-3.3,6.4c-0.5,2.3-2.4,3.8-3,6c-1.9,2.2-4.5,2.9-7,4\n                        c-0.9-0.1-1.8-0.5-1.2-1.5C171.2,346.7,173.8,341.3,178,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B1117"),
                d:
                  "M198,321c-4.8,1-9.1,3.1-13,6c0.5-2.7-1.6-3.1-5-3.4c4.6-3,8.7-2.9,12.1-4.5c1,0.8,2.1,0.4,3.3,0.3\n                        C196.6,319.2,198,319,198,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("49161E"),
                d:
                  "M198,321c-1.5-2.1-4.5,0.1-6-2c0.3,0,0.7,0,1,0c4.3-2.6,8,1.1,12,1C202.9,321.8,200.3,320.7,198,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D5B60"),
                d:
                  "M219.8,314.9c-7.6-0.5-15.1,1.3-22.7,1.2c-3,0-5.9,0-9.5,0c3.2-3.7,7.1-3.8,10.8-4.1\n                        c3-0.2,5.9-0.5,8.5-2c2,1,4-0.6,6,0c0.3,0.3,0.6,0.6,0.9,1c1.2,2.8,4.5,1.1,6.2,2.8C220.3,314.3,220.3,314.6,219.8,314.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82484F"),
                d:
                  "M236,308c4.4,0.5,8.9,0.7,13.2,2c-1,1.3-2.4,1.3-3.8,1.4c-2.8,0.3-5.6,0.5-8.4,0.1\n                        c-4.6-0.7-9.6,1.4-14-1.4c0-0.7-2.5-1.9,0.3-1.9C227.5,307.9,231.8,308,236,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("854A50"),
                d:
                  "M223,310c5,0,10.1,0,15.1,0.1c-1.2,3.3-4.2,2-6.4,2.4c-4.3,0.1-8.7,0.1-13,0.1c-2,0-4,0-5.7-1.5\n                        c0-0.3,0-0.7,0-1C216.3,310,219.6,310,223,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("49161E"),
                d:
                  "M219.8,314.9c0.1-0.2,0.2-0.5,0.3-0.7c2.2-2.3,5-1.5,7.6-1.2c2.6,0.9,5.3,0.5,7.9,0.7\n                        c1.9,0.1,4.2-0.3,4.7,2.5c-0.1,0.3-0.3,0.5-0.4,0.8c-4.3-1.3-8.6,0.5-12.9,0.2c-0.1,0-0.2,0.2-0.2,0.4c0,0.2,0.1,0.3,0.2,0.5\n                        c-6.6,1.8-13.4,0.8-20.1,1.9c-0.9-0.6-1.7-1.3-3.1-2.3c7.3-1.9,14.5,0.5,21.8-2.4C223.3,315.1,221.5,315,219.8,314.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("854A50"),
                d:
                  "M244.7,310.2c1.5-0.1,3-0.2,4.5-0.3c0.8,0.5,1.6,0.9,2.4,1.4c0.1-0.8,0.3-1.5,0.4-2.3\n                        c0.3,0,0.5,0.1,0.8,0.1c1.4,0.8,1.4,2.3,1.7,3.6c0,0.5,0,0.9-0.1,1.4c-0.7,1.3-1.6,2.2-3.2,2.1c-1.4-0.6-1.6-2.4-3-3\n                        c-0.8-0.3-1.6-0.5-2.3-0.9C245.1,311.9,244.6,311.2,244.7,310.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("551022"),
                d:
                  "M206,325c3.3,0.7,6.7,1.3,10,2c-5.7,3.8-11.7,7.2-18,10c-1.7-2.6-4.3-2.5-8.4-1.3\n                        c3.7-3.6,6-5.8,10.2-6.1C202,329.3,206.7,330.2,206,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F3236"),
                d:
                  "M220,333c-3.8-1.3-5.7,2.9-9,3c2.6-5.1,8.6-4.8,12.4-8.1c2.6-2.3,5.7-4,8.6-5.9c1.7,0.1,3.3-0.6,5-1\n                        c1-0.3,2-0.7,3-1c0.7-1.5,1.5-2.7,3.4-2.3c1.8,1.6,0.3,2.9-0.8,3.6c-6.4,4.1-12.5,8.6-19.3,11.9C222.2,333.6,221,334,220,333z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681E30"),
                d:
                  "M176,349c-1.5-3.2,1.1-4.5,3-6c1.8,0.4,4.3-1.2,5,2C180.9,345.4,179.1,348.6,176,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("49161E"),
                d:
                  "M243,318c-1,0.7-2,1.3-3,2c-2.3-1-2.1-2,0-3l0,0c0.6-1.8,3.4-2.2,2.8-4.7c0.8-1.2,1.9-1,3-0.5\n                        c1,0.1,2,0.2,3,0.3c0.8,0.4,0.7,1.1,0.6,1.8C247.9,316.4,245.6,317.3,243,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("49161E"),
                d:
                  "M237,321c-1.5,1.1-2.9,3.1-5,1C233.4,320.3,235,319.7,237,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631228"),
                d:
                  "M203.9,345.1c3.9-2.8,8.9-4.1,12.1-8.1c0.4-0.8,1.2-1,2-1c4.8-2.8,9.2-6.4,14.8-7.8\n                        c2.2,0.5,1.5,5.2,5.6,3.6c1.1-0.4,0.6,1.9-0.1,2.6c-2,2.1-4.5,3.3-7.5,3.5c0.4,1.4,3.3,2.7,0.9,4.2c-3,1.9-4.7-1.2-6.6-2.5\n                        c1.8,2.9,5.8,3.3,7.8,6.6c1,1.8,3.2,1.6,5,0.8c1.4-0.6,2.8-1,4.2-1.5c3.7-1.1,5.8-0.1,5.4,4.1c-0.1,0.8-0.6,1.3-1.2,1.8\n                        c-0.8,0.6-1.7,1-2.7,1.3c-4.4,0.4-8.6,2.2-12.9,3c-6.2,0.6-11.9,3-17.5,5.4c-2.4-2.6-4-5.7-5.5-8.9\n                        C206.2,350,203.8,348.2,203.9,345.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("571E27"),
                d:
                  "M233,329c-4,0.3-6.8,3.2-10.1,4.8c-1.6,0.8-3,2.1-4.9,2.2c0.7-1,1.4-2,2-3c8.5-3,15.2-8.9,22.8-13.4\n                        c0.6-0.3,0.9-1,0.2-1.6c2-1.3,4-2.7,6-4c1.8,2.1,0.3,3.7-1,5.2c-1.2,1.4-2.8,2.3-4.3,3.3C240.3,325,236.5,326.8,233,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983652"),
                d:
                  "M207.9,352c1.7,3,3.4,5.9,5.2,8.9c3,1.9,5.2,4.3,3.9,8.2c-3.2-2.8-4.3-7-7-10.2\n                        c-1.1-2.3-2.2-4.6-3.3-6.9C207.1,351.7,207.5,351.6,207.9,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("904758"),
                d:
                  "M207.9,352c-0.4,0-0.8,0-1.2,0.1c-1.2-2.2-4.8-3.4-2.9-6.9C205.2,347.4,206.6,349.7,207.9,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D122A"),
                d:
                  "M177,369c1.5,1.5,0.3,1.8-0.9,2.1c-1.3,0.4-2.8,1.5-3.1-1.1C174.2,369.3,175.5,368.8,177,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1894,620c0,0.8,0.2,1.6,1,2c-0.6,0.9-1.3,2.6-2.4,1.2C1891.7,622.2,1893,620.9,1894,620z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73A47"),
                d:
                  "M1864.5,591.9c0.5,0.4,1,0.7,1,1c0.1,0.9-0.6,0.9-1.2,0.7c-0.4-0.1-0.9-0.4-1.3-0.6\n                        C1863.5,592.6,1863.9,592.3,1864.5,591.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D313A"),
                d:
                  "M1942,543c0-0.7,0-1.3,0-2c2.3-1.2,4.4,0.3,6.5,0.6c2.9,0.6,5.7,1.7,8.6,2.6c5.5,1.8,5.8,2.7,2.5,7.5\n                        c-0.3,0.4-0.6,0.7-1,1c-2.6,2-3.9,5.6-7.6,6.3c0.1-1.3-0.2-2.6,0.9-3.7c4.4-4.6,4.5-5.2-1.2-7.4c-3.1-1.2-6.1-3-9.7-2.9\n                        C1941.3,544.3,1941.7,543.7,1942,543z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1939,585c-1-4.9,4.4-6.3,5.8-10.1c1.3-3.4,2.3-4.3-0.8-6c1.3-3.8,5-5.7,7-8.9\n                        c1.5-0.3,2.7,2.8,3.9,0.7c1.2-2.2,3.6-4,3.3-6.9c0-0.6-0.5-1.2-0.2-1.8l0,0c2.7-1.9,5.4-0.8,8.1,0.1c0.4,0.2,0.8,0.6,1.1,1\n                        c-0.5,3.5-3.3,5.6-5.3,8.1c-4.6,5.6-9.3,11.1-14.2,16.4C1944.5,579.8,1943.6,584.6,1939,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D46"),
                d:
                  "M1958,552c2.1,2,4.6,3.9-0.3,5.5c-1,0.4-0.4,1.9-0.8,2.7c-0.9,1.9-2.8,2.9-4.6,3\n                        c-2.6,0.1,1-2.8-1.3-3.2c0-0.3,0-0.7,0-1C1953.3,556.7,1955.7,554.3,1958,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D2436"),
                d:
                  "M1939.1,618.8c0.3,0.7,0.6,1.5,0.9,2.2c-5.6,0.1-10.9-0.7-15-4.9c-0.3-1.4-0.7-2.8-1-4.1\n                        c3.8,0.4,6.1,4.4,10.2,3.9C1936.1,616.4,1938.4,616.3,1939.1,618.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1926.9,624.2c0,1-0.8,2-1.3,1.6c-0.9-0.8-0.9-2.6-2.6-2.8c0.4-0.3,0.7-0.8,1.1-0.8\n                        C1925.7,622,1926.5,622.8,1926.9,624.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E5F60"),
                d:
                  "M1939,585c3.4-1.9,4.6-6.1,8-8c0.4,0.3,0.6,0.8,0.7,1.2c0.2,2.3-1.5,3.5-2.8,5.1\n                        c-6.7,8.2-13.7,16.3-18.7,25.8c-2.6,0.5-1.1-2.2-2.1-2.9c0.3-1,0.6-2.1,0.9-3.1l0,0c0.6-0.7,1.3-1.4,1.9-2.1\n                        c1.3-3.6,2.5-7.2,6.3-9.1c1.2-0.6,1.1-2,1.8-2.9l0,0c0.9-1.4,2-2.7,3.1-4C1938.4,585.1,1938.7,585,1939,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1935,589c0.2,2.1-0.8,3.4-2.5,4.5c-2.8,1.8-3.3,5.3-5.5,7.5c0-3.6,0.8-6.8,4-8.9\n                        C1932.7,591.5,1933.8,590.1,1935,589z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1938.1,585.1c-0.2,1.9-1.4,3.1-3.1,4C1935.1,587,1936.3,585.8,1938.1,585.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("88373B"),
                d:
                  "M1924.1,606.2c0.6,0.9,1.2,1.9,1.8,2.8c2.6,2.8,6.7,4.1,8.3,7.9c-4.5,0.5-7.3-2.3-10.2-5\n                        C1924,610,1924.1,608.1,1924.1,606.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE3750"),
                d:
                  "M1925,603.1c-1.1-0.3-2.6,0.6-3.4-0.9c-0.1-0.2,0.4-0.8,0.7-0.9C1923.9,600.8,1924.9,601.4,1925,603.1\n                        L1925,603.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85662"),
                d:
                  "M654,142c0.3-1,0.7-2,1-3c3.9,0,7.9-1.8,11.3-2c5.1-0.3,9.5-4,15-2.4c2.5,0.8,6.1-0.2,8.5-1.6\n                        c4.3-2.6,8.7-2.4,13.2-2c2.9,0.6,5.7,0.8,8.7,0.3c1.7-0.3,3.8-1.1,4.3,1.7c-3.1,2.9-7.2,1.4-10.8,2.2\n                        c-0.8,0.2-1.6-0.3-2.3,0.4c0.5,0.2,1.2,0.1,1.3,0.9c-0.6,1.5-1.9,1.5-3.2,1.6c-0.5,0-1.1-0.1-1.6-0.2\n                        c-9.4-0.3-18.7,0.8-27.9,2.8C665.8,141.9,659.9,142.9,654,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4A54"),
                d:
                  "M629,139.1c0.6,0.1,1.4,0,1.4,0.9c0,0.9-0.8,0.9-1.4,0.9c-0.6,0-1.4,0-1.4-0.9\n                        C627.5,139.1,628.3,139.1,629,139.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA5359"),
                d:
                  "M1993,356c0,1,0,1.9,0,2.9c-4.7,0.5-8.6-2-12.9-3.1c-2.9-1.5-5.9-2.8-8.9-4.2c-1.4-1.1-3-2.1-4.3-3.4\n                        c-0.2-0.4-0.2-0.9,0.1-1.3c4-2.4,6.7,1.3,9.6,2.6C1982,352.1,1987.7,353.6,1993,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A65157"),
                d:
                  "M1945,339c1.3,0,2.7,0,4,0c4.5,1,9.3,1.4,12,6c-0.1,0.2-0.2,0.4-0.3,0.6c-2,2-3.7,0.4-5.3-0.6\n                        c-2.4-1.5-4.9-2.9-7.8-2.8c-0.7-0.1-1.4-0.3-2.1-0.6C1944.6,340.9,1944.2,340.1,1945,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A65157"),
                d:
                  "M1967,347c0,0.3,0,0.7,0,1c-2.2,1.9-5.3,0.4-6-3c0,0,0,0,0,0C1964.2,343.3,1966,343.9,1967,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B45960"),
                d:
                  "M1945,339c0,0.8,0.2,1.6,1,2c-2,1.8-2.8,1.5-6-2c1,0,2,0,3,0C1943.7,339,1944.3,339,1945,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1A26"),
                d:
                  "M1999,386c-4.7-3.9-9.8-6.7-17.3-6.8c2.2,2.6,4.5,1,5.9,2.9c-1.5,1.4-3.2,0.7-4.7,0.9\n                        c-3,0.1-5.9,0-8.5-1.5c-0.2-1.5,3.2-0.5,1.6-1.9c-1.1-0.9-2.4-2-3.9-2.7c-1.7-0.7-3.9-1.4-2.8-3.7c0.8-1.9,2.6-2.9,4.9-1.3\n                        c0.4,0.3,4.6,2.7,2.8-1.9c2-1.7,3.7-0.2,5.5,0.4c5.3,1.7,10,5,15.6,6.2c2.1,0.5,3.9,0.4,5.4-1.2c1.7-1.9,0.6-3.6-0.3-5.4\n                        c-0.8-1.7-3.1-3.8,0.8-4.8c5.4,1.8,10.9,3.4,16,6c0.2,2,0.3,4.1-1,5.9C2012.3,380,2005.7,383,1999,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("832730"),
                d:
                  "M2019,377c0-2-1-4.2,1-5.9c2.3,0.4,4.3,1.4,6.2,2.7C2024.1,375.5,2021.7,376.6,2019,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C05E67"),
                d:
                  "M1980,355c4.5,0.7,8.9,2.1,13,3.9c2.3,1,4.7,2,7,3c-0.3,0.3-0.7,0.6-1,1c-0.8,0.9-1.8,0.9-2.7,0.5\n                        c-5.5-2.3-11.8-3-16.7-6.9C1979.5,355.9,1979.7,355.4,1980,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1721"),
                d:
                  "M1980,356c6.3,2.3,12.7,4.6,19,6.9c1.6,0.7,3.3,1.5,4.9,2.2c-2.8,2-0.1,3.5,0.7,4.8\n                        c1.2,2,2.4,4.1,0.4,5.8c-1.8,1.6-3.1,3.5-7.1,2.3c-7.2-2.2-13.4-7-21-8c-5.3-1.2-9.6-5.1-15-6c-3.6,0.3-6.5-1.3-9.1-3.7\n                        c0.5-4.6,3.8-3.4,6.5-2.8c0.9,0.2,1.6,1,2.7,0.8c0.7-0.1,1.4,0,2,0.2c1.7-0.1,1.9,3.2,3.2,2c1.5-1.2,5.4-1.6,3.3-5.4\n                        c-0.5-0.9,0.7-1.7,1.7-2C1975.2,353.3,1977.8,354.2,1980,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA6D77"),
                d:
                  "M1375,294c-0.7,0-1.3,0-2,0c-0.3,0.5-0.7,0.5-1,0l0,0c0-0.9,0-1.9,0-3.5\n                        C1373.6,291.6,1374.9,292.2,1375,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15A5B"),
                d:
                  "M1280.8,245.1c7.6,6.1,16.5,10.2,24.4,15.9c1.9,1.3,3.9,2.5,5.8,3.7c0.7,0.4,1.3,0.7,2,1.1\n                        c7.2,5.2,15.3,9.2,22.1,15c-0.2,0.8-0.7,1.3-1.4,1.6c-2.1,0.5-3.4-1.1-4.8-2.1c-8.8-6.2-17.7-12.1-26.9-17.6\n                        c-1.2-0.8-2.3-1.6-3.5-2.3c-8.9-5.8-17.9-11.4-26.8-17.1c-1.8-1.1-4.6-1.5-4.7-4.5c0.4-0.3,0.9-0.3,1.3,0\n                        C1273.1,239.6,1276,244.2,1280.8,245.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924449"),
                d:
                  "M1333.9,282.1c0.4-0.4,0.8-0.8,1.2-1.2c3.8,1.3,6.5,4.4,10,6.1c4.3,3.8,9.8,5.9,13.9,10\n                        c-2.7,0.2-1.7,2.4-2,3.8c-3.1,0.1-4-2.9-5.9-4.4c-4.4-3.6-9.5-6.4-13.7-10.4c-0.8-1.3-2-2.4-3.2-3.4\n                        C1334.1,282.5,1334,282.3,1333.9,282.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB646C"),
                d:
                  "M1372,294c0.3,0,0.7,0,1,0c1.6,2.8,1.6,5.9,2,9c-1.1,0.7-0.1,1.3,0,2c-0.4,1.3,0.9,3-1,4\n                        c0,0.3,0,0.7,0,1c-4.4-0.6-6.8-3.7-8.9-7.2c-0.1-0.3-0.1-0.6-0.1-0.8C1365.4,297.7,1370.6,297.5,1372,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24E5C"),
                d:
                  "M1356,305.2c2.3-0.1,4.7-0.2,7-0.2c2.2-0.3,3.5,0.9,4.5,2.7c0.1,1.8,0.5,3.6-0.3,5.4\n                        c-0.4,0.3-0.8,0.4-1.3,0.3c-1.2-0.4-2.1-1.2-3.2-1.7c-6.5-1.2-12.9,0.9-19.3,0.5c-4.1-0.3-8.3,0-12.3,1.3\n                        c-3.1,1-5.7-1.2-8.8-1.1c-6,0.2-12,0.3-18,0.2c-3.1,0-6.3,0.4-9.3-1.2c-0.4-0.5-0.3-1,0-1.5c2.4-1.8,5.4-0.7,8-1.8\n                        c1.4-0.3,2.8-0.4,4.2-0.4c4.9-0.2,9.8,0.6,14.6-0.6c6.9-0.9,13.8-1.2,20.7-1.9c1.7-0.4,3.4-0.4,5.1-0.4\n                        C1350.6,304.1,1353.3,305.7,1356,305.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0ECEC"),
                d:
                  "M1337.9,285.2c6.4,5.2,13.8,9.1,19.1,15.6c0.5,2.5-1.4,3-3.1,3.5c-1.6,2-3.9,0.9-5.9,1.2\n                        c-1.5,0-3,0-4.5,0c-1.7-2.2,0.6-2.5,1.6-3c1.9-1,4.1-1.2,6.1-1.6c-8.6-8.4-18.2-15.5-27.9-22.5c-5.9-4.3-12.4-7.7-18.2-12.1\n                        c-1.4-1.1-3.8-1.7-3-4.4c9.8,5.3,18.9,11.7,28,18.1c1.2,0.8,2.5,1.5,3.8,2.3l0,0C1335.4,282.9,1336.7,284,1337.9,285.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681618"),
                d:
                  "M1367,307.9c-1.3-1-2.7-2-4-3c0-0.3-0.1-0.6-0.1-0.9c0.9-0.1,1.7-0.3,2.2-1.2c3,2.4,5.9,4.8,8.9,7.2\n                        c0.6,1.3,1.6,2.3,2.9,3c5,2.4,6.7,6.9,7.9,11.8c0.2,0.7,0.3,1.5,0.2,2.2c-0.1,0.8-0.4,1.5-1,1.9c-1.8,2.2-0.4,4.8-1.1,7.2\n                        c-2.4-0.7-2-2.8-2.2-4.5c-0.2-2.1,0.2-4.3-0.5-6.4c-0.1-0.5-0.2-0.9-0.3-1.4c-1.3-4.8-5-7.8-8.3-11.1\n                        C1370.2,311,1367.9,310.1,1367,307.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3F4C"),
                d:
                  "M1347.9,305.1c2-0.3,4-0.5,5.9-0.8c0.7,0.3,1.5,0.6,2.2,0.9c-2.6,1.6-5.4,0.6-8.1,0.8\n                        c-0.3-0.2-0.4-0.4-0.3-0.5C1347.7,305.2,1347.8,305.1,1347.9,305.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE868C"),
                d:
                  "M299,306c8.8-0.4,17.5-1.4,26.3-1.1c1,0,2-0.1,2.7-0.9c24.2,0.2,48.3-2.7,72.5-2.3\n                        c5.7,0.1,11.5-0.6,17.3-0.6c2.1,1.6,3.3,3.6,1.8,6.3c-6.5,1-13,2-19.5,0.1c-1.3-0.9-2.8-1-4.3-1c-15.3-0.2-30.5,0.3-45.8,0\n                        c-1,0-2,0.2-2.9,0.6c-3.9,0.7-7.9,0.3-11.8,0.4c-2.9,0-5.8-0.2-8.7,0.7c-7.4-0.2-14.7,0.7-22,0.4c-1.8-0.1-3.6,0-5.3-0.9\n                        C298.8,307.2,298.7,306.7,299,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1D20"),
                d:
                  "M419.5,306.9c-0.6-2-1.1-3.9-1.7-5.9c0.1-1,0.2-2,0.3-3c1.2-1.9,1.8-3.9,1.9-6.1\n                        c1.9-2.8,3.6-5.6,3.9-9.1c-0.1-1.4,0.5-2.7,1.2-3.9c-0.4-2.2,0.3-4.3,0.6-6.4c0.1-0.7,0.2-1.5,0.4-2.2c0.7-2,0.6-4.1,0.9-6.2\n                        c1.6-9.6,2.9-19.2,4.7-28.8c0.4-2.2,0.1-5.1,3.5-5.5c1.7,2.4,1.2,5.1,0.8,7.7c-1.9,8.5-2.6,17.1-4,25.7\n                        c-0.7,2-0.7,4.1-1.1,6.1c-0.5,1.6-0.7,3.4-0.9,5.1c-0.1,0.5-0.2,0.9-0.3,1.4c-0.5,1.3-0.7,2.7-1.1,4.1c-0.9,2.7-2.1,5.2-3,7.9\n                        c-1.3,2.7-2.3,5.5-3.3,8.2c-0.2,1-0.4,2.1-0.6,3.1c-0.1,0.6-0.3,1.1-0.4,1.7c-0.1,1,0.2,1.9,0.5,2.8c0.3,0.8,0.5,1.6,0.6,2.4\n                        c0,0.5,0,0.9-0.1,1.3c-0.7,1-0.5,3.1-2.7,2.1C419.1,308.8,419.1,307.9,419.5,306.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3424E"),
                d: "M375,297c2.7-1.5,5.3-1.5,8,0C380.3,297,377.7,297,375,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8828B"),
                d:
                  "M253.9,312.9c-1.3-1-0.6-2.6-1.1-3.8c4.2-1.9,8.8-0.9,13.1-1.2c0,0.3,0.1,0.5,0.1,0.8\n                        c-1.9,2.2-4,1.4-6.1,0.6c5.1,2.5,10.8,0.6,16,1.9c0.5,0.2,0.9,0.6,1.2,1.1c0,0.6-0.2,1.1-0.8,1.4\n                        C268.9,314.7,261.4,315.6,253.9,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8828B"),
                d:
                  "M299,306c0,0.3,0,0.6,0,1c-1.4,1.4-3.2,1.3-4.9,1.4c-3.7,0-7.4-0.5-11.1,0.6c-1.5,0.3-2.9,0.5-4.4,0.4\n                        c-4.2-0.5-8.6,1.4-12.5-1.4c0,0-0.1-0.1-0.1-0.1c0.7-0.3,1.5-0.9,2.2-0.9C278.5,307.4,288.7,305.3,299,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B192C"),
                d:
                  "M1971,631c-1.3,3.5-2.7,0.7-4,0C1968.3,631,1969.7,631,1971,631z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FFFFFF"),
                d:
                  "M1934.3,616.9c-2.6-2.8-7.6-3.1-8.3-7.9c0.2-3.5,2.1-6.2,4.1-8.8c5.7-7.3,11.4-14.5,17.1-21.8\n                        c5.7-7.6,12.4-14.3,18.3-21.8c1-1.3,2.1-2.6,2.9-4c3-3.3,6.5-6.3,8.8-10.3c1.6-1.9,2.7-4.6,5.9-4.4c5.4-3.7,10.7-7.3,16.1-11\n                        c3.7-2.6,7.7-1.1,11.6-0.8c3.9,0.7,7.9,1.2,11.8,1.9c5.2,1,8.6,3.9,10.4,8.9c2,5.5,2.8,11.6,8.4,15.3c2.3,1.6,0.7,3.8-0.7,5.6\n                        c-2.9,3.4-5.9,6.7-7.1,11.2c-0.4,1.7-1,3.4-1.5,5c-3.8,8.1-6.1,16.7-9.9,24.7c-1.7,3.2-3.2,6.6-4.8,9.8\n                        c-1.1,2.3-2.6,4.2-5,5.3c-4.6,3.6-9.9,5-15.7,5.3c-5.1,0.2-10.2,1.2-15.3,1.9c-9.7,0.7-19.3,0.6-29,0c-4.3-0.8-8.6-1.6-13-2.4\n                        C1937.6,617.8,1936,617.2,1934.3,616.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781C21"),
                d:
                  "M1952,621.1c9.7,0,19.3,0,29,0c0,0.3,0,0.6,0,0.9c-8.2,0-16.5,0-24.7,0\n                        C1954.8,622,1953.3,622.4,1952,621.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3543"),
                d:
                  "M894.1,627.7c-2.2-0.4-1.9-2.1-2.1-3.7c-0.1-9.5,1.7-18.8,2.6-28.2c0.2-1.9-0.3-4.1,2.1-5.1\n                        c0.9,0.4,1.4,1.1,1.8,2c2.3,6.4,4.6,12.6,4.2,19.7c-0.4,6.5,0.3,7,7.1,7.1c29.6,0.2,59.2,0,88.8,0.1c2.6,0,5.3-0.4,7.9,0.7\n                        c2.8,3.3,6.8,4.6,11.4,5.9c-2.5,1.9-4.4,1.3-6.1,1.3c-37.4,0-74.7,0-112.1,0C897.8,627.5,895.9,627.3,894.1,627.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M783,627c-1.1-2.7-4.6-1.7-6-4c2.9-2.6,6.3-0.7,9.5-1c2-0.2,4,0,5.9,0c-2.5-0.1-4.9,0.2-7.3-0.1\n                        c-2.2-0.3-3.4-1.3-1.6-3.6c5.5-1.7,11.1-0.7,16.7-0.8c4.8-0.1,9.5-0.2,14.3,0.1c4.5,0.2,9.1,0,13.6,0.1c0.9,0,1.7,0,2.6,0\n                        c1.1,0,2.3,0,3.4,0c1.7,0,3.3,0,5-0.1c11.6,0,23.2,0,34.8,0c1.3,0,2.7,0,4,0.1c1.9,0.3,3.7,0.7,3.8,3.1\n                        c0.1,2.7-1.7,2.8-3.7,2.6c-0.8,0-1.6,0.3-3.3,0.8c1.7-0.4,2.5-0.8,3.1-0.6c4,0.9,6.4-0.6,7.4-4.5c0.3-1.1,1.1-2,2.3-2.5\n                        c1.8-0.1,2.5,1.1,3.1,2.5c-0.1,2,0.3,4-0.8,5.8c-1.1,2-3,2.2-5.1,2.2C850.8,627.1,816.9,627,783,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3440"),
                d:
                  "M894.1,627.7c1.6-1.3,3.5-0.7,5.3-0.7c30.8,0,61.6,0,92.4,0c8,0,16,0,24.1,0c0-0.3,0-0.5,0-0.8\n                        c-2.6,0-5.2,0-7.3,0c-1.4-0.9,3.8-4.2-1.7-2.8c-1.1,0.3-1.2-0.2,0.1-2.3c1.6-1.7,3.6-1.3,5.6-1.4c5.6-0.3,11.1,1,16.6,0.4\n                        c2.1,0.6,4.1,1.2,6,2.4c2.3,2.9,5.3,3.8,8.9,3.3c3.8-0.1,7.6-0.2,11.4,0c6,0,12,0,17.9,0c2,0,4-0.3,5.6,1.4c0,0.3,0,0.7,0,1\n                        c-43.6,0-87.3,0-130.9-0.1C930.1,627.9,912.1,627.8,894.1,627.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("531217"),
                d:
                  "M889.8,624.9c0.1-2,0.1-3.9,0.2-5.9c-0.7-7.5,1.9-14.7,2.1-22.1c0-1.4,0.4-2.9,0.4-4.4\n                        c0-1.3,0-2.6,0-4c0-1.5-0.4-3-0.5-4.6c0.2-1,0.3-2,1.7-2c1.2,0.6,1.3,1.7,1.5,2.9c0.2,0.6,1-0.4,0.5,0c-1.2-2.3-1.6-4.6,0-7\n                        c2.9,0.5,3,3.7,4.9,5.4c1.1,0.9-1.5,1.6-2,2.7c-0.6,1-0.6,2.1-0.8,3.2c-0.2,0.7-0.5,1.3-1.1,1.7c-2,7.4-1.5,15.1-2.9,22.5\n                        c-0.7,3.5-0.4,7.2-2,10.6c-0.1-0.7-0.2-1.5-0.3-2.5C890.6,622.7,891.4,624.5,889.8,624.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93C4A"),
                d:
                  "M1079,627c-8,0-16,0-24,0c-0.5-3.8,2.5-3.2,4.5-3.3c6.4-0.2,12.9-0.1,19.3-0.1c7.9,0,15.9,0,23.8,0\n                        c14.5,0.9,28.8-2.5,43.3-2.2c31.3,0.5,62.6,0.2,93.9,0.3c2,0,4-0.1,6,0.3c1.7,0.6,3.1,1.5,4.1,3.1c-2.5,2-5.5,2-8.5,2\n                        C1187.3,627,1133.2,627,1079,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63542"),
                d:
                  "M1343,619c0,1.3,0,2.7,0,4c-24.5,0-49.1,0.1-73.6-0.1c-3.1,0-5.8,0.5-8.4,2.1\n                        c-0.7,0.1-1.4-0.1-2.1-0.3c-4.6-1.6-8.8-4.2-13.4-6c-1.4-1-3.9-1.4-3.2-3.6c0.5-1.7,2.8-1.4,4.4-1.5c2.5-0.1,4.9,0,7.4-0.1\n                        c5.9,0.1,11.9-0.1,17.8,0.4c0.8,0,1.7,0,2.5,0.2c4.4,0.9,8.8,0.3,13.2,0.5c3,0,6,0.5,9.1,0.5c11.2,0.6,22.4,0.4,33.4,2.9\n                        C1334.3,618.8,1338.8,617.1,1343,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43F46"),
                d:
                  "M1247,618c4.3,2,8.7,4,13,6c-2.2,3.9-5.2,1.5-8,1c-0.7,0-1.3,0-2,0c-1.4,0-2.9,0-3-2\n                        c-1.9-1.5-4.1-1-6.2-1c-17.8,0-35.5,0-53.3-0.1c-2,0-5,0.9-4.6-3.1c2-1.7,4.3-1.4,6.6-1.4c16.5,0,33.1,0,49.6-0.1\n                        C1241.8,617.3,1244.3,618.3,1247,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93C4A"),
                d:
                  "M1252,625c2.7-0.5,5.6,1,8-1c0.3,0.3,0.7,0.7,1,1C1258,628.9,1255,627,1252,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90313C"),
                d:
                  "M2012,614c3.9-4.4,6-10,8.8-15.1c2.2-2.4,2-6.1,4.8-8.1c1.3,0.2,1,1.4,1.4,2.2\n                        c-0.6,3.3-2.4,6.1-3.9,9.1c0-0.2,0-0.4-0.1-0.5c-0.2-0.2-0.4-0.3-0.6-0.5c-0.9,4.9-4.2,8.6-6.3,13\n                        C2014.7,615,2013.3,614.1,2012,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851727"),
                d:
                  "M2064,613c0,0.7,0,1.3,0,2c-1.2-0.2-2.4-0.5-3.8-0.7C2061.3,612.9,2061.9,610.6,2064,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96182F"),
                d:
                  "M2011.2,621.4c-4.9,2.5-10.2,0.9-15.7,3C1999.2,620.5,2001.1,620.2,2011.2,621.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2545D"),
                d:
                  "M1781,399c0-1.6-0.3-3.2-2.3-2.9c-3.5,0.5-7.7-1.2-10.1-0.5c-6,1.7-10.3-2.2-15.5-2.6\n                        c-1.6-0.1-2.8-1-4.7,0.3c-3.5,2.5-2.7-3.4-5.3-3.2c3-4.8,6.1-9.3,12.9-8c0.5,0.1,1.1-0.1,1.3-0.5c2.9-5.2,7.3-3.1,11.3-2.3\n                        c1,0.2,1.9,0.5,2.9,0.5c2.6,0,4.2-0.6,3.3-3.9c-0.6-2.3-1-4.9,0.3-7.2c0.9-0.5,1.8-0.5,2.7-0.1c1.6,2.9,4.4,3.2,7.3,3.4l0,0\n                        c0.5,0.6,1.1,1.1,1.5,1.9c0.1,0.3-1.1,1.3,0.2,0.9c1.5-0.5,2.8-0.3,4.2,0.4l0,0c1.9,3,5.2,3.7,8.1,5.1c2,1,3.6,2.4,2.9,4.5\n                        c-0.7,2-2.9,1.3-4.8,1.1c-1.3-0.1-3.9-2.9-3.7,1.3c0.5,2.2-1.4,2.8-2.5,4c-0.2,2-0.2,2-2.5,2.2c-1.5,0.1-2,1.6-3,2.3\n                        C1784,396.6,1783.2,398.7,1781,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF5760"),
                d:
                  "M1792,415c-5.5-2.4-11.7-2.2-17-5c5.2-0.8,7.7-5.8,12-8c5.8-3.3,12.5-3.5,18.8-4.9\n                        c2.1-0.5,4.1-0.7,6.2-1.5c3.4-1.2,6.8-1.1,10,0.9c4.8,3.1,10.9,3.6,15.2,7.8c1.4,1.4,2.2-1.7,3.8-1.3c-1.8,0.8,2.6,4.6-2,4\n                        c-0.8,0.7-1.7,1.3-2.7,1.2c-6.8-0.6-13.3,2.2-20,2.2c-5,0-8.6,1.1-9.3,6.6C1802,416.3,1797,415.7,1792,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA5861"),
                d:
                  "M1793,387c-1.7-0.2-2.3-1.3-1.7-2.8c0.7-1.9,2.5-1.4,3.8-1c2,0.7,4.8,3.4,5.8,0.9\n                        c1.2-3.1-3.2-2.7-4.9-4.1c-1.8-1.5-6.1-0.5-5-5c1.9,0.7,3.9,1.4,5.8,2.1c4.1,2.7,8.3,4.9,13.1,5.9c0.4,0.6,0.8,1.1,1.2,1.7\n                        c0.9,1.4-1,1.3-1.1,2.2c0,0.3,0,0.7,0,1C1804.1,392.2,1798.6,388.1,1793,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45663"),
                d:
                  "M1793,387c3.6,0.2,7.2-0.7,10.5,1.8c1.9,1.4,4.1-2,6.5-0.8c0.5,2.3-0.1,2.9-3.2,3\n                        c-5.2,0.1-10.5,0-15.7,0C1791.7,389.7,1792.3,388.3,1793,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45663"),
                d:
                  "M1810,387c-1-1.4,1.3-1.2,1.1-2.2c0.6,0.1,1.3,0.3,1.9,0.4C1812.8,387.2,1811.3,387,1810,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2935"),
                d:
                  "M1953,360c3,1.3,6,2.7,9,4c-0.2,0.7,2,2,0.5,1.7c-3-0.5-1.9,0.6-2.6,2.4c-1.2,3.1-4.6,3.3-8.7,1.3\n                        c3.9,4.1-1,3.8-1.2,5.7c-4.4-2.5-9.6-2.5-14.4-3.8c-2.5-0.7-5-0.8-7.4-2c-6-2.9-13.1-2.2-19.2-5.1c2.2-4.1,5.7-1.9,8.8-2\n                        c2.9,1.5,6.2,0.9,9.2,2c1,0.4,2.4,0.2,2.5-0.9c0.7-4,3.4-2.9,5.7-2.3c3.2,0.8,6.5,1,9.6,2.4c2.5,1.1,4.8-2.4,7.6-1.3\n                        c-0.3-0.6-0.7-1.1-0.6-1.8C1952.2,359.7,1952.6,359.7,1953,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1A26"),
                d:
                  "M1967,381c1.1-1.5,2.5-0.9,4.5-0.9C1969.7,381.5,1968.3,380.8,1967,381L1967,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671720"),
                d:
                  "M1834.9,357.1c-0.7-0.1-1.3-0.2-2-0.3c-1.9-0.9-4.1,0.3-6-0.8l-0.5,0l-0.4-0.1\n                        c-2.1-2.2-5.1-0.8-7.5-2.1c-1.3-0.7-3.1-1.2-2.8-3c0.4-2.1,2.3-1.4,3.7-1.3c2.5,0.2,5,0.3,7.4-0.6c1.3-0.5,2.4-0.3,3.7,0.5\n                        c4.9,2.9,10.7,1.5,16,3c1.2,0.3,0.3-0.8,0.5-1.1c1.7-2.3,4.2-1.8,6.3-1.3c1.3,0.3,4.3,0.8,1.5,3.3c-0.2,0.2-0.2,0.4,0.2,0.4\n                        c6.2-0.1,12.2,3.4,18.6,0.9c1.5-0.7,2.5,0,3.4,1.1c0.8,1,1.9,1.8,2.9,2.6c3,2.2,6.1,3.5,9.5,0.5c4.8,0.8,9.5,2,13.5,5.1\n                        c2.1,1.7,5.7,0.9,7,4c-13-2.2-26.1-4.6-39.1-6.5C1858.9,359.8,1846.9,358.6,1834.9,357.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852F37"),
                d:
                  "M1919,363c-3.3,0.4-6.8-1-10,1c-0.3,0-0.7,0-1,0c-0.9-1.3-2.2-1.1-3.5-1.1c-1.4,0-3.1,0.4-3.7-1.5\n                        c0.3-0.2,0.3-0.4,0.1-0.6c0,0.3-0.2,0.5-0.6,0.6c-7.1-3.3-14.8-4.9-21.9-8.1c-0.6-1.3-1.2-2.7,1-2.9c1.8-0.1,3.7-0.3,4.9,0\n                        c-6,0.1-12-1.8-17.9-4.4c-1.1-0.5-2.3-0.5-3.4-0.8c-1.8-0.9-3.9-0.8-5.7-1.6c-1.9-0.8-1.6-1.8,0.1-2.7\n                        c2.1-0.7,4.3-0.4,6.4-0.4c4.3,0.2,8.4,1.5,12.6,2.6c0.4,0.2,0.7,0.6,0.9,1.1c0,0.5-0.4,0.8-0.7,1.1c3.2-0.9,6.3,2.1,9.5,0.2\n                        c0.8,0.1,1.4,0.5,1.9,1c3.2,3,7.6,3,11.4,4.1c5.3,1.5,10.4,3.1,14.6,6.9c-0.2,3.3-2.6,1.7-4,2.1c2.9,0.7,6.3-0.5,9.3,0.8\n                        c0.9,0.4,1.9,1,1.6,2.1C1920.6,363.7,1919.8,363.6,1919,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842632"),
                d:
                  "M1879,353c7.5,2.1,15.2,3.8,22,8c1.3,1.5,3,1.2,4.6,0.6c2.6-0.9,2.3,0.9,2.4,2.4c-1.7,0-3.4,0-5,0\n                        c-4.6-1.4-9.3-2.7-13.9-4.1c-3.8-1.6-8.3-1.6-11.4-5C1877.5,353.9,1877.4,352.8,1879,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B21B2B"),
                d:
                  "M1855,442c-0.4-0.3-0.8-0.8-1.2-0.8c-5.8-1.1-6.1-1.9-2.8-7.1c1.5-0.4,2.7-1.5,4.3-1.8\n                        c2.9-0.1,5.7,1,7,3.1c1.6,2.7,6.3-0.5,6.3,3.9c0.6-0.3,0.8-1.1,1.4-1.3c2.8-0.9,4.8-5.4,8.5-2c0.8,0.8,0.5-0.2,0.5-0.3\n                        c2.9-4.5,7.5-3,11.7-3.4c0.5-1.6-1.6-4.1,1.3-5.3c5.8,0.1,10.2,4.4,15.8,5.2c0.9,0.8,3.3-0.7,3,2c-5.5,1.8-11.4,2.4-16.8,5.1\n                        c-2,1-4.1,2.1-6.2,2.9c-0.5,0.2-1,0.3-1.5,0.4c-9.4,2.9-18.8,1.5-28.3,0.9C1856.9,443.2,1855.8,442.9,1855,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC2230"),
                d:
                  "M1892.1,426.9c0.8,2.1-2.1,4.8,1.6,6.3c-5.3,1.3-11.8-2.2-14.9,4.8c-1.9-3.3-6.7-1.7-11.4,4.6\n                        c2.7-7.3-3.3-2.6-4.6-5.1c-1.5-2.8-4.7-3.9-7.8-4.5c1.5-4.5,4.9-1.9,7.5-2c7.3,1.6,14.5,1.1,20.4-3.7c3.1-2.5,5.6-2.9,8.8-1.2\n                        C1891.9,426.3,1892,426.6,1892.1,426.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C6333F"),
                d:
                  "M1891.8,426.1c-5.6-2.2-8.4,3.1-12.4,4.9c-5.3,2.5-10.7,1.1-15.9,2.2c-0.1,0-0.4-0.8-0.6-1.2\n                        c0.4-2.3,0.4-2.3,3.9-2.6c5.4-0.5,6.8-1.8,7.1-6.4c0,0,0,0,0,0c2.8,0.5,5.3-0.9,8.1-1.1\n                        C1885.6,422.7,1889.1,423.5,1891.8,426.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97072"),
                d:
                  "M1911.1,434c-1.1-0.6-2.1-1.3-3.2-1.9c1.4-0.6,2.8-1.3,4.1-1.9c6.4-0.2,11.1,4.2,16.8,6\n                        c1.1,0.4,2,1.1,3.2,1.3c3.7,1.2,7.9,1.5,10.3,5.3c-0.2,0.8-0.7,1.3-1.5,1.6c-6.6-0.6-12.5-3.5-18.6-5.5\n                        c-3.4-1.9-7.4-2.3-10.7-4.4C1911.3,434.4,1911.2,434.2,1911.1,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3239"),
                d:
                  "M1932,438.1c-6.7-2.6-13.3-5.3-20-7.9c-1-0.4-1.9-0.9-2.9-1.3c5.1-0.7,9.4,1.7,14,3.3\n                        c2.3,2.8,6.2,2.8,8.9,4.9C1932.5,437.4,1932.5,437.7,1932,438.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841A24"),
                d:
                  "M1952,443c4.8-1.9,9.2-0.2,13.2,1.8c2.7,1.3,5,1.8,7.8,1.1c0.2,0,0.5-0.1,0.7-0.1\n                        c4.7-0.4,8.6,1.7,12.7,3.4c1.1,0.8,2.9,1.5,2.6,3.2c-0.4,1.9-2.3,1.2-3.7,1.4c-0.7,0.1-1.2,0.5-1.8,0.8\n                        c-0.9,0.4-1.9,0.4-2.8,0.3c-3.6-1-7.1-2.1-10.7-2.8c-2.1-0.6-4.2-1.5-6.4-1.9c-3.3-1.2-6.9-1.6-10-3.4\n                        C1952.4,445.8,1950.8,445,1952,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("98212E"),
                d:
                  "M1952,443c-0.2,1.5,1.3,1.9,2,2.9c-4.6,1.6-8.1-0.9-11.7-3.2c-3.5-1.5-6.9-3.1-10.4-4.6\n                        c0-0.4,0-0.7,0-1.1c5.1,0.1,9.7,1.5,14,4.2C1947.8,442.4,1949.8,443,1952,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("954046"),
                d:
                  "M1968.9,441.2c4.4,2.3,9.5,2.3,14.1,3.9c0.2,0.5,0,1-0.4,1.3c-3.2,0.7-6.4-0.9-9.6-0.4l0,0\n                        c-2.8-2.7-6.5-3.5-10-4.9C1965,441.1,1967,441.1,1968.9,441.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B16063"),
                d:
                  "M1983,446c0-0.3,0-0.6,0-1c5.3,0,10.7,0.1,16,0.1c0.2,0.5,0.1,0.9-0.2,1.2c-0.8,0.4-1.6,0.4-2.9-0.2\n                        c6.2,3,11.2,6.5,13,13.1c-2.3,0.9-3.7-0.6-5.2-2c-5.7-5.5-12-9.9-20.2-10.8C1983.3,446.4,1983.2,446.2,1983,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("654D4E"),
                d:
                  "M1999.1,445.8c0-0.2,0-0.4-0.1-0.6c2.8-0.7,5.7-0.9,8-3.1c1.7-0.7,3.3-1.4,5-2c-0.5,3.5-3.7,3.8-6,4.7\n                        c-2.7,1.1,0.1,1.4,0,2.1C2003.4,448.7,2001.2,447.8,1999.1,445.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B34A57"),
                d:
                  "M1815,355c-0.4,0.7-0.7,1.3-1.1,2c-8.5,0.1-17,0.8-25.1,3.9c-2.4,1.2-4.5,3.1-7.5,2.6\n                        c-1.1-0.8-0.5-1.7-0.2-2.6c1.1-6.1,6.6-6.4,10.9-8.2c4.8,0.6,9.7,2.5,14.6,0.4c0.4-0.3,0.8-0.4,1.3-0.5\n                        C1810.3,353.1,1812.9,353.5,1815,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E2225"),
                d:
                  "M1781.2,363.2c2.5-0.9,4.8-2.6,7.7-2.4c0.4,0.4,0.8,0.7,1.1,1.1c-6.8,2.7-6.8,2.7-3.9,8\n                        c-0.4,0.4-0.7,0.8-1.1,1.2c-2.4,0.4-3.4-1.5-4.6-3.1c-0.3-0.7-0.5-1.4-0.5-2.2C1780,364.8,1780.2,363.8,1781.2,363.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701422"),
                d:
                  "M1874,355c-0.2,1.2,0.4,2.9-1.9,2.5c-6.8-1.2-13.8-1.3-20.3-3.8c0.5-2.6,2.9,0.4,3.6-1.7\n                        c-1.9-1.8-4.4-1.4-6.4-0.9c-7.5,1.9-7.7,3-17,0.5c-5.3-1.4-10.4,1.4-15.3-1.3c1,2.9,3.6,3.2,5.5,3.3c2.1,0.1,3,0.9,3.9,2.4\n                        c-1,0.4-2.1-1-3.1,0c-1.5,0.4-2.8-0.2-4-0.9c-0.9,0-1.8-0.1-2.7-0.1c-3.2-0.8-6.3-1.8-9.3-3.3c-0.6-0.4-1-1-1.2-1.7\n                        c-0.6-0.5,1.9-1.4-0.2-1.8c-3.3-0.7-6.4-2.2-9.8-2.7c-8.4-2.2-16.7-5-25.3-6.9c-1.6-0.4-3.2-0.9-3.8-2.8\n                        c1.3-2.6,3.8-1.8,5.9-2.1c11.5,1.6,23,2.3,34.4,4.9c8.6-0.3,17.5-2.1,25.1,4c5.2-0.6,9.4,4.7,15.2,2.1c3-1.4,6.3,2,9.7,0.8\n                        c6.3,0.1,12,1.8,16.2,7C1873.8,353.1,1874.1,354,1874,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD4750"),
                d:
                  "M1807,350.9c3.2,1,6.4,1.9,9.2,4c-0.4,0-0.8,0.1-1.2,0.1c-3,0.8-5.4-1.2-8-2\n                        C1806.5,352.3,1806.5,351.6,1807,350.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671720"),
                d:
                  "M1818.9,355c1.5-0.2,2.8,0.2,4,0.9C1821,358.2,1820,356.4,1818.9,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701422"),
                d:
                  "M1826.9,356c2,0.2,4.2-0.8,6,0.8C1830.9,356.8,1828.8,357.4,1826.9,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15661"),
                d:
                  "M1781,368c1.3,1,2.6,2.1,3.9,3.1c0.1,0.2,0.1,0.5,0.1,0.8c-3.3,1.3-6.7,3-7.1-2.8\n                        C1778.7,367.6,1779.6,367,1781,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15661"),
                d:
                  "M1791,375c-2.4-0.2-6.1,2-5.9-3.1C1787.2,372.6,1789.3,373.5,1791,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C78283"),
                d:
                  "M1999.1,445.8c2.3,0.4,4.6,0.7,7,1.1c1.4,0.3,2.8,0.7,4.1,1c-1.1,0.2-2.2,0.4-3.3,0.6\n                        c1.7,2.3,0.3,5.4,2.1,7.8c1.3,1.6,4.1,2,4,4.7c-1,1-2,0.5-3.1,0.1c-0.4-0.2-0.7-0.5-1.1-0.8c-0.2-0.4-0.2-0.8,0-1.2\n                        c-3.5-5.9-8.5-9.9-15.4-12.8C1995.7,446.1,1997.4,445.9,1999.1,445.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151F"),
                d:
                  "M2049,479c3.4-0.1,7.1-0.5,5.4,5c-0.1,0.4,1.1,0.1,1.6,0c1,1.4,0.2,2.5-0.6,3.6\n                        c-2.3,2.2-4.9,3.7-8.2,3.7c-2.1,0-4.2,0-6.4,0c-3.1,0-5.7,0.7-7.3,3.6c-3,2.5-6.6,3.6-10.4,4.1c-4-2.1-3.9-3,0.8-6.9\n                        c0.4-0.3,0.8-0.5,1.3-0.6c2.8-0.6,4.8-1.7,4.4-5.3c-0.2-1.9,0.4-4.1,3.6-2.4c4.7,2.4,8,1.4,11.4-3\n                        C2045.8,479.7,2047.2,478.9,2049,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C151D"),
                d:
                  "M2009.9,460.3c1,0.2,2,0.5,3.1,0.7c0.7,0.4,1.4,0.9,2.1,1.3c0.8,1.2,1.4,2.3,3.1,2.8\n                        c2.1,0.6,5.3,0.4,4.7,4.9c-0.3,1.8,3.4,2,5.7,0.7c3.2-1.8,6.4-2.8,9.4,0.3c-0.1,0.2-0.1,0.4-0.2,0.6c-0.9,1.7-0.6,3.9-2.2,5.4\n                        c-0.3,0.3-0.7,0.5-1.1,0.7c-2.5,4.3-2.4,4.2-5.6,0.6c-4-4.5-9.7-4.8-15.1-5.8c-4-2.2-6.5-6.1-9.7-9.3\n                        c-1.5-1.5-0.3-2.6,1.4-3.2C2007.1,459.6,2008.5,460.7,2009.9,460.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C151D"),
                d:
                  "M2049,479c-1,1.3-2.4,1.8-4,2c-3.3-1.3-6.9-2-10-4l0,0c2.5-1.2,0.8-4.6,3-6l0,0\n                        C2042.5,472.5,2045.2,476.5,2049,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B343E"),
                d:
                  "M2055,487c0.4-1,0.7-2,1.1-3c0.3-0.3,0.6-0.7,0.9-1c1.8-0.7,1.4-5.3,5-3c2.3,3,3.2,5.8-1.1,7.9\n                        C2058.8,488.4,2056.7,488.7,2055,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983D45"),
                d:
                  "M2061,487c3.6-1.9,1.2-4.6,1-7c0.3,0,0.7,0,1,0c0.5,1.7,2.3-0.2,3,1c0,8.9-3.3,12.3-11.2,15.9\n                        c-5.8,2.7-11,5.2-17.7,3.9c-0.9-0.2-3.9,1.4-6.1,1.2c-0.9-0.8-1-1.8-0.8-2.9c0.6-1.9,2.3-2.2,3.9-2.6c5.7-1.5,11.4-3,17-4.6\n                        C2054.5,491,2057.3,487.9,2061,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1304,255c-1.3,0-2-0.7-2-2C1303,253.3,1305.4,252.3,1304,255z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD6566"),
                d:
                  "M1205.9,203.1c8.3,4.3,16.7,8.7,25,13c0.4,0.7,1.1,0.9,1.9,0.9c4.5,4.1,10.8,5.4,15.1,9.8\n                        c0.4,0.4,0.4,0.9,0.1,1.3c-1.8,1-3.2-0.2-4.6-0.9c-11.7-6.1-22.8-13.3-34.7-19.1c-1.7-0.8-3.6-1.7-4.2-3.9\n                        C1205.1,203.9,1205.5,203.5,1205.9,203.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F5959"),
                d:
                  "M1248,228.1c0-0.4,0.1-0.8,0.1-1.3c7.2,3.3,14,7.2,20.2,12.1c-0.4,0-0.8,0.1-1.2,0.1\n                        c-1.2,0.6-2.3,0-3.3-0.4c-3.7-1.8-7-4.3-10.9-5.9C1251,231.3,1248.2,231,1248,228.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FFFFFF"),
                d:
                  "M1248,228.1c1.7,1.2,3.4,2.5,5.1,3.7c2.9,2.4,6.3,3.8,9.4,5.9c11.2,5.9,21.6,13.2,32.5,19.8\n                        c1.4,0.9,2.8,1.7,4.3,2.4c0.9,0.6,1.9,1.3,2.8,1.9c3,4.2,7.8,5.9,11.8,8.7c11.8,8.2,24,15.8,34.2,26.1\n                        c0.6,0.6,1.2,1.1,1.8,1.7c1.3,1.3,4.9,0,4.3,2.8c-0.4,2-3.6,0.5-5.4,1.4c-1.9,0.9-4.3,0.6-5.9,2.3c-2.3,2.1-5.1,0.8-7.7,1.2\n                        c-6.6,0.1-13,2.4-19.6,2c-3,0-5.9,0.2-8.9,0.9c-1.3,0.1-2.5,0.1-3.8,0.2c-2.6,0.9-5.4-0.1-8,0.6c-3.8,1.3-7.7,0.4-11.5,0.7\n                        c-2,0-3.9,0-5.9,0c-5-0.1-10-0.1-15,0c-6.6,0.2-8,2.8-4.4,8.5c2.5,4,5.5,7.7,3,12.8c-1.4,3.6-3.6,6.6-6.3,9.2\n                        c-0.6,0.5-1.3,0.9-2,1.1c-0.8,0.2-1.6,0.3-2.4,0.4c-6.2,1.9-12.3,3.8-18.6,5.1c-6.4,1.3-12.3,1-18-1.8\n                        c-5.8-2.9-7.2-8.8-8-14.7c-0.4-3.1-0.1-6.3-0.1-9.5c-0.1-3.8-1.4-6.8-5.4-8c-6.7-1-13.4-3.7-20.1,0.2\n                        c-1.9,1.1-4.2,0.7-6.4,0.7c-18.3,0-36.5,0-54.8,0c-5.3,0-10.5,0-15.8,0c-4.9,0-9.9,0-14.8,0c-3,0-6,0-9,0\n                        c-3.8-0.1-7.5,0.2-11.3-0.2c-0.6-0.1-1.1-0.2-1.6-0.4c-4.2-2.2-8.7-1.1-13-1.3c-4.1,0-8.2,0-12.3,0c-3.5,0-7,0-10.6,0\n                        c-1.2,0-2.3-0.1-3.4-0.4c-3.2-0.7-6.4-1.7-9.8-1.6c-3.5,0-6.9,0-10.4,0c-3.8,0-7.6,0-11.5,0c-1.5,0.1-2.9-0.1-4.3-0.4\n                        c-3.2-0.9-6.4-1.9-9.8-1.6c-4.7,0-9.3,0-14,0c-2,0-4,0-6-0.4c-2.9-0.7-5.8-1.8-8.9-1.7c-2.6,0-5.2,0-7.7,0\n                        c-3.9,0-7.7,0-11.6,0c-2.7-0.1-5.3,0.1-8-0.4c-4.4-2-9-1.7-13.6-1.6c-4.4,0-8.9,0-13.3,0c-2,0-4.1,0.1-6.1-0.4\n                        c-3.4-1.4-7-1.9-10.7-1.6c-4.3,0-8.7,0-13,0c-1.4,0.1-2.8-0.1-4.2-0.4c-2.4-0.7-4.8-1.2-7.2-1.5c-3.4-0.1-6.8,0-10.3,0\n                        c-4.1,0-8.2,0-12.3,0c-3.5,0.3-6.5-2-9.9-2c-3.2-0.1-6.3,0-9.5,0c-2.3,0-4.6,0-6.9,0c-4,0.1-7.6-2.4-11.7-2\n                        c-3.8-0.1-7.6,0-11.4,0c-2.6,0-5.2,0-7.8,0c-1.2,0-2.3-0.2-3.3-0.6c-2.9-2.1-6.3-1.2-9.5-1.3c-3.1,0-6.2,0-9.3,0\n                        c-2.3-0.1-4.6,0.1-6.8-0.4c-2.6-0.8-5.3-1.7-8.1-1.6c-3.8,0-7.5,0-11.3,0c-3.5-0.1-7,0.2-10.5-0.3c-2.9-0.9-5.8-2-9-1.7\n                        c-3.4,0-6.9,0-10.3,0c-2.3,0-4.6,0-6.8,0c-1.1,0-2.3-0.1-3.4-0.4c-3.2-0.9-6.3-1.9-9.7-1.6c-4.3,0-8.6,0-12.9,0\n                        c-1.7,0.1-3.4-0.1-5.1-0.4c-2.8-0.9-5.7-2-8.7-1.6c-2.8,0-5.5,0-8.3,0c-1.7,0-3.3,0-5-0.2c-0.6-0.1-1.1-0.2-1.6-0.3\n                        c-3.9-1.4-8-1.7-12.1-1.5c-3.4,0-6.9,0-10.3,0c-2.3-0.1-4.6,0.1-6.9-0.4c-3.1-1.2-6.3-2-9.7-1.6c-3.1,0-6.2,0-9.3,0\n                        c-4,0.3-7.7-1.5-11.5-1.9c-3.3-0.2-6.6-0.1-9.8,0c-3.1,1-5.8-0.7-8.7-1.1c-4-1.1-8.1-1.1-12.2-0.9c-2.3,0-4.4-0.5-6.6-1\n                        c-4.2-1.5-8.7-0.8-13-1c-1.1,0-2.1-0.1-3.2-0.4c-2.2-0.6-4.2-1.7-6.5-1.6c-1.3,0-2.5,0-3.8-0.1c-0.8-0.1-1.5-0.2-2.3-0.4\n                        c-5.5-1.9-11.4-2.4-16.8-4.6c-10.5-3.6-19.5-9.7-28.3-16.3c-2.2-2.4-5-4.2-7.4-6.3c-5.1-4.7-10.3-9.3-15.4-13.9\n                        c-0.3-0.3-0.7-0.7-0.9-1c-1.3-2.2-3.7-3.6-4.7-6c-0.6-1.8-0.2-3.4,0.8-4.9c0.8-1.2,1.6-2.5,2.7-3.4\n                        c8.2-7.2,17.5-12.5,27.2-17.3c17.5-9,35.4-17,53.3-25.1c2.9-1.3,6.1-1.8,9-2.9c6-1.4,11.5-4,17.3-5.8\n                        c8.1-2.5,16.3-3.9,24.3-6.5c11.6-2.2,23.3-4.4,34.7-7.4c0.8-0.4,1.6-0.5,2.4-0.6c4.1-0.1,7.9-2.5,12.1-2.1\n                        c6,0,11.7-1.9,17.6-2.8c6.5-0.9,13-2.6,19.6-3.2c2.5-0.2,4.9-0.8,7.3-1.5c1.4-0.4,2.8-0.5,4.1-0.5c2.4-0.1,4.9,0.3,7.2-0.8\n                        c3.7-1.6,7.6-1.1,11.4-1.2c2.9,0.3,5.7-0.4,8.4-1.4c0.8-0.2,1.6-0.2,2.3-0.2c3.4,0.6,6-1.7,9.2-2.1c2.2-0.3,4.4-0.2,6.5-0.2\n                        c3.6,0.3,7.1-0.3,10.4-1.6c2.5-0.5,5.1-0.3,7.6-0.4c4.1-0.3,8.4,0.9,12.2-1.4c2.5-0.8,5.1-0.5,7.7-0.6c3.7,0.2,7.3,0,10.7-1.5\n                        c4.9-0.7,9.9-0.5,14.8-0.5c2.9,0.3,5.5-0.8,8.2-1.6c3.5-0.6,7-0.2,10.4-0.4c5.9,0.1,11.7,0.3,17.4-1.5\n                        c5.1-0.9,10.3-0.4,15.4-0.5c3.9,0,7.7,0,11.6,0c2.7,0.3,5.1-0.9,7.7-1.2c5.7-0.8,11.6-0.2,17.3-0.8c14.4,0,28.7,0,43.1,0\n                        c4.6,0.2,9.2-0.2,13.7,0.3c3,0.9,6,2.1,9.2,1.7c3.2,0,6.5,0,9.7,0c5.1,0.2,10.3-0.4,15.4,0.5c4,2.4,8.4,1.4,12.6,1.6\n                        c4.3,0.2,8.7-0.6,12.9,0.9c2.9,1,5.9,1.3,8.9,1.2c1.4,0,2.8,0.1,4.1,0.5c5.8,2.8,12.2,1.8,18.2,3.5c5.5,0.7,10.8,2.3,16.4,2.4\n                        c4,1.6,8.4,1.9,12.5,2.9c9.4,2.7,18.9,4.8,28.1,8.3c10.6,3.2,21.3,6.3,31.6,10.4c11,4,21.9,8.4,32.7,13.1\n                        c0.6,0.3,1,0.9,1.5,1.3c22.3,10.5,44.7,21,66.6,32.3C1219.1,212.2,1233.5,220.1,1248,228.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC5A68"),
                d:
                  "M1135.9,169.1c6.3-1.9,10.6,3.5,16.1,4.7c4,0.9,7.8,2.5,11,5.3c3.8,1.2,6.6,4.1,10,6\n                        c0.3,0.2,0.3,0.5,0.2,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c-10.4-4.7-20.8-9.4-31.2-14.1c-1.2-0.5-2.5-0.8-3.8-1.1\n                        C1136.9,170.8,1135.7,170.8,1135.9,169.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A96665"),
                d:
                  "M1135.9,169.1c0.7,0.6,1.4,1.2,2.2,1.8c0,0.4,0,0.7,0,1.1c-11.3-4.7-23-8.5-34.1-13.8\n                        c-0.5-0.4-0.5-0.8,0-1.2c9.9,2.9,19.4,6.8,28.7,11.1c0.7,0.3,1.5,0.5,2.3,0.8C1135.3,169,1135.6,169.1,1135.9,169.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE5668"),
                d:
                  "M1173,186c0-0.3,0-0.7,0-1c6,0.1,10,4.8,15.3,6.7c0,0-0.2,0.9-0.3,1.4\n                        C1182.5,191.7,1177.9,188.4,1173,186z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9606F"),
                d:
                  "M849.8,125.2c-1.9,1.6-4.1,1.8-6.4,1.6c-5.1-1.5-10.2-0.7-15.3-0.3c-4.2,0.1-8.5-0.1-12.7,0.1\n                        c-2.9,0.6-5.8,0.6-8.7,1.3c-4.6,0.2-9.1,0-13.7,0.1c-3.9-0.8-8.1,1.8-11.9-1c5.5-2.1,11.5-1.7,17.1-1.7\n                        c20.6-0.3,41.1-2.8,61.7-2.6c7.9,0.1,15.9-0.4,23.9-0.7c1.8-0.1,3.6-0.6,5.4-1l0,0c5.3,0.9,10.6,0.2,15.9,0.1\n                        c2-0.1,4.1,1.1,6.1-0.1c3.7,0,7.3,0,11,0c3,1.3,6.2,1.2,9.4,1c1.9-0.1,3.9-0.3,5.6,0.9c1.7,0,3.3,0,5,0c0.3,0.3,0.7,0.7,1,1\n                        c0.3,0.5,0.3,1-0.2,1.4c-1.2,0.8-2.6,0.5-3.9,0.5c-0.6,0-1.1-0.1-1.6-0.3c-3.6-0.6-7.3,0-10.9-0.8c-5.2-0.9-10.4-0.2-15.5-0.4\n                        c-14.2,0-28.4,0-42.7,0C862,124.9,855.8,123.7,849.8,125.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85662"),
                d:
                  "M911,121c-7.3,1.6-14.7,1.6-22,0c5.7-1.1,11.6,0,17.2-1.8C908.4,118.5,909.2,121.1,911,121z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D95762"),
                d:
                  "M937,123c-3.4,0-6.9-0.1-10.3,0.1c-2,0.1-3.4-0.6-4.7-2c0.4-0.8,0.2-3.9,1.5-1.9\n                        c2,3.1,4.1,1.8,6.4,1.9C932.3,121.3,935.3,119.9,937,123z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D26471"),
                d:
                  "M781,127c4,0,8.1,0.1,12.1,0.1c0.2,0.5,0.1,0.9-0.3,1.2c-2.1,0.4-4.2,0.1-6.3,0.2\n                        c-0.4,0-0.8,0-1.1-0.1c0.5,0.3,1.3,0.1,1.5,0.8c-2,1.5-4.3,1.8-6.7,1.5c-7-1.3-13.8-0.6-20.6,1.2c-1.9,0.1-3.8,0.1-5.7,0.1\n                        c-4.5-0.4-9,2.1-13.6,0.5c-0.5-0.4-0.7-0.9-0.3-1.5c8.2-0.8,16.4-1.3,24.5-2.4C770,127.9,775.4,127.1,781,127z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M740,131c0,0.4,0,0.7,0,1.1c-0.3,0.8-0.8,1.4-1.6,1.7c-3.2,0.6-6.4-0.3-9.6,0.6\n                        c-1.6,0-3.2,0.3-4.8,0.6c-4.2,1.3-8.6,0.7-12.8,1.3c-0.8,0.2-1.6,0.2-2.4,0.2c-1.6,0.3-3.3,0.9-4.7-0.4\n                        c-0.6-0.1-1.7,0-1.8-0.3c-0.6-1.2,0.8-1.3,1.3-1.3c4.2-0.6,8.3-1,12.5-1.4c0.3,0,0.7,0,1,0C724.7,132.6,732.2,130.3,740,131z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85F6D"),
                d:
                  "M1061,141c3.2,1.7,7.3,1.3,9.9,4.2c-1.9,1.3-3.8,0.4-5.6-0.2c-6.9-2.2-13.9-3.9-20.9-5.5\n                        c-3.5-0.9-7.1-1.6-10.6-2c-1.5-0.9-3.3-0.9-4.9-1.8c-0.8-0.7-1.4-1.5-0.9-2.6C1039,135.7,1050,138.3,1061,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA616E"),
                d:
                  "M943,124.9c0-0.3,0-0.6,0-0.9c2.4-1.9,4.8,0.1,7.2,0c10.1-0.2,20,0.8,30,2c1.6,0.2,3.2,0.7,4.8,1\n                        c0.3,0.6,0.2,1.1-0.4,1.4c-2.5,0.3-5,0-7.5,0c-3.3-0.8-6.7-0.1-10-0.5c-2.7-0.8-5.6-0.1-8.2-1.2c-2-0.4-4,0-5.9-0.3\n                        C949.8,125.2,946.1,127.2,943,124.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A06261"),
                d:
                  "M1015.1,134.8c-6.1-1.3-12.6-1.1-18.4-3.6c1.4-1.5,2.9-1.2,4.4-0.3c1.3,0,2.7,0,4,0\n                        c4.6-0.7,8.9,1.1,13.4,1.6c0.6,0.1,0.9,0.5,0.9,1.1C1018.2,135.3,1016.3,133.9,1015.1,134.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M1018.8,133.1c-4.7,0.1-9.2-1.2-13.8-2.1c4-2.4,8.1-0.6,11.6,0.6c1.3,0.5,4.4-2.7,4.4,1.4\n                        C1020.3,133.6,1019.6,133.6,1018.8,133.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6373"),
                d:
                  "M984.9,128.2c0-0.4,0.1-0.8,0.1-1.2c4.4-0.1,8.8,0.7,13,2c0.4,0.5,0.3,0.9-0.1,1.3\n                        c-1,0.2-2.1,0.2-3.1,0c-3.1-0.8-6.3,0.3-9.3-0.8C984.9,129.2,984.7,128.8,984.9,128.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD6F78"),
                d:
                  "M1018.8,133.1c0.7,0,1.5-0.1,2.2-0.1c2.3,0,4.6,0,7,0.1c0.3,0.7,0.7,1.4,1,2c-3.6,2.1-6.7,0.3-9.8-1.2\n                        C1019.1,133.6,1019,133.3,1018.8,133.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9404A"),
                d:
                  "M995.1,129.9c1,0,1.9,0,2.9-0.1c1-0.4,2-0.6,2.9,0.2c0.1,0.3,0.1,0.6,0.2,0.9c-1.5,0.1-3,0.2-4.4,0.3\n                        c-1.2-0.1-2.4-0.2-3.6-0.3C992.9,129,994.1,129.5,995.1,129.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6575"),
                d:
                  "M1000.9,130.1c-1-0.1-1.9-0.1-2.9-0.2c0-0.3,0-0.6,0-0.8c1.7,0,3.3,0,5.2,0\n                        C1002.5,130.3,1001.6,129.8,1000.9,130.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC6C6C"),
                d:
                  "M1104,157c0,0.4,0,0.8,0,1.2c-10.6-3.4-21.3-6.8-31.9-10.1c-0.1-0.9,0-1.5,1.1-1\n                        c4.4-0.3,8.2,2,12.2,3.2c3.9,1.2,7.8,2.5,11.7,3.7C1099,155.6,1102.4,154.3,1104,157z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A66462"),
                d:
                  "M1073.1,147c-0.4,0.3-0.7,0.7-1.1,1c-9.3-2.6-18.7-5.2-28-7.9c-0.5-0.4-0.5-0.8,0-1.2\n                        c7.3,0.8,14.1,3.3,21.2,5c1.9,0.5,3.9,0.9,5.8,1.3C1071.7,145.8,1072.4,146.4,1073.1,147z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B85E66"),
                d:
                  "M1851.1,322.9c-2.9-1.3-6-1.6-9.1-2.1c-0.2-0.7-0.8-1.9,0.7-1.4c1.8,0.6,3.5,0.5,5.3,0.6\n                        c6.4,1.2,12.8,2.5,19.2,3.7c5.9,1.1,11.8,2.2,17.8,3.3c1.5,1.5,3.2-0.3,4.7,0.2c2.1,0.9,5.6,0.1,5.2,4.1\n                        c-0.7,0.5-1.4,0.8-2.2,0.9c-3.7,0.5-7.1-0.8-10.6-1.3c-7.8-2.7-16-3.7-24-5.7C1855.7,324.7,1853,324.8,1851.1,322.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4585C"),
                d:
                  "M1895,331c-1.1-2.8-4.2-1.5-6-3c-0.5-0.7-1.5-0.3-2-1c0-0.7,0-1.3,0-2c5.7-0.1,10.9,1.8,16,4l0,0\n                        C1900.7,331.3,1898.1,332.3,1895,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B85D64"),
                d:
                  "M1887,327c0.8,0,1.6,0.2,2,1c-1.4,0-3.2,1.4-4-1C1885.7,327,1886.3,327,1887,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0454D"),
                d:
                  "M1790,322c0-0.3,0-0.6,0-1l0,0c6.3,0.4,12.7-0.9,19,1c1.3,1,2.9,0.3,4.3,0.5c-1.4-0.3-3,0.4-4.3-0.6\n                        c-0.7-1-1.3-2-2-3c3.1-0.9,6.4-2.8,8.9,1.2c4.7-2,9.3,1.6,14,0.1c6.4,1.2,12.8,2.4,19.2,3.6c7.6,0.2,14.9,1.5,21.7,5.1\n                        c1.9,3.6,0.2,5.1-3.3,5.3c-1.8,0.1-3.5,0.1-5.3-0.1c-11.2-1.7-22.5-3.2-33.7-4.9c-0.6,0-1.1-0.1-1.7-0.3\n                        c-8.6-1.1-17-3.1-25.6-3.9C1797.5,323.9,1793.1,325.2,1790,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF4953"),
                d:
                  "M1829.9,320.3c-4.7,2.2-10,1.1-14.2,0.1c-2.9-0.7-5.9-0.6-8.7-1.3c-2.7-2-5.8-2.8-8.8-1.5\n                        c-3.3,1.5-4.9-2.1-7.9-1.9c-2.8,0.1-5.8-0.6-8.8-0.6c-5.8,0.1-11.2-2.8-17.3-2.3c-1.5,0.1-3.2,0.4-4.9,0.6\n                        c0.4-1.4-0.5-3.3,1.9-3.4c15.3,1.5,30.5,4,45.7,6.5C1814.5,317.7,1822.2,319,1829.9,320.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801D23"),
                d:
                  "M1869.9,329c-6.8-2.4-13.9-3.6-20.9-5.1c0.5-0.8,1.3-0.9,2.1-1c10.4,1.8,21,3,30.9,7\n                        c-0.2,0.2-0.4,0.4-0.6,0.6c-1.8,1-3.6,0.1-5.4-0.1C1873.9,330.3,1871.7,330.6,1869.9,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C4424C"),
                d:
                  "M1711,307c-0.7-1.8-5.1,3.5-4-2C1708.6,305.2,1710.7,304.3,1711,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B85D64"),
                d:
                  "M1895,331c2.7-0.7,5.3-1.3,8-2c12.1,4.2,24.2,8.4,37,10c2.4-0.5,3,4.4,6,2c0.7,0,1.3,0,2,0\n                        c0.9,2.4,3.2,2.6,5.1,3.3c0.9,0.3,1.8,1,1.8,2.1c0,1.5-1.4,1.5-2.5,1.8c-5.8-0.4-11.2-2.7-16.7-4.2\n                        c-12.8-4.3-26.2-6.4-39.1-10.4c-1.5-0.5-3.5-0.1-3.7-2.4C1893.6,331,1894.3,331,1895,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781525"),
                d:
                  "M1382.8,343.7c1.7,10,1.7,20.2,2.1,30.3c-0.6,0.3-1.1,0.1-1.4-0.4c-1.1-2-0.7-4.3-1.1-6.4\n                        c-0.5-1.6-1.8-1.8-3.2-1.5c-10.2,2.2-20-1.2-30-1.7c-2-0.1-3.9-0.5-5.9-0.6c-1.4,0-2.8-0.1-4.1-0.4c-2.9-1.1-5.9-0.4-8.8-0.8\n                        c-1-0.2-2-0.6-2.5-1.5c-0.2-2.4-2.2-2.3-3.7-2.2c-9.1,0.7-17.9-2.4-27-2.5c-6,0-12-2.8-18-4.5c-2.1-4-5.9-3.3-9.4-3.5\n                        c-1.8-0.1-3.6,0.4-5.3-0.5c-1.7-0.9-1.5-1.9,0.5-3.4c-2.5-0.8-5.9,1.6-7.7-1.4c-0.8-1.3,1-2.6,2.1-3.5c3.7-2,7.7-1.6,11.6-1.1\n                        c2.4,1.7,4.6,4,8.2,2.7c1-0.3,2.2,0.3,2.9,1.4c0.3,0.5,0.4,0.5,0.7,0.2c2.5-2,3.7,1.1,5.6,1.3c4.2,0.2,7.4,4.1,12,3.2\n                        c1.2-0.2,2.5,0.1,3.6-0.7c0.5-0.4,1.6-0.9,1.8-0.5c0.9,1.4,1,2.5,3.4,1.1c1.7-0.9,4.4,1.7,7.1,1.1c2.4-0.5,5-0.2,7.5-0.1\n                        c1,0,2,0.2,2.8,0.8c0.6,0.4,0.8,1,0.1,1.6c-2.2,0.6-4.5,0.1-6.6,0.3c0.1,0.1,0.2,0,0.3,0c2.2-0.2,4.4,0.5,6.5-0.4\n                        c0.6-0.8,1.5-2.2,2.2-1.7c3.1,2.3,6.4-1.6,9.4,0.7c0.3,0.2,0.7,0.3,0.9,0.1c3.7-3.5,7-0.4,10.4,0.6c0.9,0.3,1.6,0.2,2.3-0.2\n                        c2.4-1.5,4.4-1.9,7.2,0.1c1.8,1.3,5.6,0.4,7.1-1.5c2.1-2.7,3.1-1.5,4.5,0.1c0.6,0.8,1,1.8,1.8,2.3c1.5,1.1,3,3.2,4.3-0.5\n                        c0.7-1.8,2.5-2.2,3.6-0.3c0.1-1.7-1.8-4.4,0.9-6.4C1381.9,343.5,1382.3,343.5,1382.8,343.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861828"),
                d:
                  "M1385.1,343c0-0.4,0.1-0.8,0.1-1.2c0.7-0.7,1.6-1,2.5-1.1c17.2,0.8,34.4,0.9,51.5,2.4\n                        c9.4,0.8,18.8,1.5,28.2,2.7c2.5,1.3,6.1-0.3,7.7,3.2c-0.9,1.4-2.4,1.9-3.9,1.9c-8.5-0.2-16.4,3.6-24.8,3.6\n                        c-2.1,0-4.3,0.1-6.4-0.3c-3.7-1.7-7.3-2.9-10.9,0.3c-0.8,0.8-2.2,0.4-3.4,0.3c-2.6-0.3-4.5-2.5-7.8-1\n                        c-2.8,1.3-6.5,0.1-9.7,0.6c-5.1,1.2-10-1.9-15.1-0.5c-1.2,0.3-6.9-7.1-6.7-8.4c0.4-2.7,2.5-1.4,3.8-1.6\n                        C1388.6,343,1386.7,344.4,1385.1,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771527"),
                d:
                  "M1386,398c0.6,3.9-1.1,5.5-5,6.3c-16.7,3.1-33.3,6.6-50,9.6c-1.7,0.3-3,2.3-5,1.1\n                        c-0.9,1.1-2.3,1.1-3.5,1.7c-0.4,0.2-0.8,0.4-1.1,0.7c-0.9,0.6-1,1.7-1.5,2.5c-1.5,2.4-2.8,2-3.8-0.4c-0.4-1.1-0.8-2.1-1.6-3\n                        c-1.9-2.2-2.3-4.2,1.3-4.9c1.5-0.3,2.2-1.4,3.3-2.1c0.9-0.6,2.1-1.3,2.7-0.5c4.1,4.9,7.1,0.5,10.6-0.8c-0.6-1.5-2-2-2.7-3.2\n                        c1.5,3-1,4.4-2.5,6c-1.7,1.8-2.3-0.5-3.4-1.3c-1.6-1.2-3.4-1.5-5.5-0.5c-3.4,1.7-6.4,0.3-8.2-3.4c-0.5-2-0.1-4,0.4-5.9\n                        c0.9-3.3,2.5-4.5,6.3-3.3c7.8,2.4,15.8,3.4,24.1,3.4c6.7,0,13.6-0.6,20.3,2.5c3,1.4,7.4-0.6,11.2-1.2c1.1-0.2,2.2-0.8,3.4-0.8\n                        c5.4,0.1,5.4,0.1,5.3-5.1c0.5-2.4,1.6-3.6,4.1-2.2C1386.6,394.4,1385.8,396.3,1386,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE6874"),
                d:
                  "M1382.8,343.7l-0.5,0.1c-6.7-1-13.4-1.6-20.2-1.4c-2.2,0.1-4.3,0-6.3-1c-3.5-2-7.3-0.9-11-1.1\n                        c-1.6,0-3.2,0.6-4.8,0.4c-1.8-0.6-3.9-0.2-5.2-2c0.1-1.6,1.1-2.5,2.4-2.7c2.5-0.5,4.2-1.5,5-4.1c0.8-2.2,3-2.3,5-2.3\n                        c7.9-0.1,15.9-0.3,23.8,0.1c3.6,0.2,6.2-0.2,7.3-4.1c0.3-1.1,1.2-2,2.6-1.7c1.8,3.9,0.1,8.3,1.9,12.2\n                        C1382.8,338.7,1382.8,341.2,1382.8,343.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771624"),
                d:
                  "M1385.1,343c2.6,0,5.2,0,8,0c-1.6,2.6-5.5-0.1-5.7,2.5c-0.1,1.5,3.1,3.1,3.8,5c1.8,5,5.8,0.3,8.6,2.1\n                        c1.8,1.1,5.4,1.3,8.1,0.4c2.7,4.1,1.3,7.2-3.8,7c-4.8-0.2-8.8,1.9-13.2,3c-1,0-2,0-3,0c-0.3,0-0.6,0-1,0\n                        C1387.2,356.2,1385.4,349.7,1385.1,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1385.1,393c-2.2-0.2-3.3,0.7-3.1,3c-2.1,3.1-4.5,2.3-6.4,0.1c-3-3.5,1.3-4.1,2.6-5.9\n                        c2.7-3.2,1.1-6.9,1.4-10.4c0.3-3,0.4-5.8,4.4-5.8c0.3,0,0.6,0,0.9,0C1385,380.3,1385,386.7,1385.1,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C26B74"),
                d:
                  "M1387,342c-0.6-0.1-1.2-0.2-1.7-0.3c-0.4-4.3-0.9-8.5-1.3-12.8c0.1-0.7,0.1-1.3,0.2-2\n                        c2.4-0.1,4.4,0.8,5.7,2.9c0.9,3.3,0.3,6.5-0.1,9.8C1389.5,341.4,1387.9,341.3,1387,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801722"),
                d:
                  "M1391,363c2.7-2.5,6.2-3.3,9.6-3.9c0.5-0.1,1-0.1,1.5,0c4.5,0.5,6.8-1.2,5.9-6c4.1,0,8.1,0,12.2,0\n                        c0-1.4-2.1-1.5-1.2-2.6c0.5-0.7,1.6-0.2,2.2,0.5c3.4,3.8,7.1,3.9,10.7,0.6c3.3-3,4.9,0.6,7.1,1.6c1.1,2-0.4,2.7-1.8,3.1\n                        c-1.7,0.5-3.4,1.1-5,1.9c-3.7,1.8-7.7,2.6-11.9,2.4c-2,0-4.1-0.2-6.1,0.6c-3.7-0.3-7.5,1.7-11.2,0.1c-1.4,0.1-2.9-0.5-4,1\n                        C1396.3,362.1,1393.8,363.5,1391,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951924"),
                d:
                  "M1447,360c1.2,2.1,2.9,1.1,4.6,0.3c0.1,3-3.1,3.4-3.2,6.3c2.8-0.8,4.3-2.9,6-4.7\n                        c3.1,4.1-3.1,3-2.9,6.4c5.2-4.4,9.7-0.9,14.2,1c1.3-1.5-1-2.2-0.1-3.5c2,1,4,1.8,5.5,3.8c1.4,1.8,3.9-1.4,6.1,0.8\n                        c0.7,0.7,3.7-0.7,5.2,1.4c0.1,0.1,1.4-0.4,1.7-0.8c1.2-2.1,1.6-2.4,3.9-0.7c4.3,3.2,9.7,4,14,6.9c-0.8,2.7-3.2,2.6-4.7,1.8\n                        c-2.9-1.4-6.3-1.1-8.9-2.3c-3.3-1.5-6.4-1.2-9.6-1.6c-8.6-1-17.2-1.6-25.6-3.5c-0.8-0.2-1.6-0.5-2.4-0.5\n                        c-9.2,0-18.2-1.8-27.1-3.8c-2.7-0.6-5.7-0.4-8.4-0.1c-3.1,0.4-3-1-2.3-3.2c0-0.5,0.1-1.2,0.4-1.4c2.4-1.3,5.7-2.6,7.5-2.2\n                        c5.3,1.3,10.7,1.2,16.1,2.2c1.1,0.2,1.9,0.3,2.8-0.4c3-2.6,4.6-1.1,5.6,2.4C1444.4,360.6,1444.4,360.6,1447,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A2A"),
                d:
                  "M1447,360c-0.8,0.2-2.1,1-1.4,1.3c3.8,1.7,0.5,3.2,0.1,4.8c-1.2-0.4-1.3-1.4-1.5-2.3\n                        c-0.7-2.9-2-2.9-3.5-0.7c-1.1,1.6-2.2,2.4-4,0.9c-1.5-1.2-3.5-4.5-4.1,0.7c-0.1,0.6-0.9,0.8-1.5,0.1c-2.6-3.1-6.7-2.8-10-3.3\n                        c-2-0.3-5.6,0.7-7.9,2.4c-1.1-0.5-1.5-2.6-3.2-1.6c-1.7,1,1.2,2.2,0,3.7c-1.7-1-3.5-1.7-5.6-1.6c-3.1,0.1-1.8-1.9-1.2-3.4\n                        c3.6-1.1,7.3-0.6,11-1c1.9-1.2,4.2,0.3,6-1c4.2,0.5,8.1-0.9,12-2c4.5-1,8.9-2.2,13.6-2.5c4.4-0.3,8.9-0.8,13.2-1.9\n                        c2-0.5,4.3-1.2,6.2,0.4c-0.3,0.7-0.7,1.3-1,2c-0.3,0-0.7,0-1,0c-2.9,1.2-5.9,1.8-9,2C1452,358.8,1448.8,357.9,1447,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8515C"),
                d:
                  "M1651,379c-5.2,2.5-10.4-0.8-15.7,0c-1.6,0.3-3.9-0.8-4.3,2c-6.9-1-13.2-5.1-19.6-5.9\n                        c-6.9-0.9-10.9-5.5-16.7-7.5c-1.6-0.5-4.2-3.5-5.4,0.8c-0.2,0.8-1.2,0.7-1.6,0.3c-1.3-1.3-0.1-2.4,0.3-3.6\n                        c4.8-3,10.5-3,15.8-4.2c1.6-0.1,3.2-0.1,4.7,0.6c1.8,2.5-0.7,2.1-1.7,2.7c4,4.1,4,4,10,3.8c5.1-0.2,10.3-0.5,15.4,0.3\n                        c0.5,0.1,1.2,0.4,1.4,0.2c4.1-4.9,5.4-0.5,7.1,2.2c0.5,0.7,1.2,1.5,1.9,1.4c4.4-0.8,7.4,4.4,12,2.8c1-0.4,1.8,0.5,1.8,1.8\n                        C1655.5,379.2,1652.3,377,1651,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0626C"),
                d:
                  "M1587,365c-2.3,0.3-4.7,0.7-7,1c-0.2-0.1-0.4-0.2-0.6-0.3c-3.1-0.3-6.2,0.9-9.4,0.4\n                        c-2.5-0.3-4.2-1.2-4-4c0.1-1.5-0.3-2.2-1.5-3.2c-2.9-2.2-4.3-5.4-9-6.2c-3.3-0.6-5.4-6.1-5.7-10.6c1.9-2.3,4.8-1.2,7.1-2.2\n                        c0.8-0.2,1.5-0.3,2.3-0.4c2.1-0.2,4.2,0,6.3-0.2c3.7-0.5,7.5-0.2,11.2-0.8c1.5,0.1,3,0,4.3,1.4c-2.2,4.7-5.4,7.6-9.9,5.9\n                        c1.6-0.2,1.3,3.5,4,3.7c1.5,0.1,13.5,10.2,14.1,11.3C1590.6,363.5,1588.8,364.3,1587,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE5B65"),
                d:
                  "M1587,365c2.1-2.1,3.4-3.9-1.2-4c-1.7,0-2-0.1-1.6-2.2c0.5-2.6-2.3-3.5-4.6-3.8\n                        c-1.7-0.2-3.8,0.4-3.1-2.8c0.3-1.4-1.4-2.1-2.9-1.3c-1.9,1.1-2.6-0.1-2.5-1.6c0.2-2.1,0-3-2.2-1.7c-0.7,0.4-1.5,1.2-1.8-0.2\n                        c-0.2-0.8,0-1.7,0.9-2.1c0.3-0.1,0.6-0.3,0.9-0.2c4.7,0.8,8.5-0.5,10.8-5.1c-0.8,0-1.8,0-2.8,0c-0.3-0.5-0.3-1,0.2-1.4\n                        c1.7-1,3.5-0.9,5.4-0.3c1.9,4,7.4,5.8,6.7,11.5c-0.2,1.6,1.8,2.1,3.5,2.1c2.7-0.1,5.3-0.3,8,0.1c2,0.3,3.4,1.3,1.5,3.3\n                        c-1.9,2.1-1.9,3.2,1.1,3.9c1.1,0.3,1.7,1.6,0.7,2.8c-5.4,0.7-10.5,2.9-16,3C1587.7,365,1587.3,365,1587,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB616B"),
                d:
                  "M1569,368c0-0.3,0-0.7,0-1c1.7-1.5,3.5-1.1,5.4-0.6c0.2,0.2,0.4,0.4,0.6,0.6\n                        C1573.2,368.8,1571,367.7,1569,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0626C"),
                d:
                  "M1580,366c-1.4,1.7-3.3,0.7-5,1l0,0C1576.2,364.4,1578.1,364.9,1580,366L1580,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF6872"),
                d:
                  "M1580,366c-1.7,0.3-3.6-0.7-5,1c-2,0-4,0-6,0c-13,1.8-22.6-3.8-30.4-13.6c-0.7-0.9-2-4.4-3.6-0.4\n                        c-3.3-2.2-6.4-4.7-10.2-6.1c-0.8-0.3-1.3-1-0.8-2c4.3-2.4,9.2-0.9,13.6-2.3c3.4-0.2,6.6-1.4,10.1-0.8c0.9,0.2,1.6,0.5,2.2,1.2\n                        c2.8,0.2,0.5,2.8,1.9,3.9c2.7,2,3,7.5,8.4,5.5c0.2-0.1,4.5-0.6,2.5,2.9c-0.6,1.1,0.6,2,1.3,2.3c2.5,1,3.7,2.4,2.9,5.3\n                        c-0.4,1.6,1.2,2.1,2.6,2.1c2.8-0.1,5.6,0.3,8.3-0.8C1579.3,363.7,1580.9,363.7,1580,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0747A"),
                d:
                  "M1524,346c4.6,0.9,8.9,2.2,11,7c1.5,1.8,2.3,4.1,4.7,5.3c2.4,1.2,1.8,4.7-0.7,5.7\n                        c-0.6-0.4-1.2-0.9-1.9-1.2c0.7,0.5,1.4,0.7,1.9,1.2c1.7,2,5.6,3.5,1.9,7c-1-0.4-1.9-0.8-2.9-1.2c-6-4-12.5-7-19.1-9.8\n                        c-0.1-1-0.4-1.7-1.5-2.2c-7.2-3.2-14.6-5.8-22.6-6.7c-1.4-0.1-4.6,0.8-3.5-2.9c5.5-1.4,11.2-0.2,16.6-1.6\n                        c1.3-0.3,2.6-0.2,3.9-0.7c2.4-0.7,4.8-1.4,7.4-1.4C1520.9,344.7,1522.7,344.6,1524,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A21"),
                d:
                  "M1501,360c5.4-0.9,9.1,3.7,14.4,4.2c5.8,0.6,11.4,3.5,17.2,5.4c-1.8,2.7-4,2.5-6.4,2.2\n                        c-1.5-0.2-3.7-2.1-4.2,1.2c-3.9,0.5-7.7-1.8-11.8-0.9c-0.4,0.1-3.1-1-3.6-2.9c-0.5-2.1-2.4-1.7-3.7-2.3\n                        c-2.4-1.3-2.1-3.7-2.6-5.8C1500.5,360.7,1500.7,360.3,1501,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A20"),
                d:
                  "M1501,360c0,0.3,0,0.7,0,1c-2,1.9-4-1.1-6,0c-0.3,0-0.7,0-1,0c-1.7-0.4-3.3,1.4-5,0\n                        c-6-2.9-12.2-3.1-18.4-0.6c-1.3,0.5-2.1,0.3-3.1-0.5c-2.1-1.5-0.6-3.3-0.5-5c5.3,0.7,10.4-0.6,15.7-0.6\n                        C1489.6,354.5,1494.8,358.6,1501,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1489,361c1.7,1.3,3.3-4.4,5,0c0.5,2,0.8,4.1,2.5,5.6c-1.5,1.6-2.6,0.6-3.1-0.2\n                        c-0.9-1.8-1.3-3.4-4.2-2.9C1487.3,363.8,1488.9,361.9,1489,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1495,361c2-2.3,4,0.7,6,0c2.4,1.4,0.3,4.3,2,6c-1.3-0.1-3.3-0.6-3.2-1.6\n                        C1500.2,361.4,1496.7,362.3,1495,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1454,357c2.7-1.8,5.8-2.3,9-2C1460.5,357.8,1457.5,358.8,1454,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D2737C"),
                d:
                  "M1512,347c-5.9,1.7-12,2.4-18.2,1.8c-1-0.1-1.9-0.1-2.8,0.3c-0.8,1-1.9,1-3,1.1c-0.3,0-0.7,0-1-0.1\n                        c-0.6-0.6-1.3-1.3-2.1-1.3c-5.7,0.1-11.2-1.8-16.9-1.6c-15.1-1.2-30.1-3-45.2-3.4c-11.9-0.4-23.9-1.1-35.8-1.6\n                        c0.7-0.7,1.3-1.4,2-2c2.4-3.3,6.3-1.7,9.3-2.7c0.5-0.2,1-0.2,1.5-0.3c3.6,0.3,7.2,1.1,9.5-3.2c1-1.8,3.2-1.8,5.4-1.4\n                        c8.4,1.6,16.6,2.2,25.2,0.7c4.7-0.8,10.2-0.7,15.1,1.3c5.3,1.9,10.4,3.5,16.4,2.9c6.5-0.6,13-0.2,19.3,3.1\n                        c5.6,2.9,11.8,5.1,18.5,4.9C1510.5,345.3,1511.5,345.7,1512,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87181F"),
                d:
                  "M1465,353c-11,1.5-21.9,3.7-33,4c1.3-3.2,6.1-0.3,7-4c12.3,1.1,24-3.7,36.1-4.1c2.6-1.6,4.9-1,6.9,1.2\n                        C1476.5,352.3,1470.7,352.1,1465,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E9767D"),
                d:
                  "M1488,350.1c0.7-1.3,1.9-1,3-1.1c2,2,5,1.5,7,1.3c6.4-0.6,11.2,5,17.5,4.1c0.4,2.8,4.7,1.7,4.8,4.8\n                        c0,1-0.8,0.8-1.4,0.9c-9.3-2.8-18.3-6.6-27.9-8.3C1489.9,351.5,1489,350.6,1488,350.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76C7B"),
                d:
                  "M1482,350.1c-2.3-0.4-4.6-0.8-6.9-1.2c-2-1.9-5.1,0-7.1-1.9c0.1-0.3,0.2-0.9,0.2-0.9\n                        c5.8,0.4,11.6,0.8,17.4,1.3c1,0.1,1.3,1.4,1.4,2.4C1485.3,350,1483.7,350.1,1482,350.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF4F5A"),
                d:
                  "M1775,369c1.1,2.8,0.2,6,1.4,8.9c0.9,2.2-0.7,3.1-2.6,3c-2.6-0.1-5-0.4-7.6-1.1\n                        c-3.2-0.9-8.5-1.7-8.6,5.3c-4.6-4.8-7.7-1.3-10.7,1.2c-1.4,1.1-2.3,2.8-4,3.7c0-0.3,0-0.7,0-1c1.3-3.4,0.3-3.9-3.3-4\n                        c-5-0.1-10.8,1.7-14.7-3.5c-0.6-0.8-1.3-1.3-2.5-0.6c-1.8,1.1,0.3,2.3-0.2,3.7c-2.6-0.4-3-4.6-6.3-3.7c-2.3,0.6-4.7,2-7.1,0.2\n                        c0.2-2.3,3.9,0.2,3.4-2.6c-0.1-0.3-1.5-0.4-2.2-0.6c-0.2-1.1,0.6-1.6,1.5-2c13.2-2.5,26.5-3.4,39.8-5.4\n                        c6.2-0.9,12.4-1.9,18.7-2.6C1771.7,367.9,1773.5,367.5,1775,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54953"),
                d:
                  "M1711,377c-0.3,0.3-0.7,0.7-1,1c-7,1-14,2-21,3c-4.4-2.1-9.5-1.4-14-3c-3.8-2.7-8.9-2.5-12.5-5.8\n                        c-0.6-2.1-0.4-3.8,2.4-3.2c1.3,0.3,2.2-0.5,3.2-0.8c3.6-2.7,7.2,0.5,11-0.2c6.4-1.2,12.9-1.4,19,1.9c2.7,1.5,5.3,0.5,7.7-0.5\n                        c3.6-1.4,5.3-0.3,6.1,3.2C1712.3,374.2,1712.2,375.7,1711,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54B57"),
                d:
                  "M1663,372c3,2.2,7.4,0.9,10.2,4.4c1,1.3,2.2,0.3,1.8,1.6c-5.3,1.2-10.7-0.5-16,1\n                        c-0.6,0.5-1.2,0.5-1.9,0.3c-0.9-0.5-1.2-1.4-1.1-2.3c-0.3-2.5-2-0.7-3-1c-1.9-0.6-5.6,3.2-5.5-2.3c0-0.2-0.6-0.5-0.7-0.5\n                        c-6.4,2.5-7.6-2.8-10.2-7.3c0.4,4.6-0.3,4.9-4.4,3.6c-5-1.5-10.8-0.8-16.3-0.4c-3.4,0.2-6.6,1.1-8.5-2.8\n                        c-0.7-1.4-2.5-1.1-3.6-1.9c1.3-2.5,4.2-0.5,5.4-2.4c1.7-3.2,5.1-2,7.7-3c1.3-0.2,2.5-0.2,3.8,0.3c0.4,0.2,0.7,0.6,0.9,1.1\n                        c-0.2,0.6-1,0.7-1,1.4c0.2-0.7,0.8-0.8,1.3-1.3c6.1,0.7,12.1-0.5,18.1-0.2c6,0.3,11.7,3.7,15.2,8.4c1.7,2.2,1.3-0.2,1.6-0.2\n                        C1659.2,368.8,1662.7,367.3,1663,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8515C"),
                d:
                  "M1657,379c0.7,0,1.3,0,2,0c-1,0.7-2,1.3-3,2c-1.5,0-2.9,0-3-2C1654.3,377.8,1655.7,378,1657,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD515A"),
                d:
                  "M1657,379c-1.3,0-2.7,0-4,0c-0.7,0-1.3,0-2,0c0.4-3.8,3.4-1.3,5-2C1656.8,377.4,1657,378.2,1657,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1A25"),
                d:
                  "M1922.3,437.9c6.3,2,12.5,4,18.8,6c7.5,0.6,14.3,4.1,21.6,5.6c2.2,0.6,4.4,1.1,6.5,2\n                        c3.7,0.9,7.3,1.7,10.9,3c1,0.6,3.1,0.5,2.9,1.9c-0.3,2.1-2.9,0.3-3.9,1.6c-2.5,0.7-5.9-0.8-7,3c-3.5-1.5-6.3-4.7-10.7-4\n                        c-0.3,0.1-0.7,0-1-0.1c-11.7-6.5-23.6-9.8-36.3-9.9c-2.7,0-5.4-2.8-8.1,0c-6.1-2.5-12.4,1.8-18.5-0.7\n                        c-9.4,5.5-20,0.9-29.8,3.3c-0.2,0-0.5-0.4-0.7-0.6c-0.2-4,1.4-5.7,4.8-4.4c1.6,0.6,2.7,0.5,4.1-0.2c1.4-0.6,3-0.9,4.3-0.1\n                        c4.1,2.5,5.8,0.4,6.8-3.3c0.3,0,0.7,0,1,0c6.6,1.5,12.6-1.5,18.8-2.6C1911.8,435.3,1917.1,438.1,1922.3,437.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A01A24"),
                d:
                  "M1887,441c-0.6,1.8,2.1,4-0.3,5.4c-2.1,1.2-4.3,0.9-6.3-0.9c-1.1-1-3.3-1.1-4.2-0.2\n                        c-2,2.2-2.9,1.9-5.4,0.2c-2.3-1.6-2.7,2-3.8,3.5c-2.2-1.4-4.8-0.1-7-0.1c-5.7,0.1-6-2.9-6-6.9c0.3,0,0.7,0,1-0.1\n                        C1865.7,442,1876.4,444.3,1887,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M2004,477c-1.8,1.3-3.6,2.1-5.9,2.1c-4.9-0.1-7.1,4-8.8,7.4c-1.5,3.1-0.5,1-1.6,0\n                        c-2.2-2.2-1.1,1.4-2.2,1.7c-1-1.8-1-4.7-4.5-3.2c-1.4,0.6-0.7-0.8-0.7-1.4c0-2.9,0-2.6-2.8-2.2c-1,0.1-3.3-1.5-3.3-2\n                        c0.7-4.7-2.2-6.6-5.8-7.6c-1.8-0.5-1.3-1.6-1.5-2.6c0.3,0,0.7,0,1,0c3.3,0.2,6.3,1.4,9.2,2.8c1.7,0.8,3.8,0.8,5.7,0.2\n                        c0,0.3,0,0.7,0,1c1,1,1.5,2,3.6,1.6c5.7-1.1,11.3,1.5,17,1.2C2004,475.8,2004.2,476.5,2004,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851724"),
                d:
                  "M2004,477c-5.1-0.2-10.2-0.4-15.2-1.9c-0.6-0.2-1.3-0.1-1.9,0.2c-3.4,1.5-3.4,1.6-3.9-2.3\n                        c0.7,0,1.3,0,2,0c3.8,0.8,7.7,0.3,11.5,1c3.2,0.6,2.9-1.6,2.2-3.7c-0.3-0.4-0.5-0.7-0.8-1.1c-1.8-2.5-2.7-5,0.7-7\n                        c2.8-0.2,5,1.2,6,3.4c1.4,3.1,4.1,4.4,6.6,6.1c0.2,2.1-1.4,2.9-2.7,4C2007.1,476.4,2005.9,478.3,2004,477L2004,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911927"),
                d:
                  "M1998,463c-1.3,2.3-0.9,4.3,1,6c-0.5,0.4-0.8,0.9-1.1,1.4c0.4-0.4,0.6-1.1,1.1-1.4\n                        c2.7,1.5,1.5,3.6,0.9,5.5c-0.9,2.6-2.6,0.8-4.1,0.6c-3.7-0.4-7.4-0.5-10.8-2.1c5.5-0.6,9.2-5.2,8-10c-1.5-1.9-4.5-3.5-1.6-6.5\n                        C1997.7,457.1,1999,458.3,1998,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6212B"),
                d:
                  "M1991,457c0.1,2.2,0.9,4.2,2,6c-4-3.4-8.7-5-14-5c0.7-1.3,2.1-0.7,3.2-1.3c-0.7-0.6-1.4-1.1-2.2-1.7\n                        c0-0.6,0.6-0.7,1-1c1,0,2,0,3,0C1986.5,454.4,1990,452.7,1991,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A41B2E"),
                d:
                  "M1981,469c-0.3,0-0.7,0-1,0c1.9-2.1,3.8-4.3,6.9-1.9c1.1,0.8,1.4,2,0.7,3c-0.9,1.2-1.8,0.3-2.3-0.6\n                        C1984,467.2,1982.4,469.2,1981,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72B39"),
                d:
                  "M1874,423c0.3,1.3,3.5,1.3,2.3,2.3c-2.5,2-3.5,6.5-8.1,5.3c-1.9-0.5-4.2-1.9-5.2,1.4\n                        c-2.6,1.2-5.7-2.7-8,1c-1.1,1.2-2.2,2.4-4,1c-0.3,0-0.7,0-1,0c2.2-2.5,5.4-3.3,8-5c3.9,0.5,7.5-0.2,10.9-2.3\n                        c0.3-0.2,0.7-0.4,0.7-0.5C1868,420.8,1872.5,424,1874,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC5762"),
                d:
                  "M1807,417c0-2-0.7-3.9,0-5.9c0.3-1,0.6-2.1,1.8-2c10.2,1.3,20-3.8,30.3-2.1c0.7,4.4,4.5-0.2,6,2\n                        c0,4-1.9,7-5.4,9.5c2.2,0.9,3.6,0.3,5.2-0.6c2.6-1.5,2.1,0.8,2.3,2.1c-0.8,0.1-1.9,0.4-1.4,1.4c1.8,3.6-0.3,2.3-2.1,1.9\n                        c-2.2-0.6-4.8-3.3-6.5,0.7c-7.9-1.9-15.7-4.6-24-5C1811,418.3,1808.7,418.5,1807,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC5762"),
                d:
                  "M1846.9,420c1,0.2,2.4-0.4,2.5,0.9c0.1,1.3-1,0.8-1.6,0.3C1847.5,420.9,1847.2,420.4,1846.9,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC5762"),
                d:
                  "M1842,425c-1.1,0-2.3,0.2-3-1C1840.7,422.2,1841.2,423.9,1842,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1387,549c0.3,0,0.7,0,1,0c-5,8.2-2.2,17.6-4,26.4c-0.4,1.9,0.7,4-1,5.7c-1.5,2.4,0,3.3,2,4v0\n                        c0,0.7,0,1.3,0,2c-2.7,1.6-5.3,0.2-7.6-0.7c-4.3-1.7-8.7-3-13.3-3.7c-1.5-0.2-3.3-0.4-4.1-1.6c-1.4-2.2-2.7-1.4-4.3-0.5\n                        c-2.6,1.5-5,1.3-8,0c-3.5-1.6-7.5-2.2-11.5-2.2c-3,0-6,0.5-8.9-0.7c-1.4-1.1-2.8-2.2-3.6-3.9c2.7-3.8,7.3-4.2,11.2-5.7\n                        c12.9-5.1,25.8-10.3,38.9-15C1378.1,551.4,1382.4,549.7,1387,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33744"),
                d:
                  "M1327,577c6.3,0.2,12.5,0.4,18.8,0.6c0.3,0,0.7,0.1,0.9,0.3c3.6,4.4,7.3,2.6,10.8-0.1\n                        c0.8-0.6,1.2-0.2,1.4,0.4c0.8,2.7,3.2,2.8,5.2,2.9c7.3,0.7,13.7,4.7,20.8,5.8c-0.2,2,0,5.1-2.3,5.3c-3.9,0.3-8.4,0.4-10.2-4.4\n                        c-1.2-3.3-4.4-3.9-5.8-2.6c-2.7,2.4-3.2-0.5-4.5-1.1c-1.2,1.5,1.5,3.2-0.4,4.1c-1.9,1-2.6-1.1-3.2-2.2c-1.3-2.1-2.4-1-3.6-0.2\n                        c-3.4,2.5-6.2,3.1-10-0.3c-2.3-2-6.6-1.1-10-0.7c-3.4-5.5-9.5-4-13.4-2.8c-4.1,1.3-7,0-10.3-0.7c-1.2-1.8,0.4-2.2,1.5-2.5\n                        c1.2-0.3,1.6-0.7,1.1-1.9c0.6-0.9,1.5-1.1,2.4-1.3c2.2-0.2,4.4-0.2,6.5,0c1.3,0,2.2,1.5,3.6,1.3\n                        C1326.6,577.1,1326.8,577,1327,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912D3B"),
                d:
                  "M1317,585c1.5,3,4.9,2.3,7,2.6c9.9,1.4,19.8,2.6,29.6,4.8c0.8,0.2,1.8,0.7,2.4,0.4\n                        c5.2-2.8,3.1,1.2,3.1,3.2c-3.9,1.7-7.3-0.7-10.9-1.2c-2.1-0.3-4.2-0.7-6.3-0.7c-8.6-1.3-17.1-3.5-25.9-2.8\n                        c-1.7,0-3.4,0-5.1-0.3c-0.5-0.1-0.9-0.2-1.4-0.4c-2.6-1.6-5.6-1.2-8.5-1.5c-0.5-0.1-1-0.2-1.5-0.3c-2.6-1-6.1,0.2-7.6-3.3\n                        c2.8-3.3,6.6-1.3,9.8-1.9C1306.8,584,1311.9,584,1317,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A03644"),
                d:
                  "M1317,585c-4.7,1.5-9.3-0.4-14,0c-1.1-2,0.6-3.2,1.4-4.6c0.4-0.2,0.9-0.4,1.4-0.5\n                        c1.9-0.2,3.7-0.3,5.2,1.1c6.5,0.5,13-0.1,19.4-1.3c2-0.4,4.7,2.1,4.6,5.3c-0.1,0.3-0.2,0.6-0.2,0.9\n                        C1329,583.1,1323,584.1,1317,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892837"),
                d:
                  "M1342,594c3.7-2.5,7.6-0.1,10.8,0.6c1.9,0.5,4.7-0.9,6.2,1.3c0.3,0,0.6,0,1,0c2.4,0.3,4.9,0.6,7,2\n                        c-2.7,0.9-5.3-0.5-8,0c-4.3,1.5-8.2-0.7-12.4-0.9c-0.5-0.1-0.9-0.2-1.4-0.3c-1.2-0.6-2.7-0.8-3.4-2.2\n                        C1341.9,594.4,1342,594.2,1342,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1623"),
                d:
                  "M1309,609c-0.7,0.7-1.3,1.3-2,2c-8.9,1.3-17.8,0-26.8-0.1c-6.3-0.1-12.6-0.6-18.9-0.5\n                        c-19.6,0.4-39-3.4-58.6-2.1c-1.7,0.1-3.3-0.3-4.7-1.4c-1.7-1.8-3.8-1.7-6-1.4c-0.5,0-0.9-0.2-1.3-0.6c-0.8-2.9,0.2-5.5,3-5.6\n                        c4.4-0.2,5.9-3.4,8.1-6.2c1-1.2,1.8-3.4,3.8-2.2c1.8,1,0.9,3,0.3,4.5c-0.6,1.6-0.6,2.9,0.1,4.7c1.3,3.2,0.3,5.3-2.9,4.3\n                        c1.2,0.1,2.2-0.3,3.7-2.4c1.7-2.3,3.7-6.2,7.8-6.4c0.6,0.7,0.9,1.6,1.5,2.3c-0.5-0.7-0.9-1.6-1.5-2.2c0.9-2.3,2.8-1,4.3-1.2\n                        c1.4-0.2,2.6-0.7,3-2.2c0.4-1.9-1.2-1.7-2.3-2.4c-4.6-3.1,0.9-3.7,1.5-5.5c1.7-1.2,3.7-0.9,5.2-0.1c1.9,1,3.2,1.5,4.9-0.4\n                        c1.1-1.2,2.8-0.3,4,0.7c1.9,1.6,4.1,2.8,5.8,4.2c-0.5-1.1-3.4-1.7-1.9-3.7c1.2-1.6,3.3-1.1,5.1-0.7c0.8,0.2,1.3,1.3,1.6,1.4\n                        c4.1,0.6,4.1,0.5,1.9,4.4c-0.3,0.6,0.8,0.5,0.2,0.3c-0.1,0,0-0.2,0.1-0.5c0.5-1.1,1.2-2,2-2.9c1-1.1,1.7-2.9,3.5-2\n                        c1.8,0.9,2.3,2.5,1.2,4.4c8.6-3.8,11.9-2.5,14.3,5.4c-4.5,4.3-10.7,4.7-16,7.4c-2.7,0.7-5.6,0.8-8.3,2.9\n                        c7.5,1.3,14.7,0.8,22,0.7c3.1,0,6.2-0.2,9.3,0.4c3.4,1,6.9,0.7,10.4,0.6c6.6-0.2,13.1,1.6,19.7,1.2\n                        C1307.4,607.7,1308.3,608.2,1309,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M1309,609c-10.1,0.5-20.2-1.7-30.3-1c-1,0.1-2-0.1-2.7-1c6.4-0.7,12.3-3.7,19.5-2.3\n                        c3.9,0.8,9.2,3.2,13.4-0.9c-0.9-2.3-4.6-3.6-4.5-7.1c0.5-0.6-0.9-0.3-0.3-0.2c0.3,0,0.4,0.2,0.1,0.5c-3.6,3.8-4,3.7-7.9,0\n                        c-1-0.9-1.7-3.2-4.2-1.6c-1.4,0.9-1.8,0.2-3.7-3.7c0.2,3.9-1.3,5.1-4.5,3.5c-2-1-4.2-1.9-6-3.3c2.5-4.9,7.5-4.4,11.7-5.6\n                        c0.5-0.1,1-0.1,1.5,0c2.8,1.4,6,1.2,9,1.7c0.3,0,0.7,0,1,0c2.8,1.6,6.3,0.1,9,2l0,0c1.7,1.1,3.6,0.2,5.4,0.6\n                        c0.5,0.1,0.9,0.2,1.4,0.3c5,0.8,10.1,1.5,15.1,2.1c0.5,0.1,0.9,0.3,1.3,0.5c3.7,1.8,8,0.8,11.8,2.4l0,0\n                        c1.3,0.9,3.3,0.8,3.9,2.7c0.3,1.1,0.5,3-1,2.5c-2.9-1.1-3.5,0.8-4.9,2.4c-2.3,2.6-7,2.9-10.3,0.9c0.1,0.7-0.2-0.4-0.1-0.1\n                        c0.5,1.7,1,3.3-0.6,4.6c-1.6,1.3-2.2-0.5-3.1-1.3c0,0,0.3,0.4,0.2,0.7c-0.2,1.2-1.1,1.2-1.9,1c-1.5-0.3-3-0.2-4.4,0.1\n                        c-3.2-0.3-6.5,0.6-9.7-0.5C1311.7,609,1310.3,609,1309,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E171E"),
                d:
                  "M1191,605c0.3,0,0.7,0,1,0c2-0.8,4-0.8,6,0c0.8,1.8,2.4,2.1,4.2,2c22.7-1.5,45.1,2.8,67.8,2.1\n                        c11.7-0.3,23.5,0.6,35.2,1.1c0.6,0,1.2,0.5,1.8,0.7c7.1,0.1,14.2,0.3,21.2,0.3c1.6,0,2.6,0,2.8,1.8\n                        c-7.8,1.8-15.7,1.6-23.7,0.7c-7.4-0.9-14.9-0.2-22.4-0.3c-3.9,0.1-7.7-0.5-11.6-0.6c-11.6-0.6-23.2-0.5-34.8-1.3\n                        c-19-1.3-38.1-1.5-57.1-2.8c-6.6-0.5-13.3,0.2-19.9-0.6c-4.2-1.3-8.5-0.6-12.7-0.7c-26.3-1.7-52.6-2.7-78.9-4.4\n                        c-0.9-0.2-1.7-0.7-2.4-1.2c-0.8-0.8-1.9-1.6-1.3-2.9c0.6-1.2,1.8-1.5,3-1.1c10.1,3.3,20.5,1.8,30.7,1.6\n                        c16.5-0.3,32.7,2.8,49.1,2.4c9-0.2,17.9,0.3,26.9,0.1c1.7,0,3.4-0.3,4.7,1c0.9,0.9,0.8,0.9,3.3,0.8\n                        C1186.3,603.5,1188.9,603.2,1191,605z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1324,609c1.2-1.9,2.7,0.6,4.1-0.4c-0.2-1.1-1.7-2-0.6-3.6c1,1.3,1.9,2.8,3.6,3.6\n                        c1.8-1.5,0.5-3.5,1.3-5.6c1.9,3,4.4,1.6,6.9,1.3c3.8-0.5,4.2-3,4.3-5.8c2.1-0.3,3,1.3,4.4,2.4c0.6-2.9-2-3.3-3-4.8\n                        c4.8-0.1,9.4,1.1,14,2c3.3,2.3,7.8,1,11,4c2.5,2.3,2.1,2.9-0.3,5.1c-6.6,6.1-14.4,3.2-21.7,3.9c-4.3-1.4-8.8,0.4-13-1\n                        c-3.7,0-7.3,0-11,0c-0.4-0.2-0.5-0.4-0.4-0.6C1323.8,609.1,1323.9,609,1324,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1284,612c15.7-0.7,31.3,1.5,47,1c2,0.4,4.2-0.6,6.1,0.9c-2,0.4-3.9,1.2-6.1,0.3c-2-0.8-4.2-0.3-5.3,2\n                        c1.2,1.4,3.4,0,4.4,1.7c-10.7-0.4-21.5-0.8-32.2-1.2c-0.6,0-1.2-0.5-1.8-0.8c-1.8-3.3-5.2-1.1-7.6-2c-0.2-0.1,0.5,1.5-0.4,2\n                        c-4.7-0.4-9.5,1.1-14-1c1.1-1.7,2.8-1.4,4.5-1.4C1280.4,613.7,1282.4,613.5,1284,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1623"),
                d:
                  "M1335,610c4.3,0.5,8.8-1.2,13,1C1343.7,610.5,1339.2,612.2,1335,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1623"),
                d:
                  "M1324,609c0,0.3,0,0.7,0,1c-3.7-0.5-7.5,1.1-11-1C1316.7,609,1320.3,609,1324,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33744"),
                d:
                  "M1385,585c-3.1-0.1-4-1.4-2-4C1382.6,582.9,1383.9,583.9,1385,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1387,502c0,0.7,0,1.3,0,2c-1.1,2.3-0.1,4.8-0.7,7.1c-0.6,2.3-0.2,4.6-0.3,6.9c-0.1,1.2,0,2.8-1.2,2.9\n                        c-1.8,0.2-1.7-1.6-1.9-2.9c-0.2-0.9,0.1-1.9-0.2-2.8c-5.6,2.2-5.6,2.2-6.1-2.4c-0.3,1.8,0.5,3.8-1.4,5.2\n                        c-1.4,0.4-1.7-0.6-2-1.6c0-0.1-0.1-0.6-0.2-0.2c-1.1,3.7-2.9,2.3-4.6,0.6c-1.2-1.2-2.4-2.3-4-3c-1.2,0.6-0.9,2-1.5,2.9\n                        c-0.7,1.1-1.1,2.6-2.7,2.7c-1.7,0-2-1.5-2.4-2.7c-1-2.8-2.3-3.9-5-1.6c-1.3,1.2-3.3,1.5-4.5,0c-3-3.8-6.9-2-10-1.1\n                        c-4.2,1.1-7.7,2.8-12.8,2.1c-4.8-0.7-10.7-2.8-15.6,1.2c-0.4,0.3-1.2,0.6-1.4,0.4c-4.6-4.5-10.4,0.6-15.3-1.9\n                        c-1.1-0.6-2.9-0.7-3.3-0.1c-2.8,4-5.3,0.9-7.7-0.1c-4.3-1.8-8.9,0.2-13.3-1c-2.1-0.6-4.3-0.6-6-2.2c-1.2-1.9-0.5-3.8-0.2-5.7\n                        c0.1-0.5,0.4-0.9,0.8-1.3c1.7-1.3,3.7-1.5,5.7-1.6c3.6-0.4,7.7,1.4,10.3-2.6c0.4-0.3,0.8-0.5,1.2-0.6c1.9,0.7,3.9-0.6,5.8,0.5\n                        c0.8,0.9,0.5,3.3,2.4,2.6c4.8-1.8,9.8,0.2,14.6-0.7c2.7-0.5,5.4,0.7,8.2,0.8c6.2,0.3,12.2-0.3,18.3-1.1\n                        c1.5-0.2,2.9,0.5,4.3,1.1c2.7,1.1,5.4,1.9,7.5-1.2c0.9-1.3,3-1.4,3.5-0.5c1.8,3.4,5.2,1.6,7.4,2.8c2.1,1.1,3.2,0.9,4.4-1\n                        c0.5-0.8,1.7-1.4,2.4,0c1.2,2.2,4.2,2,5,1.6c2.9-1.7,6.2-0.2,9-1.9c0.9-0.6,2.3-1,3.3,0c3.1,3.1,4.8,0.5,6.2-1.7\n                        C1384.6,498.8,1385.8,499.9,1387,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF313D"),
                d:
                  "M1387,502c-0.9,0.8-2.7-3.3-3.2,0.7c-0.4,3.3-5,1.6-6,5.2c-0.3-4.6-3.3-4.8-5.1-3.1\n                        c-2.9,2.6-6.9-0.8-9.3,2.7c-1.2,1.8-0.4-3.7-3.6-1.2c-2.7,2.1,1.2-2.6-1.5-2.4c-1.1-0.2-1,1-1.3,1.8c-0.2,0.6-0.4,1.3-0.8,1.7\n                        c-0.3,0.3-1.3,0.5-1.3,0.3c-2.6-4.2-6.8-0.8-9.9-2.3c0,0,0.2-0.9,0.4-1.2c0.7-0.7,1.3-1.2-0.2-1.5c-0.9-0.1-2.2-1.3-2.7-0.1\n                        c-2.3,6.1-5.7,3-9.2,1.5c-2.5-1-5.5-2-6.7,2.6c-2-2.3-3.5-6.1-6.1-1.2c-0.5,1-1.3,0-2-0.2c-3.2-0.7-6.3-1.8-9.6-0.4\n                        c-1.1,0.5-2.1,0.9-3-0.5c-1.1-1.7-2.1-1.9-3.1,0.3c-0.5,1.2-1.7,1.7-2.1-0.4c-0.1-0.4-0.4-0.8-0.6-1.2c-2.7,3.8-6.2-0.3-9.2,1\n                        c-4.6,2.1-5.3,1.5-4.8-3.4c2.7-1.8,5.7-2.7,8.8-3.3c5.2-0.6,10.6,1.7,15.5-1.2c1.6-0.6,3.9-0.8,4.6,0.5\n                        c1.6,3.3,3.2,1.7,4.9,0.5c2.9-2,6.8,0.2,9.3-2.1c1.8-1.6,0.6,4.3,2.3,0.6c0.4-0.3,0.8-0.5,1.3-0.5c4.2,1.4,8.7,1.6,12.9,2.1\n                        c2.7,0.4,6.5-0.2,9.8-1.1c0.5-0.1,1.1-0.5,1.4-0.3c5.5,4.6,10.8-0.8,16.2-0.5c2.8,0.2,5.7,2.4,8.6,0.4c0.9-0.3,2-0.1,2.9-0.5\n                        c4-2.1,4,0.3,3.6,3.2C1388,500.1,1388.2,501.3,1387,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62835"),
                d:
                  "M1388,499c-0.7-2.3-0.6-2.1-2.7-1.5c-1,0.3-2.2-0.3-3.3-0.5c-1.1-0.8-2.2-1.6-3.6-1.4\n                        c-8,1.2-15.6-0.8-23.4-2.2c-1.8-0.3-3.7,0.2-5.4,0.7c-2.2,0.7-4.2,0.3-6.3-0.4c-4.2-1.4-8.2-3.5-12.8-1.2\n                        c-1.2,0.6-3.4,0.5-4.2-1.6c-0.1-2.5,1.5-2.8,4.2-2.7c-2.6-0.4-4.5-0.4-4.9-2.7c0.6-1.4,1.8-1.6,3.1-1.8\n                        c4.7,1.2,9.2,0.1,13.7-0.7c2.9-0.4,5.6-0.4,7.7,2.1c0.9,1.1,2.4,1.5,3.7,0.8c3.5-1.8,7.6,2,10.8-1.3c2.9,3.1,6.4,0.2,9.5,0.8\n                        c6,1.1,10-1.6,12.3-7c0.2-0.4,0.7-0.6,1.3-0.6c1.1,0.8,0.1,2.4,1.1,3.2c0,2,0,4,0.1,6c0,4,0,8-0.1,12\n                        C1388.6,499,1388.3,499,1388,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3E4A"),
                d:
                  "M1387,549c-4.9,4.1-11.3,4.4-16.9,6.7c-15.3,6.3-31,11.4-46.1,18.3c-1.9,3.2-5.2,1.9-7.9,2.5\n                        c-2.9-0.3-2.9-0.3-1.5-2.8c0.1-0.2-0.8-0.3-1.1-0.7c-0.9-3.2-0.3-4.9,3.5-4.2c4.1,0.7,7.7-1.7,9.1-5.9\n                        c0.6-1.6,1.2-3.2,3.3-3.1c1.3,0,2.9,0.1,3.4,1.5c0.5,1.3-0.6,2.1-1.5,2.8c-0.5,0.4-1.1,0.7-1.2,1c7.3-0.9,12.9-7.6,21.2-6.9\n                        c2.8,0.2,6-0.8,5.7-5.2c-0.2-2.3,1.7-3.1,3.3-2c4.9,3.3,8.4-0.1,12.3-2.1c0.7-0.4,1.2-1.5,1.9-1.6c6.1-0.5,8.6-4.1,9.4-9.8\n                        c0.1-1,0.8-2.2,0.8-3.5c0.1-3-0.3-6,0.4-8.9c0.2-0.5,0.5-0.8,0.9-1.1c3.3,5.8,1.4,12.1,1.4,18.1\n                        C1387.4,544.4,1387.1,546.7,1387,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63844"),
                d:
                  "M1386,524c0,0.3,0,0.7,0,1c-1.8,1.3-4.1,0.5-6,1.4c-1.2,0.5-2.5-0.1-2.6-1.4c-0.3-2.3-2.3-3.9-2.4-6.3\n                        c0-0.2,0-0.5,0.1-0.7c0.3-1.7,1-3.4,0.2-5.3c-0.4-1-0.8-3.1,1-3.2c1.6-0.1,2.3,1.7,2.2,3.3c-0.1,1-2,2-0.3,2.9\n                        c1.4,0.8,1.8-0.8,2.3-1.8c1.2,0.6,3.7-1.2,3.8,1.9c0,1.4-0.5,2.9,0.6,4.3c1.3-2.9-0.9-6.3,1.4-9.1c0.7,0.5,0.3,1.5,1,2\n                        C1387,516.7,1387.3,520.4,1386,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF313D"),
                d:
                  "M1387,513c-0.8-0.4-1-1.2-1-2c0.9-2.2-1.9-5,1-7C1387,507,1387,510,1387,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881927"),
                d:
                  "M1389,481c-1.1-0.7-0.9-1.9-1-3c-2.3-2.9-5.5-1.1-7.8-0.6c-7.1,1.5-14.2,1.3-21.3,0.7\n                        c-2.9-0.6-5.6,0.3-8.3,1.1c-1.9,0.6-3.8,1.3-5.8,0.2c-1.7-1.8-0.9-2.9,1-3.4c1.5-0.4,3.1-0.9,4.7-1.1\n                        c10.5-1.1,20-5.7,30.3-7.7c1.8-0.3,3.4-1.6,5.2-0.1c1-0.6,2-0.7,3,0.1C1389,471.7,1389,476.4,1389,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1215,454c-0.1,1,0.2,2.3-0.3,2.9c-1.6,1.8-1.1,2.2,1.1,2.7c2.1,0.5,4.2,6.5,3.1,8c-0.7,1-1.9,1.9-3,1\n                        c-1.2-1-2.3-2.5-2.8-3.9c-0.3-0.9,2.5-1.8,1.1-3.2c-1.6-1.6-2.9,0.8-4.5,1c-0.2-1-0.1-2.2-0.6-2.7c-1-1.1,0.2-3.6-2-3.4\n                        c-0.7,0.1-1.4,1.8-1.1,3.6c0.4,1.7-1.7,0.9-2.3,0.3c-2.7-2.5-4.7-3.4-7.9-0.1c-1.5,1.5-5.6,2.6-7.5-1.5\n                        c-0.8-1.8-1.4-2-2.2,0.4c-0.8,2.4-3.6,0.1-5.7,1.3c-2.7,1.6-1,2.2-0.3,3.3c-2.5,1.6-3.9-2.4-6.7-1.1c1.6,1.9,3.6,2.9,5.7,3.8\n                        c0.7,0.3,0.8,1,0.5,1.7c-0.2,0.6-0.9,0.7-1.2,0.3c-2-3-3,0.7-4.5,0.7c-1.8,3.9-5.1,4.8-8.9,4.8c-12.8-0.1-25.7-1.5-38.5-0.6\n                        c-11.1,0.8-22.3-0.4-33.4,0.9c-2.8,0.3-5.8,0.3-7.1-3.1c-0.3-1.4-0.3-2.7,0.3-4c0.9-1.6,2.2-2.3,4-2.5\n                        c7.7-0.9,15.1-3.2,22.7-4.7c9.6-1.4,18.9-4.2,28.5-6.1c11.7-2.8,23.5-5.5,35.3-7.8c2-0.4,3.8-1,5.7-1.5\n                        c11.8-1.6,23.3-5,34.9-7.4c1.8-0.4,3.5-1.1,5.4-0.4c3,1.9,3.4,4.5,1.6,7.2c-1.4,2.1-6.5,2-8.7-0.1c-1.4-1.3-2.1-0.5-2.8,0.5\n                        c-2,2.9-5.1,3.5-8.6,4.3C1208.7,449,1211,453,1215,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C28"),
                d:
                  "M1087,471c1.2,2.6,3.5,2,5.7,1.9c7.3-0.3,14.7-0.6,22-0.9c1.5-0.1,3-0.3,4.3,0.7\n                        c1.6,1.2,3,2.3,3.9-0.8c0.2-0.8,1.3-1,2.2-0.7c6.2,2.3,12.4,0.6,18.6-0.2c2.7-0.3,5.3,0.3,7.8,1.1c6.5,1.9,12.8,0.1,19.2-0.4\n                        c1.7-0.1,1.8-2.4,3.3-2.7c-0.5,5.6,4.4,2.8,5.7,2.7c4-0.3,7.8,0.8,11.7,0.9c7.2,0.1,14.5,1,21.7-0.6l0,0c2,0.7,3.9,0.1,5.9,0\n                        c1.7-0.1,4.2-3.5,4.9,1.2c0.1,0.9,1.1-0.3,1.5-0.2c2.5,0.4,5.4-2.3,7.5,1c0.2,0.3,1.4,0.3,1.9,0c5.6-3.8,11.7-0.8,17.6-1.4\n                        c3.5-0.3,6.9-0.7,9.9,1.5c0.3,0.3,0.5,0.8,0.6,1.2c0,2.3-0.5,4-3.5,3.1c-5.5-1.7-10.7-1.3-15.5,2.1c-4.2,3.4-8.7,2.9-13.4,1.4\n                        c-2.4-2.7-4.4,0.2-6.6,0.5c-0.5,0-0.9-0.2-1.2-0.6c-2.5-2.5-6.4,1.2-8.8-2c-5.9,2.2-11.7-0.8-17.6-0.2\n                        c-11.5,1.2-23.1,0.2-34.7,0.8c-0.7,0,0.2,0-0.5,0c-1.7,0-3.4,0.1-3.3-2.3c0.1,1.4-0.2,2.5-1.7,3.2c-1.8,0.8-3-1.5-4.7-0.6\n                        c-2.5,0.5-4.9-1.2-7.4-0.3c-6.3,2.2-12.8-0.1-19.1,0.9c-0.5,0.8-1.2,2.2-2.1,1.7c-4.9-3-10.8-0.1-15.6-2.9\n                        c-1.2-0.7-2.9-0.7-4.1,0.7c-2.8,2.8-6.3,2.9-9.5,1.8c-2.5-0.9-5.4,0.1-7.5-2c-1.8,4.6-6.2,1.2-9,2.8c-0.7,0.4-1.7,0.6-2.4,0.2\n                        c-7-3.8-14.5-1.2-21.8-1.7c-2.2-0.1-4.8,0.7-5.5-2.5c3.8-2.2,8.1-2.6,12.2-3.5c1.4-0.3,3,0,4.3-1c6.8-1.6,13.5-3.6,20.6-2.9\n                        C1085.2,471.9,1085.7,470.2,1087,471z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1327,441c0,2,0.2,4,0,6c-0.6,4.7,3.2,4.7,6,5.8c0.5,0.2,1.1,0.4,1-0.9c-0.2-2.9,2.5-1.4,3.7-2.2\n                        c1.9,3,5.1,0.8,8.1,2.2c-3.4-3.3-2.7-5,1.3-6c-0.1,3.6,1.5,7.7-4.9,7.3c-2.9-0.2-5.1,4.7-9.3,1.6c-1.5-1.1-4.8-2.9-6.4,1\n                        c-0.7,1.7-2.3,0.5-3.6,0.5c-4.7-0.2-9.8,1.7-13.6-2.8c-0.1-0.1-0.4-0.2-0.4-0.2c-3.6,3.9-7.1-0.4-10.6-0.1\n                        c-1.5,0.1-3,0.8-2.1,3.4c0.4,1,1.6,3.1-0.2,4.5c-1,0.8-1.6,2.2-3.3,1.2c-2.1-1.2-0.5-2,0.2-3c0.5-0.7,1.5-1.5,0.6-2.7\n                        c-1.7-0.2-1.7,1.8-2.8,2.4c-0.7,0.3-1.8,1.1-2.2,0.8c-2-1.6-3.3-4.2-6.8-2.9c-2.7,1-5-1.2-7.2-2.5c-2.4,0.3,0.7,4.2-2,3.3\n                        c-1.6-0.6-4.6-1.4-4.4-4.3c0.2-3.7-2.4-4.5-5-5.3c-1.9,1.2-2.8,0.1-3.3-1.6c3.8-1.4,2.7-6.9,6.9-8c0.5-0.2,0.9-0.3,1.4-0.3\n                        c4.8-2.2,9.8-2.1,14.9-1.3c4.4,0.7,8.4-1.3,12.6-1.8c1.8-0.4,3.7-0.4,5.6-0.1c7,1.1,13.8,3.5,21,3.7\n                        C1323.9,438.7,1326.1,438.7,1327,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1338,423c2.6-0.5,4.3,1.1,6.4,2.2c3.7,1.9,7.8,0.9,11.7,0.5c1.5-0.1,2.1-0.6,2.5,1.4\n                        c0.2,1.2,2.5,1.8,3.4,1.3c3.8-2.2,7.2,0.8,10.8,0.6c3.5-0.2,1.5,4,4,5.3c1-1.2,1.1-4.2,4-3.3c2.7,0.9,3.2,2.9,3.3,5.5\n                        c0.1,2.5,0.9,4.9,0.9,7.4c0,3.1-0.7,5.3-5.1,4.2c-4.4-1.1-9.2-2.4-13.8-0.1c-6.8,0-13.3-1.9-19.8-3.4\n                        c-6.1-1.4-12.4-1.5-18.2-3.6c-2.6-5-8.1-3.4-12.1-5.3c-1.8-0.9-4.4-0.3-5.6-2.5c-0.4-1.1-0.6-2.2-0.8-3.4\n                        c-0.6-2.8-0.1-4.5,3.4-3.9c2.5,0.4,5.3,0.8,7.2-1.9c0.4-0.6,1.3-0.7,1.8-0.2c1.8,2,3.7,1.3,5.8,0.4c0.9-0.4,2-0.2,2.9,0.2\n                        C1334.3,425.6,1334.5,425.6,1338,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1215,454c-1.5,0-3,0.2-4.5-0.1c-1.1-0.1-4.5,1.1-1.7-2.2c-1.9-1.1-3.5-3-6-2.1\n                        c-0.1-1.9,1-2.3,2.3-2.8c2.6-0.9,5.6-0.9,6.7-4.5c0.5-1.6,3.1-1.8,4.9-1.2c2.4,0.8-0.9,2.5,0.3,3.6c8-3,8-3,5.9-7.8\n                        c2-2.2,4.9-2.1,7.5-2.9c0.5-0.1,1-0.2,1.5-0.3c1.2-0.1,2.4-0.4,3.6-0.8c3-0.4,5.8-1.7,8.9-0.9c1.5,0.9,4.2,1.3,2.1,4.1\n                        c-0.2,0.3-0.1,0.4,0.1,0.5c0.5,0.1,0.9,1.4,1.5,0.4c1.9-3.4,4.2-1.5,6.4-0.5c1.5,0.7,3,1.4,4.8,1c1.6-0.4,3-0.2,3.8,1.5\n                        c0.8,1.8,0.3,3.2-1.3,4.3c-1.1,0.7-2.1,1.7-2.6,2.9c-1.4,1-3.1,1.2-4.4,1.6c1.3,0.3,4.2-1.7,4.1,0.4c0,1.6-0.1,4.5-2.2,5.9\n                        c-1.3,0.8-3,2-4.1-0.4c-0.3-0.6-0.5-1.4-1.3-1c-4.5,2.6-4.2-1.4-4.7-3.6c-0.7-0.3-1-0.2-1.3,0c-1.6,1.3,0.7,5.2-1.9,4.8\n                        c-2.7-0.4-5.9-1.5-8-4.1c-2.4,0.6-1.7,7-6.6,3.9c-1.9,2,2.3,5.5-1.6,7.1c-0.8-1-3.3,0.6-3-2c0.3-2.4,1-4.8,1.5-7\n                        c-1.1,2.1-3,1.9-5,1.3c-1.4-0.4-2.9-0.5-4.3-1c-0.6-0.2-1.9-1.7-1.3,0.6C1215,453.3,1215,453.7,1215,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1227,461c1.6-2-0.8-4.1,0-6.1c0.4-1.1-1-2.7,1.1-3.3c2.5-0.6,1.5,1.9,3.1,3.7\n                        c-0.3-3.8,3.3-4.5,3.4-7.5c0-0.9,1.5-0.7,1.4-0.5c-0.6,4.3,3.7,3,5.3,4.7c0.5,0.6,0.6,1.5,1.8,1.6c2.1-1.4-3.5-7.4,3.3-6.2\n                        c4.2,0.7,0.8,3.4,1.3,5c1.1,3.3,6.6-8.5,5.8,1.7c4.2,0.5,2.1-4.5,6.1-5.4c-3.8-1.2-7,1.9-9.6-1.8c3.3-0.1,6.2,0.1,8.9-1\n                        c0.3-0.3,0.7-0.3,1,0c0.6,1.3,1.6,2,3,2c0.7,1.2,1.2,2.5,1,4c0.1,1.4,2.4,2.2,1,4c-1.7,1.2-0.4,4.3-3,5c0.6-2.2-0.2-4.1-1-6\n                        c-1.6-1.3-2.3-0.3-3,1c-0.8,1-1.9,1.9-2.4,3.1c-1.1,2.4-1.6,6-4.5,1.1c-0.3-0.5-1.6-0.9-1.7-0.8c-3.5,5-9,0.7-13.3,2.8\n                        c-2.8,1.4-7,0.7-5.3,6.3C1230.6,465.2,1224.3,465.4,1227,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731523"),
                d:
                  "M1262,475c0-0.3,0-0.7,0-1c6.6-2.6,13.5-3.5,20.4-2c2.4,0.5,2.2-2.9,5.6-1.9c4.3,1.2,9.2,2.8,14,1.9\n                        c2.3-0.4,4.6-1.2,7-1.7c3.9-0.8,8.1,0.8,11.8-1.4c0.2-0.1,1.8,2,2.7,3.1c-0.7,0.3-1.3,0.6-3.3,1.6c6.5,0.3,11.3-1.6,16.2-2.4\n                        c1.6-0.3,3.2-1.1,4.8-1.2c3.1-0.1,2.4,1.3,0.9,2.8c-1.5,1.7-3.8,1-5.6,1.9c-6.5,2.8-13.7,1.2-20.4,2.9\n                        c-1.1,0.3-3.3,0.5-2.7-2.1c-1.8-0.1-3.7-0.6-5.4-0.1c-6.7,1.8-13.6,0.1-20.2,1c-8.2,1.2-16.1-2.5-24.2-0.5\n                        C1262.8,476.3,1262.3,475.6,1262,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70141E"),
                d:
                  "M1336,474c1.7-1.8,4-0.7,6-1c2.6,0,5.3,0.3,7.9-0.1c4.1-0.6,9.7,2.6,11.5-4.2c4.8,1.2,7.3-4.4,12-3.8\n                        c3.9,0.4,8.1,0.9,10.7-4.8c0.9,3.2,1.4,5,1.9,6.8c-10.2,2.8-20.4,5.6-30.6,8.3c-1.4,0.4-2.9,0.5-4.4,0.7\n                        c-3.9-0.2-7.8,0.3-11.7-0.2C1338.1,475.6,1336.1,476.5,1336,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1311,433c4.9,2.4,10.6,1.8,15.6,4.3c1.8,0.9,2.7,1.8,1.4,3.7c-0.3,0-0.7,0-1,0\n                        c-7.3-1.8-15-1.6-22.2-4c-1.2-0.4-2.5-0.7-3.8-1c-0.7-0.7-1.5-0.5-2.3-0.5c-1.1,0-2-0.2-1.8-1.6c0.2-1.2,1.2-2.7,2.2-2.2\n                        C1302.9,434,1307.2,430.8,1311,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1215,453c-0.7-0.4-1.3-0.9-2.8-1.9c3.5-0.1,6.1,0,8.7,1.2c1.7,0.8,1.7,0.6,2.9-1.8\n                        c0.2-0.3,0.7-0.6,1.1-0.7c0.5-0.2,1.1,0.1,1,0.7c-0.4,2.9,1.6,6.3-1.9,8.5c-3.8,2.3-5.9-0.3-7.8-2.9\n                        C1215.6,455.2,1216.2,453.7,1215,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1300.2,457c2.2,0,2.8,0.7,2.1,2.5c-0.2,0.5-0.8,1.9,0.7,1.3c1.1-0.4,2.1-1.5,2.6,0.3\n                        c0.3,1.2-1.1,1.9-1.9,2.7c-1.4,1.4-2.1-0.3-2.7-0.9c-0.9-1.1-1.5-2.4-2.2-3.7C1297.6,456.8,1299.6,457.3,1300.2,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1261.8,464.7c-0.4-0.2-1-0.4-1.2-0.7c-1.1-1.5-3.5-2.1-3.2-4.6c0.1-0.6,0.9-1.3,1.4-0.5\n                        C1260,460.8,1263.7,461.2,1261.8,464.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1265,456c0.1-1.4-1.2-1.8-1.9-2.6c-1-1.2,0.1-1.2,0.9-1.4C1266.4,453.3,1266.6,454.3,1265,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1258,456c-0.9-1.8,0.7-2.3,1.7-2.6c1-0.3,1.2,0.8,1.3,1.6C1260,455.3,1259,455.7,1258,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731523"),
                d:
                  "M1319.9,465.3c-1.2,0.8-2.3,1.7-4,1.4C1316.8,464.9,1318.4,465.1,1319.9,465.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1282,462.3c-0.4,0.1-0.9,0.5-1.5,0.5c-0.7,0-1.3-0.5-0.8-1.2c0.3-0.4,1.1-0.5,1.8-0.5\n                        C1281.9,461.1,1282.5,461.3,1282,462.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1366,448c1.7,0.2,3.6-0.7,5,1C1369.3,448.8,1367.4,449.7,1366,448z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C28"),
                d:
                  "M1213,472c-0.7-0.1-1.5-0.3-2.2-0.4c0.2-0.4,0.3-1,0.6-1.1C1212.8,470,1212.8,471.1,1213,472L1213,472\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1311,433c-3.7-0.4-7.4,3.2-11.1-0.1c-0.8-0.7-1.5-0.4-1.9,0.4c-0.5,1-0.1,1.5,0.9,1.6\n                        c0.8,0.1,1.6,0.3,2.1,1c-2,0-4,0-6,0c-2.3,0.9-4.3,0.4-6.1-1.1c0.4-1.4,0.9-3-1.7-2.5c-0.4,0.1-0.9,0-1.3-0.1\n                        c-0.3-0.2-0.5-0.4-0.8-0.6c-0.5-0.4-1.1-0.7-1.6-1c0.3,0.5,0.9,0.6,1.3,1c0.7,0.8,0.5,1.4-0.4,2c-2.2,0.8-4.3,0.8-6.2-0.8\n                        c-0.7-2.8-1.8-0.6-2.8-0.2c-0.8,0.3-1.6,0.3-2.5,0.1c-7.7-1.6-15.4-1.7-23.1,0.2c-1.6,0.4-3.3,0.4-4.9,0\n                        c-3.3,0.3-6.7,0.7-10,1c-1.1,0-2.2,0-3,1c-0.3,0-0.7,0-1,0c-0.4-0.3-0.7-0.7-0.9-1.2c-1.1-2.1-1.1-2.1-3.2-0.8\n                        c-3.1,2-8.2-0.1-9.1-3.7c-0.5-2.1-3.2-3.3-5.1-2.3c-1.6,0.9-2.7,0.8-3.4-1.2c-0.3-0.9-0.3,0.1-0.3,0.1c-1.7,1.9-4.3,1.8-6.2,3\n                        c-2.4,1.5-3.8,0.1-5.6-1.5c-2.8-2.4-7-1.4-7.9,2c-0.7,2.7-2.3,2.7-4,1.9c-1.9-0.8-3.9-2.8-1.8-4.6c3-2.6,0.4-4.2-0.1-5.8\n                        c0.5,4.6-0.7,5.7-5.7,5.1c-1.7-0.2-3.2-1.3-5.2-0.5c-2.4,1-5.3,1.5-7.3-0.7c-2.1-2.2-0.5-4.7,0.6-7c-1.2,1.6-1.6,3.6-2.9,5.1\n                        c-3.1,3.4-5.6,3.5-8.5,0c-1.1-1.3-2.2-1.9-3.7-1.7c0.1,0,0.2,0,0.3,0c2.4,0.1,3.1,1.3,1.7,3.2c-1.4,1.9-3.1,3.2-5.8,3\n                        c-3.7-0.3-3-3.3-3.8-5.4c-0.4-0.6-1.1-0.8-1.8-0.8c0.6,0.2,1.4,0.2,1.8,0.8c-3.5,3.6-7.1,6.5-12.6,4.5\n                        c-1.7-0.6-2.7,0.9-3.8,1.7c-3.8,2.7-4.7,2.5-7.1-1.6c-0.8-1.3-2-1-3.1-1.2c-2.6-0.4-5.4-0.3-7.9-0.1c-4,0.4-7.6-0.2-10.9-2.4\n                        c0.9,0.7,2.4,0.9,2.4,2.2c-0.1,1.5-1.7,1.4-2.7,1.7c-2,0.6-4.2,1.7-6.1,0c-1.1-1-1.7-0.5-2.5,0.2c-1.1,0.9-2.5,1.6-3.7,1\n                        c-6.2-3.1-12.5-0.2-18.8-0.2c-4.2,0-6.9,0-6.8-5c0-0.4-0.2-0.6-0.5-0.8c-0.3-0.2-0.5-0.4-1.4-0.4c3.1,4.2-0.1,5.1-3,6.2\n                        c-1.9,0.7-3.8,1.4-5.6,2c-0.7,0.3-1.9,0.1-1.7,1.3c0.4,2.4,0,3.7-2.8,2.8c-2.4-0.8-2.7-1.4-2-4.9c0.4-0.5-1-0.4-0.4-0.3\n                        c0.2,0,0.2,0.3,0,0.5c-1.2,1-1.8,2.1-1.9,3.8c-0.1,1.3-0.9,2.6-2.7,2.4c-1.4-0.1-2.2-1.1-2.1-2.3c0.2-2.4-1.9-3.3-2.8-5\n                        c0,0.4-0.2,1,0.1,1.3c0.7,1,2.6,1.3,1.8,3.1c-0.7,1.5-2.2,1.2-3.5,1c-0.9-0.1-1.7,0-2.4,0.4c-1.1,0.5-2.2,0.9-3.3,0\n                        c-0.1-1.7-0.8-2.2-3.1-2.5c-1.4-0.2-4.1-0.9-3.6-1.8c0.8-1.4-0.3-4.9,1.6-4.5c-3.7-0.6-1.3,5.3-4.1,6.7\n                        c-0.8,0-1.2-0.5-1.5-1.1c-0.6-1.1-0.4-2.9-2.3-2.8c-2.4,0.1-1.4,2-1.7,3.4c-0.2,1.1-1.5,1.7-1.9,2.9c-0.6,1.4-1.5,2.7-3,3\n                        c-1.6,0.3-0.7,0.7-0.6,1.6c0.1,2.7-2.4,2.3-3.5,1.6c-5-3.3-8.1,0.6-11.6,2.8c-1.6,1.1-2.6,1.5-3.3-0.5c-0.5-1.3-1.6-2-2.5-3\n                        c-0.3-0.4-0.6-0.8-0.8-1.2c-2.4-4.7-4.5-5.3-8.8-2.6c-3,1.9-6.4,2.5-9.8,3.2c-0.8,0.2-2,0.5-2.4-0.1\n                        c-2.7-4.1-7.7-2.8-11.2-4.8c-0.4-0.1-0.9-0.1-1.3-0.2c-1.8-1-3.9,0.1-5.7-0.9c-0.6-0.9-0.1-1.7,0.3-2.5\n                        c2.1-1.3,2.2-3.5,2.5-5.7c2.3-1.9,5.1-1.4,7.8-1.5c5.4,2.8,10.6,2.7,15.9-0.5c1.4-0.8,3.1-1.2,4.8-1.2\n                        c6.5,0.3,12.8-2.1,19.3-1.4c2.5,0.3,4.2-0.6,4.3-3.4c2.2-2.1,5-1.4,7.6-1.8c15.3-2.4,30.5-5.1,45.8-7\n                        c10.9-1.4,21.6-3.6,32.5-4.8c2.6-0.3,5.2-0.9,8.8-1.8c-8.2-1.6-15.6-1.6-22.5-4.4c-1.1-2-0.1-3.5,1.1-5c1.5-1.8,4.5-2,5.5-4.6\n                        c0.3-0.7,2.1-1.2,2.6-0.2c1.8,3.7,5.8,2,8.4,3.6c3.2,2,4.5-2.5,7.4-2.3c0.4,0-0.6-0.8-0.7-1.4c-0.3-0.9-0.9-1.9,0.2-2.7\n                        c1.1-0.7,2.5-0.6,3.2,0.4c3.2,4.5,7,8.1,12.2,8.5c-0.3-2.7-3-6.1-1.2-10.2c7.2-0.4,14.2,1.2,21.3,2.4c0.5,0.1,1.1,0.2,1.6,0.3\n                        c4.2,0.6,8.5,1.5,12.8,1.6c2,0.3,4,0.5,5.9,1.1c10.3,3.4,20.7,1.8,31.1,0.2c14.3-2.1,28.6-4,43-5.5c8.8-0.9,17.4-2.6,26.1-3.9\n                        c1.1,0,2.1,0.1,3.1,0.6c1.5,2.6-0.9,2.5-2.2,2.9c-1.7,0.5-1.9,0.2-0.7,2.1c1.3,2.1-1.9,3.2-3.9,3.9c-1.3,0.5-3.5-0.7-3.6,1.9\n                        c6.8-5.4,11.6-0.5,16.9,3.9c-2.2-3.2-0.1-4.2,1.5-5.1c3.2-1.8,6.4,0.5,8,2c2.7,2.6-2.8,4.5-2.3,7.5c0.8-0.1,1.5-0.5,2.3-0.8\n                        c0.4-0.2,0.8-0.4,1.3-0.6c5.5-3.1,10.1-0.2,13.5,3.2c3,3,5,2.8,7.3,0.2c2.6-2.9,3.6-2.4,4,1.2c0.3,2.2,2.1,3.4,3.9,2.8\n                        c3.7-1.2,7,0.6,10.5,0.5c1.3,0.5,0.7,2.9,2.4,2.8c2.3-0.1-0.6-3,1.8-3.3c1.5,0.7,0.1,2.7,1.5,3.9c1.6-4.6,5.2-1,7.9-2.1\n                        c1.8-0.7-0.1,2.1,0.9,3c4.1-3.8,4.1-3.8,1.1-7.1c3.7-1.3,4.7,3.2,7.7,3.4c0.8,0.1,0.4,1.7-0.4,2.5c-1.7,1.6-10,2.7-11.7,1.2\n                        c-1.2-1.1-1.7-0.7-2.8,0c-1.3,0.8-1.5,4.1-4.5,2.2c-0.8-0.5-1.1,2.5-0.5,2.5c3.9,0.2,1.7,3.8,3.2,5.4c2.2-0.8,0.4-5.6,4.3-4.5\n                        l0,0c1.1-1.5,2.6-0.9,4-1c-0.2,1.5,0.3,2.8,1,4c-2.1,0.5-2.9,2.4-0.7,2.6c3.9,0.4,7.6,3.3,11.7,1.4c-1.5,2.3-1.6,2.2-4.5,3.1\n                        c-0.5,0.2-0.6,1.9-0.9,3.1c-1-3.7-2.4-6-6.2-2.8c-2.8,2.3-3.7-0.7-4.9-2.4c-2.7,5.8-7.1,3-11.1,2.8\n                        C1310.5,428.9,1310.8,430.9,1311,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1334,420c-1.7-0.2-3.6,0.7-5-1C1330.7,419.2,1332.6,418.4,1334,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("77142E"),
                d:
                  "M217,369.1c-0.3-3.2-2.6-5.5-3.9-8.2c4.7-4.5,10.8-5.2,16.9-5.9c0.9,1.6,2,1.5,3.7,1\n                        c6.2-1.7,7.5-0.4,6.5,6c-0.2,1.2,0.9,1.7,1,2.6c-0.3,0.8-1.5,1.2-1.2,1.9c0.3,0.7,0.6-0.1,0.7-0.5c0.1-0.5,0.2-1,0.6-1.3\n                        c3.3-1.7,5.1,1,6.4,3c1.2,1.8,0.6,4.2-2.2,4.8c-0.6,0.1-1,0.3-0.2,0.6c3.8,1.4,3.5,5.8,6,8c-0.6,2.7-3.4,2.5-5,3.7\n                        c-5.1,1.6-10.1,3.7-15.2,5.2l-0.5,0l-0.5,0c-0.2-0.1-0.4-0.3-0.5-0.4c-1.1-2.7-2.6-5.2-4.4-7.6l0,0c-1.2-1.6-1.7-3.5-3-5l0,0\n                        c-1.2-1.6-1.8-3.6-3-5.1C218.3,371,217.7,370,217,369.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601125"),
                d:
                  "M230,390c0.1,2.7,2.7,4.3,3.1,6.9c-9.3,1.1-18.4,4.1-28,3.9c2.5-0.6,3.2-3.3,5.4-4.1\n                        c2.2-0.7,4.4-1.2,6.6-2c2.3-0.8,4.3-2.3,6.9-2.5c1.8-0.2,3.2-1.6,4-3.4C229.2,388.4,229.5,389.5,230,390L230,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95304B"),
                d:
                  "M230,390c-0.7-0.4-1.3-0.8-2-1.1c-0.3-2.6-3.1-4.1-3-6.9C228.1,383.8,229.1,386.9,230,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M182.1,402.5c-2.8-0.3-3-2.2-3.6-3.7C180.3,399.2,181.7,400,182.1,402.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95304B"),
                d: "M222,377c2,1.1,2.8,2.9,3,5C223,380.9,222.2,379.1,222,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C364E"),
                d:
                  "M219,371.9c2,1.1,2.7,3,3,5.1C220,375.9,219.2,374.1,219,371.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M176.5,397.6c-0.6,0.2-1.3,0.6-2,0.8c-0.2,0-0.5-0.6-0.8-1c0.7-0.4,1.4-0.8,2.1-1\n                        C176.3,396.2,176.6,396.8,176.5,397.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M179,390.8c0.9,0.8,1.7,1.6,2.5,2.3C179.6,393.5,179.1,392.4,179,390.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631126"),
                d:
                  "M154.1,405c0.3-3.3-1.5-7,3.4-10.3c-0.9,4.2-1.5,7.4-2.2,10.5C154.9,405.1,154.5,405,154.1,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631124"),
                d:
                  "M231,390c4.2-4,9.8-4.5,15-6c2.7,2.4,2.5,4.7-0.5,5.9c-1.5,0.6-3.3,0.1-5.6,1.4\n                        c4.6-0.4,8.2,1.2,11.9-2.5c2-2,3.7,1.9,3.6,4.7c-0.2,0.2-0.3,0.4-0.5,0.5c-2.7,1.7-5.8,1-8.7,1.5c-3.6,0.6-7.1,0.7-9.2,4.4\n                        C235.1,396.6,233,393.3,231,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831732"),
                d:
                  "M274,399c0,0.3,0,0.7,0,1c-4.7-0.3-9.4,0.3-14,1c0.7-3.9,0.7-3.9-5-7l0,0c3-2.3,6.7-1.5,10.1-2.3\n                        c2.5,0.2,4.8-1.3,7.3-0.4C272.2,394,274.4,396.3,274,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1835"),
                d:
                  "M274,399c-0.7-2.3-4.5-4.1-1-7c4.3-3.2,8.9-4.3,14-2c0,1.3-3.2,0.3-1.9,2.4c0.6,1,2.1,2.4,3.1,0.9\n                        c0.9-1.2,1.3-1.4,2-0.3c0.8,1.3-0.2,1.6-1.3,1.9c-1.2,0.3-2.7-0.6-3.7,1.5c3.4-0.2,6.6-0.3,9.7-0.5\n                        C288.2,398.7,281,397.8,274,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5A1A6"),
                d:
                  "M371,387c-6.8-1.1-13.5-0.3-20,2c-0.2,0-0.3-0.1-0.5,0c-3.3,0.2-4.7-2.7-5.5-4.8c-0.4-1,3.2-1.6,5-2.1\n                        c1.6-1.8,3.8-2.1,6-2.4c7-1.2,14.1-1.2,21.1-2c2.4,0.1,4.8-0.2,7,0.6c2.3,2.9-0.6,3.9-2.1,5c-1.2,0.9-2.9,1.2-2.7,3.3\n                        C376.7,389.1,373.9,388.8,371,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8969C"),
                d:
                  "M356,381c-2,0.3-4,0.7-6,1c-1.7-1-3.3-2-5-3c-7.3-3.2-7.2-9.6-7.2-16c0.6-1.5,1.6-2.4,3.3-2.3\n                        c3.5,1.1,5.6,3.3,7.3,6.7c1.8,3.5,3,8,8,9.4C358.8,377.4,357.8,379.7,356,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D38D94"),
                d:
                  "M338.1,363.1c2.3,2.6,1.3,6.1,2.2,9.1c0.9,2.9,1.5,4.3,4.3,4.9c1.3,0.3,0.6,1.2,0.4,2\n                        c-0.6-0.1-1.7-0.5-1.8-0.3c-2,4.5-6.6,3.9-10.2,5.3c-2.1-0.9-1.5-2.5-0.8-3.9c-2.2-1-4.8,2.4-6.7-0.9c0.6-4.4,5.1-5.9,6.8-9.4\n                        c2.1-2.1,2.3-5.6,5.2-7C337.7,362.9,337.9,363,338.1,363.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE848C"),
                d:
                  "M326,379.2c2.8,1.1,5.5-2,8.6,0c0.2,1.6-4,2.3-1.6,4.8c-2,0.3-4,0.7-6,1c-1.7-1-4.9,1.8-5.4-2.2\n                        C322.3,380.6,323,378.5,326,379.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F171F"),
                d:
                  "M326,379.2c-1.5,1.2-3,2.4-4.5,3.6c-5.2,2.9-10.4,5.9-16.5,6.4c-6.3-0.3-12.8,0.5-18.2-4.1\n                        c-0.5-0.6-0.6-1.3-0.2-2.1c3.8-0.6,6.9,2.3,10.7,1.8c5.5,1.7,10.7,0.3,15.9-1.6c5.8-2.7,10.7-6.4,14.8-11.4c1.2-1.5,2.2-4,5-3\n                        c0.3,0.4,0.3,0.9-0.1,1.3C331.8,374,328.2,376.1,326,379.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("71132B"),
                d:
                  "M287,390c-4.8-0.2-9.4,1.1-14,2c-2.7,0.3-5.3,0.6-8,1c-0.1-3.6,3.8-1.7,4.8-3.4\n                        c1.2-1.9-0.1-5.2,3.6-5.6c0.3,0,0.9,0,0.9-0.2c1.2-5.6,3.8-1.5,5.8-0.9c3.5,2.2,6.6,5,10.7,6.1\n                        C289.9,390.5,288.3,389.8,287,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68112A"),
                d:
                  "M280.1,382.9c-0.9,0.4-1.6,0.8-2.5-0.4c-1.3-1.8-2.3-1-2.2,0.8c0.1,0.9,1.1,2-0.7,1.6\n                        c-3-0.7-2.7,1.5-2.8,3c-0.3,4.6-5.5,2.2-7.1,5.1c-3.3,0.3-6.7,0.7-10,1c0.4-2.3-1.7-3.4-2.7-5.8c-0.6,4.5-3.1,5.6-6.4,4.5\n                        c-1.8-0.6-3.2,0.3-4.8,0.2c-1.4,0-3.1-0.4-3.3-1.7c-0.3-1.7,1.6-1.8,2.8-2.1c1-0.2,2-0.1,3-0.1c4.2,0,4.4-2,2.6-5\n                        c1.1-1.9,3.7-1.4,5-3c2.7-3.6,7.4-2.4,10.6-4.6c3.7-1.2,7.2-2.7,10.9-3.8c3.3,1.1,4.3,4.3,6.3,6.7c0,0.2,0.1,0.5,0.1,0.7\n                        C279.4,381,279.8,381.9,280.1,382.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A131E"),
                d:
                  "M287,383.1c0,0.7,0,1.3,0,2c-3.3-0.6-5-4-8-5.1l0,0c-1-2.1-3.8-3.2-3.6-6.1c0.4-1.1,1.1-1.5,2.3-1.4\n                        c1.5,0.5,2.2,1.8,3,3c1.5,2.2,3.2,4.2,5.4,5.8C286.6,381.8,286.9,382.4,287,383.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DFA3A9"),
                d:
                  "M371,387c2.6-0.9,6.2,2,8-2c1.3-1.3,2.8-1.1,4.3-0.8c1,0.4,1.9,1.1,1.7,2.2c-0.4,2.5-3.7,2.6-4.5,5\n                        c-0.9,2.6-2.7,2.9-5.4,2.9c-2.6,0-5.6-0.9-8.1,0.7c-2.1,0-4.1-0.2-6,1c-0.7-1.4-0.5-2.9,1.2-2.8C367,393.5,368,389,371,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5ABAF"),
                d:
                  "M367,395c2.3-3.4,5.8-0.2,8.5-1.6c0.4-0.2,1.8,0.4,1.8,0.3c1.2-3.7,5.7-4.8,6.7-8.6\n                        c4.9-1.7,9.6-4.2,15-2c1.2,0.8,2.4,2.2,3.6,2.2c3-0.1,0.7,1.6,1,2.3c1.2,2.5-0.9,1.5-1.6,1.5c-4.7,0.1-9.5-0.6-13,3.7\n                        c-0.4,0.4-2.4,1.3-3-1c-0.4-1.4-2.3-0.9-2.6,0c-0.5,2-2.5,2-3.5,3.2C375.7,395,371.3,395,367,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA1B28"),
                d:
                  "M447,377c-0.4,3.8-4,7.3-0.5,11.5c1.2,0,0.4-3.4,2-2.6c1.4,0.7,2.1,2.5,2.4,4.5\n                        c0.8,5.3-1.6,3.8-5.2,4.1c-7.8,0.7-15.6-0.1-23.3,0.8c-2.9,0.3-5.5-0.7-8.6-0.2c1.2-2.8,3.5-4,5.1-6c3.9-3.3,8.8-4.8,13.2-7.3\n                        c1.3,0,2.5-0.4,3.6-1.1c0.4-0.2,0.8-0.2,1.3-0.2c3.5,0.3,5-3.2,8-4C445.8,376.3,446.5,376.5,447,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD2C34"),
                d:
                  "M437,381c-0.3,0-0.7,0-1,0c-0.8,1-2.1,1.2-3,2c-3.5,0.5-6.2,2.8-9.1,4.4c-1.6,0.9-3,1.8-4.9,1.6\n                        c-2.1-0.5-3.4,1.1-5,1.9c-0.6-0.7-0.6-1.4,0.1-2.1c2-1,4-2,5.9-3c4.8-3.5,10.5-5.4,15.4-8.7c1.1-0.7,2.4-1.1,3.7-0.3\n                        C440.3,379.1,438.4,380,437,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45760"),
                d:
                  "M446.2,369.6c2.3,4.7,4.6,9.4,7,14.2c-0.1,0.5-0.1,0.9-0.2,1.4c-2.7-2.1-3.2-5.5-5.1-8.1\n                        c-1.3-0.9-2.2-2-2.8-3.5c-0.4-0.8-0.6-1.7-0.4-2.6C445,370.3,445.5,369.8,446.2,369.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7313A"),
                d:
                  "M445.9,373c0.7,1.4,1.3,2.7,2,4.1c0,0-0.5,0-0.5,0l-0.5,0c-0.7,0-1.3,0-2,0c-1.5,0.3-3,0.5-4.2-0.9\n                        c-0.2-0.7,0.1-1.3,0.5-1.8c0.8-0.7,1.7-1.5,2.7-1.9C444.8,372.4,445.4,372.5,445.9,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62736"),
                d:
                  "M397.6,392.9c3-1,6.1-2.1,9.4-2.1C404.6,395.3,400.6,392,397.6,392.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53038"),
                d:
                  "M414.1,388.9c0,0.7-0.1,1.4-0.1,2.1c-2.4,0-4.7,0-7.1,0C409.1,389.6,411.5,388.8,414.1,388.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M551,387.1c0.8,3.6,4.7,0.5,6,2.9c-4.3,0.4-8,3.2-12.3,3c-2.8-0.2-2.2,1.6-2,4.1\n                        c-4-6.4-5.8-1.9-6.8,0.9c-1.2,3.2-3.6,3-5.9,3.4c-2.8,0.5-2.6-2.3-3.6-3.8c-5,2.1-9.4,6.2-15.3,3.4c-1.3-0.9-2.7-0.9-4,0\n                        c0.1-0.6,0.5-1.7,0.3-1.9c-4.5-3.8-1.9-4.2,1.9-4.2c1.8,0,1.8-1.5,1.9-2.9c2.3-2.2,5.3-1.3,8-1.7c5.5-0.8,11.1-0.9,16.7-0.6\n                        c4.7,0.1,9.3-0.2,13.5-2.5c0.4-0.3,0.8-0.5,1.2-0.6C550.6,386.9,550.8,387,551,387.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641222"),
                d:
                  "M511,421.7c-0.8,0.5-1.2,0.8-1.6,0.9c-0.3,0-0.7-0.3-1.1-0.5c0.3-0.3,0.5-0.8,0.8-0.9\n                        C509.5,421.1,510,421.4,511,421.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1325"),
                d:
                  "M492.1,416c0.1-1,0.4-1.8,1.4-1.5c0.5,0.2,1,0.9,1.1,1.4c0.2,0.9-0.5,1.6-1.4,1.7\n                        C492.2,417.7,492.1,416.7,492.1,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871A2C"),
                d:
                  "M537,391c-8.7,0.4-17.3,0.7-26,1.1c-2.9,1.5-6,0.8-9,0.9c2.7-1.7,0.8-4.6,1.8-6.8\n                        c4.2-1.3,8.6,0.2,12.8-1.1c3.4-1.1,6.9,0.5,10.3,0c3.1,0.1,6.1,0.2,8.9,1.8c0.5,0.4-0.4,1.3,0.8,1.6\n                        C538.6,388.8,538.5,390,537,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931D2E"),
                d:
                  "M503,387c3.4,2.5,3.2,4-1,6c-2,0-4,0-6,0.1c-3.8-0.6-7.3,0.9-11,1c-0.8,0.7-1.8,0.5-2.8,0.4\n                        c-1.1-1.6,0.4-2.1,1.3-2.3c3.1-0.8,5.4-2.9,7.7-4.8c1.5-0.6,3-0.9,4.5-1.3C498.3,385.7,500.8,385,503,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881821"),
                d:
                  "M482,394c1,0,2,0,3,0c-3.7,4.5-9.5,2.6-14.1,4.8c-2,1-4.1-2.9-6.9-1.8c-0.8-0.4-1-1.2-1-2\n                        c1.7-1.7,3.9-1.4,6-1.5c2.7,0.4,5.2-0.8,7.9-0.8C478.7,392.7,480.6,392.4,482,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M448,367c-0.3,0-0.6,0-1,0c-1.1-0.7-1.5-1.7-1.6-3c0.1-4.1-2.6-7.2-3.7-10.8c-2.6-5.4-5-10.9-7.3-16.4\n                        c-0.6-1.5-1.6-3-0.7-4.7c3-1,3.8,1.4,4.5,3.3c1.1,2.9,2.9,5.2,5.3,7.1c-0.2-1.9-0.9-3.4-2.7-4.4c-1.7-1-2.9-2.6-2.1-4.5\n                        c0.7-1.8,2.7-1.6,4.4-1.7c2.1-0.1,4.3,0.1,6.5-0.2c1.5-0.2,3.2-0.1,4.3-1.1c3.2-3,6.3-2.9,10.4-1.6c2.8,0.9,6.2-1.6,9.5-1.1\n                        c4.7-0.4,9.3-1.5,14.1-1.2c2.4,0.1,5-0.5,6.9,1.8c0.2,0.3,0.3,0.6,0.3,0.9c1.1-5.5,3.5-0.2,4.9-0.7c2.5-0.8,4.9-0.9,7.3-1\n                        c5.3-0.2,6,0.6,5,5.8c0.1,5.5-5,4.5-7.9,6.3c-3.3-0.2-6.8-1.8-9.6,1.7c-0.5,0.6-1.6,0.6-2.3,0.2c-3.2-1.7,0.7,1.2-0.5,0.8\n                        c-0.2,1.6-1.7,1.8-2.6,1.4c-2.8-1.1-4.6-0.5-6.5,1.8c-0.8,0.9-2.7,1.8-3.9,1.8c-5.7,0.1-7.7,4.1-9.8,8.2\n                        c-2.4,0.8-5.4,1.1-4.7,4.9c-4,3.9-9.4,5-14.3,7.2C449.3,367.7,448.6,367.6,448,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("591417"),
                d:
                  "M446.2,363.7c0.3,1.1,0.6,2.2,0.8,3.2c-0.4,0.3-0.7,0.7-1.1,1c-3.2-0.4-3.4-3.3-4.4-5.4\n                        c-2.2-5-4.5-10-6.7-15c-1.8-4.4-4.3-8.6-4.8-13.5c0.2-1,0.4-2.1,1.8-2.1c3.5,2.8,3.8,7.4,5.8,11.1c1.8,3.5,3,7.3,4.8,10.7\n                        C443.3,357.2,445.9,360,446.2,363.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE232F"),
                d:
                  "M469,395c-2,0-4,0.1-6,0.1c-0.7-1.8-3-2.8-3.1-5c1.4-1.6,3.5-1.2,5.2-1.9c1.3-0.3,2.7-0.4,4-0.4\n                        c2.6,0.1,5.3-0.2,7.9,0.4c0.9,0.2,2.2,0.5,1.7,1.8c-0.5,1.3,2,4.3-2.1,3.8C474,393.2,471.6,394.6,469,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B21F2F"),
                d:
                  "M459.1,389c-1.3-2.4-2.6-4.7-3.9-7.1c0.6-2-2.4-3.3-1-5.4c2.8-1.6,3.9-0.1,4.5,2.3\n                        c0.7,3.9,2.7,4.6,5.9,2.6c1.3-0.8,2.5-1.5,3.9-2.2c1.8-0.9,3.1-2.9,5.4-2.7c1.2,0.4,2.2,0.8,2.3,2.3c-0.7,1.3-1.9,1.9-3,2.8\n                        c-4,3.1-8.4,5.4-12.9,7.5C459.9,389.4,459.5,389.3,459.1,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7747A"),
                d:
                  "M435.9,347c3.7,6.8,5.8,14.4,10,21c0.1,0.5,0.2,1.1,0.3,1.6c-0.4,0.4-0.7,0.9-1.1,1.3\n                        c-2.2-1.2-2.5-3.7-3.8-5.6c-0.9-1.8-1.6-3.6-2.9-5.1c-0.3-0.3-0.6-0.7-0.8-1c-0.2-0.4-0.3-0.8-0.3-1.3\n                        c0.1-1.6-0.6-2.9-1.3-4.2c-0.8-2.1-2.6-4-1.4-6.6C435,346.7,435.4,346.7,435.9,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3C46"),
                d:
                  "M454.1,377c0.1,1.7,2.6,2.9,1.1,4.9c-2.6-4.9-5.7-9.5-7.2-14.9c0.7,0,1.4,0,2,0c1,0.7,1.3,1.9,1.8,2.9\n                        C452.5,372.3,454.7,374.1,454.1,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1F2E"),
                d:
                  "M459.1,389c0.3,0,0.6,0,0.9,0c1.7-0.9,3.4-1.6,5,0.1c-1.5,1.6-3.4,0.7-5.1,0.9\n                        C459.6,389.7,459.4,389.3,459.1,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAAAB0"),
                d:
                  "M399,383c-5.1-0.2-9.8,2.7-15,2c-1.7,0-3.3,0-5,0c-0.6-0.5-2.1-1.7-0.6-1.7c3.4,0,4.7-2.5,6.6-4.3\n                        c3-2.6,6.7-3,10.5-3c2.3,0.8,4.4-0.2,6.7-0.3c7.2,0.2,14.4-1.5,21.6-0.7c2.5-0.2,5.1-0.9,7.3,1c-3,2.8-5.9,5.8-10,7\n                        c-0.7,0-1.3,0-2,0C413.7,379.2,403.4,379.2,399,383L399,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9AA0"),
                d:
                  "M421,383c3.2-2.2,4.8-7.1,10-6c0.6-1.2,0.5-2.6,1.6-3.5c1.9-1.5,3.9-3.1,6.6-2.9\n                        c2.9,0.3,3.3,2,2.8,4.4c-0.4,0.3-0.7,0.7-1.1,1c-0.3,1-0.8,1.5-1.9,1.2c-5.8,1.1-9.7,6-15.3,7.5c-1.2,0.3-2.5,0.8-3.7,1.2\n                        C420.3,384.9,420.7,383.9,421,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7B2B5"),
                d:
                  "M399,383c-0.3-2.9,0.6-4.2,3.8-4.1c3.8,0.2,7.5,0.2,11.3,0c3-0.2,4.6,1,4.9,4\n                        C412.3,383,405.7,383,399,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44651"),
                d:
                  "M407,278c3.1-0.8,6.2-1.9,9.2,0.7c1.6,1.4,4-2,5.8,0.3C416.9,280.9,411.8,280.6,407,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3525E"),
                d:
                  "M426.8,273c-0.3,2.1-0.6,4.2-1.7,6c-2.2-2.6-5.1-3.2-8.4-4c-5.3-1.4-10.5-2.4-15.9-3\n                        c-1.7-0.2-3.2,0.4-4.8,0c-0.7-3.4-3.9-1.7-5.8-2.6c-1.7-0.8-3.6-0.8-3.2-3.4c2.4-2.4,5.4-1.9,7.9-0.8c6.8,2.8,13.9,3.2,21,3.6\n                        C420.2,269.1,423.8,269.9,426.8,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M426.8,273c-2.8,1.5-3.4-2.1-5.8-2.4c-4.8-0.6-9.7-0.3-14.5-1.4c-4.1-0.9-8.3-1.1-12.3-3\n                        c-2-0.9-4.8-0.2-7.3-0.2c-4.7-0.1-9.4,0.4-14-1c-4.3-0.7-8.9-0.7-12.7-3.4c-1.3-1-2.9-0.3-4.1,0.7c-1,0.8-2,1.2-3,0.1\n                        c-1.5-1.7-5.7-1.2-5.2-3.7c0.5-2.7,2.2-5.5,4.1-7.8c0.7-0.9,2.2-1.1,2.8-2.1c2.9-5.2,7.1-3.6,11-2c2.6,1.1,4.1,0.5,5.4-1.6\n                        c0.3-0.4,0.7-0.6,1.1-0.9c1.7-0.5,3.8-1.9,4.9,0.2c1.2,2.4-2,2.9-2.7,4.3c2.3-1.5,4-4.1,6.1-6.1c1.7-1.6,2.3-3,1.7-5.5\n                        c-1-4.4,2-6.8,6.1-5.4c3.5,1.2,6.8-0.5,6.7-4.2c-0.1-4,1.8-3.7,4.3-2.9c3.1,1,6,0.5,8.5-1.4c4.8-3.6,10.9-4.7,15.6-8.6\n                        c2-1.7,5-1.5,7.5,0.1c0.8,0.7,1.3,1.6,0.7,2.8c0.7-1.4,0-2.3-0.9-3.1c-0.6-2.6,0.6-3.6,2.9-2.8c1.7,0.6,3.3,1.5,4.9,2.4\n                        c1.6,2.3-0.2,4-1,5.9c-0.3,0.2-0.7,0.4-1.2,0.4c-1.7-0.3-1.1,0.7-0.9,1.6c0.2,1.2-0.2,2.2-0.9,3.1c-0.3,0.3-0.7,0.5-1.2,0.6\n                        c-2.7-0.9-4.9-4.1-8.3-1.7c-1.7,0.5-4.1-0.3-4.3,2.9c-0.1,1.2-1.8,2.2-3.1,1.9c-3.4-0.8-4.9,0.9-6.8,3.4\n                        c-2.2,2.9-5.8,4.4-9.4,5.1c-4.3,0.8-8,1.9-10.4,6.3c-1.4,2.6-3.7,5.2-6.7,6.1c1.3,3.1,4.4,5.6,3,9.7c-0.9,2.5,1.5,2.7,2.5,2.3\n                        c7.6-2.6,14.2,1,20.9,3.4c0.4,0.1,0.9,0.2,1.3,0.3c1.3,0.8,2.6,1.1,4.1,0.4c2.2-0.7,4.5-1.6,6.8-0.3c1.1-0.1-0.5,2.5,1.9,1.6\n                        c1.3-0.5,1.5,2.4,2.2,3.9C427,271.7,426.9,272.3,426.8,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45963"),
                d:
                  "M431,215c-7.1-1.5-11.8,4.1-17.4,6.5c-5.8,2.5-10.6,7.4-18.5,2.7c4.8,7.8-3.5,7.5-5.1,12.1\n                        c-1.3-3.1-2.9-5.9-5.8-3.2c-2.5,2.4-1.6,5.1,1,6.8c-4.4,4.2-8.6,8.2-13,12.4c-0.3-3.6,2.7-5.1,4.9-7c-2.1-1.7-3.6,0.3-5.2-0.4\n                        c-1.2-1.3-2.2-0.9-3.8-0.1c1.7-0.4,2.9-1,3.8,0.1c-0.9,3.2-1.6,6-6.2,3.2c-2.7-1.7-6.7-3.5-9.2,1.2c-1.3,2.4-7.6,1.6-4.3,6.9\n                        c0.3,0.5-0.4,0.7-0.9,0.8c-1,0.3-2.8-0.5-2.7,1.2c0,1.7,1.7,1.7,3,1.9c1.7,0.3,3.8,4.3,5.2-0.5c0.1-0.2,2.7-0.2,3.6,0.5\n                        c3.8,2.9,8.5,3.2,12.6,4.9c-12,0.3-23.6-1.6-35.8-6.9c4.5-1.3,5.5-5.1,8.4-6.9c1.9-1.2-0.4-2.5-0.9-3.7\n                        c-0.4-0.9-1.1-1.9-0.2-2.7c0.8-0.8,1.5,0,2.1,0.5c0.6,0.4,1.4,0.8,1.8,0.2c1.4-1.9,3.3-2.8,5.2-4c5.3-3.3,10-6.4,16.6-6.4\n                        c2,0,4.9-2.6,7.1-4.2c2.8-2.2,5.3-3.9,9.1-4.1c2.9-0.2,5.6-2.7,8.5-3.6c5.4-1.7,10.7-3.8,15.8-6.4c2.2-1.1,6.1,0.9,6.3-3.7\n                        c4.3,3.8,6.5-1.8,9.8-2.5c0.6-0.1,2-1.4,4-2.1c-1.9-0.3-2.8-0.5-4.9-0.9c3.2-0.6,5.3-0.9,7.4-3c-0.7,5.8,4.5,5.8,6.7,8.5\n                        c0.7,1.2,0.7,2-1,2c-1.9,0.2-3.4-0.4-4.9-1.7C432,211.5,430.9,212.3,431,215L431,215z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C86370"),
                d:
                  "M443,211c5-2.7,10-5.3,15-8c1-0.3,1.2,0.3,1.2,1.1c-4.2,4.2-9.7,6.4-14.8,9.3c-1.1,0-1.8-0.6-2.4-1.4\n                        C442.3,211.7,442.7,211.3,443,211z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M442,212c0.7,0.3,1.3,0.6,2,0.8c-0.2,1.8-1.6,2.8-2.4,4.3c-0.7,0.8-1.4,1.6-2,2.4\n                        c-0.7,0.7-1.3,1.9-2.6,1.5c-0.3-0.4-0.3-0.8,0.1-1.1c0.3-1.8,0.4-3.7,2-5c0.8-0.4,1-1.2,1-2C440.8,213,441.6,212.8,442,212z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A32F3D"),
                d:
                  "M783,619c0.5,2.8,2.7,1.8,4.3,2c3.6,0.3,7.4-0.5,11,0.6c0,0.5,0,1,0,1.5c-7.1,0-14.2,0-21.3,0\n                        c-0.3,0-0.7,0-1,0c-6.7-3-13.6-5.4-19.8-9.7c-4.7-3.2-10.7-4.9-15.8-7.8c-1.8-1.1-3.9-1.8-5.3-3.5c0-0.3,0-0.6,0-1\n                        c0.8-1,1.9-1.2,3.1-1.3c2.3-0.1,4.5-0.3,6.7,0.6c2.3,2.5,5,4.3,8.4,5c5.5,1.2,9.8,5,14.1,8c3.6,2.6,6.8,4.4,11.2,4.3\n                        C780,617.7,781.7,617.6,783,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73946"),
                d:
                  "M735,602c10.1,4.2,19.7,9.5,29.1,14.9c3.9,2.2,8.5,2.9,11.8,6.1c-1.7,0-3.3,0-5,0\n                        c-0.2-2.1-1.9-2.2-3.3-1.9c-3.7,0.7-6.6-1.4-9.9-2.2c-0.6-0.1-1.5-0.7-1.5-1.1c0.1-6.7-5.3-4.8-8.8-5.5\n                        C746.1,612,735.5,603.6,735,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD363F"),
                d:
                  "M698,623c2.6-2.9,6-3.9,9.7-4c7.1-0.1,14.2,0.1,21.3-0.1c7.1-0.2,13.9,2.6,21,2.4c0.3,0,0.6,1,0.9,1.6\n                        C733.3,623,715.7,623,698,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M654,621c0-0.7-2.6-1.8,0.2-1.9c4.1-0.2,8.2,0.2,12.3-0.1c3.9-0.3,4.6,0.9,2.5,4.1c-4.7,0-9.3,0-14,0\n                        c-0.3,0-0.7,0-1,0C653.3,622.3,654,621.7,654,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF3647"),
                d:
                  "M654,621c1.1,0.7,0.1,1.3,0,2c-1.5,0-2.4-0.7-3-2C652,621,653,621,654,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F49"),
                d:
                  "M1625,311.9c1,0.1,2,0.1,3,0.2c2.8,0.9,5.7,0.2,8.6,0.5c1.5,1.5-0.1,2-1,2.4c-2.4,1.2-5.2,1.2-8.4,1.6\n                        c5.9,0.6,11.2,1.4,16.6,1.2c3.8-0.1,6.9,2.1,10.3,3.3c9.1,3.2,18,6.9,27.9,6.7c4.5-0.1,8.9,0.9,13.4,0\n                        c11.9,0.1,23.7,1.9,35.6,1.8c5.4,0.5,10.7,1.7,15.9,3.3c7.8,2.1,15.8,3.6,23.6,5.7c4.6,1.2,9.4,2.1,13.6,4.5\n                        c2.8,3.6-0.5,3.9-2.6,4.8c-2.3,1-5.8,0.2-6.1,4.2c-2.1,1.8-4.8,1.9-7.3,2.8c-1,0.3-2,0.4-2.5-0.8c-1.4-3-3.8-1.7-6-1.4\n                        c-0.4,0.1-0.9,0.2-1.4,0.3c-2.8,0.4-5.5,0.1-6.9-1.8c0.3,1.4,1,2.6-2.1,2.9c-5.6,0.4-11.2,0.1-16.8,0.2\n                        c-1.4,0-3.2-0.4-3.9,1.4c-0.8,2.3-2.5,2.6-4.4,2c-2.2-0.7-2.2-2.5-1.5-4.7c-3.1,1-5.3,3-8.4,2.6c-3.3-0.5-4.5-1.8-2.9-4.9\n                        c2.4-1.5,5.2-0.5,7.7-1.5c1.3-0.3,2.7-0.4,4-0.4c2.3,0,4.6,0.2,6.9-0.5c12.8-1,25.7-1.7,38.7-2.6c-1.9,1-2.1-3.9-4.6-0.9\n                        c-7.5-3.7-15.7-5.6-23.7-6.4c-7.3-0.7-13.8-3.7-20.9-4.8c-8.5-1.2-16.9-1-25.4-1.1c-16.8,0.1-33.6,1.8-50.4,2.1\n                        c-2.9-0.7-5.8-1.7-9-1.1c-1.6,0.3-3.9,0.8-4.2-2c-0.3-2.6,1.8-2.8,3.6-3.2c-6.2-6.2-13.8-7.1-21.8-7\n                        c-5.3,0.1-10.3-2.6-15.6-3.3c-1-0.1-2.5-0.8-1.1-2.4c7.7-2.4,15.6-1.9,23.5-2.3c1.9-0.1,0.6-1.4,1.4-1.5\n                        C1621.8,311.6,1623.4,311.2,1625,311.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M1625,311.9c-1.7,0.1-3.3,0.1-5,0.2c-8.4,2.5-17.1,1.4-25.7,1.4c-14.8,0-29.5,0-44.3,0\n                        c-1.3,0-2.6,0.2-3.9,0.6c-5.1,0-10.3,1.7-15.2-1.1c-1.1-1.4-2.6-0.8-4-0.9c1.2-1.4,2.7-0.9,4.2-1c13.4-0.4,26.7-0.7,40.1-1\n                        c1.3,0,2.7,0.3,3.7-0.9c6.3,0,13-1.3,18.9,0.3C1604.2,312,1614.8,309.5,1625,311.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1692,315c4.8,2.1,10.1,1.2,15.1,1.8c11,1.3,21.9,2.9,32.9,4.2c0.3,0,0.6,0.1,1,0.2\n                        c-0.2,1.3-1.3,0.6-2,0.8c-4.5,2.1-9.1,0.3-13.6,0c-5.6-0.4-11.2-1.6-16.8-1.6c-6.2-1-12.3-1.9-18.6-1.9c-3.7,0-7.4-1-11.1-1.6\n                        c-2.3-0.4-4.5-0.7-6.8,0.2c-5.3,1.1-10.4-0.4-15.6-0.9c-0.5-0.1-1-0.2-1.5-0.4c-1.7-1.2-4.6-0.8-5-3.7\n                        c12.2,1.3,24.4,0.9,36.6,2.8C1688.3,315.2,1690.2,315,1692,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43740"),
                d:
                  "M1649.9,312c1.4,1.5,3.9,1.1,5.1,2.9c0.2,1.1-0.6,1.8-1.3,1.6c-5.5-1.5-11.5-0.6-16.7-3.4\n                        c-3-0.5-6.1,0.8-8.9-1C1635.3,312.1,1642.6,312.1,1649.9,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1790,322c3.7,0.7,7.3,1.4,11,2c5.4,1.1,10.9,1.5,16.1,3.2c0.3,1-0.5,1.4-1.1,1.9\n                        c-3.6-0.3-7.5,1.5-10.5-2.1c-0.5-0.6-2.7-2.4-2.4,0.9c-1,0-2.8,0.2-2.8,0.1c-0.4-3-2.9-2-4.3-1.8c-6.9,1.1-13.3-2.2-19.9-3\n                        c-5.8-0.7-12.2-0.4-17.5-2.5c-3.5-1.4-8.6,1.5-10.6-3.6c12.4,0.9,24.7,2.8,37,4.6C1786.7,321.7,1788.4,321.8,1790,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0454D"),
                d:
                  "M1790,321c-2.2,0.2-4.1-0.4-5.9-1.6C1786,320.3,1789.1,316.4,1790,321L1790,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M1708,319c10.4,0.1,20.6,2.2,31,3c1.1,1.4,2.6,0.9,4,1c0.7-0.5,1.4-0.9,2.3-0.8\n                        c13.8,2.3,27.8,3,41.5,6.5c3.3,1.4,7.1,1.7,10.1,3.5c2.7,1.6,5.1,2.9,8.3,3c2.2,0.1,3.2,1.5,1.8,3.7c-0.2,0.4-0.6,1.1-0.6,1.1\n                        c-10.9-3.4-22.3-3.1-33.4-5.1c-2.9-1.8-6.2-0.8-9.2-1.2c-15.4-1.8-30.7-4.1-45.5-9c-3.2-1.1-6.6-0.2-9.9-1.2\n                        c-1.3-0.4-2.6-0.5-3.8-1.2c-0.8-0.5-1.9-1-1.5-2.2c0.3-0.9,1.3-1,2.1-0.9C1706.2,319.5,1707.2,319.9,1708,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73151E"),
                d:
                  "M1816,329c0.3-0.3,0.7-0.7,1-1c3.4-1.2,6.7-0.5,10.1,0c0.3,0,0.6,0,0.9,0c0.2,0.3,0.3,0.5,0.3,0.8\n                        c-0.1,0.3-0.1,0.4-0.2,0.4c-0.7,0.6-1.5,0.2-2.2,0.3c1.9,0.6,3.8,0.1,5.8,0.2c12.6,1.1,25,3.8,37.3,6.5\n                        c3.4,0.7,6.8,1.5,10.2,1.9c14.7,2.9,29.3,6,43.7,10c8,3.1,16.6,4.2,24.6,7.2c0.9,0.3,1.9,0.5,2.8,1c0.9,0.5,1.9,1.1,1.7,2.2\n                        c-0.2,1.5-1.5,1.4-2.7,1.5c-1.5-0.1-3-0.7-4.6-0.7c-4.1-0.7-8-2-11.9-3.3c-5.5-2-11.4-2.4-17-3.9c-0.5-0.1-1-0.3-1.5-0.4\n                        c-3.8-1.6-8-1.4-11.9-2.8c-8.5-2.5-17.3-3.4-25.8-5.9c-4.6-1.5-9.4-2-14.3-2c-0.5-0.1-1-0.3-1.4-0.6c-1.2,0.1,1.1-1.4-0.9-1.5\n                        c-8-0.4-16-1.2-23.9-2.1c-1-0.1-1.8-0.8-2.3-1.7c0.7-1.6,0.1-2.1-1.5-2c-3.3,0.1-6.5-0.6-9.5-2c-1.3-1.7-3.7-0.4-5-2\n                        C1817.3,329,1816.7,329,1816,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A252F"),
                d:
                  "M1834,335c5,0.7,10,2,15.2,1.2c4.2-0.7,8.1,2.7,12.5,2.1c0.6-0.1-0.7,1.1-0.8,1.8\n                        c-2.2,2.1-4.6,0-6.6,0.4c-1-0.1-0.4,1.1-0.4,0.4c0-0.1,0.1-0.1,0.3-0.1c1.1,0,2.7-0.9,2.7,1.3c1.8,2.2,5.6-0.2,7,3\n                        c0.7,0.2,1.3,0.2,2,0c6.6,1.6,12.7,5.2,19.8,6c-1.8,0-3.6,0.1-5.3,0c-1.6-0.1-2.1,0.5-1.5,2c-0.8,0.4-1,1.2-1,2\n                        c-1.9,0-3.1-1.9-5-2c-3.5-2.8-7.4-4.9-11.7-6.3c-1.5-0.5-2.8-0.7-4.3-0.7c-6.2-0.6-12.2-2.1-17.8-4.9\n                        c-1.4-1.9-3.6-0.9-5.4-1.4c-0.4-0.2-0.8-0.4-1.1-0.7c-2.9-2.4-6.4-2.2-9.9-2.5c-1.2-0.1-2.3-0.5-3.5-0.9\n                        c-0.9-0.4-1.9-0.6-2.7-1.2c-0.5-0.4-1-0.9-0.3-1.6c0.6-0.6,1.2-0.3,1.7,0.1C1823.3,333.7,1828.7,334.3,1834,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1818,333c-0.3,0.1-0.7,0-0.9,0.2c-0.5,0.5,0,0.7,0.4,0.8c0.9,0.1,1.9,0.1,2.5,1\n                        c-2.5,2.2-5.3,1.2-8,0.7c-8.4-1.4-16.7-3.6-25-5.7c-8.5-3.2-17.5-3.5-26.3-4.8c-5.9-0.8-11.6-3.1-17.7-2.2\n                        c0.1-1.4,0.8-2.1,2.3-1.7c14.1,2.9,28.5,3.7,42.6,6.4c9.2,1.7,18.6,3,27.9,4.4C1816.6,332.1,1817.3,332.7,1818,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1818,329c1.8,0.4,4.4-1.2,5,2C1821.2,330.6,1818.7,332.2,1818,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1769.2,322.5c-1,0.7-2.1,0.6-3.4,0C1767,321.8,1768.1,321.8,1769.2,322.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841822"),
                d:
                  "M1502,312c-2.1,1.9-4.7,0.6-7,1C1497.1,311.1,1499.7,312.3,1502,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4E57"),
                d:
                  "M1531,312.9c5,0,9.9,0,14.9,0c3.3-0.8,6.6-0.4,9.9-0.3c0.1,3.6-2.8,2.6-4.6,2.7\n                        c-10.4,0.4-20.8,1.2-31.2,1.1c-5.4-0.1-10.9-0.5-16.1,1.6c-8.9,1.2-17.9,0.5-26.8,1.4c-15.7,1.6-31.5,0.5-47.2,2.8\n                        c-14.3,0.5-28.7,1.5-43,2.1c-0.9-0.1-1.7-0.3-2.5-0.7c-1.2-1.2-0.4-1.9,0.6-2.6c16-0.5,31.9-1,47.8-2.8\n                        c9.8-1.1,19.7-0.8,29.5-1.2c1.6-0.1,3.4,0.5,4.7-1c1.2-1.1,2.9,0,4.2-0.9C1491.2,315.3,1511.1,313.8,1531,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831823"),
                d:
                  "M1437.1,312.1c4.7,2.2,9.8,0.1,14.7,1.5c-5.7,0.1-11.3,1.9-17.1,1.5c-1.9-0.1-4-0.8-5.7,1\n                        c-2.2-0.1-4.5,0.5-7.7-1.2C1427.1,312.7,1432,312,1437.1,312.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA414C"),
                d:
                  "M1385,321c-0.3,0.7-0.6,1.4-0.9,2c0.5,0.8,0.4,1.5-0.3,2.1c-0.9-4.8-3.6-8.7-6.9-12.1\n                        C1380.9,313.4,1384.5,317,1385,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831823"),
                d:
                  "M1471.2,315.1c-1.2,1.2-2.8,0.7-4.2,0.9c-7.3,0-14.7,0-22,0c3.8-2.1,7.8-0.7,11.7-0.9\n                        C1461.5,314.8,1466.4,315.1,1471.2,315.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831823"),
                d:
                  "M1430.9,316c3.7,0,7.4,0,11.1,0C1438.4,317.4,1434.6,317.5,1430.9,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43642"),
                d:
                  "M639,601c0.8-3.3,3.5-1.7,5.3-2c1.4-0.2,2.7-0.4,2.5-2.3c-0.1-1.5-1.3-1.8-2.5-1.7\n                        c-2.6,0.2-5.4-0.9-7.7,0.9c-2.5,2-3.8-1.1-5.9-1c-3.9,0.2-7.9,0.1-11.8,0c-0.8-1.1-1.7-0.7-2.5,0c-0.8,0.7-1.8,1.4-2.7,0.6\n                        c-1.3-1.1-0.1-2.2,0.5-3c1-1.4,1.3-2.4,0.1-3.9c-1.7-2.3,1.6-1.5,2.2-2.7c0.6-1.3,1.4,0.5,1.3,1.4c-0.1,3.2,2.3,2.6,4.2,2.9\n                        c2.9,0.5,1.4-1.9,2-2.9c0.3-0.5,0.6-1.1,1-1.7c0.4,0.4,0.6,0.6,0.8,0.9c0.8,1.3-1.7,3.9,1,4c1.8,0.1,0.9-2.4,1.1-3.8\n                        c0.5-4.5,4.3-5.5,7.4-6.1c3.1-0.6,5.8-1.8,8.5-3.4c0.6,4,2,4.5,3.7,1.4c0.7-1.2,0.7-2.9,1.8-3.8c2.6,0.6,0.1,2.8,1.5,3.8\n                        c3.9-3,8.1-1.1,12.2-0.3c1.6,0.3,3.8,2.2,3.4-1.6c2.6,1.1,3.2-4,6.5-2c1.7,1.1,4.3,1,6.2-0.5c1.8-1.4,3.8-1,5.7-1.1\n                        c5.8,0.4,9.9,4.2,14.7,6.9c1.6,1.3,4.4,1.4,4.5,4.3c-0.6,0.8-1.4,1.3-2.4,1.6c-4.4,0-9.1,1.7-13.3-1.1\n                        c-1.1,5.4-2.3,5.9-8.7,2.6c-1.5-0.8-2.9-1.3-5.7-1.6c1.9,0.2,2.6,0.3,3.3,0.5c0.9,0.3,2.1,0.5,1.9,1.9\n                        c-0.2,1.5-1.5,1.9-2.6,1.7c-2.8-0.6-4.6-0.2-5.7,2.9c-0.6,1.9-3.1,1.4-4.9,1.5c-3.8,0.3-7.5-0.1-11.3,1.1\n                        c-3.3,1-5,2.6-5.8,5.7c-0.7,0-1.3,0-2,0C644.3,602.1,641.7,602,639,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M649,601c-0.3-5.5,1.9-7.5,9.3-8c2.3-0.1,4.6,0,7,0c2.5-0.1,5.8,1.3,5.4-3.6c-0.1-1.3,1.7-2.9,3.8-1.4\n                        c1.3,0.9,2.5,1.6,4.2,0.3c-1.3-2.1-4.1-0.9-5.5-2.8c2.3-1,4.4-0.2,6.5,1c0.8,0.4,1.7,1.7,2.5,0.6c3.4-4.7,2.6,0.8,3.5,1.6\n                        c1.6-0.6,1.1-1.8,1.3-2.7c0.5-2.5,0.3-1.8,3.2-1.2c3.8,0.8,7.9,0.2,11.8,0.3c0.9,0.2,0.3,1.6,2.3,1.7c4.7,0.2,7.6,3.6,8.7,8.3\n                        c-1.7,0-3.3,0-5,0c-1.1,0-2.5,0.3-2.8-1.4c-0.3-1.8,2.3-0.1,2.2-2.1c-3.2-1.3-5.8,0.9-8.6,1.3c-5.4,0.7-3.2,4.5-4.1,7.5\n                        c-2.8-1.5-5.7-2.4-6.6,2.6c-1.9-3-2.5-7.4-7-3.8c-1.2,1-2.2,0-3-0.8c-1.1-1.1-2.2-1.7-3.1,0.1c-0.8,1.7-1.5,1.7-2.2,0\n                        c-0.3-0.8-1.3-1.1-1.4-0.5c-1.6,5.7-6.4,2.9-9.6,3.4C657.7,601.8,653.3,601.1,649,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D303C"),
                d:
                  "M704,584c-1.3-1.6-3.3-2-5-3c-0.2-0.3-0.3-0.6-0.3-0.8c0.1-0.3,0.1-0.4,0.2-0.4\n                        c3.9-1.7,17.6,1.1,18.9,4.6c1.8,5,5.3,5.5,9.7,5.6c4.8,0.1,10.4,6.4,10.5,11.1c-1,0-2,0-3,0c-0.3,0-0.6,0-1,0\n                        c-10.5-3.7-19.6-10.3-29.5-15.3C703.9,585.4,703.8,584.7,704,584z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73A45"),
                d:
                  "M704,584c9.1,5,18.1,10,27.2,15.1c1,0.6,1.9,1.3,2.9,1.9c-5.8,2.1-9.6-2.5-14.1-4.5\n                        c-2.4-1.1-5.1,0.8-7-1.5c-2.8-3.5-5.1-7.7-10.5-7.8c-0.2,0-0.3-1.4-0.5-2.2C702.4,584.2,703.2,584,704,584z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M639,601c2.7,0,5.3,0,8,0c2.1,2.3,6.5-0.5,7.7,4.1c-3.4-3-8,1.1-11.4-2.7\n                        C642.4,601.3,638.9,606.5,639,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M648.7,610.8c-1.8-1.4-3.4-1.9-5.2-1.9c-1.1,0.1-3.1,0.7-3-1.3c0.1-1.5,1.8-1.5,3.2-1.6\n                        C646.7,605.8,648.2,607.2,648.7,610.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M649,619c-2,0-4,0-6,0c0.3-4.2,4-2.1,6-3.1C649.8,615.5,650,616,649,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3340"),
                d:
                  "M604,573c3.6-1.1,0.5-4.3,2.2-6.5c0.6,3,2.9,3.8,5,3.1c6.8-2,13.6-0.5,20.4-0.6c2.4,0,4.7,0,5.7-2.8\n                        c0.6-1.6,1.8-1.3,3.2-1.3c3.8,0.1,7.6,0.8,11.3-0.7c2.7-1.1,3.2,2.5,5.8,2.4c3.1-0.2,6.6-1.2,9.3,1.5c-3,2.4-6.5,1.8-10,2.3\n                        c-5.4,0.6-11.2-0.6-15.9,1.2c-3.3,1.3-6.5,3-10,4.1c-3.6,1.2-7.5,1-9-1.8c-1.7,1.1-0.8,4-3.1,4.8c-1.7-0.7,0.5-2.2-0.8-3\n                        c-2.3,0.3-1.5,3-3.2,4.2c-1.6-0.2,0.4-4.7-3.4-3c-1.7,0.8-1.5-1.5-1.1-2.8c0.4-1.1,0-2.2-1.1-2.3c-1.5-0.2-1.2,1.1-1.4,2.1\n                        c-0.2,1,0.7,2.7-1.2,2.6C604.8,576.2,603.7,575.1,604,573z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99313D"),
                d:
                  "M699,580c0,0.3,0,0.7,0,1c-4.7-2.7-9.3-5.3-14-8c-3.7-2.3-7.3-4.7-11-7c-1-0.7-2-1.3-3-2\n                        c2.9-2.6,6.2-0.6,9.1-0.3c13,1.5,26.1,3,38.8,6.2c1,3.8-1.7,4.3-4.2,4.2c-5.1-0.1-10.3,0.8-15.2-1.6c-0.7-0.3-1.6-0.9-2.2,0\n                        c-0.7,0.9-0.3,1.9,0.1,2.8C697.9,576.9,700.5,577.7,699,580z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43642"),
                d:
                  "M621.4,586.1c0.6,0.1,1.2,0.3,0.8,0.9c-0.2,0.3-0.7,0.6-1.1,0.7c-0.5,0.1-0.9-0.4-0.6-0.9\n                        C620.6,586.4,621.1,586.3,621.4,586.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731520"),
                d:
                  "M642,557c-0.3-0.7-0.7-1.3-1-2c0-2.3,1.9-2.6,3.4-2.8c3.9-0.4,8.3-0.3,11.5,1.3\n                        c7.4,3.8,14.9,4.7,23,3.8c1.8,0.1,3.5,0,4.5-1.8c0.9-0.4,1.8-0.3,2.6,0.2c1,1.3,0,3.8,2.7,4.2c0.9-1.2-2.3-2.3-0.3-3.5\n                        c1.2-0.6,2.4-0.7,3.7-0.7c2.5,0.5,5.3,0.3,7,2.7c-0.5,2.1-2.8,1.4-4.3,3.2c7-0.5,13.6-0.4,20.1,0.7c1.5,0.2,3.4-0.4,3.3,2.4\n                        c0,0.9,1.8,0,2.6,0.6c2.5,1.9,0.3,2.4-1,2.7c-2.6,0.6-5.2,0.3-7.8,0.2c-0.5-0.1-1-0.2-1.5-0.3c-2.1-0.7-4.2-0.7-6.4-1\n                        c-0.5,0-0.9-0.1-1.3-0.3c-1.4-0.6-3-0.6-4.5-0.9c-0.4-0.1-0.9-0.2-1.3-0.3c-1.8-0.5-3.6-0.2-5.4-0.3c-1-0.2-2-0.2-2.9-0.4\n                        c-1.8-0.4-3.6-0.7-5.4-0.8c-4.2,0-8.3-0.4-12.3-2c-4.2-1.3-8.6-2-13-2C652.9,557.9,647.3,558.2,642,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53747"),
                d:
                  "M689,564c1,0,2,0.1,3,0.1c1.9,1.3,4.2-0.3,6,1l0,0c1.5,1.2,3.5-0.2,5,1l0,0c2.2,1.3,4.8-0.3,7,1\n                        c0.3,0,0.6,0.1,0.9,0c3.6,1,7.2,0.4,10.8,0.9c1.4,0.2,2.7,0.2,3.4,1.5c-0.1,1.4-1.2,1.8-2.2,2.3c-1.4,0.4-2.8,0.4-4-0.7\n                        c-14.8-2.3-29.7-4.6-44.5-6.9c-1.1-0.2-2.3-0.1-3.5-0.1c-1.2-0.2-2.5-0.3-3.3-1.9c1.2-0.1,2.3-0.1,3.3-0.2\n                        c4.3,0.4,8.6,0.7,12.9,1.1C685.5,564.2,687.4,562.9,689,564z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M782,450c10.9-0.5,21.5-2.6,32-5l0,0c11-0.7,21.8-2.6,32.7-4.4c8.1-1.3,16.2-2.4,24.3-3.6\n                        c3.3-0.5,6.2,0,7,4c2.6,4,1.8,8.8,3.2,13.1c-0.3,5.3,1.7,10.5,0.7,15.8c-0.4,0.7-0.7,1.6-1.8,1c-0.8-0.4-1-1.3-1.2-2.1\n                        c-1.5-7-2.9-14-8.8-19.2c-1.2,0.4-2.2,3.9-4.6,2.1c-2.5-1.9-1.1-4.4,0.2-7c-2.5,0.8-1.9,4.3-4.6,4.3c-1.5-2.1,0.3-4,0.4-6\n                        c-0.8,2.1-0.9,4.6-2.4,6.5c-0.6,0.7-2.6,0.8-0.5,2.3c1,0.7,1.5,2.8,0.5,3.6c-1.7,1.4-4.3,0.9-6.4,1.6\n                        c-1.3,0.4-1.6-1.3-1.9-2.4c-0.4-1.8-7.4-5.4-9.1-4.8c-0.7,0.2-1.2,0.7-1.1,1.4c0.3,2.5-0.9,4.1-2.9,5.3\n                        c-1.2,0.7-1.6,1.7-0.9,2.9c0.6,1.1,1,2.3-0.4,3c-1.3,0.7-2.8,0.3-3.6-0.8c-0.9-1.4-0.9-1.3-1.7,0.1c-0.7,1.3-2.8,1.5-3-0.1\n                        c-0.3-2.4-7.6-2.7-2-6.7c1.6-1.1,3.5-0.8,5.4-1.7c-3.1-0.6-5,1.4-7.2,2.6c-1.5,0.8-3,0.7-4.1-0.6c-1.3-1.4-0.5-2.3,0.3-2.7\n                        c-2,2.6-4.5,5.8-9.3,4c-1.1-0.4-2,0.9-2.9,1.8c-1,1-2.3,1.7-3.6,0.9c-2.1-1.3-3.7-2-4.5,1.3c-0.2,0.8-1.4,0.6-2.2,0.3\n                        c-3.1-1.2-6.3-0.5-9.4,0.1c-2.4,0.5-5,0.3-4.9,4.5c0.1,2.1-2.7,4.7-4.7,6.7c-2.7,2.9-4.3-2.1-6.7-0.9c-0.5,0.2-2-1.9-1.2,0.9\n                        c0.4,1.5-1.7,1.5-3,1.7c-2.9,0.4-6-0.1-8.7,1.8c-1.5,1-2-0.3-2.4-1.4c-0.6-1.9,0.4-3.5,0.7-5.3c-1.3-0.6-2.7-0.2-3.2,0.6\n                        c-2.2,4-6.3,4.5-10,5.7c-1,0.3-2.1,1.6-3,0c-0.8-1.4-0.2-2.6,1.2-3.3c1.4-2.1,4.2-1.7,6.9-3.7c-3.4,0.3-5.4-0.4-5.4-3.4\n                        c-0.7,2.4,0.7,5-1.3,7.1c-1.8-0.6-3.3-2-5.5-0.6c-1.4,0.9-3.4,0.7-4.3-1.1c-1-1.8,1-2.4,2.4-3.6c-3.3-1.3-6-1-7.9,1\n                        c-3.1,3.3-5.5,0.8-7.9,0.3c1.3,2.5,3.9,2.4,6.5,1.2c1.4-0.6,2.5-0.8,3.7,0c1.1,0.7,2.5,1.2,2.5,2.9c0,1.4-1.3,1.8-2.3,2.3\n                        c-0.7,0.4-1.5,0.7-2.3,1.1c-0.4,0.2-0.9,0.3-1.3,0.4c-2.1,0.4-3.9-0.5-5.8-1c-3-0.9-5.7-1.6-8.9,0.7c-3.7,2.7-8,0.7-9.9-4\n                        c-2.7,2.1-5.6,3.6-9.1,2.4c-1-0.4-2.7,0-2.8-1.5c-0.1-1.5,1-2.3,1.8-2.5c-4.1,3.1-8.6,8-15.1,3.3c0.9-3.9,3.8-6.2,8.4-6.2\n                        c2.5,0,4.9-0.2,6.8-2.1c9.8-2.5,19.8-3.4,29.8-5c11.4-1.8,22.9-3.5,34.2-5.6c6.3-1.1,13-0.6,19-3.4\n                        C777.1,448.8,779.8,451.2,782,450L782,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781526"),
                d:
                  "M692,465c-0.5,3.4-3,3.6-5.5,3.2c-4.5-0.8-7,1.9-9.5,4.8c-0.8,1-2.1,1.5-3.1,1.1\n                        c-4.2-1.7-8.4,0.1-12.5,0c-6.8-0.3-12.5,2.9-18.7,4.4c-0.8,0.2-1.5,0.6-2.1,1.3c-5.1,5.2-6,5.5-13.2,4c-0.5-0.5-0.2,0.7,0,0.1\n                        c0.1-0.3,0.3-0.3,0.5,0c1.6,2.8,0.1,5-3.6,4.9c-2.6-0.1-5.3-0.4-7.9-0.2c-4.8,2.6-4.8,2.6-8.5,1.1c-0.2,2.9-1.1,5.8,0,8.8\n                        c0.4,1.1,0,4-2.2,2.1c-3.9-3.5-6.6-0.9-9.5,1c-1,0.6-1.7,1.6-3,1.5c-1.7,0.3-2.4-2.8-4.2-1.6c-2,1.3,0.9,2.8,0.1,4.8\n                        c-2.6-4.7-7.3-4.3-11.3-6.5c0.4,2.6,2.6,2.8,3.4,4.2c-1.7-0.3-3.3,1.1-5,0c-2.3-0.2,1.8-4.2-2.1-3.6c-1.8,0.3-4-2.1-4.7,1.6\n                        c-2.5-2.2,2.5-4.9-1.8-6.4c3.2,0.3,6,0.9,9.3-0.1c-3.4-2.9-3.2-5.8-0.5-8.8c1.5-1.6-0.5-3.1-0.3-4.7c1.7,0,3.3,0,5,0\n                        c1.3,1.6,1.3,1.6-0.4,4c4.6,0.5,9.5-1.4,13.7,0.4c3.1,1.3,5.1-0.2,7.6-0.5c0.5-0.1,1-0.8,1.2-1.9c-2.7,3.7-4-0.3-5.7-0.9\n                        c-1.6-0.6-1.1-2.8,0.6-4c11.9-1.8,23.8-4,35.8-5.3c14.9-1.7,29.5-5.6,44.5-6.7C682.9,466.6,687.3,464.6,692,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741523"),
                d:
                  "M598,479c0.2,1.3-3.1,5,2.2,2.9c1.4-0.6-1.1,2,0.8,2.5c0,0,0.5,0,0.6-0.2c0.6-1.1,0.2-3.2,2.6-2.6\n                        c1.1,0.3,0.4,1,0.4,1.5c-0.2,2.3-1.9,5.2-3.3,4.6c-3.4-1.6-3.5,0.9-5,3.3c-0.1-3.6-1.9-4.2-4.6-4.1c-4.2,0.2-8.5,1-12.6-0.2\n                        c-0.1-2,3.8-2,2-4.7c1.1-1.4,2.6-0.8,4-1c3,2,5.5,0.4,8-1C594.4,478.4,596.3,479.2,598,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781526"),
                d:
                  "M593,480c1.2,0.1,2.3,0.3,2.7,2c-3.5,0.3-7,0.9-10.5,0.9c-2.9,0-0.2-1.2-0.2-1.9\n                        C587.7,480.7,590.3,480.3,593,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M553,485c-2.9,1.5-5.9,1.9-9,1C546.9,484.5,549.7,483,553,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M778,444c0.3,0.3,0.7,0.7,1,1c-1.3,2.5-4-0.6-5.4,1.4c-0.8-1-0.5-1.8,0.3-2.6\n                        C775.3,442.4,776.7,443.4,778,444z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M772.4,450.6c-1-2.2-4.3,0-4.9-2.7c-0.1-0.7,0.8-0.9,1.5-0.9C771.2,447.2,772.3,448.3,772.4,450.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M782,450c-2.1,1.9-4.7,0.6-7,1c0.1-1.2-0.4-2.8,1.9-2.2C778.6,449.3,780.3,449.6,782,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M740,449c-1.4-0.2-2.3-0.8-1.1-2.2c1-1.2,2.3-2.1,3.7-3.5c-0.3,1.9-0.5,3.3-0.6,4.6\n                        C741.2,448,740.4,448.2,740,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M609.3,470.7c-1.6,1.3-3.3,3-6,1.2C605.4,470.3,607.6,471.6,609.3,470.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M711.2,453c0.8,2,1.1,3.3-0.6,3.9c-0.4,0.1-0.9-0.3-1.3-0.4C709.9,455.4,710.4,454.4,711.2,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d: "M559,484c-1.8,1.8-4,0.7-6,1C554.8,483.2,557,484.3,559,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M579.3,478.4c-0.3,0.2-0.7,0.5-1,0.6c-0.6,0.1-1.4,0.2-1.5-0.7c0-0.3,0.5-0.8,0.9-0.9\n                        C578.4,477.1,579,477.5,579.3,478.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M581.8,479.3c-0.1-1.9-0.2-3.3,0.9-3.5c1-0.2,0.9,1,0.5,1.7C582.9,477.9,582.6,478.3,581.8,479.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M731.8,457c-0.9-0.1-2.5-0.1-2.5-0.3c-0.2-1.2,0.9-0.6,1.5-0.7c0.4-0.1,0.9,0.2,1.3,0.3\n                        C732,456.5,731.9,456.8,731.8,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M761.9,448.3c-0.2-0.4-0.5-0.8-0.5-1.2c0-0.6,0.6-0.8,1-0.4c0.3,0.3,0.3,0.9,0.4,1.3\n                        C762.8,448,762.3,448.1,761.9,448.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M575,505c1.9,2.4,0,5-0.1,7.5c0,2.1-3,1.6-4.9,0.5c-0.9-1.2-4-1.9-0.8-4.1c0.4-0.3,2.5-3.2-2-5.1\n                        C571,504.2,572.8,506.3,575,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721424"),
                d:
                  "M680,558c-8.6,2-16.8,1.7-24.2-3.7c-0.1-0.1-0.3-0.3-0.4-0.3c-4.7,2.2-9.9-3.6-14.4,1\n                        c-7.8,0.8-15.1-3.4-22.9-2.1c-0.6,0.1-1.6-0.5-2-1.1c-2.2-3-3.7-1.6-5.4,2.2c-0.8-7.5-6.9-4.3-9.7-7c0.3-1.7,0.8-3.2,0.1-5\n                        c-0.9-2.6,0.2-3.8,2.9-2.8c1.3,0.5,2.4,2.5,3.2-0.4c0.6-2.3-0.1-3.6-2.5-3.7c-2-0.1-3.9,0-6,0c1.3-1.8,3.2-0.7,4.7-1\n                        c1.6-0.3,3.9-0.2,4-2c0.2-2.3-2.2-1.9-3.7-2c-0.5,0-1-0.1-2.9-0.3c3.3-0.6,4.9-3.8,6.9-1.8c2.2,2.2,4.6,5,3,8.8\n                        c-0.5,1.2-1.1,2.5,0.5,4.1c1.9-4.2,0.2-8.6,1-12.7c2.5,0.5,0,2.6,1.9,3.4c0.9-3.5,3.5-2.7,6.1-2.2c-0.2,1.4-1.8,0.3-2.2,1.2\n                        c4.5,1.3,7.9-0.1,8.3-3.4c0.6-1.6,2.6-2.9,3.3-2c2.5,3,6.6-0.1,8.9,2.9c0.7,0.9,2.5,0,3.8-0.1c0.7-0.1,1.4-0.1,2.2-0.1\n                        c0.8,0,1.5,0,2.3,0c1.8,0,3.6-0.1,5.4,0.3c1.5,0.4,2.9,1.1,3.9,2.3c2.2,3.2,5.2,3.6,8.1,1.5c3.9-2.9,7.6-2.6,11.7-0.7\n                        c1,0.5,2.3,2.5,2.7-0.7c0.1-1.2,2.4-0.7,3.6-0.4c6.2,1.1,12.1,3.5,18.6,2.7c2.1-0.2,3.5,0.7,4.5,3c0.8,2.1,2.6,3.2,5.6,2\n                        c4.6-1.9,9.3-1.3,14.3-0.4c3.2,0.6,7.7,3.6,11-0.7c0.6-0.7,1.9-0.6,2.9-0.6c5,0,10,0.2,15,0.3c1.1,0,2.4,0,2.9,1.4\n                        c-0.1,2.6-2.3,2.5-3.9,2.9c-2.1,0.5-4.2,0.8-6.3,1.5c-0.8,0.2-1.6,0.3-2.4,0.4c-4,0.4-8,0.9-11.9,1.8\n                        c-13.6,3-27.3,5.3-40.9,8.2c-3.2,0-6.2,1.2-9.3,1.4c-2.9,0.2-1.4,1.8-1.3,3C680.5,557.2,680.3,557.7,680,558z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M642,529c-2.3,0-5,1.4-6.5-1.7c-0.3-0.6-0.7-0.4-1.5-0.1c-1.4,0.5-3.1,2.6-4.4-0.8\n                        c-0.6-1.7-2.4,0.5-3.7,0.7c-2.1-4.1-4.8-6.6-10.1-6.1c-6.6,0.6-13.2-0.1-19.9,0.2c-4.3,0.2-5.7-1.4-5.1-5.4\n                        c0.7-4.2-1.8-9,2-12.7c0.9-3.7,5.3-3.5,7.3-6.5c0.9-1.4,4.1,2.4,6.5,3.4c0.4-1.1-0.1-2-0.8-3c-1.3-2.2,0.6-4.3,0.7-6.5\n                        c0.1-4.9,2.6-0.5,3.6-0.7c2.1-0.4,3.5-1.1,4.7-2.7c0.5,0.5,0.9,1,1.3,1.5c1.9,2.1,4.6,2.6,6.8,4c2.4,2.1,5.5,1.1,8.2,2.2\n                        c1.3,1.1,1.7,2.3,0.6,3.7c-0.2,0.2-0.4,0.5-0.7,0.7c-3.5,1.8-3.8,2.1-4.1,5.1c-0.6,0.4-1.3,0.4-1.9,0\n                        c-0.7-0.5-0.9-1.3-1.1-2.1c-0.1,0.9,0.5,1.5,1,2c0.2,0.5,0.1,0.9-0.3,1.2c-1.5,0.9-3.2,0.9-4.8,1c-3.5,0.4-4.1-0.1-4.6-2\n                        c2.1,2.4,2.9,7.5,7.7,9.9c1.4,0.3,2.8,0.5,4.1,1c2.3,1.3,4.7,2.3,7.4,2.3c3.9,0.9,8.3,0.3,11.5,3.5\n                        C644.1,523.5,642.7,526.1,642,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781526"),
                d:
                  "M584.5,505.5c-0.7,0.6-1.3,1.6-2.1,1.7c-1,0.2-1.8-0.8-1.8-1.9c0-0.7,0.2-1.6,1.4-1.4\n                        C583,504.1,583.9,504.3,584.5,505.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF5B68"),
                d:
                  "M519,175.1c2.6-4,7.9-3,11-6.1c4.7,0.2,8.3-2.8,12.3-4.5c1.8-0.8,3.5-1.5,5.5-1.5\n                        c4.2,0.1,8.2-0.2,11.6-3.2c1.7-1.5,3.8-0.6,5.7-0.8c1.6-0.8,3.2-0.6,4.8-0.3c0.5,2.8-2,2.7-3.4,3c-7.6,1.7-15,3.9-22.4,6.1\n                        c-3.6,1.1-7.2,2.4-10.7,3.9c-3.3,0.4-6.4,1.9-9.5,2.8C522.2,175,520.7,176.3,519,175.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D95C6C"),
                d:
                  "M570.1,159.1c-1.7,0-3.4,0-5.1-0.1c3.1-1.9,6.5-2.1,10-2c1-0.7,2-1.3,3-2c1.5,0.1,2.9,0.7,4,1.8\n                        c-1.9,2.1-4.8,2-7.2,3C573.1,159.9,571.5,160.4,570.1,159.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("985457"),
                d:
                  "M519,175.1c4.8-1,8.9-4.1,14-4.3c0.8,1.9-1.6,1.3-1.9,2.4c-20.6,7.5-40.1,17.4-59.7,27.1\n                        c-0.7,0.4-1.6,0.5-2.3,0.7c-1.1,0.6-2.1,0.7-3.2-0.1c3.6-3.6,8.5-4.7,12.7-7.2c1.5-0.9,3.1-1.8,4.6-2.7\n                        c3.7-2.7,7.9-4.4,12.1-6C503.3,182.1,511.3,179,519,175.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE5F6E"),
                d:
                  "M495.2,185.1c-3.7,2.7-7.9,4.3-12.1,6c-0.4,0-0.8-0.1-1.1-0.1C486.1,188.4,489.7,184.7,495.2,185.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M654,142c11.6-1.2,22.8-4.8,34.5-5c3.8-0.1,7.7-2.6,11.5,0c-3.2,2.8-7.4,2-11.1,2.9\n                        c-3.9,0-7.7,0.6-11.5,1.3c-3.4,1.1-7,0.5-10.4,1.3c-1.2,0.6-2.7,0.5-4,1c-7,0.1-13.6,3-20.7,2.4c-0.8-0.3-1.6-0.7-1.3-1.8\n                        C645.5,144.2,649.5,141.5,654,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F5B5E"),
                d:
                  "M575,158.9c2.2-1.2,4.6-1.5,7-2c0.8,0.1,1.6,0,2.1-0.8c4.5-1.8,9.4-2,14-3.1c1.9,0,3.9,0,5.8-0.1\n                        c1.5-0.6,3-1,4.4,0.2c-11.6,3.6-23.4,5.8-35.3,7.8C572.4,159.1,574.7,159.9,575,158.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4606D"),
                d:
                  "M641,144c0.4,0.4,0.8,0.7,1.1,1.1c-0.5,2.5-2.7,2.2-4.3,2.4c-4.3,0.5-8.5,1.3-12.6,2.5\n                        c-4.2-0.2-8.3,0.6-12.3,2c-2,0-4,0.5-5.8-0.7c0.6-1.5,2.2-1.7,3.4-1.8c9-0.6,17.4-4.1,26.4-4.2\n                        C638.6,145.2,639.1,142.2,641,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76172"),
                d:
                  "M598.1,153c-4.4,2.3-9.3,2.1-14,3.1C588.3,153.2,593.2,152.9,598.1,153z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A05458"),
                d:
                  "M607,151.2c2-0.1,4-0.2,6-0.2c0.3,2.6-2.4,0.7-3,2c-0.6,0.1-1.1,0.1-1.7,0.2c-1.5-0.1-2.9-0.1-4.4-0.2\n                        C604.9,152.4,606,151.8,607,151.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C25E6B"),
                d:
                  "M459,203.9c-0.3-0.3-0.7-0.6-1-0.9c1-2.3,3.1-2,5-2c0,0,0.1,0.1,0.1,0.1\n                        C462.9,203.7,461.4,204.5,459,203.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("975C5C"),
                d:
                  "M459,203.9c1.5-0.7,3.2-1.1,4.1-2.8c0.9-0.1,1.8-0.1,2.8-0.2c1.1,0,2.1,0.1,3.2,0.1\n                        c-9.2,5.4-18.6,10.4-26.8,17.3c-0.7-0.2-1.2-0.7-1.3-1.4c0.2-1.9,1.6-3,3-4.1C449,209.9,454,206.9,459,203.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A54148"),
                d:
                  "M2021,517c-0.8-3.5-2.4-1-3.4-0.3c-4.2,2.9-8.7,3.6-13.6,2.3c0.1-5.4,5.4-5.4,8.2-7.9\n                        c1.4-1.1,2.6-2.6,4.7-2.6c2.8,0,5.1-1.1,7.3-2.7c2-1.4,4.3-2.8,6.8-0.8c0,4,0,8,0,12C2027.7,517,2024.3,517,2021,517z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F393F"),
                d:
                  "M2031,505c-3.2,0-6.3,0.5-8,3.6c-0.9,1.6-1.8,0.6-2.8,0.8c-2.6,0.4-5.4,0.1-7.2,2.7\n                        c-1.2-0.4-1.2-0.4-0.7-3.1c0.2-1.2-1.1-2.2-0.4-3.5c2.1-2.5,4.8-4.3,8-5.2c2,0.1,3.8-0.2,5.6-1.2c1.7-0.9,3.7-1.5,5.5,0\n                        c0,1,0,2,0,3C2030.7,503,2032.2,504,2031,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0444C"),
                d:
                  "M2048,577c-1-1.3-2-2.7-3-4c-0.7-3.8,0.6-7.5,0-11.5c-0.4-2.5,3.2-2.3,5.8-1.2\n                        c-1.4-1.1-1.1-2.6-2.1-3.4c-1.2-1-2.3-2.1-3.3-3.2c-1.5-1.5-3.4-2-5.4-2.5c-2.5-1-4.1-2.8-4.6-5.4c-0.9-4.2-3.5-8.1-2.5-12.7\n                        c0.3,0,0.9,0.1,0.9,0.1c1.2-4.5,5.2-3.5,8.3-4.2c0.6,3.5,2.7,0.5,4,1c1,1.5,0.8,4.1,3.6,4.1c0.8,0,1.2,0.7,0.9,1.4\n                        c-0.7,1.6-2.5,3.2-0.4,4.8c1.9,1.5,4.3,0.3,6.2,0c5.7-0.9,5.8-1,6.5,4.9c0.6,5.4,0.5,10.4-4.6,13.7c-1.4,0.9-1.3,2.4-1.4,3.6\n                        c-0.1,3.3-0.1,6.4-4.6,6.6c-0.3,0-0.7,0.7-0.8,1.1c-0.8,4-0.8,4-4,1.4C2046.6,573.6,2048.5,575.2,2048,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D46"),
                d:
                  "M1967,553c-3-0.3-6-0.6-8.9-1c3.8-5,3.8-5-2.1-6.9c-2.6-0.8-5.3-1.5-8-2.2c-1.1-3.3,1.3-3.3,3.2-3\n                        c3.9,0.7,7.2,0.2,9.6-3.3c1.5-2.1,4.4-1.2,6.3-2.6c3.6-2.8,6.7-6.1,10.7-8.3c2.7-0.7,5.4-1.4,8.2-0.4c1.6,0.6,2.1-0.8,2.8-2\n                        c2.5-4.6,6.1-4.4,9.1,0.6c-2.3,4.1-7.4,4.1-10.4,7.2c-1.2,1.2-3.4,1.6-3.6,3.8C1977.9,540.6,1970.8,545.2,1967,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3942"),
                d:
                  "M1998,524c-1.4-2.6-4.7-1.1-6.4-3c-0.7,1.2-1.7,2.3-2.2,3.5c-0.4,1.1-0.3,1.6-1.9,2.3\n                        c-2.5,1.1-5.5-3.6-7.1,0.9c-0.8-0.6-1.6-1.1-2.4-1.7c-1.1-0.8-1.4-1.9-1.4-3.2c0.4-2.1,2.5-0.7,3.4-1.8c1.7-0.3,3.6,0.7,5-0.9\n                        c2.2-0.9,4.5-1.7,6.6-2.8c5.5-1.6,9.7-5.8,14.9-7.9c2.2,0.5,4.3-1,6.5-0.3c1.8,1-1.8,2,0,3c-3,2.3-7,3.4-9,7\n                        c-1.5,0.9-3.3,1.7-2,4C2000.5,522.8,1999.2,523.3,1998,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBE6E6"),
                d:
                  "M2032.8,533.2c0.8,3.2,1.6,6.4,2.3,9.7c0.7,3.6,2.2,6.6,5.8,8.2c1.8,0.2,2.8,1.4,3.5,2.8\n                        c0.2,1.5-0.8,2.5-1.7,3.5c-0.4,0.5-0.9,1-1.3,1.5c-2.2,3.1-5,5.8-6.7,9.2c-0.6,0.7-1.4,1.3-2.4,1.1c0.7-5.3,4.4-8.8,7.7-12.4\n                        c1.5-1.7,2.3-3.1,0-4.3c-4.4-2.2-5.4-6.4-6.7-10.5c-4.2-12.7-3.6-11-17.9-14c-1.4-0.3-3,0.4-4.2-1c0.5-1,1.4-1.4,2.3-1.9\n                        c0.2,0.1,0.3,0.1,0.5,0c5.2,1.3,10.7,1.4,15.2,4.7c1,0.8,1.9,1.6,2.9,2.4C2032.2,532.5,2032.5,532.9,2032.8,533.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1967,553c0.1-2.6,0.8-4.4,2.9-6.8c3.1-3.5,8.3-5.1,9.7-10.2c0.5-1.9,3-0.7,4.5-1c-0.3,1-0.7,2-1,2.9\n                        c-1.6,1.7-3.3,3.4-4.9,5c-3.3,3.3-7.1,6.2-9.9,10.1C1967.8,553.4,1967.4,553.3,1967,553L1967,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A7A78"),
                d:
                  "M2029,529.9c-5.1-1.6-10.6-1.8-15.2-4.7c0.5-0.1,0.9-0.2,1.4-0.4\n                        C2020.4,524.8,2025.7,524.7,2029,529.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A7A78"),
                d:
                  "M2013.3,525.1c-0.2,1.3-1.2,1.6-2.3,1.9c-4-1.1-8-1.6-11.9,0c2.3-3.5,5.9-1.6,8.9-2\n                        C2009.7,524.8,2011.5,525.1,2013.3,525.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1929,525.4c3-1.9,4.7-1.1,5.7,0.8c1.1,2.1-1.2,3.2-2,4.7c-0.6,1.3-1.6-0.4-2.3-0.8\n                        c-1-0.6-0.3-0.8,0.3-1.2C1935.3,526.4,1931.2,526.3,1929,525.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1916,524c-1-1.2-2.7-2.2-1-4C1915.1,521.4,1918.1,522.1,1916,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1353F"),
                d:
                  "M1977,523c1.2,0.7,1,1.9,1,3c0.1,3.9-4.4,2.6-6.1,5.5c-1.4,2.4-4.3,6.2-8.8,4.8\n                        c-0.8-0.2-1.5,0.6-1.8,1.4c-1.9,5-6.2,4.2-9.8,3.5c-2.2-0.4-3-0.3-3.5,1.7c-2-0.7-4-1.3-6-2c0.7-0.7,1.3-1.3,2-2\n                        c3.2-4.1,8.2-5.8,12.5-7.7c5.4-2.4,11.1-4.3,16.2-7.5C1974,523.1,1975.4,522.5,1977,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1925"),
                d:
                  "M1977,523c-10.5,6.4-22.4,9.9-33,16c-1.5,0.1-2.9-0.2-4.2-1.3c3.4-2.4,6.3-5,10.8-5.7\n                        c3.1-0.4,6.7-2.2,8.4-5.9c1.6-3.6,5.6-2.1,8.3-2.9c2.9-0.8,5.8-1.4,8.7-2.3c1.3,0,2.7,0,4,0C1979,521.7,1978,522.3,1977,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761523"),
                d:
                  "M2008,475c1-1,2-2,3-3c1-0.7,2-0.7,3,0c5.1-1.5,13.9,2.1,16.4,6.6c0.4,0.7,1.1,1.2,2.3,2.3\n                        c-1.7-3.5-1.2-4.9,2.3-3.9c0.2,0.2,0.5,0.6,0.7,0.6c2.9-0.2,6.7,1.1,9.3,3.4c-0.8,4.4-8.4,7-12.5,4.4c-0.6-0.3-0.2-2-1.4-1.2\n                        c-0.5,0.4-0.8,1.5-0.7,2.2c0.6,4.5-0.9,6.1-5.6,5.2c-2.1-1.6-5.1,2.1-6.9-1.6c1.6,4.4,5.2-0.6,6.9,1.6\n                        c-0.4,1.8-1.7,2.5-2.7,3.5c-1.6,1.5-1,2.5,1,2.9c0.3,2.1-1.1,2.4-2.7,2.5c-4.3,1-8,3.3-12,5c-1.3-0.5-2.1-2-4.2-0.4\n                        c-2,1.5-5,1-4.1-3.1c1.6-5.1,5.3-8.9,8.4-13.1c1.5-2.1,1.9-5,5-6.1c2.1-0.8,0.7-2-0.9-2.9c-2.4-1.3-5.3,0-7.5-1.9\n                        C2006.3,477.4,2007.1,476.1,2008,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851728"),
                d:
                  "M2000,502c1.4,0.1-0.5,3,2.7,2.6c3.2-0.4,0.8-2.6,2.4-3.3c0.9,1.2,1.9,2.5,2.9,3.7\n                        c-3.2,2.7-7.1,4.4-9.4,8.5c-1.1,1.9-5.1,1.9-6.6,4.5c-1.9,2.3-4.5,1.9-7,2c3.8-2.9,6-6.9,8-11.1\n                        C1996.6,508,1997.6,504.2,2000,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M2008,475c0.2,2.2-0.8,3.2-3,3c-0.3-0.3-0.7-0.7-1-1C2005.3,476.3,2006.7,475.7,2008,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1120"),
                d:
                  "M1954.2,471.2c2.1,4,4.6,6.7,3.3,10.8c-0.3,0.9-0.5,1.7-1.4,1.7c-0.5,0-1.1-0.6-1.6-0.9\n                        C1957.3,479.2,1953,475.8,1954.2,471.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821E2A"),
                d:
                  "M2026.9,592.9c-0.8-0.4-0.9-1.2-1-2c-1.4-1.8,0.2-3,0.7-4.5c1.5-4.2,3.2-8.3,4.9-12.4\n                        c0.6-1.7,0.8-3.6,2.6-4.7c4.2,0.6,5.5,2.9,3.7,6.5c-1.1,2.1-3.1,3.7-3.9,6.1c-1.3,1.5-2.8,2.9-3,5\n                        C2029.6,589,2028.3,590.9,2026.9,592.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3D45"),
                d:
                  "M2034,582c-0.1-2.6,1.4-4.6,2.6-6.7c1.8-2.9,1.1-4.8-2.4-5.3c-0.8-0.6-0.7-1.4-0.3-2.2\n                        c1-4.2,4.3-6.7,7-9.6c1.9,0.5,3.6,0,5.2-0.8c0.9-0.5,1.7-1.3,2.9-1.4c2.8,0.1,2.7,3.1,2.6,4.2c-0.1,1.6-2.1,0.1-3.2,0.2\n                        c-1.7,0.2-4.1,0-2,3.2c2.2,3.3-0.9,6.3-1.4,9.4C2042.6,577.5,2038.4,579.9,2034,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M739.2,445.1c-2.1-3.2-5.7-5-3.8-9.3c1-2.4-2.8-1.3-2.7-3.4c4.3-2.6,5.5,4.8,9.5,3\n                        C742.9,438.9,740.3,441.3,739.2,445.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M775,401.1c-0.3,5.2-8.7,5-6.6,11.3c-3.8-3.2-3.8-5,0-7.5C770.6,403.4,771.8,400.4,775,401.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M758.4,397.6c0.9,0.9,2.4,1.4,2.4,2.9c0,1-0.5,2-1.8,1.7c-1.2-0.2-2-1-2-2.4\n                        C757.1,398.9,757.3,398.1,758.4,397.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M774.4,414.3c-0.4-1.3-0.6-2.4-1-3.4c-0.4-1.2-0.7-2.5,0.6-3c0.6-0.2,1.6,0.8,2.4,1.3\n                        c2,1.5-0.2,1.5-0.8,2.2C775.1,412.2,774.9,413.2,774.4,414.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M736.2,423.4c-2.2,1.6-3.9,2.8-6.1,1.6c-0.2-0.1-0.2-1.6,0.2-1.8C732.1,421.7,733.9,422.8,736.2,423.4\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M742.2,395.9c0.7-1.5,1.6-2.3,3.1-1.5c0.7,0.4,0.8,1.3,0.3,1.7C744.5,397.2,743.4,396.5,742.2,395.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M703.8,390.9c-2.1,1.6-3.4,0.8-5.5,1.1C700.3,390.5,701.7,391.3,703.8,390.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M749,397.8c-0.4-0.6-0.8-0.9-0.8-1.2c-0.1-0.7,0.3-1.3,1-1.1c0.3,0.1,0.6,0.7,0.5,1.1\n                        C749.8,397,749.4,397.3,749,397.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M746,387.8c-0.7,0.5-1,1-1.4,1c-0.4,0-1.2-0.1-1.3-0.4c-0.5-1,0.7-0.6,1.1-0.9\n                        C744.6,387.3,745.2,387.6,746,387.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M755.9,395.7c-0.3,0.3-0.6,0.6-0.9,0.8c-0.2-0.3-0.5-0.7-0.6-1c0-0.2,0.3-0.6,0.6-0.7\n                        C755.7,394.5,755.8,395.1,755.9,395.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771527"),
                d:
                  "M629,383c-7.8-2.9-16.1-1.1-24-3c3.5-2.3,7.5-2,11.3-2.5c3.1-0.4,6.2-0.7,9.2-1.5\n                        c2.7-1.9,5.1-1.6,8.5-1c5.4,1,11.3,0.7,16.9-0.8c15.1-1.3,30.2-2.4,45.3-3.7c5.9-0.5,11.8-1.6,17.8-1.4\n                        c5.6,3.3,11.6,0.9,17.4,0.9c4.9,0,9.8-1.7,14.7,0.2c5.1,0.3,10.1-1,15.1-0.4c1.9,0.2,4.7-0.2,3.9,3.3c-2.1,0.3-4,1.3-6.2,0.9\n                        c-17.2,0.5-34.3,3-51.5,3.7c-10.8,0.5-21.6,1.8-32.4,2.2c-13.7,0.6-27.4,2-41.1,3.1c-3.9,0.7-3.1-2.2-3.5-4.8\n                        C630.3,380.2,631.1,382.2,629,383L629,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651320"),
                d:
                  "M759,374c1.9-1.2,3.9-1,6-1c3.3-2.3,7.3-2,11-2.3c10.8-0.8,21.7-2.2,32.6-2.1c1.2,0,2.3-0.3,3.4-0.6\n                        c12.2-0.4,24.3-2.4,36.6-2.5c5.1,0,10.2-1,15.3-1.1c1.3,0,2.6-0.3,3.7,0.8c0.1,0.3,0.3,0.5,0.4,0.8c0,7.3,0,7.3-4.5,17.3\n                        c-2.1-2.7-5.3-3.5-8.4-4.6c1.1-1.7,3.6,0.3,3.6-2c0.1-1.9-1.1-3.4-2.2-4.9c-0.2-0.3-1.2-0.3-1.3-0.2c-2.9,5.3-7.3-1-10.3,2.5\n                        c-0.1-0.5-0.2-1.1-0.4-1.6c1.5-0.7,3.1-1.3,5-2.2c-4.1-3.5-7.2,1.2-10.6,0.7c-0.4,1.4,0.5,1.6,1.1,2c0.9,0.7,2.4,1.4,0.8,2.6\n                        c-0.9,0.7-2.2,0.4-2.9-0.9c-2.2-4.2-5-3.6-8-1c-0.2,0.2-0.6,0.2-0.9,0.3c-1.4,0.4-2.8,1.6-4.2,0.2c-0.3-0.2-0.3-1-0.2-1.3\n                        c0.9-1.6,2.5,0.3,3.7-0.8c-0.4-1.6-1.7-1.2-2.7-1.2c-7.7,0-15.6-1.3-22.9,0.3c-7.1,1.6-14.7,0-21.4,3.4\n                        c-1.2,0.6-2.9,0.3-4.4-0.4c-2.7-1.3-5.4-0.8-8,0.5C765.5,376.9,762.3,374.9,759,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("420F15"),
                d:
                  "M880,454c-1.3-4.2-2-8.6-2-13c-1.6-12.1-2.8-24.2-4.4-36.3c-1.7-12.9-4.8-25.6-4.6-38.7\n                        c1-2.1,1.9-0.6,2.8,0c2.3,6.9,2.2,14.2,3.6,21.3c1.1,14.7,5.3,29,5.8,43.8c0.1,3.3-0.3,6.6,0.8,9.9c0.3,1.7,0.5,3.5,0.4,5.3\n                        C881.7,448.9,883.9,452.4,880,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63191C"),
                d:
                  "M871,366c-0.7-0.1-1.3-1.1-2,0c-0.3,0-0.7,0-1,0c0,0,0,0,0,0c-2.3-3.2-0.7-7.1-1.8-10.5\n                        c-0.5-2-0.3-4.2-1-6.2c-0.5-2-0.3-4.1-1-6c-0.2-0.5-0.3-1-0.3-1.5c-0.2-1.1-0.2-2.1-0.2-3.2c0-1.9,0-3.9,0-5.8\n                        c0.4-2.4-0.9-5.3,2.1-6.9c2.2,1.8,2.1,4.5,2.6,7c-0.1,3.2,0.5,6.4,0.9,9.6c0.1,0.8,0.1,1.5,0.1,2.3c0,1.9-0.2,3.9,0.4,5.8\n                        c0.1,0.2,0.1,0.5,0.2,0.7c0.1,0.5,0.2,0.9,0.3,1.4c0.1,1.9,0.1,3.8,0.8,5.7c0.6,2.2,1.6,4.3,0.9,6.7\n                        C871.7,365.3,871.4,365.7,871,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M810,389.5c2.3-2.2,4.3,2.2,6.8,0c0.6-0.5,0.6,0.7,0.6,1.3c0.1,1.7-1.3,2-2.3,1.6\n                        C813.4,391.6,811.7,390.5,810,389.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651320"),
                d:
                  "M869,382.3c-0.1,1,0.1,2.2-1.2,2.4c-1.3,0.2-1.6-0.8-1.7-1.8c0-1.2,0.7-1.9,1.7-2.1\n                        C869,380.5,868.9,381.6,869,382.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721524"),
                d:
                  "M629,383c1-1.5,1.1-3.3,1.1-5.9c1.5,2.5,0.9,5.5,3.9,5.9C632.3,385.1,630.7,382.8,629,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M820,389.1c2.4,0.9,3,3,4.8,3.5C822.7,392.8,820.7,392.9,820,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M799.8,391.4c-1.1,0.2-1.4-0.6-1.6-1.4c-0.2-0.9,0.1-1.8,1.2-1.6c0.7,0.1,1.7,0.7,1.9,1.2\n                        C801.5,390.4,800.5,390.9,799.8,391.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M811.2,384.3c-1.1,1.7-1.7,4.3-5,2.5C808.1,385.8,809.6,385,811.2,384.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M688.1,385.1c-1.8-0.5-3.5-1-5.2-1.5C684.9,383.2,687.1,382,688.1,385.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M814,445c-0.9,0-1.9,0-3,0C813.4,442.9,813.4,442.9,814,445L814,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M793.2,444.9c0.3,0.8-0.2,1-0.6,1c-0.4,0-0.9-0.3-1.1-0.6c-0.3-0.5,0.2-0.9,0.7-0.9\n                        C792.5,444.4,792.9,444.7,793.2,444.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651320"),
                d:
                  "M773.4,377.4c0.7-0.1,1.2,0.1,1.1,0.7c-0.1,0.3-0.6,0.6-1,0.8c-0.2,0.1-0.5-0.2-0.8-0.4\n                        C772.9,378.1,773.2,377.7,773.4,377.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1121"),
                d:
                  "M519,438c-1-5.4,2.1-9.6,7.5-10.1c-1.2,3.9-1.2,3.9,0.6,9.3C524.1,435.7,521.2,434.7,519,438L519,438z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1121"),
                d:
                  "M523,422c1,0.6,2,1.1,2.2,2.3c0,0.1-0.7,0.6-1,0.5C522.7,424.4,523.1,423.1,523,422z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M586.7,391.6c-0.2-0.3-0.5-0.6-0.5-1c-0.1-0.5,0.2-1,0.7-0.7c0.3,0.1,0.7,0.6,0.8,1\n                        C587.8,391.4,587.4,391.6,586.7,391.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671321"),
                d:
                  "M627,377c-7.2,2.2-14.6,2.4-22,3c-9.5,0.9-19.1,0.7-28.4,2.7c-2.2,0.5-3.9-0.2-5.5-1.4\n                        c1.3-2.7,4.3-2.9,6.4-4.4c4-2,7-5.6,11.4-7c10.4-1,20.7-1.9,31.2-2.3C628.3,367.2,629.6,368.9,627,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B35264"),
                d:
                  "M578,377.9c-2.3,1.1-4.6,2.2-6.9,3.3c-2.4,0.8-4.8,1.7-7.1,2.5c-0.7-0.3-1.3-0.7-1-1.6\n                        c4.4-2.7,8.9-5,14-5.8C577.6,376.6,578.2,377,578,377.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD6574"),
                d:
                  "M562.8,382.9c0.4,0.3,0.7,0.6,1.1,1c-4.3,1.1-8.6,2.2-12.9,3.3c0,0,0-0.4,0-0.4\n                        c-1-0.5-2.8,0.7-3.2-1.3c1.8-2.7,5-1.2,7.2-2.4C557.6,382.8,560.2,381,562.8,382.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("551022"),
                d:
                  "M194,326c1.4-1.3,3.2-1.6,5-2c1,1.6,2.8,0.6,4.1,1.3C200.2,327.8,197.2,328.4,194,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C37E84"),
                d:
                  "M228,314.1c-2.6,0-5.2,0.1-7.9,0.1c-2.2-1.4-6.7,2.3-7.2-3.2c6.3,0,12.7,0,19,0\n                        c-1.1,1.5,1.8,1.6,1.1,3C231.4,314.8,229.7,314.6,228,314.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C08387"),
                d:
                  "M233.3,313.2c-0.8-0.4-2,0.4-2.4-0.7c-0.1-0.3,0.7-0.9,1-1.4c2-0.4,4.3,0.5,6.1-1\n                        c2.2,1.1,4.4,0.3,6.6,0.1c0.4,0.6,0.7,1.1,1.1,1.7c-1,0.3-2.1,0.7-3.1,1C239.6,315,236.5,314.2,233.3,313.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("38121A"),
                d:
                  "M233.3,313.2c3.1-0.1,6.2-0.2,9.4-0.3c1.2,0.3,2.5,0.5,0.9,1.9c-1.1,0.9-2.4,1.5-3.6,2.2\n                        c-0.3-2.4-2.3-1.8-3.8-2c-2.7-0.4-5.6,1-8.1-0.9C229.8,313.8,231.6,313.5,233.3,313.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871C33"),
                d:
                  "M253.9,312.9c7.7,0,15.4,0.1,23.1,0.1c3.6-0.8,7.2-0.3,10.8,0c3.3,1.3,6.9,0.1,10.3,1.2\n                        c2,1.2,1,2.3-0.4,2.8c-6.9,2.7-12.4,7.3-17.5,12.5c-0.4,0.2-0.9,0.3-1.4,0.3c-2.5-0.1-2.9-1.9-3.8-3.8\n                        c-1.1-2.4-1.2-7.2-6.4-4.2c-1.1,0.6-2.9-0.5-4.1-1.2c-2.5-1.5-5-2.3-7.9-2.4c-2.7,0-3.9-1.6-2.7-4.3\n                        C254,313.6,253.9,313.3,253.9,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D152F"),
                d:
                  "M254,314c0.3,2.2,0.8,3.9,3.7,3.1c2.5-0.7,4.7,1,6.9,1.7c1.7,0.5,3.2,4.3,4.9-0.1\n                        c0.1-0.3,1.5-0.5,1.7-0.3c1.8,2.6,5.9,3.7,5.2,7.9c-0.3,2.1,1,2.5,2.6,2.8c0.4,1.6-0.6,2.2-1.8,2.7c-1.3,0.3-2.6,0.3-3.8,1\n                        c-2.4,1.5-5.1,3.5-5.7-1.6c-0.2-1.4-1.6-0.5-2.4-0.9c-1.7-0.8-4.3-0.8-2.7-3.8c0.5-1-0.1-1.7-0.9-2c-3.2-1-6.4-2.8-10-1.6\n                        c-1.3,0.4-2.7,2.3-3.9,0.7c-1.4-1.8,0.2-3.4,1.2-4.9c0.7-0.8,1-2,2-2.7C252,315.3,253,314.7,254,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B313F"),
                d:
                  "M251,316c0,1.1,0.2,2.3-1,3c-1.9,0.9-2.9,3.1-5.1,3.6c-0.7,0.1-1.4,0-2-0.6c1.7-2.9,6.6-3.4,6-8\n                        c-0.1-0.6-0.1-1.2-0.2-1.8C250.4,312.9,250.8,314.4,251,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B122C"),
                d:
                  "M243,322c0.7,0,1.3,0,2,0c0.8-0.5,2-0.6,1.9,0.3c-0.5,3.4,1.8,4.7,4,6.2c1.6,1,3.2,2.3,2.3,4.4\n                        c-1.1,2.4-3,0.8-5.3,0.1c2.6,1.2,4.3,1.9,6.4,1.8c2.5-0.1,4.9,0.9,4.7,4.3c-1.2,1.1-2.6,0.9-5,0.3c2.5,0.7,4,0.9,5.2-0.6\n                        c1-0.9,2.7-1.1,3.1-0.3c1.8,3,6,1.9,7.6,4.9c1,1.8-0.6,2.6-1.7,3.6c-6.3,1.8-12.6,3.5-19.1,4.1c-0.8-0.1-1.5-0.5-2-1.1\n                        c-0.4-1.2-5.1-1.2-0.3-3.8c-3.2,0.7-5.8,0.7-8.3,2.2c-2.7,1.6-5.7,1.2-7.6-2c-1.8-3-6.1-3.7-7.2-7.5c2.9-0.1,4.5,4.1,8.4,2.5\n                        c-1.6-1.4-2.8-2.6-4.5-4.1c4.5-0.1,8.2-1.1,11.1-4.6c-2.1-0.5-2.7,1.8-4.5,1.2c-0.4-1.6-0.8-3.2-1.1-4.8\n                        C235,324.8,239.6,324.3,243,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152F"),
                d:
                  "M247,350c0.7,0,1.3,0,2,0c0.6,3,3.7,3.2,5.5,4.7c1.6,2.5,1.9,5.3,1.1,8c-1.1,3.5-0.3,6.1,2.6,8.2\n                        c0.8,0.6,1.4,1.3,1.5,2.4c0.2,2,0.9,3.2,2.3,3.6c-3,3.2-7.5,2.2-11,4c-1.4,0-3.2,0-3.1-1.6c0-3.2-1.2-5-4.4-5.5\n                        c-1.5-0.3-1.7-1.6-1.3-2.7c0.6-1.4,1.5-0.6,2.4-0.1c0.5,0.3,1.8,1.4,1.6-0.2c-0.2-1.4,2.3-2.4,0.5-3.3c-1.8-0.9-3-3.5-5.7-2.6\n                        h0c-0.7-1.4-2.5-0.6-3.7-2c2.4-1.3,3.8-3.5,2.3-5.7c-0.6-0.8-4.1-2.6-5.9,0.7c-1,1.9-2.2-0.5-3.3-0.6\n                        c-2.3-0.3-0.3-1.6-0.4-2.4c4.6-1.3,9-3.5,14-3c0.9,0.1,1.8,0.2,2-1C246.3,350.7,246.7,350.3,247,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871835"),
                d:
                  "M246,351c0.9,0.7,1.4,1.7,0.4,2.4c-1.4,0.9-1.9-0.5-2.5-1.4C244.4,351.2,245.2,351,246,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46A6C"),
                d:
                  "M1967,553c0.3,0,0.6-0.1,0.9-0.1c0.5-0.3,0.9-0.2,1.3,0.1c-6.7,9-14,17.5-22,25.4\n                        c-0.1-0.5-0.1-1-0.2-1.4C1953.7,569,1960.3,561,1967,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3C4F"),
                d:
                  "M704,136.1c1.7,0,3.3,0,5,0c0.3,0.3,0.4,0.5,0.2,0.7c-0.1,0.2-0.2,0.3-0.3,0.3\n                        c-2.8,1.3-5.7,2.1-8.8,1.8c-0.7-1,0.3-1.3,0.8-1.7C702,136.9,703.2,137.1,704,136.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("973541"),
                d:
                  "M700.9,137.1c-0.3,0.6-0.5,1.2-0.8,1.7c-0.8,0.1-1.6,0.2-2.4,0.4c-2.3,0.4-4.6,1-7,0.6\n                        c-0.5-0.1-1-0.4-1.3-0.8c3.4-1.8,7.2-0.9,10.7-2C700.3,137,700.6,137.1,700.9,137.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B45960"),
                d:
                  "M1952.8,347.1c2.5-2.1,0.2-1.8-1-2.1c-2.1-0.6-5.6,0.3-3.8-4c3.3,0,5.9,1.8,8.6,3.4\n                        c1.5,0.9,2.7,1.8,4.4,0.6c1.5,2,3.1,3.9,6,3c1.8,0.3,3.7,0.6,4,3c-2.1,0.9-4.4,0-6.5,0.8\n                        C1960.3,350.9,1955.6,351.3,1952.8,347.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD5E67"),
                d:
                  "M1965,351.1c2-2,4-0.9,6-0.1c3.5,0.2,6.4,1.7,9,4c0,0.3,0,0.7,0,1c-2.9,0.4-5.1-2.2-7.9-2\n                        c-0.8-0.6-1.7,0-2.6-0.2C1967.8,353.2,1965.8,353.1,1965,351.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1949,359c0.6-0.1,1.7,0.1,1.9-0.2c0.8-1.5-0.6-1.5-1.4-1.7c-7.9-2.1-15.7-4.1-23.6-6.3\n                        c-1-0.3-1.9-1.2-2.9-1.8c2.3-4,6.7-1.3,9.8-3.2c1.8-1.1,4.4-1.2,6.7-1.2c7.5,2.3,15.1,4.4,22.6,6.8c5.1,1.7,5.3,2.1,1.6,5.8\n                        c-0.6,0.6-1.2,1.2-1.7,1.8c-0.8,0.8-1.7,2.1-2.8,0.9c-2.2-2.5-4.2-2.2-6.2,0.1c-0.3,0-0.7,0-1,0c-0.5,0.6-1.1,0.8-1.8,0.8\n                        c-0.5-0.1-0.9-0.3-1.3-0.5C1948.7,359.8,1948.7,359.4,1949,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781921"),
                d:
                  "M1962,359c-0.6-2.8,2.4-3.3,3.5-5.4c-8.9-2.9-17.7-5.7-26.5-8.6c-1,0.7-2.1,0.4-3.1,0.4\n                        c-1-0.6-3.1-0.4-2.6-2.2c0.3-1.3,1.9-0.8,2.9-0.3c5.7,0.7,10.9,3.7,16.7,4.2c3.8,2,8.1,2.8,12.2,3.9c1.7,0.7,3.3,1.4,5,2\n                        c0.2,2.4-2.3,2.5-3.2,4c-0.7,0.6-1.3,1.2-2.1,1.7c-0.2,0.1-0.4,0.2-0.6,0.3C1963.3,359,1962.7,359,1962,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1966,357c0-2.6,2.9-2.3,4-3.9c0.8-0.1,1.6,0.2,2.1,0.9c-2.9,0.8,2.9,3-0.6,3.8c1,3.9-4.7,2.4-4.6,5.6\n                        c-3-0.1-1.3-3.3-2.9-4.3C1964.6,358.2,1965.8,358.1,1966,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ECE6E6"),
                d:
                  "M1299.2,259.9c-3,0.3-4.8-2-7-3.3c-10.1-6.1-20.2-12.4-30.2-18.6c0.7-0.6,1.4-0.6,2.1,0\n                        c1,0.4,1.9,0.7,2.9,1.1c9.2,5.8,18.4,11.6,27.5,17.4C1296.1,257.5,1298.1,258.1,1299.2,259.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15A5B"),
                d:
                  "M1337.9,285.2c-1.7-0.5-3.1-1.5-4-3.1C1336.1,282,1337.2,283.3,1337.9,285.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4C56"),
                d:
                  "M1294.8,310.9c8.7,0,17.5-0.3,26.2,0.2c12.9,0.7,25.7-0.5,38.5-1.4c1.7-0.1,3.3,0,4.5,1.3\n                        c-0.3,0.5-0.7,0.9-1.1,1.2c-8.5,2.3-17.3,2.7-26,3c-14.3,0.5-28.4,2.2-42.6,2.8c-7,0.3-14.3,1.5-20.8-2.4\n                        c-1-0.6-2.8-0.3-2.8-2.2c0-1.9,1.5-2.4,2.9-2.8c0.8-0.3,1.6-0.5,2.4-0.5C1282.2,310.5,1288.6,308.9,1294.8,310.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53D48"),
                d:
                  "M1371.9,312.1c4.1,2.7,7.1,6.3,8.9,10.9c-1.2,0.5-2.4,0.1-3.5-0.3c-1.9-0.9-3.9-1.1-5.8-0.7\n                        c-6.1,1.2-12.1-0.2-18.2-0.5c-1-0.1-2-0.1-2.9,0.2c-6.2,2.6-12.4,1.1-18.5-0.3c-2.4-0.5-5,0.9-7.3-0.7c-1-0.7-2.8-0.8-2.6-2.5\n                        c0.1-1.5,1.6-2.2,2.9-2.2c7.7,0,15.4-2,23.1-1.5c4.4,0.2,8.8-1.1,13.2,0.2c1.1,0.3,1.6-1.5,2.7-2c0.8-0.3,1.5-0.1,2.1,0.3\n                        c0.3,0,0.6,0,0.9,0C1368.5,312.2,1370.1,311.4,1371.9,312.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E4B4F"),
                d:
                  "M1315.1,307.2c6.8,0.4,13.2-2,20-2c2.6,1.1,5.5-0.6,8.1,1c-7,1.3-14.1,1.3-21.2,2\n                        C1319.6,308.1,1317,310,1315.1,307.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA7374"),
                d:
                  "M1294.8,310.9c-6.7,0.1-13.4,0.2-20.1,0.3c-0.7,0.3-1.5,0.4-2-0.4c0.7-2.6,3.2-0.5,4.4-1.8\n                        c2,0,4,0,5.9,0c3.8,0.9,7.6,0.1,11.3,0.5c0.2,0.2,0.4,0.4,0.6,0.5C1295,310.4,1294.9,310.7,1294.8,310.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4353"),
                d:
                  "M1371.9,312.1c-1.6,0.4-3,2.5-5,0.8c-0.1-1.7-1.4-3.4,0.1-5C1369,308.9,1370.9,310.1,1371.9,312.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A96C6C"),
                d:
                  "M1315.1,307.2c2.1,1.7,4.6,0.5,6.9,1c-5,1.7-10.1,0.6-15.2,0.8C1309.4,307.5,1312.2,307,1315.1,307.2z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852C33"),
                d:
                  "M1343.1,306.1c-2.7-0.6-5.6,0.8-8.1-1c2.6-0.1,5.3-0.2,7.9-0.4c1.7,0.1,3.3,0.2,5,0.3\n                        c0,0.3,0,0.5,0,0.8C1346.3,306,1344.7,306.1,1343.1,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73549"),
                d:
                  "M1295,309.1c2.7,0,5.3,0,8,0c-2.5,1.8-5.3,0.5-8,1c0,0-0.2-0.1-0.2-0.1c-0.2-0.2-0.3-0.5-0.2-0.6\n                        C1294.8,309.2,1294.9,309.1,1295,309.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4353"),
                d:
                  "M1366,312.9c-0.7,0-1.4,0.1-2,0.1c-1.7,0-1.7-0.8-1-2c0.3,0,0.7,0,1,0\n                        C1364.7,311.6,1365.4,312.3,1366,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1383.8,325.2c0.1-0.7,0.2-1.4,0.3-2.1c0.6,0,1.3,0,1.9,0c4.1,2.2,8.6,2.8,13,2.4\n                        c15.1-1.6,30.3-2.5,45.5-3c6.1-0.2,12.2-1.2,18.3-0.4c6.2,0.7,12.4,0.6,18.6,0.3c5.9-0.4,11.1,2.6,16.6,4.1\n                        c1.6,0.4,2.1,2,0.4,3.4c-2.5,1.1-5.2,0.8-7.9,0.8c-10,0.1-20,0-30-0.1c-2,0-3.9,0.3-5.8,1c-2.8-1.7-5.4,0.8-8.3,0.3\n                        c-13.9-2.1-28-1.3-42-1.4c-3.3,0-6.6-0.2-9.9,0.8c-2.1,0.7-3.9,0.1-5.5-1.3c-1.3-1.5-4-0.8-4.9-3\n                        C1384,326.4,1383.9,325.8,1383.8,325.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF636D"),
                d:
                  "M1378,322c1,0.3,1.9,0.7,2.9,1c0,0.3,0.1,0.7,0.1,1c-2.4,1.6-1.3,5.3-4,6.8c-0.7,0.4-0.6,1.5-2.1,1.2\n                        c-9.6-2.2-19.3-0.4-29-0.9c-1-0.1-2.5,0-2.5,1c0.3,5.2-3.4,4.9-6.8,5.3c-0.6,0.1-1.1,1.1-1.7,1.7c-1.5,1.5-3.4,1.2-5.2,0.9\n                        c-8.9-1.3-17.8-0.2-26.7-0.6c-0.8,0-1.7,0.1-2.5,0c-1.6-0.1-3.2-0.1-4.7-0.6c-0.5-0.2-0.8-0.6-1-1c0.9-2.9,3.4-2.5,5.7-2.8\n                        c2.7-0.3,5.9,0.2,7.5-3c7.6-2.7,15.7-2.4,23.5-3.5c9.9-1.4,19.8-1,29.7-1c3.8,0,7.6-0.8,11.3-1.2c1.7-0.2,3.2-0.8,3.8-2.7\n                        C1376.6,322.8,1377.2,322.3,1378,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0999F"),
                d:
                  "M294,307c1.7,0,3.3,0,5,0c9.3,0,18.7,0,28,0c0.6,0.8,0.6,1.6-0.1,2.4c-8.1,2-16.3,3.9-24.8,3.2\n                        c-3.8-0.3-7.6-0.2-11.4-0.2c-1.4-0.1-2.8,0.3-4.2,0.5c-3.2-0.2-6.4,0.8-9.4-0.9c-0.3,0-0.7,0-1,0c-2-2.9-2-2.9,3-4\n                        c1.3,0,2.7,0,4,0C286.6,306.7,290.4,308.4,294,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0999D"),
                d:
                  "M327,309c0-0.7,0-1.3,0-2c2.5-1.9,5.3-0.6,8-1c1.2,0-1.6,1.6,0.5,1.2c3.7-0.8,7.4-0.4,11.1-0.5\n                        c0.5,0,1,0.5,1.6,0.1c-0.5,0-0.9-0.3-1.2-0.7c1.3-1.5,3.1-1,4.7-1c14.8,0,29.6-0.1,44.4,0c1.7,0,4.2-1.1,4.9,1.9\n                        c-1.7,1.8-4,1.4-6.1,1.4c-7.1,0.1-14.3,0-21.4,0c-2.4,0-4.6,0.1-6.7,1.5c-12.1,1-24.1,0.6-36.2,0.6\n                        C329.3,310.5,328,310.1,327,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E39A9D"),
                d:
                  "M367,309c0.5-2.7,2.7-1.9,4.3-2c9.9-0.1,19.8,0,29.7-0.1c5.5-0.6,11.1,1.3,16.5-1.1\n                        c0.4-0.2,1.4,0.7,2.1,1.1c0.3,1,0.6,2,0.8,3c-0.1,0.2-0.1,0.5-0.2,0.7c-1.2,1.9-2.4,3.5-4.8,1.5c-5.8,0.3-11.5-0.3-17-2.3\n                        c-1.9-0.7-3.6,0.3-5.4,0.4c-7.5,0.2-14.9,0.1-22.4,0.1C369.3,310.3,367.9,310.1,367,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0999F"),
                d:
                  "M347,306c1.4,0.2,3-0.4,4.8,1.9c-6.7-0.5-12.8-0.7-19.8,0.6c1.6-1.3,2.3-1.8,3-2.4\n                        C339,306,343,306,347,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d:
                  "M420.2,301c0.2-0.4,0.4-0.8,0.6-1.1c0.5-0.4,1-0.6,1.6-0.9c6.8-0.8,13.6-0.3,20.5-0.3\n                        c13.2-0.1,26.3-0.4,39.5,0.1c17.8,0.6,35.5,2.5,53.2,4.4c10.4,1.1,20.9,1.6,31.4,1.7c10.6,2.2,21.4,2.8,32,4.2\n                        c4.3,0.8,8.6,1,12.9,1.9c5.9,0.8,11.9,1.4,17.8,1.8c0.5,0.1,1.1,0.2,1.6,0.3c2.6,1.2,6.4-0.3,7.8,3.5\n                        c-2.3,2.7-5.4,1.3-8.1,1.7c-11.9-0.6-23.8-2.2-35.7-3c-17.2-1.2-34.4-3.2-51.5-5.3c-20.4-2.5-41-3.5-61.4-5.2\n                        c-18.2-1.5-36.4-2.9-54.8-1.8C424.9,303.2,422.3,303.3,420.2,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84551"),
                d:
                  "M428.9,275.8c-0.1-0.3,0-0.6,0.1-0.8c0.9-0.6,1.9-0.8,2.9-0.5c9.3,2.2,18.9,0.9,28.4,2\n                        c6.6,0.8,13.4-0.1,20.1-0.1c1.6,0,3,0,4.1,1.2c1.7,2,1.7,2,3.8,2.1c9,1.8,18.3,2.2,27.1,4.5c3.5,0.9,4.9,4.1,5.3,7.7\n                        c0.4,3.8-2.3,4.7-4.9,5.9c-1.4,0.6-2.8,0.9-4.4,0.9c-3-0.6-5.9-0.5-8.9,0.2c-4.2,0.9-8.5,1.1-12.8,0.7\n                        c-7.4-0.6-14.9-0.5-22.3-0.1c-1.5,0.1-3.3,0.8-4.6-0.8c5.9-3.2,11.6-6.5,18.8-6c5.4,0.4,10.8-0.5,15.5-4.8\n                        c-14.2-2.6-28.3-5-42.8-5.9c-7.9-0.4-16.1,1.5-23.8-2.9C428.2,277.8,428.6,277.3,428.9,275.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8489"),
                d:
                  "M420.2,301c4.2,1.1,8.4,0.2,12.6,0.2c8.2,0,16.4,0.9,24.6,1c5.6,0.1,11.1,0.4,16.7,0.8\n                        c16.2,1,32.3,3.2,48.4,3.7c12.2,0.4,24.4,1.9,36.3,3.5c14.5,1.9,29.1,2.2,43.5,4.6c9.4,1.5,19.1,1.6,28.6,2.3\n                        c2.1,1,5,0.5,6.2,3.2c-0.1,0.9-0.7,1.3-1.5,1.5c-0.8,0.1-1.6,0-2.4-0.3c-5.2-2.2-10.8-1-16.2-1.8c-5.8-0.9-11.9-0.8-17.8-1.2\n                        c-9.1,0-18-1.6-27-2.5c-25.7-4-51.5-6.5-77.4-7.5c-12.9-0.2-25.8-0.9-38.6-1.9c-7.6-0.6-15.2-0.2-22.9-0.1\n                        c-4.4,0-8.6,0-12.4-2.5C420.6,303.1,419.7,302.3,420.2,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56D77"),
                d:
                  "M443.8,231.2c0.2,0.1,0.2,0.3,0.2,0.5c4.4,5.7,10.5,9.7,15.5,14.8c1.8,2.4,5.8,2.7,5.8,6.6\n                        c-4.5,3.5-6.5-1.2-9.5-3.1c-1.3,2.6-5.7,3.2-3.4,7.9c1.7,3.4,3.5,5.3,7.1,6.2c1.5,0.4,3.5,0.8,2.3,3.3\n                        c-6.7,0.7-13.3-1.4-20-0.6c-1.8,0.2-3.9-0.7-4.4-3.1c-0.5-2.3,0.4-4.5,0.3-6.3c0.1-1.1-1.1-0.2-0.4-0.4c0.3-0.1,0.3,0,0.3,0.4\n                        c-0.1,0.9,0.4,2.2-0.7,2.5c-1.3,0.3-1.5-1-1.7-2c-0.4-2.2,0.4-4.2,0.9-6.3c0.8-3.1,3.2-6.4-1.1-9.2c-1-0.6-0.5-3.1,0.1-4.7\n                        c0-2.6,0.1-5.1,0.1-7.7c-0.6-0.6-0.6-1.3-0.3-2c0.8-1.1,1.9-1.5,3.2-1.4C440.3,227.6,441.5,230.1,443.8,231.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE414C"),
                d:
                  "M428.9,275.8c0.2,0.8,0.4,2.2,0.5,2.2c5.3-0.3,9.6,3.3,15.4,2.3c6.6-1.1,13.7,0.9,20.6,0.8\n                        c7.5-0.1,14.4,3.8,22.1,2.9c4.5-0.5,8.1,3.4,13.3,3.1c-1.1,1.8-1.4,3.8-3.6,2.9c-1.6-0.7-2.1-0.4-2.3,1.1\n                        c-0.2,0.9-0.6,1.8-1.5,1.6c-4.6-0.8-8.7,2.1-13.5,1.2c-4.2-0.8-8.3,1-11.8,3.4c-1.7,1.2-3.4,0.2-5.1,0.6\n                        c-0.9,0.8-1.8,0.9-2.9,0.4c-0.6-0.4-1.1-1.1-1.4-1.7c-0.4-0.8-1-1.2-1.9-1.5c-2.8-1.1-2-2.4-0.4-4c1.5-1.5,3.7-2.2,5.3-3.6\n                        c-0.7-1.6-2.1-1.7-3.3-1.8c-7.6-0.3-15.1-2.2-22.8-1.6c-3.3,0.3-6.5-0.5-7.7-4.3C428,278.5,427.7,277,428.9,275.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53D48"),
                d:
                  "M427.9,279.9c1.8,2.4,4.3,3.4,7.2,3.1c8-0.9,15.8,1.2,23.7,1.3c2.4,0,4.7,1.2,5.9,4.3\n                        c-3.5,0.5-6.3,2-8.7,5.1c0.9,1.1,4.2-0.5,4,2.4c-1.8,1.7-4.1,1.4-6.3,1.4c-7.7-0.5-15.4,1-23-0.7c-1.6-3.1,1-2.6,2.5-2.7\n                        c4.6-0.2,9.2-0.1,13.8,0.6c-6.1-1.1-12.2-0.4-18.4-1.2c-3.7-0.5-5-2.1-3.7-5.6C425.2,285,426.7,282.5,427.9,279.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D64E5A"),
                d:
                  "M488,281c-2.2-0.3-4.3-0.7-6.5-1c0.3-1.5,1.9-0.5,2.7-1.8c0.1-0.1-0.6-0.5-0.9-0.4\n                        c-3.5,1.2-7.2-0.5-10.7,0.6c-0.3,0.1-0.6,0.4-0.9,0.4c-14.1-2.5-28.7-0.3-42.7-3.8c0.1-1.7-0.3-3.6,0.9-5.1\n                        c10.8,3.7,22,2.5,33,2.7c5.2-0.6,10.3,0.1,15.5,0.4c2.8,0.8,5.5,0.6,8.4,0c2.2-0.4,4.9-2.1,6.2,1.6c0.4,1.1,1.1,0,1.5-0.1\n                        c2.3-0.8,4.5-0.9,6.9-0.5c1.2,0,1.8,1.1,3.3,1.1c2.5,0,6.4-0.7,6.9,3.7c-0.4,3.3-0.8,6.3-5.3,3.2c-1.1-0.7-3.2,0.1-4.8,0.2\n                        c-2.2,0.1-4.6,0.3-6.2-1C492.6,279.2,490.4,279.5,488,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF6A75"),
                d:
                  "M435.1,227.7c0,0.8-0.1,1.6-0.1,2.4c-3.3,7.8-3.4,16.2-5,24.3c-0.7,3.5-1.3,7.1-2,10.6\n                        c-1.7,4.2-2.8,0.9-4-0.3c-2.8-6.6-5.1-13.1,1-19.4c0.2-0.3,1.6-1.9,1.1-3.7c-0.6-2.3-1.2-5.2,2.7-6.1c1.1-0.2,0.6-2.1,0.8-3.2\n                        c0.4-3.1,1.6-5.7,4.4-7.4l0,0c0.4-0.3,0.9-0.3,1.3,0C435.8,225.9,435.9,226.8,435.1,227.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6C76"),
                d:
                  "M434.9,237.7c0.4,1.7-0.8,3.5,2.6,4.4c2.2,0.5,1.3,5.2,0.4,7.9c-1,2.9-2.6,5.7-1.6,9\n                        c1.4-0.7,0.1-2.3,1.7-3.3c0,2.6,0,4.9,0,7.3c-0.6,1.8-1.6,3.1-3.6,3.3c-2.2,0.7-4.8,1.9-3.5-2.5\n                        C431.7,255.1,432.7,246.3,434.9,237.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9B9F"),
                d:
                  "M421.2,304c0.6-0.3,1.4-1,1.8-0.8c6.7,4,14.1,1.9,21,1.8c10.1-0.1,20.2,1.1,30.3,1.2\n                        c6.9,0.1,13.9,0.7,20.8,0.8c0.2,1.6-1.1,1.8-2.2,2.2c-3.9,0.6-7.9-0.4-11.7,0.8c-3.3,0.1-6.6,1.7-10,0.2\n                        c-1.3-2.1-3.4-1.6-5.4-1.7c-12.2-0.2-24.3,0-36.5-0.1c-2.7,0-5.4,0-7.3-2.4C420.9,305.6,421.1,304.8,421.2,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5965"),
                d:
                  "M430.9,263.9c-0.3,4,2,0.8,3.1,1.1c4.5,4.7,10.4,3.4,15.9,4c3.2,1.9,7,0.7,10.3,1.8\n                        c1.6,0.5,3.9,0.4,2.8,3.2c-9,0-18.1,0.2-27.1-1c-2.5-0.3-4.6-0.9-6-3.2C430.1,267.9,429.7,265.7,430.9,263.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E59DA0"),
                d:
                  "M421.9,306c4.3,1.5,8.8,0.9,13.3,1c11.4,0,22.9,0,34.3,0c2.8,0,4.1,0.5,1.4,3\n                        c-0.2,0.2-0.4,0.4-0.6,0.6c-2,1.1-4.2,0.7-6.3,0.5c-13.2-1.3-26.3-1.1-39.5,0.3c-3-0.2-2.6-2.4-2.7-4.4\n                        C421.9,306.7,421.9,306.4,421.9,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE414C"),
                d:
                  "M430,296c8,0,16,0,24,0c0.2,2.7-1.7,2.8-3.6,3c-2.3,0.1-4.7-0.2-6.9,0.5c-7.1,0.4-14.3-0.6-21.4,0.5\n                        c-0.4,0-0.8-0.1-1.2-0.1c0.1-1.2,0.2-2.5,0.3-3.7C424.1,295.2,427,294.3,430,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73743"),
                d:
                  "M430,296c-2.9-0.1-5.8,1-8.8,0.1c1.3-2.7,1.7-5.8,3.7-8.2c0.1,7.1,6.2,4.4,9.3,4.8\n                        c4.8,0.7,9.8,1.1,16,1.7C442.7,296,436.1,293.6,430,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F252A"),
                d:
                  "M421.9,307c0.7,1.3,1.4,2.7,2,4c2.4,1.7,2.5,4.6,3.7,6.8c0.3,1,0.4,1.9,0.1,2.9\n                        c-0.3,0.7-0.7,1.3-1.5,1.5c-0.8,0-1.4-0.3-2-0.7c-1.5-1.6-2-3.7-3.2-5.5c-0.6-2-2.4-3.8-1.1-6.1l0.4,0\n                        C420.9,309,421.4,308,421.9,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M425,264c1,0.2,1,3.7,3,1c0,2.1,0.1,4.1-1,6c-1.6-1.5-3.5-2.7-4-5C422.6,264.3,424.5,264.9,425,264z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8F97"),
                d:
                  "M279,308c-0.6,1.6-5.4,0.1-3,4c-5.7-0.6-11.9,1.8-17.1-2.6c2.3-1.1,5.1,0.7,7.1-1.3\n                        C270.3,308,274.7,308,279,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8F97"),
                d:
                  "M277,312c3.3,0,6.7,0,10,0c1.5,0.1,3-0.2,4.5,0.4c0.5,0.3,0.8,0.7,0.7,1.3c-1.3,1.4-2.8,0.9-4.3,0.4\n                        c-3.6-0.3-7.3,0.3-10.9-1.1C277,312.7,277,312.3,277,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8F97"),
                d:
                  "M294,307c-3.5,2.1-7.4,0.5-11,1C286.5,305.9,290.3,307.5,294,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A56C70"),
                d:
                  "M2032.1,574.1c-0.7,6.1-4.9,10.9-6.2,16.9c-2.7,2-1.8,6.4-5.2,8c3.3-8.4,6.6-16.7,9.9-25.1\n                        C2031.2,573.5,2031.7,573.6,2032.1,574.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3525A"),
                d:
                  "M1969.2,553c-0.4,0-0.8-0.1-1.3-0.1c1.4-5.3,6.2-7.1,10.1-9.9C1975.7,546.8,1972.6,550.1,1969.2,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B18485"),
                d:
                  "M2032.1,574.1c-0.5-0.1-1-0.2-1.5-0.3c0.5-1.5,1-3.1,1.5-4.6c0.6-0.4,1.2-0.9,1.7-1.3\n                        c0.1,0.7,0.2,1.5,0.3,2.2C2033.5,571.4,2032.8,572.7,2032.1,574.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63342"),
                d:
                  "M1030,621c-7.7,0-15.3,0-23,0c-33.6,0-67.2-0.1-100.7,0.1c-3.8,0-5.4-0.9-5.2-4.7c0.1-2-0.3-4,0-6\n                        c1.2-6.4-3.1-11.6-3.9-17.5c1.2-0.9,2.3-0.7,3.5,0.1c4.5,4.2,10.7,4.3,15.8,4.2c16.6-0.4,33,3.1,49.5,2.5\n                        c8.1-0.3,16.3-0.1,24.4,0c1.4,0,2.8,0,4.2,0.6c6.8,7.4,16.1,10.2,25.1,13.7c4.1,1.2,7.5,3.4,10.5,6.4\n                        C1030.1,620.5,1030,620.8,1030,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD424D"),
                d:
                  "M900,593c-1-0.1-1.9-0.1-2.9-0.2c-0.1-0.7-0.1-1.3-0.2-2c0.1-0.6,0.1-1.1,0.2-1.7\n                        c3.8-2.3,7.8-0.7,11.6-0.4c5.9,0.4,11.9,0.6,17.8,1.8c0.6,0,1.2,0,1.7,0c8,0.9,16.2,0.7,24.1,2.3c3.6,1.3,7.5,0.5,11.2,1\n                        c0.5,0.1,1,0.2,1.5,0.3c3.4,0.8,6.8,0.9,10.2,0.9c1-0.1,2.1-0.1,3.1,0.2c3.7,0.9,7.5,0.3,11.2,0.5c1.1,0,2.1,0.1,3.2,0.4\n                        c2.4,0.9,5,0.5,7.5,0.9c0.5,0.1,0.9,0.3,1.4,0.5c2.7,4.2-0.5,3.9-3.1,4c-0.4,0.1-0.9,0-1.3-0.1c-2-0.7-4-1.9-6.3-1\n                        c-0.4,0.1-0.9,0.1-1.3-0.1c-2.3-1.3-4.8-0.3-7.1-0.6c-0.4,0-0.9-0.1-1.3-0.1c-2.2-0.5-4.3-0.3-6.4,0.1c-0.5,0-0.9,0-1.4,0\n                        c-2.3-0.5-4.7-0.2-7.1-0.6c-0.5-0.1-1-0.2-1.5-0.3c-2.9-0.6-5.7-0.3-8.6-0.2c-13.9,0.1-27.6-2.1-41.5-2.8\n                        C910,595.4,904.5,596.4,900,593z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E333F"),
                d:
                  "M783,619c-4.6-0.4-9.3,0.8-13.9-1.8c-2.2-1.2-2.4-3.4-4.9-4.6c-5.7-2.7-11.2-6.1-17.2-8.4\n                        c-1.2-0.5-1.9-1.8-1.9-3.2c2.5-0.7,5-1.2,5.2-4.7c0.1-1.7,1.8-2.2,3.3-2.5c1.8-0.3,3.6-0.3,5.4-0.2c4.2,0.4,7.2-0.4,6.9-5.7\n                        c-0.2-2.5,1.3-4,3.9-4.3c1.3-0.1,2.6-0.3,3.7-1.1c2.8-1.1,5.8-1.1,8.5-2.4c2.7-1.2,5.1-0.2,7.1,2.3c0.2,0.3,0.2-1.1-0.2-0.6\n                        c-0.1,0.1-0.2,0-0.4-0.2c-0.6-0.7-1-1.3-0.3-2.1c2.6-0.7,5.1,0.2,7.6,0.2c0.5,0.1,1.1,0.2,1.6,0.3c4.2,1.3,8.5,1.4,12.8,1.9\n                        c5,0.7,10.1,1.6,15.2,1.7c1.8,0,3.6,0.5,5.2,1.4c1.4,1.7,3.6,2.6,4.7,4.5c-1,2.2-3.9,3.9-1.5,6.9c0.8,0.9-0.1,1.9-1,2.5\n                        c-0.9,0.6-2.2,1.7-3.1,0.6c-2.8-3.4-4.4-0.7-6.3,1.1c1.8,0,2.5-3.6,4.5-1.6c1.5,1.5,0.1,3.1-1.1,4.4c2.1-0.6,4.2-0.8,4.9,1.8\n                        c0.7,2.4,1,5.1-0.6,7.2c-0.9,1.2-1.7-0.1-2-1c-0.3-0.8-0.1-2.1-1.8-1.2c-0.9,0.5-2.5,0.1-2.4,1.8c0.4,5.9-2.9,6.6-7.6,5.5\n                        c-1.3-0.3-1.6,1-2.4,1.4C804.3,619,793.7,619,783,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3341"),
                d:
                  "M815,619c1-0.7-0.4-3.1,2.4-2.8c6.3,0.7,6.3,0.5,6.6-5.7c0-0.6-0.2-1.2-0.4-2.6c2.9,2.4,4.8,2.2,5-1.6\n                        c2.5,1.6,0.6,4,2.4,6.3c0-2.2,0-3.7,0-5.2c0-3.4-1.2-4.5-4.1-2c-0.8,0.7-1.4,1.7-2.3,0.5c-0.8-1-0.1-1.9,0.8-2.5\n                        c1.3-0.9,2.3-1.9,2.2-3.6c-0.3-0.1-0.8-0.3-0.9-0.2c-1.2,2.2-3,3.7-5.5,2.8c-1.6-0.6,0.2-2,0.7-2.1c2.7-0.8,4.4-6.3,7.9-2.1\n                        c1.2,1.4,1.3,0.5,1.9,0.1c0.8-0.4,2.3-0.5,0.9-1.8c-4.2-4-0.7-5.1,2.3-6.4c6.8-1.4,13.7-0.1,20.5-0.3c2.7-0.1,5.7-0.7,7.9,1.6\n                        c1.4,2.1,1,6.9,5.8,3.8c2.5,2.5,6.3,2.3,9.2,4.1c0.1,0.1,0.2,0.2,0.3,0.4c2.8,4.3,3.2,4.4,8.4,1.5c0.5-0.3,0.9-0.2,1.3,0.2\n                        c1.5,5.3,0.8,10.6-0.4,15.8c-1.1,8.9-7.7,8-13.9,8c-0.7,0-1.3-0.1-2.3-0.1c2-1.9,4.4-1.8,6.5-2.3c1.2-0.3,2.9,0.4,2.6-1.8\n                        c-0.2-1.9-1.6-1.8-3-1.8c-4.3,0-8.6,0-13,0c-8.6,0-17.3,0-25.9,0c-1.7-0.7-3.3-1.7-5,0c-1,0-2,0-3,0c-0.7-0.4-0.6-2-1.9-1.4\n                        c-0.8,0.3,0.6,1-0.1,1.4C824.3,619,819.7,619,815,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B3946"),
                d:
                  "M888,617c-1.5-5.3,0.5-10.7,0-16c2.9-2.1,2-5.8,3.5-8.5c0.7-0.8,1.5-1.3,2.5-0.4\n                        c-0.9,9.1-1.2,18.2-3.9,27C889.4,618.4,888.7,617.7,888,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E333F"),
                d: "M834,619c1.7-3.9,3.3-1.1,5,0C837.3,619,835.7,619,834,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E333F"),
                d:
                  "M829,619c-0.4-0.5-0.8-1-1.2-1.5c0.7-0.3,1.5-0.8,2.2-0.8c1.6,0.1,0.8,1.5,1,2.3\n                        C830.3,619,829.7,619,829,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03D47"),
                d:
                  "M1103,625c-14.4,0-28.8,0-43.2,0.1c-1.7,0-4.2-1.1-4.9,1.9c-4,0-8,0-12,0c-2.9-0.8-5.6-2.1-8-3.9\n                        c-1.8-0.4-3.6-0.7-5-2c0,0,0,0,0,0c1.1-1.2,2.6-1.5,4.1-1.5c7-0.1,13.9-0.3,20.9,0.6c2.8,1.2,5.8,1.3,8.8,1.3\n                        c11.3,0,22.6-0.1,33.8,0.1C1099.7,621.6,1103.4,620.4,1103,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93C4A"),
                d:
                  "M1035,623c3.2,0.2,6,1.4,8,3.9C1039.6,627.2,1036.4,626.9,1035,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M746,541c2.2-1.4,4.7-1.9,7.3-2c1.4-0.1,2.6-0.3,2.8-2c4.7-2.1,9.8-2.4,14.8-2.3c1.8,0,3.6,0.5,5.4,0\n                        c8.9,1.8,18.1,1.1,27,2.9c5.7,1.2,11.5,1.2,17.3,1.7c17.8,1.6,35.6,2.7,53.3,5.1c3,0.4,6,0.1,8.9,0.1c1.9-0.3,4.7,1.1,4.7-2.6\n                        c0.2-1.9-0.2-3.9,1.7-5.3c2.5,0.9,2,3.1,2.1,5c0.3,3.9-0.4,7.8,0.5,11.7c0.4,1.6,0.5,3.3,0.5,5c-0.1,1.8-0.1,3.6,0.5,5.4\n                        c0.6,4.2,1.4,8.3,1.4,12.5c-0.1,1.7,0.2,3.3,0.1,5c-0.1,0.2-0.2,0.4-0.3,0.6c-0.8,0.4-1,1.2-1,2c-1.5,1.5-3.3,1.4-5.2,1.2\n                        c-13.5-1.6-27-2.6-40.5-4.3c-3.1-0.4-6.3-0.2-9.4-0.9c-7.2-1.7-14.7-1.4-22-2.6c-1.6-0.3-3.3-0.3-4.8-1c-1.4-0.9-3-1.1-4.6-1\n                        c-25.6-2.8-51.1-6.8-76.5-11.1c-1.2-0.2-2.3-0.4-3.1-1.4c-0.2-2.7,1.9-2.9,3.6-3c2.7-0.3,4.9-1.1,6.9-3.3\n                        c2.1-2.3,3.2-1.9,5.8,0.8c0.5,0.5-0.1,0.1-0.1,0.1c0.9-1.6,1.6-2.5,2.4,0c2.7-2.1,2.7-2.1,4.1,1.4c0.2,0.5,0.6,0.8,0.9,1.1\n                        c0.3,0.3,0.5,0.7,0.7,1.2c-0.1,0.5-0.3,0.9-0.8,1c0.7,0.4,1.3,0,1.6-0.5c1.3-2.2,2.1-4.8,3.9-6.7c2.7-0.5,2.5,1.2,2.3,2.9\n                        c-0.2-2.4-0.2-2.4-2.5-2.7c-1.3,1.1-3,2.4-4,0c-0.7-1.7,1.2-2.5,2.6-3c5.3-2.1,7.7-0.6,8.6,5.2c0.3,1.7,1.9,3.3,0.5,5.5\n                        c1.6-1,0.8-2.7,1.6-3.7c1.2-1.5,1.4-4,3.7-4.4c2.6-0.4,3.7,1.8,4.9,3.6c0.4,0.1,0.8,0.3,1.2,0.5c2.3,2.3,4.9-2.5,7.2,0.4\n                        c0.1-0.6-0.5-0.6-0.7-1c-1.1-1.7-0.5-3.2,0.6-4.5c1.1-1.3,2.4-1.6,4.3-0.9c2.2,0.8,3-2.2,4.8-3c0.8-0.9,1.3-2.9,2.9-1.9\n                        c1.7,1.1,1.9,3.4,2.4,5.2c0.6,2-1.2,2.4-2.7,2.9c-0.6,0.1,0.4,1,0.1,0.4c-0.1-0.2,0-0.3,0.3-0.4c2.2-0.1,3.6-0.6,3.6-3.4\n                        c0-2.5-0.6-4.4-3.1-4.9c-1.4-0.3-4.4-2.3-3.5,2c-4.7,1.2-6.8-2.1-8.5-5.4c-1.1-2.1-1.6-2.7-3.3-0.5c-2.7,3.6-7,4.1-10.3,1.2\n                        c-0.3-0.3-0.7-1.2-0.7-1c-0.2,3.5-3.1,1.6-4.3,2.4c-4.7,2.9-4.4-0.8-5.2-3.6c-3.4,1.7-7,1.2-10.6,0.7\n                        C746.4,543.5,744.8,543.2,746,541z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621220"),
                d:
                  "M897,585c0.6-1.3,2.1-0.7,3.5-1.9c-4.8,0.7-2.5-3.7-4.5-5.1c-2-0.2-1.1-1.7-1.3-2.7\n                        c0.1-1.5,0.1-2.9,0.8-4.3c2.1-2,4.7-2.9,7.4-3.6c0.3-0.8-0.4-1.2-0.5-1.8c-0.4-1.7-1.3-4.2,1.3-4.4c1.9-0.2,4.4,0.6,4.8,3.4\n                        c0.3,2.5-0.6,5.7,4,4.8c2-0.4,4.3,3.3,6.3-0.4c0.5-0.8,1.8-0.9,2.7-0.2c0.9,0.7,0.3,1.5-0.1,2.2c-0.5,0.9-0.4,2-0.9,2.8\n                        c0.9-1.1,0.3-3.5,2.6-3.2c1.7,0.2,1.6,1.9,1.8,3.2c0.4,2.4,1.7,3.6,4.3,3.6c2.6,0.1,3.9,1.8,3.6,4.5c0.2-3.1-0.7-5.5-4.2-5.9\n                        c-2.3-0.3-3.9-1.3-3.3-3.9c0.5-2.3,2.6-2.4,4.4-2.2c3,0.4,6,1.9,8.6-1.1c0.6-0.7,1.8-0.1,2.1,0.6c1.2,3.4,4.8,3.3,7.2,4.8\n                        c1,0.6,2.7,1.1,3.4-0.6c2-4.5,4.7-1.4,6.3-0.1c2.7,2.3-0.5,3.1-1.8,4.3c-0.2,0.2-0.4,0.5-0.6,0.9c1.8-0.3,3.8-1.3,4.8,0.9\n                        c0.9,2-0.6,3.2-2,4.5c-3.1,2.9-3.8,3.1-7.8,0.2c-1.9-1.4-3.8-0.7-5.7-0.8c-1.8-0.2-3.6,0.1-5.4-0.2c1.7,0.9,3.6,0.6,5.3,0.4\n                        c2.6-0.3,4.8-0.5,6.8,1.7c1.8,1.9,4.4,0.9,6.7,0.9c4.4,0.1,8.8-0.5,12.3-0.1c1.5,0.5,0.9-0.8,1-0.1c0,0.3-0.1,0.3-0.4,0.2\n                        c-1.4-0.5-3.3-0.7-2.8-2.8c0.4-1.7,2-1.4,3.4-1.2c3.1,0.5,4-0.6,3-3.6c-0.9-2.5,1.4-3.1,2.9-3.8c1.4-0.6,3-1,3.2,1.4\n                        c0,0.3-0.6,0.9,0.3,0.7c4.1-1,8.8,0.2,12.4-2.5c2.8-2.1,4.6,0.1,6.2,1.2c2.3,1.6-0.3,2.8-1.2,3.8c-1.3,1.5-0.6,4-2.8,5.1\n                        c-0.6,0.3,0.3,0.3,0.3,0.3c1.2,0.4,2.3,1.1,1.8,2.5c-0.6,1.7-2.1,1-3.3,1c1.9,0.7,3.8-0.5,5.7-0.6c3.2-0.1,5.2,0.8,4.1,4.5\n                        c-6.4,3.9-13.1,1-19.5,0.7c-12.6-0.7-25.2-2-37.8-2.6c-3.8-0.2-7.5-1.6-11.4-1.2c-1.4,0.1-2.9,0-4.3-0.3\n                        c-3.8-1.1-7.6-0.2-11.4-0.5C911.9,587.9,904.4,587,897,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9424C"),
                d:
                  "M894,592c-0.8,0-1.5,0.2-2,1c-0.5,0.3-1,0.5-1.5,0.4c-17.2-1.4-34.3-3.4-51.5-5.1\n                        c-2.8-0.3-5.7-0.5-8-2.3c-6.9-1.7-14.2-0.6-21-3c-4.3-0.8-8.7-1-13-2c-0.3,0-0.7,0-1,0c1.7-3.9,5.1-1.8,7.8-2.1\n                        c0.5,0.1,1,0.2,1.5,0.3c2.5,0.9,5,0.4,7.5,0.6c0.8,0,1.5,0.2,2.3,0.4c1.7,0.6,3.5,0.5,5.3,0.5c1.8,0,3.7,0,5.5,0\n                        c1.6,0,3.2,0,4.8,0.4c2.1,0.8,4.2,0.6,6.4,0.7c0.8,0,1.7,0.2,2.5,0.4c15.7,1.6,31.4,2.7,47.1,4.4c2.5,0.3,5,0.2,7.2,1.6\n                        C893.9,589.4,893.9,590.7,894,592z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M893.9,588.1c-11.7,0.1-23.3-1.9-35-2.8c-6.7-0.5-13.4-0.7-20-2.3c3.3-2.5,6.6,0.2,9.4-0.4\n                        c-5.4-1-11.5-0.2-17.6-1.2c-1.7-0.3-3.6-0.2-2.4-2.8c3.2-0.3,6.5-0.3,9.6,0.4c10.7,0.8,21.4,1.2,32,2.6c7.7,1,15.3,2,23,2.4\n                        C893.8,585.3,894.2,586.6,893.9,588.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C171F"),
                d:
                  "M897,585c11-0.5,21.7,3.2,32.8,2.2c0.4,0,0.8,0.5,1.2,0.8c-1.2,1.1-2.7,0.2-4,0.5\n                        c0.9,0.1,1.9-0.1,2.9,0.2c1,2.8-2,1.9-2.8,3c-10-0.8-19.9-1.6-29.9-2.5C897.1,587.8,897.1,586.4,897,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B0F12"),
                d:
                  "M896,576c-0.1,0.7-1.1,1.3,0,2c0,2.6,0,5.2,0,8.5c-1.3-1.7-1.9-3-2-4.5l0,0c0.2-1.8-0.5-3.4-1-5\n                        c-0.3-4.3-0.7-8.7-1-13c-1.1-1.5,0.2-3.5-1-5c0-1.7,0-3.3,0-5c-0.7-3-0.9-6,0.1-9c1-0.1,1.4,0.5,1.8,1.3\n                        c0.7,3.2,0.8,6.5,2.2,9.6c0.8,4.3,1.7,8.6,1.3,13C895.6,571.2,894.9,573.6,896,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63C44"),
                d:
                  "M1103,625c-0.6-3-3.1-1.9-4.9-1.9c-12.8-0.1-25.5,0-38.3-0.1c-1.7,0-4.2,1.1-4.8-1.9\n                        c-1.8-1.6-4.1-0.8-6.2-1c-1.6-0.2-3.8,0.4-4-1.7c-0.3-2.5,2.3-2.3,3.9-2.7c4.4-1.1,8.8-0.8,13.2,0c2.3,0.3,4.5,0.5,6.8,0.6\n                        c1,0.2,1.9,1.2,2.9,0.1c7.8,0.2,15.4,2.5,22.1,1.8c1.9-0.1,1-0.9,1.3-0.3c0.1,0.2-0.1,0.3-0.4,0.2c-1.8-0.1-3.6,0.1-5.4-0.1\n                        c-1.8-0.2-3.3-0.9-2.3-3.2c0.6-0.5,1.3-0.7,2-0.9c2.5-0.5,5.4,0.8,7.4-1.9c0.2-0.3,0.7-0.4,0.9-0.2c5.1,4.1,12.4-0.5,17.3,4.4\n                        c1.1,1.1,2.5,0.7,3.5-0.4c1.5-1.7,3.5-2.1,5.5-1.6c10.1,2.5,20.6,0.7,30.7,3.3c2.1,0.5,4.4,0.6,6.4,0.1\n                        c6.5-1.8,12.8,1,19.2,0.3c1.1-0.1,2.3,0.2,3.1,1.2c0.6,3,3.1,1.9,4.9,1.9c18.1,0.1,36.2,0,54.3,0.1c1.7,0,4.2-1.1,4.8,2\n                        c-27.3,0-54.6,0-81.8,0c-10.6,0-21.2-0.8-31.6,0.2C1123.3,624.2,1113.2,625.2,1103,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3B47"),
                d:
                  "M1183,619c-5.5-0.7-11,0.7-16.7-1c-2.3-0.7-6.2,1.1-9.4,0.9c-4.7-0.4-9.4-1.2-14.1-1.8\n                        c-1.8-0.2-3.7-0.6-5.3,0.5c-0.8,0.5-1.7,1.6-2.2,0c-0.8-2.4-1.3-3.4-2.4-0.1c-0.6,1.7-1.5,0-2.3-0.1c-2.5-0.3-4.5-2.1-7.3-2\n                        c-2.1,0.1-3.5-0.7-4.5,2.1c-0.5,1.3-4.7,2-5.2,0.3c-1.2-3.7-3.7-2.3-5.9-2.8c-3.3-0.8-7.4,2.2-9.9-2.1c-0.1-0.1-1.1,0-1.1,0.1\n                        c-1.5,4.4-5.1,0.9-7.5,2.1c-2-3.4-5.7-5.2-7.9-8.4c1.8-2,4-2.5,6.7-2.7c11.2-0.5,22.5,0.3,33.2,2.4c7.3,1.4,14.2-1.2,21.2,0.5\n                        c1.6,0.4,3.6-0.6,5.4,0.1c1.4,0.6,2.9,0.6,4.3,1c-0.9-0.4-1.9-0.4-2.8-0.7c-0.2-0.3-0.3-0.5-0.3-0.8c0.1-0.3,0.1-0.4,0.2-0.4\n                        c4.1,0.2,8.2-0.8,12.2,0.8c4.9,1.8,9.8,3.3,15.1,2.6c2.7-0.4,5.3-0.1,7.7,1.2c0.4,0.3,0.9,0.6,1.4,0.6\n                        c13.7,0.8,27.3,3.2,41.1,2.2c1.6-0.1,3-0.3,4-1.5c6.8-0.4,13.6,0.4,20.4,0.8c1.3,0.1,3.1,0,3.2,2.2c-3.6,0-7.2,0-11.2,0\n                        c1,1.9,2.9,2.1,4.2,3c-1.5,1.6-3.4,1-5.2,1C1222.2,619,1202.6,619,1183,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1183,611c-2.4-0.1-4.7-0.7-7.3-0.1c-5.6,1.3-10.4-1.8-15.6-3.1c-0.6-0.2,0.6-0.6,1-0.9\n                        c23,0.2,46,1.7,69,2.9c12.7,0.7,25.5,0.8,38.3,1.3c1.9,0.1,4-0.5,5.8,0.8c-4,2.2-8.2,0.9-12,0.7c1.6,0.6,3.7,0.4,5.7,0.4\n                        c1.7,0.1,3.4,0,4.1,2c-6,0-12,0-18,0c-5.3-1.6-10.7-1.3-16.1-1.1c-2.7,0.1-4.9-0.3-6.9-1.9c-2.8,2.2-6,1.6-9.1,1.3\n                        c-11.7-1-23.4-1.1-35.2-1.4C1185.4,611.9,1184.1,611.9,1183,611z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24650"),
                d:
                  "M1272,615c-4.3-1.9-9-0.7-13.4-1.7c0-0.5,0-1-0.1-1.5c5.2,0,10.4,0,15.7,0c3.3-1,6.5,0.4,9.8,0.2\n                        c-0.7,2.9-3.1,3.1-5.3,2.8c-1.6-0.2-3.2-0.2-4.7,0.1C1273.3,615,1272.7,615,1272,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24650"),
                d:
                  "M1288,616c-0.3-1.2-3.4-3.2,1-3c1.6,0.1,3.3,0.2,5,0c2.8-0.3,2.4,1.3,2.1,3\n                        C1293.3,617.5,1290.7,615.4,1288,616z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74450"),
                d:
                  "M1711,377c0-1.7,0-3.3,0-5c-0.9-2.7,0.5-2.5,2.3-1.9c0.4,0.2,0.7,0.4,1,0.7c0.9,1.1,2.2,0.9,3.4,0.9\n                        c6.7,0.5,13-3.2,19.7-2.1c1.3,0.2,2.7,0.1,4,0.2c2.2,0.2,2.2,0.2,4.4-1.4c0.4-0.3,0.9-0.5,1.4-0.5c2.1-0.2,4.3-0.7,5.8,1.6\n                        c0.9-1.5,1.6-3.1,3.6-3.5c2.1-0.4,4.3-0.3,6.5-0.4c2,0,4-0.1,6,0c3.2,0.2,5.9-0.5,8.1-2.9c2.8-0.7,2.9,1.7,3.7,3.3\n                        c0,0.7,0.1,1.3,0.1,2c-1,0.3-2,0.7-3,1c-1,0-2,0-3,0c-9,1.1-17.9,2.3-26.9,3.4C1735.8,374,1723.4,375.5,1711,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91343D"),
                d:
                  "M1950,360c0.7,0,1.4,0,2,0c0.7,0.9,1.4,1.7,2,2.6c-1.7,1.6-5.9-1.9-6,3c0,0.5-1.6,0.3-2.2-0.3\n                        c-2.8-2.5-6.4-2.3-9.7-3.1c-2-0.5-5.3-3-5.6,2.1c0,0.5-1.3,1.5-1.8,1.4c-3.3-0.8-6.5-1.8-9.7-2.7c2.1-0.5,1.8-1.2,0-1.5\n                        c-3.2-0.5-6.5-0.5-9.7-1c-0.8-0.1-3.2,0.2-2.4-2.1c0.8-2.1,2-0.7,3.1-0.1c1.4,0.8,2.8,1,4-0.4c4.7-1.2,9.2-2.6,14.2-0.7\n                        c2.3,0.9,5,1.6,7.7,0.7C1940.7,357.4,1945.1,360.6,1950,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1873,353c2.8-2.1,3.6,0.7,5,2c3.6,1.8,8.1,1.8,11,5c-3.3,1,1.8,1.8,0.1,2.8c-6.4,0-10.8-3.8-15.1-7.7\n                        C1873.2,354.6,1873,353.8,1873,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963D46"),
                d:
                  "M1936,359c-3.1,2.1-6.2-0.1-9-0.6c-3.1-0.6-5.7-1.6-8.7,0.3c-0.9,0.6-2.8-0.4-4.3-0.6\n                        c-7.6-3.8-15.5-6.8-24-8.2c-1.4-0.2-2.9-0.9-3-2.8c5.4-1.4,10.7,0.4,16,1c4,1.1,8.4,0.4,12,3c-0.2,0.4-0.9,0.5-0.7,1.1\n                        c0,0,0.3,0,0.4-0.2c0.1-0.3,0.2-0.6,0.4-0.9c6.1,1,12.2,1.6,18,4c-1.1,1.4-2.7,1.1-3.8,1.3\n                        C1931.4,356.7,1934.7,355.2,1936,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822933"),
                d:
                  "M1903,348c-5.4,0.1-10.7,0.3-16-1c-0.3-0.3-0.7-0.6-1-1c-3.3,2-6-0.4-9-1c0-0.3,0-0.7,0-1\n                        c-0.7-1.1-3.2,0.3-2.8-1.7c0.2-1.3,1.8-0.9,2.8-0.3C1885.7,344,1894.6,344.8,1903,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A252F"),
                d:
                  "M1877,342c-0.7,0.1-1.4,0.3-2.2,0.4c0.7,0.5,1.4,1,2.2,1.6c-4.5,0.5-8.5-2.2-13-2\n                        c-0.4-0.9-2.6-0.1-2-2C1867.1,340.2,1872.3,339.1,1877,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822933"),
                d:
                  "M1862,340c0.7,0.7,1.3,1.3,2,2c-2.3,0-4.7,0-7,0c-0.9-1.6-2.8-0.5-4.5-2c3.3,0,5.9,0,8.5,0\n                        C1861.3,340,1861.7,340,1862,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963D46"),
                d:
                  "M1877,345c3,0.3,6,0.7,9,1c-0.8,1.8-2.1,2.2-4,1.5c-2-0.7-3.9-1.6-6.1-1.6c-0.5,0-1.6-0.1-0.3-0.8\n                        C1875.9,344.9,1876.5,345,1877,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842632"),
                d:
                  "M1904.7,359.8c-1.1,1.7-2.5,1-3.7,1.2c0.1-0.3,0.1-0.7,0.2-0.9\n                        C1902.1,358.7,1903.2,358.9,1904.7,359.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822933"),
                d:
                  "M1866,345c-0.1,0.7-0.1,1.7-1.2,1.5c-0.4-0.1-0.5-1-0.8-1.5C1864.7,344,1865.3,344,1866,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A01A24"),
                d:
                  "M1907,439c-3.4,3.9-8.3,1-12.2,2.8c0.2,0.6,0.5,1.5,0.8,2.4c-2.2-2.1-6.1,0.1-7.7-3.2\n                        c7.2-4,14.5-7.7,23.1-7l0,0c-0.2,2.8-4.1,1.8-4.6,4.3C1906.3,439,1907,438.6,1907,439z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB1D2B"),
                d:
                  "M1907,439c-1.5-0.2-3.3,0.7-4.3-1.4c3.3-0.1,5.3-3.2,8.3-3.7c3.9,0.9,7.8,1.8,11.2,3.9\n                        c-2.8,1-6.1-0.3-8.7,2c-0.2,0.1-0.9,0-0.9-0.1C1911.4,434.5,1908.7,440.3,1907,439z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC828A"),
                d:
                  "M1962.9,450.1c-7.5-1.4-14.7-3.8-21.9-6.2c0.4-0.4,0.9-0.8,1.3-1.1c3.9,1.1,7.8,2.1,11.7,3.2\n                        c3.3,1.1,6.6,2.1,9.9,3.2C1964.1,450,1964,450.5,1962.9,450.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771720"),
                d:
                  "M2014,472c-1,0-2,0-3,0c-3-1.4-7.1-1.3-7.7-6.2c-0.1-1.2-2.9-3.1-5.3-2.8c0.3-5-3.7-5.2-7-6\n                        c-1.7-2.6-5-1.1-7.1-2.9c0-4.6,3.4,1.2,4.1-1.5c0.5-1.6-1.7-1.4-2-2.6c1.2-1.3,2.8-1.3,4.4-1.5c0.5,0.1,0.9,0.2,1.3,0.5\n                        c2.9,2.7,6.1,4.8,9.8,6.3c2.3,1.8,4.5,4,7.5,4.6c0.3,0.1,0.6,0.2,0.9,0.3c-1.5,1.6-3.9-0.1-5.4,1.5\n                        C2007.7,465.2,2010.9,468.6,2014,472z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82272F"),
                d:
                  "M1991,449c-1.5,1-3.2,1.1-4.9,1c-4.3-1.4-8.7-2.7-13-4.1c3.3-2.1,6.7-0.1,10,0l0,0\n                        c1.6,1,3.5,0.8,5.3,1.1C1989.4,447.3,1991.1,446.9,1991,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3541"),
                d:
                  "M1981,454c-0.3,0.3-0.7,0.7-1,1c-3.7-1-7.3-2-11-3c0.2-0.4,0.5-0.7,0.9-0.9\n                        C1973.8,451.2,1977.4,452.6,1981,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3696F"),
                d:
                  "M1969.9,451c-0.3,0.3-0.6,0.6-0.9,0.9c-2-0.7-4.3-0.6-6.1-1.9c0.3-0.3,0.7-0.6,1-1\n                        C1965.9,449.8,1967.9,450.4,1969.9,451z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("954046"),
                d:
                  "M1991,449c-2.2-2.1-6.1,0-8-3c9.4-0.9,15.5,5.1,21.8,10.7c1.3,1.1,2.5,2.1,4.1,2.4\n                        c0.1,0.3,0.1,0.6,0.2,0.9c-3.4,0.2-5.9-1.7-8.1-4C1997.6,453.7,1994.3,451.4,1991,449L1991,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53F4A"),
                d:
                  "M1775,352c-1.5-2.4-2.1-3.9,2-4.4c2.3-0.3,6.3,0.5,7-3.7c3.3-2.2,6.1,0.2,9.1,0.9\n                        c4.4,1.5,9.2,2,12.9,5.1c0.3,0.3,0.7,0.6,1,0.9c0,0.7,0,1.4,0,2.1c0,0,0,0,0,0c-5,2-10,0.8-15,0c-0.9,0.7-1.7,1.8-2.6,1.9\n                        c-3.9,0.4-6,2.7-7.4,6.1c-0.2-0.1-0.3-0.3-0.5-0.4c-0.9-1.7-1.5-3.5-3.9-3.9C1775.1,356.3,1774.3,354.5,1775,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD4750"),
                d:
                  "M1792,353c5,0,10,0,15,0c0.3,1,0.6,2-1,2C1801.2,354.9,1796.4,355.7,1792,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84E62"),
                d:
                  "M1780.9,366c-1.2-0.7-1.4-2.6-3-3c-0.3-0.5-0.4-0.9-0.1-1.4c1.2-1.4,2.5-1.8,4.1-0.6c0,0,0,0,0,0\n                        c-0.3,0.7-0.6,1.5-0.9,2.2C1781.1,364.1,1781,365.1,1780.9,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69131E"),
                d:
                  "M1708,319c-0.2,3.4-3,0.2-4.4,1.6c2.6,1.6,5.4,2.3,8.1,2.3c7.6-0.2,14.4,3,21.4,4.9\n                        c4,1.1,7.9,1.5,12,1.6c2.3,0.1,4.7,0.9,6.9,1.7c5.1,1.8,10.5,0.7,15.6,1.8c2,0.4,3.9,0.4,5.4,2.1c-2,0.3-4.2-0.8-6,1\n                        c-1.8,1.6-3.8,0.7-5.6,0.2c-4.7-1.2-9.5-2-14.4-2.2c-5.3-1-10.6-2.1-15.9-3.1c-13.9-1.7-27.3-5.9-40.9-9\n                        c-2.4-0.6-4.8-1.3-7.3-1.4c-1.2,0-2.6,0.1-3.4-0.5c-2.6-2-6.1-1.8-8.5-4c5.5-2.5,10.8,0.6,16.2,0.7c0.4,0,1.1,0.9,2.3,0.7\n                        C1695.8,316.3,1701.9,317.9,1708,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("64131E"),
                d:
                  "M1787,330c7.6,1.3,15.2,2.5,22.7,3.8c3.4,0.6,6.7,1.6,10.3,1.2c1,0.3,2,0.7,3,1c3.2,1.4,7.2,0.3,10,3\n                        l0,0c1.8,1.3,4.2-0.3,6,1c6,2,12,4,18,6c-0.1,0.1-0.1,0.4-0.2,0.4c-5.4,0.1-10.9,0.8-16.1-0.2c-2-0.4-4.3-1.4-6.6-1.8\n                        c-4-0.7-6.8-4.3-11.1-4.7c-2.4-0.2-4.5-0.9-7.1,0.2c-2.7,1.1-5.7-1.8-8.8-0.9c-0.2-1.2,0.4-2.5-1.8-2.7\n                        C1798.7,335.6,1793.2,331.6,1787,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1C2A"),
                d:
                  "M1747,334c6-2.6,11.4,0.9,17.1,1.5c1,0.1,1.9,0.3,2.9,0.4c10,2.7,20,5.4,30,8c-0.1,3.1-3,0.5-3.9,2\n                        c-3.1-0.4-5.8-2.3-9-2c-11.4-3.8-23.1-6.3-34.8-8.9C1748.4,334.8,1747.7,334.4,1747,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801A29"),
                d:
                  "M1793,346c0.8-1.6,3.1-0.3,3.9-2c3.7,1.3,7.5,2.7,11.4,4.1c-1,0.7-1.7,1.3-2.4,1.9\n                        C1801.5,349.2,1797.3,347.5,1793,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93313B"),
                d:
                  "M2020,500c1.4,0,2.4-0.7,3-2c3.5-1,7-1.8,10-4c4.2-3,9.3-3,14-4c3.3,0.6,5.3-2,8-3c2,0,4,0,6,0\n                        c-2.3,2.9-7,2.8-8.3,6.9c-4.1-2.5-6.9,2.1-10.5,2c-4.1,0-7.5,1.9-11.1,3.1c-3.9-0.7-6.9,3.9-11,2c-0.3-0.2-0.5-0.5-0.3-0.7\n                        C2019.8,500.1,2019.9,500,2020,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1925"),
                d:
                  "M2047,490c-4.7,1.3-9.4,2.6-14,4C2036.3,487.7,2042.2,490.8,2047,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761523"),
                d:
                  "M2038,471c-1.2,1.9,0.3,5.1-3,6C2036.9,475.4,2034.5,471.7,2038,471z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2D7D7"),
                d:
                  "M1264.1,238c-0.7,0-1.4,0-2.1,0c-3.2-1.8-6.9-2.8-8.9-6.2C1257.1,233.3,1260.6,235.6,1264.1,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25C65"),
                d:
                  "M864.1,300.8c1.3,0.1,2.6,0.2,3.9,0.3c2.7,0.9,5.4,0,8.1,0.6c3.9,0.8,7.9-0.1,11.8,0.5\n                        c3.2,1.5,6.7,1.3,10.1,1.3c2.9,0,5.8-0.1,8.7,0.1c4.6,1,9.4,0,14,0.6c3.9,1.8,8,1.2,12,1.3c3.1,0,6.3,0,9.4,0\n                        c1.4,0.3,2.7,0.5,4.2,0.5c2.8,0.1,5.6-0.1,8.4,0.1c1.7,0.8,3.9,0.5,5.4,1.9c-0.5,2.7-2.7,1.8-4.4,1.9c-2.1,0.2-4.3,0-5.6,0\n                        c6.3,0.4,13.4-0.7,20.5-0.4c2,0.1,3.4-0.9,5.2-1.4c5.3-0.3,10.5-0.3,15.7,0.8c1.2,0.1,2.4,0.1,3.5,0.2c3.8,0.9,7.7,0,11.6,0.5\n                        c2.7,0.7,5.4,0.1,8.1,0.5c1.3,0.5,3.3,0.7,3,2.5c-0.3,1.7-2.3,1.5-3.7,1.7c-2.7,0.3-5.8-0.4-6.5,3.5c-1.4,1.8-3.3,2.4-5.3,2\n                        c-5.4-1.2-10.4-0.4-15.3,1.9c-5.6-2.7-11.6-1.3-17.4-2.1c-3.4-0.5-6.4,1.3-9.5,2.2c-2.1,0.7-3.9,2.8-6.3,0.9\n                        c-2.5-2,1.9-3.2,0.5-5.4c-2.4,0.2-4.8,1.1-7.5,1.1c-4.6-0.2-8.5-2.7-13.1-2.7c-1.5,0-2.9-0.3-4.5,0.4c-2.3,1-4.8,1.4-7.3,0.4\n                        c-1.2-0.5-2.6-1.2-2.3-2.8c0.2-1.4,1.5-1.6,2.7-1.8c1.3-0.2,2.6-0.2,4-0.3c0.3,0,0.5,0,0.5-0.1c0.3-0.9-0.7-0.1-0.8-0.6\n                        c-5.1-0.8-10.3-1.7-15.3,0.7c-4.9,1.5-10.1-0.3-14.9,1.8c-1,0.4-2.2-0.5-2.9-1.4c-0.4-1.4,0.8-4-2.6-2.9\n                        c-6.2,2.1-12.7,0.3-19.1,1.2c-1.2,0.2-2.3-0.2-2.9,1.2c-1.5,3.1-0.5,6.5-1.6,9.7c-0.3,0.5-0.7,0.9-1.3,1\n                        c-1-0.4-1.6-1.3-1.6-2.3c0.1-5.9-1.3-11.8-0.8-17.7C863.3,301.6,863.6,301.1,864.1,300.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15961"),
                d:
                  "M1007,318c0.4-4.7,0.4-4.7,10.3-5.2c-1-0.7-1.7-1.2-2.3-1.7c4.1-2.4,8.2-0.3,12.3-0.2\n                        c0.9,0.1,1.8,0.1,2.7,0.2c3.6,0.9,7.3,0.2,11,0.4c1.5,0.1,2.9-0.2,4.4,0.2c5.5,0.5,10.9,0.1,16.4,0.2c1.8,0,3.6,0.2,5.3,0.9\n                        l-0.1,0c2,1.2,4.4,0.1,6.5,0.8c8.8-0.6,17.3,1.8,26.1,1.9c1.2,0,2.3,0.2,3.3,0.9c0.7,0.7,0.8,1.5,0.5,2.3\n                        c-2.9,2.4-6.4,1.1-9.6,1.5c-2,0.3-4.6-0.6-5.3,2.4c-0.1,1.2-0.1,2.5-0.3,3.7c-0.5,3.1-2.7,4.1-5.4,4.1c-6.1,0.1-12,1.4-18,2.5\n                        c-2.4,0.4-4.6,0.3-6.8-0.8c-3.3-4-6.9-7.1-12.6-6.2c-2.2,0.4-4-1.1-5.8-2c-0.7,0.5-0.7,1-0.7,1.5c-0.2,1.4,0.3,3.4-1.7,3.6\n                        c-2.1,0.2-2.1-1.8-2.3-3.2c-0.3-3.2-1.3-4.5-4.8-3c-2.3,1-5,0.6-7.6-0.7c-3.3-1.6-6.8-2.7-10.1,0.6c-1.4,1.4-3.5,1.6-5,0.2\n                        c-1.7-1.6,0.1-2.4,1-3.6C1008.9,318.8,1006.3,319.5,1007,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE5A63"),
                d:
                  "M797.1,295.3c3.8-0.6,7.1,1.6,10.8,1.8c2.2,1,4.6,0.2,6.9,0.5c3.5-0.2,7,0.5,10.5-0.2\n                        c3.2-0.7,5.7,1.9,8.8,1.8c4.2,1,8.5,0.2,12.7,0.4c1.1,0.1,2.4-0.2,2.5,1.5c-0.8,4.3-3.2,5.8-7.7,5.5\n                        c-6.1-0.4-12.3-0.2-18.4-0.1c-2.4-0.1-4.8,0.2-7.1-0.4c-3.3-4.6-7.8-1-11.7-1.7c-1.7-0.1-3.4,0-5-0.5\n                        c-1.5-0.6-2.9-1.9-4.7-1.3c-8.1,2.6-15.1-2.6-22.7-3.2c-1.6-0.1-3.8-2.1-5.2-4c0.2-0.5,0.5-0.9,1.1-1.1\n                        c2.3-0.3,4.6-0.5,6.7,0.7c0.8,0,1.6,0.1,2.4,0.1c2.7,1,5.5,0.2,8.3,0.5C789.2,295.4,793.2,295.8,797.1,295.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M1236.7,297.1c-1.2-0.1-2.5-0.1-3.7-0.2c-1.6-1.1-4,0.2-5.3-1.7c-0.7-2.6-2.3-4.8-0.6-7.8\n                        c1.4-2.7-0.6-4.9-3.7-4.2c-4.1,0.9-4.5-1.3-4.4-4.3c0.7-3.6,3.5-5.3,6.6-6.4c2.4-0.2,4.1,1.2,5.5,2.9c2.2,2.7,4.4,2.6,5.6-0.6\n                        c1.2-3.3,3.7-4.5,6.6-5.4c2-0.1,4.6-0.1,4.7,2.3c0.2,2.8-2.5,2.7-4.7,2.5c0.5,2,2.5,2.5,3.2,4c0.7,1.3,1.7,2.9,0.1,4\n                        c-1.5,1.1-2.8,0.1-3.7-1.4c-0.4,1,0,2.1,0.4,2.5c3.1,2.4,3.8,5.9,4.7,9.3c-0.2,4.5-3.5,5.1-6.9,5.3\n                        C1239.6,298,1238.2,297.3,1236.7,297.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36068"),
                d:
                  "M823,305c6.8,0,13.5,0,20.3,0c1.6,0,4.2,1.4,3.2-2.4c-0.3-1,1.5-1.5,2.7-1.7c2.7-2.4,6.1-0.8,9-1.6\n                        c2,0.5,4,1,6,1.5c0,0-0.2,0.2-0.2,0.2c-1.7,1.7-0.6,4-1.1,6c-0.3,1.1-0.5,2.3-0.7,3.4c-0.2,1-0.3,2.1-1.4,2.4\n                        c-1.3,0.3-1.8-0.9-2-1.7c-0.7-2.5-2.6-2.2-4.3-1.8c-5.8,1.6-11.7-0.8-17.6,0.6c-2,0.5-4.1-0.1-6,1.3c-1.5,1.2-3.5,1.3-5.2,0.2\n                        c-1.8-1.2-1.2-2.4,0.4-3.4c0.1-0.1-0.5-0.1-0.8-0.1c-1.2-0.1-2.3-0.4-2.8-1.7C822.5,305.8,822.7,305.4,823,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731527"),
                d:
                  "M1259,340c0,1-0.5,1.9-1.4,2.5c2.8,1.3,5.3-0.5,7.6,0.4c1.1,0.4,3.4-0.5,3.2,1.3\n                        c-0.2,2.4-2.3,1.7-3.9,1.2c-0.2-0.1-0.5,0.2-0.9,0.4c1.8,1.9,3.9,1.1,6,0.8c4.7-0.6,8.9,1.4,9.3,4.4\n                        c-8.1,3.7-15.9,1.8-23.7-1.3c-1.7-1.5-3.2-3.3-6-2.1c-1.1,0.4-2.3,0.1-2.8-1.3c0-2.4,2.4-2.4,3.6-3.7c0.9-0.7,2-0.9,2.9-1.6\n                        c0.3-0.3,0.7-0.7,1-1c0.8-0.8,1.9-0.6,2.8-0.9C1257.7,339.1,1258.5,339.3,1259,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F8F7F7"),
                d:
                  "M1118.8,313.1c18.9,0,37.9-0.1,56.8-0.2c2,0,4.4,0.8,5.6-1.8c0-0.1,0.3-0.1,0.4-0.2\n                        c6.7-1.4,13.2-0.8,19.5,1.8c-0.2,0.2-0.4,0.5-0.6,0.7c-3.3,1.6-6.9,0.8-10.3,0.8c-4,0-8,0.3-11.8,1.8\n                        c-18.8,0.4-37.5,0.5-56.3,0C1120.5,315.6,1119,315.1,1118.8,313.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D55E68"),
                d:
                  "M689.3,288.9c0.9,0.1,1.8,0.1,2.8,0.2c2.4,0.9,4.8,0.2,7.2,0.4c2.2,0.1,4.4-0.1,6.7,0.1\n                        c3.6,0.8,7.4-0.1,11,1.1c3.9,1.7,8,0.4,12,0.8c2.2,0.5,4.7-1.1,6.5,1.2c0.4,2.9-1.6,3.5-3.6,3.5c-6.8,0.2-13.6,0.8-20.3-0.7\n                        c-3.4-0.8-6.8-1.2-10.3-1.2c-2-0.1-3.9,0.1-5.8-0.5c-0.6-0.3-0.9-1-1.3-1.2c-1-0.7,1.8-1.2,0.2-0.9c-2.6,0.5-5.2,0.4-7.8,0.6\n                        c-2.5,0.1-5,0.2-7.5-0.2c-1.1-0.2-2.5-0.3-2.8-1.6c-0.2-1.3,1-1.9,2.1-2.4C682,287.7,685.6,288.3,689.3,288.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3F0F1"),
                d:
                  "M1201.1,312.8c5.2,0.5,5.5,4.5,5.9,8.3c0.4,4.3-0.4,8.6,0.5,12.9c2.7,12.6,13.6,13.8,23.2,12.3\n                        c7-1.1,13.5-4,20.4-5.3c0.3,1.7-1.3,2-2.1,2.8c-5.6,3.8-12.4,3.8-18.4,6.1c-3.3,0.6-6.6,0.6-9.9,0c-2.5-0.9-4.9-2-7.3-2.9\n                        c-3.8-1.5-6.4-4-7.4-8c-1.5-5.2-2.8-10.4-1.6-16c0.8-3.6-2.2-6.7-3.4-10L1201.1,312.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85B67"),
                d:
                  "M560,278.4c2.5-0.6,4.5,2.4,7.1,0.8c1.2,0.9,3.1-0.4,4.1,1.1c0,0.5-0.2,1-0.6,1.3\n                        c-3.4,1.4-6.9,0.6-10.3,0.8c-8.1,0.3-16.2-0.5-24.2-1.1c-3.8-0.3-8.3-0.6-12.1-2.7c-1.7-0.9-5.3,1-4.8-3.2\n                        c0.3-0.4,0.7-0.7,1.3-0.9c1.3,0.1,2.6-0.1,3.9,0.4c0.9,0.1,1.8,0.2,2.7,0.2c4.6,0.8,9.3,0.8,13.9,1.4c2.1,0.2,4.1,0.4,6.2,0.6\n                        C551.4,277.5,555.7,278.3,560,278.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3C3C3"),
                d:
                  "M1230.9,247.1c10.3,4.2,19.5,10,26,19.1c4.1,5.7,2.3,12.1,0.3,18.2c-0.9,2.8-2.4,5.5-3.3,8.3\n                        c-1.6,5.2-5,7.1-10.2,6.2c0.7-2.9,4.3-2.5,5.6-4.8c4-5.9,6.3-12.5,7-19.4c0.7-7.3-4.9-11.4-10.1-15.3\n                        c-1.2-0.9-2.7-1.2-3.8-2.3c-1.6-1.9-3.6-3.3-6-4.2c-2.1-1-4.5-1.7-5.9-3.8C1230.3,248.4,1230.4,247.7,1230.9,247.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F595B"),
                d:
                  "M575,158.9c-0.7,0.7-1.3,1.4-2,2.1c-9.7,2.7-19.4,5.6-29.3,8.1c-4.3,1.1-8,4.3-12.7,4.2\n                        c0.6-0.8,1.3-1.6,1.9-2.4c6.3-3.5,13.4-4.5,20.1-6.8c5.6-1.9,11.6-2.5,17-5C571.7,159,573.3,158.9,575,158.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC4150"),
                d:
                  "M1184,292.8c-2.9,0.3-5.7,0-8.2-1.6c0.2-1.4,1.1-2.3,2.1-3.1c3.7-1.4,7.7-0.1,11,0.6\n                        c6.5,1.3,12.8,0.9,19.3,1.1c1.9,0.1,4.2-1,4.7,2.1c0,0.5-0.1,1-0.3,1.5c-2.2,2.3-5.2,0.3-7.6,1.4c-4.7-0.7-9.4-1.3-14.1-2\n                        C1188.6,292.2,1186.3,292.3,1184,292.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15D5E"),
                d:
                  "M625,148.9c5.4-2.4,11.6-1.8,17.1-3.9c7-1,14-1.9,21-2.9c1.3,0.8,3-0.4,4.1,0.9\n                        c-4.8,2.9-10.3,1.9-15.5,2.9c-9.9,1.9-19.7,4.2-29.8,4.8C621.8,148.4,624.5,150.3,625,148.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D55966"),
                d:
                  "M661.2,286.9c1.6,0.1,3.2,0.1,4.8,0.2c1.6,1.1,3.9-0.5,5.4,1.2c0.2,0.6,0.3,1.1,0.2,1.7\n                        c-0.9,2.3-3,2.3-5,2.4c-3.8,0.1-7.6,0.5-11.3-0.6c-3.5-2.3-7.4-1.2-11.1-1.5c-2.2-0.2-4.8,0.6-5.7-2.5c0.1-0.6,0.4-1.1,1-1.4\n                        c3.9-0.8,7.8-0.2,11.7-0.4C654.6,285.9,657.9,286,661.2,286.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF5B64"),
                d:
                  "M571,281c0-0.3,0-0.6,0-0.9c2.2-1.4,4.8,0,7.1-0.9c3.7,0.6,7.3,1.2,11,1.9c0.8,0.6,1.8,0.4,2.6,0.8\n                        c2.4,0.5,4.9,0.6,7.2,1.1c1.1,0.2,3.5,0.4,1.5,2.7c-1.8,0.9-3.8,0.6-5.7,0.8c-4.3,0-8.6-0.2-12.9,0.1\n                        C577,286.8,573.4,285.1,571,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EDE8E8"),
                d:
                  "M1277.2,309.1c-1.4,0.6-2.8,1.2-4.3,1.8c-1.3,0.8-2.8,1.1-4.3,1.3c-1.2,0.1-2.3-0.1-3.5,0\n                        c-2,0.3-4.6-1-5.8,1.6c-1.1,2.4,1.1,3.9,2.2,5.7c1,1.7,1.6,3.5,2.1,5.4c0.1,0.7,0.1,1.5,0,2.2c-0.9,1.8-0.2,4.9-3.7,4.7\n                        c1.7-3.9,1-7.3-1.7-10.5c-1.1-1.2-1.9-2.7-2.6-4.2c-2.2-4.6-0.5-7.9,4.7-8.2C1265.9,308.8,1271.5,309.1,1277.2,309.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD5663"),
                d:
                  "M520,275.1c-0.1,3.7,2.8,1,4,1.9c-1.6,3.9-5.1,1.5-7.6,2.5c-0.5,0.1-0.9,0.3-1.4,0.3\n                        c-1.2,0.2-2.4,0.3-3.5-0.3c-0.2-0.2-0.3-0.3-0.5-0.5c-0.8-4.2-4.7-1.6-6.9-2.9c-0.5-0.3-1.2-1-2.1-1.1\n                        c-0.4-1.5,0.4-2.3,1.6-2.8c3-0.5,5.9,0.1,8.8,0.7c0.5,0,1,0.1,1.5,0.1C515.7,274.4,518.4,273.2,520,275.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA646A"),
                d:
                  "M467.4,251.8c8.6,6.5,17.7,12.2,27.6,16.4c0.3,0.5,0.2,0.9-0.3,1.3c-2.6,1.3-4.8-0.2-7-1.3\n                        c-1.8-0.9-3.5-1.8-5.4-2.3c-2.6-0.7-4.9-2-6.7-4c-1.3-1.4-2.9-2.3-4.4-3.4c-1.6-2.2-5.7-2.1-5.6-5.9\n                        C466,251.8,466.5,251.3,467.4,251.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80313A"),
                d:
                  "M1205,294.8c2-1.9,5.1,0.4,7.1-1.8c6-2.8,13.2-1.9,15.9,1.9c1.7,0.7,3.3,1.3,5,2\n                        C1223.5,298.1,1214.4,294.9,1205,294.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D55966"),
                d:
                  "M638.3,284.9c0.2-0.1,0.5-0.1,0.6,0.1c0.3,0.2,0.6,0.5,0.6,0.9c-0.1,0.4-0.2,0.7-0.5,1l0,0\n                        c-1,0.9-1.1,3.3-3.1,2.5c-7-2.8-14.4,0-21.4-1.3c-1.9-0.4-5.4,0.1-3-3.9c3.9-0.7,7.8-0.2,11.7-0.4\n                        C628.3,284,633.3,283.8,638.3,284.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D55E68"),
                d:
                  "M767,295c0,0.3,0,0.6,0,1c-1.3,3.6-4.5,2.7-6.6,2c-4.7-1.5-9.5-1.3-14.3-1.7c-2.5-0.2-4.9-0.9-6.8-2.6\n                        c-1.3-2.2,0.7-2,1.8-2.5c2.5-0.5,4.8,0.4,7,1.5c2.4,1.5,5,0.3,7.5,0.7c2.9,0,5.8,0,8.8,0C765.5,293.5,766.5,293.8,767,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE5D6B"),
                d:
                  "M623,285c-4,0-8,0-12.1,0c-0.9,0.8-2,1.3-3.2,1.3c-2.3,0-4.8,0.6-6.8-1.3c-2.6-1.8-5.7-0.7-8.5-1.6\n                        c-1-0.3-1.4-0.5-1.5-1.4c2.3-0.9,4.6-0.4,6.9-0.4c3.4,0.7,7,0.2,10.4,1.3c2.2,0.1,4.5,0.1,6.7,0.2c2.5,1,5.2,0,7.7,0.5\n                        C623.3,284,623.4,284.5,623,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A16F6C"),
                d:
                  "M1118.8,313.1c0.8,0.6,1.5,1.2,2.3,1.8c-1.4,1.7-3.4,1.4-5.3,1.5c-6.6,0.3-13.3-0.5-19.9-0.4\n                        c-1.5,0-3.1,0.3-4-1.4c3.4-2.7,7.5,0,11-1.4C1108.2,313.2,1113.5,313.1,1118.8,313.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942634"),
                d:
                  "M867.1,124.1c14.6,0,29.3,0,43.9,0c0.3,0.2,0.5,0.3,0.4,0.5c-0.1,0.2-0.2,0.3-0.3,0.3\n                        c-14.7,0-29.3,0-44,0c-0.3-0.2-0.4-0.4-0.3-0.5C866.8,124.2,866.9,124.1,867.1,124.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAE4E4"),
                d:
                  "M1160,250.9c0.1-2.3,1.8-3.8,3.4-4.6c6.9-3.3,13.7-7.2,21.8-7.2c-0.2,2.2-2.1,2.4-3.6,2.8\n                        c-3.4,0.9-6.5,2.3-9.7,3.7c-2,1-4.2,1.4-6,2.8c-0.5,0.4-1,0.8-1.5,1.1c-1.1,0.6-2.1,1.4-3.3,1.9\n                        C1160.6,251.5,1160.2,251.3,1160,250.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6595F"),
                d:
                  "M459,247.1c-4.1-3.6-8.2-7.2-12.3-10.9c-1.3-1.2-2.9-2.3-2.7-4.5c6.1,3.9,10.9,9.2,16.1,14.2\n                        C460.4,246.9,459.9,247.2,459,247.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1170.9,244.9c4.2-3.2,9.7-3.3,14.2-5.8c1.3,0,2.6,0,3.9,0c1.6,1,3.2,0,4.8,0.1\n                        c1.6,0.1,3.8-0.8,4.3,1.9c-1.7,1.7-4,1.5-6.1,1.4c-4.7-0.2-9.1,0.6-13.5,2.4c-1.8,0.5-3.7,1.2-5.6,1.2\n                        C1172.2,245.9,1171.4,245.6,1170.9,244.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935F62"),
                d:
                  "M1198,241c-2.6-2.4-6.4,0.5-9-1.9c0.9-0.1,1.8-0.1,2.7-0.2c4.1-0.5,8.3-0.6,12.4,0l0,0\n                        c2.2,2.5,5.6,0.7,8.1,2c0.3-0.1,0.5-0.1,0.8,0.1c0.2,1.9-1.2,2.3-2.5,2.8C1206.2,243.6,1201.6,244.5,1198,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5D5D"),
                d:
                  "M792.9,127.9c0.1-0.3,0.2-0.5,0.3-0.8c4.7,0,9.4-0.1,14.1-0.1c2.4-0.9,4.8-0.3,7.2-0.3\n                        c0.2,0.2,0.4,0.3,0.6,0.5c-5.5,2.6-11.3,1.8-17.1,1.7C796.4,127.9,794.3,129.3,792.9,127.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24350"),
                d:
                  "M1178,289c-0.4,1.1-1.2,1.7-2.2,2.2c-3.5,0-7-0.2-8.9-3.9c-0.3-0.7-0.5-1.4-0.3-2.1\n                        c1.6-1.7,3.3-1.5,4.7,0.1c1.2,1.3,2.5,2.1,4.2,2.4C1176.5,287.9,1177.4,288.2,1178,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1211,243c0.7-0.7,1.3-1.3,2-2c6.6,0.3,12.2,3.4,17.9,6.1c0,0.6,0.1,1.3,0.1,1.9\n                        c-2.1,0.9-3.7-0.3-5.4-1.1c-4.2-2.3-8.5-4.3-13.5-4.1C1211.7,243.6,1211.3,243.4,1211,243z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A66B6E"),
                d:
                  "M1067.1,312.9c-7.4-0.3-14.8,1-22.2-0.8c2.9-1.5,6.1,0.1,9-0.9C1058.4,311.3,1063,310,1067.1,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B08988"),
                d:
                  "M1260,331.9c2.6-0.8,1.6-3.5,2.9-5.1c1.2,0.9,1.3,2.2,1.3,3.6c0,0.8-0.1,1.5-0.4,2.3\n                        c-1.5,3-2.5,6.4-6.7,6.9c-1,0.2-2.1,0.4-3.1,0.5C1256.3,337.5,1258.7,335.2,1260,331.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80313A"),
                d:
                  "M1250.1,295.1c-1.2,2.6-4.6,1.7-6.2,3.8c-2.5-0.2-5.1,0.2-7.1-1.7c2.2-1.4,4.8,0.2,7.2-0.9\n                        c2.2-0.9,3.3-2,3.1-4.3c1.4-0.6,2.4,0,3.4,1C1250.6,293.7,1250.5,294.4,1250.1,295.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B77178"),
                d:
                  "M495,269.2c0-0.4,0-0.7,0-1.1c5.8,1.8,11.9,2.4,17.5,4.8c-3.1,0-6.3,0-9.5,0c-0.4,0.4-0.8,0.5-1.3,0.3\n                        C499.8,271.4,495.5,273.4,495,269.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("934448"),
                d:
                  "M760.3,130.9c6.6-1.4,13.4-1.8,20.1-1.7c1.7,0-0.4,1-0.2,1.6c-5.4,0.1-10.7,0.3-16.1,0.4\n                        C762.8,131.5,761.5,132.1,760.3,130.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E4D4B"),
                d:
                  "M828.8,125.9c5-1.6,10.1-0.3,15.2-0.8c0.5,0,1.5-0.1,0.5,0.8c-0.3,0.3-0.8,0.6-1.1,0.8\n                        c-4.1,0-8.3,0.1-12.4,0.1C830.3,126.3,829.3,126.8,828.8,125.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A57372"),
                d:
                  "M966.9,126.9c3.4,0.5,6.9-0.7,10.2,0.9c-1.8,1.4-4.1-0.1-6,1c-4.1-0.2-8.4,1.3-12.1-1.7\n                        c0.2-0.2,0.4-0.4,0.6-0.6C962,126.6,964.5,126.1,966.9,126.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A5455"),
                d:
                  "M1019.2,133.9c3.3,0.4,6.5,0.8,9.8,1.2c1,1.1,2.9,0.4,3.8,1.9c-0.2,0.5-0.5,0.6-1,0.3\n                        c-5.7,0.4-11.2-1.5-16.7-2.3C1016.2,133.5,1017.8,134.2,1019.2,133.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A77474"),
                d:
                  "M921.3,305.1c-4.7-0.7-9.6,0.8-14.3-1c1.4-1.5,3.4,0,4.9-1c4.5-0.2,9.1-0.5,13.3,1.7\n                        C924,305.9,922.6,305.5,921.3,305.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E5F62"),
                d:
                  "M1167,285c0,0.8-0.1,1.5-0.1,2.3c-3.7-4.1-3.2-9.6-4.8-14.3c-0.9-1.2-0.6-2.5-0.3-3.8\n                        c2.4-0.7,2.5,1.3,3.2,2.6c0.4,2,0.5,4,1.1,6C1166.3,280.1,1167.6,282.5,1167,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("996464"),
                d:
                  "M728.9,133.9c3.3-1.5,6.7-0.7,10.1-0.9c2.5-0.5,4.9-1,7.3,0.2c-3.8,2.8-8.2,1.5-12.4,1.7\n                        C732.4,133.8,730.4,135.3,728.9,133.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3545B"),
                d:
                  "M710.9,135.9c4.3-1.4,8.8-1.1,13.2-1.7c0.6,0.6,1.7,0.1,2.1,1c-3.2,2-6.7,1.9-10.3,1.7\n                        C714.4,135.9,712.4,137.2,710.9,135.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDB8B8"),
                d:
                  "M1162,269c0,1.3,0,2.6,0,4c-2.7-5.4-4.3-11.1-3.3-17.2c0.5,0.2,0.9,0.5,1.1,1\n                        C1161,260.7,1163.4,264.6,1162,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("672C30"),
                d:
                  "M435.1,227.7c0-0.9,0-1.8,0-2.7c0.4-1.4,0.7-2.9,2.1-3.7c0.6-0.8,1.2-1.6,1.8-2.3\n                        c1.6,0,1.8,0.7,0.9,1.9c-0.8,1.6-1.1,3.3-0.8,5c0.2,1-0.2,1.4-1.2,1.3C437,227.3,436.1,227.5,435.1,227.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46B6C"),
                d:
                  "M943,124.9c3.3,0.6,6.9-0.7,10.1,1c-3.2,1.5-6.8-0.2-10,1c-3.3,0-6.6,0-10-0.1c1.1-3.5,4-0.8,5.8-1.7\n                        C940.3,125,941.6,125,943,124.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B67D7D"),
                d:
                  "M1027.3,310.9c-4.1,0.1-8.2,0.1-12.3,0.2c-2.7-0.5-5.5,0.6-8-0.9c0.2-0.2,0.4-0.4,0.5-0.6\n                        c3.5-0.4,7,0.4,10.4-0.4C1021.2,309,1024.3,309.7,1027.3,310.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37F80"),
                d:
                  "M623,285c0-0.3-0.1-0.6-0.1-0.9c0.7-1.1,2.1-0.2,3-0.9c4.3-0.6,8.4,0.1,12.4,1.7\n                        C633.2,284.9,628.1,285,623,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6668"),
                d:
                  "M888.2,303.1c-4.1-0.5-8.2,0.7-12.2-0.9c1.8-1.6,4.1,0.1,6-1c3.6-0.5,7,0,10.3,1.8\n                        C890.9,303.9,889.5,303.6,888.2,303.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("914043"),
                d:
                  "M689.3,139l0.5-0.1c0.8,0.4,0.8,1,0.5,1.7c-4.2,0.4-8.4,0.7-12.6,1.1c-1.5,0-1.2-0.7-0.6-1.6\n                        C681.2,139.8,685.2,139.4,689.3,139z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B97D80"),
                d:
                  "M671,289c0-0.3,0-0.6,0-0.9c2.8-1.5,6,0.2,8.9-1c3.3-0.4,6.4,0.5,9.4,1.8c-3.8,0.1-7.6,0.1-11.3,0.2\n                        C675.6,289.9,673.3,291,671,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A05B5C"),
                d:
                  "M625,148.9c-1,0.6-2,1.3-3,1.9c-4,0.7-8,1.4-12,2.1c1-0.7,2-1.3,3-2C617,150,620.9,148.6,625,148.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37A7D"),
                d:
                  "M991.5,308.9c-5.5,0-11,0-16.5,0c-0.3-0.5-0.3-0.9,0.2-1.3c2.2-0.5,4.5,0.3,6.7-0.5\n                        C985.3,306.7,988.4,307.6,991.5,308.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3595B"),
                d:
                  "M677.1,140.2c0.2,0.5,0.4,1,0.6,1.6c-1.9,2.1-4.4,1.2-6.7,1.2c-1.2-1.1-3,0.2-4.1-1.1\n                        C670.1,140.5,673.7,140.8,677.1,140.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A95E61"),
                d:
                  "M540.9,276.5c-4.8,1.1-9.3,0.1-13.9-1.4C531.7,275.2,536.5,274,540.9,276.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("974A4D"),
                d:
                  "M746.3,133.2c-2.4-0.1-4.9-0.1-7.3-0.2c0.3-0.3,0.7-0.6,1-0.9c4.6-0.3,9.3-0.6,13.9-0.9\n                        c0.7,0.6,0.7,1.1,0,1.7C751.4,133,748.9,133.1,746.3,133.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93144"),
                d:
                  "M867.1,124.1c0,0.3,0,0.5,0,0.8c-5.7,0.1-11.5,0.2-17.2,0.3c2-2.3,4.6-0.9,7-1.1\n                        C860.2,123.9,863.6,124.1,867.1,124.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B28B8C"),
                d:
                  "M938.9,125.1c-1.5,1.9-4.2,0-5.8,1.7c-2.9,0.2-5.7,0-8.3-1.7c0.7-0.8,1.6-0.6,2.5-0.6\n                        c3.6,0.2,7.2-0.5,10.7,0.4C938.3,125,938.6,125,938.9,125.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA8E8E"),
                d:
                  "M955,307.1c-3-0.1-6-0.2-9-0.3c1.8-2.8,4.8-0.3,6.9-1.6c2.9-0.3,5.7,0.5,8.3,1.7\n                        C959.2,307.9,957.1,307.6,955,307.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD7075"),
                d:
                  "M459,247.1c0.4-0.4,0.7-0.8,1.1-1.2c2.4,2,4.9,4,7.3,5.9c-0.5,0.4-1,0.8-1.4,1.2\n                        c-0.3,0.3-0.6,0.2-0.9-0.1C463.8,250.2,460.5,249.5,459,247.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA676A"),
                d:
                  "M995.1,129.9c-0.8,0.1-1.6,0.2-2.1,1c-3.1,0.2-6.1,0-9.1-1.1c-0.1-0.5,0.1-0.8,0.6-0.9\n                        C988.1,129.4,991.7,128.1,995.1,129.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A97D7A"),
                d:
                  "M754,132.9c0-0.6,0-1.2,0-1.7c2.1-0.1,4.2-0.2,6.4-0.3c1.3,0.1,2.6,0.2,3.9,0.2\n                        C761.1,133.4,757.5,133,754,132.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB7A7C"),
                d:
                  "M1031.8,137.2c0.3-0.1,0.6-0.2,1-0.3c3.9-0.1,7.6,0.7,11.2,2c0,0.4,0,0.8,0,1.2\n                        C1039.9,139.3,1035.6,139.2,1031.8,137.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B18281"),
                d:
                  "M717.3,291.2c-3.8-0.7-7.7,0.6-11.4-0.9c1-1.6,2.8-0.2,3.9-1.1c2.9-0.4,5.7,0.1,8.3,1.7\n                        C718,291.3,717.7,291.4,717.3,291.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA7F7D"),
                d:
                  "M767,295c-0.6-0.3-1.2-0.6-1.9-1c-0.3-0.1-0.5-0.3-0.4-0.6c0.1-0.2,0.1-0.4,0.2-0.4\n                        c3.2,0.4,6.8-1.2,9.5,1.8C772,294.9,769.5,295,767,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73042"),
                d:
                  "M926.9,124.8c-0.7,0.1-1.4,0.2-2.1,0.4c-4.6-0.1-9.2-0.2-13.8-0.3c0-0.3,0-0.5,0-0.8\n                        c5.3,0,10.6,0,15.9,0c0.4,0.2,0.5,0.3,0.4,0.5C927.2,124.7,927,124.8,926.9,124.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2D34"),
                d:
                  "M828.8,125.9c0.7,0.3,1.4,0.6,2.1,1c-5.3,0.1-10.6,0.2-15.9,0.3l0-0.3c-0.4-0.2-0.5-0.3-0.3-0.5\n                        c0.1-0.1,0.2-0.2,0.4-0.2C819.7,126,824.2,126,828.8,125.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("903F41"),
                d:
                  "M943.1,126.9c3.2-1.8,6.7-0.4,10-1c1.9,0.1,3.9,0.1,5.8,0.2c0.4,0.2,0.5,0.3,0.3,0.5\n                        c-0.1,0.1-0.2,0.2-0.4,0.2l0.1,0.4C953.7,127.1,948.4,127,943.1,126.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB6E6F"),
                d:
                  "M608.3,282.9c-3.5-0.3-7.1,1-10.4-0.8c0.1-0.6,0.7-0.7,1-1C602.2,280.8,605.4,281.2,608.3,282.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6444F"),
                d:
                  "M560,278.4c-4.5,1.3-8.7-0.3-12.9-1.2C551.5,276.9,555.8,276.6,560,278.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91343A"),
                d:
                  "M741.1,291.3c-0.8,0.5-1.5,1.1-2.3,1.6c-1.2,1.3-2.5,1.1-3.7,0c-1.8-1.4-4-0.6-6-0.9\n                        c-0.4-0.2-0.5-0.3-0.4-0.5c0.1-0.2,0.2-0.3,0.3-0.3C733.1,291.2,737.1,291.2,741.1,291.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("973941"),
                d:
                  "M981.9,307.2c-2.1,1.6-4.6,0.5-6.9,1.1c-2.5,1.5-5,1.4-7.6,0.4c-0.6-0.4-0.7-0.9-0.4-1.5\n                        C972,307.1,977,307.1,981.9,307.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93313C"),
                d:
                  "M792.9,127.9c1.7,0.5,3.6-0.5,5.1,1c-3.7,0.1-7.3,0.2-11,0.4c-0.9-0.2-1.8-0.4-2.7-0.6\n                        c0-0.3,0-0.5,0-0.8C787.1,127.9,790,127.9,792.9,127.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984548"),
                d:
                  "M984.6,129c-0.2,0.3-0.4,0.6-0.6,0.9c-4.2-1.3-8.6-0.4-12.9-1c1.8-1.6,4-0.5,6-1\n                        c2.6,0.1,5.2,0.2,7.8,0.4C984.8,128.5,984.7,128.8,984.6,129z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1212.2,240.9c-2.7,0-5.5,0.4-8.2,0c-2.6-0.4,0.4-1.3,0.1-2C1207,238.7,1209.7,239.5,1212.2,240.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B07576"),
                d:
                  "M661.2,286.9c-3.4,0-6.8,0-10.2,0c-0.4-0.2-0.5-0.6-0.3-1c0.6-0.6,1.5-0.3,2.2-0.8\n                        C655.9,284.9,658.7,285.3,661.2,286.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853031"),
                d:
                  "M1102.9,313.2c-3.5,1.7-7.3,0.3-10.9,1c-1.2,1.1-2.4,0.7-3.7,0.2c-0.6-0.3-0.7-0.7-0.4-1.3\n                        C1093,313.2,1097.9,313.2,1102.9,313.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A04B52"),
                d:
                  "M679.9,287.1c-2.8,1.8-6,0.4-8.9,1c-1.6-0.4-3.6,0.5-5-1C670.7,287.1,675.3,287.1,679.9,287.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80262D"),
                d:
                  "M881.9,301.1c-1.8,1.7-4,0.4-6,1c-2.6-0.4-5.4,0.4-7.9-1.1C872.6,301.1,877.3,301.1,881.9,301.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99323D"),
                d:
                  "M911.9,303.2c-1.4,1.4-3.3,0.6-4.9,1c-2.9-0.1-5.9-0.2-8.8-0.2c-0.4-0.2-0.5-0.3-0.4-0.5\n                        c0.1-0.2,0.2-0.3,0.3-0.3C902.6,303.1,907.3,303.2,911.9,303.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A5B5F"),
                d:
                  "M437.9,227.1c0.4-0.4,0.8-0.8,1.2-1.3c1.6,1.8,3.1,3.6,4.7,5.4C440.5,231.9,439.7,228.8,437.9,227.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C363A"),
                d:
                  "M1053.9,311.2c-2.9,1.7-6,0.3-9,0.9c-1.3,0-2.6-0.1-3.9-0.1c-0.3-0.2-0.4-0.4-0.3-0.6\n                        c0.1-0.2,0.2-0.3,0.3-0.3C1045.3,311.2,1049.6,311.2,1053.9,311.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("834041"),
                d:
                  "M858.2,299.3c-2.8,1.6-6.1,0.4-9,1.6c-0.7-0.3-1.5-0.6-2.2-0.8c-0.3-0.2-0.3-0.4-0.2-0.6\n                        c0.1-0.2,0.2-0.3,0.3-0.3C850.7,299.2,854.4,299.3,858.2,299.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M690.3,140.7c-0.2-0.6-0.3-1.1-0.5-1.7c2.6,0.1,5.3,0.2,7.9,0.3C695.4,140.8,692.9,141.1,690.3,140.7z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F41"),
                d:
                  "M846.9,299.1c0,0.3,0,0.6-0.1,0.9c-4.3-0.4-8.7,0.9-12.9-1C838.3,299.1,842.6,299.1,846.9,299.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86383C"),
                d:
                  "M1295,309.1c0,0.3,0,0.6-0.2,0.9c-3.9-0.4-8,1.1-11.8-0.9C1287.1,309.1,1291,309.1,1295,309.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1204.1,238.9c-4.1,0-8.3,0-12.4,0C1195.8,237.6,1200,237.2,1204.1,238.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64256"),
                d:
                  "M967.1,307.1c0,0.3,0,0.5,0.1,0.8c-2.4,1.9-4.7,1.9-7.1,0.1c-1.7-0.3-3.6,0.6-5-0.9\n                        c2.1-0.1,4.1-0.1,6.2-0.2C963.2,306.9,965.1,307,967.1,307.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3239"),
                d:
                  "M797.1,295.3c-3.9,1.8-8,0.5-12,0.6c-0.4-0.2-0.5-0.3-0.4-0.5c0.1-0.2,0.2-0.3,0.4-0.3\n                        C789.1,295.2,793.1,295.2,797.1,295.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B303D"),
                d:
                  "M942.8,306.1c-3.3,0-6.5-0.1-9.8-0.1c-0.4-0.2-0.5-0.4-0.4-0.6c0.1-0.2,0.2-0.3,0.4-0.3\n                        c4,0,7.9,0,11.9,0C944.9,307.1,943.8,306.4,942.8,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F52"),
                d:
                  "M729,291.1c0,0.3,0,0.5,0,0.8c-3.9-0.3-7.9,0.9-11.8-0.8c0.3-0.1,0.6-0.2,0.8-0.3\n                        C721.8,291,725.4,291,729,291.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3E49"),
                d:
                  "M1073,314.1c-2-0.4-4.3,0.7-6.1-1.1c4,0.1,8,0.1,12,0.2c0.3,0.6,0.2,1-0.4,1.3\n                        C1076.7,314.4,1074.9,314.9,1073,314.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3343"),
                d:
                  "M1006.9,310.2c-3.9-0.7-8.1,0.7-11.9-1.1c4,0,8,0,11.9,0c0.3,0.1,0.5,0.3,0.4,0.5\n                        c-0.1,0.2-0.2,0.3-0.3,0.3L1006.9,310.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94A58"),
                d:
                  "M933,305.1c0,0.3,0,0.6,0,0.8c-3.9-0.3-8,1-11.8-0.8c1.3-0.1,2.6-0.2,4-0.3\n                        C927.8,305,930.4,305,933,305.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A14A54"),
                d:
                  "M625.9,283.2c-0.8,1-1.9,0.8-3,0.9c-2.6-0.5-5.4,0.8-7.9-1C618.7,283.1,622.3,283.1,625.9,283.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99474E"),
                d:
                  "M578.1,279.2c-2.2,1.5-4.8,0.4-7.1,0.9c-1.3-0.4-2.8,0.3-3.8-1C570.8,279.2,574.4,279.2,578.1,279.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3646"),
                d:
                  "M1041,311.1c0,0.3,0,0.6,0,0.8c-3.7-0.2-7.4,0.8-11-0.9C1033.7,311.1,1037.3,311.1,1041,311.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B3C3D"),
                d:
                  "M825.2,297.3c-3.3,2-6.8,0.4-10.2,0.7c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3\n                        C818.4,297.2,821.8,297.2,825.2,297.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("955C59"),
                d:
                  "M942.8,306.1c0.7-0.3,1.4-0.6,2.1-0.9c2.7,0,5.3,0,8,0c-2,1.9-4.8-0.1-6.9,1.6\n                        C944.9,306.8,943.7,307,942.8,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("973D42"),
                d:
                  "M709.9,289.2c-1,1.3-2.6,0.7-3.9,1.1c-2.3-0.1-4.6-0.2-6.9-0.3c-0.3-0.2-0.5-0.3-0.4-0.5\n                        c0.1-0.2,0.2-0.3,0.3-0.3C702.6,289.2,706.3,289.2,709.9,289.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E4544"),
                d:
                  "M1007.1,310c-0.1-0.3-0.1-0.5-0.1-0.8c3.6,0,7.3,0,10.9,0C1014.4,310.9,1010.7,309.7,1007.1,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96373B"),
                d:
                  "M765,293.1c0.1,0.3,0.1,0.6,0.2,0.9c-3.3-0.1-6.7-0.1-10-0.2c-0.4-0.1-0.5-0.3-0.4-0.5\n                        c0.1-0.2,0.2-0.3,0.3-0.3C758.3,293.1,761.6,293.1,765,293.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("94343F"),
                d:
                  "M726.2,135.1c-0.7-0.3-1.4-0.7-2.1-1c1.6-0.1,3.2-0.2,4.8-0.3c1.7,0.4,3.6-0.6,5,1\n                        C731.4,135,728.8,135.1,726.2,135.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C14959"),
                d:
                  "M898,303.1c0,0.3,0,0.6,0,0.8c-3.3-0.3-6.7,1-9.9-0.9c1.3-0.1,2.7-0.1,4-0.2\n                        C894.1,303,896.1,303,898,303.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3E49"),
                d:
                  "M598.9,281.1c-0.3,0.3-0.7,0.6-1,1c-2.3,0-4.6-0.1-6.9-0.1c-0.6-0.3-1.3-0.6-1.9-0.9\n                        C592.4,281.1,595.7,281.1,598.9,281.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02E34"),
                d:
                  "M1079,313.9c0-0.3,0-0.5,0-0.8c3,0,6,0,9,0c0,0.3,0,0.5,0,0.8C1085,314.8,1082,314.8,1079,313.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("913A40"),
                d:
                  "M652.9,285.2c-0.6,0.3-1.3,0.6-1.9,1c-2.1,0.7-4.3,0.2-6.5,0.3c-0.6-0.3-0.8-0.7-0.4-1.3\n                        C647,285.2,649.9,285.2,652.9,285.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDB8B8"),
                d:
                  "M1160,250.9c0.3,0,0.7,0,1,0c0.6,0.4,0.8,1,0.9,1.7c0.1,0.7,0,1.3-0.2,2c-0.3,0.6-0.7,1.1-1.2,1.5\n                        c-0.4,0.2-0.8,0.2-1.3,0.1c-0.2-0.1-0.3-0.3-0.5-0.4C1159.1,254.2,1159.6,252.6,1160,250.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984244"),
                d:
                  "M666.8,141.9c1.4,0.3,3-0.4,4.1,1.1c-1.2,0.1-2.5,0.1-3.7,0.2c-1.3-0.5-3,0.2-4.1-0.9\n                        C664.4,142.1,665.6,142,666.8,141.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B6646A"),
                d:
                  "M520,275.1c-2.2-0.1-4.5-0.2-6.1-2.1c1.4,0,2.7,0.1,4.1,0.1c0.6,0.7,2.5-0.2,2,1.7L520,275.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B54450"),
                d:
                  "M785,295.1c0,0.3,0,0.5,0,0.8c-2.8-0.1-5.6,1-8.2-0.9C779.6,295.1,782.3,295.1,785,295.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B94352"),
                d:
                  "M755,293.2c0,0.2,0,0.5,0.1,0.7c-2.3-0.4-5,1.4-7-1.1C750.4,292.9,752.7,293,755,293.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2F3B"),
                d:
                  "M710.9,135.9c1.7,0.4,3.6-0.6,5,1c-2.3,0.1-4.7,0.1-7,0.2c0-0.3,0.1-0.6,0.1-1\n                        C709.7,136,710.3,136,710.9,135.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A4E4A"),
                d:
                  "M440,220.8c-0.1-0.7-0.1-1.5-0.9-1.9c0.3-1,1-1.7,1.9-2.1c0.4,0.5,0.8,1,1.3,1.4\n                        C441.5,219.2,440.7,220,440,220.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD8483"),
                d:
                  "M520,274.9c-0.7-0.6-1.3-1.2-2-1.7c2.3,0,4.4,0.4,6.3,1.7C522.9,274.9,521.4,274.9,520,274.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2E38"),
                d:
                  "M815,297.1c0,0.3,0,0.6,0,0.9c-2.4-0.3-4.9,0.8-7.1-1C810.3,297.1,812.6,297.1,815,297.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963743"),
                d:
                  "M1184,292.8c2.3-1.3,4.6-1.3,6.9,0C1188.6,292.8,1186.3,292.8,1184,292.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23B4C"),
                d:
                  "M699,289.2c0,0.3,0,0.5,0,0.8c-2.3-0.2-4.8,0.8-7-0.8C694.4,289.1,696.7,289.1,699,289.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A94352"),
                d:
                  "M644,285.2c0,0.2,0,0.5,0,0.7c-1.7,1-3.4,0.9-5,0c0-0.3,0-0.6-0.1-0.9\n                        C640.6,285.1,642.3,285.1,644,285.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C1B1B2"),
                d:
                  "M1249.1,343.1c0.7-0.7,1.3-1.4,2-2.1c0.7,0,1.4,0,2.1,0.1c-0.7,0.7-1.4,1.3-2.1,2\n                        C1250.4,343.6,1249.7,343.6,1249.1,343.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54759"),
                d:
                  "M926.9,124.8c0.1-0.2,0.1-0.5,0-0.7c3.7,0.3,7.5-1.1,11.1,0.9C934.3,124.9,930.6,124.8,926.9,124.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23F4C"),
                d:
                  "M815.1,126.1c0,0.2-0.1,0.5,0,0.7c-2.6,0-5.2,0.1-7.8,0.1C809.7,125.2,812.5,126.3,815.1,126.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B84553"),
                d:
                  "M958.9,126.8c0-0.2,0-0.5,0-0.7c2.6,0.2,5.4-0.9,7.9,0.9C964.2,126.9,961.6,126.8,958.9,126.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1936.1,342.9c-0.8,0.1-1.5,0.3-2.3,0.4c0.7,0.6,1.4,1.1,2.2,1.7c-2,1.4-4.4,1.2-6.6,1.5\n                        c-1.5,0.2-3.1-0.5-2-2.7c0.1-0.1,0.6-0.2,0.3-0.2c-9.9-1.9-19.4-5.5-29.2-7.7c-3.1-0.7-6.1-1.7-9.2-1.8\n                        c-0.5-0.1-1-0.2-1.5-0.3c-2-1.1-5.3-0.3-5.7-3.8c0,0,0.1-0.1,0.1-0.1c3.6,0.4,7.2,0.7,10.8,1.1c12.6,3.3,25.1,6.6,37.7,9.9\n                        C1932.5,341.5,1934.3,342.3,1936.1,342.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A23"),
                d:
                  "M1869.9,329c2.4,0,4.7,0,7.1,0c1.9,3.2,5.5,2.2,8.2,3.4c0.8,0.4,1.9-0.2,2.8,0.5l0,0\n                        c3.8,1.5,8,1.3,11.8,3.1c1.3,0.6,3.8-0.3,3.2,2.4c-0.4,1.9-1.8,3.6-3.9,3c-6.1-1.7-12.5-1-18.5-2.7c-1.8-0.5-3.5-0.6-5.3-0.7\n                        c-4.6,0.1-8.5-3.3-13.3-2.7c-1.6,0.2-1-1.5,0.1-2.3c1.6,0,3.3-0.1,4.9,0.1C1870.3,333.4,1871.5,332.3,1869.9,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881824"),
                d:
                  "M1862,333c-0.1,0.5-0.2,0.9-0.3,1.4c5-1.8,8.6,3.3,13.3,2.6c1,1.4,3.7-0.8,4,2\n                        c-8.3-0.2-16.1-3.3-24.2-4.5c-7.9-1.2-15.7-3.9-23.8-3.5c-0.6-1.3-3.3,0.6-3-2c0-0.3,0-0.7,0-1\n                        C1839.3,329.7,1850.7,331.3,1862,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881824"),
                d:
                  "M1827.1,328c-3.4,0-6.7,0-10.1,0c-5-2.6-11-1.4-16-4C1809.8,324.6,1818.5,326,1827.1,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4149"),
                d:
                  "M1809,322c1.6,0,3.2,0,4.8,0C1812.2,323.1,1810.5,323.5,1809,322L1809,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90212B"),
                d:
                  "M1888,333c-3.8,0.3-7.4-0.8-11-1.8c-2.8-0.8,0-1.4-0.1-2.1c1.6,0.9,3.3,1.1,5,1\n                        C1883.4,332.3,1886.4,331.3,1888,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1356,340.1c7.4,1.9,15,0.3,22.4,1.7c1.5,0.3,3.4-0.3,3.9,2c-2.6,2.3-0.6,5.4-1.5,8.1\n                        c-1.5,0.2-0.2-2.4-1.8-2.1c-0.8,0.1-1.6,0.5-1.6,1.5c0,3.6-2.1,3-4.2,2c-2.5-1.2-3.2-4-5.2-6.3c0.5,2.9,0,4.8-3,3.9\n                        c-1.7-0.5-2.8-0.2-3.9,0.9c-0.4,0.4-1.7,0.5-1.7,0.4c-2.7-5-5.7-1.7-8.7-0.5c-0.5,0.2-1.4,0.2-1.9,0c-1.7-0.9-1.7-1-2.5,0.8\n                        c-1.5-2.9-2.8-7.2-6.1-1.4c-0.6,1-1.6,0.8-2.5,0c-2.7-2.3-2.8-2.2-3.7,1.3c-2.2-1.4-3.8-4.8-7.1-2.4v0\n                        c-3.4-2.1-7.2-1.1-10.6-0.8c-2.8,0.2-5.1,0.3-7.2-2.3c0,1.6-2.2,2.8-5.2,3.2c0.6-0.8,1.1-1.5,1.6-2.1c0.3-0.5,1.2-0.8,0.5-1.6\n                        c-2.2,0.1-2.7,3.5-4.7,3c-4.6-1.3-9.5-1.9-13.3-5.3c0.4-1.9,5-4.5,6.7-3.2c4.1,3.1,8.1,0.4,12.1,0.5\n                        c6.5,0.1,13.2-1.7,19.2,2.5c1.1,4.2-2.2,2.1-3.5,2.6c1.8,0.2,3.9,0.4,5.3-1.6c3.6-3.5,8.2-2.6,12.5-2.6c1.6,0,3.2,0.5,4.3-0.5\n                        c-5.4,0.2-11.1,1.1-16.7-1.1c4-1.3,8-1.5,12-0.6c1.3-0.3,2.5-0.6,3.8-0.9C1347.8,340.4,1352,338.5,1356,340.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1826"),
                d:
                  "M1384,374c-3.5,1.4-2.7,4.5-3.1,7.3c-0.5,3.2,2.2,7.2-1.9,9.7c-0.6-0.5-0.9-1.1-1.1-1.9\n                        c-0.5-2.9,0.4-5.9-1-9.2c-3.3,2.2-4.6,7.7-9.8,4.9c-2.9-1.5-3.2-1.8-3.3-5.7c-1.7,2.2-3.7,2.8-6.1,2.5\n                        c-2.6-0.2-5.3-1.2-7.7,1.4c-1.3,1.4-3.1,0.6-3.9-1.3c0.1,1.5,0,3.2-2,2.9c-4.9-0.7-2-4.2-2.1-6.6c0-0.7,0.1-1.2,0-0.5\n                        c0,0-0.3,0-0.4,0c-0.7,0.2-1.4,0.3-2.2,0.2c-1-0.1-1.9,0.1-2.4,1c-0.2,0.4-0.5,0.7-0.7,1.1c-3,2.5-4.5,0.2-5.9-2\n                        c1.1-4.3,4.4-6,8.4-5.9c2.8,0,5.5,0.3,8.3,0.8c3.2,0.6,6.8,1.7,8.5-2.9c0.6-1.6,2.8-1.6,4.2-2.4c0.4-0.2,0.9-0.4,1.3-0.5\n                        c0.7-0.2,1.4-0.3,2.1-0.3c2.5-0.5,4.9-0.6,7.2,1c1.4,1,3.1,0.9,4.8,0.7c1.3-0.1,2.9-0.5,3.2,1.4c0.3,1.6-1.1,2.2-2.5,2.8\n                        c2-0.7,2.8-1.7,3.2-3.8c0.4-2.4,1.9-5.2,5-1.9C1384,369.3,1384,371.6,1384,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87172A"),
                d:
                  "M1340,340c-3.6,0-7.2,0-10.8,0c0,0.3,0,0.7,0,1c6.1,0,12.2,0,18.2,0c-1.1,1.5-3.3,1.4-2.7,3.7\n                        c-2.1-0.6-4.1-1.7-6.2-1.6c-3.5,0.2-7,1.2-10.6,1.9c0,0-0.4-0.2-0.4-0.2c-0.4-0.3-0.6-0.7-1.1-0.8c0,0-0.5,0-0.5,0\n                        c-5.6-1.7-11.5-2.2-17.1-1.3c-3,0.5-6.7-1-9.3,1.8c-0.5,0.5-1.5,0.8-1.7,0.1c-2.4-5.4-6.5-0.3-9.6-1.5c-0.1,0.3-0.1,0.6-0.2,1\n                        c-2.1,1.5-2.7-1.1-3.9-1.6c-2.3,0.9,1.9,2.9-0.6,3.3c-1.3,0.2-3.2,0-2.4-2.9c0.3-1.3-2.5-1.7-3.9-0.9c-3.6,2-4.7,0.3-5.1-3\n                        c1.1-1.2,2.5-1.6,4-1.5c6.3,0.3,12.7-1.2,18.9,0.5l0,0c1.7,0.8,3.5,0.7,5.2,0c0.6,0,1.1,0,1.7,0c7.2,0.9,14.5,0.2,21.8,0.4\n                        c2.1,0.1,4.3-0.4,6.4,0.4c1.7,0,3.3,0.1,5,0.1C1336.6,339.6,1338.6,338.5,1340,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5A64"),
                d:
                  "M1294.9,338.1c-7.6,1.7-15.3,0.3-22.9,1c-4.4-0.1-8.7-0.3-13,0.9c-0.6-0.1-1.2-0.3-1.8-0.4\n                        c2.6-1.6,3.9-4.3,5.8-6.5c1.1-1.3,2.5-2.3,4.3-2c10.5,1.9,21.1-0.4,31.6,0.6c2.7,0.2,5.7-0.7,8.1,1.4c0.2,1.5,2.6,1.6,2.5,3.5\n                        C1304.5,335.8,1299.5,335,1294.9,338.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92192C"),
                d:
                  "M1339,362c1.3,0,2.7,0,4,0c1.2,1.4,2.6,2.6,3.2,4.3c-0.5,1.4-1.6,1.3-2.8,1.2\n                        c-10.3-1.1-20.5-3.8-31-3.4c-3.2,0.1-6.3-0.1-9.1-1.9c-0.4-0.3-0.5-1.1-0.5-1.1c-0.7,3.2-2.7,2.4-4.5,1.4\n                        c-2.6-1.4-5.4-1.4-8.2-1.4c-0.9,0-1.9-0.1-2.8-0.4c-3.6-0.6-7-3.1-11-1.4c-3.1,1.3-4.5-0.5-5.4-3.1c-0.2-0.4-0.3-0.9-0.1-1.4\n                        c0.3-0.4,0.7-0.7,1.2-0.8c1.5-0.2,3-0.4,4.6,0c2.6,0.7,5.3,0.4,8,0.3c11.6,1.4,23.4,2.1,35,3.8c2.9,0.4,6.1-0.7,8.6,1.7\n                        c0.4,0.8,1.2,1,2,1C1332.8,363.3,1336.2,360.3,1339,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751520"),
                d:
                  "M1328,360c-12.3-0.6-24.4-2.1-36.6-3.7c-2.4-0.3-4.9-0.2-7.4-0.3c-2.5-1.3-5.4,0.3-8-1\n                        c-1.7,0-3.3,0-5,0c-4.7,1-9.2-1.2-13.9-0.8c-2.8-0.9-5.9-0.4-8.7-1.6c-0.5-0.3-0.7-0.7-0.7-1.2c1.7-3,5.3-0.1,7.3-2.3\n                        c5.6,2.9,11.9,1.5,17.8,3.2c1.6,0.5,3.9-1.7,6.2-1.2c5.6-0.2,10.7,1.5,15.6,4c0.3,0.1,0.7,0.1,1,0c9.3-1.4,18.2,2.6,27.5,2.1\n                        c1.9-0.1,3.9,0.6,5.8,0.9c0.6,0.1,1.5,0.1,1.2,1C1329.8,359.9,1328.8,359.9,1328,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92182D"),
                d:
                  "M1346,366c-2.6-0.1-3.1-1.8-3-4c6.8,0.8,13.7,1.3,20.5,2.4c4.8,0.7,9.4,0.8,14.2,0\n                        c2.2-0.4,6-2.5,6.3,2.6c-2.5-1.3-4.1,0.1-4.1,2.2c0.1,2.3-1,3.5-2.6,3.5c-1.6,0-2.8,3.3-3.9,1.1c-1-2,2.1-1.2,3.1-2.1\n                        c0.5-0.4,0.8-0.9,1.2-2.1c-5.5,3.4-9.4-3.9-14.7-1.5c-0.7-0.5-1.3-1.7-2,0c-0.3,0-0.7,0-1,0c-3.5,0.4-7-1.2-10.6,0.3\n                        C1347.7,369.1,1346.8,367.2,1346,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1339,362c-2.9-1.4-6.4,3.2-9-1C1333,361.4,1336.2,360,1339,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1319,351c2.5-2,5.3-0.6,8-1v0C1324.5,352,1321.7,350.6,1319,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1318.5,351.7c-0.4,0-1.1,0.1-1.6,0c-0.5-0.2-0.7-0.8-0.2-1.1c0.3-0.2,1-0.1,1.3,0.1\n                        C1318.3,350.7,1319.3,350.5,1318.5,351.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M1379,389c0,0.7,0,1.3,0,2c0.2,2.3-4.5,1-3,3.9c1.3,2.5,3.6,2.6,6,1.1c1.2,6.2,0.1,5.6-5.6,5.9\n                        c-4.1,0.2-9.1-0.2-13.1,2.2c-1.2,0.7-2.8,1.4-3.6,0.2c-3.1-4.6-7.7-1.7-11.3-2.7c-7.8-2.1-15.9,1.6-23.4-2.1\n                        c-3.3-1.6-7.6,0.6-10.5-2.8c-0.5-0.5-2.1,0.6-2.3,1.9c-0.5,2.4-1.4,4.8-1.1,7.3c-2,0.8-3.9,2.7-6.1,0.4\n                        c-0.6-0.6-1.2-0.6-2.1-0.2c-5.8,2-7.9,0.4-7.8-6.1c-1.3,1.8-2,3.4-4,4.3c-2.8,1.4-4.2,1.5-5.8-1.4c-0.8-1.5-2.3-5.2-4.4,1.8\n                        c-0.4-10.7-6.3-4.7-9.8-5.7c-0.5-0.4-0.4-0.9-0.3-1.5c-0.3,0.6,0,1,0.3,1.5c0,2.5-3.1,0.6-3.6,2.5c-0.1,0.5-1.2,0.5-1.7-0.1\n                        c-0.6-0.6-0.3-1.3,0.2-1.7c2.2-1.9,2.1-5.2,5-6.6c-1.8-2.1-5.3,0.7-6.2-2.9c-0.2-0.8-2.4,1.1-3,1.9c-1.3,1.5,0.8,0.6,1.2,1\n                        c0.9,1-0.1,1.5-0.5,2.1c-0.5,0.8-1.2,2.1-2.2,1.1c-1.3-1.2-3.4-1-4.3-3.1c-1.8-4.1-5.7-3.2-9.1-3.2c-0.4,0-1.2,0.6-1.2,0.7\n                        c1.1,2.3-0.3,2.4-1.9,2.2c-0.9-0.1-1.6-0.6-1.2-1.7c0.6-1.3,1-3.4,2.8-2.9c3,0.9,4-1.5,6.2-2.3c-1.4-1.6-3.8,1.2-4.2-1.2\n                        c-0.4-2.4,2.3-1.9,3.5-2.6c1.2-0.7,3,0.2,4.1-1.2c5.4-3.1,11.5-2.7,17.4-3.4c2.1-0.3,4.3-0.3,6.5-0.2c4.9,2.8,5.3,4.3,1.7,8.2\n                        c-0.7,0.8,0,1.1-0.2,1.6c-0.2,0.6,0.1,0.9,0.6,0.4c2.5-2.6,5.7-0.5,8.5-0.9c3-0.4,5.1-3.8,8.2-2.5c2.7,1.2,3.9,4.3,6.4,5.9\n                        c1.6,1.1,3.1,1.1,4.7,0.8c2.4-0.4,4.7-1.4,7.8-1.3c-1.4-0.4-2-0.3-2.6-0.2c-1.3,0.1-3.2,1.5-3.5-1c-0.2-2.3,1.3-4,3.6-3.6\n                        c2.8,0.5,5.5,1.3,8.3,1.4c1.1,0,1.9,0.7,1.5,2c-0.4,1,0.3,1.3,0.9,1c2.6-1.2,5.9,0,8-1.5c2.2-1.5,3.6-0.9,5.4,0\n                        c1.2,0.6,2.5,1.1,2.5,2.8c0,2-1.3,2.7-2.6,2.9c0.6-0.1,1.9,0.5,2.7-0.7c0.4-0.5,0.7-1.1,1.2-1.5c1.9-1.5,1.5,3.5,3.6,1.3\n                        c2-2,2.9-0.4,3.7,1.1c1.3,2,2.2,1.9,3.7,0c2.6-3.3,8.1-3.3,11.6-0.1c0.3,0.3,0.5,0.8,1.1,0.9c-0.5-0.2-0.8-0.5-0.9-1.1\n                        c1.3-1.8,3.3-1.9,5.2-1.9c0.3,0.2,0.5,0.3,0.8,0.2c-0.3-0.2-0.5-0.5-0.3-0.9c0.7-1.6,2.1-1.9,3.6-2.3c0.7-0.2,3.1,2.2,2.1-1.2\n                        c-0.2-0.8,0.2-2,1.5-2.1C1379.3,386,1377.8,387.9,1379,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF636D"),
                d:
                  "M1356,340.1c-4.1-0.3-8.2,0.5-12.2-1.1C1347.9,339.5,1352.1,337.7,1356,340.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D06A74"),
                d:
                  "M1389,330c5.8,0.5,11.3-1.4,17.2-1.1c9.3,0.4,18.6,0,27.9,0.2c4.8,0.1,9.7,0.3,14.3,1.8\n                        c1.9,0.7,3.8-2.7,5.6,0.1c3.4,0.8,6.8-0.4,10.2-0.3c2.4,0.1,4.9,0.7,7,2c1.7,3.3,0.3,4.7-2.9,4.6c-4.5,0-8.9-1.4-13.3-2.4\n                        c-4.4-1.2-9.1,1.3-13.4-1.3c-0.7-0.4-1.2-0.1-1.7,0.5c-2,2.7-4.8,1.9-7.3,1.4c-4.5-1-8.9-0.9-13.3-0.2c-1.6,0.3-2.8,0.5-4-0.9\n                        c-2.7-3.3-5.5-1-6.2,1.2c-1.4,4.2-3.7,3.5-6.6,2.6c-1.1-0.3-2.3-0.2-3.4-0.3v0c-3.1,2.1-6.9,0.2-10,2\n                        C1389,336.7,1389,333.3,1389,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921927"),
                d:
                  "M1420,359c-1.8,1.8-4,0.7-6,1C1415.8,358.2,1418,359.3,1420,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD5660"),
                d:
                  "M1617,360c-2.4,1.7-5.6,0.3-8,2c-1.7,0-3.3,0-5,0c-0.1-1-0.2-2.1-1.4-2.3c-1.2-0.3-3,2.8-3.6-0.7\n                        c-0.3-2.3,0.5-3.8,2.8-4.5c0.2-0.1,0.2-0.6,0.5-1.3c-3.2,0-6.3-0.1-9.4,0c-3.6,0.1-6-0.8-4.5-5c0.3-0.9,0.4-2.1-0.3-2.2\n                        c-4.7-0.2-4.1-4.1-5.1-6.9c1.8-2.6,4.6-2.1,7.1-2.5c5.6-0.8,11.2-1.4,16.8-0.7c3.1,2.2,2.9,5.1-0.6,6.9\n                        c-1.6,0.8-3.4,0.8-4.9,1.4c1.6-0.2,3.4-1.5,5.1-0.5c2.2,1.3,0.5,3.3,0.5,5c-0.1,2.2,1,3.4,3.3,3.5c1.6,0.1,3.5-0.5,4.2,1.8\n                        c-0.1,0.5-0.3,1.1,0.6,1c0.5,0.2,0.9,0.5,1.4,0.5c2.2,0,4.4,0.7,4.5,2.9C1621,360.6,1618,358.6,1617,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D05762"),
                d:
                  "M1499,329c-0.2-0.5-0.3-1.3-0.5-1.3c-6.8-1.1-12.9-4.9-20.2-4c-5.1,0.6-10.3,0.7-15.3-0.6\n                        c0.3-2.6,2.5-2.2,4.1-2.3c2.8-0.2,5.5,0,8.3-0.1c6.5-0.9,13.1-1,19.6-1c2.6,0.1,5.2,0.1,7.8,0c0.6-0.1,1.2-0.1,1.8,0\n                        c6.7,0.2,13.5-0.2,20.2,0.1c2.4,0.4,4.5,1.7,6.7,2.5c0.5,0.2,0.8,0.5,1.2,0.9c1.2,2.4,2.8,2.2,4.9,1c2-1.1,4.1-1.4,3.8,2\n                        c-0.2,2,1.2,1.7,2.2,1.7c3.8,0,7.7-0.4,9.6,4.2c0.4,0.9,1.6,1,2.6,1.1c0.7,0,1.4,0.4,2,0.2c3.5-1.2-0.9,4.6,3.2,3.5\n                        c2.7-0.7,3.8,2.3,5,4.3c-2.3,0-4.7,0-7,0c-0.7-0.7-1.3-0.9-2,0c-1.9,2.2-5.1-0.3-7,2c-0.7,0-1.3,0-2,0\n                        c-2.7-6.3-7.5-7.5-14.1-8.2c-5-0.6-10.5-1.9-15.6-3.6c-3.8-1.2-7.9-0.8-11.5-2.8c-2-1.1-3.5,2.3-5.9,1.7\n                        C1500.2,329.9,1499.5,329.6,1499,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE525C"),
                d:
                  "M1532,323c-2.4,0.4-4.2-0.7-6-2c-1.2-2.6,1-2.8,2.5-3.6c0.7-0.2,1.4-0.3,2.2-0.2\n                        c2.5,0.4,5.1-0.5,7.5,0.5c4.6,1,9.2,1.9,13.9,0.5c1.5-0.5,3-0.3,4.5-0.4c4.8-0.4,8.4,2.7,5.4,8.5c5.3,0.3,9.3,3.2,12.7,6.7\n                        c1.3,1.4,3.2,3.4,0.4,5.3c0.6,0.3,1.5-0.1,2,0.6c0,0.3,0,0.7,0,1c-3.7,0.3-7.3,0.6-11,1c-2.9-1-4.6-5.2-9.4-2.3\n                        c0.6-2,2.7-2.1,2.1-3.5c-0.6-1.5-1.9-1.2-2.9-0.9c-1.5,0.4-3.3,0.2-3.6-0.8c-1.8-6.2-6.8-4-10.8-4.4c-0.9-0.1-1.9-0.2-3.1-0.4\n                        c0.4-0.8,0.5-1.2,0.8-1.5c0.7-0.8,2.4-1.4,1-2.7c-0.9-0.8-1.6,0.3-2.4,0.9C1533.5,328.4,1533.1,328.2,1532,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE525C"),
                d:
                  "M1557,341c-0.7-0.6-1.1-1.3-0.1-1.7c1.4-0.5,1.9,0.5,2,1.7C1558.3,341,1557.7,341,1557,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB4C58"),
                d:
                  "M1577,339c-1.7-0.3-3.6,0.5-5.1-0.4c-0.5-3.3,3.8,1.1,3.3-2.3c-0.3-2.1-1.9-2.9-3.3-4\n                        c-3.3-2.6-6.2-5.9-11.1-3.7c-0.3,0.1-1,0-1.3-0.3c-0.5-0.5-0.4-1.4,0.1-1.8c2.5-1.7,3.6-4.3,1.6-6.3c-2.6-2.4-6.3-1.5-9.5-0.6\n                        c-1.3,0.3-2.2,2.1-3.8,2.2c-2.7,0.2-0.6-2.4-1.1-2.4c-2.1,0-4.2,0.5-6.3,0.6c-1.1,0-3.5,1.1-2.5-1.9c2-2,4.7-1.5,7.1-1.6\n                        c7.3-0.3,14.5-1.6,21.8-0.3c1.3,0.2,1.1,3.3,3.8,1.3c2.1-1.5,11.3,3.1,12.5,5.6c0.4,0.8-1,6.5-2.2,8c2.4-0.3,4.5-1.7,6.4-0.1\n                        c2.1,1.8,2.6,4.5,2.7,7.1c-2.4-0.3-4.7,0.4-7,1C1581,339,1579,339,1577,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D16670"),
                d:
                  "M1499,329c0.7,0,1.3,0,2,0c6,2.2,12,4.8,18.5,5.1c1.8,0.1,3.6-0.1,4.7,2.6c0.9,2.2,4.1,0.7,6.2,1\n                        c3.7,0.5,7.5,0.6,7.7,5.8c0,0.2-0.1,0.3-0.1,0.5c-4.5,1.8-9.5-0.1-14,2c-1.7,0-3.3,0-5,0c-1-3.7-4.7-3.7-7.2-4\n                        c-6.7-0.8-12.9-4.5-19.9-3.9c-1,0.1-2.2-0.1-2.8-0.8c-4-4.1-8.8-3.3-13.5-2.4c-2.2,0.4-3.4-0.4-4.6-2\n                        c-5.1-0.5-10.1-1.6-15.2-0.2c-1.2,0.3-1.7-0.7-1.8-1.8c1.4-2.1,3.5-2,5.7-2C1472.8,329,1485.9,329,1499,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15E68"),
                d:
                  "M1538,344c-1.6-4.3-4.9-5.1-9.1-5.1c-2,0-6.4,2.7-5.9-3c0-0.6-1.4-0.3-2.2-0.3\n                        c-7.1-0.7-14.3-1.2-19.9-6.5c0.9-0.2,2.1,0.5,2.4-1c0.5-2.5,2.1-2.2,3.8-1.4c6.3,2.9,13.3,2.8,19.7,4.7\n                        c5.9,1.7,12.3,1.6,17.8,4.3c2.8,1.4,3.4,4.3,3.2,7.3C1544.6,342.4,1541.4,344.1,1538,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D16D77"),
                d:
                  "M1471,333c3,2,6.1,0,9.2,0c3.2,0,6.3-0.4,8.5,2.6c1,1.4,2.5,1.4,4.1,1.4c8.3-0.1,15.9,3.4,23.9,5.1\n                        c1.1,0.2,2,1.1,3,1.7c1.6,1.1-0.6,1.4-0.6,2.2c-2.3,0.3-4.7,0.7-7,1c-7.5,0.4-14.6-1.8-21-5.1c-7.4-3.7-14.8-3.6-22.6-3\n                        c-4.8,0.4-9.4-0.9-13.4-3.9c4-0.4,7.8-0.6,11.7,1.2C1467.5,336.6,1471.9,337.2,1471,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6F76"),
                d:
                  "M1539,364c-1.6,0.1-2.9-1.5-4.6-0.6C1536.4,361.4,1536.4,361.4,1539,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1505.1,362.9c0.6,0.6,1.1,1,1.3,1.5c0.1,0.2-0.5,0.9-0.8,0.9c-0.7,0.1-1.2-0.4-1.3-1.1\n                        C1504.3,364,1504.7,363.6,1505.1,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434E"),
                d:
                  "M1782,361c-1.4-0.1-2.7,0.4-4,1c-2-1.6-3.9-2.9-6.7-1c-2.4,1.6-4.7,0-6.9-1.1\n                        c-3.2-1.6-6.3-3.4-8.7,1.2c-0.6,1.2-2.2,1.9-2.7,0.7c-1.8-4.2-3.8-0.2-5.7-0.5c-0.6-0.8-1.5-1.1-2.3-1.9\n                        c0.6,0.9,1.7,0.9,2.1,1.8c-1.2,4-4.2,2.8-6.9,2.3c-6.1-1.2-11.8-0.9-16,4.5c-1.7,2.2-3.6,3.3-6.4,2.5\n                        c-1.3-0.3-2.6,0.1-3.9,0.4c-1,0.4-2.8-1.6-3,1c-1.5-5-5,1.2-6.9-1.3c-2.7,4.1-6.4,0.7-8-0.3c-6.3-3.6-12.6-1.5-18.8-1\n                        c-3.2,0.2-6.1-2.7-9.3-0.4c-3.9,0.4-7.2-1.8-10.9-2.6c-1.3-0.3-2.3-1.9-1.9-3.2c0.9-2.9-0.3-5-2.5-6.7\n                        c2.1-2.3,4.9-1.6,7.1-2.7c8.6-2.1,17.4-2.4,26.1-3.1c6.1-0.4,12.1-1.2,18.3-1.4c2.2-0.1,4.3,0.1,6.2,1\n                        c0.2,0.2,0.4,0.4,0.6,0.6c1.1,3,4.6,4.1,7.3,2.5c2.2-1.4,2.2-1.4,5.6-1.3c0.1,1.6-2.6,4.2,1.2,4.7c0.7,0.1,2.2,0.3,2-0.6\n                        c-1.6-6.1,3.2-2.9,5-3.2c4.9-0.9,10,0.7,15-1c0.9-0.3,2.3,0.7,3.5,1.1c1.3-2-1.4-1.8-1.6-3.2c3.5,0.3,6.4,3.1,10.1,2.1\n                        c0.8,1.6,1.7-0.2,2.5,0.6c0.7,0,0-0.9,0.2-0.3c0,0.1-0.1,0.2-0.4,0.2c-0.8-0.1-1.6,0.2-2.2-0.4c3.9-1.6,3.9-1.6,7.3,1.8\n                        c0.7,0.7,1.1-0.1,1.6-0.2c2.3-0.6,4.7-1.1,7.1-1.7c0.9,1.8,1,3.9,4.4,3.6C1781.8,355.4,1782.2,358.6,1782,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34752"),
                d:
                  "M1659,355c-1.3,1.8-3.4,0.5-5.6,1.5c2.9,1,6.6,1.5,3,5.6c-1.1,1.2-0.1,3.7,1.9,3.7\n                        c3.7,0,6.5,2.2,9.7,3.2c-0.7,1.4-1.5,2.3-3.3,1.2c-2.6-1.5-1.3,1-1.7,1.8c-2.2-3-5.9-2.9-9.1,1.4c2.4-6.6-3.1-6.6-5.5-8\n                        c-3.4-2-7.1-6.8-12-2.3c-0.2,0.2-0.8,0.4-0.9,0.3c-4.3-4.4-10.3,1.9-14.5-2.4v0c0-0.3,0-0.7,0-1c3.1-2.9,7-3.2,10.9-3.4\n                        c2.4-0.1,4.8-0.8,7.3-0.9c4.3,0,8.5-0.8,12.8-1.6C1654.4,353.6,1656.9,353,1659,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5B"),
                d:
                  "M1639,357c-6,1-12.1,1.3-18,3c-1.3,0-2.7,0-4,0c0.5-1.5,3.1-0.4,2.9-1.7c-0.2-1.2-1.4-2.3-3.4-1\n                        c-1.8,1.1-1.1-2-2.5-2.3c-0.1-2.2-1.4-1.3-2.8-1.3c-4.9,0-6.4-2.4-4.7-7.2c0.7-1.9-0.2-2.6-1.8-2.4c-1.9,0.2-3.7,0.8-5.9,2.7\n                        c0.8-3.5,2.8-3.4,4.6-3.9c2.9-0.8,5.3-2.2,4.5-5.9c0-1.8,1.5-2.1,2.7-2.2c5.4-0.6,10.7-1.8,16.2-0.9c2.6,1.1,5.3-0.4,7.9,0\n                        c1.8,0.3,4.3-0.7,4.6,2.5c3.5,5.2,2.5,11.1,2.9,16.8c-0.2,0.2-0.5,0.4-0.7,0.6C1640.2,354.5,1637.7,354.3,1639,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34752"),
                d:
                  "M1621,361c-0.6,1-1.1,2.1-2.5,1.6c-0.3-0.1-0.7-1-0.6-1.1C1618.7,360.6,1619.9,361.2,1621,361\n                        L1621,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851724"),
                d:
                  "M1999,469c-0.2,1.4-0.3,2.8-0.5,4.2C1997.1,471.6,1995.6,470,1999,469L1999,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62F3D"),
                d:
                  "M1316,576c2.7-0.7,5.3-1.3,8-2c1.9,0.1,2.9,1.1,3,3l0,0c-1,1-2-1-3,0c-2.7,0-5.3,0-8,0\n                        c-0.3-0.2-0.5-0.4-0.3-0.7C1315.8,576.1,1315.9,576,1316,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1316,576c0,0.3,0,0.7,0,1c-0.8,0-1.6,0.2-2,1c-2.6,2.1-5.9,2.2-9,3c-0.3,0-0.7,0-1,0\n                        c-0.8,1.5-2.1,2.1-3.8,2.1c-0.8,0-1.7,0-2.4-0.4c-6.4-2.9-11.7-3.3-18.3-1.4c-0.5,0.1-0.9,0-1.4-0.1c-2-3.2-5.4-2.5-8.4-2.9\n                        c-3.1-0.4-6.4,0.3-9.1-1.9c-0.5-0.4-1.3-0.5-1.9-0.3c-10.5,3.1-20.1-2.8-30.2-2.9c-8.1-0.1-16.2-1.4-24.3-0.9\n                        c-2.7,0.2-5-0.3-7.6-1.4c-4.6-2-9.7-1.4-14.6-1.4c-2.1,0-4.3,0.7-6.3-0.5c-7.3-4.2-15.4-3.8-23.4-4.9\n                        c-8.1-1.1-16.1-0.2-24.1-0.5c-2.7-0.1-6-0.4-7.4-3.8c-0.7-1.8-2.3-1.5-3.8-1.2c-1.5,0.3-3.3,0.8-4.1-0.8\n                        c-1-2.1,1.2-2.7,2.3-3.8c1.5-1,3.1-1.6,4.8-2.1c9-2.3,17.6-5.6,26.2-9c3.4-1.4,7.1-1.3,10.5-2.8c5.1-0.6,9.3-4.5,14.8-3.8\n                        c0.8,0.2,1.5,0.6,2.3,0.9c5.7,2.1,7.6,7.2,4.7,12.5c-0.8,1.6-2.2,1.9-3.8,1.8c-1.8-0.1-3.6-0.5-6.2-1c6,3.2,6.1,3.1,10.5-1.2\n                        c1.7-1.7,2-1.6,5.3,0.9c1.4-0.9,1.6-2.5,2-3.9c0.4-1.2,0.3-3,2.3-2.4c1.7,0.4,2.4,1.9,2,3.5c-0.5,2.3-1.1,4.5-0.1,6.6\n                        c2.1-1.6,3.7-4.7,7.3-3.7c1.7,0.5,2,2,2,3.6c0,3-2.9,2.1-4.3,3.1c4.9,2.8,10,4.8,15.5,2.3c-0.8-1.3-3-0.8-4.4-1.7\n                        c-0.8-0.5-1.9-1-1.7-2.2c0.2-1.1,1.1-1.6,2.2-1.7c1.3-0.2,2.6-0.5,3.8-1c4.9-2.1,6.7-0.9,6.3,4.6c-0.1,1-0.3,2-0.4,3\n                        c-0.1,1.2,0.2,2,1.6,1.7c4.2-1.1,8.4-2.1,12.4-3.8c4.5-2,5.8-1.6,7.1,2.9c0.5,1.8,0.7,2.6,3,1.5c2.8-1.3,5.9-1.2,7.1,2.9\n                        c1.1,3.8,3.6,1.6,5.7,1c5-1.4,5.3-1.3,6.3,4c-0.1,0.7,1.1-0.3,0.5,0c-0.3,0.1-0.2-0.1-0.2-0.5c-0.1-2.1,0.8-3.4,2.9-2.8\n                        c3.3,1,6.6,0.5,9.9,0.8c1.2,0.1,2.4,0.1,3.3,0.9c4,3.7,9,2.9,13.6,2.4c2.3-0.2,4.4-0.6,6.7,0.3c3.1,1.2,8.7,1.2,12.3,0.5\n                        c1.7-0.3,3.3-0.3,4.7,1c0.6,0.1,1.6-0.1,1.8,0.3c0.6,1-0.6,0.6-1,0.9c-0.5,0.4-1.4,0.9-1,1.3\n                        C1314.2,575.9,1315.3,575.9,1316,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62F3D"),
                d:
                  "M1305,581c3-1,5.7-2.8,9-3c1.3,0.2,1.9,0.7,0.5,1.6c-1,0.7-2.7,0-3.5,1.4C1309,581,1307,581,1305,581z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1324,577c1-1.6,2-0.3,3,0c-0.1,1-0.3,1.9-1.5,1.9C1324.1,579,1324.9,577.3,1324,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1347,581.5c-0.3,0.3-0.5,0.9-0.8,1c-0.6,0.2-0.9-0.4-0.8-0.9c0.1-0.4,0.6-0.6,1-1\n                        C1346.5,580.9,1346.7,581.2,1347,581.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62F3D"),
                d:
                  "M1300,582c1.4,0.1,2.7-0.3,4-1c1.3,1.7-1.3,2.5-1,4c-3.7,0.5-7.5-1.1-11,1c-0.4,0.4-0.9,0.5-1.4,0.5\n                        c-3.9,0.4-7.7-0.5-11.6-0.2c-29.6-2.6-59-6.9-88.6-9.3c-3.8-0.9-7.8-0.6-11.5-2c-2.8-0.8-5.6-1.4-8.5-1.7\n                        c-1.8-0.2-3.6-0.4-4-2.7c0.4-2.9,2.6-2.7,4.6-2.4c7.5,1.2,15.1,2.1,22.6,3c3.3,0.4,6.5,0.9,9.8,0.8c5.4-0.1,10.8,0.2,16.2,1.5\n                        c7.5,1.9,15.3,2.6,23.1,2.9c4.7,0.2,9.1,1.9,13.8,1.8c7.7-0.1,14.9,2.9,22.6,2.6c6.2,0.4,12.4,2,18.7,1.5\n                        C1298.5,582.4,1299.3,582.6,1300,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892837"),
                d:
                  "M1316,590c7.6-1.5,14.8,2.3,22.3,1.7c1.3-0.1,3.5-0.2,3.7,2.2c0,0,0,0,0,0c-3,1.4-6,0.9-9,0l0,0\n                        c-5.6-1.4-11.5-1.2-17-3l0,0c-0.3-0.2-0.4-0.4-0.3-0.7C1315.8,590.1,1315.9,590,1316,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821727"),
                d:
                  "M1291,586c0.3,0,0.6,0,0.9,0c2.5,1.2,5.6,0.3,8,2c-3.1,0.6-6.1,0.3-9-1c-0.3-0.2-0.4-0.5-0.3-0.7\n                        C1290.8,586.1,1290.9,586,1291,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821727"),
                d:
                  "M1310,590c-2.9-1-6.5,1.1-9-2C1304.1,588.2,1307.5,587.1,1310,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1316,590c0,0.3,0,0.7,0,1c-2-0.3-4.3,0.8-6-1C1312,590,1314,590,1316,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1333,594c3,0,6,0,9,0c1,0.7,2,1.3,3,2c-3.3,0.8-6.6-0.7-10,0.2C1333.9,596.5,1333,595.3,1333,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1191,605c-4.6,0-9.3,0-14,0c0.5-1.8,2.3-0.3,3.3-2.3c-5.2,2-10,0.4-15,1.1c-4.2,0.6-8.9,0-13.3-0.3\n                        c-6-0.4-12,0.2-17.9-0.5c-19.9-2.6-39.9-1.9-59.9-1.9c-2.3,0-3.4-1.8-5.4-2.2c-0.8-0.2-1.8-0.8-2.1,0.3\n                        c-0.1,0.5,0.7,1.3,1.2,1.9c-4,2.3-8.3,1.5-12.5,0.7c-1.9-2.7-4.4-3.6-7.7-3.4c-2.3,0.1-4.8,0.2-6-2.5c3-3,6.9-0.7,10.3-1.8\n                        c-2.8-1.2-5.5,0.3-8.2,0.5c-4.2,0.2-8.1,0.1-11.8-2.4c-1.4-0.9,0,0.9-0.6,1.2c-0.1,0.5-0.4,0.8-0.8,1.1\n                        c-1.6,0.7-2.8,0.3-4.1-0.8c-1.2-0.9-2.7-1.4-4.2-1.2c-1.5,0.2-3.4,2-3.8-0.9c-0.3-2.1,0.6-4,2.9-4.6c2.1-0.6,4.2-1.3,6.4-1\n                        c2.7,0.4,5.3-0.2,7.8-0.6c0.8,0.1,0.2-0.7,0.2,0c0,0.1-0.2,0.1-0.5,0.1c-0.8-0.1-1.8,0.3-2.2-0.7c-0.4-1,0.5-1.5,1.2-1.8\n                        c4.4-2,8.9-1.3,13.4-0.9c0.9-1.9-1.3-2.9-1.2-4.6c2.5-3.1,6.6-3,9.8-4.6c4.1,0.4,7.2-3.3,11.4-2.7c6.8,0.3,13-1.7,19.2-4.2\n                        c1,2.5,1.4,5.4,5.5,4.3c1.8-0.5,2.8,2,4,3.2c1.7-0.6,1.7-4,4.1-2.8c2.8,1.4,4.6,3.9,4.7,8c1-5.7,1.5-6,5.5-4.8\n                        c1.6,0.5,3.6-1.1,4.8-0.2c4.5,3.6,9.7,1.9,14.7,2.5c1.9,0.2,2,0.7,1.7,3.1c0,0.1-0.6,0.2-0.6,0.2c0.4,0.4,0.9,0.3,1.3,0\n                        c1.4-1,3-1.2,4.7-1.3c2.9-0.1,4.6,0.6,4.2,3.3c-0.8-2.7,0.3-5,3.5-4.9c2.2,0,5.9-2.3,6.4,2.8c0.3,3.2,2,5.5,5.7,4.3\n                        c-0.3-0.5-1.2-0.5-1.9-0.9c-0.7-0.4-1.6-0.8-1.2-1.8c0.3-0.9,1.3-1.1,2.1-1c2.8,0.2,5.3,0.8,5.8,4.3c1.3-1.2,1.3-5.6,4.6-2\n                        c1.9-3.2,5-1.4,7.5-1.5c3.6-0.1,4.5,1.9,3.3,5.6c2.4-4.6,5.2-2.9,7.9-0.9c1.4,1,2.8,1.7,4.5,2c3.3,0.7,5.3,2,1.9,5.1\n                        c-1.5,1.4,0.9,1.8,0.5,2.9c0.5,0.2,1.1,0.4,1.4,0c1.2-1.1-0.8-1.3-0.6-1.7c1.5-4.2-0.7-6.5-3.8-8.6c-0.8-0.6-1.2-2.2-0.2-3.1\n                        c0.9-0.8,1.9,0,2.7,0.5c2.5,1.8,4.7,0.9,6.8-0.7c1.6-0.6,2.9-1.7,4.6-2c1.3-0.1,2.4,0,3,1.4c0.2,2.4,3.2,1.6,3.3,1.6\n                        c4.8-3.3,8.2,2,12.5,1.9c-1.2,1-2.4,2.1-3.7,3.2c2,1.3,3.6,0.5,5.3,0.4c-0.2,1.4-0.1,2.6-0.5,3.5c-1.1,2.2-1.4,6-5.5,3.3\n                        c-0.9-0.6-1.9-0.4-2.6,0.6c-2.5,0.4-2.9,3-4.6,4.3c-0.7,0.5-0.3,4.4-2.3,0.7c-0.2-0.5-1-0.2-1,0.4c-0.4,6.4-4.8,2.7-7.6,2.7\n                        c1-0.2,2.1-0.4,3.1-0.5c1.1,0,2.4,0.9,3.1-0.5c0.7-1.4,0.2-2.3-1.3-3.2c-1.6-1-0.6-2.9,0-4c0.8-1.5,1.6-2.7,0.6-5.2\n                        c-1.1,3.1-4.1,4-4.4,7.1c-0.1,1.5-1.7,2.6-3.3,2.3C1193.2,599.3,1191.5,601.3,1191,605z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63121F"),
                d:
                  "M1278,592c1.8,0.4,4.2-1,5.1,1.8c0.4-2.4,5.1,4.2,3.9-1.9c-0.3-1.5,1.8-0.9,2-0.5\n                        c1.1,2.2,1.5,6.2,4.3,1c1.6,2.1,5,2.4,5.3,5.7c0,0.4,0.2,0.9,0.6,2.2c1.2-2.8,4.8-2.3,4.7-7c1.5,4.5,2.8,7.8,6.2,9.4\n                        c1.3,0.6,0.9,1.7,0.8,2.6c-0.2,1.8-1.2,0.6-2,0.6c-2.4,0-4.8,2.5-6.9,1.2c-2.8-1.8-5.9,0-8.7-1.6c-1.2-0.7-3.7-0.7-4.8,0.1\n                        c-4,2.8-8.4,1.3-12.5,1.7c-3.3,0-6.7,0-10,0c-4-1.6-8.2-1.8-12.5-2.1c-1.3-0.1-3.1,0.3-3.4-1.2c-0.5-2,1.8-1.8,2.9-2.7\n                        c5-3,11.1-3.6,16-7C1271.6,591.4,1274.6,590.7,1278,592z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821727"),
                d:
                  "M1278,592c-3,0.7-6,1.4-9,2c-1.5-1.4-4-2-4.2-4.8c0-0.2-2.2-2.9-4.5-0.8c-1.2,1.1-3.3,1.3-5,1.9\n                        c-1.1,0.4-2.3,1.2-3-0.4c-0.5-1.3,0.5-1.4,1.6-1.7c1.8-0.4,0.4-1.5,0-2.2c-0.5-1-1.3-0.8-1.9,0c-1.5,2.1-3,4.3-4.6,6.5\n                        c-2.5-3.3,0.8-4.9,2.1-7c-1.6-1.2-2.1,0.1-2.9,0.9c-1.2,1.1-1.3,1-1.7-0.8c-0.3-1-0.3-1-5.2-0.3c0.7,2.6,4.5,2.9,4.8,6.5\n                        c-3.3-2.2-6.2-4.2-9.1-6.2c-0.8-0.5-1.6-1.1-2.4-1.6c-3.2,6.6-7.4-1.2-10.9,0.8c-2.2,1-4.5,0.4-6.7,0c-3.5-0.7,1-1.5-0.3-2.5\n                        c-0.9,0.6-2.9-0.5-3.2,1.9c-0.2,1.6-0.9,1-1.5,0.5c-1.8-1.8-4.9,0.1-6.5-2.2c0.8-0.2,1.5-0.4,2.3-0.5c0.1-1.9,0-1.9-3-1\n                        c-1.4,0.6-2.3,2.1-4,2c-1.3-2.7-3.4-4.2-6.5-4.3c-1.4-0.1-3.7,0.1-2.5-2.7c13.4,0,26.6,2.5,39.9,3.8c6.7,0.7,13.4,1.3,20.2,2\n                        c10,1,20,2.1,30,3.2c3.3,1,6.8,0.6,10,2C1286.1,588.9,1281.3,588.6,1278,592z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B141F"),
                d:
                  "M1253,601c-0.8,0.8-1.6,1.5-2.7,2.6c5.7,0.3,11.3-0.7,15.7,3.4c-8.1,0-16.1,0-24.2,0\n                        C1244.8,602.8,1248.5,601,1253,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1215,595.6c1.1,1.8,4.1,1.8,3.6,5.2C1216.3,599.7,1214.8,598.5,1215,595.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1214.2,601.4c-0.2,0.2-0.5,0.9-1,1.1c-0.8,0.2-1.1-0.5-1-1.2c0.1-0.8,0.6-1.1,1.3-1.1\n                        C1214,600.2,1214.5,600.4,1214.2,601.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d: "M1198,605c-2,0-4,0-6,0C1194,603.5,1196,603.5,1198,605z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1316,591c5.7,0.5,11.5,0.8,17,3C1327.2,593.9,1321.3,593.8,1316,591z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912D3B"),
                d:
                  "M1290,587c-3.5,0-6.9-0.3-10-2c3.7-0.2,7.4,0.3,11,1c0,0.3-0.1,0.6-0.1,1\n                        C1290.7,587,1290.3,587,1290,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1334.8,600c0.8-0.5,1.1-0.8,1.4-0.8c1.7-0.1,4.2-1,4.9,0.9c0.8,2.1-1.1,2.1-2.6,1.4\n                        c-0.7-0.3-1.3-1-2-1.3C1336,599.9,1335.5,600,1334.8,600z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1335,600c0,0.3,0,0.7,0,1c-1.5,0.1-2.9-0.1-3.3-1.9c-0.1-0.2,0.1-0.7,0.3-0.8\n                        C1333.7,597.6,1333.9,599.5,1335,600z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1329.6,601.1c-1.3,0.2-2.6,0.3-4.2,0.5C1326.7,599.6,1328,600,1329.6,601.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1336.7,602.2c-0.4,0.5-0.6,1.1-0.9,1.2c-0.8,0.3-1.2-0.3-1.3-1c0-0.5,0.3-0.9,0.5-1.4\n                        C1335.5,601.4,1336,601.7,1336.7,602.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3945"),
                d:
                  "M1055,600.7c4.3,0.1,8.7,0.3,13,0.4c0.4,0.3,0.8,0.6,1.1,0.9c-3.6,2.6-7.4-0.7-10.3,0.5\n                        c-1.4,0.1-0.7,1.2-0.8,0.6c0-0.2,0-0.3,0.2-0.3c6.3-0.4,12.5,0.5,18.8,0.4c2.3,0,3.3,1.9,4.1,3.9c4.7,0.6,7.1,3.5,8,8\n                        c-0.7,0-1.3,0-2,0c-0.5,0-1.1,0-1.4-0.4c-2.6-3.7-5.7-3.4-9.1-1.3c-0.7,0.5-1.6,0.6-2.4,0.3c-4.6-1.6-7.8,1-11.2,3.3\n                        c-5.8-0.8-11.6-1.2-17.6,0.7c1.5,2.1,3.6,0.9,5.3,1.3c1.6,0.3,3.8-0.7,4.3,2c-8.3,0-16.7,0-25,0c-3.3-2-6.7-4-10-6\n                        c-4.8-2.6-10.4-3.7-13.9-8.5c-0.5-1-1-2-1.6-3c-1.4-2.2-0.4-3.9,1.8-3.7c3,0.3,4.2-2.1,6.3-2.9c7.5,0.6,15.1,0.4,22.6,1.1\n                        c4,0.4,7.9,0.3,11.8,0.5C1049.9,598.6,1052.7,598.7,1055,600.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F4A"),
                d:
                  "M1081,607c-7.1-6.1-16.3-0.9-24-5.1c4.1,0,8.1,0,12.1,0c26.6,0.9,53.3,2.4,79.9,4.1c0,0.3,0,0.6,0,0.9\n                        c-0.1,0.6-0.7,0.6-1,1c-5.8,0-11.9-1.9-17.3,1.9c-0.4,0.3-1.5,0.3-1.9,0c-5.9-4.5-13.1-2.4-19.6-3.6\n                        c-5.6-1.1-11.4-1.4-17.3-1.4C1088,604.9,1084.5,605.7,1081,607z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24650"),
                d:
                  "M1324.1,613.9c-2.6,2-14.8,1.6-19.4,0C1311.1,613.9,1317.6,613.9,1324.1,613.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24650"),
                d:
                  "M1298.1,614c1.8-1.3,3.1-1.3,4.9,0C1301.1,615.3,1299.9,615.3,1298.1,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63844"),
                d:
                  "M1263,512c4.8,0.8,9.4,2.1,14.5,1.3c3.3-0.6,6.9,0.6,9.2,3.3c0.6-2.3,4.3-3.9,7.1-2.2\n                        c2.3,1.4,4.3,2.3,6.4-0.3c1.6-1.9,3.3-1.1,4.7,0.3c2.3,2.4,4.4,3.8,6.4-0.3c0.5-1.1,1.8-1.4,2.5-0.9c3.7,2.7,7.3,0.8,11.1,0.3\n                        c2.3-0.3,3.1,3.1,5.5,2.8c1.6-0.2-0.6-7.2,3.9-2.1c0.2,0.3,1.2,0.3,1.3,0.2c3-5.2,8-1.3,11.8-2.5c0.8-0.2,2.6-1.3,1.7,1.1\n                        c-0.3,0.8-0.9,1.5,0.2,1.9c1,0.4,1.9,0.1,2.8-0.6c4.4-3.3,5.2-3,6.9,2.6c0.2,0.6,0.1,1.3,1.1,1.7c1.8-1.8,2.4-4.2,2.9-6.7\n                        c3.6,0.9,5.8,3.3,7.9,5.9c2.4-2,0.2-4.2,0.8-6.2c3.6,1,1.3,4.9,3.4,6.5l0,0c1.6,3.7,0.3,5.9-3.5,7c-3.6,1-7.3,1.5-10.1,4.8\n                        c-1.4,1.7-3,0.3-3.1-1.9c0-1.3,0.8-2.6,0.1-4.3c-1.9,1.3-4,1.3-6.1,0.9c-3.8-0.7-7.5,2.1-8.6,5.7c-0.7,2.2,0.6,6.4-2.2,6.4\n                        c-2.8,0-1-4.3-2.3-6.3c-0.1-0.1-0.2-0.2-0.7-0.6c-2.2,3.8-4.4,4.7-6.3-0.3c-0.5-1.2-1.9-1.1-3.1-1.3c-1.5-0.2-2.8-0.6-3.8-2\n                        c-3.4-4.6-11.1-6-15.8-2.9c-3.2,2.1-6.4,3.3-10.3,2.6c-1.8-0.4-3-0.9-2.7-3.2c-0.8,0.9-0.5,1.7-0.3,2.5c0.4,1.5,2,3.1,0,4.4\n                        c-2.5,1.6-3.1-0.7-3.9-2.2c-0.7-1.2-1.6-1.1-2.5-0.4c-3.5,2.9-8.3,2.2-12,4.5c-0.6,0.4-1.3,0.6-1.9,0.4\n                        c-7.6-2.3-14.7,1.9-22.1,1.8c-1.8,0-3.6,0.3-5.4-0.6c-1.1-0.5-2.4-1.2-3.3-0.6c-4.6,2.8-8.4-2.1-12.8-1.2\n                        c-0.3,0.1-0.6-0.2-0.9-0.4c-3.4-2.7-3.7-7.2-6-10.5c6.5-1.1,13.2-3,18.5-5.8C1250.6,511.2,1256.6,511.9,1263,512z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983340"),
                d:
                  "M1263,506c0,0.3,0,0.7,0,1c-4.3,3.3-9.5,3.8-14.6,5c-1.9,0.3-3.6-0.3-5.3-0.8\n                        c-2.3-0.6-5.2-2.2-6.2,1.9c-0.1,0.3-0.5,0.4-0.8,0.6c-2.2,1-4.2,0.3-6.3-0.3c2,4.3-2,2.4-3.2,2.8c-2,0.6-4.2,0.3-6.2-1.1\n                        c-1-0.7-2.3-0.1-3,1c-1,1.8-2.4,2.1-4.2,1.4c-0.6-0.4-0.9-1-0.8-1.7c1.4-1.8-1-1.6-1.3-2.5c-6.1,0.9-12.6-1.4-18.1,3\n                        c-1.1,0.9-2.1,1-2.9-0.3c-1.2-1.8-3.2-1.5-4.8-2.2c-4.8-2-9.3-3.3-12.7,2.3c-0.6,1-2.2,1.6-3.6,1.4c-2.7-0.2-2.5-1.5-0.6-3.6\n                        c-4,1.1-7.9,2.9-10.7-1.4c-0.3-0.4-0.8-0.6-1.1,0c-3.4,6.2-5.6,1.4-8.2-0.8c-0.3-0.2-0.5-0.5-0.7-0.7\n                        c-0.2-0.4-0.2-0.9-0.1-1.4c2.7-6.1,7.9-5.5,13-4.9c6.7,0.8,13.5,0,20.3,1.1c5.2,0.8,9.4-2.7,14-4.5c1.5-0.6,3.3-1.4,3.5,0.7\n                        c0.3,2.9,2,2.3,3.7,2.2c4-0.3,7.9-0.6,11.6-2.2c0.5-0.2,1-0.6,1.4-0.3c5,2.9,10.3,1.5,15.5,0.8c2.1,0.7,0.2,3,0.9,3.3\n                        c2,0.6,2.9-1.8,4.5-2.4c2-0.8,3.9-0.8,5.8-0.5c5.2,0.7,10.4,0.8,15.7,0.2C1260,502.7,1262.4,503,1263,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1263,506c-4.2-4-9.4-0.8-14.1-1.4c-2.7-0.3-5.7-1-8.7-0.9c-2,0.1-3.7,0.7-4.9,1.6\n                        c-1.2,1-0.8,3.6-3.9,1.9c-2.9-1.6,0.9-3-0.5-4.2c-1.5-2.1-0.3-3.4,1.4-4.5c4.7-2.4,10.3-0.6,14.9-3.6c0.8-0.5,1.9,0.4,2.8,0.6\n                        c3.5,0.8,7,2.1,10.6,0c0.4-0.2,1.1-0.5,1.4-0.2c4.2,3,8.5,1.1,12.9,0.7c3.6-0.3,7.3,0.1,9.9,3.1c-0.4,2.7-2.8,1-4,1.8\n                        c-0.3,0-0.7,0-1,0c-3.1,2.9-7.5,2.2-11,4C1267,505.3,1265,505.7,1263,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43B48"),
                d:
                  "M1248,511c5.1-1.1,9.8-3.5,15-4c0,1.7,0,3.3,0,5c-3.7,2.1-7.8,0.6-11.6,1c-1.9,0.2-4.1-0.4-4.5,2.5\n                        c-0.3,1.8-2,1.3-3.2,1.5c-4.4,0.7-9.2,0.1-12.9,3.8c-1,1-3.7,0.1-5.7,0.1c-0.6,0.7-1.1,1.5-1.9,2c-3.8,2.7-7.9,4.8-12.7,5\n                        c-1.8,0.1-3.6,0.7-5.1,1.9c-2.9,1.5-4.9,0.4-6.4-2.2c0.4-1.9,2-2.5,3.6-2.8c5.3-1.1,10.2-3.3,15.4-4.8\n                        C1227.9,516.9,1237.7,513.2,1248,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3644"),
                d:
                  "M1281,501c0.9-1.6,3.1-0.4,4-2c0.1-0.2,0.1-0.4,0.2-0.6c1-1.3,2.6-1.6,4.1-2.1\n                        c0.9-0.3,1.8-0.5,2.7-0.7c1.2-0.2,2.5-0.5,3.4,0.6c0.5,1,0.4,2-0.4,2.8c-3.2-0.1-5.6,3.1-9,2\n                        C1284.3,501.1,1282.6,504,1281,501z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3644"),
                d:
                  "M1269,505c3.1-2.9,7.1-3.4,11-4c-0.3,3.1-2,4.3-5,4C1273,504.9,1271,505,1269,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC2D39"),
                d:
                  "M1327,491c3,2.5,5.5-1.9,8.8-0.6c1.8,0.7,3.9,1.2,5.9,1.5c2.5,0.5,4.8,2.6,8.2,0.8\n                        c1.7-0.9,5.7,0,8.3,0c6.9,0,13.5,4.4,20.6,1.3c2.2-1,3,1.1,3.3,3c-1,0.5-1.9,2.5-2.7,1.8c-3.7-3.5-8,0.7-11.8-1.1\n                        c-0.7-0.3-2.2-0.1-2.8,0.5c-2.9,2.5-5.5,5.2-7.5-0.7c-2.5,2.7-4.9,2.5-7.4,0c-2.5,3.3-5.1,2.9-8.1,0.6c-1.4-1-4.5-0.4-5-0.1\n                        c-3,2.1-3.3-1-4.7-1.9c-1.4,1.6,1.1,3.9-0.9,5.5c-2.1-1.1-0.3-3.5-2-5.2c-1.5,5.3-4.9,0.1-7.3,1.5c-2.5,1.5-5,2.9-8.4,4.9\n                        c3.2-4.8,1.1-5.7-2.3-5.7c-0.6-1-0.5-2.3,0.5-2.4C1316.9,494,1321.5,490.6,1327,491z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A82E3A"),
                d:
                  "M1327,491c-4.7,1.5-8.8,4.8-14.1,4.1c-1.2-0.2-1.7,0.8-1.9,1.9c-1.7,2.8-4.8,3-7.3,2.6\n                        c-2.9-0.5-5.8-0.4-8.7-0.6c0-1,0-2,0-3c-0.2-0.3-0.3-0.5-0.3-0.8c0.1-0.3,0.1-0.4,0.2-0.4c0.4-0.3,0.8-0.5,1.2-0.7\n                        c1.5-0.4,3.1-0.2,4.4-1.2c0.8-0.5,1.7-0.8,2.6-1c2.2-0.1,4.1-0.9,6.1-1.7c4.1-0.9,7.6-3.3,11.7-4.2c1.7-0.5,3.4-1.5,5.1,0\n                        c1.6,0.7,3.3,1.4,5.5,2.2C1330,489.6,1326.9,488.2,1327,491z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1D2B"),
                d:
                  "M1359,477c8.1,0.8,16.1-0.2,24.1-1c1.8-0.2,2.8-1,3.4-2.6c1.9,1.5,1.3,3.1,1.4,4.5\n                        c-1.1,2.7-0.9,6-5.4,6.4c-2.5,0.3,1.2,2.2,0.1,3.6c-4.3-2-8.8-2-13.4-0.5c-0.4,0.1-3.3,2.4-3.4-1.1c0-0.7-1-1.3-1.3-0.7\n                        c-2.2,4.3-4.8,1-7.4,0.8c-2.4-0.2-5.8,2.5-7.5,0c-1.9-2.8-4.1-2.4-6.6-2.5c0.2-3.1,2.9-3.5,5-3.8\n                        C1351.9,479.7,1355.4,478.3,1359,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861E2C"),
                d:
                  "M1326,486c-1.7,0.3-3.4,0.7-5,1c-3.1,0.5-6.2,1.6-9.4,0.7c-1.6-1.2-1.2-2.4,0.2-3.4\n                        c1-0.7,2.4-0.8,3.1-2c1.7-2.2,4-2.8,6.6-2.6c3.1,0.2,6.1,0.2,9.2-1.1c3-1.3,4.1,0.9,4.7,3.4c-1,3.4-4.4,1.5-6.3,3\n                        C1327.9,485,1326.7,484.8,1326,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("982332"),
                d:
                  "M1329,485c2-1,4-2,6-3c2.7-3,6.4-2.7,10-3c3.8,0.3,7-2.3,10.8-2.5c1.2-0.1,2.2,0.1,3.2,0.5\n                        c-1.8,2.8-4.6,3.8-7.6,3.9c-3.2,0.1-6.1,0.8-8.4,3.1C1338.4,485.6,1333.8,486,1329,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1199,528c2.1-0.2,3.6,3.2,6,1c2.9-0.2,5.3,1.6,6.9,3.2c4.1,4.2,8.8,3.7,13.7,3c1.2-1.6,2.4,0.1,4,0.5\n                        c-1.6-2.3-2.9-1.1-4.1-0.5c-3.4-3.2-3.4-3.2-0.4-6.7c-1.4-1.1,1.2-3.1-1-4.1c-0.9-0.4-1.6-1.2-1.1-2.4c0.4-0.8,1.2-1,2-1\n                        c2.1,1.8,6.6,1.9,4.9,6.7c-0.1,0.4,1.2,1.9,1.4,1.8c4.3-1.8,7,4,11.2,2.3c0.6-0.3,1.4-0.8,1.8-0.6c5.5,2.7,11.2,0.3,16.8,0.6\n                        c0.8,0.1,1.4,0.1,2.2,0c3.9-0.6,7.5-5.6,11.7-0.8c0.2,0.2,1.2,0.2,1.4,0c3.8-4.1,11-1,14.1-6.7c0.7-1.2,1.7-0.5,2.2,0.5\n                        c0.5,1.1,0.8,2.2,1.1,3.3c0.3,0.9,0.6,1.6,1.7,1.1c1.1-0.5,0.5-1.2,0.2-2c-0.7-2.7-3.2-6.2,2.5-6.5c-0.8,3.1,1.4,5.6,4.4,4.3\n                        c2.2-1,4.8-0.8,6.9-3.2c3.7-4.2,14.8-1.3,16.8,3.9c0.4,1,0.9,1.4,1.7,1.3c4.1-0.7,6.6,0.8,6.6,6.5c1.8-2.8,1.8-6.6,4.3-5.8\n                        c4.1,1.2,0.9,5.6,2.4,8.2c1.8-7.9,1.9-8.2-0.2-11.7c3.6,1.8,6,0.8,8.1-1.8c0.6-0.7,1-0.6,1.9,0.2c1.4,1.3,3.4,1.3,5.3,1.2\n                        c1.2,0,1.3-3.6,3.2-0.8c1,1.4,1.5,2.5,0.2,3.9c-0.7,0.8-1.2,2-0.1,2.6c1.1,0.6,1.8-0.5,2.1-1.4c1.6-4.4,6-2.8,9-3.9\n                        c3.2-1.2,4.8-2.7,4.1-6.1c0.8,2.2,4,3.1,3.1,6.3c-0.3,1.1,1,1.9,1.9,1c2-2,4-0.5,5.9-0.2c0,1.7-0.3,3.4,0.1,5\n                        c1.2,5.1-2.6,9.3-2.4,14.2c0,0.8-1,2.4-1.5,2.3c-6.7-0.3-10.6,6.3-16.9,6.9c-1.8,0.2-3.1,1.4-4.3-0.9\n                        c-0.4-0.8-1.4-1.8-2.5-1.1c-2.3,1.5,1,1.3,0.8,2.2c-0.9,4-4.2,6-7.4,6c-4.3,0-8,1.2-11.9,2.4c-0.2,0-0.5,0-0.5,0.1\n                        c-0.4,5.8-9.2-0.4-9.1,6.3c-0.5,0-1,0.1-1.4-0.1c-0.9-0.6-1.2-1.6-0.8-2.6c0.7-1.8,2.6-2.5,4.1-3.6c-4.4-1.9-5-1.6-5.3,2.3\n                        c-0.2,2.8,0.3,4.6-4.2,4.6c-2.3,0-5.1,0.9-7.9,0.7c-1.5-0.1-0.7,2.2-1,3.4c-2.6,0.4-6.4-1.7-6.6,3.5c0,0.7-1.5,1.5-2.5-0.3\n                        c-1.2-2.1-10.9-4.5-13.2-4.1c-2.7,0.4-5.5,3.4-8.2-0.4c-0.8-1.1-2,3.9-4.8,0.7c-0.8-0.9-2.3-4.8-6.3-3.6\n                        c-2.7,0.8-6.1,1-9.2-0.6c-1.5-0.7-1.7-0.4-2.7,4.3c-1.1-5.4-3.2-7.3-8.2-4.1c-1.9,1.2-5.1,1.7-5.2-2.5\n                        c-0.1-4.3-4.2-3.7-5.3-2.7c-2.4,2.2-3.5-0.2-5.2-0.4c-1.5-0.2-1.5-1.1-0.2-1.8c1.7-0.8,0.5-1.6-0.1-2.2\n                        c-0.8-0.8-1.7-2.3-2.8-1.4c-1.8,1.3-3.7,2-5.8,2.7c-2.1,0.7-3.1,4.5-6.4,1.4c-0.8-0.8-0.6,1.1-1.1,1.6c-1.4,1.4-2.9,0.1-4.2,0\n                        c-1.9-0.2-0.4-1.7-0.3-2.7c0.2-1.3,0.3-2.6,0.6-3.9c0.3-1.6,0.1-3.2-1.1-4.1c-1.3-1-2.5,0.3-3.4,1.2c-1.7,1.9-3.9,1.1-6.6,0.7\n                        c1.5,2.6,3.2,2.5,4.9,2.7c1.9,0.1,3,1.2,3.6,2.9c0.3,0.9,0,1.7-0.7,2.2c-0.8,0.6-1.5,0.5-2.1-0.4c-0.8-1.1-2.5-2.6-3.1-1.3\n                        c-2.8,5.2-5.6,1.1-7.5-0.2c-2.6-1.7-4.3-2.9-6.8,0.2c1-2.5-0.8-6.6,4.4-5.4c0.9,0.2,1.1-0.4,1.1-1.1c0-1,0.2-2-0.8-2.7\n                        c-0.7-0.5-1.8-1.1-2.2-0.4c-1.4,2.3-5,2.2-5.4,4.8c-4.8-2.8,0.3-7.7-2.1-11.4c-0.7,1.7-0.5,3.6-1.9,4.8\n                        c-1.1,0.9,0.2,3.5-2,3.5c-2.3,0-2.5-2.2-3.1-3.8c-1.4,0.3-1.8,1.4-2.5,2.4c-2.1,3.4-8.6,4.1-11.4,1.4\n                        c-0.8-0.8-0.8-1.8-0.3-2.8c0.5-1,1.4-1.8,2.3-0.8c1.3,1.2,2.7,0.9,4.2,1.2c3.5,0.9,3.4-0.9,4.3-3.8c1.9-6.3-2.5-7.3-6.2-9.3\n                        c3.9-4.3,9.2-5.1,14.5-6c4.4,1,8.2-0.5,11.9-2.7C1198.6,528.2,1198.8,528.1,1199,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1C2A"),
                d:
                  "M1345,479c-2.9,2.4-6.7,1.7-10,3c-1.9-2.9-4.1-2.9-6.8-1c-1.4,1-3.1,0.2-4.7,0.2\n                        c-2.6-0.1-5.7-1.4-7.5,1.8c-1.6,1.4-3.5,1.3-5.1,0.5c-3.8-2-7.6-1.7-11.6-0.4c-2.8,0.9-5.8,1.7-8.5-0.8\n                        c-0.7-0.7-2.3-1.1-2.8-0.6c-4.3,3.6-9.3,0.5-14,1.5c-8.4,1.8-17,1.1-25.6,0.8c-3.3-0.1-5.4-1.2-5.5-4.8\n                        c4.2-3,9.1-2.8,13.8-3.2c0.7-0.1,1.3-0.1,1.7,0.5c3,4.6,2.4-0.7,3.5-1.3c6.9-1.2,13.7-0.7,20.4,1.4c2.5,0.8,0.1-2,0.9-2.6\n                        c7.4,1.9,14.8,2.8,22,0.7c3.1-0.9,5.9,0.8,8.7-0.2c0.5-0.2,1.2,0.4,1.1,1.2c-0.1,0.5-3.4,2.3,0.1,1.2c6.8-2.1,14-0.3,20.7-2.7\n                        c4.9,1.5,10.2-0.3,15,2c-1.7,0.3-3.4,0.8-5.2,1C1344.1,477.2,1344.8,478.1,1345,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1028,433c1.5-2.3,3.7,0.8,5.6-0.6c-0.6-2.3-3.1-0.6-4.2-2.4c0.9-1.1,3.7-1.7,2.1-4.5\n                        c1.5,3.1,5.2,4.5,4.7,8.4c-0.1,0.7,0.9,1.2,1.5,0.9c0.6-0.3,1.4-1.6,1.3-1.8c-1.9-2.8-0.5-3.2,2-3.8c1.5-0.4-0.6-1.9-0.1-3\n                        c4.1,0.9-0.9,7.9,5.2,7.2c0.8-1.5-1.5-2.7-0.9-4.3c4.4,0,8.2-2.3,12.2-3.7c0.5-0.2,1.2-1.6-0.2-1.7c-1-0.1-2.6,1.3-1.8-1.1\n                        c0.4-1.3,1.3-3.2,2.8-3c1.3,0.1,3,1.5,2.6,3.1c-1.3,6,1.9,4.4,5.4,3.8c3.3-0.6,6.7-0.4,10.1-0.6c1.5-0.1,3.4,1.3,4.1-1.8\n                        c0.4-1.8,1.9-0.6,2.3,0.6c1.5,4,3.6,3.4,5.9,0.9c1.2-1.3,2.1-3.4,2.8,0.3c0.4,1.7,2.6,1.4,3.4,0.8c1.4-1.2,3-0.6,4.4-1.2\n                        c-1.2-1.7-3.2-1.1-4.6-2c0.7-2,2.9-1,3.3-0.8c5.6,2.6,11.1,2,16.9,1.1c1.4-0.2,3.7,0.3,5.4,0.8c3.3,0.9-0.3,3.1,0.1,5.5\n                        c1.8-2.1,5-0.5,5.7-3.7c1.9,0.8,4.3-4.7,6.2,0.4c0.1,0.2,3.7-1.3,5.6-2c1.6-0.6,3.8-1.2,5.1-2.8c1.1,0.5,2.5,1.3,2.3,2.3\n                        c-1,4.4,3,0.7,3.6,2.4c1.2-1.3,3.3-2,3.3-4.1c0-0.1-1.4-0.3-2.2-0.5c1.7-2.4,3.6-1.1,5.2,0c1.2,0.8,0.9,3.4,3.4,2.9\n                        c2.3-0.5,3.6-2.4,4.8-4.1c0.9-1.3,1.2-3.1,2.2-4.7c0.3,1.2,4.4,0.9,0.8,3.8c-2.2,1.8-1,2.4,1.6,3.7c5.1,2.7,10.2-0.9,15.2,1.8\n                        c-1.6-3.7-0.5-6,2.7-8.2c-0.3,2.1-3.2,4.5,1.2,5.3c1.8,0.3,0,2.4-0.9,3.4c-0.8,0.9-2.9,1.3-2,2.9c0.8,1.5,2.2,3.1,4.4,1.7\n                        c0.7-1.8-2.9-2.3-1.7-2.6c2.7-0.7,4.6-4,7.5-2.9c1.7,0.6,5.1-0.7,5.1,3.2c0,0.3,0.8,0.8,1.1,0.7c2.6-0.9,5.1-2.1,7.7-3\n                        c1.9-0.7-3-2.6,0.5-2.6c1.9,0,0.9,2.3,1.8,3.1c0.3,0.3,1,0.5,1.3,0.4c1.4-0.6-0.6-2.2,0.7-2.9c1.7,0.5,2.4,3.2,5.1,1.9\n                        c1.1-0.5,2.7,1.6,2.2,2.6c-2.4,5,0.3,3.8,3.5,3.6c1.3-0.1,2.6,1,3.8-0.4c-0.4-1.2-2.4,0-2.5-1.7c1.2-1.3,2.4,0.2,3.6,0.2\n                        c4-0.2,2.6,2.9,2.9,5c-2.7,0.7-5.3,1.3-8,2c-9.1,2.2-18.4,3.5-27.3,6.4c-4,1.3-8.4,1.1-12.6,1.6c-4.3-0.4-8.3,1.3-12.5,1.9\n                        c-5,0.7-10.5-0.9-14.9,3.3c-1.2,1.1-3.4-0.3-5-1.3c-1.3-2-0.5-4.2-0.6-6.3c-0.3-3.5-1.3-4.1-4.3-2.4c-4.2,2.4-6.8,1.7-9.9-1.9\n                        c-0.6-0.7-2.6,0.3-3.7,0.9c-1.3,0.7-1.8,2.4-3.6,2.5c-4.1,0.2-5.1-1-4.5-6.1c-1.1,1.8,0.2,3.8-1,5.3c-0.1,0.1-0.3,0.2-0.5,0.3\n                        c-2.2-1.1-0.9-2.8-1-4c0.5-0.9-0.8-0.4-0.1-0.4c0.2,0,0.1,0.1,0.1,0.5c-0.2,0.9-1.4,1.2-1.4,2c-0.1,3.9-1,4.9-4.5,2\n                        c-2.6-2.1-6-0.7-8,2.1c-1.2,1.7-1.2,4.2-3.4,5.2c-0.5,0-0.9-0.1-1.3-0.3c-2.6-1.6-4.4-0.1-6,1.7c-2.2,2.3-4.9,2.6-7.8,2.1\n                        c-1.7-0.4-3.4-1.1-1.5-3.3c0.2-0.3,1.6-0.3,0.3-1c-0.4-0.2-0.9-1.2-1.6-0.2c-1.9,2.6-5.3,2.2-7.7,4c-2.7,2-4.7,0.3-5-4\n                        c-0.5,2.4-0.7,4.7-2,6.5c-1.2,1.3-2.7,2.1-4.4,1.4c-2.6-1.1-4.9-1.8-7.3,0.4c-0.6,0.6-1.5,0.3-2.2-0.3\n                        c-3.3-2.8-5.4-0.8-7.3,1.8c-2.5,1-4.6-1.9-6.6-1.2c-4.2,1.5-8.4-1.2-12.6,0.6c-3.1,1.4-8.7-2.3-11.3-6.6\n                        c-0.3-0.9-0.5-1.8,0-2.2c-1.1,2-3.2,2.2-5.5,0.9c-1.3-0.8-2.6-1.6-3.4-3.1c-0.1-0.4,0-0.8,0.1-1.3c0-1.9-2-1.9-2.9-2.9\n                        c-1.3-1.6-2.6-3-0.7-5c0.5-0.6,1.9-0.8,1.1-2.1c-0.1-0.1-0.2-0.3-0.3-0.4c0.4-1.9,1-3.9,0.1-5.8c2-0.2,3.2-2.7,5.4-2\n                        c2.6,0.8,0.9,3.2,2.4,5.8c-0.5-7.2,3.2-7.8,8.1-6.6c-1.1,1.4-2.9,0.1-4.1,1.1c0.9,0.4,2.4,0.9,2.4,1.3c0,2.3-2.5,0.5-3.7,2.2\n                        c2.6-0.1,5.9,3.2,6.1-2.9c2.3,2.8,0.3,4.9,0.2,7.1c-0.2,0.1-0.3,0.2-0.4,0.3c1.2,4.5,1.3,4.4,4.5,4.9c1.8,0.3,2.1-0.5,2.7-1.8\n                        c0.8-2.1-0.9-1.6-1.7-2c-0.7-0.4-1.3-1-1.8-1.6C1028.2,433.4,1028.1,433.2,1028,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1102.8,448.1c2.8-0.7,2.4-3.7,3.6-5.3c3.7-4.9,7.9-5.6,12.3-0.6c-2.5-3.9,2-5.3,3-8.1\n                        c0.1,2,0.2,3.9,0.3,5.9c0.2,0,0.4,0,0.6,0c0.2-2,0.3-4,0.5-5.9c0.2,0,0.4,0,0.6,0c0.1,2,0.2,3.9,0.3,5.9\n                        c0.2,0.2,0.4,0.4,0.6,0.5c0.2-0.4,0.3-0.9,0.5-1.3c4.5,2.6,6.9-3.4,10.9-2.8c0.7,0.1,1.8,0.5,2,1.1c0.3,0.8-2.8,0.6-1.1,2.2\n                        c0.6,0.5,2.9-0.5,3.1-0.1c1.5,2.6,3,1.5,4.2,0c1.5-1.9,3.8-2.9,5.5-1.7c1.6,1,1.7,3.6,1.5,5.7c-0.1,1.8-0.2,3.6-0.3,5.5\n                        c-0.1,3.1-0.7,3.4-4.7,2.3c-0.7-1-0.2-1.4,0.7-1.7c1.7-0.5,2.3-1.7,2-3.4c-0.7-1.5-1.8-1-2.9-0.5c-0.7,0.1,0.2,1,0,0.4\n                        c-0.1-0.3,0.3-0.4,0.7-0.5c0.9-0.2,1.6-0.1,2.2,0.6c0.5,2.4-1.1,3.2-2.9,3.9c-0.9,2.1-3.5,2.7-4.1,5.1c-9.7,1.7-19.2,4.9-29,6\n                        c-4.7-0.7-8.8-3.1-14,1.1c-4.2,3.5-10.9,3.3-16.7,1.4c-0.6-0.2-1.4-0.6-1.5-1.2c-1.2-4.5-4.5-5-8.4-4.7\n                        c-1.4-0.7-0.6-2.1-1.1-3.2c-0.1-0.1-0.2-0.3-0.3-0.4c0.7-3.4,1.6-6.9,1.2-11.5c2.2,2.2,2.3,4,2.1,5.7\n                        c-0.1,1.2-0.4,2.4,1.3,2.7c1.1,0.2,2.6,0.4,3.1-0.8c0.9-2.4,2.7-2,4.5-2c0.7,0,2.1,0.3,2-0.8c-0.4-4.6,1.6-1.5,2.7-0.8\n                        c2.3,1.4,2.4,2.6-0.9,3.6c4.6,2.3,7.9,0.9,10.3-2.3C1099.6,444.5,1101.2,446.3,1102.8,448.1\n                        C1102.7,448.3,1102.7,448.3,1102.8,448.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821729"),
                d:
                  "M1072,457c4.8-1.8,7.7-0.5,9.8,4.6c0.8,2,5.2,1.5,8,1.7c2.7,0.1,4.9-2.3,7.7-1.4\n                        c0.5,0.1,1.5,0.5,1.5-0.5c0.3-3.8,3.2-3.4,5.5-3.3c2.6,0.2,5.2,1.1,7.9,1c1.3,0,0.6,1.2,0.5,1.9c-7.8,1.7-15.4,4.3-23.4,4.6\n                        c-0.9,0-1.7,0.9-2.6,1.4c-0.6,0.6-1.1,1.4-1.9,1.6c-9.5,1.7-18.6,4.8-28.3,5.6c-0.5-0.1-1-0.3-1.5-0.6c-1-1-0.4-1.9,0.2-2.7\n                        c4.8-1.8,9.7-3.5,14.3-6c3,0.6,5.9,0.2,8.9-0.5c-0.7-2.5-2.8-2.1-4-3.1c-1-0.4-2-0.6-2.7,0.6c-0.5,1.1,0.4,3.2-2,3.1\n                        c-2.9-1.6-5-0.9-6.4,2.1c-0.4,0.8-0.9,1.4-1.9,1.1c-1-0.3-1.2-1.2-1-2c0.4-2.3-0.6-5.1,2.1-6.7c3.1,0.2,4.3-3.7,7.4-3.5\n                        C1070.9,456.2,1071.5,456.5,1072,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F162A"),
                d:
                  "M1142,455c-1.9-4.3,2.7-3.3,4-5c2,1.3,3.9,2.1,5-1c3.8-0.2,7.1-1.5,10.5-3.5c2.7-1.6,5.6,1.3,9.2,0.2\n                        c2.9-0.9,6.4-2.4,9.9-2.1c1.2,0.1,1.5,1.1,2.4,1.4c-6.5,3.1-13.6,3.4-20.4,5C1155.7,451.6,1148.9,453.3,1142,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151E"),
                d:
                  "M1056,473c4.7,0.5,9.1-1.6,13.6-2.4c5.8-1.1,11.6-2.4,17.4-3.6c0,1.3,0,2.7,0,4c-2,0.4-1,2.4-2,3.9\n                        c-1.2-1.8-2.6-3.9-4.9-2.7c-5.1,2.7-10.8,1.5-16.2,2.8c-2.1,1.1-4.4,0.7-6.6,0.6C1056,475.5,1054.9,474.7,1056,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1222.6,441.1c-0.4,0.8-1,0.9-1.7,0.7c-0.6-0.2-1.3-0.6-1-1.3c0.1-0.3,0.9-0.4,1.3-0.4\n                        C1221.9,440.1,1222.6,440.2,1222.6,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d:
                  "M1243,479c1.4,2.3,2.6,3.7,6.1,3.5c6.1-0.4,12.4,0.9,18.6,0.6c2.4-0.1,5.7-0.5,7.3-1.4\n                        c3.4-1.8,5.6,0.2,8.2,0.6c0.9,0.2,1.9,0.4,2-0.4c0.8-5.8,4.4,0.6,6.1-1.4c2.5,4.9,6.5,1.8,9.1,0.9c4.1-1.4,7.3-1.1,10.8,1\n                        c1.5,0.9,3.2,0.5,4.9,0.6c-0.1,1.8-1.3,2-2.7,2c-1.4,0-2.2,0.6-2.3,2c1,2.1-0.4,2.6-2,3c-2.6,0.6-5.2,0.7-7.8,0.1\n                        c-4.8-3.5-10.3-1.6-15.3-1.2c-13.4,1-26.5-1.1-39.8-1.2c-5.7,0-11.5-0.8-17.2,0.9c-2.4,0.7-4.9-0.6-7.4-0.4\n                        c-4.9,0.5-9.9-0.3-14.8,0.8c-2.3,0.5-4.7,0.2-6-2.4c1.6-6,7.6-5.3,11.3-5.5c3.3-0.2,7.4,0.2,11,1c2.1-2,4.7-0.3,7-1\n                        C1234.4,480.9,1239.3,483.9,1243,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81222E"),
                d:
                  "M1047,480c5.9,0.7,11.7,0.9,17.6-0.4c2.7-0.6,5.7,0.9,8.4,2c3.5,1.4,7-1,10.6,0.1\n                        c0.3,0.1-0.7-3.3,1.3-4.3c2.7,3.9,12.9,5.5,17,2.5c2.4,0.1,1.9,2,2,3.5c-0.8,3.1-2.7,4.1-5.9,4c-3.4-0.2-6.7-0.1-10.2,1\n                        c-2.9,0.9-7-1-10.4-1.7c-6.2-1.3-12.8-1.7-18.3,0c-6.4,2-12-0.3-17.9-0.2c-6,0.1-12.3-0.8-18.2,1.5c-1.7,0.7-2.6,0-2.3-1.8\n                        c0.3-1.5,0.9-2.8,2.2-3.8C1030.9,480.2,1038.9,479.4,1047,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80202C"),
                d:
                  "M1223,482c-3.6,1.5-7.1,1.4-10.5-0.4c-0.4-0.2-1-0.2-1.3,0c-3,2.3-7.3,1.7-10.1,4.4\n                        c-0.8,0.4-1.3-0.1-1.8-0.5c-1.5-1.8-3.1-1.3-4.7-0.1c-0.4,0.2-0.8,0.4-1.3,0.5c-8.7-3.2-17.8,0.1-26.6-1.3\n                        c-1.7-0.1-3.1,0.5-4.2,1.9c-0.9,1.1-1.7,0.4-2.2-0.5c-0.7-1.9-2-1-3.2-0.8c-2.7,0.5-5.5,0.6-8-0.9c-1-2.2,1.5-2.8,2-4.3\n                        c0.1-0.7,0.5-2.1,0.5-2c1.1,2,2.7,3.2,4.7,1.9c1.6-1.1,0.1-3.5,1.8-6c-1.1,6.1,2.5,5.2,5.6,5.1c11.1-0.2,22.2,0.3,33.2-0.8\n                        c3.9-0.4,6.9,1.8,10.6,1.1c2-0.4,4.2,0,6.2-0.8c1-0.4,2-1.9,1.9,0.8c-0.1,1.5,0.8,1.9,2.2,0.7\n                        C1220.6,477.8,1222.4,478.6,1223,482z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1825"),
                d:
                  "M1047,480c-7.9,1.9-16,1.6-24,3c-0.7,0.5-1.4,1-2.3,1.2c-2,0.2-4,0.4-5.7-1c-0.3-2.3,1.6-2.2,2.9-2.5\n                        c9.9-1.8,19.6-4.6,29.4-6.8c2.6-0.4,5-1.6,7.7-1c0.3,0,0.7,0,1,0c0.1,2.7,2.2,0.8,3.1,1.3c1.6,1.1,3.5-1.1,4.9,0.6\n                        c-0.3,2.4-2.2,1.7-3.7,2C1055.8,477.9,1051.4,479,1047,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E212C"),
                d:
                  "M1103,484c-0.1-1.4,0.5-3-1-4c2-4.5,5.6-1.2,7.4-0.6c2.9,1,5.5,0.9,8.4,0.7c1.7-0.1,4.4-1.6,4.7,2\n                        c0.5-0.4,1-0.7,1.5-1.1c0.2,0.2,0.4,0.4,0.5,0.6c0.7,1.5,0.7,3,0,4.5c-0.7,0.8-1.7,1.6-2.5,1\n                        C1116.1,483,1108.6,489.6,1103,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E212C"),
                d:
                  "M1151,480c0.1,1.7-1.4,2.6-2,4c-3,2.4-5.9-0.6-9,0c-4,0.8-8.1,1.4-12.3,1.3c-0.7,0.1-1.4,0.1-2.1,0\n                        c-2-0.9-0.3-3.2-1.6-4.4l0,0c0-1,0-2,0-3.1c4.8,3.6,21.8,2.6,25.1-1.3C1152.2,476.4,1145.2,481.5,1151,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80202C"),
                d:
                  "M1230,481c-1,3.1-1.3,3.3-2.9,1.4c-1.4-1.6-1.7-0.7-2.4,0.2c-1,1.2-1.5,0.7-1.7-0.6\n                        c1.4-2.2,3.9-2.2,6.1-2.8C1230.8,478.7,1230.3,480.1,1230,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M1245,433c10.2-3.8,20.6-3.3,31-1c0.7-0.6,1.3-0.6,2,0c2.2,1.4,4.6,0.9,7,1c0.4-0.8,1.4-0.4,2-1l0,0\n                        c1.8-0.5,1.8,0.8,2,2c1.7,1.5,3.8,1.9,6,2c-4.1,1.1-8.1,2.6-12.7,2.2c-4.1-0.4-8.7-2.8-12.5,1.4c-0.3,0.4-1.8-0.3-3-0.7\n                        c-0.4-0.4-0.5-0.5-0.5-0.5c-0.1-0.1,0,0,0.3,0.3c0.5,0.5-0.1,0.8,0.3,0.3c0,0-0.1-0.1-0.2-0.2c-0.4,1.4-2.8,1-2.6,2.5\n                        c0.6,3.6-2.3,3.6-4.2,4.7c-0.3,0-0.7,0-1,0c-1.2-2.7,1.6-2.7,2.7-3.8c0.8-0.8,1.2-1.4,0.6-2.5c-0.5-0.9-1.2-1.9-2.2-1.1\n                        c-3.1,2.4-5.1-0.5-7.4-1.5c-1.6-0.7-3-2-3.6,0.8c-0.3,1,0.4,3.3-1.7,2.3c-0.7-0.3-2.5-3-1.4-4.2\n                        C1247.6,434,1245.1,434,1245,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1331.1,429.6c-2-0.5-3-0.9-2.9-2.7C1329,427.7,1329.8,428.4,1331.1,429.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1232,435c0.4-2.1,1.3-2.6,3-1C1234.3,435.2,1233.1,435,1232,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1213.8,447.5c1-0.7,2.1-0.6,3.4,0C1216,448.2,1214.9,448.2,1213.8,447.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1234,453c2-1.3,3.3-1.1,5.1-0.1C1237.2,454.2,1235.9,454.3,1234,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M881,441c-2.3-4.1-1.5-8.8-1.6-13c-0.4-11-3.2-21.5-4.6-32.3c-0.4-2.9-0.5-5.8-0.8-8.7\n                        c0.5-0.5,0.7-1.1,0.9-1.8c1-3,0.6-7.9,6.4-4.7c0.3,0.2,0.9-0.3,1.4-1.1c-4.3-0.9-6.5-3.8-7.6-7.8c-0.3-0.9-0.6-2.1,0.4-2.7\n                        c1.1-0.7,1.8,0.1,2.6,0.8c4.8,4.7,6.6,5,12.5,2c1.8-0.9,3.1-1.5,3.3,1.3c-0.1,0.5-0.2,0.9-0.4,1.3c-1,1.3-2.2,2.3-3.3,3.6\n                        c-1.4,1.6-0.5,2.6,0.7,3.6c1,1.2,1.3,2.8,2.3,4.1c1.7,3.2,5.3,2.8,8,4.1c0.2,0.4,0.3,0.8,0.1,1.2c-0.4,2,1.3,1.5,2.2,1.8\n                        c6.2,2.1,13.1,0.9,19.3,3.6c1.3,0.6,2.8-3.6,4.1,0c1.4,7.6,7.5,9.7,13.7,11.8c7.6,2.2,15.3,1.6,23.1,1c1-0.3,2-0.4,3.1-0.5\n                        c11.7-2,22.4-6.3,31.6-13.9c1.7-1.2,3-2.7,3.9-4.5c0.8-2-0.6-5,2.6-6c11.2,1,22.2,3.3,33.3,5.3c8.6,1.6,17.5,2,26,4.2\n                        c2,1.4,4.5,0.6,6.5,1.7c0.2,0.2,0.3,0.4,0.5,0.6c5.3,1.9,10.8,2.9,16.3,3.2c3.3,0.2,5.9,1.5,9.3,2c-3.5,2.8-7.3,2.9-10.7,3.5\n                        c-14.4,2.5-28.9,4.7-43.4,6.6c-14.1,1.8-28,5.2-42.3,5.9c-0.4,0-0.8,0.5-1.2,0.8c-1.4,1.8-3.4,1.8-5.4,2.1\n                        c-10.5,1.4-21.1,2-31.4,4.4c-2.4,0.5-4.9,1.2-7.2-0.4c-2.4,1.9-5.7-0.2-8,2c-0.4,0.4-0.8,0.8-1.3,1\n                        c-11.2,2.6-22.7,3.1-33.9,5.3c-7.7,1.5-15.4,2.2-23.1,3.5C885.1,436.5,882.6,437.8,881,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1120"),
                d:
                  "M1252,381c-18,3.9-36.5,4.9-54.7,7.7c-9.9,1.5-19.9,3.1-29.9,4c-7.5,0.7-15-2.1-22.4-3.7\n                        c-0.8-0.6-1.4-1.2-0.9-2.4c0.3-0.6-0.9-0.6-1.4-0.8c-0.5-0.2-0.1,0.6-0.2,0.9c-0.2,0.9-0.8,1.8-1.6,1.3c-2.9-1.8-6.1,0.6-9-1\n                        l0,0c-2.6-0.9-4.5-2.6-4.6-5.3c-0.1-3,2.5-4.2,4.8-5.1c2.6-1.1,5-2.4,8-2.7c4.1-0.5,6.8,0.8,8.8,4.1c0.3,0.3,0.7,0.6,1,1\n                        c1,0.7,3,2,3.2,0.6c0.7-4.5,3.8-2.6,6.1-2.8l7-2.5c0.8-1.4,1.6-3.7,3.4-2.9c2.3,1,0.4,3.1,0.1,4.8c-0.1,0.5,0.1,1,0.9,1.9\n                        c-0.3-2.1,0.1-3.7,1.2-5c1.4-1.5,2.8-1.8,4.6,0.6c-1.1-2.4-3.7-3.6-2.2-5.9c0.9-1.5,2.6-1.2,4.1-1.2c2.3-0.1,3.6,0.9,4.4,3.1\n                        c1.8,4.9,2,4.9,10.9,7.1c-2.1-0.8-2.8-2.9-4.5-2.8c-3.4,0.1-4.9-0.9-3.2-4.4c0.2-0.5,0.3-0.8,0-1.4c-2.2-5-2.2-5,3-7.2\n                        c3.6-0.8,7,0.3,10.4,0.8c5.9,0.3,11.7,1.7,17.7,2c7.3-0.2,14.3,2.1,21.6,2.1c0.8,0.1,1.5,0.3,2.2,0.6\n                        c5.6,2.1,11.6,2.2,17.4,3.5c4.7,1,9.4,2.7,13.3,7.1C1264.9,379,1258.5,380.3,1252,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M1010.6,444.8c1.4,1.2,2.4,2.2,3.4,3.2c0.5,1.2-0.2,1.8-1.1,2.5c-4.9-0.7-7.7,3.6-11.7,5.2\n                        c-4.1,1.7-7.3,2.5-10.8-0.4c-0.1,0,0-0.7-0.3-0.2c-2.4,4.1-5.7,1-8.6,1.2c-1,0.1-2.1-0.2-3,0.1c-10.5,3.7-21.5,0.8-32.1,2.4\n                        c-4.5,0.7-8.9,0.9-12.7,4.1c-1.3,1.1-5.1,1.4-6.8-0.7c-2.9-3.6-7.9-1.8-11-4.8c-0.6-0.5-3.2,0.4-3.8,1.8\n                        c-1.2,2.6-4.2,3.1-5.7,5.5c-1.7,2.8-5-0.7-6.2,0.9c-1.9,2.6-4.7,2.1-6.6,1.9c-2.3-0.3-3.1-3-2.6-5.6c1.2-1.3,0.9-2.2-0.6-3\n                        c-0.8-0.5-1.6-0.9-2.2-1.5c-0.8-0.9-1.4-2.1-0.5-3.1c0.8-0.9,1.8-0.6,2.5,0.4c0.2,0.3,0.4,0.8,0.6,0.7\n                        c0.6-0.2-0.2,0.7,0.1,0.1c0.1-0.2,0-0.3-0.3-0.4c-2.6-0.3-6.9-4.6-7.2-7.2c-0.2-1.9,4.8-8.7,6.7-9c1.7-0.3,2.4,0.8,2.9,2.1\n                        c0.6,1.4-0.8,3,0.7,4.2c0.1,0.6,0.1-0.2,0.3,0.4c0.2,0.6,0,1.1-0.1,1.7c0.1-0.1,0.2-0.4,0.3-0.8c0-0.3-0.1-0.7-0.3-0.9\n                        c-0.2-0.3-0.4-0.5-0.6-0.8c0.1-3,0.3-5.8,4.7-4.6c1.6,0.4,2.7-1.7,4.3-2.2c1.4-0.4,2.7-1.8,4.2-0.8c1.6,1.1,1.5,2.9,1,4.6\n                        c-0.3,1.1-0.6,2.2-0.2,3.4c0,0.7,0.3,0,0.3,0c-0.5-1.3-0.8-3.1,1-3.1c2.9,0,1.9,3,2.7,4.4c-0.4-4.1,1.9-6.4,4.7-4.4\n                        c1,0.7,1.6,1.7,1,3c-0.1,0.3-0.4,0.5-0.6,0.8c-0.9,1.1,0.3,0.8,0.7,1c1.7,0.8,0.8-0.5,0.8-1c0.1-1.5,0.8-2.5,2.2-3.1\n                        c-0.2-0.3,1.5-0.2,0.2-0.4c-2.8-0.3-1.9-1.5-1.1-3c3.1-6,3.9-6,8.8-1c0.5,0.5,1.1-0.9,1.8-1.2c0.4-0.2,0.8-0.4,1.3-0.5\n                        c2.3-0.2,4.6-2.3,7.1-0.4c0.4,0.3,1.2,0.4,1.2,0.7c-0.1,5.9,6.6,1.9,8.2,5.5c0.3,0.7,2,0.5,1.7-1.5c-0.5-3.3,0.6-3.9,3.7-2.5\n                        c1.2,0.6,2.3,1.4,3.1,2.5c1,1.3,2.1,1.4,3.4,0.8c0.7,0.2-0.2-0.9,0-0.2c0.1,0.3-0.1,0.4-0.4,0.2c-2.4-1.1-4.6-2.6-6.8-3.9\n                        c-1.6-0.9-2.8-2.4-1.5-4.5c2.1,2.5,5.3,0.3,7.7,2.1c5.3,4,10.2,3.4,16.1-1.2c3.8-3,8.2-0.5,9.2,5.1c-1.8,1.5-4.3-0.8-6.1,1.1\n                        c-0.6,0.5-1.5,0.3-2.1,0.8c0.7-0.5,1.8-0.3,2.4-1.1c2.1,0.7,4,0.7,5.8-0.8c2.8,1.6,3.7,2.6,4.1,4.6c1.6-4.3,8.5-2.6,8.5-9.8\n                        c1.8,4.8,4.2,6.1,7.5,6.1c0.4-2-1.5-1.5-2.3-2.7c2.6-0.1,4.7-1.2,6.2-3.2c0.8,1,0.8,2,0,3c-1.9,4.1,1.9,4.1,3.9,5.5\n                        c0.7,0.5,2.2,0.7,1.4,2C1012.9,444.9,1011.8,444.8,1010.6,444.8c-0.9-0.6-1,0.3-0.8-0.3c0-0.1,0.1,0,0.4,0.1\n                        c0.3,0.1,0.6,0.2,0.8,0.4C1010.8,444.7,1010.5,444.6,1010.6,444.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1149.6,378.5c-5.6-5.8-11.5-3.4-17.3-1c-4.9,2-4.8,4.2-0.3,9.5c-7.7-1-15.3-2-23-3\n                        c-0.9,0.9-2.1,1-3.2,0.7c-9.3-2.4-19.2-1.3-28.3-5c-0.6-0.3,0.5-2.7-1.7-1.2c-1.4,1-3.1,0.8-4.7,0.7c-0.7-0.1-1.4-0.3-2-0.8\n                        c0.4-3.9,3.8-7.1,6.9-6.7c0.3,0,0.4,0.7,1,0.2c3.1-2.7,3.2-2.7,5,2.1c0.2-4.1,2.7-4.7,5.2-5.4c2.4-0.7,4.7-1.9,7,0.3\n                        c0.9,1.1,1.7,2.3,1,3.9c-0.4,0.5-0.8,1-0.7,1.7c0,0.3,0,0.6-0.2,0.9c0.6-0.1,0.1-0.5,0.2-0.8c0.1-0.5,0.1-1,0.4-1.4\n                        c1-1.7,2.4-2.3,4-1c1.7,1.3,3.3,2.7,2.2,5.1c2-1.6-0.7-3.2-0.2-4.7c0.8-2.1,2.3-2.4,4.3-0.6c-0.6-1.7-2.4-2.5-2.5-4.1\n                        c2.9-2.6,8.9-3.8,11.7-1.7c3.4,2.5,7.4-0.5,10.8,1.7c0.3,0.2,3-1.4,1.4-3.7c-2.5-3.5-0.5-3.4,2.4-3c1.9,0.3,4.1,1.5,5.6-0.9\n                        c0.5-0.2,0.9-0.4,1.4-0.5c0.8-0.1,1.6-0.2,2.4-0.1c2,0.2,4.1,0.2,4,3.1c0,0.4,0.1,0.5,0.1,0.3c-0.3-2.8,1.6-3.3,3.7-3.4\n                        c1.9-0.1,3.5-0.6,5.1-1.5c2.9-0.9,5.8-0.4,8.7-0.6c6.6-0.2,13.1,0.6,19.6,1.4c0.7,0.3,1.4,0.5,1.5,1.6\n                        c0.1,1.2-3.1,1.3-1.2,2.6c1.7,1.2,2.3-1.1,3.2-2c0.3-0.3,0.7-0.6,1.2-0.9c1.5-0.5,3-0.6,4.5,0.3c0.5,0.4,0.5,0.9,0.2,1.4\n                        c-2.2,0.2-4.2,1.6-4.2,3.5c0,2.4,3.1,0.8,4.5,2c-0.2,1.6-2.1,1.5-2.7,2.7c-0.6,1.2-0.3,3.1,0.9,2.5c5.7-2.7,4.7,4.4,8.5,4.1\n                        c-0.2,0.4-0.4,0.9-0.6,1.3c-2.9-0.7-5.8-1.4-8.7-2.2c-2.8-0.8-4.7-3.1-4.9-5.5c-0.2-2.4-0.3-3.6-2.9-2.8\n                        c-1.3,0.4-3.5-1.6-3.9,0.6c-0.3,2,1.3,3.5,3.6,3.9c0.4,0.1,0.7,0.5,1.2,0.8c-1,1.5-2.2,2.5-3.7,1.3c-1.3-1.1-1.8-2.6-3.7-0.3\n                        c-2,2.5,0.2,2.9,1.4,4.2c-1.6,1.4-3.7,1.5-4.6,0.6c-2.2-2.1,0.2-4.4,1.4-7.2c-2.3,0.4-2.8,1.5-2.9,2.5\n                        c-0.6,4.6-2.8,4.3-5.4,1.6c-1.7,1.7,1.9,3-0.1,4.1c-1.9,1-2.5-0.6-2.9-2.2c-0.5,2.1-5.1-2.1-3.9,2.5c0.3,1-0.3,1.8-1.2,1.8\n                        C1152.1,381.6,1149.7,381.7,1149.6,378.5c0.2-0.3,0-0.1-0.2,0.2C1149.5,378.4,1150.1,378.6,1149.6,378.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1526"),
                d:
                  "M1077,379c10.7,1.7,21.3,3.3,32,5c1.6,1.8,1.9,4.1,2.4,6.4c0.2,0.9-1,2.7,0.7,2.9\n                        c2.5,0.3,2.3,1.9,1.3,3c-1.2,1.3-2.8,0.3-3.1-1c-0.6-3.6-3.3,0.8-4.6-1.5c-1.6-2.6-5.9-2.9-6.5-6.9c-0.2-1.1-1.6-2.2-3.4-1.7\n                        c0,2.4,2.5,3.6,2.9,5.8c-1.5,0.7-4.6-5.2-4.7,1.1c0,0.2-0.9,0.7-1.2,0.6c-4.2-1.6-9.7,0.6-12.7-4.2c-1.1-1.8-1.6,0.1-2.2,0.4\n                        c-3,1.4,1.2,2.3,0.1,3.9c-3.8-2.8-5.3,0.3-6.9,3.1l0,0c-1.9-0.6-2.8-1.6-1.3-3.5c0.6-0.8,1-1.9-0.7-2\n                        c-1.3-0.1-1.2,0.5-1.1,1.8c0.1,2.2-1.3,3.6-3.8,2.7c-7.4-1.5-14.9-2.2-22.3-3.4c-12.6-1.9-25.1-4.4-37.6-6.7\n                        c-0.6-0.5-0.8-1.1-0.9-1.8c-0.1-1.2-0.3-2.2-1.7-2.5c-1.8-0.3-2.6-1.7-3.1-3.3c-1.6-3.9-5.7-4.6-8.6-6.8\n                        c-1.5-1.1-3.8-1.4-4.1-3.8c0.2-1,0.7-1.9,1.6-2.4c1.9-0.7,3.5-0.3,4.8,1.3c3.8,3.7,9.4,2.7,13.9,4.9c3.3,1.6,7.2,2,10.4,4.3\n                        c1.8,1.3,3.4,0.1,5.1-0.2c7.5-1,15.2-2,22.5,1.3c0.3,0.1,0.3,0.6,0.3,0.9c-2.1,1.5-4.5,0.1-5.9,0.5c1.3-0.6,3.8,1.3,5.8-0.6\n                        c5.9-0.3,11.5,2.8,17.5,1.8c1.7-0.3,3.6,0.3,5.3,1.2c1.2,0.6,2.3,1.4,2.5,2.9c0.2,2.1-1.7,2.1-3,2.7c1.6-0.3,3.3-0.6,3.4-2.6\n                        c0.3-3.5,2.6-3.6,4.9-2.7c2,0.7,0.8-0.7,1-1.1C1076.3,378.6,1076.7,378.6,1077,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M930.9,436.8c-0.5,1.4-1.3,2.5-2.6,2.8c-0.2,0.1-3.7,0.7-1.1-1.9c1.3-1.3-0.3-1.2-0.9-0.9\n                        c-1.5,0.6-3.1-3.3-3.7-0.4c-0.5,2.3-2.2,3-3.4,4.7c2.4,0.3,4.3-0.6,6.7,0.6c-1.4,3.2-10.7,0.3-5.9,7.4\n                        c-1.9,0.4-1.7-2.6-3.5-1.4c-0.8,0.5-1.5,0.9-2-0.1c-0.5-1-0.4-2,0.8-2.4c1-0.4,1.9-1,1-2.1c-0.5-0.5-1.4-0.8-2.2-0.9\n                        c-1.1-0.1-1.9,0.6-2,1.7c-0.1,1.7,0,3.5-0.5,5.3c-1.1-2.2-0.5-4.9-2.5-6.9c-2.4,1.8,2,5.2-2.1,6.4c-0.1-2-0.4-4-0.3-5.9\n                        c0.1-1.6,0.9-4.2-0.3-4.6c-1.5-0.5-3.9,0.5-5.2,1.6c-1.6,1.3-1.7,3.6-4.8,1.2c-1.6-1.3-1.6,2.6-2.5,4.2l0,0\n                        c-1.1-0.1-2-0.5-1.9-1.8c0.2-1.5,0.7-3.6-1.2-3.4c-1.6,0.2-4.4,1.9-3.6,3.9c1.6,3.9-2.5,1.7-2.8,3c1.2,5.3,5.8,6.8,10,9.1\n                        c-1.9,1.8-3.1,0.4-4.3-0.5c-0.6-0.5-1.2-1.5-1.8-0.1c-0.2,0.5,0.4,1.2,0.6,1.8c-0.2,0.7-0.6,1.2-1.4,1.3\n                        c-1.1-3.6-3.6-0.2-5.3-1.1c-1.9-3.6,0.3-7.6-1.3-11.2c0-1.7,0-3.3,0-5c-0.6-4.4,1.2-5.8,5.8-6.2c11-1.2,21.9-3.4,32.8-5.1\n                        c8.8-1.3,17.6-2.5,26.4-3.7c1.7,2.1-0.4,3.4-1,5c-0.3,0.7-0.7,1.3-1,2c0.1,1-0.5,1.9-1.1,3.7c2.2-2.7,4.7-3,7.1-3.7\n                        c0.3,0,0.7,0,1,0c0.3,1.9,0.9,3.3,2.9,4.2c2.8,1.1,5.3,2.8,7.9,4.2c-2.9,2.9-5.4,2.5-7.8-1.2c-0.6-0.9-2.3-2.8-3.7-1.7\n                        c-2,1.7,0.9,1.6,1.4,2.4c0.9,1.2-0.5,1.3-1,1.7c-1,0.8-1.6,2.4-3.6,0.8c-2.4-1.9-5.2-4.7-8.5-1c-0.5,0.5-1.3,0.2-1.6-0.6\n                        c-0.6-2,0.8-2.9,2.5-3.9c-2.2,0-4.1-4-6.2,0.1C933.5,438.1,931.9,437.4,930.9,436.8c0.2,0.4,0.8,0.2,0.2,0.1\n                        c-0.4-0.1,0-0.9-0.2-1.3C930.7,436,930.6,436.3,930.9,436.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A131F"),
                d:
                  "M1252,381c6-1.5,11.9-3,17.8-4.5c-2.7-0.1-4.3-7.7-7.9-0.8c-1.8-1.9,0.7-2.9,0.1-4.7\n                        c-6.3,0.7-12.3-2.1-18.6-2c-1.4,0-2.2-0.6-2.4-2c1.6-1.7,3.6-1.1,5.6-0.9c9.8,1.2,19.6,2.1,29.3,3.7c0.6,0.1,1.1,0.2,1.7,0.3\n                        c4.2,0.6,8.4,0.9,12.6,1.6c2.1,0.3,4.8,0.5,5,3c0.2,2.8-2.8,2.7-4.7,3.2c-1.4,0.4-2.9,0.4-4.4,0.4c-1.6-0.2-3.1,0.6-4.8,0.3\n                        c-0.5-0.2-1-0.4-1.4-0.8c-5.2,2-10.8,0.5-16.2,1.9c-2.8,0.8-5.9,0.8-8.8,1.1C1254,381,1253,381,1252,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791629"),
                d:
                  "M955,424c11.2-1.5,22.5-2.9,33.7-4.5c3.4-0.5,6.8-1,10.3-1.6c0.8,0.4,1.9,1.1,1.3,1.7\n                        c-1.2,1.4-3.1,2.8-4.9,2.5c-7.4-1.6-14.6,0.7-21.8,1.5c-3.5,0.4-7.4,2.1-11,3.5C960.1,428.1,956.9,426.7,955,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1132,387c1.8-0.6,3.9,1.1,5.8-1.4c1.6-2.1,2.1,1.8,3.8,1.6c1.2-1.3-1.2-2.8,0.1-4.1\n                        c2.7,2.5,3.8,4.4,3.3,5.9C1140.6,389.1,1136.2,388.4,1132,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M950,433c-2.8,1.5-5.5,3.2-8.1,6.3c-0.3-3.2-0.1-5.1,2.1-6.3C946,433.1,948,432.2,950,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1289,434c-0.7-0.7-1.3-1.3-2-2c2.2-3.4,3.3,2.6,5.5-0.3C1291.9,434.7,1290.2,433.7,1289,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1287,432c-0.4,0.8-1.2,1-2,1c-1.3-1.6-3.7-2.1-4.5-5.2C1283,429.4,1285,430.7,1287,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M945,431c-1.2-2,1.9-3.1,1-5c0.3,0,0.7,0,1,0C949.8,429,946.7,429.7,945,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1143.6,422.2c-2.3-0.5-4.2,0.4-6.2-0.9C1139.9,419.2,1141.4,420.8,1143.6,422.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1278,432c-0.7,0-1.3,0-2,0c0.2-1-0.5-2.5,1.3-2.6c0.6,0,1.4,0.3,1.7,0.8\n                        C1279.6,431.1,1278.1,431.3,1278,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1025,434c1-0.3,2-0.7,3-1c1.1,1.9,0.5,3.6-1.4,3.9C1024.9,437.3,1024,435.9,1025,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M952.2,426.9c-0.3,0.7-0.9,1-1.6,0.8c-0.4-0.1-0.9-0.7-0.9-1c0.2-0.8,1-0.7,1.6-0.6\n                        C951.9,426.1,952.3,426.2,952.2,426.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M962.4,431.9c-0.6-0.1-0.9-0.5-0.6-1c0.4-0.5,1-0.8,1.5-1.2c0.2,0.4,0.6,0.7,0.5,1.1\n                        C963.8,431.6,963.1,431.9,962.4,431.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1150,422.3c-0.2,0.8-0.4,1.4-1.2,1.5c-0.7,0.1-1.5-0.1-1.2-0.9c0.1-0.4,0.9-0.6,1.5-0.8\n                        C1149.2,422,1150.1,421.5,1150,422.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1296.4,433.3c-0.3,0.4-0.7,1-1.2,1.2c-0.6,0.1-0.5-0.5-0.4-0.9c0.2-0.6,0.4-1.2,1.2-1.2\n                        C1296.2,432.4,1296.2,432.9,1296.4,433.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601120"),
                d:
                  "M1322,416c0.8,0.1,1.7,0.2,1.5,1.3c0,0.3-0.8,0.6-1.1,0.6C1321.1,417.5,1321.9,416.7,1322,416\n                        L1322,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1065.2,424.5c-0.3,0.2-0.6,0.4-0.8,0.4c-0.7,0-1.2-0.5-1.3-1.2c0-0.4,0-1.2,0.7-0.6\n                        C1064.4,423.4,1064.8,423.9,1065.2,424.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152F"),
                d:
                  "M241,365c0.3,1.2,2.4,2,1.5,3.3c-1.2,1.7-2.1-0.6-3.2-0.7c-0.8-0.1-1.9-0.3-1.6-1.3\n                        C238.1,364.7,239.7,365,241,365L241,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA9CA3"),
                d:
                  "M356,381c0.9-2.1,2.1-4.4-2.1-3.5c-0.7,0.2-1.6,0.1-1.7-0.5c-0.6-4.2-5.2-6.4-5.5-10.6\n                        c-0.2-3.8-4.8-2.6-5.7-5.4c-0.9-0.4-1.6-1.1-1.5-2.2c0.1-0.5,0.3-0.8,0.7-1.2c3.7,1.5,1.3-2.3,2.5-2.9c0.7-1,1.5-1.8,2.6-2.4\n                        c6-0.8,10.7-4.9,16.4-6.4c1.5-0.2,3-0.3,4.4,0.4c2.1,1.1,2.5,3.9,1,4.4c-4.1,1.4-6,7.1-11.4,5.8c-1.2-0.3-2.4-0.1-2.8,1.4\n                        c-0.3,1.1-0.3,2.5,0.5,3.3c1.2,1.2,2.9,0.6,3.6-0.3c2.6-3.6,6.4-1.5,9.6-2.4c1.3-0.3,2.6,0.8,3.1,2.1\n                        c1.8,4.5,4.4,8.4,7.6,12.1c1.4,1.6,2.3,4.2-0.2,6.2C370,379.7,363,380.3,356,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DDA1A8"),
                d:
                  "M377,379c0.6-3.5,0.1-6.1-3.5-8.3c-2.1-1.3-3.1-4.7-4.1-7.2c-2.2-5.3-2.6-5.4-6.3-0.9\n                        c-1.9-0.5,1-3.2-1.5-3.4c-1.4-0.1-1.9,0.9-2.6,1.9c-1.6,2.3-4.6,3.3-6.5,2.2c-2.2-1.3-1.3-4.7-1.2-7.1\n                        c0.1-1.9,2.5-1.4,3.8-1.1c2.8,0.6,5.3,1.1,6-2.8c0.2-1.2,1.4-1.2,2.4-1.3c1.5-0.1,3.3,0.2,3.2-2.1c-0.1-2.6-2.3-1.7-3.8-1.9\n                        c-0.3,0-0.7,0-1,0c-0.8-3.8,2-2.8,3.9-3c9.6,3.4,15.7,12.3,15.1,20.1c3.3-2,6.1-1.3,9.2,0.4c3,1.7,5.7,3.4,7.4,6.4\n                        c1.4,2.5,1.7,4.8-1.6,6c-3.8-0.3-7.2,1.9-11,2C382.3,379,379.7,379,377,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D38D94"),
                d:
                  "M339.8,358.7c0.4,0.8,0.8,1.5,1.2,2.3c-1,0.7-1.9,1.4-2.9,2.1c0,0-0.2-0.1-0.2-0.1\n                        C336.9,360.8,337.7,359.5,339.8,358.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("642028"),
                d:
                  "M339.8,358.7c-1.1,1.2-1.7,2.7-1.8,4.3c-2.1,2.1-2.3,5.4-4.9,7.1c-0.1-0.5-0.1-0.9-0.2-1.4\n                        c-1.1-1.4-0.5-2.7,0-4.1c1.2-2.2,1.9-4.6,3.1-6.8c0.6-1,0.8-2,1.1-3.1c0.3-0.9,0.8-1.6,1.7-2.1c0.5-0.1,0.9-0.1,1.4,0.1\n                        c0.5,0.5,0.7,1.2,0.8,1.9c0.1,0.7,0,1.4-0.2,2.1c-0.2,0.4-0.5,0.8-0.8,1.1C339.8,358.2,339.7,358.4,339.8,358.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851933"),
                d:
                  "M287,383.1c-0.3-0.4-0.7-0.7-1-1.1c-0.8-1.1-0.5-1.9,0.8-2.2c1.5-0.3,2.9,0.8,4.8,0.3\n                        c-0.2-2.1-1.7-4.8,2.8-4.8c3.2,0,1.7-4.5,3.3-6.5c2.4-2,4.9-3.2,8.2-2.8c1.9,0.2,3.5-0.7,5.2-1.4c1.4-0.6,2.6-1.6,4-1.9\n                        c2.5-0.5,6.2-2.5,7.4-0.5c1.7,2.8-2.6,3.8-4.1,5.6c-0.4,0.5-0.9,0.9-1.2,1.5c-0.5,0.8-1.1,1.6-1.8,2.2\n                        c-6.7,4.2-12.2,9.7-18.4,14.5C293.3,386,290.2,384.4,287,383.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE7C86"),
                d:
                  "M296.9,386c4.6-6.7,11.1-11.1,17.9-15.3c0.9,0.2,1.8-0.2,2.7-0.1c0.5,0.2,0.8,0.5,1,0.9\n                        c0.1,0.7,0,1.4-0.5,2c-1.7,1.2-2.8,2.6-2.6,4.9c0.1,1.9-0.2,3.9-1.5,5.6C308.6,387,302.9,387.7,296.9,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D18991"),
                d:
                  "M314,384c-3.8-0.8,2.4-2.6-0.4-3.5c1-2.8-0.7-7.1,4.4-7.5c3.2-0.3,5.8-0.8,5.8-5.3\n                        c0-3.6,5-4.7,10.1-2.7c-0.3,1.2-0.7,2.5-1,3.7c-4.2,3.4-6.9,8.4-11.6,11.3C318.9,381.5,316.8,383.4,314,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861630"),
                d:
                  "M262,377c-1.8-0.4-5.8,1.4-3.2-3.3c0.1-0.2,0-0.8-0.2-0.9c-8.5-3.5-2.8-10.6-4.2-15.9\n                        c-0.2-0.6-0.3-1.3-0.5-1.9c-2.6-3.3,0.8-3.8,2.4-4c3.4-0.5,6.8-0.4,10.1-2.1c2.1-1.1,4.1,0.6,5.3,2.6c0.4,1.2,0.4,2.4-0.1,3.6\n                        c-2.7,4.8,0.2,9.2,1.2,13.7c0.3,1.4,1.1,2.9,0.1,4.3C269.6,375.3,265.9,376.5,262,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3A51"),
                d:
                  "M272.9,373.1c-0.3-1.4-0.6-2.7-1-4.1c-0.3-1,0.3-1.2,1.1-1.3c2.6,1.4,2.3,4,2.9,6.4\n                        c0,2.5,3.2,3.4,3.1,5.9C276,378.6,274.9,375.4,272.9,373.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152E"),
                d:
                  "M298,369c0,1.8,0.5,3.9-0.2,5.4c-1,2.2-2.9,4-6.2,1.3c0.3,2.5,3.5,3.8,1.9,5.6\n                        c-1.5,1.7-3.7,0.6-5.5-0.3c-1.2-0.6-1.9-0.4-2,1c-3.3-0.7-4.6-3.4-6-6c-0.6-1.7,1-2.4,1.9-2.9c2-1.1,0.1-2,0.1-2.9\n                        c3.7-2.7,8.2-3.1,12.4-4.2C295.8,366.7,300.2,364,298,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F1423"),
                d:
                  "M275.9,374.1c-1.7-1.7-1.8-4.1-3-6c-2.5-4.1-3.7-8.3-2-13c0-1.4,0-2.7,0-4.1c-0.9-1.2-1.1-2.4-0.4-3.7\n                        c0.4-0.4,0.8-0.6,1.4-0.5c1.7,1.4,1,3.8,2,5.5c0.7,6.7,0.7,13.5,4.4,19.5c0,0.2,0,0.5,0,0.7c-0.1,0.2-0.2,0.4-0.4,0.6\n                        C277.1,373,276.4,373.3,275.9,374.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F1423"),
                d:
                  "M282,371c0.5,0,1,0,1.5,0.1c1.1,0.3,0.3,0.7,0.2,1.3c-0.5,1.9-2.3,2.6-3.6,3.6c-0.7-1-1.3-2-2-3l0,0\n                        c0.7-1.3,1.8-2.1,3.3-2.1C281.5,370.9,281.8,371,282,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA2230"),
                d:
                  "M439,377.2c0.6-0.4,1.3-0.8,1.9-1.2c1.4,0.4,2.7,0.7,4.1,1.1c-1.8,1.6-3.7,3-5.3,4.7\n                        c-1.5,1.6-1.8-0.6-2.7-0.7C437.7,379.7,438.3,378.4,439,377.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA2230"),
                d: "M433,383c0.6-1.3,1.6-2,3-2C435.9,383,434.5,383,433,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA454D"),
                d:
                  "M442,364.9c1.6,1.7,2.4,3.8,3.1,6c0.3,0.7,0.5,1.4,0.8,2.1c-0.6,0-1.2,0-1.8,0c-1.4-1-2.2-2.4-2.9-3.9\n                        c-0.3-1-0.3-2,0-2.9C441.3,365.6,441.6,365.2,442,364.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7828A"),
                d:
                  "M441.9,369c1,1.2,2.5,2.1,2.2,4c-0.5,0.9-0.9,1.9-2.1,2c-1.3-0.7,0.2-4.2-3-3\n                        C438.1,369.2,439.1,368.2,441.9,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D46776"),
                d:
                  "M547.7,385.8c1.1,0.3,2.2,0.6,3.3,0.9c-0.3,0.2-0.7,0.3-1,0.5c-4.5,2.3-9.1,3.2-13.8,0.7\n                        c-3-0.7-6.1-1.3-9.1-2c-2.8-0.4-5.7-0.6-6.5-4.2c0.3-0.8,1-1.2,1.9-1.2c7.3,2.7,14.7,4.5,22.5,4.4\n                        C546,384.7,546.9,385.1,547.7,385.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721524"),
                d:
                  "M536.2,387.8c4.6-0.2,9.2-0.4,13.8-0.7c-0.1,1.1,0,2.7-1.5,2.6c-3.9-0.2-7.6,2-11.5,1.2\n                        C539.1,389.4,535,389.3,536.2,387.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M503,387c-2.7,0-5.3,0-8,0c-4.7,2-9-0.3-13.3-1.6c-1.3-0.4-3.2-0.7-3-2.7c0.2-1.7,1.8-2.5,3.3-2.6\n                        c4.7-0.2,8.9-2.7,13.5-2.9c0.5-0.2,1-0.2,1.6-0.3c1.3-0.1,2.6-0.1,3.9,0.4c1.4,0.6,2.6,1.5,3.5,2.7c0.6,0.8,1.2,1.7,0.6,2.7\n                        c-0.8,1.2-1.9,1.4-3.2,0.9c2.3,1.5,5,0.9,7.5,1.1c2.6,0.2,5.4-0.7,7.6,1.3C512.5,388.1,507.7,386.5,503,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D1420"),
                d:
                  "M517,386c-3.7,0-7.3-0.2-11,0.1c-2.6,0.2-4.6-0.6-6.1-2.9c1.5-0.1,2.9-0.3,4.5-0.4\n                        c0-2.6-2.3-3.2-3.3-4.7c0.5-0.7,1.2-1,2-1.1c2.5-0.4,5.1,0.1,7.5-0.7c1.7-0.4,3.3-1.1,5.1-0.8c2.5,1.6,4.2,3.9,5.2,6.7\n                        c2.1,1.2,4.2,2.5,6.3,3.7C523.8,387.9,520.4,384.9,517,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841820"),
                d:
                  "M496,378c-5.5,1.4-11.1,2.9-17.6,4.6c6.1,2.1,10.8,5.2,16.6,4.4c-1.1,1.4-2.6,0.8-4,1\n                        c-3.2,2.1-6.8,1.8-10.2,1.2c-2.5-0.5-4.9-0.7-7.4-0.7c-1.8-0.2-4-0.4-4.3-2.4c-0.4-2.6,2.4-3.5,3.9-5.1c0.6-1.3,1.6-2,3-2\n                        c2-1.8,4.5-1.4,6.9-1.4c2.8,0.2,5.4-1.1,8.1-1C492.8,376.7,494.6,376.5,496,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1F2E"),
                d:
                  "M472,388c6.3,0,12.7,0,19,0c-1.3,4.6-5.9,4.2-9,6c-4.4-0.6-8.6,1.1-13,1c1.9-1.4,4.3-1.4,6.5-2\n                        c1.1-0.3,3.1,0.7,2.7-1.4c-0.1-0.8-0.2-3.3-2.8-2.7c-2,0.4-4.3,0.1-6.4,0C469.4,386.6,470.7,387.5,472,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911925"),
                d:
                  "M511,333c1.3-3.6-0.1-5.3-3.7-4.1c-2.3,0.7-5.1-1.7-7.2,2c-0.8,1.5-1.7-2.2-2.8-3.6\n                        c-2.4,1-0.1,4.2-2.5,4.8c-0.8-4.8-0.8-3.7-7.5-4.1c-4.6-0.3-8.8,1.2-13.2,0.9c-1.2-1.7,0.2-2.2,1.2-2.9\n                        c-1.9-0.1-4.3,0.4-5.3-2.3c0.6-2.3,2.8-2,4.4-2.8c6.6-1.4,13-3.3,19.8-3.1c8.1,1.9,16.3,2.9,24.7,1.5c1-0.2,2-0.4,2.9-0.2\n                        c8.9,1.9,17.7,1.3,26.4-1c1-0.2,2-0.1,2.8,0.6c0.6,1.7-0.8,2.2-1.8,3c-2,1.1-4,2.2-6.4,2.4c-6.2-1-10.4,3.7-15.6,5.6\n                        C521.3,328.4,516.4,332,511,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1621"),
                d:
                  "M469,355c1.4-3.8,1.2-9.1,7.7-8.1c1.4,0.2,5-3.7,5.9-4.7c1.2-1.5,3.2-0.7,4.8-0.6\n                        c1.1,0.1,1.9,1.8,3.6,1.1c-0.1-1.5-2-2.8-0.7-4.9c1.9,1.6,3.9,6.7,5.8,0c0.2-0.6,5.3-0.5,7.9,1.1c-0.4,1.2-1.1,2.3-1.7,3.4\n                        c-0.6,0.7-1.4,1.1-2.4,1.1c-0.9,2-1.2-4.8-2.4-0.2c-0.3,1.3-1.4,2.2-2.3,3.1c-1.5,1.1-3.4,1.7-5.4,2.5\n                        c2.3-0.5,4.4-0.9,6.5-0.8c4.4-1,8.9-0.5,13.2,0.1c4.2,0.5,7.4-0.7,10.3-3.4c2-1.9,4.4-3.4,6.9-4.6c2.8-0.7,5.4-2.9,8.6-1.9\n                        c1,0.5,1,1.5,1,2.4c-0.2,1.7,2.2,2.4,1.6,4.2c-2.5,1.8-5.5,1.8-8.4,1.7c-0.8-2.4-1-2.6-2.9-1.2c-1.8,1.3-4.2,2.2-3.4,5.2\n                        c-0.4,1.6-1.4,2.6-2.9,3.2c-4.9,1.4-10.1-0.5-14.9,1.3c-0.5,0.2-1,0.2-1.6,0.1c-4.7-1.6-9.5-1-14.2-0.2c-1,0.1-2,0.2-2.9,0.3\n                        c-1.2,0.1-2.3,0.5-3.5,0.1c-1.6-2-3.4-2.3-5.3-0.4c-1.4,0.8-2.8,1.1-4.4,1.2C471.9,356.3,470.2,356.4,469,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1824"),
                d:
                  "M470,324c2.5,1.7,5.4,0.6,8.1,1.3c-0.1,2.8-4.4,0.7-4.1,3.7c-3,0.3-6.4-1.1-8.5,2.4\n                        c-0.4,0.7-1.5,0.6-2-0.3c-2.6-4.2-5.4-2.8-7.9-0.1c-1.8,1.9-4.2,1.5-6.3,1.8c-2.3,0.3-4.6,0-7,0.1c-1.1,0-2.6-0.5-2.8,1.2\n                        c-0.1,1.2,0.5,2.5,1.7,2.8c3.8,1,3.1,4.2,3.9,7.3c-4.2-1.8-6.9-4.1-7.7-8.4c-0.3-1.5-1.3-3.4-3.3-3.8\n                        c-0.3-0.4-0.3-0.9-0.1-1.4c3.7-2,7.8-2.8,11.8-3.5c5.1-0.8,10-2.4,15.2-3c1.2-0.3,2.4-0.4,3.6-0.4c1.6,0.1,3.2-0.1,4.8,0.1\n                        C469.5,323.9,469.8,323.9,470,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871820"),
                d:
                  "M502,342c0-1.5,0-2.9,2-3c1.8-0.2,2.4-2.6,4.8-2.2c2.7,0.4,2-2.2,2.2-3.8c4.7-3.7,9.9-5.9,16-4\n                        c0.6,0.6,0.7,1.3,0.4,2.1c-2.2,2.6-5.6,3.1-8.2,5c-4.1,1.8-8.3,3.3-12.2,5.6C505.5,342.6,503.8,343.5,502,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF2030"),
                d:
                  "M451,370c-1.2-0.7-1-1.9-1-3c4.2-3.2,9.5-4.3,14-7c2.1-2.6,5.1-3.4,8.2-3.8c1.4,0.2,2.4,0.8,2.2,2.4\n                        c-5.4,3.8-11.8,5.7-16.8,10.2c-0.6,0.5-1.7,0.6-2,1.4C453.9,375.6,452.5,371.9,451,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86181D"),
                d:
                  "M472,357c-2.7,1-5.3,2-8,3c-1.7-4.9-1.7-5,5-5c1.7,0,3.4,0,5,0C474.5,356.9,472.5,356.1,472,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A64450"),
                d:
                  "M434,331c0,0.3,0,0.7,0.1,1c2.2,7.3,6,14,8.8,21c-0.3,0.4-0.4,1-1,1.1c-3.3-7.4-6.7-14.7-10-22.1\n                        c0.1-0.2,0.1-0.4,0.2-0.6c0.2-0.3,0.5-0.6,0.9-0.8C433.3,330.7,433.7,330.7,434,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1525C"),
                d:
                  "M441.9,354.1c0.3-0.4,0.7-0.7,1-1.1c0.6,3.7,4.8,6.3,3.3,10.7C444.6,360.6,442.8,357.6,441.9,354.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751E20"),
                d:
                  "M425.9,322c0.4-0.5,0.9-1,1.3-1.4c0.8,0.1,1.3,0.6,1.8,1.2c1.6,3.2,3.8,6.3,3.2,10.2\n                        c0,0-0.4,0.1-0.4,0.1c-0.3,0.7-0.6,1.4-0.9,2.1c-2,0-2-1.9-2.8-3C427.1,328.1,424.5,325.5,425.9,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C86770"),
                d:
                  "M429,331c0.6,1.1,1.3,2.1,1.9,3.2c1.6,4.3,3.3,8.6,4.9,12.9c-0.4,0-0.8,0.1-1.2,0.1\n                        c-0.5,0.2-0.9,0.1-1.3-0.2c-2.7-3.8-3.5-8.5-5.9-12.5c-0.2-0.7-0.2-1.4,0-2.1C427.8,331.6,428.3,331.1,429,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941A1B"),
                d:
                  "M472,388c-1.1,0-2.3-0.2-3,1c-1.3,0-2.6,0.1-4,0.1c-1.7,0-3.4,0-5-0.1c3.7-3.7,8.8-5.2,13-8\n                        c0,1.1-0.6,1.8-1.5,2.4C469.1,385.2,470,386.7,472,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE1A24"),
                d:
                  "M451,370c1.5-0.1,1.8,1.1,2.2,1.9c5.6-6.4,12.3-11.1,20.8-12.9c4.4-1.5,5.4-1.1,6.3,3\n                        c0.3,1.4,0.3,2.8,1.5,4.1c1.8,1.9,3.8,4.1,2.2,7c-1.6,2.9-6.7,4.8-10,4c-1.7,1-3.3,2-5,3c-1.6-0.5-3.1-1.2-4.5-2.1\n                        c-1.3-0.8-2.7-1.9-1.6-3.6c1.1-1.7,2.6-0.7,3.9,0.2c0.6,0.4,1,0.8,1.6,1.4c-0.6-0.8-1.4-1.4-2.1-2.1c-1.4-1.2-2.1-4.1-4.4-3.4\n                        c-2.5,0.8-0.1,3-0.3,4.6c-0.3,2.3-1.8,3.1-3.6,4c-0.6-2-1.9-2.8-3.9-2C452.9,374.7,451.5,372.6,451,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A31D2A"),
                d:
                  "M474,377c4.7,1.6,5.4-5,9.5-5c0.2,0-0.9-3.3-2.1-4.6c-1.2-1.2-2.6-2.2-2.3-4.1c0.6-4.2-1.8-4.7-5-4.4\n                        c0-1.3-0.7-1.9-2-2c0.7-0.7,1.3-1.3,2-2c1.4,0.1,2.7-0.3,4-1c1.8-0.4,3.5-0.1,5,1c1.1-0.3,2.1-0.5,3.2-0.8\n                        c0.4,0.6,0.3,1.2,0,1.8c-1.2,1.2-2.9,1.7-3.4,3.5c-1.6,5,2.6,6.9,5,9.9c0.1,0.7,0.2-0.2,0.2,0.4c0.1,1.8,0.8,2.7,2.4,3.3\n                        c0.9,3,0,4.5-3.3,4.6c-1.3,0.1-2.9,0-4,1.3c-2.3,0-4.7,0-7,0C475.3,378.3,474.7,377.7,474,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B61A27"),
                d:
                  "M458,379c1.9-2.7,3.5-5.3,1-8.6c-0.8-1,0.7-1.9,0.8-1.7c1.4,1.8,3.4-1.4,5.1,1c1.7,2.5,2.6,6,6.8,6.6\n                        c-3.6,1.9-5.1-2.7-8.2-1.7c0,3.8,5.3,2,5.5,5.4c-1.8,1.1-3.9,1.9-5.3,3.4c-2.3,2.5-3.5-0.4-5.1-0.8\n                        C456.6,382.1,457.3,380.4,458,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8999F"),
                d:
                  "M438,358c0,0.3,0,0.7,0,1c1.2,2.5-0.7,2.6-2.3,2.8c-1.8-0.2-2.6-1.5-2.9-3c-1.1-4.2-3.7-7-7.4-8.9\n                        c-0.4-0.3-0.7-0.6-0.9-1c-0.5-1.7-1.5-3-3.5-3.1c-0.4-0.1-0.8-0.3-1.2-0.6c-2.4-1.8-3.8-4.3-5.1-6.9c0-1.4-0.7-2.5-1.4-3.6\n                        c-0.3-0.9-0.2-1.8,0.3-2.6c2.3-0.7,3.7,0.9,5.4,1.9c0.2,0.4,0.3,0.8,0.3,1.3c0.4,4,3.6,5.6,6.6,7.2c2.8,1.4,5.6,2.7,7.5,5.3\n                        c0.8,2.1,2.3,3.9,3,6.1C436.6,355.4,438.7,356.2,438,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0939A"),
                d:
                  "M435,361c1.4,0,2.9,0.1,3-2c0.3,0,0.5,0,0.8-0.1c1.2,2.3,2.4,4.7,3.1,7.2c0,0.9,0,1.8,0,2.8\n                        c-1.9,0.1-2.8,1.2-2.9,3c-2.7-1.3-3.9,1.7-6,2c-1.6,0.1-1.7-1.4-1.2-1.8c3.4-2,2.1-4.9,1.9-7.7C433.7,363.3,433.9,362,435,361\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E343D"),
                d:
                  "M435.9,354c-1.1-1.9-2.2-3.9-3.3-5.8c0.2-0.7,0.7-1.1,1.4-1.3c0.2,0.1,0.5,0.1,0.7,0.2\n                        c0.8,2.3,1.6,4.6,2.4,6.9C436.8,354.4,436.3,354.4,435.9,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD5B61"),
                d:
                  "M441.8,366.2c-1.5-2.2-2.9-4.5-3.1-7.2c2.1,1.4,2.7,3.6,3.3,5.9C442,365.3,441.9,365.8,441.8,366.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB5860"),
                d:
                  "M435.9,354c0.4,0,0.8,0,1.2,0c0.8,1.2,2.6,2.3,0.8,4C437.3,356.7,436.6,355.4,435.9,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1ACB1"),
                d:
                  "M420,345c0.3,0,0.7,0,1,0c1.8,0.8,2.9,2.5,4,4l0,0c0.3,2.6,0.7,5.2-0.6,7.7c-1.1,2-0.5,3.9,0.3,5.7\n                        c2.1,4.9,1.3,9.3-1.7,13.5c-7,0.3-14,0.7-21,1c2.1-4.8,0.2-11-4.3-14.4c-3.8-2.8-6.9-6-8.6-10.9c-1.3-3.9-4.5-7.4-9.5-7.7\n                        c-0.3-0.4-0.5-0.9-0.6-1.4c-0.1-3.4,1-5.4,4.7-3.5c3.6,1.8,7.2-1,10.7,0.1c4.7,3.1,4,8.4,4.9,12.9c0.9,4.1,2.2,7.4,7.4,6.7\n                        c1-0.1,1.9,0.7,2.8,0.8c1.7,0.2,2.7,3.4,5.3,0.8c2.5-2.5,4.7-5,3.6-8.6c-0.8-2.6-0.5-4.5,1-6.5\n                        C419.6,345.3,419.8,345.1,420,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA7AD"),
                d:
                  "M380,344c3.7-1.2,5.4,0,7.9,3.4c2.1,2.9,2.6,6.2,4.6,8.9c2.5,3.5,6.2,5.3,9.4,7.7\n                        c0.8,0.6,1.1,1.3,1,2.1c-0.8,3.5,1.5,5.7,3.6,8.1c-1.5,1.2-3.9,0.5-4.5,2.7c-2-0.7-4,2.3-6,0c2.1-2.2,1.8-4.1,0.1-6.5\n                        c-1.9-2.7-5.1-3.4-7.3-5.3c-3.4-3-5.8-0.3-8.6,0.6c-0.5,0.2-1.2-0.1-1.9-0.2c2.5-4,0.1-13.4-4.3-15.6\n                        c-2.7-1.3-4.5-3.5-7.1-4.9c0.3-0.4,0.6-0.7,1-1C372,341.2,376,344,380,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA4AA"),
                d:
                  "M423,376c1.9-5.6,1.8-10.8-0.4-16.6c-1-2.8,1.5-6.9,2.4-10.4c6.7,1.2,7.9,7,10,12\n                        c0.4,2.7-0.8,5.5,1,8.1c1,1.5-1,1.6-1.7,2.3c-0.8,0.7-2.9,0.8-1.2,2.6c-0.7,1-1.4,2-2,3C428.5,375,425.6,376.4,423,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M412,266c-1.5,0-2.7,0.7-4.6-0.3c-5.1-2.9-10.5-5.4-16.7-2.5c-1.4,0.6-3.7,0.1-5.1-1.3\n                        c-0.6-0.6-1.6-1.8-0.7-2.6c3.6-3.2-1.5-5.5-0.6-8.4c-0.9-0.3-1.8-0.5-3.3-0.9c5-2.6,9.2-5.2,10.6-11c0.4-1.7,5.4-2.8,8.4-3.2\n                        c4.5-0.6,8-2.1,10.6-5.9c1.4-2,2.4-4.6,5.7-2.2c1.3,0.9,3.7-0.4,3.6-1.6c-0.6-5,3.1-2.6,5-3.2c1.2,1.9,4,3.1,2.3,6.2\n                        c-1.1,1.9-1.9,4.4-4.6,1.9c-1.6-1.4-2.3-0.1-3.2,0.7c-2.5,2.2-4.3,5.1-5.7,7.8c-1.5,2.8-2.9,1.8-4.8,1.5c0,1.6,1.2,2.7,1.6,4\n                        c0.5,1.7,0.6,3.4-1.1,4.4c-1.3,0.8-3,1.9-4-0.7c-0.1-0.3-1,1.1-1.8,0.6c-0.5-0.4,0.2,0.2-0.3-0.2c0.1,0.1,0.2,0.1,0.3,0.2\n                        c1.4,1.2,3.1,1.9,4.7,2.7c1.5,0.7,1.9,2.3,1.3,3.9c-0.8,2-2.2,2.1-3.9,0.8c0.4,4.2,4.3,3.8,6.8,5.2c1.1,0.6,2.7,1.2,2.4,2.7\n                        C414.7,266.1,413.2,266,412,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M403,249c1.2,0.4,2.8-3.8,3.7,0.3c0.9-0.3,2.1-0.3,2.7-0.9c1-0.9,0.7-2.2,0-3.2\n                        c-1.2-1.9-3-3.6-2.2-6.2c2.3-1,2.7,2.5,5.2,1.6c-2-3,1.8-3.3,2-4.2c1.3-3.7,4.5-5.3,6.5-7.9c0.3-0.4,0.8-0.5,1.2-0.8\n                        c1.5,0.8,0,3.8,2.5,3.6c1.4-0.1,1.1-1.8,1.6-2.9c0.8-1.8,0.8-2.9-1.7-3.5c-1.9-0.4,0.5-1.2,0.3-1.9c3.6-2.2,4.3-2.1,6.9,1.5\n                        c0.3,0.4,1.4,0.3,2.1,0.5c-1.7,3.3-3.9,6.3-3.2,10.6c0.7,3.9-3.1,0.4-4.4,2.3c4.1,2.6-1.7,6.1,1.1,9.4\n                        c-6.1-2.4-4.9,4.2-4.8,4.9c0.4,3.9-1,8.4,2.3,11.8c0.5,1.8-1.6,1.1-2,2c-2.8-0.5-5.3,0.9-8,1c-1.1,0-2.1-0.3-3-1l0,0\n                        c0.7-0.6,1.5-1.1,2.3-1.7c-1.8-1-3.4-2.4-5.5-2.2c-4.7,0.3-3.2-4.3-5-6.2c0,0,0.7-0.9,1.2-1.3c0.6-0.4,1.3-0.5,1.7,0.3\n                        c0.4,0.7-0.5,2.3,1.3,1.9c1-0.2,1.1-1.1,1.1-2c-0.1-1.2-0.4-2.4-2-2.2C404,253.1,404.1,250.5,403,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4687A"),
                d:
                  "M437.2,221.3c-0.2,1.5-0.4,3-2.1,3.7c-0.4,0-0.7,0-1.1,0c0.3-1,0.6-2,1-3c-0.5-1.1-0.8-2.1,1-2\n                        c0.3,0,0.7,0,1,0C437.1,220.4,437.1,220.9,437.2,221.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M431,215c6.7,1.3-2.1,3.4,0,4.2C431,218.3,431,216.6,431,215L431,215z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M436,220c-0.8,0.4-1,1.2-1,2c-2.5-0.6-0.8-2.4-1-3.7C435.1,218.3,435.5,219.1,436,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d: "M412,266c1.1,0,2.3-0.2,3,1C413.3,268.8,412.8,267.1,412,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M367.6,246.3c-0.7-0.1-1.4-1.2-1.2-1.7c0.6-1.6,2.5-1.4,3.8-2.1c0.9-0.4,2,1.5,1.6,1.9\n                        C370.7,245.3,369.2,245.6,367.6,246.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3341"),
                d:
                  "M774,583c-5,2-8.5,5-7.5,11.1c0.1,0.8-1.6,0.9-2.6,0.9c-2.5,0-5,0.2-7.4,0c-3.8-0.3-6.1,0.4-5.5,5\n                        c0.3,1.9,0,3.5-2.6,1.8c-0.9-0.6-2.2-0.5-3.3-0.7c-2.3,0-4.7,0-7,0c-3.4-5.6-6.7-11.2-14.9-10.1c-3.2,0.4-5.1-2.4-6.3-6.1\n                        c-0.6-1.8-4.2-1.4-5.4-3.6c-3.5,2.3-6.1-0.5-9.1-1.6c-0.9-0.4-2.2,0.3-3.3,0.5c-1.8-3.2-5.9-5.9-2.2-10.3\n                        c4.5,2.3,9.3,4.1,14.9,3c2.4-0.5,5.4,1.3,7.3-1.7c1.3,0,2.7,0,4,0c5.8-0.2,11.7-0.5,17.2,2.3c0.5,0.5-1.3,0.8-0.2,1.2\n                        c7.4,2.7,14.6,5.9,22.8,5.3C766.7,579.5,770.5,581.2,774,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44550"),
                d:
                  "M1723,350c-1.3,0-2.7,0-4,0c-2,1-4.1,0.2-6.2,0.5c-2.5-2.8,0.8-1.8,1.4-2.5c-2-0.8-3.2,2.3-5.4,1.5\n                        c-2.3-1.3-4.8-1.2-7.2-1.2c-3.3,0-6.5-0.2-9.3-2.5c-2.2-1.8-5.5,0.4-8-1.3c-1.1-0.8-3.5-0.3-3.2-2.4c0.3-1.9,2.2-2.4,4.1-1.8\n                        c-3-0.6-6.9,0.7-8-3.8c-0.2-2.2,1-3,3-3c2.3,0.1,4.7,0.1,7,0.1c2.8-0.1,5.9,1.1,8.2-1.5c6,0.5,12.2-1.2,18.1,1.3\n                        c2.4,1,4.1,2.4,1,4.9c2.8-1,4.9,0.3,6.9,2c1.4,1.6,3.3,1.4,5.1,1.2c1.9-0.2,3.8-0.5,4.7,1.7c0.8,1.9-1,2.6-2.1,3.6\n                        c-0.7,0.7-1.2,1.6-1.9,2.3C1726,350,1724.3,348.9,1723,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24450"),
                d:
                  "M1595,316c7.3,1.4,14.3,4,22.1,4.2c4.3,0.1,10.3-1.8,13.3,4.3c0.4,0.9,2.3,1.1,3.6,1.5\n                        c1.2,0.3,3-0.3,2.8,1.8c-0.2,1.5-1.8,1.8-3,2.1c-0.9,0.2-2.7-1.1-2.5,1.1c0.2,2.8,1.9,0.4,2.6,0.7c2.1,1,3.8,1.9,5.3-0.7\n                        c0-0.1,0.8,2.9,3,2.1c-0.1,2-1.5,1.8-2.8,1.7c-2.9-0.3-5.9-0.2-8.8-0.1c-5.9-0.3-12,0.6-17.1-4.2c-1.3-1.2-5-2.6-7.9-0.4\n                        c-1.4,1.1-3.3,0.5-3.6-1.1c-0.6-3-3.8-4-4.6-6.9c-0.5-2-2.6-1.7-4.3-1.7c-3.7-0.1-7.2-0.7-10-3.5c-0.1-0.5,0.1-0.9,0.5-1.3\n                        c1.4-0.8,2.8-0.7,4.3-0.4c2,0.7,4,0.7,6.1,0.4C1594.2,315.5,1594.6,315.7,1595,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33C46"),
                d:
                  "M1636.9,313.1c4.9-0.1,9.8,0.8,14.6,1.9c1.1,0.3,2.4,1.6,3.5,0c0.3,0,0.6,0,1,0.1\n                        c1.1,0.3-0.7,2.3,1.5,2.3c3.1-0.1,6.1,1.5,9.2,1.6c8.9,0.3,17.1,4.1,25.9,4.9c1.7,0.1,3.4,0.5,4.2,2.2c0.8,1.7-0.9,2.2-1.9,3\n                        c-6.5,1.9-13-0.9-19.6,0.5c-2.2,0.5-5.1-1.4-7.4-2.5c-2.4-1.2-4.8-2.2-7.6-2c-2.4,0.2-4.4-1.4-6.4-2.1c-3-1.1-5.6-3.9-9-3.8\n                        c-5.8,0.2-11.6-0.6-17.3-1c-1-0.1-2.5,1-2.6-1.1c-0.1-1.5,1-2,2.3-2C1630.7,315,1634,314.9,1636.9,313.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43740"),
                d:
                  "M1695,329c1.9-2.1,1.3-4-1.4-3.8c-4.1,0.3-7.7-2.1-12-1.4c-3.3,0.6-5.4-3.9-9.4-3.2\n                        c-5.2,0.9-10-1.9-15-2.3c-3.7-0.3-1.5-2-1.3-3.3c5,0.1,9.9,1.6,15,1c19.9,5.5,40.3,9,60.1,14.9\n                        C1719,331.1,1707,329.6,1695,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD4651"),
                d:
                  "M1727,349c0.2-1.5-0.6-3.5,1.8-4c1-0.2,2.2-0.4,1.5-1.8c-0.5-1.1-1.5-0.7-2.6-0.7\n                        c-2.4,0.2-5.3,2.2-6.8-1.5c6.3-3.9,13.7-4.6,20.1-2.5c5.7,1.9,11.3,3.1,17.2,3c2.5,0,2.7,4.4,5.7,2.5c0.9-0.3,0.7-3.6,2.3-1.3\n                        c1.2,1.7,2.1,2.3,3.9,1.8c1.1-0.3,2.2,0,2.3,1.2c0.1,1.9-1.5,1.4-2.5,1.4c-4.6,0.1-9.2,0.4-13.8,0.9\n                        c-8.7,0.9-17.4,0.8-26.2,1.2C1729,349.7,1728,349.7,1727,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA434D"),
                d:
                  "M1764,344c-1.6,0.9-3.3,2.7-4.2-0.9c-0.2-0.8-1.9-1.3-3-0.3c-1.4,1.4-2.8-0.2-3.9,0\n                        c-7.7,1.1-13.7-5.8-21.6-4c-3.4,0.8-6.5,3.5-10.3,2.2c-2.8-1.8-5.8-3-9.3-1.5c1.3-1.1,2.7-2.2,4.2-3.5\n                        c-6.4-4.3-13.3-2.4-19.9-3c-0.5-0.6-1.6-0.8-1-2c9.2-0.2,18.5-0.5,27.5,1.6c3.1,0.7,7.8-0.8,9.3,4c0.1,0.2,1.2,0.2,1.7,0.1\n                        c9.7-1.8,18,3.8,27.3,4.6C1762.2,341.4,1762,344.1,1764,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D34855"),
                d:
                  "M1695,331c0.3,0.7,0.7,1.3,1,2c-4.8,3.4-10.3,1.8-15.4,1.8c-2,0-2.8,0.2-2.6,2.2\n                        c-5.1,2.8-10.8,1.7-16,1.9c-6.4,0.2-12.8-1.4-19.3-0.6c-1.6,0.2-3.3,0-4.6-1.3c-2-4.1-5.2-2-7.7-1.1c-1.6,0.6-2,0.7-2.3-0.9\n                        c0.1-0.6,0.7-0.6,1-1c4.3-0.6,8.8,1.2,13-1C1659.7,332.8,1677.3,330.7,1695,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74854"),
                d:
                  "M1588,316c-1.7,0-3.3,0-5,0c-0.2-1.9,1.1-1.6,2.3-1.6c1.8,0.1,3.6,0.2,5.3-0.2\n                        c-10.6,0.6-21.2,0.7-31.9,0c-1-0.1-1.9-0.4-2.6-1.2c-3.4,0-6.7,0-10.1-0.1c0.9-0.9,2.1-0.8,3.3-0.8c23.6,0,47.2,0,70.8-0.1\n                        c1,0.5,1.9,1,3.4,1.7c-9.8,0.8-19.1,1.5-28.4,2.2c-0.3,0-0.7,0-1,0C1592,316.8,1590,316.8,1588,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434E"),
                d:
                  "M1712,350c2.3,0,4.7,0,7,0c-2.5,2-5.3,0.6-8,1l0,0C1710.8,350.1,1711.1,349.7,1712,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434E"),
                d:
                  "M1727,349c1,0,2,0,3,0c-2.1,1.9-4.7,0.6-7,1C1724.1,348.5,1725.6,349.2,1727,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D1925"),
                d:
                  "M1879,339c-0.9-1.6-3.1-0.4-4-2c7.9,1.1,15.7,2.1,23.6,3.3c1.7,0.2,1.7,0.4,3.7-2.7\n                        c-4.9-1.1-10-1.6-14.3-4.6c5.1-0.8,9.8,1.3,14.5,2.4c8,1.9,15.8,4.4,23.6,6.8c0.6,0.2,4.2-0.3,1.6,2.6c-0.3,0.3,1,0.9,1.9,0.8\n                        c2.1-0.3,4.2-0.4,6.3-0.6c1,0,2,0,3,0c-2.7,2.7-7.6,0.3-9.9,4.1c-2-3.5-4.1,0-6.1-0.1c-6.7-0.2-12.8-3.2-19.4-4.2\n                        C1895.3,343.5,1887.2,341,1879,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B04E5A"),
                d:
                  "M1936,359c-2.4-1.5-5.2-1.7-8.1-2.2c1.5-1.5,3.3-1.7,5.1-1.8c4,1,8,2.1,11.9,3.1\n                        c1.4,0.5,2.9,0.8,4.1,1.8c0.3,0,0.6,0.1,0.9,0.1c0.3,0.9,0.9,1.9-1,1.5C1944.7,360.6,1940.3,359.8,1936,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1828,329c1,0.7,2,1.3,3,2c-2.2,0.2-4.2-0.3-6.1-1.4C1825.8,328.5,1827,329.2,1828,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91343D"),
                d:
                  "M1949,359.9c-1.6,0-3-0.7-4.1-1.8c1.5-0.3,2.8,0.2,4.1,0.9C1949,359.3,1949,359.6,1949,359.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1833,339c-3.1-1.6-7.3,0.2-10-3c3.6-1.4,6.8,0.7,10.1,1.3C1833.2,337.3,1833.1,338.4,1833,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1839,340c-2.1,0.4-4.2,0.3-6-1C1834.8,340.3,1837.6,336.2,1839,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0636D"),
                d:
                  "M1476,322c-4.3,0.6-8.8-1.2-13,1c-8.1-0.4-16.2,1.6-24.2,1.2c-11.3-0.6-22.2,1.4-33.4,1.9\n                        c-5.6,0.3-11.1,1.2-16.6-0.5c-1.6-0.5-2.8-0.7-2.8-2.6c14.7-0.8,29.3-2.1,44-2c2.7,1,5.2-0.3,7.7-0.5\n                        c11.7-1.2,23.5,0.6,35.2-1.3C1474.6,318.9,1476.9,319,1476,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7545C"),
                d:
                  "M1556,313c12,0,24,0,36.9,0c-3.2,3.6-7.4,0.4-9.9,3l0,0c-1.4,1.5-3.3,1.7-5,1.4\n                        c-3.3-0.5-6.7,0.1-10-0.4c-10,0.3-20,0.7-30,1c-2.3,0.1-4.7,1.1-7,0c-7,0.3-14,0.6-21,0.5c-2.1,0-4.3,0.3-6-1.5\n                        c4.2-3.2,9.2-1.6,13.8-1.9c11.7-0.7,23.4-0.8,35.1-1.1C1554,314,1555.2,314.1,1556,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05D63"),
                d:
                  "M1504,317c7.4,0,14.9,0,22.3,0c1.6,0,3.4-0.5,4.7,1c-0.7,0-1.3,0-2,0c-8.1,2.9-16.8,1.1-25,3\n                        c-0.3,0-0.7,0-1,0c-2.7-0.8-5.3-0.8-8,0c-6.4,0-12.7,0-19,1c-0.2-1.8-1.4-2.2-2.8-1.9c-11.6,2-23.4,0.5-35.1,0.9\n                        c-2.7,0.1-5.4,2.1-8.1,0c6.8-0.7,13.5-1.7,20.3-1.9c10.9-0.3,21.7-0.8,32.6-1.7C1489.8,316.8,1496.9,316.5,1504,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A111E"),
                d:
                  "M756,555c0.2,3-2.2,5-2.9,7.6c-0.5,1.6-1.8,1.1-2.8,0.6c-0.4-0.2-1.7,0.2-1.2-0.8\n                        c0.3-0.6,1.2-0.9,1.9-1.3c1-2.2-2-3.2-1.7-4.1c-0.2,0.9,2.2,2.1,1.7,4.1c-4.5,0.6-1.9-4.1-4.1-5.6c-1.5,1.3-0.5,3.2-1.2,4.6\n                        c-1.4-0.6-0.2-2.2-1.2-3c-1.5,1,0.3,5-2.5,4c-3.3-1.2,1.7-3.3,0-6c-4.3,4-9.3,6.5-15.1,6.9c-1.4,1.5-3.3,1.7-5,1.3\n                        c-7.2-1.5-14.5-2.3-21.8-3.4c-0.5-0.1-0.8-0.5-1.2-0.8c-2.1-1.4-4.5-1.8-7-2c-2.2-1.2-5.3,0.2-7.1-2.5c1-2.2,3.3-2.4,5.1-3.4\n                        c7.6-1.5,15.1-2.9,22.7-4.4c6.4-1.2,12.9-2.4,19.3-3.6c4.2,0.3,8.4,1.2,12-2c0.7,0,1.3,0,2,0c3,2.4,6.3,2.6,9.7,1.5\n                        c1.8-0.6,3.5-1.4,4.2,1.1c0.4,1.2-0.5,3.1,1.4,3.2c2.6,0.2-0.1-2.6,2.1-3.4c0.6,1,1.4,2.3,2.3,3.8c2-2.3,0.9-5.6,4.2-6\n                        c0.8,1.4-2.2,5,0.9,4.2c2.3-0.5,6.6,4.1,7.1-2c0.2-2.1,1.4-2.2,3.1-2.4c2.3-0.3,2,1.2,2.4,2.7c1.1,3.8,4.1,5.3,7.6,6.4\n                        c-0.2,3-3.8,3.5-4.2,6.4c-1.3-0.9-0.2-3.3-2.4-2.9c-0.9,0.2-1.9,0.6-2.3,1.7c-0.4,1.2-1.2,2.5,0.7,3.3c2.5,1,1,2.5,0.8,4.2\n                        c-2.3-0.5-3.3-4.8-3.9-3.4c-1.5,3-3.3,0.4-4.7,1.1c-0.7,0.3-0.9-0.6-0.9-1.4c0.7-0.9,1.8-1.6,2.6-2.8\n                        c-1.6,0.4-1.5,2.2-2.6,2.8c-0.7,0.5-1.4,0.9-2.5,1.5c-0.8-1.3,1.9-4.2-1.6-4.2c-0.7,0-1.6-1.3-1.9,0c-0.6,2.6-4.7,4.5-1.4,7.9\n                        c-1.9,0.8-3.3-0.5-4.5-0.4c1.6-3.6,0-7.8-1.3-10.2c-1.4-2.4-5.8-0.8-8.7,1.2C753.7,556.5,754.8,554.6,756,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M699,559c7.7-0.5,15,1.7,22.5,2.9c1.8,0.3,3.6,0.1,5.5,0.1c7.4,1.3,14.8,2.8,22.2,4\n                        c13.4,2.2,26.9,3.9,40.3,5.7c5.8,0.8,11.8,0.7,17.5,2.3c1.8,3.5-1,4-3,3.6c-9.5-2-19.5-0.6-28.8-3.7c-2.9-1-5.5-0.7-7.6,1.8\n                        c-2.1,0.7-4.1,1-5.7-0.9c-0.3-1.3,1.3-1.3,1.7-2.3c-3.1-0.4-6.1-1.4-9.2-2c-1.3-0.2-2.4-0.9-3.6,0.6c-0.8,1-2.4,1.2-3.2,0.4\n                        c-4-4.8-9.4-2.8-14.3-3.1c-4.3-0.2-8.7,0.6-12.1-2.9c-0.3-0.3-0.9,0.2-1.3,0.5c-2.9,2-2.3-2.3-4.8-2.6\n                        c-7.5-1-14.9-0.1-22.4-0.8C694.6,559.1,694.6,559.1,699,559z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M720,566c0.2-1,0.7-2.4,1.8-1.4c3.7,3.7,8.3,2.1,12.6,2.4c3.4,0.2,7-0.6,10.3,0.7c1,0.4,2.8-0.3,2.7,2\n                        c0,1.3,1.3,1.4,2.3,1.1c4.8-1.6,5.5-1.6,10.2-0.2c0.8,0.2,1.6,0.2,2.4,0.4c1.5,0.4,4.4-1.1,4.3,1.6c-0.1,2.4-3,1-4.6,1.4\n                        c-1.8,1.7-4,1.4-6.1,1.1c-9.7-1.4-19.3-3.4-29.1-4.2c-0.7-0.1-1.2-0.4-1.7-0.9c-4.5-2.2-9.6-1.1-14.2-2.9c3.2,0,6.5,0,9.7-0.1\n                        c0.1,0,0.2-0.2,0.3-0.3C720.6,566.5,720.3,566.2,720,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66131C"),
                d:
                  "M690,551c-1.4,1.1-2.8,2.2-4.4,3.5c2.3,0.9,4.4,1.7,6.4,2.5c-1.3,0-2.7,0-4,0c-1.1,0.5-1.6-0.2-2-1\n                        c-1,0-2,0-3,0c-0.8,1-1.9,1.1-3,1c-0.7-1.2-1.5-2.5-2.2-3.7C682,552.5,686,551.8,690,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M686,556c0.7,0.3,1.3,0.7,2,1c0.4,1.9,4.3-0.2,3.3,2.9c-0.4,1.3-1.7,2.3-3.6,1.5\n                        C685,560.2,684.5,558.5,686,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M680,557c0.7-1.2,1.9-1,3-1c1.2,4-1,2.8-3,2C680,557.7,680,557.3,680,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M710,567c-2.3-0.3-4.9,0.8-7-1C705.3,566.4,707.9,565.1,710,567z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d: "M698,565c-2-0.3-4.2,0.6-6-1C694,564.3,696.2,563.2,698,565z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M689,564c-1.7-0.2-3.6,0.6-5-0.9C685.6,563.2,687.5,562.4,689,564z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M703,566c-1.7-0.2-3.6,0.5-5-1C699.7,565.2,701.6,564.3,703,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03E4B"),
                d:
                  "M725.1,569.9c9.9,0.2,19.7,2.3,29.5,3.5c2.5,0.3,4.9,0.5,7.4,0.5c1.8,1.6,4,0.8,6,0.9\n                        c2.7-1.8,5.5-0.7,8.2-0.2c7.8,1.6,15.7,1.6,23.5,2.8c1.9,0.3,4.5-0.6,5.3,2.4c-3,0.6-6.2-1-9,1.1c-2.7,0.3-5.4-0.2-8-0.9\n                        c-6.5,1.4-12.9,0-19.3-0.8c-7.6-0.9-15.1-2.5-22.7-3.2c-2.1-0.2-4.3-0.7-6.1-2.1c-4.1-1.8-8.6-0.9-12.9-2\n                        c-1.4-0.3-3,0.4-4.1-1C723.4,570.1,724.3,570,725.1,569.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M615,489c0-0.7,0-1.3,0-2c3,0.2,6-0.5,8.9,0.5c2.2,0.7,3.1-1.1,4.5-2c-1.2-2.7-3.6,0.7-5-1.6\n                        c3.3-1.8,6.7-0.4,9.9-0.9c1.4-0.2,3.8,0.6,4.2-0.8c1.8-7.6,9.5-7.3,13.9-8.1c6.7-1.3,13.9-4.7,21.2-1.3\n                        c1.3,0.6,2.9,0.2,4.4,0.2c4.2,1.2,8.1,1.6,11.6-2c1.5-1.5,3.4-2.7,6.5-1.2c-2,0.6-4,0.6-4.4,2.5c4,0.7,8,2.1,11-2.7\n                        c1-1.5,2.2,0.1,2.3,1.7c0.1,2.9-0.4,6.7,4.2,2.7c3.6,4.5,4.4-3.8,8.5-1.6c2.8,1.5,6.6,3.1,10.4,2.7c1-1.7,3.2-1.5,4.8-3\n                        c-2.2-1.9-4-3.1-7.1-1.5c-0.8,0.5-2.9,2.8-4.2,0.7c-1.2-1.9-3.1-4-0.9-6.6c1.4,3.4,4.3,4,7.3,1.6c3.3-2.7,8.6-1.7,10.5,2.1\n                        c-1,1-2.6-1.1-3.5,0.6c-0.2,0.3-0.1,1,0.1,1.3c1.2,1.2,2.4,0.2,3.7,0.1c1.9-0.2,2.2-2.1,3.4-3c1.6,1.5,0.3,3.7,2,4.7l0,0\n                        c-0.4,0.9-0.7,1.8-1.5,3.9c2.9-2.2,5-3.4,7.6-3c1.2,0.2,2.1-0.6,2.8-1.7c2.8-4.4,2.9-4.3,8.8-3.2c-2.4,1.9-3.2,4.1-2.4,6.9\n                        c3.5-3.7,8.3-1,12.2-2.6c-0.5-2.4-3.2-0.4-3.9-2.2c0.1-1.1,1.3-1.4,1.7-1.1c2.3,1.9,6.2-1.2,7.9,2.7c0.5,1.2,2.1-0.1,2.3-0.7\n                        c1-2.8,4.5-4.2,3.8-8c-0.6-3.4,2.6-3.1,4.9-3.3c4-0.3,8.2-2.5,12.5,0.7c-0.2-4.6,0.4-7.7,4.9-2.7c1.2,1.3,2.5,1,3.2-0.6\n                        c0.6-1.3,1.2-2.9,2.7-2.3c4.8,2,7.6-1.4,10.8-3.8c0.9-0.6,1.9-1.3,2.4,0.1c0.6,1.4-0.9,0.9-1.5,1.2c-0.7,0.4-1.9,0.6-1.5,1.6\n                        c0.2,0.6,1.5,1.4,1.9,1.2c3.3-1.7,6.5-3.6,9.6-5.4c0.8,3.4,0.4,4.1-3.2,5c-1.3,0.3-2.6,0.6-3.4,1.8c-0.5,0.8-0.4,1.9,0.4,2.2\n                        c1.7,0.7,0.6-0.8,0.9-1.3c0.5-0.8,1.2-0.7,1.7-0.3c1.4,1.2,1.7,2.7,0.5,4.6c3.1-0.5,1.5-2.9,2.7-4.1c1.2,1.8,1.8,4.3,5.2,3.7\n                        c-3.4-3.3-3.1-5.6,1.3-6.8c1-0.3,1.7-1,1.6-2.2c-0.1-1.5-2.2-4.3,1.1-3.8c1.9,0.3,5.7-3.5,6.3,1.7c3-1.3,1.4,1.9,2.3,2.5\n                        c1.2-0.5,0.1-2.5,2-2.6c0.3,1.9,0.6,3.7,0.8,5.5c2.3,1.7,3.6-5.4,5.9-0.1c2.2-3.9-3.9-4.9-2.6-8.2c2.1-0.8,1.8,3.1,2.7,1.6\n                        c1.5-2.3,3.8-4.8,1.4-8.9c4.3,2.7,1,5.5,1.9,7.9c1.2-0.8,1.5-1.9,1.6-3.1c0.1-1.4,0.7-2.3,2.2-1.9c1.3,0.4,3,0.8,3.2,2.1\n                        c0.4,2.4-1.7,0.5-2.2,1c-1,1.2-1.5,3.2-0.7,4.4c1.3,1.9,2.1-0.2,3-1c2.2-2,2.1-2,3.2,0.4c0.9,1.9,3.1,2.5,4.3,4.5\n                        c3.1,5.1,2.3,11.2,4.8,16.3c4.2,2.6,3.3,6.5,2.7,10.3c-0.8,1.3-1.7,0.9-2.5,0.1c-1.2-1.4-3-2.3-4.1-3.8\n                        c-0.3-3.7-4.8-5.6-4.2-9.8c-1.6,2.1-0.2,6.6-4.8,6c-4.2-0.5-3-4-3.6-6.8c-0.8,3.4-3,4.8-6.2,4.6c-3-1.4-5.5,0.4-8.1,1.4\n                        c-4.3,2-8.8,1-13.3,1.1c-1,0-1.3,0-2.1,1.2c-1.7,2.3-4.5,4.6-8.3,3.7c-1.1-0.2-2.3-2.2-3.5-0.2c-4.4-3.8-7.4,3-12.2,1.4\n                        c-4.1-1.4-9,1.3-13.6-0.3c-0.8-0.3-1.7-0.2-2.4,0.3c-3.4,2.5-6.3,0.9-9-1.3c-0.9-0.7-1.8-1.3-2.2-2.5c0.3,1.2,0.3,2.1-0.6,2.9\n                        c-2.4,0.9-4.6,1.9-6.9,3.1c-9.1,1.6-18.3,2.4-27.6,1.7c-2-0.2-4,0-5.9-0.7c-1.3-0.5-2.8-1-3.8-0.2c-3.1,2.3-6.6,1.8-10,1.8\n                        c-5.1-0.1-10.2-0.4-15.2,1.1c-0.6,0.2-1.4,0.3-2,0.1c-8-3-16.1,2.8-23.7,0.2c-3.7-1.3-5.7,1.3-8.6,1c-3.4-1-3.4-3.3-2.9-6.3\n                        c0.1-0.8-4.2-1-1.5-4.7c-2.5,2.1-1.4,3.7-1.2,5.3c0.2,2.4-1.7,3.5-3,2.2c-2.6-2.6-6-1.5-8.7-3c-2.7-1.4-3.9,0.2-4.5,2.4\n                        c-1.3,4.9-3.6,6.8-7.5,4.2c-4.3-2.9-7.2-1.3-10.8,0.4c-1.7,0.2-3.7-0.1-3.7,2.7c0,1.5-1,2.7-1.8,4c-0.8,0.8-1.6,1.1-2.6,0.3\n                        c-2.8-0.1-6.1,1.7-8-2C621.3,489.8,617.6,490.5,615,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("511115"),
                d:
                  "M882.9,482.1c0.2-3.8,0.2-7.6-1.9-11.1c0.3-5.7-1.7-11.3-1-17c2-2.5,0.5-5.4,1-8c2,3.4,0.6,7.5,2,11\n                        c3.1,6.5,2.2,13.7,3.3,20.6c0.3,2.1-0.1,4.3,0.7,6.3c0.6,2.4,0.3,5,1.1,7.4c0.6,6.5,0.9,13.1,2.1,19.6\n                        c0.7,9.5,2,18.9,3.1,28.3c0,1.7,0.1,3.5-0.7,5.1c-0.2,0.2-0.4,0.4-0.6,0.6c-1.9,2.8-0.5,6-1,9c-2-3.2-0.5-6.7-1-10\n                        c-0.3-2.4,0.8-4.9-0.9-7.1c-2.1-1.9-1-4.7-2-6.9c-1.2-6.6-1.3-13.3-2.2-20c-0.2-2.4-0.7-4.7-1.1-7.1c-0.1-2.9-0.4-5.8-1-8.7\n                        c-0.1-2.3-0.5-4.6-0.9-6.9C881.6,485.6,880.6,483.5,882.9,482.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M743,472c-0.1-2.2,0.1-4.4-0.4-6.4c-0.4-1.7,0-1.8,1.4-2.2c1.9-0.5,1.4,0.7,1.5,1.6\n                        c0.3,1.5-0.4,4.2,2.6,1.9c1.1-0.8,2.4-1.4,2.5,0.4c0.1,1.2,1.3,3.5-1.7,3.8C746.9,471.2,745,471.7,743,472L743,472z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M698.8,468.3c0,0.7-0.1,1.3-0.9,1.5c-0.7,0.1-1.5,0.1-1.2-0.8c0.2-0.6-0.4-1.7,0.7-1.8\n                        C698.1,467.1,698.7,467.5,698.8,468.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M694.5,466.3c-0.1-1,0.6-1.2,1.2-1.2c0.6-0.1,1.4-0.3,1.5,0.6c0.1,0.5,0.3,1.4-0.7,1.3\n                        C695.8,467,695,467,694.5,466.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791624"),
                d:
                  "M776,536c-6.7,0.3-13.3,0.7-20,1c-3.9-0.1-7.8,0.2-11.7,0.2c-3.2,0-7.9-2.9-9.7,2.7\n                        c-2.3-1.6-6.2,1.7-7.5-2.5c-2.1,0.7,0.1,3-1.4,3.3c-2,0.4-1.5-1.7-2.1-2.7c-0.3-0.4-1.2-0.9-1.6-0.8c-4.2,1.5-8.9-0.8-13,2.1\n                        c-1.2,0.9-5.6-0.3-5.7-1.8c-0.6-6.1-4.2-3.6-7.3-3.3c-4.3,0.5-8-2-12.2-2.6c-1.6-0.2-3.6,0.1-5.1-1.2\n                        c-0.8,1.9,3.1,1.6,1.1,3.5c-1.2,1.2-2.1-0.1-3-0.6c-4.4-2.3-8.6-4.9-13,0.4c-1.6,2-7.4-0.1-8.9-2.7c1.1-0.9,2.3-0.6,2.6-0.5\n                        c-0.7,0.1-2.3-0.1-2.9-1.9c-0.1-0.5,0.8-0.7,0.5-1.3c0,0.3-0.1,0.6-0.4,0.9c-0.8,1-2,0-2.8,0.8c-2,0-4,0-6,0\n                        c-1.6-2.8-1.1-4.4,1.9-4.3c-3.9-1.7-2.2,3.2-3.9,4.3c-0.7,0-1.3,0-2,0c0.1-3.1-1.8-7.2,4-7c1.7-1.5,3.5-0.5,5.2,0\n                        c2,0.9,4,0.6,6.1,0.7c6.7,0.7,13.3,2,20.1,2.2c18.6,2.3,37.4,4,56,5.9c7.8-0.4,15.4,1.5,23.2,2c5.1,0.3,10.2,0.7,15.4,0.8\n                        C773.6,534,775.8,533.4,776,536z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M744,541c0.1,0.8,0.4,2.1,0.1,2.3c-2.6,1.6-5.9,0-8.7,2c-1.2,0.8-2.2-1.5-3.4-2.3\n                        C735.9,541.6,739.9,541.1,744,541z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M644,529c0.2-5.2,1.3-6.1,5.7-4.2c0.6,0.3,2,0,1.4,1.3c-0.4,0.8-0.9,1.5-2.3,0.7\n                        c-2.3-1.4-2.4-1.2-2.8,2.2C645.3,529,644.7,529,644,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M655,528c0.3,0.4,0.5,1,0.9,1.2c1,0.5,2,0.8,3.9,1.6c-2.1,0.1-3.4,0.2-4.8,0.3c-1-0.7-2-1.3-3-2\n                        C652.7,527.8,653.9,528,655,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931E2E"),
                d:
                  "M677,526c-6.8,0.4-13.3-1.5-20-2c-1.8-1.3-4.2,0.3-6-1c-1.7-0.3-3.3-0.7-5-1c-3.7-2.4-7.9-2.5-12-3\n                        c-1.8-2.3-4.6-2.1-7-3c-1.4-0.1-3,0.5-4-1c1.5-4.1,5.7-1.6,8.9-4c-5.2,0.7-3.7-4.8-6.9-6c0-0.3,0-0.7,0-1l0,0c0.7,0,1.3,0,2,0\n                        c0.8-1.2,1.4-2.6,3-2.9c0.5-0.1,0.9-0.2,1.4-0.2c1,0,2.1,0,2.8,0.6c2.6,2.3,4.3,3,6.7,1.4c2.4-1.6,4.8-2,7.5-1.7\n                        c1.9,0.2,3.5-0.7,4.8-2.1c2.8-2.8,4.9-2.2,6.1,1.6c-0.2,0.8-0.8,1.6-1.5,1.9c-2.9,1.2,1.1,6.4-2.9,6c-2.5-0.3-4.8,0.1-7.2,0.1\n                        c-0.5-0.1-0.9-0.3-1.2-0.6c-3-2.1-5.5,1.1-8.4,0.8c-0.7-0.1-0.4,1.4-0.1,2.2c0.6,1.6-0.1,2.5-1.4,3.2\n                        c-1.3,0.4-2.6,0.1-3.1,0.1c0.8,0.2,2.3,0.4,3.7-0.5c2.1-0.6,4.8-3.2,5.4,1.5c0,0.3,0.1,0.3,0.6,0.3c6.2-0.8,11.4,2.5,16.8,4.6\n                        c3.7,0.6,7.2,2.1,11.2,1.7C673.4,521.8,677,521.7,677,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M625,505c1.5-0.1,2.9-0.1,4.5-0.2c0.7,1.9-2.3,2.3-1.6,4.5c2.9-1,5-0.1,5.4,3.2\n                        c-3.2,1.5-7.1,0.3-10.2,2.5c-0.8,0.2-1.5,0.4-2.3,0.6c0.9-3.2-4.9-2.9-3.5-6.9c0.6-1.6-2.5-2.6-3.5-4.3\n                        c-0.4-0.6-1.3-1.8-1-1.7c2.3,0.6,1.4-2.5,2.8-2.3c1.2,0.2,0.8,1.4,0.7,2.4c-0.2,2.5,1,3.1,3.4,2.5\n                        C621.3,504.9,623.2,505.1,625,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M631,502c-0.3,0-0.7,0-1,0c-1.4-1.8,0.5-2.7,1-4c1.6-1,0.3-2,0-3c0.8,0,1.6-0.2,2-1\n                        c2,0.8,5.8-2.6,5.8,2.6C638.3,501.4,633.5,500,631,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781526"),
                d:
                  "M615,489c1.4,0,2.9,0.1,4.3,0c3.1-0.3,4,1.3,3.7,4C619.9,492.6,617.1,491.4,615,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M631,498c-0.3,1.3-0.7,2.7-1,4c-1,0.7-2,1.3-3,2c-0.5-1.7-0.9-3.4-1.6-5.8\n                        C627.5,499.2,629.5,499.8,631,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M627,516c3.1-0.8,6.1-1.3,7,3C631.4,518.6,628.6,518.7,627,516z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M625,504c-5.1-0.3-0.6-2-1.5-4.2C625.4,501.8,624.8,503,625,504L625,504z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80181F"),
                d:
                  "M2020,500c0,0.3,0,0.7,0,1c-2.7,1.7-5.3,3.4-8,5c-0.9,2.3-2.9,3.2-5,4c-5,2.6-9.1,7-15,8\n                        c0.7-2.8,2.5-4.7,4.6-4.5c1,0.1,1.8-0.3,2-1c0.9-5.3,5.1-6.4,9.4-7.5C2011.1,501.2,2015.4,500.3,2020,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992933"),
                d:
                  "M2007,510c1.1-2,3.3-2.7,5-4c0.6,0.9,2,1.5,0.9,3C2011.1,509.8,2009.3,511.7,2007,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53B44"),
                d:
                  "M2046.9,539.5c-0.3,1.1-0.6,2.2-0.8,3.3c-0.4,2.2,2.6,6.3-0.6,6c-2.6-0.2-7.3-2.4-7.7-7.1\n                        c-0.2-1.8-0.4-3.6-0.8-5.3c-0.7-3,2.2-3,3.4-3.6C2042.2,531.9,2047.1,537.2,2046.9,539.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("693535"),
                d:
                  "M2043.8,554.1c-1-1-2-2-3-3c2.7-1.9,3.5,1.1,5.2,1.9c0.4,0.4,0.5,0.9,0,1.3\n                        C2045.2,554.7,2044.5,554.6,2043.8,554.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2D35"),
                d:
                  "M2046,554c0-0.3,0-0.7,0-1c1,1,2,2,3,3c-0.4,1-1.1,1.7-2.1,2c-0.2-0.1-0.4-0.3-0.6-0.4\n                        C2045.6,556.5,2044.8,555.4,2046,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A2A2C"),
                d:
                  "M2047,558c-2,0.8-3.9,3.8-6,0.2c0.4-0.4,0.9-0.8,1.3-1.1C2044.2,555.6,2045.7,556,2047,558L2047,558z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("914A4F"),
                d:
                  "M2047,558c-1.5-0.9-3.1-1.2-4.8-1c0.5-1,1.1-2,1.6-3c0.7,0,1.4-0.1,2.1-0.1\n                        C2046.3,555.3,2046.6,556.7,2047,558z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151F"),
                d:
                  "M2015.1,490.1c3.2-2.1,5.9,2,8.7,0c0,0,0.7,0.9,1.1,1.4c-0.6,0.1-1.3,0.1-1.8,0.3\n                        C2020.1,493.6,2017.5,493,2015.1,490.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58101E"),
                d:
                  "M737.7,439c-0.5-0.3-1.1-0.5-1.2-0.8c-0.2-0.8,0.4-1.1,1.1-1c0.3,0,0.8,0.5,0.9,0.8\n                        C738.5,438.3,738,438.6,737.7,439z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851828"),
                d:
                  "M627,377c0-8.1,0-8.3-7.8-7.9c-10.5,0.4-20.9,1.2-31.3,1.9c-0.6-1.4-0.1-2.7,0.5-4c1.2-2,3-3,5.3-3.2\n                        c7.8-0.5,15.5-2,23.2-2.1c4.2-0.1,6.5-1.7,7.2-5.8c0.1-0.3,0.4-0.8,0.6-0.7c3.9,1.1,2.7,5.3,4.5,7.8c1.1,1.5-2,1.3-2.9,2.1\n                        c2.6,0.4,5.2-3.7,8,0.3c0.5,0.8,3-1.9,5-0.8c3.5,0.5,7-0.1,10.3-1.1c5-1.5,9.3,0.1,13.7,1.7c-0.5,2.2-2.4,2-3.9,2.1\n                        c-8,0.9-8,0.9-9.3,7.7c-0.1,0.3-0.1,0.9-0.2,0.9c-5.9,0.5-12.3,2.7-17.7,0C629,374.4,628.5,375.8,627,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1321"),
                d:
                  "M650,375c-2.5-8.8-2.4-8.9,7.3-9c1.9,0,4,0.8,5.7-1c2.1-1.9,4.6-1.4,7.1-1.5\n                        c5.3,0.4,10.7-0.4,16.1,0.5c4.2,3.5,9.1,3.3,14.1,2.3c2.7-0.6,5.3-1.2,8,0.9c1.9,1.5,4.4,0.2,6.6,0.1c2.2-0.2,4.3-0.4,6.3,0.9\n                        c0.8,0.6,1.6,1.3,0.5,2.3c-2.2,0.6-4.5,0.9-6.5-0.5c-13,1.3-25.9,2.9-38.9,3.7C667.4,374.2,658.8,376.1,650,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781523"),
                d:
                  "M812,369c-5.1,2.4-10.7,1.3-16,1.6c-10.3,0.7-20.6,2.3-31,2.4c-0.2-1.7-1.4-2.1-2.8-2\n                        c-4.9,0.3-10-0.9-14.8,1.4c-1,0.5-1.3-0.6-1.4-1.4c0.4-1.6,1.5-2.5,3-3c7.4-0.6,14.8-1.7,22.4-1.4c6.5,0.2,12.9-1,19.3-1.5\n                        c2-0.5,4-0.4,6.1-0.3c3.2,0.9,6.5,0.6,9.6,1.6c0.8,0.5,0.2,3,2.5,1.7C809.8,367.5,811.2,368,812,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82182C"),
                d:
                  "M748,369c-0.7,0.7-1.3,1.3-2,2c-4.5-0.9-8.9-0.2-13.4,0.3c-5.3,0.6-10.7,0.5-16.1,0.7\n                        c-1.6,0.1-2.2-0.4-1.5-2c2.3,0,4.7,0,7,0c2.5-2.6,5.8-2.3,9-2.4c5.1,0.5,10.2-2.1,15.3-0.4C747.2,367.5,747.8,368.1,748,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F172A"),
                d:
                  "M812,369c-1.6,0-3.3,0.2-4.9-0.1c-2.7-0.4,0-1.3-0.1-2c0.6-0.7,1.3-1.2,2.1-1.1\n                        c7.8,0.6,15.4-1.8,23.2-1.5c9.6,0.3,19.2-1.6,28.8-2.2c1.5-0.1,3.3-0.6,4.1-2.3c0.3-1.7,0.2-3.7,1.9-4.9\n                        c1.8,3.6,0.4,7.4,0.8,11.1c-4.4,0-8.8-0.2-13.2,0.1C840.6,367.2,826.3,368.6,812,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("64131F"),
                d:
                  "M890,382c-2.4-0.4-4.4-1-1.8-3.8c1.5-1.5,2.5-3.6,4.7-4.2c0.5,0.6,1.3,0.8,2.1,1c-0.7-0.4-1.5-0.3-2-1\n                        c-0.5-0.5,1.1-2.9-1.4-1.5c-1.5,0.9-2.9,1.9-4.9,2.2c-4.9,0.8-8.7-0.3-10.5-5.5c0.2,5,0.2,5,6.6,7.5c0.9,0.3,1,1.3,1.1,2.1\n                        c0.1,2.1-1.3,2.9-2.9,3.6c-1.1,0.5-2.3,0.9-2.9-0.7c-0.2-0.6-0.3-1.2-0.7-1.9c-0.5,2.8-0.2,5.8-3.5,7.1c-1-7-2-14-3-21\n                        c0-0.4,0-0.7,0-1.1c4.7-2.6,9.7-1.4,14.5-1c4.3,0.4,8.5,1.3,12.7,1.9c6.7,2,13.6,3,20.5,3.6c3.4,0.3,6.5,0.9,9.3,2.9\n                        c1.4,1.7,4.9,0.6,5,3.9c-0.9,0.8-1.9,0.9-3,1c-1.1,0-2.2-0.1-3.3-0.3c-5.5-0.8-11-0.9-16.5,0.1c-2.1,0.5-4.3,0.4-6.5,0.4\n                        c-2,0.1-4-0.3-5.9,0.4c-1.3,0.4-2.5,0.9-3.8,1.2c-1,0.2-1.7,0.9-2.1,1.9C891.5,381.5,891.1,382.4,890,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE7A82"),
                d:
                  "M864.9,333.3c0,1.9,0,3.8-0.1,5.7c-2.3-0.1-0.7-2.2-1.3-2.8c-0.3,3.5-3.1,3.3-5.4,3.1\n                        c-12.7-1.3-25.5-2.2-38.2-3.2c-8.6-0.7-17.2-1-25.8-1.9c-9.6-0.9-19.1,0.4-28.7,0.3c-15.3-1.9-30.7-3.5-45.8-6.6\n                        c-0.5-0.3-0.8-0.7-0.9-1.2c4.7-5.3,11-3.5,16.3-2.4c5.3,1.1,10.5,1.5,15.8,1.6c8.3,0.1,16.7-0.8,24.9,0.6\n                        c5.6,1,10.9,1.2,16.7,0.2c5-1,10.3,1.5,15.7,1.3c15.8-0.5,31.5,1.3,47.1,3.4c2.2,0.3,4.8,1.1,6.1-1.8c0.3-0.4,0.7-0.6,1.2-0.7\n                        c1.8,0.5,1.2,2.2,1.7,3.4C864.4,332.5,864.7,332.9,864.9,333.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M899,367c-9.3-0.4-18.5-3-28-2.1c-0.4-2.3-0.7-4.6-1.1-6.9c0.8-0.4,1.5,0,2.2,0.4\n                        c5.9,2,11.9,1.4,17.9,0.2c9.2-1.9,18.5-1.4,27.7-1.4c2.5,0,4.9-0.1,7.4,0c1.4,0.1,2.6-0.1,3.2,1.6c1.6,4,5.5,0.7,6,0.4\n                        c4.2-2.6,4.1-3.2,7.9-2.8c4,0.4,8.4-1.9,12,1.4c0.3,0.7,0.3,1.5-0.1,2.2c-2.1,1.9-4.8,2-7.5,2.2c-6.3,0.4-11.8,2.9-17,6\n                        c-4.1-2.4-9.1,0.7-13.1-2.4c-1.3-1-0.5,0.4-0.7,0.7c-0.8,1.4-2.3,1.7-3.5,1.4C908,366.7,903.4,368.2,899,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8A91"),
                d:
                  "M865.2,342.8c0.4,2.1,0.7,4.3,1.1,6.4c0.4,2.3,0.6,4.8-2.8,4.1c-6.8-1.4-13.8-0.3-20.6-1.3\n                        c-7-1.5-14.2-0.9-21.3-1.4c-13.1-1-26.1-2.3-39.1-3.5c-9.6-1.7-19.3-2.3-28.9-3.6c-6.5-0.9-13.1-1.7-19.7-2.2\n                        c-0.5,0-1.1-0.2-1.6-0.3c-2.1-0.9-4.4-0.6-6.6-1c-0.5-0.1-1-0.2-1.5-0.3c-2.4-0.7-5-0.1-7.4-0.6c-1-0.3-2-0.7-2-2\n                        c1.4-2.3,3.3-3,5.9-1.9c2,0.8,4.3,0.8,6.4,0.7c7.9-0.4,15.7,1.8,23.6,1.7c6.1,0.6,12.1,1.1,18.2,1.9c14.1,1.9,28.2,4,42.4,5.2\n                        c15.7,1.3,31.5,1.5,47.3,2c2.2,0.1,4.8,0.6,5.6-2.6C864.3,343.5,864.7,343.1,865.2,342.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF848C"),
                d:
                  "M766,333c6.9-0.6,13.8,0.1,20.7-0.8c4-0.5,8.2,0.9,12.3,1.2c4.7,0.4,9.4,0.9,14.1,1\n                        c9.6,0.2,19.1,1.1,28.6,2.2c5.8,0.7,11.8-0.1,17.6,1.3c2.2,0.5,4-0.2,3.9-3.2c1.5,1.2,0.2,3.2,1.6,4.2c0.1,1,0.2,2.1,0.3,3.1\n                        c-7.9,1.3-15.8,0.2-23.6-0.6c-16.8-1.6-33.6-1.9-50.4-3.1c-6.3-0.5-12.5-1.5-18.8-2.4c-2-0.8-4.2-0.4-6.1-1.6\n                        C765.7,334,765.7,333.5,766,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC232C"),
                d:
                  "M843.2,350.9c6.7,0,13.6-0.4,20.2,1.1c3.2,0.7,2.6-1.2,2.9-2.8c1.2,1.8,0.5,3.8,0.9,5.7\n                        c-0.1,1.8-0.1,3.5-1.1,5.1c-2.4,1.7-5.1,1.4-7.8,1.3c-4.3-1.4-9,0.2-13.4-1.4c-3.6-1.5-8.2,0-11.1-3.6c0.6-1.4,2-0.4,2.7-0.8\n                        c-3.1,0.3-3.7-3-5.7-4.3c0.3-0.4,0.7-0.6,1.3-0.6C835.8,350.7,839.5,350.1,843.2,350.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE747B"),
                d:
                  "M865.9,322.1c0.1-0.4,0.2-0.8,0.2-1.2c0.4-0.3,0.9-0.4,1.4-0.3c0.7,0.3,1.1,0.9,1.4,1.6\n                        c0.2,4,2.1,5.8,6.2,6.1c3,0.2,5.9,0.9,8.7,2.2c0.4,0.3,0.9,0.6,1.3,0.7c10.2,0.6,19.7,5.5,30.1,5.4c1.3,0,2.6,0.2,3.7,1.1\n                        c0.3,0.6,0.2,1.1-0.2,1.6c-6.4,1.6-12.9,1.9-19.4,2c-8.4,0.3-16-4.2-24.4-4.3c-2.9-0.1-5.3-2.7-7.9-4.1\n                        c-0.4-2.3-0.8-4.6-1.2-6.9C864.8,324.7,864.8,323.4,865.9,322.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC939A"),
                d:
                  "M868.1,345c0-0.7-0.1-1.4-0.1-2c1.7-3.4,5-3.1,7.9-2.8c4,0.3,8,0.3,12,0.6c3.3,1.6,7.1,2,10.3,3.7\n                        c1.7,3.6,1.3,4.6-2.8,4.7c-4.6,0.2-9.2,0.7-13.5,2.4c-4.3,0.1-8.7,1.5-13-0.6l0,0C867.8,349.1,869.1,346.9,868.1,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E38F95"),
                d:
                  "M791,337c17.3,1.4,34.7,1.5,52,3.2c5.5,0.6,11.1,1.5,16.8,0.8c1.8-0.2,3.7,0,5.3,1\n                        c0.2,0.2,0.3,0.5,0.1,0.8c-0.1,0.2-0.2,0.3-0.3,0.5c-0.5,0.8-0.6,2.2-1.9,1.8c-4.6-1.4-9.3-0.3-13.9,0.1\n                        c-10.4,0.9-20.5-1.8-30.6-3c-7.6-0.9-15.2-1.2-22.8-2.1C793.6,339.8,791.1,340.3,791,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE7F86"),
                d:
                  "M888,342c-4-0.2-8.1,0.3-12.1-0.7c-2.5-0.6-5.5-0.1-7.8,1.7c-0.8-3.3-1.1-6.6-0.9-10\n                        c1.7-2.3,3.3,0.5,3.8,0.8c2.5,1.7,5,2.6,8,2.2c1.1-0.1,2.5-0.2,3.4,0.3c4.9,2.7,10.3,3,15.7,3.7c-0.9,3.3-3.6,2-5.7,2.3\n                        C890.9,342.4,889.5,340.9,888,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2B33"),
                d:
                  "M871,359c-0.4-0.3-0.7-0.6-1.1-0.9c-1.7-1.8-0.7-3.9-0.9-5.9c9.4-0.2,18.8,0.1,27.9,2.8\n                        c0.4,2.5-0.2,4-3.2,3.6c-1.8-0.2-3.6,0.5-5.4,0.7C882.5,358.8,876.8,361,871,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E48085"),
                d:
                  "M897.1,355.9c-7.5-1.5-15.1-2.4-22.8-3c-1.8-0.1-3.6,0.2-5.3-0.8c0-0.4,0-0.7-0.1-1.1c4,0,8,0,12,0\n                        c4-1.4,7.9-1.4,11.9,0.2c4.4,1.8,9.5,0.1,13.9,2.4c2.5,0.4,5.4-0.8,7.4,1.8C910.8,357.7,901.2,358,897.1,355.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761819"),
                d:
                  "M865.9,322.1c0,1.3,0,2.6,0,3.9c-1.8,2.2-0.4,4.9-1,7.2c-0.2-0.2-0.4-0.3-0.7-0.3\n                        c-1.3-3.7-1.4-7.6-1.7-11.4c-0.2-0.5-0.3-1-0.4-1.5c-0.2-1-0.3-2-0.3-3c0-0.5-0.1-1-0.1-1.5c0-2.2,0.7-4.3-0.1-6.5\n                        c-0.2-0.7-0.2-1.4,0.4-2c1.2-1.8-2.2-5.1,1.9-5.9C864.6,308.1,865.3,315.1,865.9,322.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE7F86"),
                d:
                  "M868.1,345c1.5,1.8,0.7,4,0.9,6C867.7,349.2,868.1,347.1,868.1,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A44B58"),
                d:
                  "M589,368c-0.4,1-0.7,2-1.1,2.9c-3.3,2.3-6.6,4.7-9.9,7c-0.4-0.3-0.7-0.7-1.1-1\n                        c-0.2-1.4,0.9-1.8,1.7-2.6c1.5-1.1,3.1-2.1,4.7-3.2c1.3-0.7,2.3-1.8,3.4-2.8C587.4,368,588.1,367.4,589,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66141F"),
                d:
                  "M579.1,375c-0.7,0.6-1.5,1.3-2.2,1.9c-4.7,2-9.4,4-14,5.9c-2.6,0.4-5.1,0.8-7.7,1.2\n                        c-1,0.6-1.3-0.1-1.5-0.9c0.3-1.3,1.2-2.2,2.1-3C562.7,374.4,570.8,374.5,579.1,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D1722"),
                d:
                  "M554,383c0.4,0.4,0.8,0.7,1.1,1.1c-2.2,1.8-5.2,0.2-7.5,1.7c-8.8,0.1-17.7,0.3-25.5-5\n                        c-1.5-0.4-2.8-1-2.2-3c0.9-1.1,2.4-2,3.4-1.3c3.6,2.6,7.9,1.9,11.9,2.8c0,2,1.5,2,3,2.5C543.5,383.3,548.8,381.9,554,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M273,353c-1.9-1.7-0.7-4-1-6c-1.4-1.2-2.3-3-1.2-4.4c2.7-3.6,3-8.4,6.2-11.6c0.7-0.7,1.3-1.3,2-2\n                        c0.3,0,0.6,0,1,0c0.9-0.3,1.3,0.2,1.6,0.9c-1.1,5.6-4.5,10.3-5.8,15.8C274.9,348.1,275.2,351,273,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63161F"),
                d:
                  "M281,330c-0.3-0.3-0.7-0.7-1-1c4.5-7.2,11.8-10.5,19-14c0.2-0.8,0.6-1.3,1.3-1.6\n                        c0.9-0.3,1.9-0.3,2.8-0.1c1.1,0.4,2.3,0.7,3.1,1.7c-0.8,3.3-4.5,1.7-6.1,3.7c-0.6,0.4-1.2,0.7-1.9,0.9\n                        c-3.9,0.5-7.1,2.4-9.6,5.3C285.8,326.1,284.6,329.8,281,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0939C"),
                d:
                  "M300.3,314.2c-0.5,0.3-0.9,0.6-1.4,0.8c-3.7-0.3-7.5,0.6-11.1-0.9c1.4-0.3,3.1,0.4,4.2-1.1\n                        c2.4-2.1,3.9-2.1,5.7,0C298.4,313.8,299.8,312.9,300.3,314.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72132F"),
                d:
                  "M277,331c-0.8,4-2.3,7.7-4.9,10.9c-1.5,1.8-0.3,3.4-0.1,5.1c-0.3,0-0.6,0-0.9,0c-1.2,0.1-2.3,0-3.1-1\n                        c2.4-2.3,0.8-3.8-1.3-3.7c-2.6,0.2-4.5,0.7-4.5-2.8c0-0.2-2.1-0.3-3.2-0.5c-2.5-5.2-8.5-2.2-12.1-5c-0.3-0.3-0.8-0.4-1.3-0.6\n                        c1.3-1.9,2.8-1.6,4.3-0.8c0.9,0.5,1.7,1.3,2.5,0.1c0.8-1.3-0.3-2.1-1.2-2.9c-0.2-0.2-0.5-0.5-0.8-0.5\n                        c-4.1-0.8-4.7-4.1-5.5-7.3c1.5-1.3,2.9-2.8,5-3c-0.4,1.4-2.3,2.1-1.8,3.9c6.1-2.7,12.1-1.3,15.6,2c3.2,3-0.3,2.3-1.3,3.1\n                        c2.4,1.7,5,1.3,7.6,1.2c0.7,1.8-3.5,2.2-1,3.9c1.1,0.8,2.9,0.4,3.7-1.8C273.5,328.9,275.5,331.3,277,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871835"),
                d:
                  "M268,346c1.1,0,2.3-0.2,3.1,1c0,1.3-0.1,2.6-0.1,4c-2.5-1.4-4.7-2.4-7.1,0.5c-1.6,1.9-4.2,0-6.4,0.4\n                        c-1.9,0.4-3.5,0.6-3.5,3.1c-1.7-1.7-7.7,1.1-5-5C255.3,348.7,261.7,347.3,268,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72132F"),
                d:
                  "M258.9,339.3c-2.8,3.2-5,0.3-7.4-0.3C254.1,337.7,256.5,339.8,258.9,339.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631228"),
                d:
                  "M237.6,326.5c1.1,0.1,1.3,0.8,1.3,1.4c0,1.1-0.3,2-1.7,1.6c-0.5-0.2-0.9-0.7-1.4-1.1\n                        C236.5,327.7,237.1,327,237.6,326.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631228"),
                d:
                  "M233.3,343.1c0.7,0,1.2,0.2,0.9,0.8c-0.1,0.3-0.6,0.7-1,0.8c-0.5,0.1-0.9-0.3-0.7-0.8\n                        C232.6,343.5,233,343.3,233.3,343.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1721"),
                d:
                  "M1966,357c0.4,0.4,1.3,1,1.2,1.2c-0.7,1.5-2.1,0.5-3.2,0.8C1964,357.7,1964.7,357,1966,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93F4B"),
                d:
                  "M1268,311.1c1.6-0.1,3.3-0.1,4.9-0.2c0.6,0.1,1.3,0.2,1.9,0.3c-0.8,1.4-3.1,0.1-3.8,2.6\n                        c1.7-0.1,4-1.3,4.5,1.6c0.1,0.6,1.6,1.2,2.5,1.3c9.5,0.9,19-0.2,28.5-0.8c8.5-0.5,17-1.5,25.5-1.8c10.4-0.4,20.7-1.1,31-3\n                        c0,0.8,0.2,1.6,1,2c-0.2,3.2-0.9,4.9-4.6,2.8c-2.6-1.4-5.7-1.7-8.4,0.3c-0.7,0.5-1.5,1-2.2,0.5c-4.5-3.5-9.1-0.6-13.6,0\n                        c-2.5,0.3-4.9,0.2-7.4,0.5c-1.7,0.2-3.7-0.7-5.2,1.5c4.3,2.4,9.1,1.4,13.5,2.4c5.1,1.2,10.4,1.7,15.6-1c1.7-0.9,4.8,0.3,7,0.7\n                        c5.9,1.1,11.7-0.3,17.4,0.1c0.7,0,1.3,0.9,1.9,1.3c-0.3,0.3-0.7,0.7-1,1c-7.9,2.4-16.1,1.8-24.1,2.4\n                        c-22.5,1.8-45.1,2-67.5,4.8c-3.4,0.4-7,0.7-10.4-0.3c-2.9-2.1,0-2.4,1-3.4c0.5-0.2,0.9-0.4,1.4-0.5c2.8-0.5,5.7,0,8.5-0.4\n                        c3-0.4,6.3-0.3,7.4-4.4c0.4-1.7,2.3-2.1,3-1.9c-5.2,2.4-11.9-0.6-18,2.2c-0.5,0-0.9,0-1.3-0.2c-1.9-1.2-3.9-1.9-6.1-1.3\n                        c-1.3,0.4-2.7,0.9-3.3-1c0.8-2.4,0.8-4.5-1.6-6C1265.4,311.3,1267.3,311.8,1268,311.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB626B"),
                d:
                  "M1274,329c18.3-1.3,36.7-2.7,55-3.9c10.1-0.7,20.2-0.8,30.3-1.5c5.9-0.4,11.8-1.1,17.7-0.6\n                        c1.2,2.7,1.7,4.1-2.6,4.7c-8.4,1.2-16.8,1.3-25.2,1.3c-14.2,0-28.2,2.2-42.3,4c-9.7,0.6-19.4-1-29.2,0.7\n                        c-2.5,0.4-5.4,0.1-7.7-0.8c-2.6-1.1-4.8-0.5-7.2,0.1c0-0.6,0-1.3,0-1.9c1.2-1.6,2.9-2.3,4.8-2.4\n                        C1269.9,328.9,1272,328.1,1274,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5A64"),
                d:
                  "M1330,338.9c-9.4-0.4-18.8,0.9-28.1-0.8c8.1,0,16.3-0.1,24.4-0.1C1327.5,338,1328.9,337.7,1330,338.9z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5A64"),
                d:
                  "M1300.1,338.1c-1.7,1.1-3.5,1.1-5.2,0C1296.7,338,1298.4,338.1,1300.1,338.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5A0A6"),
                d:
                  "M300.3,314.2c-1.1-0.9-4.1,1.5-3.7-2.1c-1.6,0.1-3.3-0.6-4.6,0.9c-0.3,0-0.7,0-1,0\n                        c-0.5-0.5-1.6-0.8-1-2c7.2-0.5,14.3,0.6,21.5,0.1c5.2-0.4,10.1-3.1,15.5-2.1c13.3,0,26.7,0,40,0c9.9-0.4,19.8,1,29.7-0.9\n                        c2.4-0.5,4.3,1.3,6.6,1.7c3.8,0.6,7.3,1.8,11.1,0.4c1.2-0.4,2.1,0.7,2.6,1.8c-1.6,3.9-4.8,4.2-8.2,3.3\n                        c-5.3-1.3-10.5-2.5-15.9-3.2c-5-0.7-9.9,0.3-14.8,0.3c-9.6,0.1-19.2-1.2-28.8,0.2c-3.7,0.6-7.1,1.6-10.4,2.9\n                        c-3.6,2.2-7.7,0.1-11.3,1.4c-6.8-0.9-13.4-3.5-20.5-2.8c-1.3,0.1-2.6,0.1-3.9,0C302.1,314.2,301.2,314.2,300.3,314.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0939C"),
                d:
                  "M290,311c0.3,0.7,0.7,1.3,1,2c-1.4-0.1-2.9,0.5-4-1C287.7,310.8,288.9,311,290,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6A6AD"),
                d:
                  "M339,315c-0.1-0.6-0.8-1.6,0-1.7c7.9-1.8,15.9-3.2,24.1-2.7c8.4,0.5,16.8,0.5,25.3,0\n                        c3.8-0.2,8.1,1,11.9,1.3c5.4,0.4,11.2,5.7,16.7,0.1c1.8,0.6,1.4-2.1,2.9-2c0.4,2.1,2.4,3.6,2,6c-2.7,1.2-5.4,2.2-7.8,3.9\n                        c-4.5,1.4-8.2-0.9-11.9-2.9c-4.1-2.2-8.4-2.7-13-2.6c-5.8,0.2-11.6-0.1-17.4,0.1c-2.8,0.1-5.9,0.1-4.5,4.5\n                        c-2.8,2.1-5.9,1.6-9,0.7c-4.2-1.3-8.2-3-12.9-1.9C343,318.4,340.9,316.7,339,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D14B56"),
                d:
                  "M422,300c4.7-2.1,9.7-0.5,14.5-1c2.5-0.2,4.9-0.1,7.4-0.1c5.4,0.2,10.6-2.2,16-1c1,0,2,0,3,0\n                        c1.1,1.4,2.8,1.2,4.2,0.9c11-2,22,1.3,33-0.8c2.3-0.4,4.1-2.2,7-1.7c1.8,0.3,3.3,0.7,4.8,1.5c1.7-0.9,3.8-0.5,5.6-1.6\n                        c3.3-2,6.8-3.7,11.1-1.8c2.1,0.9,5,0.1,6.7-2.2c2.1-2.9,4.3-2.6,7.2,0.5c-0.9-2-0.7-3.9-2-3.4c-4.8,1.7-9.2-2.4-14.2-0.3\n                        c-2.4,1-5.2-1.9-7.4-3.2c-2.1-1.2-4.7-2.3-6.3-4.5c0-1.5,1.6-1.6,2.2-2.5l0,0c1.5-0.4,3.1-1.8,4.1,1.1\n                        c0.5,1.5,2.9,1.5,4.5,1.5c5-0.2,10,0.8,14.9,1.1c2,0.1,4.1,0.3,5.8,1.4c3,1.8,6.1,2.3,9.6,1.8c2.5-0.3,5.3-0.4,6.1,2.9\n                        c0.8,3.3,0.3,6.1-3.1,8.1c-4.1,2.4-8.3,1.9-12.6,1.2c-0.6,0.2,0,1-0.2,0.4c0-0.1,0.1-0.1,0.5-0.2c2.3-0.1,4.7-0.4,3.2,3.3\n                        c-5.4,0.6-10.8,0.1-16.1-1c-0.7-0.1,0.1,0.9,0,0.2c0-0.1,0.1-0.2,0.4-0.1c10.1,1.7,20.4,1.3,30.4,3c1.9,0.3,4-0.2,5.5,1.6\n                        c0,0.3,0,0.6,0,0.9c-14.4,0-28.7-1.1-43-2.8c-28.7-3.2-57.6-3.9-86.5-3.3C433,300.1,427.5,300,422,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M639,316c-2.5-1.2-5.6-0.3-8-2c3.9-2.2,8.2-1.9,12.4-2.3c4.6-0.4,9.2,0,13.7,0.5\n                        c2.8,0.3-0.2-1.6,1-1.6c1.7-1.3,3.8-0.9,5.7-1c19.9,2.1,40,3.3,59.9,5.7c0.8,0.4,1.3,1,1.6,1.9c-0.7,2.9-2.8,2.4-4.8,2\n                        c-6.3-1.2-12.6-0.9-18.9-0.1c-6.1,0.7-12.3-2-18.3-0.2c-4.7,1.4-9.5,1.5-14.3,1.2c-2.8-0.2-5.6-0.9-8.4-0.7\n                        c-1.6,0-3.1,0-4.7-0.2c-0.5,0-1-0.2-1.5-0.3c-1.6-0.6-3.2-0.7-4.9-1c-0.5-0.1-0.9-0.2-1.4-0.3c-2.4-0.6-4.8-0.1-7.2-0.5\n                        C640.2,316.9,639.5,316.6,639,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45860"),
                d:
                  "M658,311c0.6,0.5,1.3,0.9,2.7,1.9c-10.4,0.2-20.1,0-29.7,1l0,0c-6.3-1.2-12.7-1.3-19-2\n                        c-4.4-0.5-8.8-0.5-13-2c0.5-2.7,2.7-2,4.2-1.6c7.4,1.9,14.6-1.2,21.9-1.2c1.9-0.6,3.7-0.5,5.6-0.3c8.3-0.4,16.3,2.1,24.5,2.4\n                        C656.4,309.3,657.4,309.9,658,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97B83"),
                d:
                  "M639,316c0.7,0,1.3,0,2,0c2.5,1.4,5.5-0.3,8,1l0,0c1.5,1.2,3.5-0.2,5,1c0.3,0,0.7,0,1,0\n                        c1.8,1,3.8,0.3,5.7,0.5c10.6,1.6,21.4,1.1,32.1,2.4c7,1.2,14.1,2.4,21.1,3.3c1.8,0.2,3.7,0.2,5.1,1.7c0,0.3,0,0.7,0,1\n                        c-2.6,2.2-5.7,1.3-8.6,1c-8-1-15.9-3.3-24.2-2.2c-3.2,0.4-6.4-1.6-9.7-1.8c-1.7-0.1-3.3-0.6-4.8,0.4c-0.7,0.3-1.5,0.5-2.3,0.4\n                        c-2.3-0.3-4.4-1.2-6.7-1.4c-3.6-0.2-7.3-0.2-10.8-1.3c-1.3-1.8-3-2.1-5-1.3c-0.9,0.2-1.8,0.2-2.6,0c-1.8-0.7-3.5-1.7-5.4-0.2\n                        c-0.7,0.2-1.3,0.1-1.8-0.5c-2-1-4-2-6-3C633.7,316.6,636.5,318,639,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0525A"),
                d:
                  "M625,308c-0.2,0.5-0.4,1.3-0.5,1.3c-7.5-1.7-14.9,3.5-22.4,0.2c-1.1-0.5-2.2-0.7-3.1,0.5\n                        c-10.4-0.8-20.8-1.4-31-4c0,0,0-0.1,0-0.1c1.6-1.6,3.7-1.3,5.6-1.3c5.8-0.1,11.5,1,17.2,1c1.6,0,3.3,0.4,4.8-0.5\n                        c1.2-0.5,2.5-1,3.8-1c7.2,0.4,14.3,1.6,21.6,1.6c0.5,0.1,1,0.2,1.5,0.4C623.6,306.5,624.5,307,625,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M612,312c6.4,0,12.8-0.3,19,2C624.6,314.1,618.3,313.5,612,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4754"),
                d:
                  "M513,281c3.7,2.6,8.3,3.9,11.7,7c0.2,0.2,0.7,0.6,0.8,0.5c4.8-4.2,9.6,1.9,14.5-0.2\n                        c3.7-1.5,2.9,3.2,4.8,4.4c-0.4,0.5-0.7,1.1-1.2,1.4c-1,0.7-2,0.3-2.6-0.6c-2.1-3.6-3.3-2-5.1,0.5c-2.4,3.5-7.1,3.1-9.4,1.9\n                        c-2.7-1.4-4.2-0.7-6,0.2c-2.7,1.4-5.5,2.2-8.6,2c1.1-1.6,3-1.2,4.5-1.8c2.9-1.2,3.3-3,2.8-5.6c-0.5-2.8-1.9-4.9-4.5-5.5\n                        c-5.3-1.1-10.6-2.3-16.1-2.1c-3.7,0.1-6.7-3.7-10.7-2c1.6-3.6,4.6-2.4,6.6-1.2c3.6,2.2,7,2,10.8,1c0.7-0.2,1.2-0.9,2.1-0.1\n                        c1.8,1.6,2,1.4,2.4-0.9c0.1-0.3,0.8-0.6,1.2-0.9l0,0C511.4,279.9,513.6,279.1,513,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F19499"),
                d:
                  "M766,334c2,0.3,4.2-0.8,6,1c-3.4,2-7.1,2.5-10.9,2.5c-3.7,0-7.7-1-11.1,1.5c-2.7-0.7-5.4-1.6-8.1-0.2\n                        c-0.4,0.2-1.1,0.3-1.4,0.1c-6.8-3.9-14.7,0.2-21.7-3.2c-1.3-0.6-2.3,1.9-4,1.3c-2.1,1.8-4.5,1.2-6.9,0.9\n                        c-24.8-2.6-49.2-8.3-74.2-9.7c-1.4-0.1-2.8-0.5-4.1-0.9c-2.4-0.5-4.8-1.1-7.3-1.1c-15.2-1.8-30.3-3.8-45.5-5.4\n                        c-0.8-0.3-1.4-0.7-1.9-1.4c0.6-4.4,2.7-0.4,3.8-1.1c-1.2-1.9-5.1,0-5.8-3.4c8.7,0.7,17.3,1.3,26,2c8.3,2.2,16.9,1.5,25.3,2.5\n                        c3.3,0.4,6.7-0.3,9.7,1.5c0.7,0,1.3,0,2,0c1.4,0.8,2.5-0.4,3.7-0.6c0.5,0,1,0,1.4,0.1c7.2,2,14.6,2.5,22,2.9\n                        c6.2,2.2,12.7,0.8,19,1.3c2.2,0.8,4.4,1.2,6.8,0.9c6.7-0.9,13.1,1.6,19.7,2.2c8,0.8,16.1,1.4,24.1,2.1\n                        C743.9,330.9,754.9,332.9,766,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M573,315c2.3,1.1,4.7,2.2,7.1,3.3c-1.5,2-3.7-1.4-5.1,0.7c-5.4,2.1-10.7,2.4-16-0.3\n                        c-0.8-1-0.8-2.1-0.3-3.3c0.2-0.5,0.6-0.4,1-0.5c-0.5-1-0.8,0-0.9,0.2c-1.2,1.7-2.3,0.6-3.8,0.4c-6.1-1.1-12.2-2.9-18.5-1.6\n                        c-2,0.4-4,0.8-5.9,0.1c-10.3-4-21.1-3.5-31.8-3.7c-2,0-4.9,1.1-5.7-2.3c0.8,0,1.6-0.2,2-1c19.2,0.3,38.2,2.4,57.2,4.7\n                        C559.1,312.6,566.3,312.2,573,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M634,321c-8.8-0.7-17.7-1.4-26.5-2c-3-0.2-5.8-0.5-8.5-2c10.6,0.7,21.2,1.4,31.8,2\n                        C632.3,319.1,633.4,319.7,634,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M639,321c-1,1.3-2,1.3-3,0c0.3-0.3,0.7-0.7,1-1c0.7,0,1.3,0,2,0c0.3,0.2,0.3,0.4,0.3,0.7\n                        C639.2,320.9,639.1,321,639,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA737B"),
                d:
                  "M465,253c0.3,0,0.6,0,0.9,0.1c1.4,2.4,4.9,2.2,6.1,4.9c0.9,1.5,2.4,2.4,4,3c2,1.3,4.1,2.6,6.1,3.8\n                        c-0.5,3.4-3.4,1.3-5.1,2.2c-2.9,1.7-6.3,1.8-9.5,2.1c-2.1,0.2-4.4,0.3-5.5-2.2c-2.1-3.3-6.8-1.4-9.1-4.9\n                        c-1.8-2.7-1.6-6-3.7-8.4c2.6-0.6,3.6-3.3,5.9-4.3c0.6-0.3,1-1.1,1.9-2C457.7,252.2,460.8,253.5,465,253z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36570"),
                d:
                  "M462,267c2.5,1.4,5.1,1.2,7.8,0.6c4.1-0.9,8.3-1.9,12.4-2.8c4.8,0,7.9,4.8,12.8,4.4\n                        c1.3,3.3,6,0,7.1,3.7c-2.6,1.8-5.4,1.3-8,0.1c-2.9-1.3-6.1-1.6-9-2.8c-2.1-1.3-4.1-2-5.6,0.8c-0.3,0.3-0.7,0.5-1.2,0.7\n                        c-5.6-0.6-11.2-1.1-16.8-0.7c-3.8,0.3-7.5-2.2-11.4-1c-4.6-0.3-9.2,0.5-13.8-1.4c-2.2-0.9-2.1-2-2.2-3.6c1.9,0.4,2.9-0.9,4-2\n                        c1,3,3.7,3.3,6,2.8C450.2,264.3,456,266.3,462,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84551"),
                d:
                  "M460,298c-5.3,1.2-10.7,1-16,1c1.6-1.7,3.6-0.8,5.5-0.9c1.8-0.1,3.6,0,4.5-2c2,0,4,0,6,0\n                        C460,296.7,460,297.3,460,298z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF5D67"),
                d:
                  "M450,270c2.5-1.4,4.8-2.2,7.6-0.4c2.9,1.9,6.2,0,9.3-0.1c4.2-0.1,8,0.9,12,1.5c0.9,1,0.9,2,0,3\n                        c-5.3,0-10.7,0-16,0c-1.2-3.8-5.5-0.8-7.2-3.3C453.4,273.9,451.9,270.2,450,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E65965"),
                d:
                  "M479,274c0-1,0-2,0-3l0,0c1.3-1.6,3.7-0.5,5-2c3.8-0.8,6.9,1.6,10.1,2.7c2.7,0.9,5.3,1.1,8,1.3\n                        c0.3,0,0.6,0,0.9,0c-0.3,0.7-0.7,1.3-1,2c-2.6,0.1-5.3-0.3-7.8,0.7c-0.9,0.4-2.4,1.3-2-1.5c0.2-1.6-2-0.5-3.2-0.4\n                        C485.6,274.2,482.3,276.4,479,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3AAB3"),
                d:
                  "M428.1,321.8c-0.3-0.4-0.6-0.8-0.9-1.3c-0.1-0.8-0.2-1.6-0.3-2.4c0.7-2.8,1.5-5.5,5.4-3.4\n                        c1.5,0.8,3.3,0.6,4.8-0.2c2.2-1,4.5-1.1,6.8-1c2.8,0.2,5.3-0.2,7.8-2.2c3-2.5,7-1.5,10.6-1.2c2.9,0.2,5.8,0.8,8.7-0.2l0,0\n                        c3.3-0.5,6.6-1.4,10-1c2.3-1.2,4.7-0.2,6.8,0.2c6.7,1.2,13.5,0.7,20.2,0.9c0.5,0,1-0.1,1.5,0c2.1,0.5,5.5-0.1,5.5,2.9\n                        c0,3.5-3.1,3.1-5.7,2.9c-1.7-0.1-3.3,0.5-4.9,0.8c-0.5,0.1-1.1,0.1-1.6,0.1c-3.7-0.6-7.4-0.3-11.2-0.3c-1.6,0-3.1,0.6-4.7,0.4\n                        c-2.6-0.6-5.2-0.4-7.8-0.4c-2.9-0.2-5.9,0.9-8.8,0.1c-4.4,0-8.7-0.6-13.1,0.5c-8.4,2-17,2.6-25.5,4\n                        C430.5,321.2,429.5,322.4,428.1,321.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F19BA1"),
                d:
                  "M504,316c2.1-1.4,4.3-2.3,6.9-1.1c1.1,0.5,2.8,0.2,3.2-1.5c0.4-2.1-1.5-1.1-2.4-1.6\n                        c-1.7-0.9-3.5-0.9-5.3-0.8c-8.6,0.4-17,0-25.4-2c3.9-2.1,8-0.5,12-1c1.3,1.5,3.1,1.1,4.7,1c8.8-0.6,17.6,1.2,26.4,1\n                        c1.4,0,2.7,0.2,3.7,1.3c2.3,2.5,5.6,2.5,7.9,1.5c6.8-2.9,13.2,2.1,19.8,0.3c1.1,3.6,3.7,0.4,6,1.4c-1.8,0.8-2.7,2-2.4,3.7\n                        c-0.7,0.6-1.6,0.7-2.5,0.6c-7.3-1.4-14.7,0.2-22.1-0.4c-0.9,0-1.8-0.1-2.7-0.4c-5-1.2-10-0.4-15-0.5\n                        C512.5,317,508,318.6,504,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAA9AF"),
                d:
                  "M471,310c-4.1,2.1-8.5,0.5-12.7,1c-2.8,0.3-5.2,2.1-7.3,2.9c-6.1,2.1-13.6,3.7-19.4,1.9\n                        c-4.6-1.5-2,4.7-4.7,2.5c-1.4-2.2-2.3-4.6-2.9-7.1c3.4-3.8,7.9-1.8,11.7-1.9C447.5,308.8,459.3,308.7,471,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F2A8AD"),
                d:
                  "M415,319c1.4-3.1,3.8-3.8,6.9-3c2.6,0.9,1.6,3.7,2.9,5.2c0.5,1.4-0.7,1.9-1.2,2.8\n                        c-2.8,3.2-8,3.4-9.6,8c0,1,0,2,0,3c-3.8-0.2-5.9-2.9-4.7-6.2c0.6-1.7,1.5-3.3,3.1-4.3C415.6,322.4,415.8,322,415,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D77578"),
                d:
                  "M423.1,323.1c0.6-0.6,1.2-1.3,1.7-1.9c0.4,0.3,0.7,0.5,1.1,0.8c1,3,2.1,6,3.1,8.9\n                        c-0.3,0.3-0.6,0.7-0.9,1c-0.2-0.1-0.5-0.1-0.7-0.2C425.2,329.3,424.3,326.1,423.1,323.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A03540"),
                d:
                  "M919.5,615.5c-1,0.4-1.7,0.5-1.9,0.2c-1.1-1.3-4.4,0.5-4-2.5c0.3-2.2,2.3-3.3,4.5-3\n                        c1.3,0.2,1.6-0.4,2.2-1.2c1.1-1.4,2.2-1.4,2.2,0.9c0,5.5,3.1,7.7,8.2,7.1c5.4-0.6,11.5,2.3,15.8-3.4c0.7-0.9,1.8-0.5,2.3,0.8\n                        c0.4,1,0.1,2.8,1.8,2.4c2.5-0.6-0.6-2.6,0.8-3.7c3.7,0.7,7.3,0.2,10.5-2.3c2-1.6,4.2-2.2,4.8,1.1c0.4,2.3,2.9,1.8,3.8,3.2\n                        c-1.2,1.8-3.3,0.3-5.6,2.6c5.8-2,11.2,1.9,15.5-2.8c0.2-0.2,0.7-0.4,0.9-0.3c7.2,5.3,15.5,1.1,23.1,2.5\n                        c0.6,0.1,1.3,0.3,2.3,0.5c-1.5,2.5-3.7,1.5-5.4,1.5c-26.5,0.1-53,0-79.5,0.1c-2.5,0-4.9-0.2-7.4,0.7c-3.6,1.3-4.6-2.4-6.7-3.9\n                        c-0.2-0.1-0.1-1.1,0.2-1.3c1.3-0.9,2.6-0.5,3.6,0.5C913.7,617.4,916.2,617.6,919.5,615.5c0.3-0.6,0.2-0.6,0.2-0.6\n                        c-0.2,0.2-0.3,0.5-0.4,0.8c-0.2,0.6-0.9,0-0.3,0.3C919.2,616,919.7,615.5,919.5,615.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD313D"),
                d:
                  "M900,593c16.2,1.9,32.5,1.7,48.6,4c2.7,0.4,5.6,0,8.4,0c2.9,1.4,6.1-0.3,9,1l0,0c2.5,1.4,5.5-0.3,8,1\n                        c0.3,0,0.7,0,1,0c2.3-0.7,4.7-0.8,7,0l0,0c2.6,1.3,5.5-0.9,8,1c0.3,0,0.7,0,1,0c0.3,0.2,0.3,0.4,0.3,0.6\n                        c-0.1,0.2-0.2,0.3-0.2,0.3c-10.2,0-20.3-0.1-30.5,0c-15.5,0.2-30.9-3.1-46.5-2.3c-3.6,0.2-7.4-2.1-11.4-1.9\n                        C900.7,596.9,900.3,594.7,900,593z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD313D"),
                d:
                  "M1007,606c3.3,4.5,9.2,5.2,13,9c-6.6,0-11.2-5-17-6.9c-3.8-1.2-7.5-2.3-8-7.1c1-0.7,2-0.7,3,0\n                        C1001.7,601.5,1004.6,603.2,1007,606z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M998,601c-1,0-2,0-3,0c-1.3,0-2.7,0-4,0c0-0.3,0-0.7,0-1C993.7,597.8,995.8,599.9,998,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791625"),
                d:
                  "M1031,594c0.5-1.2-1.9-1.9-0.7-2.8c0.9-0.7,2.1-0.7,3.5,0.2c4.2,2.7,9,4,13.7,1.4\n                        c2.6-1.4,4.4,0.7,6.9,0.3c-3.9,5.3-8.6,0.3-12.5,1.9c-0.8,0.8-1.7,1.1-2.8,1.2c-2.2-0.2-4,1-5.9,1.6\n                        c-7.8,0.8-15.6-0.2-23.1-1.9c-3.5-0.8-6.4,0.7-9.7,0.5c-6.9-0.4-13.9-0.9-20.9-0.3c-0.5,0.2-1.1,0.2-1.6-0.1c-1,0-2-0.1-3-0.1\n                        c-1.1,0.3-1.3-0.3-1.1-1.2c0.1-0.1,0.1-0.3,0.3-0.4c0.4-0.2,0.5-0.7,0.4-0.7c-13.3,1.2-26.2-2.9-39.5-2.2\n                        c-2.3,0.1-4.6-0.4-6.9,0.2c-0.4,0-0.7-0.1-1.1-0.1c0-2,2.4-1.3,3-2.7c1.5-1.3,3.6,0.4,5-1c7.8,0.6,15.7,1.1,23.5,1.7\n                        c10.4,0.8,20.7,1.6,31.1,2.3c4.8,0.3,9.8,2.3,14.4-1c2.9-2.9,6.9-2.6,10.4-4c2.9,0.3,4.5,1.3,1.7,5c2.1-1.6,1.7-3.2,2.2-4.6\n                        c0.2-0.4,0.6-0.8,0.9-1c1.7-0.6,3.6-0.9,4.9-2.5c6.1-2.7,12.6-3.9,18.7-6.6c1.4-0.6,2.9-0.5,4.2,0.7c2.8,0,1.8,3,3.2,4\n                        c-1.1,1.5-2.2,1.8-4.2,1.5c-3.9-0.4-8-1.4-11.9,0.6c0.5,1.6,2.3,0.1,2.9,1.2c-4.1,3-9.1,1.5-13.7,2.4c-3.1,0.6-3.7,2-3.9,5.2\n                        c3.2-4,6.1-1.9,8.2,0.1C1028.8,594.3,1029.9,593.6,1031,594c0.4,0.4,0,0.8,0,1.2C1031.3,594.8,1031.4,594.4,1031,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D171D"),
                d:
                  "M979,595.8c3.3-1.6,6.8-0.7,10.3-0.8c8.6-0.2,17.4-1.3,25.6,0.4c6.5,1.4,12.7,1.1,19.1,1.6\n                        c1.4-1.4,3.7-0.4,5-2c1,0,2,0,3,0c2.3,3.6,5.9,1.7,8.9,1.9c2.7,0.2,4.5,0.6,4.1,3.8c-14.7-0.9-29.3-1.7-44-2.6\n                        c-3,1.7-6,1.7-9-0.2l-0.4-0.1l-0.4,0c-2.6-1.2-5.5,0.3-8.1-0.9c-1,0-2-0.1-2.9-0.1C986.5,595.5,982.6,597.6,979,595.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C171F"),
                d:
                  "M928.1,591.8c10.5-1.4,21-1.4,31.5,0.5c5.9,1.1,12.1,0.2,18.3,1.2c-1.4,0.6-2.7,1.1-4.1,1.7\n                        c-3,0.6-5.9,0.7-8.8-0.1l0-0.1c-3.9-1.3-8.1,0.3-12-0.9C944.7,593.3,936.4,592.5,928.1,591.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M1002,597.9c3,0.1,6,0.1,9,0.2c1.2,2.1,0.6,2.9-1.8,2.9c-1.5,0-3.2-1.3-4.6,0.5\n                        c0.3,1.7,2.6,2.5,2.3,4.5c-3.4-0.9-5.8-3.6-9-5C998.6,599.1,1003,602,1002,597.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD313D"),
                d: "M953,594c4,0.3,8.1-0.9,12,0.9C961,594.6,956.9,596,953,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M990,600c-2.7-0.4-5.5,1-8-1C984.7,599.4,987.8,596.3,990,600z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M979,595.8c3.6,0.8,7.5-0.7,11.1,1.2c-4-0.4-8.2,1.1-12.1-0.9C978.4,596,978.7,595.9,979,595.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M965,595c2.9,0,5.9,0.1,8.8,0.1c0.4,0.3,0.8,0.6,1.2,0.9C971.6,596.5,968.2,596.5,965,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d: "M966,598c-3-0.4-6.2,1-9-1C960,597.4,963.2,596,966,598z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M993,597.1c2.7,0.2,5.6-0.7,8.1,0.9C998.5,597.6,995.6,598.9,993,597.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d: "M974,599c-2.7-0.4-5.5,1-8-1C968.6,598.4,971.5,597,974,599z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d: "M982,599c-2.3,0-4.7,0-7,0C977.3,597.4,979.7,597.4,982,599z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C313B"),
                d:
                  "M740,574c8.5,0.8,17,1.9,25.5,3.3c7.5,1.2,15,1.9,22.5,2.8c0.5,2.4,3.5,1.3,4.5,3.7\n                        c-6.2-5-12.4-0.6-18.5-0.7c-11.6-2.5-24.3-0.6-34.7-8.1c-0.1-0.1-0.2-0.2-0.3-0.3C739.3,574.4,739.6,574.2,740,574z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A5303C"),
                d:
                  "M831,586c13.1,1.4,26.2,2.9,39.3,4.2c6.2,0.6,12.4,1.2,18.6,1.6c1.1,0.1,1.9-0.3,2.1,1.2\n                        c-1.7,3.2-4.9,3.2-7.8,3.2c-6.9,0.1-13.6-1-20.2-3.2c-0.6-3-3.1-1.9-4.8-2c-7.7-0.5-15.5,1-23.2-1\n                        C833.9,588.5,830.3,589.4,831,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03E4B"),
                d:
                  "M797,581c4.5-0.1,8.8,0.6,13,2C805.5,583,801.1,583.1,797,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43443"),
                d:
                  "M863,593c2.2-0.9,4.4-0.4,6.7,0.1c7.1,1.8,14.3,3.1,21.4-0.2c0.3,0,0.6,0,1,0c-0.3,3.2,0.3,6.8-4,8\n                        c-1.4,0.7-0.6,4.8-4,2.4c-0.7-0.5-1.7,0.8-2.3,1.6c-0.8,0.9-1.6,2.7-2.9,0.9c-0.7-1-3-2.2-1.2-3.8c1.8-1.7,0.3-2.4-0.7-2.8\n                        c-2.4-1.1-6.3,1.6-7-3.2c-0.9,1.7-1.3,2.9-4,1.4C863.5,596.2,862.8,595.2,863,593z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E333F"),
                d:
                  "M827.9,614c-0.1,0.6,0,1.4-0.9,1.4c-0.9,0-0.9-0.8-0.9-1.4c0-0.6,0-1.4,0.9-1.4\n                        C827.9,612.5,827.9,613.3,827.9,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882936"),
                d:
                  "M889,543c0.3,4.2-2.9,2.7-5,3c-16.9-2.2-33.8-3.3-50.7-5.1c-19-2-37.9-3.5-56.8-6.2\n                        c-0.5-0.1-0.9-0.3-1.4-0.5c-0.1-2.8,2.1-2.3,3.7-2.5c3.4-0.4,6.7-1,10-1.6c3.2-0.3,6.4-1,9.7-0.8c3.6,2.5,8,2.4,12,3.2\n                        c9.8,1.8,19.8,2.5,29.5,4.7c5.3,0.8,10.6,0.4,15.9,0.7c0.8,0.1,1.5,0.2,2.2,0.5c5.1,1.9,10.6,2,15.9,2.7\n                        C879,541.5,883.9,543,889,543z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1E2E"),
                d:
                  "M775,534c9.6-0.1,19.1,1.1,28.5,3.4c2.7,0.6,5.3,0.8,7.9,0.6c12.3-0.9,24.1,3.3,36.2,3.8\n                        c8.6,0.4,17.2,1.5,25.9,2.2c3.6,0.3,7.1,0.7,10.5,2c-14.5-0.3-28.9-2.5-43.4-3.8c-8.5-0.8-17.1-1.1-25.7-2.1\n                        c-12.1-1.5-24.4-1.4-36.5-4.1c-0.8-0.2-1.7,0-2.5,0c-1.1-1.5-2.6-0.9-4-1C772.4,532.8,773.6,533.2,775,534z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M805,579.9c-7-2-14.3-1.5-21.4-2.9c-5.2-1-10.4-1.5-15.6-2.2c0.4-5,4.5-3.2,6.4-2.6\n                        c8.1,2.4,16.4,3,24.7,3c2.3,0,3.8,2,6.4,1.2c1.9-0.6,1.2-1.5,1.5-2.4c1.4,0.1,3-0.5,4,1c3.1,3.8,7.7,1.2,11.4,2.8\n                        c1.8,0.7,4-0.4,5.6,1.2c2.4,3.3,6.1,1.4,9,1.7c4.2,0.5,8.5,0.9,12.8,2.3c-3.6,0-7.2,0-10.8,0c-0.6,0-1.3,0-1.9-0.1\n                        c-1.9-1.2-4.2,0.2-6.1-0.9c-1.6-0.1-3.2-0.1-4.8-0.2c-4.5-1.6-9.2-1.3-13.9-1.4C809.8,580.2,807.3,581.1,805,579.9L805,579.9z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2F3A"),
                d:
                  "M889,543c-1.6,1-3.5,1.3-5.3,0.9c-7.6-1.8-15.2-2.7-23-3c-1.3,0-2.1-0.8-2.7-1.9\n                        c2-1.7,4.5-1.8,6.8-2.7c5,0.5,10-0.2,14.8,2.4c3.3,1.8,6.6-0.5,7.1-4.2c0.2-1.6-0.2-3.4,1.4-4.6c1.6,2.2,0.6,4.7,1,7.1\n                        C889,539,889,541,889,543z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A111E"),
                d:
                  "M787.4,544.7c3.2,1.7,6.7,1.9,9.8,3.1c3.8,1.5,1.1,5.3,1.4,8c0.3,2.3-2.1,1.9-3.7,1.3\n                        c-1.6-0.6-2.1,2.4-4,1.1c-1-1.7,1.3-1.5,1.6-2.4c0.5-1.3,4.1-1.6,2.5-2.3c-2.2-0.9,1.5-6.7-3.7-4.1\n                        C790.9,549.7,788.7,546.4,787.4,544.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M828,579c-5.7-0.3-11.5-0.6-17-2c-2.3-0.6-2-1.4,0.1-2c4.7,1.4,9.7,1.7,14.5,2c4.2,0.2,8.4,0.8,12.4,2\n                        C834.7,579,831.3,579,828,579z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A111E"),
                d:
                  "M759.1,557.5c-0.5,0.9,2.1,2.4-0.6,2.9c-1.5,0.2-2-1.2-1.2-1.7c2.4-1.5-3.3-3.8,0.4-4.5\n                        C760.9,553.6,759.1,556.2,759.1,557.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("531217"),
                d: "M893,577c0.8,1.6,2.6,3,1,5C893.1,580.4,892.9,578.8,893,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("511115"),
                d:
                  "M891,559c1.6,1.4,0.8,3.3,1,5C890.3,562.6,891.2,560.7,891,559z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M1047,578c-1.7-0.1-3.3,0-4.8,0.8c-5.7,3-12.2,3.9-18.2,6.2c-1.1,2.1-3.6,0.6-5,2l0,0\n                        c-1,1.5-2.9-0.2-4,1c-3.7,1-7.3,2-11,3c-1.2-2.6-3.5-1.9-5.5-2c-2.1,0-4.3,0-6.7,0c1.4-1.9,3.6-0.1,4.7-1.9\n                        c-0.4-2.1-3.2-1.6-3.8-3.4c5.3,0.8,1.2-7.5,6.8-6.3c-0.8-2.1-2.6,0.2-3.3-1.5c-1.1-2.6-2.1-2.3-2.5,0.4\n                        c-0.1,0.8-0.3,1.5-1,1.2c-4-1.6-7.8,1.2-11.8,0.4c-1.2-0.2-2.2,0.2-1.4-1.8c0.5-1.2-1.3-1-1.5-0.4c-0.6,1.4-3.4,0.1-2.9,2.5\n                        c1.2,6,0.7,6.4-5.5,4.8c-0.2-0.1-0.6,0.3-1,0.5c0.7,2.2,2.7,2,4.3,2.5c1,0.3,1.4,1,0.9,1.9c-0.4,0.8-1.1,0.3-1.7-0.1\n                        c-2.5-1.6-5.3,0.1-7.4-0.3c-4.9-0.9-10.2,0.7-14.6-2c-2.1-1.3-3.6-1.6-5.9-0.9c-1.8,0.6-4,0.7-5.8-0.3\n                        c-1.1-0.6-2.6-1.6-1.6-3.1c1.3-1.9,1.9-0.6,2.6,0.8c1.1,2,2.9,0.1,4.3,0.1c4.9,0.2,8.6,3.8,12.5,4.1c2.8-1.7-3.2-0.7,0.2-2.3\n                        c1.8-0.8,3.7-2.4,2.8-3.9c-1.4-2.3-3-0.6-4.2,1c-0.4,0.6-1.1,0.7-1.7,0.3c-0.7-0.5-0.6-1.1-0.2-1.7c1.3-1.7,1.3-4.6,5.3-3.7\n                        c-2-2.6-4.4-1.8-5-3.7c-1.8,1.2,1.2,4.2-2.5,4.2c-3.8,0-10.6-3.8-12-7.8c-0.4,2.8-0.8,4.9-3.1,5.7c-1.2-1.1,1.2-2.4-0.5-3.6\n                        c-1.1,1.3-2.2,4.2-4.4,0.6c-0.5-0.9-2.9-0.7-4.1,0.3c-0.4,0.3-0.6,1.2-0.5,1.8c0.3,1.9,2,1.8,3.2,1.5c3.9-0.9,3.2,3.1,4.8,4.5\n                        c1.3,1.2-1.5,3.4-0.1,5.3c-0.5,0.1-1,0.2-1.4,0.2c-1-0.1-1.4-0.7-1.2-1.7c0.9-4.1,0.1-6.1-4.4-3.9c-0.8-1.8-3.7-2.1-3.3-4.6\n                        c0.1-1.1,0.8-2.2-0.8-3.4c-1.2,2.2-1.2,5.7-5.1,5.5c1.3-2.6,2.5-5,3.8-7.4c-2.5-0.8-2.1,1.3-2.8,2.1c-1.2,1.5-2.5,3.9-3.9,0\n                        c-0.4-1.2-1.5-1.8-2.8-1.3c-2.4,0.8-5.1-0.5-4.6-2.7c0.9-3.9-1.6-4.5-4-5.6c-0.1,0.2-0.1,0.3-0.2,0.5c-0.7,2.4,2.1,3.4,2.3,5\n                        c0.6,5.1-2.8,0.2-4,1.3c-1.5,1.4-3.5,1.9-5.4,2.3c-0.7-0.5-0.3-1.5-1-2c0.6-4.7-1.3-9.3-1-14c-0.5-2.6-1.6-5.1-1.3-7.9\n                        c3.4-2.9,6.9-1.6,10.4-0.1c1.3,2-1.1,2.3-2,3.7c2.6-1.8,4.9-3.3,7.9-2.8c1.1,0.2,2.5,0.1,2.9,1.4c0.5,1.4-0.8,2-1.8,2.4\n                        c-0.8,0.4-1.3,1-1.5,1.7c1.8-2.6,6-1.5,7.7-4.6c0.5-0.1,0.9,0.1,1.3,0.4c1.8,2.4,4.4,3.2,7.3,3.6c7.5,0.9,15.1,1.1,22.5,3.3\n                        c0.8,0.2,1.7,0.2,2.4-0.2c4.5-3.2,9.2-1.5,14-0.7c4.9,0.8,10,0.4,14.7,1.2c5.4,0.9,10.8,0.7,15.9,2c1.6,0.4,3.1,2.1,5,1\n                        c2.4-1.3,4.3,1.3,5.7,1.9c4.1,1.7,9.3,1,12.4,4.4c-0.1-0.6-0.8-2.4,0.8-2.9c1.6-0.5,4.4-0.6,5,0.8c1.6,3.7,5,2.7,7.8,3.8\n                        c0.1-1.2-1.1-2.9,0.4-3.7c1.7-0.9,2.7,0.7,3.6,1.8c4.1,5,8.7,6,14.9,3.1c1.2-0.6,2.3-0.6,3.3,0.2c1.5,1.2,3,1,4.7,0.6\n                        c1.3-0.3,2.9-0.7,3.3,1.1c0.4,1.8-1.3,2-2.5,2.5c-0.6,0.2-1.3,0.2-1.8,0.7C1053.7,575.3,1050.3,576.7,1047,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D152C"),
                d:
                  "M935,588c-1.1,3-3.5-0.1-5,1c-1.3,0-2.6,0-3.8,0c0-0.3,0-0.7,0-1c1.6,0,3.3,0,4.9,0\n                        C932.3,588,933.7,588,935,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M979.5,583.3c1.9,0.6,2.2,1.7,2,3.4C979.6,586.1,979.3,585,979.5,583.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M989.8,586.8c-1.9,0-3.7,0-5.6,0c0-0.2,0-0.3,0-0.5c1.9,0,3.8,0,5.7,0\n                        C989.8,586.5,989.8,586.6,989.8,586.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("531217"),
                d:
                  "M895,569c0.8,0.4,1,1.2,1,2c0,1.7,0,3.3,0,5C894.1,573.9,895.4,571.3,895,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d: "M984,588.2c1,0,2,0,3.2,0C986.2,589.6,985.1,588.6,984,588.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M993.6,580.3c-0.4,0.2-0.8,0.5-1.2,0.5c-0.5,0-1-0.4-0.6-0.9c0.2-0.3,0.8-0.4,1.3-0.5\n                        C993.2,579.4,993.4,579.9,993.6,580.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M986.6,580.5c-1.5,0.7-2.6,0.8-3-0.1c-0.5-1.1,0.6-0.6,1.1-0.5C985.1,579.9,985.5,580.1,986.6,580.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M812.8,580.1c4.4-1.6,8.7,0.5,13.1,0c0,0.6,0.1,1.2,0.1,1.8c-2,0-3.9,0-5.9,0\n                        c-1.6-1.1-3.6,0.2-5.1-0.9c-0.6,0-1.3,0-1.9,0c-0.3-0.1-0.4-0.3-0.4-0.5C812.7,580.2,812.8,580.1,812.8,580.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03E4B"),
                d:
                  "M812.8,580.1c0.1,0.3,0.2,0.6,0.2,0.9c-2.7-0.4-5.6,1.1-8-1C807.6,580,810.2,580,812.8,580.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M830.9,582.1c2.1,0.2,4.3-0.9,6.1,0.9C834.9,582.9,832.7,583.5,830.9,582.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03E4B"),
                d:
                  "M815,581c1.8,0,3.6-0.5,5.1,0.9C818.4,581.8,816.5,582.7,815,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822633"),
                d:
                  "M903,548c-3.2-1.5-6.6-1.3-10-0.9c-0.4,0.5-0.7,0.4-0.9-0.1c0-0.6-0.1-1.3-0.1-1.9l0.3,0\n                        c1.2-2.3,3.2-2.6,5.5-2.4c11,1.2,22.1,2.7,33.1,3.8c6.4,0.7,12.8,1.3,19.3,1.4c5.3,0,10.6,0.9,15.7,2.1\n                        c1.8,0.7,3.6,1.2,5.5,1.7c1.6,0.5,3,1.6,0.7,3.3c-4,1.6-7.8-0.2-11.7-0.6c-12.7-1.5-25.5-1.9-38.2-3.6\n                        c-1.8-0.2-3.7-0.3-5.1-1.6l0,0C912.3,549,907.7,548.4,903,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("511115"),
                d:
                  "M892,546.9c0.3,0,0.6,0.1,0.9,0.1c0.1,2.7,1.5,5.2,1,8C891.7,552.7,892.4,549.7,892,546.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3B47"),
                d:
                  "M1063,617c2.1-4.6,5.9-5.9,10.4-4.6c3.2,0.9,5.2-1.4,7.7-2.1c2.7-0.7,3.6-2,3.3,1.9\n                        c-0.1,0.9,1.6,1.9,2.5,2.8c0.6,3.1,3.1,1.7,4.8,2c1.9,0.3,3.8,0.4,5.7,1.2c-4.6,0.8-9.2,1.3-13.8,0.6\n                        c-4.2-0.7-8.4-1.2-12.7-1.8c-0.7-1.7-1.3-0.4-2,0C1067,617.8,1065,617,1063,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3945"),
                d:
                  "M1069,617c0.2-1.9,1.8-3.2,3.2-2.4c1.5,0.9-1.1,1.4-1.2,2.4C1070.3,618.1,1069.7,617.1,1069,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3B47"),
                d:
                  "M1101.3,618.9c-0.2-0.2-0.5-0.6-0.8-0.9c0.3-0.2,0.7-0.5,1-0.6c0.2,0,0.6,0.3,0.7,0.6\n                        C1102.5,618.7,1101.9,618.8,1101.3,618.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4045"),
                d:
                  "M1183,611c16-0.4,32,0,48,1c0.2,2.5-1.2,3-3.4,3c-8.3-0.1-16.8,1-24.8-0.4c-6-1-11.9-1.4-17.9-1.7\n                        C1183.6,612.9,1183.2,612.1,1183,611z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1148,608c0.3-0.3,0.7-0.7,1-1c2.4,0,4.9,0,8.4,0C1153.7,610.6,1150.8,607.6,1148,608z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24651"),
                d:
                  "M1714,371c0.1-1.8,1.6-2.5,2.8-1.9c3.9,1.9,5.6-0.8,7.8-3.1c2-2,3.1-7,7.5-2.8c0.1,0.1,0.7-0.4,1-0.8\n                        c2.2-2.6,4.6-1.7,7-0.4c2.5,1.4,5,1.8,6.9-1.1c0.3-0.1,0.8,0,0.9-0.2c0.8-1.4,0.9-3.5,3.3-3.2c2.4,0.3,1.1,2.9,2.7,4\n                        c1.6-1.3,1-4.1,3.2-5.1c1.9-0.9,3.7,2.8,5.8,0c0.4-0.5,0.8,1.3,1.3,1.6c2.3,1.4,4.2,3.9,7.6,1c3-2.6,5.8-1,6.2,2.9\n                        c0,0.3,0,0.7,0,1c-1,3.2-3.1,4.4-6.5,4.1c-4.1-0.3-8.3-0.1-12.4-0.1c-1.9,0-3.6-0.1-4.6,2.1c-0.8,1.7-1.5,2.9-3,0.1\n                        c-0.4-0.8-3.4-0.1-5.3-0.1c-0.3,1.6,1.8,0.4,1.8,2.4c-10.8-2.1-21.2,1.7-32,1.6C1715.4,372.3,1714.6,371.8,1714,371L1714,371z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54953"),
                d:
                  "M1714,371c1.3,0,2,0.7,2,2C1714.7,372.9,1712.9,373.5,1714,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B25560"),
                d:
                  "M1915,351c0.4,0.5,0.7,1,1.1,1.6c-1.6,1-3,0.6-4.6-0.6C1912.5,350.5,1913.9,351.2,1915,351\n                        C1915,350.9,1915,351,1915,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("832835"),
                d:
                  "M1991,449c4.3,0.9,7.4,3.6,10,6.9C1996.9,454.8,1993.1,453,1991,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5626A"),
                d:
                  "M927,311c0.8,0.2,1.9,0.3,0.5,1.3c-2.1,1.4-4.6,0.1-6.8,1.2c2.5,3.1,6.4,3.4,9.5,0.8\n                        c0.7-0.6,1.8-2.3,2-1.7c1.7,4.6,5.3,1.2,7.7,2.1c2.6,1.1,4.5,2.9,8,2.2c1.4-0.3,3.1,0.1,4.5-1c1.5-1.1,2.9-0.6,4,0.6\n                        c1.2,1.3-0.2,2.4-0.5,3.6c-0.2,1-2.9,0.3-1.4,2c1.1,1.2,2.5,0.5,3.6-0.3c3.9-2.9,8.1-4.2,12.9-3.3c1,0.2,2.1,0.7,2.9,0.4\n                        c4.8-1.8,8.9,0.2,13,2.1c3.3,5.4,6.3,5.6,11.6,0.6c1.2-1.2,2.4-0.7,3,0.2c2.7,3.9,6.3,5.2,11,4.7c1.6-0.2,3.4,1.1,5.1,1.8\n                        c1.4,0.5,1.9,1.5,0.6,2.5c-1.2,0.9-1.7,1.4-0.8,3c1,1.7,0.5,3.7-1.2,4.9c-1.7,1.2-2.6-0.6-3.8-1.3c-0.8-0.5-1.5-1.3-2.5-1.6\n                        c2.3,5.7,1.7,6.9-3.3,6.4c-1.1-1.4-2.7-2.2-4.4-1.7c-3.6,1-6.6-1.8-10.4-1.3c-2.5,0.4-2-2.6-0.7-5c-9,0.9-17.8-1.1-26.6-0.2\n                        c-0.8,0.1-1.9,0.2-2.4-0.2c-3.4-2.8-7.4-2.2-11.2-2.3c-0.4-0.3-1-0.7-0.9-1.1c0.4-3,0.3-3.4-2.4-4.9c-2.3-1.3-4.9-1.9-6.6-4.2\n                        c-0.9-1.2-2.9-1.3-4.2-0.8c-6.9,2.8-13.7-0.5-20.5-0.4c-4.1,0.1-8.4-1.8-12.3-3.7c-2.5-1.2-4.9-1.7-7.7-1\n                        c-3.4,0.9-6.5-0.9-9.7-1.8c-1.3-0.4-3-1.5-1-3.3c2.5-0.2,5.1-1.4,7.3,0.7c0.7,1,2.1,2,2.8,1.6c4.9-3.1,10.2-0.9,15.2-1.6\n                        C916.3,309.4,921.7,309.4,927,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45E67"),
                d:
                  "M1007,342c4.1-0.9,4.5-2,1.4-5.7c-0.7-0.8-1.7-1.5-1-2.4c1-1.3,1.9-0.4,2.9,0.4c1.6,1.4,3.4,2.5,5.5,4\n                        c1.8-3,2.2-5.3-2.6-5.8c1.4-2.1,3.7-0.9,4.7-3c-3.5,0.2-6.2-4.2-10.5-1.1c-0.7,0.5-3.1-1.4-4.3-2.9c-1-1.3-2-2.6-3.2-4\n                        c-0.8,3.5-6.2,6.6-11.2,5.9c-3.9-0.6-0.1-4.4-1.8-6.2c4.3-3.7,9.3-3.8,14.3-2.6c2.1,0.5,3.8-0.2,5.7-0.4\n                        c1.9,1.5,1.7-2.5,3.7-1.2c0.6,2.6-1.3,3.8-3.6,5c1.5,1.6,3.2,1.6,4.2,0.7c4.3-4.5,8.4-3,13-0.5c1.4,0.8,3.9,0.5,5.6-0.1\n                        c4.8-1.9,5.8-1.5,6.1,3.7c0.1,1.1-0.5,2.4,1.3,3.1c1.1-2.2-1.2-5,1.9-7c2.2,4.6,6.7,3.4,10.8,3.5c3.2,0.1,7.6,4,7.9,7\n                        c-1.3,2.1-3.5,2.1-5.6,2.4c-2.6,0.3-5.2,1.1-7.9,0.2c-0.5-0.2-1.2-0.4-1.4-0.1c-4.3,4.3-9.8,0.6-14.5,2.4\n                        c-4.6,1.8-9.3,3.5-13.9,5.5c-2,0.9-3.9,1.8-6.2,1.6c-0.5-0.1-1-0.3-1.4-0.6c-0.1-0.2-0.3-0.4-0.4-0.7\n                        C1006.8,342.5,1006.9,342.2,1007,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E95E66"),
                d:
                  "M893,311c-2.7,0-5.3,0-8,0c-0.8,3.4-3.2,3.6-5.7,2.5c-2.6-1.1-5.1-1.3-7.6,0c-0.4,0.1-0.9,0.1-1.3,0\n                        c-1-0.4-1.7-1.2-2.4-2c-0.4-0.5-0.5-1.1-1-1.5c0.7-1.2,2.2-1.6,3-1.3c5.1,1.7,10.1-0.9,15.2,0.3c2.4,0.6,4.4-0.9,6.6-1.7\n                        c1.1-0.4,2.4-0.5,2.9,0.9C895.3,309.7,894.8,310.8,893,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75F67"),
                d:
                  "M960,308c2.4,0,4.7-0.1,7.1-0.1c2.6,0.1,5.3,0.2,7.9,0.3c0,0.2,0,0.5,0,0.7c-0.2,0.8-0.5,1.9-1.3,1.9\n                        c-10,0.1-20,0-30-0.5C948.9,307.5,954.8,310.7,960,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5F62"),
                d:
                  "M927,311c-5.3,0-10.7,0-16,0c0.2-1.4,1-2,2.3-2c3.8,0,7.6,0,11.3,0C926,309,926.8,309.6,927,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA7079"),
                d:
                  "M867,310c0.3,0.3,0.7,0.7,1,1c1.2,1.4,1.2,3,1,4.7c-0.6,1.8-0.5,3.8-2,5.3c-0.3,0-0.6,0-0.9-0.1\n                        C865.7,317.2,866.3,313.6,867,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05461"),
                d:
                  "M1087,327c0-1.3,0-2.7,0-4c0.8-0.7,1.6-1.3,2.6-1.3c6.1,0,12.1-1.8,18.2-2c16.9-0.5,33.8-0.2,50.7-0.1\n                        c1.3,0,2.7-0.1,3.9,0.5c2.1,0.9,1.7,2,0.3,3.3c-3.2,1.7-6.8,1-10.2,1.1c-6.4,0.1-12.9,0.1-19.2-0.5c1.7,0.7,6.1-0.3,2.3,3.9\n                        c-10.2,1.4-20.5,0.6-30.7,0.7c-0.9,0-1.8-0.1-2.7-0.1c-1.8,0-3.6,0-5.4,0C1093.4,328.3,1090,329.2,1087,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75860"),
                d:
                  "M1103,319c0-0.7,0-1.3,0-2c1.9-1.6,4.1-1,6.2-1c21.4-0.1,42.9,0,64.3,0c4.5,0,8.9-0.6,13.4-0.6\n                        c2.3-0.2,3.8,0.8,4.4,3.1c-1.8,2.1-5.1,1.9-6.7,4.8c-0.9,1.5-3.6,1-5.5,0.1c-1.8-1.6-4-1.2-6-1.1c-2.7,0.2-5.2,0.1-7.5-1.4\n                        c-1.9-1.4-4.2-1-6.3-1c-16.8,0-33.7,0-50.5,0C1106.8,320,1104.7,320.5,1103,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC575C"),
                d:
                  "M1103,319c19.7,0,39.4,0,59.2,0c1.7,0,4.2-1.1,4.8,2c0.7,0.8,0.6,1.6-0.1,2.4c-1.7,1-3.4,1.1-4.9-0.4\n                        c2.3-2.3,0.2-2-1.2-2c-12.6,0-25.3,0-37.9,0c-5,0-10.2-0.9-14.9,0.2c-7,1.7-13.9,1.7-21,1.8c-0.3-2.8,0.6-4.2,3.8-4\n                        C1094.8,319.2,1098.9,319,1103,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC575F"),
                d:
                  "M1087,327c3.3,0,6.7,0,10,0c1.7,1.3,3.3,1.6,5,0c0.7,0,1.3,0,2,0c1.6,2.6,0,3.8-2.3,4.1\n                        c-4.7,0.8-9.5,1.8-14.3,1.8c-11,0.1-21.7,2.6-32.3,4.8c-1.8,0.4-3.6,0.5-5.4,0.3c-1.9-0.5-5.4,0.9-5.5-1.7\n                        c-0.1-3.1,3.4-1.4,5.2-2c1-0.3,1.8-0.9,2.6-1.4c2.1,0.3,4-0.7,6-1c4.8,0,9.3-0.6,14.1-2.1c2.4-0.7,6.5-1.2,9.8-0.5\n                        C1084.1,329.8,1086.2,329.7,1087,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7596C"),
                d:
                  "M1188,316c-1.7,1.7-3.8,0.9-5.7,0.9c-26.4,0.1-52.9,0-79.3,0c-10.1,0.5-20-2.2-30-2.9c2,0,4-0.1,6-0.2\n                        c3,0,6,0,8.9,0c1.4,0.1,2.7,0.2,4.1,0.3c8,1.8,16.1,0.2,24.2,0.9c1.6,0.9,3.3,0.4,4.9,0.4c17,0,33.9,0,50.9,0\n                        c3.3,0,6.6,0,9.9-0.6C1184,314.5,1186.2,314.2,1188,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E35C66"),
                d:
                  "M735.1,292.9c1.2,0,2.5,0,3.7,0c5,2.3,10.4,2.9,15.8,2.1c2.6-0.4,3.9,2.4,6.4,2c2-0.3,4.3,0.8,6.1-1\n                        c1.5,0.6,4.2-1.6,4.4,2c0,0.3,0.8,0.9,1,0.8c4.3-2.1,7.8,1.4,11.7,2.1c3.5,0.6,6.7,1.6,10.3,0.3c1.7-0.6,3.6-0.2,4.6,1.8\n                        c2,0.8,4,0.8,6,0c1.6,0.3,2.9,0.3,4.5-0.5c2.4-1.2,5-1.1,5.5,2.5c0.6,0.6,0.6,1.3,0.3,2c-0.4,0.3-0.8,0.6-1.2,0.7\n                        c-5.7-0.1-11.3-0.5-16.6-2.6c-0.5-0.2-1-0.5-1.4-0.4c-7.7,1.9-15.1-0.8-22.7-1.2c-3.3-0.1-6.6-0.6-9.7,1.2\n                        c-0.8,0.5-1.9,0.9-2.9,0.4c-7-2.9-14.9-4.2-21.7-3.1c-5.8,1-11.8-1.5-17.3,1.4c-1.6,0.8-3.2-0.4-4.7-1.1\n                        c-2.9-1.2-5.7-1.4-8.5,0.5c-2.1,1.5-4.4,1.4-7.1,0.8c-5.9-1.1-11.9,0.3-17.8,0.8c-10.8,0.9-21.6,2.8-32.4,1.2\n                        c-1.5-0.2-3-0.3-4.5,0c-1.1,0.2-2.3,0.3-3.4,0.6c-4.3,1.3-8.9-1.9-13.1,0.9c-2.4-0.2-4.8,0.5-7.1-0.5l0,0\n                        c-1.8-3.4,1-4.8,3-4.6c7.3,0.8,13.2-3.4,19.8-5c0.5-0.1,1-0.1,1.5,0c6.8,1.3,13.4,2,20.3,0.1c3.8-1,7.7,1.2,11.6,1.9\n                        c5.1,0.9,9.3-2.3,14.2-1.8c1.3,0.1-0.7-2.9,1.5-3.2c2-0.8,4.4,0.5,6.2-1.3c9.8,0.2,19.4,3.2,29.3,2\n                        C732.1,294.8,734.5,295.9,735.1,292.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6646C"),
                d:
                  "M815,307c0-0.7,0-1.3,0-2c2.7,0,5.3,0,8,0c0,0.3,0,0.7,0,1C820.6,308.6,818,309,815,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6646C"),
                d: "M805,303c-2,1.5-4,1.5-6,0C801,303,803,303,805,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36068"),
                d:
                  "M840.7,302.2c-0.8,0.2-1.4,0.1-1.2-0.5c0.1-0.3,0.8-0.6,1.2-0.6c0.4,0,0.9,0.2,1.3,0.4\n                        C841.6,301.7,841,302,840.7,302.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33E47"),
                d:
                  "M1226,273c-2.1,1.9-5.5,2.5-6,6c-0.9,1.2,0.1,3.8-2.6,3.7c-0.5,0-1.3-0.4-1.4-0.2\n                        c-3.7,5.3-8.2,0.9-12.2,0.7c-1.7-0.1-5,0.1-5.2-2.8c-0.3-3.1-0.2-6.4,2.5-8.8c0.9-0.8,1.9-1.4,3-1.7c2.7-0.6,5.5-0.2,8.3-0.5\n                        c4.7,0.3,9.5-0.7,14.1,0.7C1227.8,271.4,1227.2,272.2,1226,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721622"),
                d:
                  "M1249.9,292.9c-1-0.3-2-0.6-2.9-1c-0.4-0.5-0.8-1-1.2-1.5c-0.5-0.7-2.3,0-1.8-1.6\n                        c0.4-1.2,1.8-0.2,3-1.2c-5.5-0.9-5-5.5-6.3-9.1c2.8-0.5,2.7,3.3,5,3.3c0.1-2.5,0.2-2.6-2.4-4.7c-1.3-1.1-1.9-2.5-1.3-3.8\n                        c0.3-0.7,1.8-2.2,2.9,0.2c0.4,0.9,1.7-0.5,2.2-1.2c0.8-1.3-0.5-1.2-1.2-1.4c-0.9-0.3-1.9-0.6-2.8-0.8c0-0.2-0.1-0.5-0.1-0.7\n                        c0.6-1,1.5-1.2,2.5-1.3c2.6,0,4.9,0.9,7,2.2c4.7,3.6,1.5,7.8,0.9,11.8c-0.2,1.3-1.9,1.9-1.5,3.5c0.2,0.9,0.3,1.9,0.3,2.9\n                        C1251.9,290.1,1251.7,291.9,1249.9,292.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("932231"),
                d:
                  "M1217,282c2.1,0.1,1.7-2.3,2.9-3.1c0.4,1.6-1.1,5,3.1,2.7c2.8-1.5,6.3,1,5.7,4.3c-0.6,3-0.3,6-0.8,9\n                        c-3.1-2.9-6.9-1.7-10.4-1.9c-1.8-0.1-3.6,0-5.5,0c0-0.3-0.1-0.6,0-1C1212.9,288.3,1213.1,284.3,1217,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861728"),
                d:
                  "M1226,273c0.3-0.7,0.7-1.4,1-2.1c-0.6-0.5-1.8-0.3-1.9-1.3c-0.1-1.2,1-1.6,1.9-1.7\n                        c3.5-0.6,7.1-0.2,10.7-0.3c2.1,0.1,4.3,0,5.4,2.4l0,0c-2.2,1.8-4.8,2.8-5.8,6.3c-1,3.6-4.2,3.6-6.7,0.3\n                        C1229.2,274.9,1227.8,273.8,1226,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962E3D"),
                d:
                  "M1240,282.1c-0.2,0.9-0.3,1.7-1.1,1.4c-0.4-0.2-0.7-0.9-0.8-1.5c-0.1-0.5-0.1-1.5,0.9-1.1\n                        C1239.5,281.1,1239.7,281.7,1240,282.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E9686F"),
                d:
                  "M815,307c2.7,0.2,5.4-0.2,8-1c1.4,1.9,3.9,0.3,5.6,1.5c-0.6,1.5-3,0.7-3,2.7c1,1.3,3.2,1.1,3.5,0.6\n                        c3.3-5.4,9.6,0.7,13.1-3.6c0.2-0.3,1.2-0.3,1.4-0.1c3.1,3.3,7,1.5,10.3,1c3.8-0.6,5.8,0.2,6.7,4.1c1.1-1.9-0.3-4,1.5-5.3\n                        c0,0.6,0,1.2,0.1,1.7c1,2.3-0.3,4.9,0.8,7.2c0,0.3,0,0.7,0,1c-2.4,2.8-4.7,3.3-8.7,2c-6.1-2-12.9-0.3-19.3-1.2\n                        c-0.8-0.1-1.7,0.2-2.5,0c-16.1-4.1-32.6-1.5-48.8-2.7c-5.6-0.4-11,1.7-16.5,0.1c-1.3-0.4-2.1-0.6-2.5-1.9\n                        c-0.1-4.4,2.6-6.3,6.5-6.6c5.6-0.5,11.2-1,16.1,2.8c0.8,0.6,1.9,0.9,2.8,0.8C798.3,309.2,806.9,309.9,815,307L815,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61141F"),
                d:
                  "M1255,349c-0.1,0.7,2.6,1.7-0.2,2c-2.3,0.2-4.6,0-6.8,0.1c-4.4,2.2-8.9,1.8-13.4,0.7\n                        c-1.5-1-0.8-2,0-2.9c4.2-0.6,7.9-3.5,12.4-2.8c0.7,1,1.7,1.3,2.6,0.6C1252.9,344,1254.2,345.9,1255,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4A50"),
                d:
                  "M1247,346c-4.1,0.8-7.8,3.2-12.1,3.2c-1.5,0.6-2.9,1.1-4.2-0.4c5.8-2.9,12.6-2.7,18.3-5.8\n                        c0.7,0,1.3,0,2,0C1250.5,345.1,1248,344.6,1247,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34D5C"),
                d:
                  "M1188,316c-22.2,0-44.4,0-66.6-0.1c-1.7,0-3.7,0.8-5.1-0.9c1.6-0.1,3.3-0.1,4.9-0.2\n                        c19.2,0,38.5,0,57.7,0c6.9-1.2,13.9-1.3,20.8-0.3c1.9,3.3,0.2,4.8-2.9,5.5c-1.4,0.3-2.9,0.2-4.4-0.2c-0.6-0.2-1-0.5-1.4-1\n                        C1190.3,317.6,1189.4,316.6,1188,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF8584"),
                d:
                  "M1199.9,316c-4-2.3-8.4-0.6-12.6-1c-2.8-0.3-5.6-0.1-8.5-0.2c7.2-3.4,14.7-1.5,22.1-1.8\n                        c3.8,2.2,5.2,6,4.6,9.8c-0.9,5.6,0.2,10.8,1.5,16.1c-2.7,0.1-2.7-2.4-3.9-3.9c-2.2-3.1-1.9-6.5-1.4-10\n                        C1201.9,321.9,1201.4,318.9,1199.9,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD545E"),
                d:
                  "M599,305c-1,0.3-2,0.7-3,1c-3.8,1.2-7.4-0.9-11.1-0.8c-2-1.2-4.2-0.8-6.3-1c-1.4-0.2-3.5,0-3.4-2\n                        c0.1-1.9,1.7-3.6,3.6-3.6c6.7,0.1,13.2-0.5,19.6-2.6c0.8-0.2,1.7-0.1,2.3-0.1c-2.4-0.4-5.1,0.9-7.5-0.6\n                        c-1.3-0.8-2.6-1.8-2.5-3.4c0.2-1.9,2-2.1,3.4-2.2c4-0.1,8,0,11.9,0.3c0.4,0.2,0.8,0.4,1.1,0.8c5.2,1.4,10.5,1.4,15.6-0.5\n                        c0.5-0.3,1-0.4,1.6-0.6c9.5-0.7,18.9,0.5,28.4,0.2c0.9,0,1.6,0.4,2.3,0.9c4.1,0,8.2,0,12.3,0c1.6,0,3.4,0.4,3.8-2\n                        c2.3,0,4.6,0.1,6.9,0.1c-0.1,0.7-2.5,1.8,0.3,1.9c2.9,0.1,5.8,0,8.8,0c1.3,1.4,5.6,1.9,1.4,4.8c-2.7,0.8-5.4,0.4-8.1,0.5\n                        c-7.4,2.6-15.5-0.2-22.8,3c-3.2-2.5-7.1,0.1-10.4-1.4c-8.5,0.1-16.6,2.5-24.8,3.9c-5.8,1-11.4,4-17.5,1.7\n                        C602.7,302.9,600.8,304.1,599,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05A63"),
                d:
                  "M689,295c1.6-2.5-2.7-1.9-2-4c2.6,0,5.2-0.2,7.8,0c3.7,0.2-2.3,1.5,0.2,2c0.6,0.7,0.6,1.3,0,2\n                        c-0.8,0.6-1.4,1.2,0.2,1.5c1,0.2,1.6,0.7,1.3,1.6c-0.1,0.4-1,0.8-1.6,0.8c-8.3,0.1-16.6,4.1-24.9-0.4\n                        c-1.5-0.8-4.6,0.3-6.5,1.2c-2.4,1.2-5.4-0.7-7.4,1.6c-1.9-4.1-6.5-0.9-9-3.3c8.2,0.1,16.4-1.9,24.6-1c3,0.3,5.2-3,8.4-2\n                        C683,296.7,686,296.2,689,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD545E"),
                d:
                  "M695,295c0-0.7,0-1.3,0-2c2,0,4,0,6,0C700,296.6,697,294.3,695,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1523"),
                d:
                  "M1230.8,348.9c1.4,0.1,2.8,0.2,4.2,0.4c-0.3,0.6-0.6,1.2-0.9,1.8c-0.1,0.1-0.3,0.1-0.4,0.2\n                        c2.6,0.9,5.4,2.8,5.1,5.2c-0.2,1.9-3.9,2.1-6.1,3.1c-0.5,0.3-1.6-0.2-2,0.7c-0.2,0.4-1.1-0.2-0.8,0.6c1.3,4.3-2.2,2.9-4,3.2\n                        c-2.9,0.4-6.1-1.3-8.8,1c-6-0.7-12-1.3-18-2c-0.9-1.2,3.7-2.8-0.3-3.9c-0.7-0.2-1.7-9.3-1.3-9.9c1.7-2.1,4.5-0.6,6.4-1.8\n                        c2-0.4,4.3-0.1,5.9-2c3.5,1.1,6.8,2.8,10.5,3.5C1223.7,348.9,1227.2,348.9,1230.8,348.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B6768"),
                d:
                  "M1220.1,348.9c-4.2,1.1-7.5-1.7-11.1-2.9c-2.7-1-4.1-3.2-5.1-5.7c-0.3-1.6-1.2-3.2-0.4-5\n                        c0.2-0.2,0.4-0.3,0.5-0.5c1,1.4,2,2.7,2.9,4.1C1208.9,345.6,1215.3,346.2,1220.1,348.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D64E5A"),
                d:
                  "M607,291c-5,0.9-10.1-0.3-15.4,0.1c0.9,4,3.7,3.9,6.5,3.9c2.8,0,5.5,0,8.4,0c-0.2,0.9-0.3,1.5-0.3,1.5\n                        c-6.8-0.5-12.9,4.6-20,2.6c-1.4-0.4-2.4,0.7-3.2,1.9c-0.6,0.9-1.7,1.2-2.6,0.8c-2.6-1-2.6-1.1-4.2,0.9c2.9,1.2,6.3-0.9,9,1.3\n                        c-0.6,0.9-1.4,1.6-2.4,1.5c-11.1-1.2-22.3-1.7-33.4-3.7c-0.5-0.1-0.8-0.5-1.2-0.8c-0.5-2.8-2.6-2-4.3-1.7\n                        c-1.4,0.2-2.7,1.3-4.5-0.4c2.7-1,5.3-2.2,7.9-1.6c3.6,0.9,6.3-0.6,9.3-1.8c3.7-1.5,2.6-4.3,2.3-6.6c-0.4-2.9-3.2-2-4.9-1.7\n                        c-3.7,0.6-6.5-0.1-10.1-1.7c-5.8-2.6-12.5-2.3-19-2.5c-2.6-0.1-7.1,2.1-7-3.7c0,0-1.8-0.1-2.8-0.2c2.6-2.5,6.4,0.5,9-2\n                        c3.1,0.4,6.8,0.8,9.1,1.6c6,2.2,11.8,0.9,17.5,1.8c6.8,1.1,13.6,0.2,20.4,0.6c0.5,0,1.2-0.2,1.5,0.1\n                        c5.6,6.8,13.3,2.9,20.1,3.9c0.8,0.1,1.7,0,2.5,0c2.8,0.9,5.9,0.6,8.6,1.7C605.4,287.5,608.2,287.8,607,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("914C4E"),
                d:
                  "M1249.9,292.9c0.4-1.6,0.7-3.3,1.1-4.9c0.9-0.8,0.9-1.9,1.1-3c1.3-2.9,2.3-5.8,2.7-8.9\n                        c0.2-1.7,1-3.7-1.4-4.7c-1.3-1-1.1-2.8-2-4c-2.4-3.8-4.7-7.7-9.7-8.5c-1.8-0.9-3.7-1.8-5.4-3c-3.4-2.3-6.9-4.4-10.7-5.9\n                        c-0.4-0.2-0.9-0.4-1.3-0.6c-0.8-0.8-2.3-1.2-1.2-2.8c1-0.2,1.9-0.3,2.8,0.3c1.7,0.7,3.4,1.3,5,2c2,1,4,2,5.9,3\n                        c1.8,1.6,4,2.8,6,4c1.8,1.8,4.4,2.1,6.4,3.7c7.8,6.2,10.3,13.6,6.6,22.9c-1.7,4.3-2.5,9-5.9,12.5\n                        C1250,294.4,1250,293.7,1249.9,292.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935F62"),
                d:
                  "M1243,256c-2.6-0.4-4.7-1.6-6-4C1239.5,252.6,1241.5,253.9,1243,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3944"),
                d:
                  "M1217,282c-1.7,3.3-3.3,6.7-5,10c-0.2-0.8-0.3-1.6-1.5-1.3c-5.5,1.4-11.2,0.7-16.6,0\n                        c-4.5-0.6-9.6,1.2-13.6-2.3c-0.3-0.3-1.5,0.4-2.3,0.6c-1,0-2,0-3,0c-0.9-1-0.5-2.2,0.5-2.4c6.8-1.5,9.9-7.7,14.9-11.5\n                        c2.2-1.2,3.9-3.1,6-4.4c0.4-0.2,0.8-0.4,1.3-0.5c0.5-0.1,0.9-0.2,1.4-0.2c0.5,0,0.9,0,1.4,0c1,0.1,1.9,0.3,2.5,1.1\n                        c-3.2,2-3.8,5.8-3.4,8.5c0.4,2.8,4.9,3.8,6.9,3.1c3.4-1.3,3.7,1,4.9,2.4C1213.5,284.5,1212.7,278.7,1217,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7545B"),
                d:
                  "M655,291c-10.7,0-21.3,0-32,0c-3.9-1.1-7.9-0.3-11.9-0.7c-4-0.4-4.7-1.8-3.1-5.2c1,0,2,0,3,0\n                        c3.5,3.6,8.3,2.9,12,2c4.1-0.9,8.2-0.6,11.3,0.9c2.7,1.3,3.2-0.8,4.7-0.9c0.4,2.4,2.3,1.9,3.8,2c2.8,0,5.6,0,8.4,0\n                        C652.8,289,654.7,288.6,655,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C96776"),
                d:
                  "M639,285.9c1.7,0,3.4,0,5,0c2.3,0.1,4.6,0.2,6.9,0.3c0,0.3,0,0.5,0.1,0.8c-4,0-8,0-12,0\n                        C639,286.6,639,286.3,639,285.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD4F5B"),
                d:
                  "M608,285c-1.1,2.9,0.2,4,2.9,4c2.8,0,5.5,0,8.3,0c1.6,0,3.4-0.4,3.8,2v0c-5.3,1.6-10.7,1.6-16,0h0\n                        c-0.9-3.6-4.4-2.7-6.6-4c-1.7-1-3.9-0.4-5.4-2c2,0,4,0,6,0C603.3,285,605.7,285,608,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90393E"),
                d:
                  "M1268,311.1c-0.6,0.6-1.3,1.2-1.9,1.9c-4,2.8-4,2.8,0.1,6.3c-0.3,1.2-1.2,1.6-2.3,1.8\n                        c-1.2,0.1-2.1-0.3-3.1-0.9c-2.2-1.7-4-3.6-3-6.6c1.1-3.2,4.2-2.5,6.7-2.6C1265.7,310.9,1266.9,311,1268,311.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C474F"),
                d:
                  "M1260.8,320.1c1.1,0,2.1-0.1,3.2-0.1c4.6,2,5.2,3.4,3.4,8.2c-3.6,2.1-3.4-1.3-4.4-3.1\n                        C1262.2,323.4,1261.5,321.8,1260.8,320.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D3039"),
                d:
                  "M1262.9,325.1c1.9,0.2,1.2,4.1,4.1,2.9c1-0.8,1.7-0.5,2.2,0.5c0,0.9-0.7,1.1-1.3,1.5\n                        c-1.7,0.4-3.3,0.8-5,1.2c-0.1-1.4-0.1-2.8-0.2-4.3C1262.9,326.3,1262.9,325.7,1262.9,325.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D64E5A"),
                d:
                  "M513,281c-0.7-0.7-1.3-1.3-2-2c1.3,0,2.7,0,4,0C515,280.3,514.3,281,513,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36570"),
                d:
                  "M476,261c-2.7,0.8-3.4-1.1-4-3C473.4,258.8,475.2,259.2,476,261z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24C54"),
                d:
                  "M1161.3,253.1c-0.1-0.7-0.2-1.5-0.3-2.2c0.7-1,1.3-2.1,2.8-1.9c11.1,1.2,22.1,3.1,32.8,6.6\n                        c0.5,0.1,1,0.3,1.5,0.4c2.3,1,5,1,7.1,2.7c0.3,0.5,0.2,1,0,1.4c-0.5,0.4-1.1,0.6-1.7,0.8c-1.3,0.3-3.3-1-3.3,1.7\n                        c-5.8-0.3-11.4-1.7-17.2-1.5c-1.3,0-2.7-0.4-3-2c2.9-2.6,6.1,0,8.8-0.7c-6.8-0.2-13.9-1.1-21-2.2\n                        C1165.2,255.9,1162.6,255.8,1161.3,253.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791722"),
                d:
                  "M1197,257c-9.9-2.6-19.7-5.3-30-6.1c-1.4-0.1-2.5-0.7-3.3-1.9c0.4-0.4,0.8-0.7,1.2-1.1\n                        c2.2-0.2,4-2,6.3-1.6c4.9-0.8,9.8,1.6,14.8,0.2c4.6-1.3,6.6,3.1,9.8,4.6C1197.4,251.9,1195.3,255.2,1197,257z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2E35"),
                d:
                  "M1171,247c-2.2-0.5-3.7,3-6.1,1c1.3-2.4,3.9-2.2,5.9-3.1c0.7,0.1,1.4,0.1,2.1,0.2\n                        C1173.5,246.9,1171.6,246.3,1171,247z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1721"),
                d:
                  "M1171,247c0.7-0.6,1.3-1.3,2-1.9c1.6-0.4,3.2-0.8,4.9-1.2c9.7-2.2,19.3,0.4,29,0.4\n                        c1.3,0,2.6,0.7,3.4,1.8c0.4,1.1,0,1.9-1.1,2.3c-0.9,0.4-1.9,0.2-2.9,0.1c-2-0.1-5.3-1.2-5.4,1.4c-0.2,2.6,3,1.2,4.8,1.4\n                        c1,0.1,2.1-0.1,2.6,1c0.8,1.7-0.6,2.7-1.6,3.8c-2.7,2.4-5.8,0.9-8.7,0.9l-0.4,0l-0.4-0.1c0-1.6-4.4-1.4-1.7-4.3\n                        c0.6-0.7-0.2-1.8-1.6-1.7c-1.2,0.1-2.7,0.1-3.1-1.1c-0.9-2.6-2-3.2-4.6-1.7c-4.4,2.5-9.2-3.6-13.8,0.2\n                        C1172.3,248.4,1171.5,247.5,1171,247z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2E35"),
                d:
                  "M1210,247c-2-2-4.5-0.9-6.8-1.2c-8.4-1.3-16.9-1-25.3-1.9c6.3-3.9,13.3-2.6,20.1-2.9\n                        c4.3,0.7,8.7,1.4,13,2c0.3,0,0.6,0,1,0c3.9,0.6,8,0.9,11,4c0.7,0.7,1.4,1.3,2,2c-0.7,1.3-2,1.7-3.3,2\n                        C1217.4,250.9,1213.5,249.4,1210,247z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0343F"),
                d:
                  "M1191,275c-4.1,4.7-7,10.9-14.2,12c-1.2,0.2-1.7,0.8-1.8,1.9c-3.7,0.7-4.2-5.1-8-4\n                        c-1.3-2.1-1.8-4.5-2-7c0.3-0.4,0.7-0.5,1.2-0.4c3.1,2.3,3.9-0.3,5.1-2.3c0.5-0.5,1-0.9,1.7-1.1c2.1-0.1,4.2-0.5,5.8,1.7\n                        c1.1,1.6,3,0.7,4.5,0.5c2.4-0.3,4.6-1.6,7.1-1.8C1190.6,274.7,1190.8,274.9,1191,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935F62"),
                d:
                  "M1223,247c-3.7-1.3-7.3-2.7-11-4c5.4-1.1,9.7,1.3,14.1,3.9C1225,247,1224,247,1223,247z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2331"),
                d:
                  "M1166,278c-0.3,0-0.7,0-1,0c-1.1-1.9-1-4-0.9-6c0.6-0.6,1.3-1,2.1-1.2c9.2-3.9,18.9-2.2,28.5-2.1\n                        c1.4,0,3.1,0,3.3,2.1c-0.3,0-0.7,0.1-1,0.1c-1,0.7-2.3,0.6-3.4,1.2c-6.8,1.4-13.6,3-20.6,2.8c-0.3,0.3-0.7,0.7-1,1\n                        C1170.2,277.4,1168.7,279.4,1166,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F1B28"),
                d:
                  "M1166,272c-0.6,0-1.3,0-1.9,0.1c-0.7-1-1.4-2-2-3c-0.9-4.3-1.9-8.5-2.8-12.8c0.3-0.1,0.6-0.1,0.9-0.2\n                        c1.1-0.4,2,0.1,2.8,0.7C1168.9,259.6,1170.2,265.9,1166,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E16471"),
                d:
                  "M1161.3,253.1c9.2,3.2,19.1,3,28.5,6c-3.3,0-6.6,0-9.9,0c-4.4,2-8.4-0.2-12.6-1\n                        c-2.2-0.9-4.7-1-6.2-3.1C1161.1,254.3,1161.2,253.7,1161.3,253.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24C54"),
                d:
                  "M1161.1,255c1.9,0.8,4.2,0.6,6,1.9c-1.7,1.5-3.4,1.2-5.1,0.1c-0.6-0.3-1.3-0.7-1.9-1\n                        C1160.4,255.7,1160.7,255.3,1161.1,255z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87172A"),
                d:
                  "M1328,345c-0.2,1,0.5,2.5-1.6,2.3c-2.1-0.2-4.2-0.3-6.5-0.4c1.2-3.1,5.7,1.4,6.1-2.8v0\n                        C1327.1,343.4,1327.4,344.5,1328,345L1328,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1280,378c0.3,0,0.7,0,1,0c3.8-0.1,2.9,4,5,5.8c-1.6-2.2-2.4-4.3-1-6.7c3.3,0.1,6.5-0.2,10.2-2.1\n                        c-6.1-3.4-12.6-1.6-18.2-3.9c3.1-2.4,6.7-1.3,10.1-1.3c1.8,0.3,3.6,1,5.5,1c0.7,0.1,1.5,0.2,2.2,0.4c2.4,1.1,5.1,0.5,7.3,0.1\n                        c5.4-1,8.9,3.4,13.8,4c2.3,0.3,0.5-0.8,0.7-1.1c1.4-2.4,3.5-2.3,5.8-1.5c3.3,1.1,5.7,3.7,8.6,5.4c1.6,0.6,2.8,3.2,5,1\n                        c2.8,1.6,4.3-0.5,6-2c0-0.2,0-0.4,0.1-0.5c0.2-0.2,0.4-0.3,0.6-0.5c0.5,1.9,0.4,3.9-0.1,5.8c-0.3,0.9-0.4,1.7,0.7,2\n                        c0.5,0.1,1.1,0.2,1.4,0c1.1-0.7,0-1.4-0.2-2c-0.5-1.3-1.1-2.9,0.6-3.4c2.1-0.6,1.8,1.3,1.9,2.6c0.2,1.4,0.8,2.2,2.3,1.8\n                        c2.2-0.7,0.4-2.1,0.4-3.8c2.4,2.3,5.1,0.9,7.6,1.5c3.1,0.8,5.6,0.6,5.7-4.2c-0.5,2.6,5.8,2.4,1.5,5.5c1.3,1,2.5,2.3,4,2.8\n                        c1.5,0.5,3.3-0.1,4.3-1.6c1.2-1.8,1.6-5.2,4.4-4.4c3.1,0.9,1.5,4.3,1.8,6.6c0.2,1.3,0,2.7,0,4c-1.2-0.6-0.7-2.1-1.8-3.3\n                        c-0.1,2-0.2,3.7-0.4,5.4c-2.5-2.4-4.4-2.2-5.9,0.9c-2,0.7-4.3,0.5-6,2c-2.3,0-4.7-4.5-7,0.5c-0.5,1.1-1.5-1.9-2.7-2.6\n                        c-1.5,1.8-1.2,5.5-4.4,5.4c-2.7,0-2.1-3.4-3.5-4.8c-3.1,0.4,1.3,4.5-2.1,4.2c-2.1-0.2-1.3-3.2-2.8-4.6\n                        c-1.4,0.5,0.5,4.4-2.1,3.2c-1.8-0.9-3.5-0.3-5.1-0.9c-0.7-0.2-0.8-1-0.5-1.7c0.3-0.8,0.9-1.7,1.8-1c1.7,1.3,2.8,1.2,3.2-0.9\n                        c0.4-2-1.5-1-2.3-1.5c-1.8-1.2-3.4-3.2-3.9,0.9c0,0.2-1.1,0.7-1.2,0.5c-3.8-3.6-7.6,2.1-11.6-0.5c-0.4-1.6,2.6-1,2.4-3.1\n                        c-3.6,1.1-6.8-0.6-10.2-1.3c-0.9-0.2-2.1,1.5-1.7,3.3c2.7-0.6,6.1-3,8,2c-3.6-0.1-6.5,0-9.6,1.2c-4.3,1.7-8.6-1-10.8-5.8\n                        c-0.9-1.9-3.5-1.7-3.5-1.4c-1,5.9-5.9,2.1-8.4,2.7c-2.8,0.7-6,1.1-9.1,2c1.4-1.9,0.6-4.4,3.4-5.9\n                        C1283.8,382.7,1280.4,380.1,1280,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1331,378c-2.2-1.3-6.7,1-6.1-4.9c-0.8,1.7-1.1,3.1-1.6,3.3c-1.5,0.3-0.9-1.2-1.3-2\n                        c-1.2-2.1-3.1,1.3-4.7-2.4c0.3,3.7,2.7,3.4,3.7,6.2c-4.3-3.4-9.3,0.1-12.5-5c-0.9-1.5-5.8-0.6-8.8-0.5c-1.6,0-3.3,0.8-4.6-0.7\n                        c-3.5-4.4,2.2-3.8,2.9-6c-2.9,3.1-7.1,0.7-10.6,2.1c-1.2,0.5-3.6-1.5-2.4-2.5c1.8-1.6-2.4-5.4,2.3-5.2c1,0.1,2,0.3,2.8-0.5\n                        c3.3,0,6.7-0.5,9.5,1.9c0.4,0.4,1.2,0.4,1.7,0.6c1-3.7,2.2-2.1,4.4-0.6c2.4,1.7,5.8,1.3,8.7,1c5.5-0.5,10.8-0.5,15.8,2.5\n                        c1.6,1,3.8-0.9,6.2-0.8c3.3,0.2,6.4,2.2,9.8,1.3c1.7,0,2.7,2.2,5.1,0.5c2.8-2,6,0.4,8.9,1.5c-1.1,2.2-5.6,1.9-4.2,5.9\n                        c-2.7,0.3-5.8,1.6-8.1,0.7c-2.4-1-4.7-0.5-7-1.2C1336.1,371.9,1333.3,374.5,1331,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1342,377c0.9,3.9-3.4,3.2-4.8,5.2c-0.3,0.4-1.1-1.9-1.2-3.2c0-0.3,0-0.7,0-1c0.9-0.7,1.9-1,3-1\n                        C1340,377,1341,377,1342,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1361,368c-0.2-0.7-1.6-1.4-0.9-1.7c1.4-0.7,2.8-0.2,2.9,1.7C1362.3,368,1361.7,368,1361,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1339,377c-0.7,1.2-1.9,1-3,1C1336.8,376.9,1337.3,375.2,1339,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1328,345c-0.7-0.3-1.3-0.7-2-1c0.2-0.7,0.1-1.8,1.2-1.4C1328.3,342.9,1327.9,344.1,1328,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881827"),
                d:
                  "M1290,360c-1,1.6-2.8,0.6-4,1.3c-0.1,1.3,3,1.7,1.1,3.5c-0.6,0.6-2.3,0.5-1.3,1.9c0.7,1,2,1.2,3,0.1\n                        c1.3-1.4,2.5-1.9,4.2-0.4c1.6,1.3,2.4,0.3,3.4-1.2c0.6-0.8,2.8-0.9,3.4,0.1c1,1.6-0.5,1.8-1.8,2.4c-1.6,0.7-4.2,1.5-2.9,4.5\n                        c-0.7,0-1.3,0-2,0c-1.6-0.8-3.1-1.9-5-1c-3.7,0-7.3,0-11,0l0,0c-4.9-0.1-8.1-4.1-12.4-5.5c-2.5-0.8-4.6-2.2-7.4-2.5\n                        c-2.9-0.2-4.3-2.4-2.9-5.4c0.8-1.6,1.4-3.4,2.8-4.7c4.8-0.1,9.5,0.1,14,2l0,0c-3.1,1.3-6.5-0.3-9.5,1c0.1,0.2,0.6,0.3,0.9,0.6\n                        c0.2,0.2,0.5,1.4,0.8-0.3c0.4-1.9,3.7-1.3,4.7-0.7c1.3,0.9,2.1,0,3.1,0.2c0.9,0.1,2.7-0.1,2.4,0.8c-1.1,3.3,1.4,2,2.6,2.2\n                        c1.9,1.1,5.1,3.3,5.7,2.2c1.7-3,3.4-1.5,5.3-1.2C1288,360,1289,360,1290,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1287,360c-1.3,0-2.6,0-3.9,0c-0.2,1.5,1.8,2.1,1.1,3.7c-2.3,1-2.1-2.1-4.1-2.3\n                        c-1.8-0.1,1.9,2.8-0.7,2.2c-0.6-0.1-3.8,0.6-2.2-2.3c0.7-1.2-0.3-1.7-1.2-2.2c0.1-1.4,0.9-2.3,2.3-1.7\n                        C1281.1,358.4,1284.4,358.2,1287,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1271,356c-1.8,0.9-0.2,3.2-2,4.5c-1.1-2-0.4-6.3-5.1-4c1.9,0.7,4.1,1.4,2.2,4.6\n                        c-1.5-3.4-4.9-3.7-7.4-6.1c4.5,0,8.4,0,12.4,0C1271,355.3,1271,355.7,1271,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1276,355c2.7,0.4,5.5-1,8,1C1281.3,355.6,1278.5,357,1276,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1627"),
                d:
                  "M1257,353c0.3,1.9-0.6,3.4-1.7,4.9c-1.6,2.2,0,4.5,2,4.2c5-0.9,7.9,2.8,11.7,4.3\n                        c2.7,1.1,5.1,3.4,7.9,4.6c-10.2-1.1-20.5-2.2-30.6-3.5c-1.8-0.2-3.6-0.5-5.4-0.5c-0.7,0-1.3,0-2,0c-1.6-1.3-3-2.2-0.5-4.5\n                        c2.1-1.9,4.8-4.4,2.7-8.1c-0.8-1.4,0.3-2.2,1.6-2.5c1.8-0.5,3.5-0.8,5.3,0.1C1251,352.2,1254.2,351.3,1257,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721426"),
                d:
                  "M1248,352c-2.1,0.1-4.3-0.4-6.1,1.3c2.5,4.1,2.2,7.6-2.4,10.1c-2.9,1.6,0,2.5-0.5,3.6\n                        c-7.4,0.5-14.6-2.6-22-2c-0.9-2.4-0.3-2.7,2.2-2.5c3.3,0.3,6.7,1,10.1,0.1c0.3-2.4-2.8-0.9-2.7-3.3c2.7,2.4,4.2-4.6,6.8,0\n                        c1.9-2.2-2-2.1-0.6-3.8c1.8-0.3,3.1,2.7,5.4,1c-2.1-1.3-2.4-4.7-5.8-4.6c-0.8,0-0.3-0.6,0.1-0.8c0.5-0.1,1-0.1,1.5-0.1\n                        c4.7,0,9.3,0,14,0C1248,351.3,1248,351.7,1248,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1287.7,399.2c1.7,0.8,3.5,1.3,3.4,2.7c-0.1,1.2-1.9,1.6-3.4,1.8\n                        C1287.3,402.1,1289.3,400.8,1287.7,399.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1271,399c-0.6-2.9-0.6-2.9,2.4-3.6C1273.8,397.5,1270.4,396.9,1271,399L1271,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1373.6,393c-0.3,0.2-0.5,0.6-0.9,0.7c-0.7,0.2-1.3-0.1-1.5-0.8c-0.1-0.2-0.8-0.9,0.2-0.9\n                        C1372.2,392,1373.1,391.9,1373.6,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1262,390.1c-0.7,0.2-1.2,0.6-1.5,0.4c-0.3-0.2-0.5-0.7-0.8-1.1c0.3-0.1,0.6-0.4,0.9-0.3\n                        C1261,389.3,1261.3,389.6,1262,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1367.2,395c-0.3,0.2-0.7,0.6-1,0.7c-0.8,0.1-1-0.5-1.1-1.2c-0.2-1,0.6-0.4,0.9-0.4\n                        C1366.5,394,1367.3,393.9,1367.2,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D2737C"),
                d:
                  "M1399,338c-0.8-0.3-2.1,0.6-2.2-0.9c0-0.3,0.9-0.9,1.4-1C1400,336,1399.2,337.2,1399,338L1399,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74854"),
                d:
                  "M1568,317c4.9-1.7,10-0.8,15-1c3.5,2.5,7.4,3.3,11.7,3c2.3-0.2,4.5,0.1,4.1,3.4\n                        c-0.3,2.1,1.2,1.8,2.5,2.1c2.8,0.7-0.8,4.5,2.3,4.9c2,0.3,2.6-3.5,5-2.3c2.2,1.2,4.1,2.2,6.9,1.3c1.6-0.5,0.5,0.9,0.2,1.4\n                        c-0.4,0.9-0.5,1.8,0.7,1.8c4.3,0.3,8.1,3.4,12.7,2.2c-0.3,0.3-0.7,0.7-1,1c-6.7-0.1-13.5,0.1-20,2c-6,0-12-0.2-18,1\n                        c-0.9-1.1-2-2-2.1-3.7c-0.2-3.1-2-4.3-4.7-2.4c-1.6,1.1-2.6,1.2-3.9-0.1c-0.4-0.5-1-1.2-0.9-1.6c0.5-2.1,2.7-0.5,3.7-1.6\n                        c-2.6-2.9-2.6-2.9,1.3-4.8c-5.8-1.6-9-9.3-16-3.6C1566.4,318.9,1567.8,318,1568,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5B"),
                d:
                  "M1614.2,356.1c-0.4,0.5-0.6,1.3-1.1,1.4c-0.9,0.2-1-0.6-0.9-1.2c0.1-0.8,0.7-1,1.3-1.2\n                        C1614.6,354.9,1613.7,355.7,1614.2,356.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7535A"),
                d:
                  "M1504,321c8.1-2.9,16.6-2.7,25-3c-0.7,1.3-3.2,0.8-3,3C1518.7,321,1511.3,321,1504,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7535A"),
                d:
                  "M1495,321c2.7-1.5,5.3-1.5,8,0C1500.3,321,1497.7,321,1495,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D05762"),
                d:
                  "M1533.9,321.2c0.1,0.2,0.6,0.6,0.5,0.9c-0.3,1-1.2,0.8-2,0.8c-1.1,0-0.3-0.7-0.2-0.9\n                        C1532.4,321.4,1533,321.1,1533.9,321.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D54B57"),
                d:
                  "M1712,350c-0.3,0.3-0.7,0.7-1,1c-13.7-0.5-27.2,1.5-40.7,2.8c-3.8,0.4-7.5,0.8-11.3,1.2\n                        c-6.8-0.6-13.2,2.8-20,2c-2-3.6,0.2-4,3-4c1.8-1.9,4.1-2.9,6.6-3.2c15.3-1.6,30.7-3.3,46.2-2c1.8,0.3,3.6,0.2,5.4,0.2\n                        c3,0.3,6.1-0.7,8.9,1c3-1.6,5.9-3,9.8-1.2C1716.7,350.1,1713.6,347.8,1712,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F49"),
                d:
                  "M1757.7,354c0.8-2.4,2.4-2.1,3.8-2c1,0.1,2.9-0.8,2.7,0.9c-0.3,2.7-1.8,0.4-2.8,0.4\n                        C1760.3,353.4,1759.2,353.7,1757.7,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24651"),
                d:
                  "M1747,361c-2.1,0.1-3.9-0.4-3.9-3.6C1744.9,358.5,1746.8,358.8,1747,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D74753"),
                d:
                  "M1695,349c-17.8-0.1-35.6-0.4-53,4c-0.6-1.9-2-3.4-1.2-5.8c1.4-3.9-1.4-6.9-2.8-10.2\n                        c13.3,0,26.7,0,40,0c2.2,3.9,7.1,0.3,10,3.8c-2.1,0.9-4.8-0.8-6.7,2.1c3.6-1,6.2,2.9,9.4,0.2c0.2-0.2,0.8-0.1,0.9,0\n                        c3.7,5.9,9.7,3.3,14.7,3.9c1.3,0.2,2.1,0.8,2.7,2c-3,0-6,0-9,0C1698.3,348.2,1696.7,348.2,1695,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1248,511c-9.7,4.3-19.9,7.1-30,10c-8.4,0.4-15.7,5.7-24.3,5.7c-2.9,0-4.7,4.1-8,3.6\n                        c-7-1.1-12.2,3-17.6,6c-2.9,1.6-5.9,1.8-8.9,2.5c-4-0.4-6.9,3.3-10.8,3.2c-8.7-0.2-15.8,4.7-23.8,6.9c-2.2,0.6-3.8,2-4.6,4.2\n                        c-1.3,0.7-2.7,1.3-4,2c-5,1.1-9.2,4.8-14.6,4.9c-2.3-0.5-4.5-0.8-6.8-0.3c-2.9,0.6-5.5-0.8-7.6-2.7c-0.8-0.7-0.3-1.8,0.7-2.4\n                        c-0.3-0.4-0.6,0-0.8,0.1c-1,0.4-1.9,0.4-2.9,0c-1.1-0.4-2.2-1-2.3-2.3c-0.1-2.3,2.6-1.6,3.5-3c-0.5-1.9-4-0.9-3.4-3.4\n                        c0.4-2.1,2.6-2.4,4.3-3c3.8-1.4,7.8-1.1,11.8-0.6c1.4,0.2,2.9,1.2,4.1-0.3c1.4-1.7,0-3.1-0.7-4.5c-0.3-6.2,1.2-8.3,6.6-8.4\n                        c2.5,0,4.1-0.7,4.7-3.3c0.2-1.1,0.7-2.5,2-2.5c1.5,0.1,1.4,1.6,1.7,2.7c0.4,1.5-0.1,3.6,2.2,3.9c2.2,0.3,3.9-0.7,5-2.6\n                        c2.3-4.2,6.1-5.3,10.5-5.3c3.2,0,6.3-0.1,9.5,0c3.4,0.1,6.6,0,8.5-3.7c0.6-1.2,1.9-2,3.3-1.1c4,2.7,8.7,2.2,13,2.4\n                        c3.2,0.2,5.9,2.4,9.3,1.2c3.3-1.1,6.8-0.5,10.3,0c2.6,0.4,5.6-0.4,7.4-2.3c5.7-5.8,11.6-3.9,17.8-1.4c0.6-0.9,3.7,2,2.8-2\n                        c-0.3-1.1,3.9-2.4,5.9-1.7c4.5,1.5,4.4,1.8,8.3,1.4c-0.3-0.9-1-0.6-1.6-0.7c-0.4-0.1-0.8-0.2-1.2-1c1.7,0,3.5,0.4,5.1-0.1\n                        c1.3-0.4,5.2,2.2,3.7-2.5c2.5-0.5,5-2.5,7.5-0.8C1244.9,510.7,1246.3,511.1,1248,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B13742"),
                d:
                  "M1101,559c5.2-0.7,9.5-4.5,15-4c-0.2,1.3-3.2,0.6-2.2,2.5c0.6,1,2,0.3,3.1-0.3\n                        c2.5-1.3,4.8,0.2,5.2,3.1c0.1,0.6,5.4,2.3,6.9,2.2c5.1-0.4,10.4-1.8,15.4-0.9c4.7,0.8,9.4,1,14,1.6c5.2,0.7,10.8-0.1,15.5,3.6\n                        c2.7,2.1,6.3,1,9.5,1.2c5.2,0.5,11-1.1,15.6,2.6c1,0.8,1.7,0.5,2.6,0.5c6.6,0,13.3,0.5,19.8,0.4c6.7,0,13.2,1.8,19.8,2\n                        c4.2,0.1,8.4,3.5,13.2,2c6.3-2,12,2.9,18.2,1.9c0.1,0,0.3,0.1,0.5,0.2c1.7,0.3,5.3,2.4,5.9,3.5c-3.4,2.6-7.5,1.2-10.4,0.4\n                        c-6.7-1.9-13.6-0.6-20.2-3c-4-1.4-9,0-13.3-1c-6.9-1.6-14.2-0.5-21-3.9c-2.8-1.4-6.8-0.6-10.2-0.4\n                        c-11.2,0.6-21.9-2.4-32.9-3.6c-1.5-0.2-2.9-0.9-4.1,0.5c-2.6,1.2-5.1,0.5-7.6-0.2c-16.3-3-33-2.8-49.4-4.9\n                        c-4.2-0.5-8.2-0.1-11.1-3.7C1098.7,559.6,1099.2,558.7,1101,559z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73340"),
                d:
                  "M1159,538c1.8-1.8,5.1,0.1,6-1.2c2.1-3.2,6.4-2.1,8.4-5.2c1.6-2.4,4-2.9,7-2.5\n                        c3.8,0.6,7.6,0.5,10.3-2.9c1.4-1.7,3.3-1.3,5.1-1.3c4.2-0.1,7.9-0.2,11.6-3.5c2-1.8,7-0.4,10.6-0.5c-4.7,2.2-9.6,3.8-14.7,4.9\n                        c-1.6,0.4-3.2,0.7-4.3,2.1l0,0c-3.5,2.8-8,2.7-12,4c-5.3,0.8-10.1,3-15,5c-5.4-0.1-9.7,3.7-15,4\n                        C1155.4,538.5,1158.2,538.9,1159,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63440"),
                d:
                  "M1159,538c0.5,1.8-2.8,1-2,3c-12.5,3.4-24.2,9.3-37,12c-0.7-1.7-1.9-3.1,1.1-4.1\n                        c4.1-1.3,7.6-4.6,12.4-3.9c0.8,0.1,1.3-0.5,2-1c3-2.1,6.1-4.3,10.2-3c3.2,1,5.8-1.1,8.3-2.5\n                        C1155.9,537.5,1157.3,537.6,1159,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B13742"),
                d:
                  "M1300,582c-7.2,3.4-14.1,1.8-21-1c3.5-3.4,8.7-3.2,11.5-1.5c3.5,2.1,3-0.8,4.2-1.6\n                        C1295.5,580.5,1297,582.3,1300,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1190,576c0.4,2.5,2.4,1.2,3.7,1.7c2.5,1,7.1,0,5.3,5.3c-3.2,3.6-6.3,2.9-10.2-1.3\n                        c1,3,1.4,5.1,3.8,5.2c3.7,0.1,3.6,1.8,1.8,3.9c-2.5,3.1-0.3,2.8,1.8,2.6c-0.9,2.9-1.8,5.5-5.5,3.5c-0.5-0.3-1.5-0.9-1.3-0.9\n                        c3.3-0.4-1.7-2.6,0.7-3.2c1.2-0.3,2.7-1.3,2.3-2.8c-0.4-1.5-2.3-1.1-3.5-1.2c-1.5-0.2-2.5-0.5-3.8-1.7\n                        c-2.6-2.4-5.6-3.8-7.4,1.6c-1.3-1.5-2.3-2.6-3.3-3.7c0.9-1.4,2.4,0.7,2.6-0.4c0.2-1.1-1.2-3.1-2-2.5c-2.4,1.7-4.1-0.3-5.8-0.7\n                        c-2.5,0.9,1.4,2.8-0.7,3.4c-2.1,0.5-3-1.4-4-2.8c-1.4,1,0.5,3.3-1.7,3.6c-0.6,0.1-1.8,1.8-1.9-0.5c-0.1-4.4-3.6-3.2-6.3-4\n                        c1,2,2.8,1.7,4,2.5c1.2,0.7,0.9,1.8,0.3,2.5c-0.7,0.8-2.4,0.7-2.5,0.1c-0.4-3.6-1.3-2.3-2.4-0.4c-0.8,1.3-2.2,1.1-3,0.5\n                        c-1.3-1,0.7-1.6,0.7-2.2c0-2.2-3.6-3.6-0.6-6.7c-2.3,0.5-3.3,2.1-5,0.7c-1.2-1.1-2.5,0.1-3.4,1c-1.1,1.2-0.8,2.4,0.3,3.5\n                        c0.4,0.4,2.1,0.6,0.5,1.6c-0.9,0.6-1.6,0.2-1.9-0.8c-1.9-5.2-4.8-4.5-8.6-1.9c-1.3,0.9-2.6-1.6-4.2-2.2c1-0.2,2.1-0.4,4.1-0.7\n                        c-4.1-1.9-7.6-1.2-10.8-0.6c-2.4,0.4-3.7,0.2-4.2-2.1c-0.4-1.8-1.5-0.7-2.2-0.8c-1.8-0.1-3.7,0.9-5.1,0.8\n                        c-3.7-0.1-3.7-0.6-5.2,4.6c-1.2-3.6-2.8-6.5-5.6-8.9c-1.3,1.4-1.4,4.2-4.2,5c-1.1-1.8-0.4-5-3.7-5.5c-2.3-0.3-2.7,1.4-4.1,2.8\n                        c-1.4-2.7-0.5-5.3-0.8-7.8c0.2-0.2,0.4-0.4,0.6-0.6c0.7-0.4,1.5-0.6,2.4-0.7c2.8,0.4,6.2-1.5,8.1,2.1\n                        c-1.9,1.1-3.9,0.7-5.8,0.3c2.2,0.5,4.4,1,6.4-0.8c7.6-1.5,15.2,0.4,22.7,0.9c4.6,0.3,9.2,1.5,13.9,1.4c0.9,0,1.7,0,2.6,0.1\n                        c3.5,1,7,0.9,10.6,1.2c0.6,0.1,1.1,0.2,1.6,0.4c9.8,0.1,19.3,2.6,28.9,3.7C1182.6,575.2,1186.5,574.3,1190,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2736"),
                d:
                  "M1179,574c-10.1-0.1-20.1-1.4-30-3c0.7-1.8,2.2-2.9,3.8-2.2c2.5,1,4.8-0.1,7.2,0.2\n                        c2.3,0.8,4.8-0.2,7,1c0.4,2.7,2.6,1.7,4.2,2C1173.8,572.6,1176.6,572.5,1179,574z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651320"),
                d:
                  "M917,549c13.4,1.1,26.9,2,40.3,3.8c5.2,0.7,10.4,1.9,15.7,1.3c1.1-1.1,2.4-1.1,3.8-0.9\n                        c2.8,0.9,5.7,0.4,8.5,0.9c1.8,0.5,3.6,0,5.4,0.4c6.1,0.3,12.2,1.4,18.3,1.6c11.6,1.3,23.3,2.3,35,3.6c1.5,0.2,3,0.1,4.3,0.9\n                        c-0.1,2.6,2,6.2-2.5,7c1.2,0.3,3,1.2,2.7-1.9c-0.2-1.6-0.4-3.3,1.5-4.3c3.1-0.9,6.1-0.6,9.2,0c5.3,1,10.7,1.5,16,1.8\n                        c1.9,1,5.5,0.1,5.6,2.8c0,2.8-3.4,3.1-5.7,3.7c-2.3,0.7-4.7,1.1-7.1,1.6c-3.9,0.1-6.9,3.7-11,3c0.7-1.5,3.1-1.2,3.6-3.5\n                        c-3.1-0.2-6.7,3.1-8.9-1.2c-0.1-0.1-0.8,0-0.9,0.1c-4.3,7.3-9.3,0.8-13.9,0.5c-2.6-0.2-1.9-4.7-4.9-5.5\n                        c-0.9,1.8,0.7,2.9,1.2,4.9c-3.3-1.9-8.7,0.1-9.4-2.2c-1.1-3.6-4.8-0.9-4.8-4c-1.1,1.1-1,1.9-0.6,2.7c0.5,1,2,1.9,0.9,3\n                        c-1.8,1.7-1.3-2.8-3.2-1.4c-0.7-3.9-4.3-1.6-6.1-2.9c-1.1-0.8-4.2,2.2-3.8-2.3c0.1-1.1-2.6,1.7-4.1,2.4\n                        c-2.4-1,0.7-3.2-1.4-4.4c-2.3,1.5-5,1.1-7.7,0.7c0-1.4,1.9-0.2,2-1.7c-3.3,0-6.6-0.2-9.8,0.1c-2,0.2-3.9,0.5-5.2-1.6\n                        c-0.2-0.4-0.3-1-1-0.8c-7.2,2.7-14-0.7-21-1.6c-1.3-0.2-3.2-0.7-3.9-0.1c-4,4-8.3,1-12.5,1c-6.8,0.1-13.2-3.2-20.1-2.2\n                        C920.7,554.1,916,553,917,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1068,571c3.7-2.5,8.5-2.7,12.5-5c-1.4-1.7-3.6-0.2-4.5-2c4.3-2.6,7.7-0.8,11,2l0,0\n                        c-1,2.3-1.9,4.7-5.1,2.4c-3.6,4.4-8.9,1.6-13.2,3.2C1068.6,571.6,1068.2,571.2,1068,571z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1203,581c0.7-0.4,1.3-0.7,2-1.2c1-0.7,2.2-2.1,3.1-0.5c0.7,1.4-1.1,1.9-2.1,2.6\n                        C1205.3,580.8,1204.1,581,1203,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1623"),
                d:
                  "M1222.4,592.5c-2.1-0.3-3.8-0.2-3.8-1.3c0.1-1.8,1.3-0.5,2.1-0.2C1221,591,1221.3,591.5,1222.4,592.5z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1109.3,579.3c-0.8,0.2-1.2,0-1.2-0.6c0-0.4,0.4-0.7,0.6-1.1c0.5,0.3,1,0.6,1.5,0.9\n                        C1109.9,578.8,1109.5,579.1,1109.3,579.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1247.4,526.8c-0.1-2,0.7-2.9,2.2-3.2c0.2,0,0.7,0.4,0.7,0.6C1250.4,525.8,1249.2,526.4,1247.4,526.8z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1265.6,528.5c-1.8,0.7-3.1,0.8-4.4-0.5C1263,526.5,1264,527.7,1265.6,528.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1275,528.8c-0.4-0.6-0.8-0.9-0.8-1.2c-0.1-0.7,0.3-1.3,1-1.1c0.3,0.1,0.6,0.7,0.5,1.1\n                        C1275.8,528,1275.4,528.3,1275,528.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M889,511c-1.7-6.5-2.1-13.2-2.1-19.9c1.5-2.1,1.7-2.1,4.6,0.8c0.7,1.2,0.8,2.6,0.9,4\n                        c-0.1,3-0.1,6.1,0.2,9.1c-0.1,2.1,0.8,3.8,2.3,5.1c3.2,3.2,6.6,0.9,9.8,0.2c2.6-0.6,4.8-1.5,6.2,1.7c0.7,1.5,2.1,1.4,3.4,1.2\n                        c2.9-0.5,5.9-0.3,8.8-0.9c4.2-0.8,5.4,0.4,6,4.9c2.2-1.6,3.6-4.4,6.4-4.9c3-0.5,5.3,1.4,7.3,3.5c0.3,0.3,0.6,0.7,0.9,1\n                        c0.8,0.8,2.2,1.2,2.4,0.1c1.1-4.6,4.8-3.7,8-4.4c0.3-1.6-1.5-2.5-1.4-4c0.6-1.6,2.1-1.9,3.3-1.4c3.4,1.4,7.3,0,10.6,1.9\n                        c0.3,0.2,0.8,0.4,0.9,0.2c3.9-4.3,7.8,0,11.7-0.1c4.3-0.2,8.6-0.8,12.8,1c0.7,0.3,1.2-0.2,1.8-0.5c4.3-2.5,4.4-2.5,6.7,2.9\n                        c2.2-3.3,5.5-3.7,9-3.3c6.2,0.7,12.5,1.5,18.7,0.7c3.8-0.5,7.6-1,11.4-1.1c1.2,0,2.5-0.5,3.4,0.1c3.2,2.1,5.8,1.6,8.1-1.5\n                        c1.1-1.5,2.4-0.7,3.4,0.3c1,1.1,2,2.3,3.7,2c7.1,0.1,14.2,1.4,21.4,0.7c2.7-0.3,5.8,1.9,7.1-2.3c0.1-0.4,0.9-0.5,1.3,0\n                        c3,3,6,1,8.9,0c2.8-0.9,6.7,1,8.1-3.3c0-0.1,0.4-0.2,0.4-0.1c3.2,4.9,8.7-0.1,12.3,2.8c1.7,1.3,2.2-0.6,2.3-0.8\n                        c0.7-3.4,3.1-3.2,5.4-2.4c2.6,0.9,4.8,0.8,7.6,0.1c2.2-0.6,6.1-2.2,7.5,2.1c0.1,0.4,0.2,0.3,0.5,0.1c1.6-1.4,6.7-0.5,7.5,1.4\n                        c0.3,0.6-0.1,1.3-0.6,1.8c0,0.3,0,0.7,0,1c1.8,2.8,0.8,4.4-2.2,5c-3,0.6-6,2.9-9.2-0.2c-1-1-3.2-0.2-4.8,0.2\n                        c-2.5,0.5-5,0.4-7-1.6c0.3,1.3,0.3,2.5-0.7,3.3c-1.6,1.3-2.7-1.2-3.9-1c-1.1,0.2,0.7,2.5-1.3,3c-1.6,0.4-3,0-4.4-0.6\n                        c-2.2-0.9-3.8,0.1-5.4,1.5c-1.6,1.5-3.5,1.9-5.5,1c-5-2.1-10.4-2.2-15.3-0.6c-4.2,1.4-8.2,1-12.3,1.1c-1.5,0-3-1.4-4.7-0.2\n                        c-3.9,1.4-7.7,3.1-12,0.6c-3.1-1.8-2.3,2.8-4.4,3c-2.9-2.1-6.7-2.1-9.7-4.4c-1.5-1.2-4,1.2-4.9,3.3c-2.1,4.8-2.6,5.1-6.8,1.9\n                        c-3.2-2.5-5.8-3.9-10.5-2.6c-3,0.9-7-1.9-10.3,1.3c-4.6-4-5.5-1.7-5.3,3c0.1,1.2-7,4.5-8.2,3.9c-2-1.1-1.2-3-1.1-5\n                        c-0.6,2.3-2.4,3.8-2.6,6.2c-0.4,4.5-1.2,4.7-5,1.9c-0.4-0.3-0.8-0.6-1.7-0.2c0.9,4.4,5.2,5.5,8,8c0.2,0.2,0.6,0.2,1,0.1\n                        c1.4-0.6,1.7-3.5,4.4-1.8c4.8,3,11.2,3.6,14,9.6c-0.4,4.4-3.6,3.4-5.5,2.2c-2.2-1.4-3.8-1.6-5.8-0.2c-0.9,0.6-1.9,0.9-2.8,0.4\n                        c-3.4-2-6.9-2.7-10.7-0.8c-0.7-0.1-1.4-0.4-2-0.7c-1.3-1.2-3.4-1.5-4.7-1.2c-6.7,1.2-12.8-3.2-19.6-1.5\n                        c-2.9,0.7-6.3-0.6-9.2-1.6c-4.5-1.5-8.9-0.5-13.3-0.4c-5.4-0.4-10.7-0.9-15.8-3.1c-5.2-2.2-10.9-2.5-16.5-1.2\n                        c-4.9,1.1-9.6,0.4-13.9-2.3c-1-0.4-2.2-0.9-2.1-1.8c0.4-5.3-3.3-9.6-3.1-14.9C891.4,519.3,891.3,514.9,889,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3442"),
                d:
                  "M1071,521c2.6-3.3,5.3,0.6,8.2-0.1c3-0.7,6.2-0.3,9.4-1.6c2.3-0.9,5.5-1.5,8.2,0\n                        c1.5,0.9,3,0.5,4.2-0.5c1.5-1.3,1.6-1,2.3,0.8c0.8,2.2,3.7,1.8,4.5,0.5c2.9-4.7,6.1-3.3,9.7-1.3c0.4,0.2,1,0,1.5-0.1\n                        c0.6-2.2-1.9-1.3-2.4-2.7c2.6-2.1,4.8-2.3,6.4,1.4c1.9-2,0.3-3.7-0.3-6.4c3.9,3.8,7.4,5.1,11.7,2.8c0.4-0.2,5-2,5,2.3\n                        c0,0.2,1.2,0.5,1.2,0.5c1.4-2.4,3.9-1.5,5.9-2c2-0.5,1.2-2.4,1.4-3.8c0.7,0.1,1.8-0.1,1.9,0.2c0.8,2,2,3.8,4.2,3.3\n                        c2-0.5,1.6-3,2.3-4.6c1.3,1.1,2.6,2.1,3.7,3.3c1.6,1.7,3.1,2.5,4.9,0.4c1.8-2.1,4,1.4,5.9-0.9c-0.2,2.4-2.7,2-3.2,4\n                        c3,0.4,6-1.4,6.2-3.1c0.3-2.2,1.5-2.1,2.6-2.5c2.3-0.9,12.8,2.1,14.4,4.2c0.4,0.6,0.4,1.2,1.2,0.4c3.8-3.5,8-4.6,13-2.7\n                        c0.9,0.3,2,0.2,2.7-0.8c2.1-3.1,3.1-0.7,4.2,0.9c-0.2,0.9,0.6,1.4,1,2c0,0.7,0,1.3,0,2c-1.8,0-3.6-0.4-5.4-0.5\n                        c-3.8-0.4-7.5-2-11,2.6c-1.8,2.4-6.3,4.5-10.8,2.5c-3.3-1.4-6.7-0.4-9.8,1.5c-0.3,0.2-0.2,0.9-0.8,0.7\n                        c-9.9-4-11.2-4.2-18.2-3.4c-0.4,0-1,0.2-1.3,0c-2.4-1.6-2.5-1.7-4.3,1c-1.2,1.8-2.7,1.6-4.4,1.6c-4.8,0-9.6-0.1-14.5,0.1\n                        c-3.4,0.1-6.4,1-7.7,4.7c-1.3,3.4-4.7,3.3-7.5,3.8c-1.7,0.3-2.2-1.2-2.2-2.7c-0.1-1.6,0-3.3-0.7-5c-0.4,1-1.1,2-1.2,3.1\n                        c0,3.4-1.8,3.4-4.6,3.1c-5.2-0.5-6.3,0.8-6.6,6.9c-0.2,0.1-0.4,0.3-0.6,0.4c-6.1-2.4-6.6-2.7-9.3-5.5c0,2.2-0.6,4.3-2.6,5.7\n                        c-4.1-1.1-4.4-1.8-2-6c-4.8,1.7-9.6-0.6-14.4,0.3c-1.4,0.2-2.6-0.8-2.8-2.3C1070,526.7,1068.8,523.7,1071,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92303D"),
                d:
                  "M1148,510c-0.2-0.8-0.2-2.1-0.6-2.2c-2.3-0.7-0.6,2.7-2.6,2.6c-1.7-1,0.2-3.7-2.1-4.6\n                        c-0.2,0.3-0.4,0.7-0.6,1c-0.6,1.3,1.9,3.4-0.3,3.8c-2.3,0.4-2.5-1.8-2.3-3.8c0.1-1.1-6.5-2.2-7.1-0.9\n                        c-1.5,3.1-2.8,1.5-4.7,0.6c-3.5-1.8-3.8-1.6-5.4,1.7c-1.6-0.9-3,2.4-4.6,0.4c-0.9-1.2-2.2-2.2-3.3-1.1c-3.9,3.9-6.3,0.9-8.7-2\n                        c-1.3,4.6-1.3,3.5-6.2,3.6c-2.4,0-6.6,0.4-8.3,1.9c-4.5,3.9-2.6-1.5-3.8-2.1c-0.7,3.6-1.8,6.5-5.9,3.1\n                        c-1.1-0.9-2.1-0.8-3.1,0.1c-1.2,1.1-3,1.4-4.2,0.8c-5.2-2.8-11,0.4-16.2-1.9c-4.4-2.7-5-4.3-3.4-9c0.3-0.2,0.7-0.5,0.9-0.4\n                        c4.5,3.3,10.2,4.2,14.6,2.4c4.5-1.8,9.3-0.4,13.4-2.6c2.8-1.5,5.9-0.8,8.8-1.4c2.9-0.6,3.1,3.2,5.6,3.5\n                        c0.4,0.3,0.1-0.8-0.2-0.2c-0.1,0.3-0.2,0.2-0.5,0c-1.8-1.1-2-2.2,0.1-3.1c0.9-0.4,2-0.5,2.9-0.3c8.3,1.5,16.1-2,24.3-1.7\n                        c1.1,0,1.7-1,2.4-1.6c1.1-0.6,2.2-0.7,3.3-0.4c1.5,0.9,3.1,1.2,4.8,0.5c1.5,0.4,1.8,1.8,2.6,2.8c2.7,3.8,5.8,2.1,8.9,0.6\n                        c0.5,0,0.9,0,1.4,0.1c0.5,0.2,0.9,0.4,1.2,0.7c0.4,0.3,0.7,0.7,1.1,0.9c-0.3-0.4-0.7-0.7-0.9-1.2c-0.2-0.5-0.1-0.9,0-1.4\n                        c0.3-0.4,0.7-0.6,1.2-0.6c5.5,2,10.7,0.2,15.9-1.1c0.5-0.1,0.9,0,1.4,0.1c2.3,1,1.6,4.5,4.1,5.2c0.6,0.6,0.8-0.6,0.4-0.1\n                        c-0.1,0.1-0.1,0-0.4-0.2c-1.9-1.3-2.9-3.1-1.6-5.1c1.4-2.2,2.8-0.3,4.2,0.6c2.6,1.6,4.3,0.8,5.6-1.8c0.5-1,0.8-2.5,2.3-2.1\n                        c1.1,0.3,1.3,1.5,1.5,2.4c0.4,1.8,1,3.6,3.2,2.3c6.4-3.7,13-1.5,19.6-1c2.7,0.2,5.2,0.1,7.9-0.5c2.7-0.6,5.8-2.2,8,1.6\n                        c0.8,1.4,2,0.1,3-0.3c2.4-1,4.8-1.5,7,0.4c-1.1,1.1-2.4,2.1-2,4c-4,2.6-9.1,2.7-12.7,1.4c-5.4-1.9-9.8,1.2-14.7,1\n                        c-3.3-0.1-6.4,1.1-5.9-4.1c-7.3,3.7-14,8.2-22.3,5.2c-4.2-1.5-8.3,1.2-12.2-0.2c-3.2-1.1-6.4,0.7-9.7-0.5\n                        C1151.4,505.1,1150.6,509.5,1148,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1213,515c-0.9-0.1-2.1,0.3-2.4-0.8c-0.4-1.1,0.8-1,1.4-1.2C1212.6,513.5,1214.2,513.6,1213,515z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2D39"),
                d:
                  "M1148,501c-0.3,0-0.7,0-1,0c-2.3-3.1-4.7-4.4-7.8-0.9c-0.6,0.7-1.5,0.5-2.2-0.1c-0.7-1-1.3-2-2-3\n                        c-1.3,0.2-2.7,0.2-4,0c-1.3,0-2.7,0-4,0c-2.9,1.6-5.8,2-8.4-0.6c1.9-5.7,2.6-5,8.2-4.9c5.5,0.1,11.2,2.2,16.5,0.1\n                        c4.5-1.9,8.7,1.2,13,0.1c1.4-0.4,3.1,0,4.3-0.9c1.7-1.3,3.2-1.3,4.9,0.1c2.4,2,5.2,0.7,7.7,0.4c4.2-0.4,8.2-0.1,12.2,1.3\n                        c3,1.1,6.1,1.2,8.8-1.3c2.5-2.3,2.4-1.9,5.3,0.3c0.8,0.6,3,0.2,4.4-0.2c5.2-1.5,10.6-0.5,15.8-1.4c4.6-0.7,9.8-2.5,14.2,1.5\n                        c0.9,0.8,2.9,0.5,4.1-0.7c0.3-0.3,0.7-0.6,1-0.9c4.1-2.1,8.6-1.7,12.9-1.4c8.1,0.6,16.1,2.4,24.3,1c0.8-0.1,1.6-0.1,2.5-0.1\n                        c2.1,0.6,4,1.5,6.3,1c1.4-0.3,2.6,0.3,3.2,1.7c0.2,0.7,0,1.3-0.4,1.9c-0.6,0.9-1.4,1.6-1.9,2.6c-0.4,0.8-0.6,1.6-0.9,2.4l0,0\n                        c-2.3,1.5-3.5-1.3-5.4-1.7c-4.7-1-9,2.7-13.3,0.7c-5.9-2.7-12.5,2.4-18.1-2.1c-0.2-0.2-1,0-1.3,0.2c-2,1.9-3.8,4.5-6.5,1\n                        c-2.1,2-4.8,1.9-7.4,1.8c-3.4,0.1-7.2-1.1-9.2,4.1c-2.2-6.1-6.2-5.6-10.5-3.9c-3.6,1.4-7.4,0.3-10.6-0.4\n                        c-6.9-1.5-12.7,0.4-18.9,3.1c-0.3-2.4-0.7-4.7-1.1-7.5c-3,7-3.6,7.3-8.8,4.7c-0.9-1.8-1.4-4.9-3.9-1.1\n                        c-0.5,0.8-1.4,0.7-2.1,0.1c-0.3,0-0.7,0-1,0c-0.7-0.1-1.3-0.8-1.8-0.7c-5,1-10.2,1.2-15.2,1.7\n                        C1149.4,499.8,1149,500.6,1148,501z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2D39"),
                d:
                  "M1261.7,498.6c0.5,1.9,0.3,3-1.1,3.8C1259.8,500.8,1259.7,499.5,1261.7,498.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63844"),
                d:
                  "M1226,535c-1.8,1.9-10.4,3.3-11.6,1.4c-2.3-3.8-6.9-4.1-9.4-7.4c0.7-1.6,2-2,3.6-2\n                        c5.3-0.1,9.9-2.3,14.4-5c0.6,2.2,2.9,1.6,4.1,2.4c0.7,1.5-3.9,1.9-0.5,3.7c0.5,0.3,0.5,0.7-0.2,0.9\n                        C1219.6,530.5,1225.8,533,1226,535z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1287,494c0.3-0.3,0.7-0.7,1-1c2.7-0.7,6-3.2,7,2c0,0.3,0,0.7,0,1c-1,0.3-2,0.6-3,1\n                        C1290.7,495.4,1287.2,497.4,1287,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2832"),
                d:
                  "M1287,494c1.3,1.6,3.9,1.1,5,3c-1,0-2,0-3,0c-1.5,0.3-2.9,0.1-4-1C1285.4,495,1286,494.4,1287,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1285,496c1.5-0.2,2.8,0.3,4,1c-1.3,0.7-2.7,1.3-4,2C1284.4,498,1284.4,497,1285,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF313D"),
                d:
                  "M1332,496c-0.8-0.5-2.1-1.1-1.5-2.1c0.6-1.1,1.2-0.2,1.4,0.6C1332,495,1332,495.5,1332,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2832"),
                d:
                  "M1295,495c-1.5-3.7-4.8-0.8-7-2c-0.7-1.5-1.7-2-3.5-1.4c-2.2,0.9-4,0-5.5-1.6c2.1-2.6,5.1-1.9,7.6-1.6\n                        c4.5,0.5,9-1.5,13.4,0.6c2.6,0,5.2,0,7.8,0c1.5,0,3,0,3.2-2c3.3,0,6.7,0,10,0c-4.1,1.1-7.4,4.3-12,4c-1.9,1-4.1,0.9-6,2\n                        c-0.8,0-1.6,0.2-2,1c-1.5,1.2-3.5-0.2-5,1C1295.7,495,1295.3,495,1295,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1303,493c1.6-1.9,3.7-2.1,6-2C1307.4,492.9,1305.3,493.1,1303,493z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1296,495c1.4-1.6,3.3-0.7,5-1C1299.6,495.7,1297.7,494.8,1296,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1242.7,561.2c-3.6,1.9-1.9-3.6-4.3-4.2c-0.2,0,0.7-1.9,1.3-1.6c2.5,1.1,4.8,2.4,7.1,3.7\n                        c0.4,0.2,0.8,1.3-0.1,1.6C1245.7,561,1244.5,561,1242.7,561.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43B48"),
                d:
                  "M1187,532c3.5-2.9,7.8-3.2,12-4C1197.8,531.4,1192,533.3,1187,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63844"),
                d:
                  "M1228.6,533.1c1.3-0.1,2.2,0.3,2.3,1.8c0.1,1.7-0.7,3.2-2.2,3.4c-2.3,0.4,0.2-3.8-2.7-3.3\n                        C1226.5,533.9,1227.3,533.2,1228.6,533.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1262.5,563c-2.3-0.4-4.6,0.2-7,0.3C1257.7,561.1,1259.9,560.4,1262.5,563z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M888,458c0.3-0.3,0.7-0.7,1-1c0.8,0,1.6,0.2,2,1c0.6,1.3,2.4,2.2,1,4c0.3,1.8,0.2,4.4,2.1,4.6\n                        c1.4,0.1,2.8-1.4,5-0.7c0.9,0.3-1.7-1.9-0.4-3.5c1.3,0.1,2.9,0,3.8,1.7c0.8,1.4,2.8,0.9,2.8,0.2c0-3.9,6.3-2.5,5.7-6.9\n                        c0-0.3,4.5-0.6,6.1-3.8c0.6,6.3,6.5,2.9,8.5,6c1.7,2.7,5.4,0.8,7.6,2.8c1.6-1,0-2.7,0.6-4c2.6,0.5,4.6,1.8,7.7-0.9\n                        c1.8-1.5,7.2-0.8,10.9-0.4c5.8,0.5,11.7-1.5,17.5,0.5c1.2,0.4,3.4-0.3,4.5-1.2c2.9-2.4,6.6-2.1,9-1.1c4.5,1.8,6.3,0.2,7.6-4.1\n                        c1.2,1.9-0.8,3.3,0.3,4.7c1.1,0.4,1.3-2.8,2.1-1.2c1.2,2.3,2.2,1.2,3.7,0.8c2.3-0.6,8.5-4.1,9.9-5.9c0.6-0.7,1.5-2.8,2.8-0.2\n                        c0.5,1.2,2.1,0.3,3.2,0.5c0.1,0.2,0.1,0.4,0.2,0.6c-1,1.3-0.1,1.4,1,1.7c2.2,0.5,3.7-0.7,5.2-2c0.2-0.1,0.4-0.2,0.6-0.3\n                        c1.8,0,1.8,1.6,2.4,2.6c0.7,1.1,1.6,2.6,3,1.9c3-1.5,6.7,3.2,9.2-1.2c4.4,4,10.9-0.8,15.3,3.6c5.1-2.6,11.3-1.2,13,3\n                        c-1.7,2.4-1.1,5-1.3,8.7c3.4-7.3,4.6-7.7,8.3-3.7v0c-3.7,4.2-8.8,5.1-14,6c-4.4,1.4-8.9,2.6-13.5,0.8c-1.6-0.6-3.6-0.8-4.9,0\n                        c-4.9,2.9-10,0.4-15,0.8c-2.2,0.2-2.8-3.6-5.7-3.3c-1,0.1-2.2-1-3.3-0.4c-5.1,2.9-11,3.1-16.4,4.8c-0.5,0.1-0.9,0.1-1.4,0.1\n                        c-3.5-0.3-6.8,0.6-10.1,1.6c-5.9,0.3-11.7,3-17.6-0.1c-5,3.3-10.4-1.6-15.6,1c-4.6,2.3-9.8,0.6-14.8,1.3\n                        c-1.9,0.3-4-2.7-6.5-0.3c-0.4,0.4-1.6-0.3-2.3-0.8c-1.5,0.5,1.3-2.6-1-1.3c-1.5,0.8-3.1,1.2-4.8,1.1c-4.4-0.1-9.1,1.4-13-2\n                        c-3.5,4.6-7.9,2.2-12.1,1.5c-1.7-0.2-2.9,0.5-4.1,1.3c-0.4,0.2-0.9,0.3-1.3,0.2c-0.7-0.1-0.7-1.2-1.6-1.2\n                        c0.2,0.3,0.2,0.6,0,0.9c-0.3,0.3-0.6,0.6-1,0.7c-0.5,0.1-1,0-1.4-0.3c-1.1-0.6-1.7-2.3-3.4-1.6\n                        C887.2,469.9,884.4,463.5,888,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1063,460c-3.5-4.6-8.5-2.7-13-3c1.5-4.9,4.6-5.9,8-2.4c0.6,0.6,1,1,1.4,0.3c2.4-4,5-2.2,7.8-0.4\n                        c1.3,0.9,2.5-0.6,3.8-0.5c1.1,1.5,0,2.2-1,3c-1,0.1-2.2,0.3-2.4,1.2C1066.9,461.3,1065,460.5,1063,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1025,434c0.1,1,0.2,2.4,1.3,2.2c1.3-0.3,1.5-1.9,1.7-3.2c2,0.9,3.8,2.4,7,0.5c-1.7,3.1-3.4,5-2.6,7.4\n                        c-5.7-0.2-9.9-1.8-9.5-8.4C1024.1,432.1,1024.1,433.8,1025,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M1013,450c0.3-0.7,0.7-1.3,1-2c3.8,1.7,5.7-0.4,6.8-4.4c2.2,3.1-1.2,4.4-0.8,6.4\n                        C1017.7,452.4,1015.3,454.2,1013,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1008,437c0-1,0-2,0-3c0.9,0.2,2.4-1,2.6,0.1C1010.8,435.5,1009.8,436.9,1008,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1103,439.4c0.9,0.3,1.3,1,1.2,1.8c-0.1,0.8-1,0.8-1.5,0.5c-0.5-0.3-1.1-0.9-1.1-1.4\n                        C1101.6,439.7,1102.3,439.3,1103,439.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1129,434c0.2-0.1-0.3,0.3-0.9,0.5c-0.5,0.1-0.9-0.4-0.7-0.8c0.2-0.5,0.7-1,1.2-1.3\n                        C1129.1,432.2,1129.5,432.6,1129,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1149,446c-2.3-0.4-3.6,1.3-5.7,2.8c0.5-3.4,3.3-3.8,5-5.2C1149.2,442.9,1149.4,443.2,1149,446\n                        L1149,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1070,457c0.3-1,0.7-2,1-3c0.7,0.2,2.9-2.5,2,1c-0.2,0.7-0.7,1.3-1,2C1071.3,457,1070.7,457,1070,457z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1149,446c2.2,3.8-0.5,3.8-3,4C1147.2,448.8,1148.5,447.7,1149,446L1149,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1103.2,448c-1,1.2-1,2.5-2.3,2.4c-0.4,0-1.1-0.8-1.1-1.3c-0.1-1.2,0.9-1,1.7-1.1\n                        C1102,448,1102.4,448,1103.2,448z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891825"),
                d:
                  "M996,473c3.2-0.7,5.9-5,9.6-1.1c2-2.5,4.9-3.5,7.7-4.5c1.6-0.6,7.5,1.7,8,3.4c0.3,0.8,0.7,1.3,1.3,1\n                        c3.5-1.7,7,1.2,10,0.5c2.9-0.7,6.1-3.2,8.7-2c5,2.3,9.8-0.1,14.7,0.8c-0.3,0.7-0.7,1.3-1,2c-2.1,1.3-4.5,1.8-7,2\n                        c-10.4,0.9-20.8,1.3-31.1,2.9c-0.8,0.1-1.7,0.2-2.5-0.2c-5-2.3-10.1-2.3-15.5-1.3C996.5,476.9,994.2,476.4,996,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M1070,465c1.8-1.3,0.5-2.7,0-4c1.6-0.5,3.3-1,5-1c0.5,0.3,1.1,0.9,1.7,0.9c1.7,0.2,3.5,0.7,3.6,2.6\n                        c0,2.1-2.6,3-3.6,2.7C1074.4,465.7,1071.5,468.6,1070,465L1070,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1075,460c-1.5,1-3.2,1.1-5,1C1071.6,460.1,1072.9,458.4,1075,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882935"),
                d:
                  "M1300,489c-7,0.5-14.1-1.2-21,1c-2.1,0-3.9,0.1-5.8,1.8c-2.5,2.3-5.3-1.3-8.3-1.1\n                        c-1.7,0.1-3.4-0.6-5.4,0.1c-3.7,1.3-7.1-2.2-10.9-1.1c-3.1,0.9-6.6-0.9-9.6,1.3c-0.5-0.5-1.2-0.5-1.8-0.6\n                        c0.6,0.2,1.3,0,1.8,0.6c-2.3,3.6-5.3,2.6-7.8,0.6c-1.1-0.9-2-2.1-3.3-1.5c-4.6,2-9.8-0.2-14.6,2.3c-2.6,1.3-6.3-0.3-9.8,0.3\n                        c-2.1,0.4-4.3,0.6-6.3,1.4c-2-1.8,3.1-2.4,0.5-3.7c-1.7-0.9-2.4,1.1-3.2,2.4c-2.3,3.6-7.1,2.6-8.7,1.6\n                        c-5.5-3.3-10.8-1.3-16.2-1.3c-2.1,0-4.3,1-5.6-1.7c-0.3-0.6-1.2-1.2-1.5-0.7c-2.4,4.7-7.6,0.2-10.5,3.1\n                        c-0.2,0.2-0.8,0.2-0.9,0c-4-4-8-0.1-12,0c-1.3,0-2.8,0.5-3.8-0.5c-1.8-1.8-3.5-1.5-5.3,0c-0.7,0.6-1.7,0.7-2.3,0.2\n                        c-3.6-2.9-6.3-1.3-8.8,1.5c-2.8,1.1-6.3,2.4-8.6,1.9c-4.6-1.1-9,2.7-13.4-0.5c-1.1-0.8-2.9-1-4.3-0.1\n                        c-1.9,1.2-4.1-0.1-5.2,0.2c-5.2,1.4-10.2,0.9-15.3,0.1c-2.6,4.7-6.4,0-9.4,1.1c-3.6,1.4-6.9,0.4-10.2-0.8\n                        c-2.5-0.9-4.8-1.6-6.3,1.6c-0.4,0.9-1.5,1.3-2.1,0.7c-3-2.7-7-1.5-10.3-2.8c-6.2-2.8-12.3-1.3-18.4,0.1\n                        c-0.4,0.2-0.9,0.3-1.4,0.4c-3.1-0.2-6.3-0.4-8.7-2.7c-1.5-1.4-3.4-1.3-5.1-1c-3.5,0.7-7.1,1.1-10.4,2.4\n                        c-1.8,0.7-3.8,2.3-5.2-0.1c-1.3-2.2,0.9-3.5,2.4-4.8c5.7-4.3,12.4-2.8,18.7-3.1c3.5-2.2,7.1-4,11.6-3.2\n                        c1.3,0.3,2.5-0.6,3.6-1.4c0.7,0,1.3,0,2,0c-0.4,1.4-0.8,2.8-1.5,4.9c2.9-2.8,5.7-4.2,8.9-2c1.2,0.8,2.5,0.5,3.3,0\n                        c5.4-3.4,10.6,0.3,15.9,0.5c2.5,0.1,4.1,1.1,6.8-1c2.7-2.1,7.3-0.5,11-0.6c6.6-0.2,13.3-0.2,19.6,2.8c1.9,0.9,0.3-3.5,3.4-2.1\n                        c2.9,1.4,6.6-0.5,10,0.9c1.1,0.4,2.1-1.3,2.8-2.5c3,0.5,5.7,1.5,9.1,0.4c3.9-1.3,8,0.9,11.9,1.6c2.1-0.3,1.3,1.2,1.4,2.2\n                        c0.4-1-0.4-2.2,0.6-3.2c0.3-0.3,0.7-0.7,1-1c2.5,2.6,4.8,4.4,9.1,2.2c2.4-1.2,6.3-1.9,9.4,0.3c2,1.4,3.6,0.6,5.8-0.5\n                        c2.8-1.4,6.5-3,9.7-0.1c1.4-1.3,2.2-4.3,5-2c1.2-0.4-0.4,2.8,1.9,1.4c1.5-0.9,3.2-0.3,4.8,0.3c0.9,0.3,2.1,1,2.9,0.6\n                        c5.8-2.7,11.7-0.2,17.6-0.7c0.3,0,0.6-0.3,0.8-0.5c2-0.1,4-0.2,6,0c0.3,0.3,0.7,0.7,1,1c1.4,1.7,3.3,2.4,5.4,1.9\n                        c7-1.6,14-1.6,21.1-0.3c1.3,0.2,2.2-0.5,3.2-1.1c0.9-0.4,1.5-1.4,2.6-1.3c10.9,1.1,21.9,1.9,32.8,1.2\n                        c2.8,4.2,6.7-0.4,10.4,1.3c3.2,1.4,8.3-0.3,12.5-0.5c2.4-0.1,5,1.6,7.6-0.8C1297.6,485.6,1299.7,486.9,1300,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842632"),
                d:
                  "M1161,486c-3.6-0.4-7-1.2-9.9,2.4c-1.1,1.3-4.1,1.3-5.9-0.4c-1.8-1.6-3.5-3.2-5.4-0.2\n                        c-0.7,1-1.3,0.8-1.7-0.2c-0.7-1.6-1-1.4-2.2-0.2c-3.1,3-7.8,1-8.8-3.5c4.8-0.3,9.5-0.1,14.2-2.4c1.1-0.5,4.9,2.1,7.8,2.4\n                        c3.5-0.2,7,0.8,10.6-0.8C1161.9,482.2,1160.4,485.1,1161,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d:
                  "M1194,485c-2.4,1.8-9.3,2.5-11.2,0.9c-1.2-1-2-0.9-2.8,0.3c-2.2,2.9-5,1.7-7.4,0.8\n                        c-1.4-0.6-3-1.4-4.2-0.7c-3.7,2.1-1.9-1.1-2.4-2.2c2.2-1.2,4.1-2.1,6.8-0.4c2.9,1.9,6.7,0.2,9.6-0.4c3.5-0.7,5.9-0.5,8.7,1.3\n                        C1191.9,485,1193,484.8,1194,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d: "M1200,485c-2,2-4,2-6,0C1196,481.7,1198,481.4,1200,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942330"),
                d:
                  "M1017,477c7.3-1.8,14.7-2.9,22.1-2.2c3,0.3,6.1-2.6,8.9,0.2c-10.4,2.7-20.6,5.9-31.3,7.1\n                        c-0.6,0.1-1.1,0.6-1.7,0.9c-2.9,2-6.4,2.1-9.6,3.2c-1.8,0.1-3.6,0.6-5.4,0.1c-1.3-1-1.9-2.3-1.6-4c0.8-1.8,2.3-2.1,4.1-2.1\n                        c2.9-0.1,5.8-0.2,8.2-2.5C1012.4,475.9,1015,478.9,1017,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81222E"),
                d:
                  "M1005,485c3.3-0.6,6.5-2.2,10-2c2,0,4,0,6,0c-0.9,1.6-2.2,3.5-4.2,2.8c-4.2-1.4-7,0.8-9.8,3.2\n                        C1005.7,488,1004.2,487.1,1005,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842632"),
                d:
                  "M1126,485c0,1,0,2,0,3.6c-0.9-1.2-1.5-1.9-2-2.6c0-1.7,0-3.3,0-5C1125.6,481.9,1124.4,484.1,1126,485z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1264.2,437.7c0.9-0.3,1.4-0.6,1.6-0.5c0.5,0.3,1,0.8,1.1,1.3c0.2,1-0.7,0.4-0.8,0.3\n                        C1265.5,438.6,1265.1,438.2,1264.2,437.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3F0F16"),
                d:
                  "M925.9,397.2c-0.1-0.5-0.2-0.9-0.3-1.4c-4.3,3.8-8.7-0.5-13.1-0.3c-4.8,0.2-10.1-0.9-15-3.5\n                        c1.1-1.4,2.5-0.8,3.6-1.1c0.3,0,0.5-0.1,0.8-0.1c8.3,0.9,16.6,1.6,24.9,0.1c3.7-0.6,7.1,0.2,10.6,1.6\n                        c7.3,2.9,14.8,4.5,22.5,1.7c2.8-1,6,0.1,8.5-2c2.8-0.9,5.6-0.4,8.4-0.6c2,0,4-0.1,6,0c1.5,0,2.9,0,4.4,0.1\n                        c2,0.1,4.3,0.1,4.8,2.4c0.4,2.2-1.9,2.7-3.4,3.5c-0.5,0.2-1,0.4-1.6,0.5c-8.8,0.5-17.4,2.3-25.8,5.2c-0.4,0.3-0.8,0.5-1.3,0.6\n                        c-9.3-0.1-18.6-1.2-27.8-2.7c-1.4-0.3-2.9-0.6-4.2-1.3C927,399.3,925.8,398.7,925.9,397.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d:
                  "M901.1,390.9c-0.1-0.3-0.1-0.6-0.2-0.9c3-2.8,7.5-0.2,10.5-2.9c5.9-1.1,11.9-0.4,17.8-0.7\n                        c1.4,0.1,2.8,0.2,4.1,0.5c2.3,1,4.6,1.3,7.1,1.2c1.6-0.1,3.5,0.1,2.8,2.6c-1.2,1.5-3,1.4-4.7,1.5c-3.8-0.7-7.6-1.1-11.5-0.9\n                        C918.3,392,909.6,392.8,901.1,390.9L901.1,390.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831A26"),
                d:
                  "M890,382c0.8-0.5,1-1.3,1-2.1c4-1.8,8.3-1.4,12.5-1c1.4,0.5,2.2,1.2,1.1,2.7c-0.7,0.9-0.9,2-0.8,3.1\n                        c0.2,4-3.6,5.7-8.2,3.7c-1.4-0.6-2.3-2-3.8-2.4C891.3,384.7,890.6,383.4,890,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C66C77"),
                d:
                  "M999.2,395.2c-9.1,8.5-20.3,12.4-32.3,14.7c-0.6-0.7-2.2,0.1-2.1-1.5c0.1-0.1,0.2-0.4,0.3-0.4\n                        c11.4-3.3,22.2-8,32.4-14.2c0.4-0.2,1-0.1,1.5,0.1C999.4,394.2,999.5,394.7,999.2,395.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2414D"),
                d:
                  "M891.9,386.1c3-0.2,5.3,2.2,8.6,2.1c3.1-0.1,2.5-1.6,2.5-3.3c0.4-0.3,0.8-0.4,1.2-0.4\n                        c2.5,0.8,4.5,2.5,6.8,3.5c-2.7,4.1-6.8,0.9-10.1,2C897.1,390.4,893.9,389.6,891.9,386.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0636A"),
                d:
                  "M964.2,410.2c-8.5,1.7-16.9,1.8-25.2-1.2c-0.2-1.2,0.7-1.5,1.5-1.8c7,0.7,14-0.1,21,0.9\n                        C962.7,408.4,963.7,409,964.2,410.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1064,395c2.2-1.4,2.3-1.4,1.1-3.2c-0.8-1.2,0.2-1.4,0.8-1.8c1.9-1.2,4-1.3,6.1-0.9\n                        c1.5,2.7-3.7,4.1-1,6.9C1068.7,395.6,1066.1,396.9,1064,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB545D"),
                d:
                  "M940.2,407.9c-0.4,0.4-0.8,0.7-1.1,1.1c-5.6-1.3-9.9-4.3-12.9-9.3c-0.5-0.8-1.5-1.6-0.2-2.5\n                        c0.7,0.6,1.4,1.2,2,1.8c3.4,2.1,6.4,4.8,10.1,6.3C939.1,405.8,940.2,406.4,940.2,407.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671419"),
                d:
                  "M1004,383c0,0.7,0,1.3,0,2c-2.2,1.7,1.4,4.3-1,6c-0.7-0.3-1.2-1-1.8-1.6c-0.8-0.7-1.6-1.3-2-2.4\n                        c-0.1-0.4-0.2-0.9-0.2-1.3c0-0.7,0.2-1.4,0.5-2C1000.7,381.5,1002.2,381,1004,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B424F"),
                d:
                  "M1002,389c0.3,0.7,0.7,1.3,1,2c-1.2,1.4-1.7,3.5-3.8,4.2c-0.1-0.4-0.1-0.8-0.2-1.2\n                        c0-0.6-0.5-1.2-0.4-1.8C999.2,390.5,999.5,388.5,1002,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2231"),
                d:
                  "M893,390.9c-3.6-0.9-4-3-4.7-6.3C890.5,386.8,892,388.2,893,390.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D47885"),
                d:
                  "M964.2,410.2c-0.7-0.4-1.5-0.8-2.2-1.1c0.9-0.9,1.9-0.9,2.9-0.1c0.7,0.3,1.4,0.6,2.1,0.9\n                        C966,409.9,965.1,410.1,964.2,410.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731525"),
                d:
                  "M1204,348c-0.2,1.1-0.5,2-1.9,1.5c-1.6-0.5-3.2-1.1-4.4,0.7c0.8,1.5,2.6,0.2,3.5,1.3\n                        c-0.2,2.1-2.5,0.9-3.4,2.2c1.1,0.2,2,0.3,3.3,0.5c-0.9,1.3-4.1,1.4-2.4,3.6c0.9,1.2,2.8,1.5,4.4,2.3c-0.6,2.1-3.2,1.2-4.1,2.8\n                        c-3.3-0.7-6.5-1.8-10-1c0-0.3,0-0.7,0-1c-2.7-3-7.3-2.4-10.4-5.6c4.1-1.9,3-8.6,8.7-9c0.4-0.1,0.9-0.2,1.3-0.2\n                        c1.6,0.3,2.9-0.6,4.4-1.1c3.1-0.6,6,0.8,9,0.8C1203.1,346.3,1204.2,346.5,1204,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1135.6,381.4c-0.5,1.2-1.5,1.6-2.7,1.6c-0.9-0.1-1.7-0.5-1.6-1.5c0.2-1.6,1.5-1.4,2.7-1.4\n                        C1134.8,380,1135.5,380.3,1135.6,381.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M984,439c-3.2,4.4-3.2,4.4-6,1c0.4-1-0.8-3.4,2.1-2C981.2,438.6,982.7,438.7,984,439z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M901.6,445.4c-0.5-5.1-0.5-5.1,3.9-3.7C904.2,443,901.1,442.2,901.6,445.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M892,462c0.6-1.6-2.2-2.3-1-4c1.4,0.1,2.6,0.6,2.8,2.2C894,461.5,893.1,461.9,892,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M996,439.8c1.3,2.6,2,4,3.2,6.3C995.6,445,996.1,442.9,996,439.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M978,440c-1.2,1.2-2.9,1.9-3.9,3.3C973.5,439.8,975.8,440,978,440z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M894,445c1.2,0.8,1.2,1.8,0.4,2.9c-0.5,0.7-1.3,1.1-2.1,0.6c-0.4-0.2-0.8-0.7-0.8-1.1\n                        c0-1.4,1.3-0.3,1.7-0.8C893.6,446.2,893.7,445.5,894,445L894,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M970.3,441.2c-0.2,0.3-0.5,1-1,1.2c-0.7,0.3-1.2-0.3-1.1-1c0-0.7,0.5-1.2,1.2-1.3\n                        C969.9,440.1,970.3,440.3,970.3,441.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1011.1,444.8c-1.6,0.2-3.1,0.2-3.9-1.6C1009.2,442.4,1009.6,444.7,1011.1,444.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M993.3,442.4c0.2,0.4,0.5,0.8,0.5,1.2c0,0.5-0.4,1-0.9,0.6c-0.3-0.2-0.4-0.8-0.5-1.3\n                        C992.4,442.8,992.9,442.6,993.3,442.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1134,361c1.2,2.8-1.1,1.2-1.9,1.6c-2,1-3.7,0-6-0.8c3.5,2.7,3.3,5.1,0,7.2c-1,0.6-2.5,3.4-3-0.4\n                        c0-0.1-0.2-0.3-0.3-0.4c-2.7-2.3-6.2,3.4-9.5-1.4c-1.2-1.8-7-0.6-10.4,1.2c-0.1,0.2-0.3,0.3-0.4,0.5c-2.6,2-5.3,0.7-8,0.3\n                        c-0.2,0.1-0.4,0.1-0.5,0.2c-3.6-1.6-6.5,1.3-9.7,1.6c-1,0.1-1.1,1.4-0.7,2.5c0.4,1.2,0.7,2.5-1,2.7c-1.5,0.2-2.6-0.9-2.4-2.5\n                        c0.2-1.6,0.5-3-1.6-3.6c-0.2,0.4-0.4,0.7-0.5,1.1c-0.5,1.5,2.1,3.6-0.2,4.3c-2.3,0.8-1.2-2.6-3.1-3.4c-2,1-1.4,3-0.8,5.3\n                        c-3.1-3-3.9-0.7-4.9,1c-1.5,1.6-3.4,1.2-5.1,0.9c-15.9-3.2-32-5-48-8c-2.6-0.5-5.4,0.1-7.8-1.5c-1.1-0.9-1.8-2.1-1.7-3.5\n                        c0.1-0.5,0.3-0.9,0.7-1.2c0.1-0.1,0.3-0.1,0.4-0.2s0.3-0.1,0.5-0.2c-0.8-0.9-2.1-0.7-2.9-1.5c-0.5-0.4-1.1-0.8-0.9-1.6\n                        c0.2-0.7,0.9-1.1,1.5-1.1c3.1-0.1,6.3-0.4,9.4-0.1c3,0.3,1.7,2.6,1.5,4.5c1.2-3.9,3.5-4.4,7.3-4.1c3.9,0.3,8.2-0.3,12.1,0.1\n                        c6.2,0.5,12.3-3.5,18.7,0.2c2.2,1.3,5.8-0.5,9,0.5c2,0.7,4,0.9,5.7,2.3c-2.5-2.2-1.2-3.6,1.2-4.1c3.5-0.6,7.1,0.1,10.3,1\n                        c3.3,1.1-0.1,2.5-0.5,3.8c1.9-2.8,4.7-3.6,8.2-4.1c4.4-0.6,9.2,0.5,13.3-2.4c1.6-1.2,4.5-0.7,6.3,0.3\n                        c4.5,2.2,7.9-0.3,11.6-2.1C1125.1,355.8,1130.3,356.4,1134,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F162A"),
                d:
                  "M1008,368c7.2,1.3,14.4,2.7,21.6,4c11.1,2,22.4,3,33.5,5.5c1.9,0.4,3.9,0.3,5.9,0.5c0.7,0,1.3,0,2,0\n                        c1.5,1.2,3.5-0.2,5,1c0.7,0.5,1.3,0.9,2.7,1.9c-2.2,0-3.7,0.2-5.2-0.1c-1.6-0.3-2.3-0.1-2.6,1.8c-0.6,3.8-3.7,4-7.5,4.4\n                        c0.9-1.1,1.5-1.6,1.9-2.3c0.8-1.3,3.7-0.1,3.2-2.3c-0.5-1.9-2.7-2.5-4.5-2.5c-5.8,0.1-11.6-0.9-17.3-1.8\n                        c-0.9-0.1-1.7-0.9-2.6-1.3c-4.1-1.6-8.3-3.1-12.7-1.2c-1.1,0.5-1.5-0.5-2.1-0.4c-2.4,0.3-4.9-2.4-7.5,0.8\n                        c-0.6,0.8-4.8,2.5-7.3-1.1c-1.3-1.9-5.2-1.8-7.8-2.9c-5.1-2.2-11-2-15.7-5.2C996.9,364.1,1002.5,365.6,1008,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1627"),
                d:
                  "M1188,347c-2.1,1.3-5.4,1.5-4.7,5.6c0.3,1.5-1.9,2.3-3.5,3c3.3,0,5.5,2.8,8.7,2.9\n                        c1.1,0,1.9,1.4,0.5,2.6c-1.7,0-3.3,0-5,0c-1.4,1-2.3,0.3-3-1c-7-0.3-14-0.7-21-1c-2.9-1.5-6.2,0.5-9.1-1.1\n                        c0.5-2.6,2.7-1.9,4.3-2c2.3-0.2,4.6,0,7-0.1c1.9,0,4.2,0.8,3.8-2.7c-0.1-0.9,1-2,1.9-2.1c5.5-0.4,8.3-6.8,14.2-6.3\n                        c1.7-0.4,3.4,0,5.1,0.5C1187.7,345.6,1188.3,346.1,1188,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D141D"),
                d:
                  "M1151,357c2.6,2.4,6.4-0.5,9,2c-3,0-6,0-9,0c-3.1,1.8-6.5,0.7-9.8,1c-2.1,0.2-4.4-0.6-6.3,1l-0.5,0\n                        l-0.5,0c-4.8-1.9-9.5-4.5-15-4c-0.6-0.8-0.6-1.6,0.2-2.4c2.5-1.5,5.3-0.7,7.9-1.1c3.2,0,6.5-0.2,9.7,0.4\n                        C1141.4,355.5,1146.6,354.5,1151,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1095,373c-0.3-1.3-0.7-2.7-1-4c3-0.2,6.2,1.2,9-1c1.2,0.6,2.4,1.4,2.7,2.7c0.2,1.3,2.1,3.1,0.3,3.9\n                        c-2.4,1-1.1-1.5-1.6-2.4c-0.3-0.7-1-0.8-1.7-0.5c-0.9,0.4-1.3,0.9-0.6,1.9c2.3,3.6-0.5,4.8-3.2,6.9c-0.2-2.6,3.6-4.1,0.8-6.4\n                        C1098.2,372.8,1097,371.6,1095,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1135,361c0.3-2.4,2.2-2,3.8-2c4.1,0,8.2,0,12.2,0c-0.2,2.1-1.8,1.9-3.3,2c-2,0.1-4.6-0.7-4.8,2.6\n                        c-1.4-0.9-1.9-3.4-4.4-2.7C1137.4,361.3,1136.2,361,1135,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1120"),
                d:
                  "M1181,360c1,0.3,2,0.7,3,1c-1.1,2.1-0.7,6.6-5.2,3.1c-0.7-0.5-2.2,0.1-2.3-1.2\n                        c-0.1-1.5,1.2-1.6,2.4-1.9C1179.6,360.8,1180.3,360.4,1181,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1107.8,368.1c1.5,0.7,3,1.1,2.3,3c-0.1,0.3-0.9,0.6-1.2,0.6C1106.7,371.1,1107.6,369.6,1107.8,368.1z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1076,379c-1.7-0.3-3.6,0.6-5-1c2,0,4,0.1,5.9-0.8c0.4-0.2,1.4-0.6,1.1,0.7c-0.1,0.4-0.6,0.8-0.9,1.1\n                        C1076.7,379,1076.3,379,1076,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1120"),
                d:
                  "M1150.6,376.3c1.2,0.1,0.7,1.2,0.9,1.8c0.4,1.1-0.1,1.5-1.1,1.1c-0.5-0.2-1.9,0.4-1.3-1.1\n                        C1149.4,377.3,1149.8,376.6,1150.6,376.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1095,372.7c0,1.9,0,3.6,0,5.2C1093.3,376.1,1094,374.5,1095,372.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1114,372.6c-0.1,0.8,0.1,1.6-0.8,1.6c-0.3,0-0.8-0.6-0.9-1c-0.2-0.7,0.2-1.3,1-1.4\n                        C1113.5,371.8,1113.8,372.4,1114,372.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1085.9,374c-0.2-0.8-0.5-1.3-0.4-1.5c0.2-0.3,0.7-0.5,1.1-0.7c0.1,0.3,0.4,0.6,0.3,0.9\n                        C1086.7,373,1086.4,373.3,1085.9,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("711425"),
                d:
                  "M1119,355c0,0.7,0,1.3,0,2c-0.7,5.9-4.9,0.9-7,2.2c-0.1,1.1,2.1,0.6,1.3,2.4c-2.8,0.2-4.2-3.5-7.4-2.8\n                        c-2.4,0.5-5.6-1.7-6.7,2.5c-0.2,0.8-1.5,0.4-2.2,0.1c-4.1-1.9-8.2,1.2-12.4,0.1c-1.2-0.3-2.1,1.9-3.1,3\n                        c-1.5,1.7-3.1,2.5-5.1,0.6c1-2,4.5-0.6,4.9-4.2c-4.3,2.1-8.4-2-12.7,0.2c0.7,2.8,2.7,0.5,3.9,1.4c-0.1,1.8-1.7,2.3-2.7,1.9\n                        c-2.5-0.9-5.5-1.1-7.4-2c-2.8-1.3-4.3-1.6-6.4,0.3c-0.5,0.5-1,0.8-1.7,0.2c-5-5-10-2.8-14.9,0.1c-0.6,0.3-1.2,0.7-1.8,0.2\n                        c-0.7-1.1,1.2-1.5,0.8-2.7c-0.5,0.1-0.9,0.2-1.4,0.3c-2.2,0.7-3.7,1.9-6.8,0.9c-2.6-0.9-6.5,0.4-9.8-0.5\n                        c-0.7-0.2-2.2,0.6-2,1.8c0.2,1.3,1.9,2.8-0.9,3.1c-0.7,0.1-1.4,1.1-2-0.3c-0.7-1.7-1.1-3.2,1.5-4.7c-4.5-0.8-8.2,0.8-12.2-0.5\n                        c0.7,1.7,2,1.6,2.9,1.9c1.6,0.6,3.9,1.2,2.8,3.1c-1.1,2-2.1-1.6-3.6-0.9l-0.1-0.3l-0.2,0.3l0.3,0c0.3,1,0.7,2,1,3\n                        c-5.7,0-11.3-1.6-17-1c-0.3-2.7-2.4-1.8-4-2c-4.1,1.9-7.6-0.8-11.3-1.6c-1.9-0.4-1.2-2.5,0.5-3.3c2.3-1,4.5-2.5,7-2.3\n                        c11.8,0.5,23.5-2.8,35-1.9c10.5,0.8,20.9,0.3,31-0.9c21.1-2.5,42.1-0.8,63.2-1.3C1114.6,353.6,1117.1,353.1,1119,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781620"),
                d:
                  "M1119,355c-12.7,0-25.3,0.5-38-0.1c-16.4-0.9-32.5,3.2-48.9,2.1c-4.5,4-9,0.1-13.5,0.1\n                        c-11.8,0.1-23.5,2.9-35.4,2.1c-2.5-0.2-5.1,1.7-7.7,3.1c4.3-0.4,7.5,2.6,11.5,2.7c0,0.9-0.3,1.6-1.1,2.1\n                        c-1.3,1.2-2.8,0.8-4.2,0.3c-7.7-2.7-15.7-3.9-23.7-5c-1.6-0.2-3.3-0.5-4-2.4c0-0.7,0-1.3,0-2c1.7-1.7,3.9-1.4,6-1.5\n                        c5.5-0.1,11.1,0.2,16.6-0.2c0.5-0.2,1.1-0.4,1.6-0.5c3.2-0.6,6.6,0.2,9.8-0.9c1.1-0.3,2.2-0.4,3.4-0.4\n                        c4.9-0.3,9.9,0.6,14.7-0.7c8.9-0.8,17.8-1.1,26.6-1.9c13-0.6,26-2.4,39.1-2.5c4.9,0,9.8-1.7,14.8-0.6c2.8,1,5.8,0.4,8.6,1.1\n                        c8.7,0.6,17.4,1.6,26,2.5c2.1,0.2,4.8-0.8,5.7,2.4C1124.3,355,1121.7,355,1119,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A03643"),
                d:
                  "M954,360c4.4,1.6,9.1,1.4,13.6,2.4c6.1,1.4,12.2,3.1,18.3,4.6c3.2,1.9,6.5,3.7,9.6,5.7\n                        c1.6,1,4.1,1.4,3.5,4.3c-2,0.7-3.4-0.6-5-1.5c-5.2-2.9-10.5-5.4-16.3-6.8c-10.2-3.3-20.6-4.8-31.4-3.5\n                        c-5.1,0.6-9.3,3.4-13.9,5.4c-0.6,0.3-1.3,0.7-1.9,1c-0.8,0.5-1.7,0.9-2.7,0.8c-2.4-2.2,0-3.1,1.2-4.4\n                        C936,361.2,945.3,361.6,954,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("74161F"),
                d:
                  "M978,367.9c7.9,1.1,14.3,5.4,21,9.2c0.8,1,0.7,2.8,3,2.5c2.8-0.4,2.7,1.5,2,3.4\n                        c-1.5-0.4-2.9-0.6-3.8,1c-0.2,0-0.4,0-0.6,0c-0.9-0.2-1.6-0.6-2.5-0.7c-1.4-0.2-2.7-0.5-3.9-1.3c-1.6-1-3.3-0.6-5-0.7\n                        c-4.6-1.1-9.3-0.8-14-1c-0.9,0-1.8-0.2-2.6-0.4c-4.2-1.1-8.4-0.2-12.6-0.6c-1.9-0.2-4.5,0.8-4.9-2.5c6-2.7,12.2-0.9,18.3-1.3\n                        c2.8,0.1,5.6,0.3,8.4,0.1c0.9,0,2.2,0,1.5-1.6C980.6,372.2,978.9,370.3,978,367.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1103.4,386c3.5,0.2,5.6,1.2,6.9,5.3C1107.6,389.1,1104.7,389.3,1103.4,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F162A"),
                d:
                  "M1044.9,377c-3.9,2.3-7.7-0.8-10,3C1036.6,377,1036.6,377,1044.9,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M888,458c-1.7,5.9,1,12.3-2,18c1.6,1.7,1.3,3.7,1.2,5.8c-0.2,0.9-0.5,1.7-1.2,2.3\n                        c-1.6-6.1-1.3-12.5-2.4-18.8c-0.4-2.7-0.4-5.5-0.6-8.3C885.2,454.7,886.9,454.7,888,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M932.6,433.3c0.6,2.5-1,2.9-2.1,3.6c-0.1,0.1-1-0.6-1-0.8C929.9,434.5,931.4,434.4,932.6,433.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M948.3,436.1c0.7,0,1.2,0.2,0.9,0.8c-0.1,0.3-0.6,0.7-1,0.8c-0.5,0.1-0.9-0.3-0.7-0.8\n                        C947.6,436.5,948,436.3,948.3,436.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M1285,377c0.1,1.9-0.5,3.9,1.4,5.5c0.7,0.6,2.2,1.2,1.7,2.6c-0.1,0.3-1.1,0.6-1.2,0.6\n                        c-0.8-1.1-2.9-0.7-3-2.7c-0.1-2.2-0.8-4-3-4.9C1282.3,377.7,1283.7,377.3,1285,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9A9E"),
                d:
                  "M368,345c-0.3,0-0.6,0-1,0c-1.8,0.4-4.3-1.2-5,2c-5.7,1.9-10.6,6-17,6.1c-0.3-0.4-0.3-0.9-0.2-1.4\n                        c3.5-3.9,9-4.2,12.9-7.4c5.3-1.8,9.4-6.1,15-7.5c2.1,1,1.4,2.1,0.2,3.4C371.3,341.8,369.2,343,368,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D98990"),
                d:
                  "M345,352.1c0,0.3,0,0.7,0,1c0,1.3-0.7,1.9-2,2c-0.9,0.7-0.4,3.5-2.9,2c0-0.7,0.1-1.4,0.1-2.1\n                        C341.3,353,341.9,350.5,345,352.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D38D94"),
                d:
                  "M340.1,357c1.5,0.1,1.8-1.4,2.9-2c-0.2,1.8,1.1,5.1-3,3C340,357.7,340.1,357.3,340.1,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("88182E"),
                d:
                  "M298,369c0.4-2.8-1.7-1.9-3-2c0.7-3.2,3.9-2.6,5.9-3.8c2.4-0.6,4.8-1.2,7.1-2\n                        c7.7-2.7,15.7-4.5,23.5-6.8c2.2-0.7,4.5-1.7,6.4,0.6c0,1.2,0.2,2.4-1.1,3.1c-5.4,4.3-11.9,6.8-17.5,10.9\n                        c-0.9,0.7-2.1,1-3.3,0.4c0.3-3.8,4.7-3.7,6.7-7.4C314.2,364.9,306.1,367.2,298,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B02234"),
                d:
                  "M345,352.1c-2.4-0.3-3.2,2-4.8,2.9c0-0.7-0.1-1.3-0.1-2c0.9-6.4,0.7-12.8-0.3-19.3\n                        c0.1-1.4,0.5-2.7,1.8-3.4c2.8-0.8,5.7-1.3,8.6-1.1c2.1,1.2,2.9,3,0.1,3.6c-3.8,0.9-3.7,3-3,5.9c0.1,0.5,0.2,1,0.3,1.5\n                        c1.1,5.4,1.1,5.4,6.9,4c1.3-0.3,2.6-0.3,3.6,0.9C354.4,348.5,349.3,349.4,345,352.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A71B37"),
                d:
                  "M337.9,354.9c-5.5-1.1-10,2.7-15.2,3.2c-5.1,0.5-9.6,3.5-14.7,3.9c-0.9,0.6-2,0.8-2.7,0.1\n                        c-1-0.9,0-1.7,0.7-2.4c2.3-2.2,3.4-5.4,6-7.3c6.4,3.7,12.7-0.3,19-0.4c2.3,0,2.8-2.6,3.9-4.1c0.8-1.1,1.7-2.1,3.1-0.6\n                        c0.4,0.4-1.4,2.8,1.1,1.1c0.5,0.1,0.9,0.3,1.3,0.6c0.7,1.7,0,2.9-1.3,3.9C338.7,353.7,338.3,354.3,337.9,354.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8858C"),
                d:
                  "M316.1,369.4c7.1-3.5,13.1-8.9,20.7-11.3c-1.3,2.2-1.2,5-3,6.9c-1.7,0-3.3-0.2-5,0.1\n                        c-2.4,0.4-5.2,0.5-3.8,4.4c0.2,0.5,0.3,3.1-1.8,3.2c-1.8,0.1-3.3,3.9-5.3,0.4c0-0.7,0-1.3,0-2c0.2,0,0.3,0,0.3,0\n                        c-0.1-0.4-0.2-0.4-0.3,0c-1.1,0.4-2.3,1.5-3.2-0.3C315.3,370.3,315.7,369.8,316.1,369.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1718"),
                d:
                  "M339.1,353c0.6-1.3,1.1-2.6,0.8-4.1c-2-2.9-0.6-6.3-1.7-9.3c-0.4-2-0.9-3.9-1-5.9\n                        c0.6-1.8-0.3-3.8,0.5-5.6c1-0.8,1.8-0.1,2.5,0.6c0.3,0.4,0.4,0.8,0.5,1.3c0,1.4-0.7,2.7,0.2,4.1c0.9,6.4,2.9,12.8-0.8,18.9\n                        C339.8,353,339.4,353,339.1,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96243D"),
                d:
                  "M270.9,355c0,4.4,0.8,8.7,2,13c-0.3,0.3-0.7,0.6-1,1c-2.3-3.2-2.1-7.1-2.9-10.7\n                        C268.8,356.9,268.8,355.3,270.9,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931A37"),
                d:
                  "M301,364c-2,1-4,2-6,3c-4.4,1.2-8.8,2.1-13,4l0,0c-1.2,0.9-2.8,0.3-4,1c-5-4.8-4.3-11.2-4.8-17.2\n                        c0-0.6,0.4-1.2-0.2-1.8c0.4-2.7,0.6-5.5,1.9-8c5.2-3.8,11.8-3.1,17.5-5.2c1.6-0.1,3.2-0.9,4.9-0.3c1,0.7,1.1,2.2,1.9,3\n                        c0,0.5-0.3,0.9-0.6,1.1c-5.9,1.2-11.5,3-16.9,5.7c-3.9,1.9-5.5,6.2-4.3,10.2c0.6,2,2.3,3.4,2,5.9c-0.1,1.4,2.1,0.6,3.1,0.4\n                        c5.2-0.9,10.1-3.2,15.4-3.7C299.3,362.4,300.4,362.8,301,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152E"),
                d:
                  "M278,372c1-1.5,2.6-0.9,4-1c-1.3,0.7-2.7,1.3-4,2C278,372.7,278,372.3,278,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B65761"),
                d:
                  "M519.9,378.1c0.8,0.9,1.5,1.8,2.3,2.7c-0.4,0.4-0.9,0.9-1.3,1.3c-2.4-1.4-3.6-3.8-5.1-6.1\n                        c-0.9-1.1-2.2-2.1-0.2-3.4c1.3,0,2.1,0.9,2.8,1.8c0.6,0.9,1.2,1.9,1.5,2.9C519.9,377.6,519.9,377.9,519.9,378.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861D29"),
                d:
                  "M515.9,373c-1.5,0.9-0.2,2-0.2,3.1c-1.6,0.3-3.2,0.6-4.7,0.9c-2.5,1.3-5.5-0.4-8,1c-0.7,0-1.3,0-2,0\n                        c-1.3,0-2.7,0-4-0.1c0.6-2.4,1.9-2.2,3.5-1c0-0.1,0-0.1,0-0.5c-3.6-0.7-7.3-1.3-10.5-3.4c-2.9,0.7-2.8-1.4-3-3.2\n                        c0.7-0.6,1.5-0.6,2.3-0.6c6.1,1.4,12.1,3.5,18.6,1.8c1.3-0.3,2.7-0.4,4-0.4c1.4,0,2.7,0.1,3.9,0.9\n                        C516.2,372,516.3,372.5,515.9,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1E30"),
                d:
                  "M490,373.1c4.2-0.9,7.2,2.5,11.8,2.7c-1.8,1.9-3.9,0.6-4.8,2.2c-0.3,0-0.7,0-1,0\n                        c-4.4-0.4-8.7,0.6-13,1c0.1-1.4,1-2.2,2.2-1.9C488.7,377.9,489.4,375.5,490,373.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d: "M503,378c2.5-2,5.3-0.6,8-1C508.5,379,505.7,377.6,503,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B11F2B"),
                d:
                  "M519,335c2.3-2,5.2-2.9,8-4c4.7-4,10.3-6.1,16.1-7.9c2-0.7,4-1.4,5.9-2c2.6-1.2,5.3-1.6,8.1-1.2\n                        c2.3,0.3,3.6,1.4,3.5,3.9c-0.2,1.9-1.5,3-3,3.7c-4.9,2.3-8.5,7-14.5,7c-1.8-3.4,1.6-4.6,2.9-6.7c2.7-1.5,6.1-1.1,8.5-3.7\n                        c-4.4-0.7-7.9,1.5-11.3,3.6c-6.4,4.3-13.4,7.2-20.9,9.1c-1.5,0.5-2.7,2.1-4.5,1.2C517,336.5,518,335.7,519,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971C2C"),
                d:
                  "M548,319c-5.7,1.8-11.3,4.4-17.4,1.1c-1.6-0.8-0.5,2.6-2.6,1.8c-5.1-1.9-10.8-1.7-15.8-0.9\n                        c-5,0.8-9.4-2.3-14.1-0.6c-1.9,0.7-2.2-1-3.3-1.5c-0.2-1.5,0.6-2.4,1.9-2.8c11.4,0,22.6,1.8,34,1.7c3.9-0.1,7.9,0,11.9,0.2\n                        C544.6,318.1,546.5,317.6,548,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F262F"),
                d:
                  "M548,319c-8.8,0-17.5-0.3-26.3,0.1c-8.7,0.3-17-3.5-25.7-2c-0.6,0.4-1,0.3-1.3-0.4\n                        c0-0.6,0.3-1,0.9-1.1c2.4,0.2,4.9-0.5,7.3,0.4c0.3,0,0.7,0,1,0c4.2,0,8.4,0.1,12.7,0.1c5.1,1.2,10.3-0.4,15.3,0.8\n                        c0.6,0,1.1,0.1,1.7,0.1c5.9,1,11.8,0.1,17.7,0.5c0.2,0.3,0.9,0.2,0.6,0.9c-0.2,0.6-0.7,0.4-1.1,0.5C550,319,549,319,548,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD2B36"),
                d:
                  "M551,319c0.3-0.3,0.7-0.6,1-0.9c1.7-1,3.3-0.9,5-0.1c0.7,0,1.3,0,2,0c5.3,1.1,10.6,1,16,0.9\n                        c0.4,0.3,0.8,0.5,1.2,0.8c-1.4,1.8-3.5,1.4-5.4,1.6c-1.7,0.2-3.6-0.1-5.1,1.1c-1.9,0.7-3.3,2.9-5.7,1.5\n                        c-0.8-2.2-1.9-3.6-4.7-3.1c-2.1,0.4-4.2,0.1-6.4,0.1C549.7,320.3,550.3,319.7,551,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72634"),
                d:
                  "M495,316.9c0.3,0,0.7,0.1,1,0.1c-0.4,0.6-0.7,1.3-1.1,1.9c-7.1-0.1-13.9,2.5-20.9,3\n                        c-1.1,0.6-2.2,0.9-3.2-0.3c0.2-2.3,2-2.2,3.6-2.6c1.8-0.4,3.7-0.7,4.4-2.9c0.8-0.2,1.6-0.2,2.4-0.2\n                        C485.7,316.7,490.5,315.3,495,316.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8212D"),
                d:
                  "M471,321c0.7,1.2,1.9,1,3,1c-1.3,0.7-2.7,1.3-4,2l0,0c-1.5,1.2-3.5-0.2-5,1c-1.3,0-2.6,0-3.9,0\n                        c-2.8,0.7-5.6,0.6-8.4,0.6c-1.8-1.4-1.2-3.2,0.4-3.2c5.9-0.1,11.6-2.5,17.5-2.1C470.7,320.5,470.9,320.8,471,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95191F"),
                d:
                  "M543.1,323c-5,3.4-10.6,5.5-16.1,7.9c0-0.7,0-1.3,0-2C532,326,536.5,321.8,543.1,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("460F1A"),
                d:
                  "M521,353.1c0.6-1.1,1.2-2.1,1.8-3.2c1-3,3.3-4,6.2-3.9c3-0.7,6.2-0.5,9-2c1.9-1.9,4.3-1.5,6.6-1.4\n                        c13.6,0.6,26.5,3.7,37.8,11.7c0.6,0.9,1.5,1.9,0.4,3c-5.8-0.3-11.6-0.8-17.3-1.8c-0.7-0.5-0.8-1-0.1-1.6\n                        c-5.2,0.1-9.1-4.6-14.7-3.7c-3.1,0.5-6.2-0.2-9.3-1.3c-3.8-1.4-7.5-0.4-11.7,1.5c4.9,1.6,9.6,1.8,14.2,2.4\n                        c1.3,0.2,4.6-1,3.4,2.8c-2,1.1-4.2,0.8-6.3,0.8c-5.1,0.1-10.1-1.3-15.2-1.2C524.1,355.3,522.3,354.6,521,353.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED8088"),
                d:
                  "M504,355c0.3,0.1,0.6,0.1,0.9-0.1c0.8-0.6,1.8-0.8,2.8-0.8c16.7,0.6,33.3,1.6,50,2.6\n                        c1.7,0.4,3.4,1,5.2,0.9c1.1,0,2.3-0.1,3.4-0.2c0.5,0,0.9,0,1.3,0.1c1.1,0.3,2.2,0.5,3.3,0.8c4.1,0.6,8.4-0.1,12.4,1.8\n                        c0.5,0.3,0.8,0.7,0.9,1.2c-0.6,1.5-2,1.6-3.4,1.8c-1.4,0.1-2.7,0-4.1-0.4c-3.2-0.9-6.5-0.4-9.7-0.5c-1.7,0-3.4-0.1-5.1-0.4\n                        c-2.8-0.9-5.7-0.6-8.5-0.5c-15.6,0.2-31.1-2.4-46.7-2.2c-2-0.3-3.7-0.9-3.3-3.5C503.6,355.5,503.8,355.3,504,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1A24"),
                d:
                  "M518,338c1.4-0.6,2.3-2.1,4-2c5.9-0.3,11.4-2.8,17.4-2.1c1,0.1,2,0.1,2.9,0.5c0.4,0.2,0.7,0.5,1,1\n                        c-0.7,3.2-3.8,3-6,4.1c-0.5,0.1-0.9,0-1.3-0.3c-3.3-0.8-5.8,2.2-9,2c-2.5,0.9-4.8,2-7,3.5c-4.4,3-9.9,2-14.8,3.4\n                        c-1.1,0.3-2.3,0.1-3.5,0.3c-0.5,0-0.9-0.2-1.1-0.7c0.3-3.9,3.8-4.2,6.3-5.3C510.5,340.7,514.5,339.9,518,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C2937"),
                d:
                  "M582,355c-13.6-7.8-28.2-11.9-44-11c-1.9-0.1-2.9-1.1-3-3c0.7-0.5,1.5-0.8,2.3-1\n                        c3.6-0.7,7.3-0.2,10.9-0.4c10.2,0.7,19.8,3.7,28.7,8.7C579.4,349.7,583.2,350.6,582,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121D"),
                d:
                  "M537,341c-0.7,0-1.3,0-2,0c0.3-0.7,0.7-1.3,1-2c0.3,0,0.6,0,1-0.1c2.6-1.3,5.3-1.8,8.1-1.4\n                        c6-0.4,11.8,0.3,17.4,2.4c10,3.2,19.7,6.9,27,14.9c1.3,1.4,2.7,2.8,0.4,4.5c-2.7,0.2-5.2,0-7-2.3c-0.3-0.7-0.7-1.3-1-2\n                        c-1.7-5.7-7.3-6.4-11.5-8.5c-6.7-3.3-14-5-21.5-5.5C545,340.2,541,340.1,537,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6A6F"),
                d:
                  "M567.1,357.9c-1,0.4-2,0.7-3.1,1.1c-1.5-1.2-3.5,0.2-5-0.9c-8.5-0.5-17.1-0.9-25.6-1.8\n                        c-4.9-0.5-9.8-0.2-14.7-0.2c-4.6,0-9.2,0.1-13.8-1c0.5-2.3,2.3-1.9,3.9-1.9c4.1,0,8.2,0,12.2,0c8.9,1,17.9,2.1,26.9,2\n                        c0.3-0.1,0.6-0.1,0.8-0.2c5.4-0.9,10.6,0.7,16,1.1C565.8,356.1,567,356.4,567.1,357.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92182A"),
                d:
                  "M501,348c4.9-0.9,9.4-3.5,14.6-3c1.3,0.1,2.7,0,3.5-1.2c2-2.8,4.8-3.1,7.9-2.8\n                        c-2.7,2.2-5.6,4.2-8.1,6.5c-3.9,3.6-8.3,2-12.6,1.7c-3.5-0.2-7-0.9-10.3,0.7C496.4,346.7,497.1,346.4,501,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D1B2B"),
                d:
                  "M518,338c0.8,1.8,1.2,2.4-1.7,2.9c-5.4,0.9-10.9,2.3-15.3,6.1c-1.5,0.9-3.2,0.4-4.8,0.4\n                        c-1.4-3.8,2-3.4,3.8-4.4c0.7-0.3,1.3-0.7,2-1c4.8-0.2,8-4.3,12.5-5.3c1.6-0.3,3-1.1,4.5-1.7C518.7,336,518.3,337,518,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7757B"),
                d:
                  "M489,354c3.9-1.1,7.9-0.9,11.9-1.1c1.6-0.1,3,0,3.1,2.2l0.1,0c-0.8,0.7-0.4,2.3-1.6,2.8\n                        c-4.8,1.1-9.5,1.3-14.1-1C487.1,355.4,488.1,354.7,489,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912C3A"),
                d:
                  "M529,346c-2.1,1.3-4.1,2.6-6.2,3.9c-2.6-0.7-0.8-2.1-0.2-2.8c2.5-2.9,5.9-4.1,9.8-4.9\n                        C531.8,344.3,529.4,344.2,529,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951C35"),
                d:
                  "M496,347c1.7,0,3.3,0,5,0c0,0.3,0,0.7,0,1c-1.8,0.4-4.3-1.2-5,2c-2.9-1.6-5.6,0.8-8.9,0.6\n                        c2-3.3,5-3.8,7.9-4.5C495.4,346.3,495.7,346.6,496,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M496,347c-0.3-0.3-0.7-0.6-1-1c-0.1-1.3,1.5-1.9,1.5-2.8c0-1.9,0.5-3.5,2.4-3.4\n                        c2.1,0.1-1.1,2.7,1.1,3.2C499,344.7,496.1,344.4,496,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A29"),
                d:
                  "M483,355c-1.8,0.1-3.5,0-5-1C480.1,352.1,482.2,350.5,483,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE5B68"),
                d:
                  "M489,354c-0.3,0.6-0.6,1.3-0.9,1.9c-0.4,0.6-0.9,0.7-1.6,0.6c-0.2-0.1-0.3-0.3-0.5-0.4\n                        c0.1-0.6,0.1-1.2,0.2-1.8C487.1,354.1,488.1,354,489,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B32532"),
                d:
                  "M452,325c3,0,6,0,9,0c-9,2-18,4-27.1,6c-0.3,0-0.6,0-0.9-0.1c-0.6-0.6-0.8-1.3-0.6-2.1\n                        c0.4-0.9,1-2.1,2-1.9c4.7,0.8,8.7-1.3,12.8-2.6C449,323.9,450.6,323.7,452,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911925"),
                d:
                  "M465,325c1.4-1.6,3.3-0.8,5-1C468.6,325.7,466.7,324.8,465,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C55861"),
                d:
                  "M432.8,329.1c0.1,0.6,0.2,1.2,0.3,1.8c-0.3,0.3-0.6,0.7-0.8,1c-1.4-3.4-2.8-6.7-4.1-10.1\n                        c0.7-0.6,1.3-1.1,2-1.7c1.6,1.8,1.5,4.2,2.5,6.3C432.9,327.3,432.9,328.2,432.8,329.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91202B"),
                d:
                  "M434,346.9c-0.5,0.4-0.9,0.8-1.4,1.3c-4.1-4.1-10-5.5-14-9.8c-1.3-1.5-2.5-2.5,0.3-3.4\n                        c3.9,0.7,3.9,0.7,9.2-1.1C431.1,337.8,432.2,342.5,434,346.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931A1D"),
                d:
                  "M428.2,333.9c-2.2,0.6-2,2.8-2.7,4.5c-2.1-1.5-4.8-1.3-6.5-3.4l0-0.1c2.4-2.8,5.2-4.4,9-2.9l0.2-0.1\n                        C428.1,332.6,428.2,333.3,428.2,333.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771720"),
                d:
                  "M502.9,356.8c0.2-0.7,0-1.7,1.1-1.9c0.2,1.3-0.3,3.1,2,3c0.5,0.7,0.2,1.5,0.4,2.2\n                        c1.4,0.7,3.6,0.9,3.6,2.8c-0.1,2.7-3.2,1.6-4.5,3c-0.5,0.5-1.1,1-1.6,1.5c-5.1,1.7-10.1,1.6-15-0.6c2.5-3.8,5.9-0.8,9.3-1.7\n                        c-3.3,0.2-6.1-1-8.9,0.5c-1.3,0.4-0.6,2.4-2.1,2.7c-3.9-2-6.2-4.8-5.2-9.5c0.1-2.6,1.8-3.2,4.1-3.1l0,0\n                        c3.9,0.3,6.9,3.8,11.2,3.1C499.4,358.8,501.4,358.5,502.9,356.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64A59"),
                d:
                  "M482,359.1c0.3,4.1,2.1,7.2,6,9c0.9,0,1.8,0.2,2.3,1.1c-0.1,0.8-0.3,1.3-1.2,1c-0.7-0.1-1.3-0.2-2-0.3\n                        C483.7,367,479.1,364.8,482,359.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ECB2B6"),
                d:
                  "M415,319c0.4,1.8,3.7,0.9,3.2,3.2c-0.5,2.1-2.4,2.6-4.5,2.9c-2.6,0.5-3.6,3.4-3.6,5.2\n                        c0,1.4,0.8,4.7,4,4.7c1.6,0.6,1.8,1.6,1,3c1.1,2,1.6,4.1,0.8,6.3c-2,2.2-3.1,0.9-3.7-1.2c-0.5-1.4-0.2-3-0.9-4.4\n                        c-0.6-1.3-1.6-2.7-3-1.3c-3.9,3.9-8.7,2.2-13.2,2.6c-3,0.4-6.1,0.8-9.1,1.2c-0.9,0.1-1.6,0.7-2.7-0.1c-2.7-2-2.8-1.9-3.2,1.9\n                        c-3.5,1.5-4.3-0.7-3.6-3.3c1-3.4,1.4-7.1,2.8-10.4c0.6-1.2,1.6-1.9,2.1-3.6c1.1-4.2,5.6-4.9,9.2-5.6c4.1-0.9,8.5-0.4,11.2-4.5\n                        c0.2-0.3,0.9,0,1.3,0.3C406.8,318,410.5,319.8,415,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B22C34"),
                d:
                  "M427.9,332c-3,1-6,2-9,2.9c-1.2-1.7-4.1-0.6-5-2.9c-1.4-1.9-0.1-2.7,1.2-3.9c2.3-2.2,5.9-2.3,7.9-5\n                        C426.3,325.2,426.6,328.9,427.9,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1ACB1"),
                d:
                  "M415,345c0-2.3,0-4.7,0-7c2.4,1.8,3.6,4.5,5,7l0,0C418.3,345.8,416.7,346.4,415,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA4AA"),
                d:
                  "M425,349c-2.4-0.3-2.8-2.6-4-4C424.1,344.6,425.4,345.9,425,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2B1B4"),
                d:
                  "M415,345c1.7,0.3,3.3-1.1,5,0c0.2,2.4-1.4,4.5,0.2,7.5c1.6,3.1-3.5,9.2-7.4,10.7\n                        c-1.4,0.5-2.9,1.2-1.5-1.3c-1.9-0.6-3.8-2.1-5.5-1.8c-4.2,0.7-6.2-0.8-6.8-4.8c-0.4-2.5-1.5-4.9-1.5-7.4c0-2.6,0.1-4.6-3.1-5\n                        c0.2-1,0.5-1.9,0.7-2.9c2.2-1.3,4.4-2,7-1.2c1.7,0.5,3.3-0.1,4.5-1.4c1-1,0.7-3.9,3.2-2.4c1.8,1.1,3.3,2.5,3.4,5.1\n                        C413.1,341.9,411.9,344.4,415,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E9AAAC"),
                d:
                  "M380,329c-0.6,3.6-0.4,7.4-2.5,10.8c-1.4,2.2,0.2,3.3,2.5,3.2c0,0.3,0,0.7,0,1\n                        c-2.3,1.1-4.6,1.8-6.8,0.1c-2.1-1.6-3.3,1.9-5.2,0.9c-0.9-3.7,3.1-3.7,4.5-5.8c0.7-1,0.8-1.4,0.4-2.3c0.1-0.2,0.2-0.4,0.2-0.6\n                        c2.2-2.7,1.8-6.4,3.5-9.3c1.7-1.1,2.6-0.3,3.3,1.3C380,328.5,380,328.8,380,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M388.8,249.1c1.4,0.1,2,0.4,2.1,1.1c0.1,0.8-0.3,1.3-1.1,0.9c-0.5-0.2-1-0.7-1.2-1.3\n                        C388.4,249.6,388.8,249.1,388.8,249.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M401.3,247.6c0.2-0.2,0.5-0.8,0.8-0.8c1-0.2,0.8,0.7,0.8,1.3c0,0.3,0.6,1-0.4,0.9\n                        C401.9,248.8,401.3,248.6,401.3,247.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M419.2,264.9c-0.2-0.3-0.5-0.6-0.8-0.9c0.4-0.2,0.7-0.5,1.1-0.5c0.2,0,0.6,0.3,0.7,0.6\n                        C420.4,264.8,419.9,264.9,419.2,264.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F49"),
                d: "M1588,316c2,0,4,0,6,0C1592,317.5,1590,317.5,1588,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F49"),
                d:
                  "M1660.9,320.8c0.6,0.4,1.4,0.6,1.5,1c0.3,0.9-0.5,1-1.2,1c-0.7,0-1.3-0.3-1.4-1.1\n                        C1659.8,321.5,1660.4,321.2,1660.9,320.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43740"),
                d:
                  "M1648.3,316.7c-1.3,0.4-2.1,0.4-2.7-0.2c-0.1-0.1-0.1-0.7,0.1-0.8\n                        C1646.8,315,1647.5,315.7,1648.3,316.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M774.1,559.4c-0.4-5,1.4-6.1,5.9-3.5C777.9,557.1,776,558.2,774.1,559.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M781.6,549.8c-2.1,0.6-1.9,5.8-6.1,2.5C777.5,551.1,778.6,548.7,781.6,549.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M751,561c-2.5-1.9-2.2-4.4-2-5.7C748,556.8,754.8,557.6,751,561L751,561z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921B2A"),
                d:
                  "M878,477c1.3,1,2.6,2,3.9,3c-1,1.3,0.1,3.7-2.1,4.5c-2.2,0.9-4.3,1.4-6.7,0.4\n                        c-5.6-2.3-11.5-1.1-17.1,0.1c-4.8,1-9.4,2.5-14.5,1.5c-2.3-0.5-4.8,0.4-7,0.7c-5.2,0.8-10.1,0.6-15.1-0.2\n                        c-0.3-0.1-0.8-0.1-1,0.1c-7.1,5.9-15.9,1.3-23.6,4.1c-4.8,1.7-9.9-0.9-15-0.1c-4,0.6-8,2.5-12.2,1.1c-9.5,0.3-19-0.1-28.3,2.9\n                        c-3.5,1.2-6.4-0.1-8.8-2.8c-0.4-0.9-0.5-1.9-0.1-2.9c0.3-0.4,0.6-0.7,1.1-0.7c0.5,0.5-0.1-0.2,0.4,0.1\n                        c0.8,0.5,0.9,1.4,1.4,2.1c-0.2-0.8-0.3-1.5,0-2.3c4.5-4,10.2-2.9,15.4-3.1c6.7-0.2,13.4-0.6,20.1,0.2c2.9,0.3,6.1-2.2,9.3-0.2\n                        c0,0,0.5-1.1,1-1.6c0.4-0.3,0.8-0.4,1.2-0.5c1.3,0.3,2.6,0.3,3.7-0.7c0.4-0.2,0.8-0.4,1.2-0.5c1.8-0.5,3.5,0.3,5.3,0.1\n                        c0.4-0.1,0.9-0.1,1.3-0.1c4.6,0.7,9,0.6,13.2-1.7c10.1,0.8,20.1-0.3,30.1-1.5c8.8-1.1,17.7-2.3,26.5-3.6\n                        C867.8,474.5,872.7,476,878,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811724"),
                d:
                  "M781,484c-0.3,0-0.7,0-1,0c-2.3,1.2-3.3-0.1-4-2c1.8-2.4,4-3.5,7-3c0.8-1,1.9-1,3-1\n                        c2.8,1.5,5.4,4.1,8.7,0.7c0.9-0.9,2.2-0.2,3.3,0.1c4,0.8,8.1,1.6,11.8-1c0.8-0.5,1-0.5,1.7,0.5c1.3,1.9,2.4,1.5,3.3-0.9\n                        c0.8-2.1,2.7-1.3,4.3-1.2c1.6,0.2,3.5,4.4,4.4-0.5c1.5,0.3,2.5,1.6,3.9,2.2c3,1.2,2.6,1,1.6-1.5c-0.3-0.9,0.4-1.1,2.2-0.8\n                        c0.9,0.2,1.6,2,2.9,0.2c1.3-1.8-1.9-1.6-1.2-3c5.8-0.3,11.5,1.3,17.1-0.8c2.6-1,5.5,0.7,8-1c1.8-0.6,4-0.4,5-2.6\n                        c0.5-1,0.3-3.2,2.2-2.6c1.6,0.5-0.2,3.1,1.6,4c-1.7,2-0.5,2.7,1.4,3.1c2.8,0.5,2.4-1.3,2.1-3c-0.1-0.7,1.2-0.9,0.5-2.1\n                        c-1.4-2.3,1.1-1.9,1.9-2.1c1.6-0.5,2.3,0.7,1.7,2c-0.7,1.8-0.5,4.2,0.8,4.4c3.4,0.6,2.2,3.1,2.6,4.9c-0.1,0.8-0.6,2.1-1.4,1.4\n                        c-2.3-2.1-6.5,0.4-8-3.4c-0.1-0.1-0.7-0.3-0.8-0.2c-4.5,4.8-10.4,1.8-15.6,3c-8.3,1.9-16.8,2.5-25.2,3.7\n                        c-6.3,0.9-12.7-0.3-19.1,1c-0.8,0.2-2-1-3-1.5c-4.5,2.1-9.5-0.2-14,2h0c-2,0.3-4-1.5-6,0l0,0C783.8,483.9,782.2,483.3,781,484\n                        z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M776,482c1.4,0.6,2.3,2.1,4,2c-0.6,1-1,2.1-0.5,4.1c-3.1-2.7-5.9-3.5-8.9-1c-0.5,0.4-1.6,0.6-2.3,0.4\n                        c-5.4-1.4-10.9-0.2-16.3-0.4c-5.3-0.2-10.4,0.7-15.6,0.5c-1.3,0-1.6,1-2.4,1.4c-0.7,0-1.3,0.7-2,0c-0.3,0-0.7,0-1,0\n                        c-5.8-0.4-11.8-1.6-17.3,1.2c-4.2,2.1-8.2,0.3-12.2,0.1c-4.7-0.2-9.1,1.3-13.8,1.1c-4.6-0.2-9,1.4-13.7,1.2\n                        c-3.4-0.2-4.6-1.4-2.7-4.7c2.3-2.4,5.2,0,7.6-1c2.7-0.6,4.3-2.6,5.9-5.5c0.6,2.8,0.5,3.7,3.9,3.8c3.9,0.2,8.1-2.6,11.9,0.3\n                        c0.7,0.5,1.3,0.3,1.7-0.8c1.4-3.6,6.1-1.9,6.4-1.3c1.4,3.7,4.8,1.8,5.6,1.3c5-3,10.3-0.4,15.4-1.2c3-0.4,6,0,8.8-1.8\n                        c0.6-0.4,1.7-0.8,2.3-0.6c7.6,3.6,15.9,0.4,23.7,2.3c0.8,0.2,4.2,1.4,3.2-2.3c-0.2-0.6,1.1-1.3,1.4-0.9\n                        C771.1,482.4,773.9,480.6,776,482z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M679,487c-1.9,3.6-4.7,0.5-7,1c-2.4,0.4-4.2,4.6-7.2,1c-0.3-0.4-0.2,0.3-0.2,0.5\n                        c-0.4,3.5-1.9,4-4.9,2.4c-1.6-0.9-3.6-0.2-4.9,1.3c-3.7,4.1-9.1,4-13.8,5.6c-1.1,0.4-2.3-0.3-2.3-1.9c0-3.3-2.4-6.6,0.3-9.8\n                        c1.4-0.7,3-1.3,4.3-2.3c1.8-1.5,3.7-1.3,4.6,0.4c1.7,3.2,4.7,1.4,6.9,2.2c0.6,0.2,2.4-0.6,1.5-1.8c-2.4-3.3,0.6-4.7,2.3-5.7\n                        c2.1-1.3,4.6,0.4,6.9,0.8c0.2,0,0.3,1.7,1,1c3.2-3.4,4-2,4,1.7c0,0,0.9,0.2,1.4,0.1c1.5-0.2,0.6-1.1,0.5-1.8\n                        c-0.5-5.2-0.5-5.2,4.1-5.6c0.3,1.7-2.1,1.6-2,3.3c2.3,1.9,3.1-1.5,5.5-1.6C678.2,480.8,674.7,483.7,679,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M639,487c0,3.3,0,6.7,0,10c-0.3,0.4-0.7,0.4-1,0c-0.3-0.9-0.4-3.7-1.5-2c-3,4.5-2.2-1.4-3.5-1\n                        c-0.4-1.9,1.9-3,1-5.7C633.3,486,637.3,487.7,639,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02834"),
                d:
                  "M880,484c1.5-0.9-0.7-3.6,1.9-4c0.3,0.7,0.6,1.3,1,2c-1,4.1,1.7,7.9,1.1,12c-2.6,0.2-1.7-3.3-3.8-3.6\n                        c-0.9-0.4-1.6-1-1.9-1.9C877.9,486.7,878.5,485.2,880,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89172D"),
                d:
                  "M858,471c-0.1,1.5-0.3,3.9-2.2,2.6c-2-1.3-4.1-0.3-5.8-1.6C852.7,471.6,854.9,467.8,858,471z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M786,478c-0.7,1.2-1.9,1-3,1c0.2-1-0.6-2.5,0.5-2.9C784,475.9,785.2,477.3,786,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M850.1,456.5c-4,1.7-4-0.3-4.1-3.1C847.2,454.9,847.8,456.2,850.1,456.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M728.6,476.5c-0.7,0.4-1.2,0.8-1.7,0.8c-0.6,0.1-0.8-0.6-0.5-0.9c0.3-0.4,0-1.5,1-1.1\n                        C727.8,475.4,728.1,475.9,728.6,476.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M731.6,475.7c-0.2-0.2-0.7-0.4-0.8-0.8c-0.2-0.6,0.3-0.8,0.8-0.7c0.4,0.1,0.9,0.4,1,0.7\n                        C732.7,475.4,732.4,475.7,731.6,475.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M731,466.7c0.2,0.4,0.6,0.8,0.6,1.2c0,0.6-0.5,0.9-1,0.6c-0.3-0.2-0.4-0.8-0.4-1.3\n                        C730.2,467.1,730.6,466.9,731,466.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993541"),
                d:
                  "M888.1,529.9c-1.1,3.2,2.1,7.5-3,9.9c-2,0.9-3.9,1-5,0.2c-4.7-3.1-10.3-0.9-15.1-3\n                        c-4.7-2.5-9.5-4.6-14.9-1.7c-1.1,0.6-1.9-0.9-2.7-1.7c-2.2-2-4.6-3.9-7.8-1.9c-0.4,0.3-1,0.5-1.4,0.2c-4.5-4-9.5-1.9-14.3-0.8\n                        c-2.4,0.5-2.9-0.8-3.5-2.4c-0.1-1.7,1-2.8,2.4-2.6c4.6,0.6,8.7-1.7,13.2-1.3c1.7,0.2,2.9-0.5,4-1.5c1.5-1.3,3.4-2.1,5.1-1.6\n                        c6.8,1.9,12.5-2.2,18.6-3.7c5-1.2,9.9,0.8,14.8-0.4c0.8-0.2,2.5,1.5,2-1.2c-0.2-1.2,1-2.4,1.7-3.5c1.1-1.1,1.6-3.1,3.8-2.9\n                        C887.3,516.6,887.4,523.2,888.1,529.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3945"),
                d:
                  "M886,510c-1.2,0.8-1.4,2.6-2.9,3c-4.3,2.9-9.5,2.8-14.3,3.9c-16.5,3.6-33.2,5.9-49.6,9.8\n                        c-5.7,1.4-11.8,1.5-17.6,2.8c-0.8,0.2-1.6,0.2-2.3-0.2c-0.7-0.6-0.8-1.3-0.6-2.1c0.4-1.3,1.3-2.2,2.4-2.9\n                        c3.5-1.6,7-2.4,11-2.2c5.2,0.2,10.6-0.5,14.3-5.2c0.9-1.1,2.2-2.1,3.4-1.7c8.1,2.8,15.3-2.3,23.1-2.4c4.4,0,8.5-0.8,12.4-3\n                        c3.8-2.1,8.1-1.5,12.1-1.4c3,0.1,4.3-1,5.1-3.5c0.6-1,1-2.3,2.7-2C885.6,505.3,886.2,507.6,886,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E303B"),
                d:
                  "M897,539c0.5,0.1,1.1,0,1.5,0.3c5.2,4.1,10.4,1.5,16,0.7c4.5-0.7,9.7,0.6,14,2.5\n                        c4.8,2.1,9.8,2,14.5,3.5c7.4,0.3,14.7,1,21.9,2.4c2.7,0.5,5.5-0.4,8.3,0.1c1.5,0.2,2.5,0.6,3,2.1c0.1,2.2-1.4,2.6-2.8,1.9\n                        c-2.4-1.1-5-0.7-7.4-1.4c-10.8-1.5-21.7-1.7-32.4-2.9c-9.3-1-18.7-1.2-27.9-3.6c-4.3-1.1-9-1.1-13.4,0.4\n                        c-0.1-1.6-0.1-3.3-0.2-4.9C893.9,540.6,895.6,540.6,897,539z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F3843"),
                d:
                  "M897,539c-1.2,2.3-2.3,5.3-4.9,1c-1.4-9.6-2.8-19.3-3.1-29c3.9,0.9,3.6,5.3,3.4,6.9\n                        c-0.3,2.7,1.5,5.5-0.2,8.1c-0.4,0.6-0.9,1.7,1.2,2c2.2,0.4,1.3,3.6,1.6,5.6C895.3,535.6,893.7,538.2,897,539z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33841"),
                d:
                  "M885,503c-0.7,0.7-1.3,1.3-2,2c-2.9,1.1-2.9-1.2-3.2-2.9c-0.4-1.9-0.1-3.9-0.2-5.9\n                        c0-2.2-0.3-4.4,1.5-6.2c3.5-0.5,0.9,3.5,3,4C884.9,497,885.2,500,885,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972B38"),
                d:
                  "M886,484c0-0.7,0.1-1.3,0.1-2c2.9-5,3.1,1.2,4.8,1.1c0.3,0.3,0.6,0.7,0.8,1.1c0.4,0.9,0.5,1.8,0.5,2.7\n                        c0,0.9,0,1.8,0,2.7c0,0.5-0.1,0.9-0.3,1.3c-0.2,0.4-0.5,0.8-0.8,1c-1.6,0.7-2.2-3.2-4.1-0.9C885.3,488.9,886.2,486.4,886,484z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972334"),
                d:
                  "M677,526c-1.1-1.7-2-2.7-4.6-2.5c-4.2,0.3-8.6,0.2-12.4-2.5c0.4-1.5,1-2.8,2.5-3.6\n                        c3-0.3,5.7,0,8.5,1.4c3.3,1.7,7.1,0.3,10.6,1c1,0.2,1.8,0.7,2.5,1.3c0.8,1.9,1.8,0.6,2.8,0.1c2.4-0.2,4.6,0,6.7,1.3\n                        c2.3,1.4,5.1,1.7,7.7,1.8c6.1,0.1,12.1,1.9,18.2,0.2c3.6,4.2,9,2.7,13.4,4.4c1.2,0.7,2.2,1.4,1.1,2.9\n                        c-12.3-1.1-24.6-1.8-36.9-3.7C690.4,527.3,683.6,527.8,677,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A2938"),
                d:
                  "M734,532c0-1.3-0.7-2-2-2c2-4.2,5.8-2.4,8.6-1.9c5.7,1.1,11.4,1.8,17.2,1.5c9.1-0.8,18.1,0.7,27.2,0.1\n                        c1.5-0.1,3,0,4.1,1.3c-4.4,2.3-9.6,1-14,3c-1.1,0-2.3-0.1-3,1c-10.8,0.1-21.6-1.1-32.2-2.8C737.9,531.9,735.9,532.1,734,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M652.7,525.3c2.7,0.2,3.8,0.8,4.8,2.1C655.1,528.8,654.3,527.3,652.7,525.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721424"),
                d:
                  "M733.5,536.4c-0.9,1.8-2.1,1.7-3.5,1.4C730.8,536.4,732,536.5,733.5,536.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d: "M651,523c2,0.3,4.2-0.8,6,1C655,523.7,652.8,524.8,651,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972230"),
                d:
                  "M662,518c0,1.5,0,2.9-2,3c-1.4,0-3.3,1.8-4-1.3c-0.2-1-1.5-1.9-2.9-1.2c-2,0.9-3.4,0.4-4.9-1.1\n                        c-2.5-2.6-5.4,0.3-8.1-0.5c-0.5-1.6,2.2-1.2,1.8-2.9c-1.6,0-3.3,0-4.9,0c0.9-1.4-0.3-2.4-0.6-3.6c-0.5-2-1.3-4.9,2.8-3\n                        c2,0.9,3.4-0.8,5-1.6c2.6-1.2,2.9,0.1,2.8,2.1c2.8,0.4,5.7-4.1,9,0.8c-0.6-3.7-2.3-7.4,3-7.8c1.8-1.8,4.1-2.5,6.6-3.1\n                        c3.9-0.8,7.4-2.9,11.4-3.7c2.1-0.5,4.2-1.3,6.3-0.4c1.7,0.8,3.1,1,4.5-0.5c0.6-0.7,1.6-0.6,2.4-0.4c5.2,1.5,10.2-0.3,15.3-1\n                        c2.7-0.4,5.2-0.6,7.8,0.4c2.4,1,4.8,0.6,7.3-0.2c3.4-1,5.8,0.3,6.6,3.9c-2.7,1.4-5,4.7-8.5,1.6c-1.8,3-5.1,2.7-7.6,2.7\n                        c-7.9,0.1-15.3,3.5-23.3,3.3c-1.5,0-3.3,0.4-4.4,1.6c-4.3,4.6-4.9,4.6-8.4-0.2c-0.5,2.2,3,4,0.9,5.9c-2.3,2.1-4.2-0.9-6.4-1.2\n                        c-1.4,1.3,1.5,3.8-1.2,4.6c-1.6,0.5-2.8-0.6-3.9-1.6c-0.4-0.3-1-1-1.1-0.9c-2.6,3.1-6.8-0.8-9.4,2.3c1.3,2,3.2,2.5,5.5,2.2\n                        C660.4,516.2,662,515.8,662,518z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M727,496c-2.1-2.6-4.1-4.5-7.8-2c-1.3,0.9-4.1,0.7-5.7-0.2c-3.8-2.1-7.3-0.5-10.9-0.2\n                        c-3.6,0.3-7,2.3-10.8,0.8c-0.8-0.3-3.9-2.2-4.2,1.6c0,0.6-2.9,0.3-4-0.6c-2.3-1.8-4.2-0.9-6.1,0.3c-1.5,0.9-2.8,1.7-4.6,0.7\n                        c-0.5-0.3-1.7-0.3-1.8-0.1c-2.3,5.9-8.5,1.8-12,4.7c-1.7-2.5-3.4-4.7-5.3-0.1c-0.2,0.4-0.7,0.9-1.1,0.9\n                        c-5.6-0.4-10.5,2.9-16,2.9c-0.6,0-1.8-0.4-1.8-0.4c-0.6,2.1-1.6,3.1-3.1,0.8c-1.7-2.6,1.8-1.6,2.5-3.1c-1.4,0-2.4,0-3.3,0\n                        c1.2-3.3,5.7-1.9,7-5c0.3,0,0.7,0,1,0c3.7,0.3,7.1-0.7,10.5-1.8c3.1-1.1,4.7-4.5,8.2-4.9c1.9-0.2,4-0.8,4.8,2.8\n                        c0.8-2.7,1.4-4.4,1.9-6.2c1.2,2,2.2,4.7,4.8,1.2c0.3-0.4,1.8,0,2.8,0c-0.1,1.5-2,4.1,2,3.2c2.6-0.6,5.9,1.8,7.9-1.8\n                        c2.6,1.7,5.2,0.3,7.8,0.3c6.1,0.1,12.2-2.2,18.4,0.2c3.6,1.4,6.5-2.1,10.2-2.4c3.7-0.3,7.4,0.9,11.1-0.6\n                        c1.9-0.8,1.3,1.2,1.5,2.1c0,1,0,2,0,3c0,0.1-3.7,5-3.9,5.2c-0.3-0.2-0.4-0.5-0.3-0.8C726.8,496.1,726.9,496,727,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M637.6,513.8c-2.1,1.3-3.3,1.4-4.7,0.7C634.3,513.5,635.7,514.3,637.6,513.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D1323"),
                d:
                  "M590,359c0.1-4.2-3.4-5.9-6-7.8c-6.4-4.5-13.7-7.4-21-10.2c-0.8-2.5,0.6-3.2,2.4-2.3\n                        c5.7,2.8,13.3,1,17.7,7c0.3,0.4,1.1,0.5,1.4,0.3c4-3.6,8.3-1.2,12.5-0.6c1.5,0.2,2.8-0.4,4.2-0.9c5.5-2.3,8.7-0.1,9,5.8\n                        c0,0.9,0.4,0.3,0.5,0.2c0.9-0.4,2,1.8,2.8-0.3c0.8-2,2-1.9,3.3-0.4c0.2,0.2,0,1.1,1.1,0.4c3.7-2.3,4-2.1,6.6,2.1\n                        c0.3,0.9,0.6,1.8,0.4,2.7c0,7.6-0.4,7.7-7.7,8.1c-8.2,0.4-16.4,1.3-24.6,2c-1.8,0.2-2.9,1.4-3.7,2.9c-0.6,0.4-1.2,0.7-1.8,1.1\n                        c-1.2,0.6-2.3,1.1-3.6,0.6c-0.4-0.2-0.7-0.6-0.9-1c0.8-2.5,5-2.1,4.7-5.5c0-0.4,0.2-0.8,0.3-1.2\n                        C588.5,360.9,589.5,360.1,590,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1B2C"),
                d:
                  "M670,365c-2.3,0-4.7,0-7,0c-3-0.3-6.2,0.9-9-1.3c-0.8-0.6-1.4-0.1-2.1,0.4c-3,2.2-7.1,0.2-10.2,2.7\n                        c-0.9,0.8-2.6-0.1-2.7-1.9c-2.3-4.2-1.9-4.8,3.9-5.4c7.2-1.3,14.5-0.8,21.7-1.5c1.5,0.4,2.6,2,4.5,1.5\n                        c0.2-0.1,0.5,0.1,0.6-0.2c-0.5-0.1-0.8-0.4-0.9-1c0.4-1.1,1.4-1.4,2.4-1.6c2.1-0.2,4.2-0.4,6.3,0.5c1.7,3.5,4.8,2.9,7.6,2.4\n                        c3.8-0.7,7.6,0,11.3,0.2c1.4,0.1,3.7,0.3,2,2.8c-6,2.9-12.4,0.8-18.6,1.7C676.6,364.9,673.2,363.9,670,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921929"),
                d:
                  "M643,361c-2.8-0.1-5.8-0.5-4,4c-1.4,0-2.4,0.2-3.2,1.7c-1,2.1-3.1,1.2-3.3-0.2c-0.5-4.3-2.7-1.2-4-1.1\n                        c-1.3,0.1-2.1,2.4-3.8,1c-0.5-0.5-1.1-1.8-0.9-2.1c1.1-1.6,3-0.7,6.2-1c-6-1.4-2.6-6-5-8.3c-0.8-0.4-1-1.2-1-2\n                        c-0.3-0.3-0.3-0.5-0.3-0.8c0.1-0.3,0.1-0.4,0.2-0.4c0.9-0.9,2-1.3,3.3-1.3c2.2,1,4.3,1.6,6.4-0.2c1.6-0.8,2.8-2.4,4.8-2.5\n                        c1.4,0.3,1.9,1.4,2.5,2.6C641.8,353.8,644.7,356.9,643,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781522"),
                d:
                  "M670,365c5.2-2.3,10.9-0.6,16.4-1.7c4-0.8,8.4-0.9,12.6-1.3c1.4-1.4,3.2-1.4,5-1.4\n                        c3.2,0.1,6.4,0.4,9.4-0.7c4.5-0.7,8.9-0.4,13.4-0.3c14.9,0.3,29.9-0.5,44.8,0.3c1.7,0.1,3.4,0.1,4.8,1.1\n                        c2.1,1.5,2.5,3.1-0.2,4.4c-0.5,0.3-1,0.4-1.5,0.5c-3.9-0.8-7.8-1.1-11.4,1c-5.4,0-10.7,2.8-16.2,1.1c-5.4-0.7-10.6,1.1-16,1\n                        c0.4-3-1.8-2.6-3.5-2.5c-10.3,0.5-20.6-1-30.9-0.1c-3.2,0.3-6.7,0.8-9.7-1.4C681.3,365,675.7,365,670,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701424"),
                d:
                  "M687,365c14.3,0,28.7,0,43,0c1.6,0,4.2-1.2,4.6,1.4c0.4,2.3-2.9,0.9-3.6,2.5c-3.1-0.5-6,0.8-9,1\n                        c-2.1-1.5-4.2-1.7-6.9-1.4c-2.8,0.4-6.4,2.2-8.9-1.5c-0.4-0.6-2.9-0.6-3.8,0c-3.6,2.7-7.6,0.2-11.4,1.2\n                        C688.7,369,687.6,367,687,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821721"),
                d:
                  "M857,360c3,0,6,0,9,0c-1.1,3.7-4.1,3.9-7.3,4c-11.3,0.2-22.5,1.6-33.8,2.1c-6,0.3-12,0.7-18,0.9\n                        c-3.4,0-6.8,0.2-10-1c1.2-3.5,4.3-1.9,6.7-2.4c2.8-0.1,5.6,0.4,8.4-0.6c0.8-0.2,1.7-0.3,2.6-0.4\n                        C828.7,361.6,842.9,361,857,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D32"),
                d:
                  "M747,368c5.8,0.6,11.2-2.2,17-2c3.2-1.9,6.7-0.1,10-1c0.3,0,0.7,0,1,0c4.2-1,8.2-2.6,12.6-1.5\n                        c0,2.4,2.6,1.2,3.4,2.6c-4.4,2.1-9.4,1.5-13.9,1.7c-9.7,0.3-19.4,1.2-29.1,1.3C747.7,368.7,747.3,368.4,747,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B2038"),
                d:
                  "M791,366c-1-0.7-4.1,1.7-3-2c6-2.1,12.1-3.2,18.4-1.7c0.8,1.6,0.8,1.6-2.4,2.7c-2.3,0.4-4.9-0.9-7,1\n                        C795,366,793,366,791,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("491016"),
                d:
                  "M974,377c-6.7,0-13.5,0.1-20.2,0.1c-1,0.9-2.2,0.9-3.4,0.7c-3.9-0.8-7.9-0.2-11.8-0.4\n                        c-1.9-0.1-4,0.3-5.4-1.6c-1.3-1.7-4.7,0.6-5.1-2.8c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3c0.6-0.4,1.3-0.8,1.9-1.1\n                        c1.3,0,2.8,1.5,3.7-0.7c0.5-0.6,1.1-0.8,1.8-0.8c4.5,0.3,8.9,0.7,13.2-1.3c2.4-1.1,5.2-0.4,7.3,0.4c4.7,1.7,10.2,0,14.5,3.4\n                        C972.1,373.3,974.9,373.9,974,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1727"),
                d:
                  "M928.1,372.1c0,0.3,0,0.6,0,0.9c-9.4-3.6-19.8-2-29-6c2.1-0.4,4.5,1,6.2-1.7c0.6-0.9,2,0.1,3,0.7\n                        c2.6,1.5,2.6,1.3,6-0.9c0.1-0.1,0.4-0.2,0.5-0.1c4.5,2.5,10.3-1.5,14.4,3C929.6,369.6,926.7,370.3,928.1,372.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M903.3,376.2c2.2-0.1,4.4-0.1,6.7-0.2c5.7-0.7,11.3-0.8,17,0.1c0.9,0,1.8,0.1,2.7,0.1\n                        c1.1,0.7,2.7-0.2,3.6,1.1c0,0.6-0.2,1-0.7,1.3c-4.5,1.3-9.1,0.9-13.6,0.2c-1.9-0.3-3.6-0.5-5.1,0.7c-1.3,0.9-2.7,1.5-4.3,1\n                        c-0.4-0.2-0.7-0.5-0.9-1c0.3-1.5-0.7-1.4-1.7-1.4c-1.4,0-2.9,0-4.1-1.1C902.6,376.6,902.8,376.3,903.3,376.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E88386"),
                d:
                  "M902.8,376.8c2.1,0.1,4.3,0.1,6.4,0.2c0.7,0,2-0.4,1.9,0.7c0,1.2-1.4,1.1-2.3,1.4\n                        c-5.2,0.8-10.5,0.5-15.7-0.2c-0.1,0-0.1-0.6-0.1-0.9c1.3-0.4,2.6-0.7,4-1.1C898.9,376.2,900.8,376.4,902.8,376.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3A41"),
                d:
                  "M893,378c5.1,2,10.5,0.5,15.8,1.1c0.1,0.4,0.1,0.7,0.2,1.1c0.2,0.5,0.1,0.9-0.3,1.2\n                        c-1.6,0.5-2.7-0.2-3.7-1.3c-4.6,0-9.3-0.1-13.9-0.1C891.1,378.6,891.7,378,893,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M933,377c-1.1-0.3-2.2-0.5-3.3-0.8c1.1-0.1,2.3-0.2,3.4-0.3c5.9,1,12.1-1.1,17.9,1.2\n                        C945,379.3,939,379.2,933,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M927,376c-5.7,0-11.3,0-17-0.1C915.7,374.5,921.3,374.3,927,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M902.8,376.8c-1.9,0-3.8,0.1-5.8,0.1c1.9-1.7,4.2-0.8,6.3-0.8C903.1,376.4,902.9,376.6,902.8,376.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M893,374c1,0.1,2.1,0.1,4.5,0.3C894.9,375.3,893.6,377,893,374L893,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7178"),
                d:
                  "M719,326c-8.8-0.5-17.5-1.8-26-4c1.1-2.7,3.1-3.1,5.7-2.5c7,1.5,14.1,2,21.3,0.6\n                        c4.4-0.9,8.9,0.6,13.3,1c10.6,1,21.2,0.1,31.8,1.1c3.6,0.3,7.1,1.5,10.8,1.4c2.6,0,4.5-0.7,5.9-2.9c1.2-0.9,2.6-1,4.1-0.9\n                        c0.6,0,1.2,0.1,1.7,0.2c7.1,1.9,14.5,1.7,21.7,2.2c15.9,1.2,31.7,3.5,47.6,4.4c2,0.1,4.1,0.1,5.1,2.4\n                        c-0.4,2.1,1.6,4.6-3.7,3.9c-8.8-1.2-17.8-1.9-26.6-2.8c-10.8-1.1-21.6,0.5-32-1.2c-4.7-0.7-8.7-1.1-12.9,0.2\n                        c-3.7,1.1-6.6-1-9.9-1.4c-10.3-1.3-20.6-0.7-30.9-0.5c-6,0.1-11.5-2.2-17.4-2.6C724.8,324.3,722.3,326.9,719,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB747D"),
                d:
                  "M862,329c-6-2.1-12.4-0.9-18.6-1.8c-11-1.7-22.2-2.3-33.4-3.3c-5.6-0.5-11.3-0.8-16.9-1.1\n                        c-2.2-0.1-4.1-1-6.1-1.8c-0.7-1-0.5-2.2,0.7-2.3c6.6-0.9,13.3-1.5,19.8-0.4c3,0.5,5.9,1,8.9,1c11.4-0.1,22.6,3.2,34.1,2.5\n                        c4.3-0.3,8.5-0.5,12.6-1.9l0,0c0.5,3,0.8,6-0.1,9C862.7,329,862.3,329,862,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED878D"),
                d:
                  "M766,334c-8.8,0.1-17.6-0.4-26.1-2.8c-0.9-0.3-2-0.2-3-0.2c-12.5,0.8-24.9-1.2-37.1-2.8\n                        c-5.9-0.8-12.1-0.1-17.8-2.2c-3.5-1.4-7.7,0.7-11-2c0.8-3.1,2.9-1.8,4.8-1.6c14.4,1.5,28.8,3.1,43.2,4.6\n                        c8.6,1.2,17.3,2.4,25.9,3.5c7,0.9,14,1.7,21.1,2.5C766,333.3,766,333.7,766,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7178"),
                d:
                  "M863,329c0-3,0.1-6,0.1-9c1.5,4.2,0.6,8.7,1.1,13C862.4,332,863.2,330.3,863,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D2C"),
                d:
                  "M978,357c-4.1,2.1-8.4,0.7-12.6,1c-3.8,0.3-7.6,0.1-11.4,0.1c-6.5,0-13.1,0-19.7,0\n                        c-0.5,1.8,1.7,0.3,1.4,1.6c-1.1,0.3-2.6,0.4-3.8,1.1c-4.8,2.9-4.8,3-5.1-2.5c-4.5,1.9-9-0.1-13.6,0.3\n                        c-7.4,0.6-15-0.4-22.3,1.5c-0.6-1.2-3.2,0.6-3-1.9c1.4,0,2.9-0.2,4.3,0c2,0.2,3.8,0,4.8-2.1c5.7-0.5,11.5,0.9,17.1-0.8\n                        c1.6-1.8,3.8-1.5,5.9-1.5c6.2-0.2,12.4,0.6,18.5-0.5c0.6-0.2,1.2-0.3,1.8-0.3c4.8-0.2,9.6-0.1,14.4-0.1\n                        c6.3,1.3,12.8,0.7,19.2,1.3C975.7,354.5,977.1,355.4,978,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911923"),
                d:
                  "M888,358.1c1,0.6,2,1.3,3,1.9c-5.5,1.8-11.2,0.7-16.8,1c-1.5,0.1-2.5-0.6-3.2-2\n                        C876.7,358.7,882.3,358.4,888,358.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9AA1"),
                d:
                  "M750,339c0.8-1.7,1.6-3.2,4-3c6,0.5,12-0.3,18-1c6.3,0.7,12.7,1.3,19,2c0.7,1.3,1.6,1.9,3.2,1.8\n                        c9.7-0.1,19.2,1.4,28.7,2.5c10.7,1.3,21.3,4.2,32.2,1.7c3.3-0.8,6.5,1.2,9.7,0.2c0.4,3.5,0.6,5.4-4.6,5\n                        c-12.3-1.1-24.7-0.6-37.1-1.3c-10.2-0.6-20.4-2.1-30.6-2.8c-11-0.8-21.7-3.9-32.9-4.1C756.5,339.9,753.3,339,750,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD2C34"),
                d:
                  "M843.2,350.9c-4.1,0-8.1,0.1-12.2,0.1c-1.9,1.8-4.3,1.5-6.6,1.5c-5.1,0-10.3,0-15.4-0.1\n                        c-9.5-2.2-19.3-1.1-28.8-3.2c-2.1-0.3-4.9,0.8-5.6-2.5c2.3-2.4,4.9-1.1,7.4-0.8c14.3,1.2,28.6,2.2,42.9,3.7\n                        C831.1,350.2,837.2,349.1,843.2,350.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3B"),
                d:
                  "M782.1,345.9c-2.3,0.5-5-0.9-7.1,1.1c-3.6,2.8-7.4,0.5-11.1,0.4c-8.9-0.5-17.5-2.5-26.4-3.4\n                        c-1.8-0.7-4-0.5-5.6-1.8c-0.5-0.8-0.5-1.6,0.1-2.3c14,0.8,27.9,3,41.8,4.7C776.6,344.9,779.6,344.2,782.1,345.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2734"),
                d:
                  "M732.1,339.9c0,0.7,0,1.4,0,2c-2.6,1.3-5.5,1.3-8.2,0.7c-2.3-0.6-4.5-0.7-6.8-0.6\n                        c-2.3,0.1-4.9,0.2-6-2.9c-0.3-0.8-2.2,0.1-3-0.9c-0.3-0.5-0.3-0.9,0-1.4c2.2,0.1,4.5,0.2,6.7,0.2c0.7,0.3,1.5,0.6,2.2,0.9\n                        c2.6,1.3,5.5-0.2,8.1,0.9l0,0C727.2,340.4,729.8,338.7,732.1,339.9L732.1,339.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3B"),
                d:
                  "M725.1,338.9c-2.7-0.2-5.6,1-8.1-0.9C719.7,338.1,722.5,337.5,725.1,338.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3B"),
                d:
                  "M732.1,340c-2.4-0.3-4.9,1-7-1.1C727.4,339,729.9,338.4,732.1,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B12532"),
                d:
                  "M808,351c7.7,0,15.3,0,23,0c3.2,0,3.8,4.1,6.9,4.8c-1.3,0.1-2.6,0.1-4,0.2c-3.2,2.4-6.8,1.2-10.3,1\n                        c-2.4-0.8-4.6-2-7.2-1.7c-3.9,0-7.8,0-11.8,0c-3,0.3-6,0.5-8.9-0.1c-1.1-0.2-2.6-0.3-2.7-1.7c-0.1-1.4,1.4-1.6,2.5-1.8\n                        c2.1-0.4,4.2-0.5,6.3-0.1C803.9,352.2,806.1,352.5,808,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1C2F"),
                d:
                  "M804,365c1-0.7,2-1.3,3-2c0.7-3,3.3-2.2,5.2-2.5c5.6-0.8,11.2-0.6,16.8-1.6c5.7-1.2,11.3,0.5,17,0.1\n                        c3.6,1.6,7.4-0.3,11,1c-6.6,2.3-13.6,2.2-20.3,2.7c-7.5,0.5-15.1,1.5-22.7,1.3c-1.5-1-3.2-0.4-4.3-0.4\n                        c0.6-0.1,1.5-0.3,2.4,0.4C809.5,366,806.7,364.6,804,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90191D"),
                d:
                  "M846,359c-5.6,2.1-11.3,0.5-17,1c-0.4-0.2-0.8-0.4-1.2-0.7c-2.3-1.8-4.9-0.7-7.4-0.9\n                        c-1.6,0-3.2-0.1-4.6-0.7c-2.1-1.6-4.6-1.1-7-1.3c-1.8-0.2-4.1,0.5-4.7-2.2c4.3,0,8.6,0,12.9,0c1.8,1.5,4.2,0.7,6.1,1.9\n                        c3.6,0,7.3,0,10.9,0C837.7,358.3,842.2,357.2,846,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA7079"),
                d:
                  "M883,331c-4.2-0.7-8.5-1.4-12.7-2c-1.7-0.2-2.3-0.8-2-2.6c0.2-1.4-0.1-2.9-0.2-4.4\n                        c3.6-2.8,7.8-1.2,11,0c4.5,1.8,9,2,13.5,2c4,0,7.9-0.9,11.7,1c1.8,0.9,4.4-1.5,5.1-0.2c1.3,2.2,2.1,1,3.3,0.5\n                        c0.5-0.2,1,0.1,1.4,0.3c5.2,3.2,10.9,2.7,16.7,2.2c4.6-0.4,9.3-1.1,12.9,3c2.3,1.1,4.9,0.6,7.3,1.1c1.3,0.2,2.8,0,3.8,0.9\n                        c3.8,3.7,8.8,3.4,13.4,3.9c3.1,0.3,5.6,1.7,8.3,3c0.7,0.4,1.6,0.9,1.5,1.8c-0.1,1.1-1.3,1.4-2.2,1.6c-1.6,0.3-3.3,0.3-4.9,0.9\n                        c-3.2,0.3-6.4,1.1-9.7,0.9c-2.4-0.8-4.9-0.3-7.3-1.2c-0.9-0.3-1.7-1.3-2.7-1c-4.4,1.3-8.4,0.2-12.3-1.8\n                        c-1.6-0.8-3.6-0.4-5.3-0.6c-1.9-0.2-4.1,0.2-4.9-2.3c2.7-3,6.3-1.5,8.7-2c-12.2,1-24.9-1.7-37.7-2.8\n                        C894,332.8,888.4,333,883,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6B73"),
                d:
                  "M943,332c-2.8-3.1-6.5-3.9-10.1-2.9c-5.3,1.5-10.3-0.6-15.4,0c-1.7,0.2-2.3-0.2-2.9-1.6\n                        c-0.6-1.3-2.2-2.2-3.1-0.7c-1.4,2.2-1.3,0.9-1.6-0.4c-0.1-0.4-0.6-0.7-0.9-1c-4.6,4.8-8.6-2.7-13.3-0.5\n                        c-2.9,1.3-6.1,0.9-9.2,0.1c-2.8-0.7-6.5,1.3-8.2-2.7c-3.5,1.7-6.8-1.1-10.2-0.4c-0.3-0.3-0.7-0.7-1-1c0.2-1.7-0.7-3.6,1-5\n                        c1.3-0.6-0.6-3.3,2-3v0c0.8,2.5,0.9,2.6,4.5,2.6c3.9,0.1,7.5,2,11.1,3c4.7,1.3,9.4,0.7,14.1,1.7c2.9,0.6,5.9,0.6,8.7,1.8\n                        c2.2,1,4.5,1.1,6.8,1.2c7.8,0.2,15.7,1,23.5,0.5c2.2-0.1,4.4,0,5.4,2.6C944.7,328.5,944.7,330.4,943,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97E83"),
                d:
                  "M929,338c1.1,1.4,2.7,1,4.2,1c3.4,0.1,6.8-0.3,9.8,2.3c1.9,1.6,4.7,0.9,7.2,0.2c1.6-0.5,3.4-1,3.8,1.6\n                        c-2.3,3.5-6,3-9.3,3.3c-3.3,0.3-6.6,0-9.9,0.1c-6.3,0.3-12.5,0.1-18.8,0c-6-0.3-12.2,1.5-17.9-1.4c-3.5-0.4-6.9-1.2-10-3\n                        c3-2.5,7,0.6,10-2c7,0.4,13.9-1.7,21-1c1.7-1.6,4.1-1.2,6.1-1.9C926.5,336.9,927.9,336.9,929,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE6A73"),
                d:
                  "M929,338c-1.3,0-2.7,0-4,0c-2,0.7-4,0.8-6,0c-7.4,0.2-14.6-0.3-21.6-3.7c-3-1.5-7.1-0.3-10.7-1.2\n                        c-1.5-0.4-2.9-0.5-3.6-2.1c19.8,0.4,39.3,3.9,58.9,5.6C937.6,337.1,933.3,337.5,929,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA7079"),
                d:
                  "M919,338c2,0,4,0,6,0c-1.8,1.8-4,0.7-6,1C919,338.7,919,338.3,919,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E58B93"),
                d:
                  "M898,345c6,0,12,0,18,0c2.7,2.8,6.5,1.8,9.7,2.7c3.1,0.8,6.5,0.8,8.3,4.1c-1.8,2.1-4.2,1.5-6.5,1.5\n                        c-7.2,0.1-14.4,0-21.5,1.5c-8.4-1-16.5-4-25.1-3.9c4.3-3,9.3-3,14.2-3C897.2,348,899.7,348.4,898,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8F94"),
                d:
                  "M906.1,354.9c4.4-2.9,9.4-2.3,14.3-2.9c4.5-0.5,9.2,1.1,13.6-1c1-1,2.2-1,3.4-0.9\n                        c3.7,0.8,7.5,0.3,11.3,0.5c1.9,0.1,4-0.3,5.5,2.1c-4.7,2-9.7-0.3-14.2,1.4l-0.4,0.1l-0.4-0.1c-4.8,0.9-9.6,0.1-14.4,0.4\n                        c-1.6,0.1-3.3-0.5-4.8,0.5c-1.9,0-3.9,0-5.8,0.1C911.5,355,908.8,355,906.1,354.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6E77"),
                d:
                  "M863.1,319.9c-2,3.4-5.3,3.4-8.6,3.4c-1.8,0-3.7-0.4-5.5-0.2c-11.1,1.3-21.8-2.2-32.9-2.4\n                        c-9.3-0.2-18.5-2-27.8-1.5c-1.1,0.1-1.2,1-1.3,1.8c-0.3,0-0.7,0-1,0c-5.1-1.6-10.2-0.8-15.2,0.3c-7.5,0.7-14.8-1-22.3-1.1\n                        c-6.6-0.1-13.1-1.9-19.8-1.8c-1.3,0-2.7-0.3-3.6-1.4c-0.3-0.3-0.7-0.7-1-1c-0.7-1.1-3.1,0.3-3-1.7c0.1-1.9,2-1.7,3.5-2\n                        c3.7-0.8,7,2.2,10.7,0.6c5.9-0.3,11.9-2.2,17.7-0.8c4.1,1,8.3-1.9,12.1,0.9c3-0.7,5.9,4.7,9.1,0.2c0.2-0.3,1.3-0.3,1.9-0.1\n                        c9.2,2.1,18.6,0,27.9,1.2c5.3,0.7,11,1.6,16.3-0.8c2.4-1.1,3.6,1.2,5.5,1.6c7.7,1.8,15.4,1.9,23.2,2.1c2.8,0.1,5.9-1,8.6,1.8\n                        c1.6,1.7,3-2.9,5.5-1.9C863,318,863,318.9,863.1,319.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36068"),
                d:
                  "M862.9,316c-1.7-2.3-0.7-4.8-0.8-7.2C863.3,311,862.9,313.5,862.9,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F18"),
                d:
                  "M515.9,372c-1.3,0-2.6,0-3.9,0c-2.4-2-0.4-2.6,1.1-3.3c3.4-1.6,7.1-2.4,10.9-2c1.1,0,2.3,0.1,3.4,0.4\n                        c1.9,0.7,3.9,0.4,5.9,0.6c2,0.2,4.1,0.2,4.6,2.8c0,2.2-1.6,3-3.1,3.2c8.2,1.8,16-0.2,23.9-3.4c5.3-2.1,11.5-0.3,17.4-0.8\n                        c1.6-0.1,3.3,0,5-0.1c1.5-0.1,3.1,0.2,3,2.4c-1.6,1.1-3.2,2.2-4.8,3.3c-7.8,1.9-16.4,0.4-23.2,6c-1,0.7-2.1,0.8-3.2,0.3\n                        c-1.3-1.8-3.3-1.9-5.3-1.9c-3.4,0-6.9,0.2-10.3-0.3c-4.4-1.6-9.2-1.2-13.8-2.8C520.5,375.2,517.9,374.3,515.9,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57111E"),
                d:
                  "M583.9,371.8c-2.7-3-6.2,0.4-9.2-1c-0.2-0.1-0.6,0.2-1,0.2c-9.1-1.3-17.5,1.9-26,4.2\n                        c-4,1.1-7.9,1.5-11.6-0.2c-1.9-0.9-3.8,0.5-6.1-0.5c2-2.5,5.9-0.1,6.9-3.4c4.9-3,10.7-2.1,15.9-4c7.9-0.7,15.7,1.4,23.6,0.6\n                        c0.6,0,1.1,0,1.7,0c1.7,0.1,3.4,0,4.8,1.3c1.4,0.1,2.9,0.1,4.3,0.2C586.2,370.1,585.5,371.4,583.9,371.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3743"),
                d:
                  "M553.1,380.9c0.9,0,1.9,0.1,2.8,0.1c-0.3,1-1,1.6-1.9,2c-6.1,2.1-12.1,0.6-18.2-0.3\n                        c-3.1-0.4-2.1-2.1-0.8-3.7c0.6-0.7,1.4-0.5,2.2-0.5c0.8,0,2.2-0.2,2.3,0.3c0.2,1.3,0.3,1.3,1.7,1.2\n                        C545.2,379.6,549.3,378.7,553.1,380.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101B"),
                d:
                  "M536.9,379c-0.6,0-1.2,0.1-1.9,0.1c-2,1.5-4.9,0-6.8,2.1c-0.4,0.4-0.8,0.2-1-0.4\n                        c-1.2-4.3-4.3-3.4-7.3-2.6l0,0c-0.2-1.3-0.9-2.2-1.9-3c-0.7-0.7-1.4-1.3-2.1-2c0-0.3,0-0.7,0-1c6.6,3.6,14.1,4.2,21.2,6\n                        c0.3,0.3,0.3,0.5,0.2,0.7C537.2,378.9,537,379,536.9,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79152E"),
                d:
                  "M293,341c-6,1.3-12,2.7-18,4c1.5-5.2,3.5-10.2,6.1-14.9c2.4-1.9,4-4.8,7-6c2.7-2,5.4-4,8.8-4.7\n                        c0.6,0.2,1.2,0.4,1.3,1.2c0.1,0.5-2.8,2.4,0.8,1.7c1.7-0.3,4.2,6.5,3.3,8.4c-0.4,0.9-1.3,0.8-2.1,0.7c0.7,0.4,1.4,0.5,1.8-0.1\n                        c1.1-1.3,2.2-3,3.9-1.3c1.6,1.5,0.2,3-1.1,4.1c-1.4,1.3,1.2,0.9,0.7,1.8c-0.5,2.5-2.5,2.2-4.2,2.4\n                        C298.3,338.7,295.4,339.1,293,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851731"),
                d:
                  "M305,335c-1.4-0.5-1.4-0.6-0.5-2c0.5-0.8,1.8-1.5,0.8-2.5c-0.9-0.9-1.7-0.1-2.4,0.7\n                        c-2.6,3.3-3.2,0.5-4.4-1.2c1.3-1.3,2.1,1.6,3.1,0c0.7-1.1-0.2-1.8-1.2-2.2c-1-0.4-0.7-0.9-0.6-1.9c0.3-2.3,0-2.4-1.9-1.1\n                        c-0.8,0.6-1.2,0.1-1.6-0.3c-0.6-0.6-1-1.2-0.9-2.2c0.1-1.2,2.4-0.8,1.7-2.5c-0.1-0.9-0.1-1.7,1.2-1c0.3-0.2,0.5-0.4,0.7-0.6\n                        c6.7-3.1,13.6-3.7,20.7-1.7c1.3,0.4,2.5,1,3.7,1.5c2.6,1.6,5.9,2.4,6.6,6c0,1.8-0.9,3.1-2.6,3.8c-0.5,0.2-1.4-0.3-1.2,0.1\n                        c2.8,4.5-1.2,3.6-3.2,4.1c-3.3,1-6.6,2-9.8,3.1C310.3,336.4,307.6,337,305,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4B151B"),
                d:
                  "M303,314.2c6.3-2.1,12.5-1.6,18.7,0.4c2,0.6,4.1,1.1,6.1,1.7c0.4,0.1,0.9,0.3,1.3,0.5\n                        c2.7,2.1,5.8,3.9,6.6,7.6c-0.1,1-0.5,1.8-1.5,2.2c-1.9,0.1-3.1-1-4-2.4c-1.7-2.6-4-4.2-6.7-5.5c-1.3-0.7-2.8-1-4.2-1.5\n                        c-4.2-2.1-9-0.2-13.2-2C305,314.9,303.8,315.2,303,314.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC5665"),
                d:
                  "M306.1,315.1c4.7-0.1,9.5-0.6,14,1.6c0.5,0.5,0.5,0.9-0.1,1.3c-7.1-1.8-14.1-1.3-21.1,0.4\n                        C300.4,315.3,304,316.7,306.1,315.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3C4F"),
                d:
                  "M298.2,319c-0.4,0.3-0.8,0.7-1.2,1c-3.5,0.3-5.8,3.3-9,4C290.7,321.1,293.6,318.2,298.2,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D49"),
                d:
                  "M1277,321c2.7-2,5.7-2.3,8.9-2c5.1,0.5,10.4-1.6,15.8,0.7c-1,1.7-2.4,1.4-3.5,1.1\n                        c-2.9-0.7-5.2-1.2-3.4,3.1c0.4,1-0.3,1-1.2,1.4c-5.4,2.2-11,1.6-16.5,1.6C1274.8,325,1276.9,323,1277,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A83D48"),
                d:
                  "M1277,321c0.5,0.9,0.5,3.6,0,6l0,0c-2.8,0-5,2.8-8,2c-0.4-0.8-1.2-1-2-1c1.1-3.4-0.1-6-3-8\n                        c0.8,0,1.6-0.2,2-1c0.6-0.6,1.3-0.7,1.9-0.1c1,1.6,2,0.4,3,0.1C1272.7,320.7,1275.3,319.3,1277,321L1277,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("981D2F"),
                d:
                  "M1268,318.9c-0.6,0-1.3,0.1-1.9,0.1c-2.9,0.3-5-0.8-4.9-3.9c0.1-3.5,3.2-1.6,4.9-2.2\n                        C1270.4,314.3,1270.8,315.5,1268,318.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D49"),
                d:
                  "M1269,329c2.5-1.5,5.1-2.5,8-2c-1,0.7-2,1.3-3,2c-1.9,1.1-3.9,1.1-6,0.9\n                        C1268.3,329.6,1268.6,329.3,1269,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D49"),
                d:
                  "M1277,321c-2-0.7-5,1.6-6-2C1273.2,319.1,1275.9,317.7,1277,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9CA7"),
                d:
                  "M328.1,316.9c-0.1-0.2-0.2-0.4-0.2-0.7c3.5-2.5,7.5,0.2,11.1-1.2c9.5,0.3,18.5,3.6,28,4\n                        c3.6,0.6,7.7,0.1,9.3,4.7c-0.9,1.5-2.5,1.5-3.9,1.8c-1,0.1-2-0.3-2.9-0.8c-0.9-0.5-1.9-0.8-2.8-1.3c-8.9-2.6-18-3.6-27.2-4\n                        C335.4,319.4,331.5,319.3,328.1,316.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4AEB3"),
                d:
                  "M376,323.9c-1.9-3.7-6.7-2-9-4.9c-1.3-5.4-0.8-6,4.8-6c6.3,0,12.5,0.2,18.8-0.1\n                        c4.5-0.2,8.7,0.5,12.4,3.1c-2.9,7.7-11,3.6-16,6.7c-2.3,1.4-5,1.5-4.9,5c0,0.4-1.3,0.8-2,1.2h0c-0.3-1.5-1.4-2.4-2.3-3.5\n                        C378.4,323.6,375.8,325.3,376,323.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94852"),
                d:
                  "M548,301c10.7,1.1,21.5,2,32.2,3.4c1.7,0.2,3.2-0.3,4.8-0.3c3.6,1.3,7.3,1.5,11,2\n                        c-0.8,2.5-2.8,1.1-4.2,1.1c-7.9-0.3-15.8-0.7-23.8-1.1c-7.1-1-14.3-1.8-21.4-3c-5.5-1-11.2-0.3-16.5-2.6\n                        C536.1,300.7,542,301.3,548,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6646C"),
                d:
                  "M765,313c-5.9,0.9-11.8-0.1-17.7,0.2c-4.1,0.2-8.2,0.3-12.3,0.8c-3.5-6.1-9.2-2.7-14-3.2\n                        c-0.9-0.1-1.8,0.7-2.7,1.1c-1.4,0.5-2.9,0.9-4.4,0.9c-5.9-0.8-11.8-1.1-17.7-1.6c-11.9-1-23.9,0.4-35.8-1.6\n                        c-0.5-0.1-0.7,0-0.7,0.5c-0.7,0.1,0.5,0.4,0.1-0.1c-0.2-0.2,0-0.4,0.3-0.3c1.3,0.3,3.4-1.1,3.9,1.4c-2,0-4,0-6,0\n                        c-9-1-18-2-27-3c-0.4-0.2-0.5-0.4-0.4-0.7c0.1-0.2,0.2-0.3,0.3-0.3c0.4-2,1.7-2,3.4-1.8c4.4,0.4,8.7,0.4,13.1-0.8\n                        c4.3-1.1,8.5,1.3,13.1,1c6.4-0.4,12.9-0.8,19.2-1.3c5.2-0.5,10.8-0.1,16-1.8c2.2-0.7,4.9-1.1,7.2,0.7c2,1.6,3.8,0,4.9-1\n                        c3.8-3.4,7.4-1.5,11.1,0c0.9,0.4,2.1,1.5,2.6,0.8c3.7-4.3,7.6-0.6,11.4-0.5c0.5,0,1.1,0.4,1.4,0.2c6.1-4.9,12.1-0.8,18.1,0.1\n                        c1.1,0.2,2.3,0.1,3.4,0.3c1.5,0.3,4.8-6.3,4.5,1.2c0,0.6,0.9,0.7,1.6,0.3c8.4-4.4,16.9-1.5,25.2,0.3c2,0.4,2.9-0.8,4.5-0.9\n                        c8-0.5,15.3,3.5,23.3,3.2c-0.2,1.8-1.4,2-2.9,2c-2,0-4-0.2-5.3,2c-0.3,0.5-1.4,1-1.6,0.8c-4.9-3.5-9.7,0.4-14.4,0.1\n                        c-2.7-0.2-5.1-2.2-7.4-3.2c-3.8-1.5-8.5-1.2-12.8-1C767.6,307.8,766,310.3,765,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA6B73"),
                d:
                  "M725,317c14,0.2,27.8,1.7,41.7,3.5c1.6,0.2,2.9-0.5,4.3-0.5c3.7,0,7.5-0.7,11,1c0.4,3-0.8,4.5-3.9,4\n                        c-3.8-0.7-8,1-11.6-1.6c-0.2-0.2-0.8-0.4-0.9-0.2c-2.6,2.4-5,0.6-7.7,0c-3.2-0.7-6.6-0.2-10-0.2c-8.2,0-16.4-0.1-24.4-2\n                        c-1.1-0.3-2.4-0.2-3.5,0.1c-7.5,2.2-15,1.4-22.2-0.8c-2.4-0.7-3,1.8-4.9,1.7c-11.1-0.1-22-1.9-33-3c-0.3-0.2-0.5-0.4-0.3-0.7\n                        c0.1-0.2,0.2-0.3,0.3-0.3c3.8-0.8,7.6,0.4,11.2,0.8c6.1,0.7,11.5-2.2,17.4-2.1c0.6,0,1.4-0.5,1.9-0.3\n                        c6.8,3.1,13.7,0.3,20.5,0.6c3.3,0.1,6.6-0.1,9.8,0.9C722.2,318.3,724.1,319.4,725,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76871"),
                d:
                  "M718,311c1.9-2.7,4.7-2,7.3-1.9c1.4,0.1,2.8,0.8,4.4,0.3c4.1-1.3,6,0.3,5.4,4.7\n                        c-3.6,3.2-6.9-2.2-10.6-0.4c-0.7,0.3-2.3-0.8-2.7,0.8c-0.1,0.4,1.4,1.1,2.2,1.6c-18.1-1-36.1-2.2-54-4.8c-2-0.3-4-0.1-6-0.2\n                        c-1.2-1.9-3.5-0.2-5.1-1.6c7.4-1.4,14.5,0.7,21.7,0.5c2.6-0.1,5.1-0.6,7.6-1c4.8-0.8,9.8-0.4,14.4,1.7\n                        c1.1,0.5,2.8,0.7,3.9,0.2c2.9-1.3,5.1-0.1,7.5,1.2C715.9,314.1,717,312.8,718,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d: "M649,317c-2.7-0.4-5.5,1-8-1C643.7,316.4,646.5,315,649,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d:
                  "M660,318c0,0.3,0,0.7,0,1c-1.7-0.2-3.6,0.7-5-1C656.7,318,658.3,318,660,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d:
                  "M654,318c-1.7-0.2-3.6,0.7-5-1C650.7,317.2,652.6,316.4,654,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05A63"),
                d:
                  "M631,307c0,0.3,0,0.7,0,1c-2,0-4,0-6,0c-0.8,0-1.6-0.2-2-1C625.7,307,628.3,307,631,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M663,324c-7.9,0.6-15.6,0.1-23-3c0.9-2,2.4-1.9,4-1c1,0,2,0,3,0c1.8-0.2,3.5-0.2,5,1c3.6,1,7.3,1,11,1\n                        c0.5,0.4,0.6,1,0.4,1.6C663.3,323.7,663.1,323.9,663,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M671,324c3.6,1.2,7.5,0.2,11,2c-5.4-0.2-10.7-0.4-16.1-0.5c-1.2,0-2.2-0.4-2.9-1.5l0,0\n                        c2-1.1,4-0.6,6,0C669.7,324,670.3,324,671,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8489"),
                d:
                  "M644,320c-1.5-0.1-2.8,0.3-4,1l-0.5,0l-0.5,0c0-0.3,0-0.7,0-1C640.7,316.1,642.3,318.9,644,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8489"),
                d: "M652,321c-1.8,0.1-3.5,0-5-1C649,318.6,650.9,317.9,652,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED878D"),
                d:
                  "M669,324c-2,0-4,0-6,0c0-0.7,0-1.3,0-2C665,322.7,667.3,322.5,669,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05A63"),
                d:
                  "M599,305c0.3-2.3,2.5-3.4,3.9-2.8c3.4,1.5,7.1-1,10.4,1c1.8,1.1,2.8-0.4,3.1-1.9\n                        c0.3-1.1,0.3-2.1,1.6-1.9c4.8,0.7,14.1-0.7,18.9-1.9c3.2-0.9,6.8-1.4,10,0.5c-3.3,1.5-6.8,2.3-9.9,4.7\n                        c-1.4,1.1-4.4,1.4-7.1,0.6c-2.8-0.8-6.4-0.9-7,3.7C614.9,307.1,606.9,306.8,599,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951E2D"),
                d:
                  "M708,336.9c0,0.4,0,0.8-0.1,1.1c-2.5,2-5.7,1.8-8.5,2.2c-2.1,0.3-4.1,1-6.1,1.5\n                        c-0.5,0-0.9-0.2-1.3-0.4c-5.2-3.6-11.5-2.8-17.3-4.4c-0.6-0.2-1.3-0.1-2-0.2c-0.4-0.1-0.9-0.3-1.3-0.5\n                        c-7.6,0-15.1-1.1-22.5-3.1c-2.1-0.6-4.3,0.6-6.4-0.2c-2.1-2.6-5.1,0.3-7.4-1.3c-1.2-1.3-3.5-2.1-2.4-4.6\n                        c7.8-0.7,15.5,1,23.2,1.9c16.9,2,33.6,5.8,50.6,7.2C707.2,336.3,707.6,336.6,708,336.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951D2D"),
                d:
                  "M565,322c3.1-4,7.6-1,11.2-2.2c15.7,0.9,31.2,3.3,46.8,5.3c1,1.1,1.1,2.2,0.5,3.5\n                        c-3,2.1-5.7,3.4-9.6,0.8c-3.4-2.2-8-1.3-12.1-1.2c-1.6,0-3.3,0.8-4.9,0c-4.8-2.6-10.2-2.1-15.4-2.6c-3.6-0.3-7.2-0.6-10.8-0.7\n                        C568.4,325.1,566,324.6,565,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE1F2D"),
                d:
                  "M623,329c0-1.3,0-2.5,0-3.8c2.5-0.4,4.7,0.6,7,1c3.5,4,4.5,8.9,5.3,13.9c-0.1,1.8,0.2,3.7-1.5,5\n                        c-0.8,0.2-1.4-0.2-1.5-0.9c-1.2-4.4-4.3-6.1-8.6-6.1C621.9,335.2,621.6,332.2,623,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941920"),
                d:
                  "M634,340c-0.4-4.9-2.8-9.1-4-13.8c1,0.3,2,0.7,3,1c0.3,1.8,2,2.6,3,3.8c1.6,3,0.4,5.9-0.6,8.7\n                        C635,340.2,634.6,340.3,634,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M587.4,318.3c-1.2,1.1-2.3,0.5-4.2,0.8C585,317.7,586.1,318.1,587.4,318.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF5D67"),
                d:
                  "M484,269c-0.1,4.5-3.5,0.8-5,2C478.8,265.6,481.5,267.6,484,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B32532"),
                d:
                  "M431.9,327.1c-1.4-2.1-2-4.4-1.8-6.9c5-1.9,10.4-1.8,15.6-2.5c3.8-0.5,7.5-1.2,11.3-1.8\n                        c4.7-1,9.5,0.3,14.2-0.7c2.5,1.9,5.3-1,7.9,0.4c0.4-0.1,0.8,0.1,1.1,0.3c0.2,0.4,0.1,0.8-0.2,1.1c-0.7,0-1.4,0-2,0\n                        c-2.2,1.8-4.9,1.3-7.4,1.4c-3,0.1-6.2-0.7-9,1.1c-5.9,1.5-12,1.2-18,2.6C439.2,323.1,435.3,324.3,431.9,327.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971C2C"),
                d:
                  "M480,317c0-0.3,0-0.5,0-0.8c2.3-1.1,4.6-0.8,6.9-0.1c1.3-0.3,2.7-0.7,4-1c1.1,1.2,3-0.2,4,1.1\n                        c0,0.3,0,0.5,0,0.8C490,316.9,485,316.9,480,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9B9F"),
                d:
                  "M471.2,315.1c-4.7,1.3-9.5,0.7-14.2,0.7C461.7,314.1,466.5,315.2,471.2,315.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9B9F"),
                d:
                  "M495,316.1c-1.3-0.6-2.9,0.2-4-1.1c4,0.4,8.2-1.1,12,1C500.3,316,497.7,316.1,495,316.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72634"),
                d:
                  "M486.9,316c-2.3,0-4.6,0.1-6.9,0.1c-0.3-0.2-0.6-0.4-1-0.6C481.8,315.3,484.4,314.6,486.9,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M557,318.1c-1.7,0-3.4,0.1-5,0.1c-6.1-0.7-12.3,0.3-18.3-1.1c6.6,0,13.2-0.1,19.7-0.1\n                        C554.7,317,556.1,316.8,557,318.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M532,317c-5.1-0.2-10.3,0.5-15.3-0.8C521.8,316.4,527,314.9,532,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M536.3,315.6c2.3-0.9,3.9-0.7,5.5,0C540.3,315.6,538.8,315.6,536.3,315.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63342"),
                d:
                  "M917.6,612.3c2.4,0.4,3.2,2.1,4.7,3.9C919.2,615.8,919.2,615.8,917.6,612.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1015,588c1-1.5,2.6-0.9,4-1c0.2,1.9-0.6,3.5-1.4,5.2c-0.4,0.8-1.3,0.8-2.2,0.7\n                        c-0.7-0.1-1.2-0.6-1.2-1.3c0-1,0.4-1.4,1.5-1.9C1018.4,588.3,1015.6,588.5,1015,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1039,595c-0.7,3.2-3.2,1.6-5,2C1035,594.7,1037.1,595,1039,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1019,587c1.1-2,3.4-1.1,5-2C1023.3,588.2,1020.8,586.6,1019,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1046.7,581c-0.4,0.1-0.8,0.2-1.1,0.1c-0.6-0.2-1.3-0.5-1.1-1.3c0.1-0.2,0.7-0.5,1-0.4\n                        c0.6,0.1,1.1,0.5,1.7,0.7C1047.1,580.5,1046.9,580.8,1046.7,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1031,594c1.2,2.8-0.9,1.7-3.1,2.4C1029.6,595.1,1030.3,594.6,1031,594L1031,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8303D"),
                d:
                  "M789,531c-10.3,0-20.7,0-31,0c-1.5-2-3.8,0-5.5-1.2c-0.8-2.4-2.5-3.3-5-3.3c-2.8,0-5.7,0-8.5-0.3\n                        c-1.5-0.1-3.2,0-4.2-1.3c-2.4-3-5.5-3.9-9.2-3.3c-1,0.2-2.1,0.1-2.6-1c-0.5-1.1,0.3-1.9,1-2.6c4.6-4.9,13.4-5.4,18.4-0.7\n                        c1.7,1.5,2.3-2.5,4-0.4c0.2,0.3,0.1-1.2,0-1.8c-0.6-4.3-0.5-4.5,3.4-2.8c1.1,0.5,1.6,0.5,2.5-0.2c3.7-2.6,7.9-4,12.4-4.2\n                        c1.3-0.1,2.7,0,3.9-0.6c3.1-1.7,6-2.8,9,0.3c1,1.1,2.5,0.1,3.8,0c0.7,0.2,1,0.7,0.8,1.4c0.3-0.5,0.2-1,0-1.5\n                        c-0.3-0.8-0.2-1.5,0.1-2.3c1.1-1.2-0.2-2.9,0.9-4.1c3.5-2.5,3.5-2.5,5.2,3.1c-0.4,3.6-4.1,5.6-3.9,9.8\n                        c0.1,2.5-3.4,1.6-5.2,0.2c-5.7-4.2-12.6-2.9-15.4,3.4c-1.1,2.4-2.9,4.4-4.6,7.4c4-0.7,7.1,2.3,10.4-0.1\n                        c4.7,3.4,10.4-0.9,15.2,1.8c1.8,1,3.7,1.5,5.8,1.4c0.4-0.1,0.9-0.1,1.3-0.2c0.6-0.1,1.3-0.1,1.9-0.1c0.6,0,1.2-0.1,1.8-0.1\n                        c1-0.1,1.8-0.8,2.8-1c0.2,0.1,0.4,0.1,0.6,0.2c0,0.7,0,1.3,0,2c0.3,0.2,0.3,0.5,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3\n                        C795.7,530.5,792.4,531.4,789,531z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M799,530c0-0.3,0-0.7,0-1c0.7,0,1.3,0,2,0c6.7-0.5,13.3-3.5,20,0c0.8-0.4,1,0.9,2.6,0.6\n                        c4.3-1,9.1-2.1,13.8-0.6c1.5,0.4,0.4,1.8,1.2,2.3c1.7-0.4,1.1-2.2,1.9-3.1c0.5-0.5,1.6-0.9,1.6-0.7c0,4.4,7,1.6,6.5,6.4\n                        c0,0.2,0.8,0.5,1.2,0.7c0.7-5.6,6,1.1,7.5-2.8c0.2-0.6,1.4-0.6,1.7-0.1c1.3,2.5,4.8,2.6,6,5.2c-2,1.8-4.4,2.3-7,2\n                        c-0.7,0-1.3,0-2,0c-4.6-2.2-9.4-1.1-14.2-0.7c-0.7,0-1.3,0.2-1.8-0.3c-8.3-1.1-16.5-2.2-24.8-3.5c-3.8-0.6-7.8-0.4-11.3-2.5\n                        c-2.8-1.7-1.1,2.7-3.3,2.3C800.1,533,799.6,531.5,799,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2F3A"),
                d:
                  "M840,538c5.2-2,10.6-0.7,15.9-0.8c0,0.6,0,1.2,0.1,1.8C850.6,539,845.2,539.7,840,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651320"),
                d:
                  "M903,548c4.7-0.3,9.4-0.6,14,1c-0.9,2.6-2.4,4.4-5.5,3.7c-1.6-0.4-2.2,0.1-1.9,1.8\n                        c0.3,1.5-0.4,2.4-2,1.8c-2.1-0.8-0.2-1.7-0.1-2.7c0.2-2.2,2.4-2.4,3.7-3.7c-4.7-1.4-4.8-1.4-9,2.5c-0.8,0.8-1.5,0.6-2-0.1\n                        c-0.6-0.8-1.3-1.8-0.2-2.6C901,549,902,548.5,903,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621220"),
                d:
                  "M944.4,570.1c2,0.3,5.1-1.2,5.4,1.8c0.2,2.7-1.3,1.9-2.6,0.6C946.3,571.6,945.3,570.8,944.4,570.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842734"),
                d:
                  "M966,551c2.4-1.2,4.6,0.2,6.9,0.5c1.2,0.2,2.2,0.6,3.1-0.5c1.7-0.5,3.4-0.4,5.1-0.5\n                        c1.3,0.9,2.8,0.6,4.2,0.8c2.2,0.4,2.3,1.5,0.8,3c-0.5,0.1-1,0.2-1.5,0.2c-2.6-0.3-5.2,0.5-7.7-0.5c-1.3,0-2.6,0-4,0\n                        C971.7,550.6,967.5,554,966,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8666D"),
                d:
                  "M943,327c-0.2-1.8-1.4-2.2-2.9-2c-4.5,0.6-9.3-1.5-13.6,1.3c-0.3,0.2-1,0.2-1.4,0.1\n                        c-7.3-3.6-16.1-0.4-23.2-5.2c-2.9,2.4-5.8-0.2-8.7-0.2c-2.4,0-5.6,1.6-7.4-1.8c-4.7,2.6-7.9-1.9-11.9-2.5\n                        c-1.8-0.3-2.6,1-4.1,1.4c0-1.8,0-3.5,0-5.1c3.2-1.7,6.2-3.5,9.9-0.4c1.8,1.5,3.7,0,5.1-1.6c3.5,2.5,7.6,4.1,11.5,2.9\n                        c4.4-1.4,7.5,0.9,10.8,2.4c2.7,1.2,2.5,1.6,5.1-1.3c-0.6,3.4,0.6,4.2,3.5,4.2c4.5,0.1,9.2-1.4,13.5,1.6\n                        c1.6,1.1,2.8-1.8,4.4-1.6c3.5,0.5,7.2-1.8,10.4,3c1.3,2,5.9,3.9,9.1,5.8c0.1,1.7-3.9,0.3-2.3,3\n                        C946.8,332.7,945.8,328.1,943,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76670"),
                d:
                  "M943,327c3.5-0.3,4.7,4,8,4c3.7-0.7,7.6-3.2,10.7,1.5c0.4,0.6,2.2,0.5,3.3,0.3\n                        c9.7-1.9,19.3,1.7,29.1-0.2c-0.1,2.5-1.8,2.1-2.5,2.9c-0.6,0.7-0.7,1.6-0.3,2.3c0.6,1.1,1.6-0.2,1.9,0c4.1,2,8.7,0.5,12.9,1.6\n                        c1.1,0.3,0.9,1.6,1,2.6l0,0c-1.6,1.5-3.7,1.6-5.6,1.2c-7.6-1.6-15-0.2-22.4,1.1c-2.7,0.1-5.6,0.8-8-1.3c1.7-2,4.2-0.3,6.2-1.4\n                        c-5.3-3-10.8-4.4-16.8-3.9c-0.6,0.1-1.6,0.1-1.8-0.3c-3.8-4.9-9.1-4.6-14.4-4.6c-0.4,0-0.8-0.5-1.2-0.8\n                        C942.7,330.3,944.1,328.7,943,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC5862"),
                d:
                  "M1052,333c-1.4,3.5-5.3,0.8-7.3,3c1.1,2.3,3.1-0.3,4.3,1c-0.3,2.7-2.6,1.9-4.1,2.3\n                        c-1.9,0.5-5.3-0.8-4.9,2.3c0.3,2.8,3.5,1.4,5.5,1.4c2.6-0.1,5.3,0.2,7.9,0.2c1.6,0,3.7,0.2,2.3,2.8c-1.2,1.1-2.7,1.4-4.2,1.4\n                        c-8.4-0.1-16.9,0.6-25.3,0.9c-4.8,0.2-9.5,1.8-14.3,0.9c-1.7-0.5-3.5-0.7-4.9-1.9c-0.3-0.6-0.2-1.1,0.2-1.6\n                        c5.6-1.8,11.3-0.1,15.1-0.6c-2.4,0.7-6.7-0.8-11-0.1c-1.3,0.2-3.2,0.5-3.3-1.9c6.6-1,12.2-4.7,18.4-6.7c2.1-0.7,4-1.2,6.1-1.3\n                        c3.2-0.2,6.9,1.8,9.3-2.1c0.5-0.7,1.5-0.8,2.2-0.2C1046.6,335.1,1049.3,333.5,1052,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75E67"),
                d:
                  "M1007,346c0,0.3,0,0.7,0,1c-2.9,2.3-6.3,1-9.4,1.3c-1.8,0.2-3.6,0-5.4,0.3c-0.5,0.2-1,0.3-1.6,0.4\n                        c-4,1.1-7.7-1.1-11.5-1.7c-3.1-0.5-1.5-2.8-0.1-4.4c9.2-3.1,18.6-1.6,28-1c0,0.3,0,0.7,0,1c-1.6,1.7-3.5,0.8-5.4,0.7\n                        C1002.9,345.7,1006.1,343.3,1007,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4565E"),
                d:
                  "M1007,346c-1.1-0.2-2.5-1-3.3-0.6c-2.8,1.4-3-0.5-3.6-2.4c2.3,0,4.6,0,6.9,0c0.3,0,0.7,0,1,0\n                        c5.5,1.2,11.2,0.7,16.8,1.5C1019,347,1012.9,345.6,1007,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8666D"),
                d:
                  "M870,313c-0.7,1-1.3,2-2,3c0-1.7,0-3.3,0-5C869.3,311,870,311.7,870,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5515B"),
                d:
                  "M1056,345c-4.1-1-8.2-1.1-12.3-0.3c-2.1,0.4-3.9,0.8-5.2-1.5c-0.5-1-1.7-1.7-0.9-3.1\n                        c1.2-2,3.2-2.1,5.2-2.2c2.1-0.1,4.4,0.9,6.2-1c5.4,0.6,10.2-2.1,15.4-2.5c6.7-0.6,13.3-2.6,20.2-2.8\n                        c5.9-0.2,11.7-1.1,17.5-1.7c1.9-0.2,1.8-1.6,1.9-2.9c10.7,0,21.3,0,32,0c4.7-4.1,7.4-4.1,10.3-0.3c-3.9,2.9-8.8,2.9-13.1,3.7\n                        c-5.2,1-10.6,2.6-16.2,1.6c-2.1-0.2-4.2-0.3-6.4,0c-7.2,1.3-14.5,1.8-21.8,2.4c-8.2,0.7-16.1,3.5-23,4.3\n                        c6.8,3.8,15,2.4,23.3,1.4c0.8-0.1,1.6,0,2.4,0.2c1.1,0.6,3,0.6,2.5,2.7c-4.5,2.6-9.7,1.3-14.5,2.1c-5.8,0.9-11.9,0.1-17.8,1.2\n                        C1059.7,346.6,1057.6,346.7,1056,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4545E"),
                d:
                  "M1146,327c-3.3-4.6-6.7-0.7-10,0c0.7-1.5,0.1-2.1-1.5-2c-2.3,0.1-4.5,0-6.8,0c0-0.7,0-1.3,0-2\n                        c11.4,0,22.9,0,34.3,0c1.7,0,3.3,0,5,0c3.1-1.2,6.3-1.2,9.6-0.5c1.3,1.6,0.1,2.6-1.1,2.8c-9.4,1.4-18.7,3.5-28.2,2.6\n                        C1146.7,327.8,1146.4,327.4,1146,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5515B"),
                d:
                  "M1102,327c0.2,0.9,0.8,2-0.9,2c-1.6-0.1-3.7,0.8-4.1-2C1098.7,327,1100.3,327,1102,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74852"),
                d:
                  "M1146,327c10,0.3,19.8-2.1,29.7-2.6c0.5,0,0.9-0.9,1.3-1.4c0.7-0.5,1.3-0.6,2,0\n                        c2.4-0.5,6.1,1.8,6.4-3.4c0.1-1.1,3.6-0.4,5.5-0.6c0.3,0,0.7,0,1,0c3.6,3.7,3.3,4.3-2.7,6.9c-3.7,0.2-7.1,1.6-10.7,2.3\n                        c-6.9-0.1-13.8,0.5-20.6,1.8c-9.4-0.1-18.9,0.5-28,2.8c-5.6,1.4-11.7-1-16.4,3c2.2-0.3,4.8-0.5,7.3-0.5c0.8,0,1.8,0.1,2.1,1\n                        c0.2,0.9-0.4,1.4-1.2,1.9c-1.6,1,1.3,0.4,0.5,1.2c-1.6,2.8-4.7,1.3-6.9,2.3c-1,0.2-2.1,0.2-3.1,0.1c-1-0.2-2-0.5-3.1-0.5\n                        c-6.1-0.4-12.1,0.7-18.2-0.4c-0.7,0-1.3,0-2,0c-2.9-0.6-3.8-2.9-2-5.2c1.2-1.5,2.9-2.3,4.8-2.2c6.1,0.2,12.1-0.8,18.1-2.1\n                        c2.4-0.5,4.8,0,7.1-0.5C1126.9,331.3,1136.2,327.1,1146,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05461"),
                d:
                  "M1179,323c-0.7,0-1.3,0-2,0c-3.3,0-6.7,0-10,0c0-0.7,0-1.3,0-2c3.4,0,6.7,0,10.1,0\n                        C1178.5,321,1179.9,320.8,1179,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A24"),
                d:
                  "M1200,270.9c-0.4,0-0.7,0-1.1,0c-1.1-5.3,3.3-6.5,6.4-8.8c2.3-0.7,4.7-0.6,7.1-0.3\n                        c5.2,3.2,11.4,1.7,16.9,3.3c3,0.9,6.1,0.3,9.1,0.6c0.8,0.1,1.5,0.3,2.2,0.7c0.4,0.3,0.6,0.8,0.6,1.3c-0.8,1.3-2.4,0.2-3.3,1.2\n                        c-3.6,0-7.2-0.1-10.7,0c-2.8,0.1-0.4,1.2-0.3,1.9c-5,0-10-0.1-15.1-0.1C1208,270.3,1204,270.1,1200,270.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2331"),
                d:
                  "M1200,270.9c4-1.6,7.9-1.4,11.9-0.1c-3,0-6,0.1-8.9,0.1C1202,271,1201,271,1200,270.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F262C"),
                d:
                  "M1253,271c2.3-0.1,2.9,1.1,3.1,3.3c0.3,4.3-2,7.8-3.1,11.7c-1.1,0.6-1.4-0.4-1.9-1\n                        c1-2.9,1.8-5.8,2.5-8.8c0.6-2.3,0.1-3.8-1.6-5.2C1252.3,270.7,1252.6,270.7,1253,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E29093"),
                d:
                  "M1253,271c-0.3,0-0.7,0-1,0.1c-2.3-0.7-4.6-1.4-6.9-2.1c-1.1-1-2.9,0.4-4-1c-0.1-0.3-0.2-0.6-0.3-0.8\n                        c0.5-3.1,2.9-2.1,4.8-2.1c2.1,0.6,4.5,0.4,6.2,2.1C1253.2,268.1,1255,269,1253,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M1241.2,267.9c1.4,0.1,2.8-0.1,4,1c-0.9,0.1-1.7,0.2-2.1,1c-1.5-1-3.2-1.1-5-1\n                        C1238.8,267.8,1240,268.1,1241.2,267.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80313A"),
                d:
                  "M1251,285c0.6,0.3,1.3,0.6,1.9,1c0.1,1.3-0.6,2-1.9,2.1C1251,287,1251,286,1251,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B94B54"),
                d:
                  "M1190,325c3-2.2,3-2.2,2-6c2.7-0.7,6.7,2,7.9-3c3.7,2.1,3.2,5.6,2.9,8.9c-3.6,0.2-7.1,2.1-10.8,1.2\n                        C1191.2,326,1190.5,325.7,1190,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24049"),
                d:
                  "M1192,325c3.6,0.9,7.2-1.7,10.8,0c-0.1,3.4-0.7,6.8,1.2,9.9c0,0-0.4,0.2-0.4,0.2c-1,1-2.1,1-3.3,0.5\n                        c-0.6-0.4-0.7-1.4-1.9-0.9c-1.5,0.7-3.3,0.7-4.8,0.2c-2.2-0.8-5.3-0.9-5.8-3.8C1187.3,328,1189.5,326.3,1192,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3555F"),
                d:
                  "M607,291c5.3,0,10.7,0,16,0c-0.2,1.7-1.3,2-2.8,2c-3.9,0-7.8,0-11.7,0\n                        C606.8,293.1,606.4,292.5,607,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E35C66"),
                d:
                  "M689,295c0.2,0,0.3,0,0.5,0.1c0.2,0,0.3,0.1,0.4,0.2c-2.9,2.3-7.6,2.2-9.9-0.3\n                        C683,295,686,295,689,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57131F"),
                d:
                  "M1204,348c-0.4-0.8-1.2-1-2-1c-1.8-0.7-4.4-0.7-4-3.7c0.4-3.2,2.4-4.3,5.4-4.1\n                        c0.6,0.2,1.1,0.5,1.5,0.9c1.4,2,2.7,4,4.1,6c0.8,1.8,1.3,3.3-1.7,2.6C1206.2,348.4,1205.1,348.2,1204,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731525"),
                d:
                  "M1204.1,356.3c-0.4,1.1-1.3,1.4-2.3,1.2c-0.1,0-0.4-0.6-0.3-0.8\n                        C1202.2,355.8,1203.1,355.9,1204.1,356.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("77212C"),
                d:
                  "M1204.9,340c-0.3,0-0.6,0-1,0c-3-1.9-5.4,1.4-8.3,1.2c-1.7-0.1-3.4,1.2-5.1,0.1\n                        c-1.1-0.9-1.5-2-1.2-3.4c1.1-2.3,3.4-2.1,5.3-2.7c1.8,0.1,3.5-0.5,5.3-0.1c1.2,0,2.5,0,3.7,0\n                        C1204.1,336.7,1204.5,338.4,1204.9,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F232D"),
                d:
                  "M1222,250c1-0.3,2-0.7,3-1l0,0c3.1,3.8,7.7,4.5,12,6c1.7,1,3.3,2,5,3c1.9,1.3,1.1,2.3-0.3,3.2\n                        c-1.4,0.9-2.9,1.1-4.5,1.2c-0.7,0-1.4-0.3-2-0.8c-2.9-2.1-6.2-2.4-9.6-2c-4-0.4-7.2-1.9-8.1-6.3\n                        C1218,251.1,1220.5,251.2,1222,250z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2E35"),
                d:
                  "M1237,261.9c1.1-2,5.8,0.5,5-3.9c5.5,0.7,8.3,4.2,9.9,9.1c-2-0.3-4.2,0.4-6-1c-1.2-1.2-3-0.4-4.3-1.4\n                        C1240.1,263.7,1238.1,263.5,1237,261.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2E35"),
                d:
                  "M1237,255c-3.9,1-7.1-1.7-10.7-2.3c-1.9-0.3-1.1-2.4-1.3-3.7C1229.8,249.5,1233.1,252.7,1237,255z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771623"),
                d:
                  "M1205.1,262.8c-1.7,3-5.8,4.1-6.1,8.1l-0.5,0c0,0-0.5-0.1-0.5-0.1c-10.1-1-20.2-2.9-30.2,1.2\n                        c-0.5,0.2-1.2-0.1-1.9-0.2c0.7-5.5,3.1-11.5-4-15c1.7,0,3.4-0.1,5.1-0.1c4.3,0.7,8.6,1.5,12.9,2.2c7,1.5,14.2,0.8,21.1,2.8\n                        C1202.7,261,1204.2,260.4,1205.1,262.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0343F"),
                d:
                  "M1193,271c1.3,0,2.7,0,4,0c-1.9,1.5-2.8,4.5-6,4c0,0,0,0,0,0C1190.2,272.9,1192.1,272.2,1193,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891A21"),
                d:
                  "M1205,260c0-0.3,0-0.6-0.1-0.9c0.5-0.9,1.3-1.3,2.3-1.6c0.5-0.1,1-0.1,1.4,0c6.1,0.6,12.5,0,18.1,3.2\n                        c1.4,2.1,0.1,2.9-1.7,3.3c-4.6,0.7-8.8-1.4-13.2-2C1209.5,261.6,1206.6,263.2,1205,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA868F"),
                d:
                  "M1205,260c2.1,1.5,4.5,0.7,6.8,1.2c0.7,0.4,1.8,0.4,0.9,1.7c-2.6,0-5.1,0-7.7,0c-1.2-1-2.7-0.6-4-0.9\n                        c0.3-0.6-3.8-1.7,0.2-2C1202.5,259.9,1203.8,260,1205,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791722"),
                d:
                  "M1207,258c-0.5,0.8-1.2,1-2.1,1c-2.4-0.4-4.9-0.7-7.1-2c2.5-2.3,5.5,0.1,8.1-1.1\n                        c0.2,0.1,0.4,0.2,0.6,0.3C1207.1,256.8,1207.5,257.3,1207,258z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63171F"),
                d:
                  "M1222,250c-0.7,1.8-2.5,2.1-4,3c-0.7,1.1-0.8,3-2.9,2.5c-3.2-2.7-6,1.4-9.2,0.5v0c0.5-1,1-2,1.7-3.4\n                        c-2.2,0.1-4.2,0.3-6.2,0.4c-1.6,0-3.3-0.3-3-2.3c0.2-1.6,0.6-3.3,3.1-3.8c2.9-0.5,5.7,2.1,8.5,0.1\n                        C1214.3,246.8,1217.7,250.2,1222,250z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("982F39"),
                d:
                  "M1193,271c0.1,1.7-1.5,2.6-2,4c-3.5,2.9-8.4,1.6-12.2,3.8c-0.2,0.1-1.1-0.4-1.1-0.5\n                        c1.2-5.1-3.5-1.7-4.7-3.2c2.8-0.6,5.5-4,8.6-0.5C1184.7,271.1,1189.3,272.5,1193,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("982F39"),
                d: "M1166,278c2-0.7,4-1.3,6-2C1170.8,279.1,1170,283.2,1166,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1288,371c1.6-2.2,2.2-2.1,5,1C1291.2,372.1,1289.5,372,1288,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1826"),
                d:
                  "M1362.1,383.2c-2.3,0.9-3.5,2-5.6,1.4C1357.8,382.8,1359.1,381.7,1362.1,383.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44550"),
                d:
                  "M1695,349c1.7-1.5,3.3-1.5,5,0C1698.3,349,1696.7,349,1695,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3641"),
                d:
                  "M1071,521c0,1.7-0.2,3.3,0,5c0.4,3.1-0.1,7.6,5.3,3.8c1.7-1.2,2.8,1.4,4.5,1.3\n                        c2.4-0.1,4.9,0.2,7.3-0.8c-0.2,2.7-3.9,6.1,1.9,6.8c2.9-2,6-1.7,9-0.3c1.1,0.5,1.9,1.4,3,0.3c1.5,1.6,3.6,2.6,1.4,5.6\n                        c-2,2.6-3,1.6-5.5,0.9c-5.2-1.3-10.7-1.2-15.4,2.4c0.7,2.4,5-1,4.6,3.4c-0.4,3.8-3.4,0.6-4.5,2.7c2.4,4.5,7-1,9.8,1.8\n                        c-0.7,2.6-3.8,0.1-4.9,2.5c3.1,0.6,5.4,3.9,9.1,1.2c0.5-0.4,3.3-0.1,4.4,1.5c-0.7,0.7-1.3,1.3-2,2c-1.1,1.6-2.4,2.9-4.2,3.7\n                        c-1.6,0.1-3.5,1-3.8-2c-0.1-1.3-1.4,0.3-2.2,0c-0.7,0.1-1.4,0-2.1-0.3c-4-2-8.4-2.4-12.7-3.2c-4.9-0.8-9.9-2.5-15.1-1.5\n                        c-0.8,0.2-1.7-0.2-2.3-0.8c-3.1-2.8-6.1-4.2-10.1-0.9c-1.9,1.5-7.2-1.5-8.7-4.3c-0.6-3.4-0.3-6.9-0.3-10.4\n                        c-0.1-3.9,1.9-6.3,5.6-5.9c7.1,0.7,11.7-0.9,11-9.3c0-0.5,0.5-0.8,0.8-1.2c1.8-1.2-0.6-2.8,0.6-4.4\n                        C1060.5,521.7,1065.8,523,1071,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6303C"),
                d:
                  "M1095,564c1-1.4,2.5-2.3,4-3c8.8,3.5,18.1,2.9,27.3,3.9c9.7,1.1,19.7,0.5,29.2,3.6\n                        c1.5,0.5,3.3-2.8,4.5,0.5c-3.4,2.3-7.7-0.4-11,2l0,0c-3.6-0.7-7.3-0.8-11-1c-0.7,0-1.3,0-2,0c-3.9-2.4-8.4-1.5-12.6-2\n                        c-7.2-0.8-14.4-1-21.7-1.5C1099.2,566.4,1097.1,565.2,1095,564z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("872836"),
                d:
                  "M1087,562c0.7,0,1.3,0,2,0c1,1.3,0.7,2.7,0,4c-0.7,0-1.3,0-2,0c-3.5-1.5-7.1-2.5-11-2\n                        c-9.1,0.7-17.9-2.7-27-2c-4.2-1.7-8.7-1.4-13.1-1.9c-8.5-1-17.1-1.5-25.7-2.3c-0.4,0-0.8-0.5-1.2-0.8c-0.6-0.7-0.5-1.4,0-2.2\n                        c3.5-1.2,7-2.1,10.6-1.3c12.7,2.7,25.7,3.6,38.5,5.7c5.7,0.9,11.5,0.9,17.3,1.2C1079.3,560.7,1083.3,560.8,1087,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2736"),
                d:
                  "M1089,566c-1-1.3,0-2.7,0-4c1.4-1,2.8-2.5,2.9,1c0,1.8,2.1,0.6,3.1,1c10.5,3.7,21.5,2.4,32.3,3.5\n                        c3.2,0.3,6.6-1.1,8.7,2.5c-9.6,0.1-19-2.4-28.6-2.7c-3.1-0.1-6.3-0.2-9.4-0.3v0C1095.2,565,1092,566.4,1089,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2736"),
                d:
                  "M1138,570c-0.1-0.7-0.3-2.3,0.3-1.8c3.3,2.4,7.4,0.8,10.6,2.8C1145.3,571,1141.6,571.3,1138,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1098,567c-1.8,1.8-3.9,0.8-5.9,0C1094.1,567,1096,567,1098,567L1098,567z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842734"),
                d:
                  "M1009,555c0,0.7,0,1.3,0,2c-6.4,0-12.8-0.3-19-2c0-0.2,0-0.5,0-0.7c0.4-1.2,1.2-2,2.6-2\n                        c1.9,0.1,3.8,0.1,5.6,0.7c3.4,1,6.7,1.8,10.3,1.6C1008.6,554.7,1008.8,554.8,1009,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M1049,562.2c-0.4,3,2.3,8.5-5.1,6.5c-0.7-1.1,0.3-2.1,0.9-2.9c1.6-2.3,1.1,1.2,2.1,0.9\n                        C1049.2,565.7,1046.8,562.8,1049,562.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M1041.8,566c-0.3,1.2-0.6,2.6-2.1,2.9c-0.9,0.2-1.9-0.9-1.4-1.4c0.8-1,1.5-2,2.1-3.1\n                        C1040.5,564.1,1041.5,565.1,1041.8,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822633"),
                d:
                  "M977,554c3,0,6,0,9,0c0.2,0.3,0.2,0.7,0,1C983,554.6,979.8,556,977,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842734"),
                d:
                  "M986,555c0-0.3,0-0.7,0-1l0,0c3.6-2.2,3.8-2.1,4,1c0,0,0,0.1,0,0.1C988.7,554.7,987.3,556.8,986,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3543"),
                d:
                  "M1055,525c0,2.2-0.3,4.3,0.1,6.5c0.7,4.9-1.6,6.2-5.9,5.5c-0.8-0.1-1.6-0.5-2.4-0.5\n                        c-6.5-0.6-7.7,0.6-7.7,7.1c0,3.1,0,6.3,0,9.4c-8,2.8-15.6,1.7-23-2c-3.7-5-9.8-6.3-15.4-8.6c-1.6,4.6-4,2.7-7-0.4\n                        c-1.5-1.6-3.8-2.3-5.2-4.4c-1.1-1.7-2.3-2.9-0.2-4.6c2.2-1.7,2.8,0.4,3.8,1.6c0.5,0.6,1,1.2,2.7,3.3c-0.8-5.3,0.1-8.8,3-11.6\n                        c0.7-0.7,0.7-2.7,2.2-1.9c2,1,0.4,2.1-0.4,3.1c-0.8,1.2-0.8,2.5-0.1,3.7c1.9-0.8,3.6-1.7,5.5-2.2c2.1-0.5,2.6-1.9,1.6-3.3\n                        c-2.1-2.7,0.3-3.6,1.6-4.7c1.9-1.5,2.4,0.4,3.3,1.6c2.4,3.5,3.9,0.1,4.3-1.2c0.8-2.4,2.5-3,3.3-1.2c2.7,6.3,6.1,0.5,9.1,0.9\n                        c0.5,0.1,1.1-0.6,1.8-1.1c0.6,4.5,4.7,5.2,7.4,7.3c0.6,0.5,1.7-0.1,1.5-0.7c-1.9-4.8,4.2-5,4.8-8.4c0.1-0.9,1.5-1.1,1.9-0.1\n                        c1,3.1,2.8,4.1,6.1,3.6C1052.4,521.6,1053.4,524.3,1055,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("94333E"),
                d:
                  "M1055,502c-1.1,3.7,0.4,6.5,3,9c-3.4,1.6-3.3-2-5.1-3.3c-2.5,3.2-4.5,5.6-9.7,3c-3-1.5-7.9-0.6-12,0.7\n                        c-2.1,0.6-4.6,0.6-6.8,0.7c-4,0.2-8-0.4-12-1.1c-5.2-1-9.7-0.6-13.3,4.4c1.9-2.9-0.8-4.1-1.4-6c-0.4-1.2-1.1-1.2-1.6-0.2\n                        c-1.5,3.2-3.7,2.2-6.4,1.6c-3.9-0.8-8.3-1.5-11.9-0.2c-3.8,1.3-3.8-1-5-3.5c-2.4,3.3-4.8,6.5-8.4,2.1\n                        c-3.9,4.4-7.3-3.1-11.1-0.5c-0.1,0.1-0.2,0.3-0.3,0.4c0.1,1.1-0.7,1.6-1.5,1.2c-1.5-0.6-1.5-2-1.3-3.4\n                        c0.5-2.1,2.9-2.5,3.8-4.5c0.6-1.5,2.8-1.5,3.3-0.5c1.9,3.4,3.7,1.3,5.8,0.5c4.2-1.6,8.3,1,12.6,0.6c0.6-0.1,1.4,0.7,1.9,0.5\n                        c4.8-2.9,8.9,2.1,13.6,0.9c-0.7-2.5-0.8-4.9,3.2-3.3c3.3,1.3,6.2,0.4,9.1-0.9c1.4-0.6,3-0.7,4.2,0.5c1.2,1.3-0.1,2.4-0.3,3.6\n                        c0.9,0,1.6-0.7,2.4-0.6c7.5,0.6,15-1.8,22.5,0c2.5,0.6,5.1-0.7,7.7-0.8C1044.9,502.5,1050,503,1055,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96333F"),
                d:
                  "M951,506c0,3.6,0,3.6,2,3c2.2,0.8,3.2,2.8,2.5,4.6c-0.4,0.9-3.3-0.6-4.4,1.3c-3-3.1-2.8-0.1-3.2,1.7\n                        c-0.4,1.9-2,2.8-3.6,2.9c-1.7,0.2-1.2-1.5-1.4-2.6c-0.3-0.1-0.7,0-1-0.2c-6.2-5.1-8-4.7-12.1,2.7c-0.4,0.8-0.8,1.5-1.8,1.2\n                        c-1.1-0.3-0.6-1.2-0.6-2c0.4-5.6-0.6-6-6.5-4.5c-3,0.7-6.4-0.2-9.6,0.7c-0.4,0.1-1.2-0.2-1.3-0.5c-1.8-7.6-6.3-1-9.4-1.7\n                        c-2.4-0.5-6.2,2.6-6.8-2.6c1.2-2.1,3.3-2.7,5.4-3.1c9.2-2,18.4-4,27.5-6.2c1.4-0.3,2.9-0.8,4.4-0.4c0.8,0.1,1.7,1.2,2.5-0.2\n                        c0.7-0.7,1.5-0.8,2.3-0.3c1,1.8,2.1,3.3,4.5,2.8c1.7,1.3,3.7,1.2,5.7,1.2C948.1,503.9,950.5,503.1,951,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313C"),
                d:
                  "M1016,551c7.6,1.5,15.2,2.3,23,2c1.8,1.2,6,0.6,8.5,0.3c2.9-0.5,6.3-1.4,8.8,1.6\n                        c0.7,0.9,1.8,2.7,2.5,1.9c3.8-3.8,7.1,0.6,10.6,0.6c3.8-0.1,8,0.6,11.8,2.6c1.4,0.8,4.5-1.2,5.7,2\n                        c-14.5-0.3-29.1-0.1-43.3-4.2c-4.2,2.9-8.1-3.3-12.5-0.3c-0.8,0.5-2.6-0.1-3.8-0.6c-6-2.5-12.1-2.5-18.4-1.9l0,0\n                        c-3.7-0.2-7.4-0.4-11-1c-2-0.3-4-0.7-6-1c-0.6-0.7-0.6-1.3,0-2c0.6,0.1,1.2,0.2,1.9,0.4c0.6-6,3-1.8,5-1\n                        c2.3,0.9,4.7,3.5,7.2,0.1c0.1-0.2,3.2-2.1,4.7,0.9C1012.1,553.7,1014.4,552.8,1016,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62C39"),
                d:
                  "M891,492c0-0.3,0-0.7,0-1c5.9-3.4,12.5-2.2,18.8-2.7c2.6-0.2,5.7-1.3,8.2,0.8c0.3,0.2,0.7,0.3,0.9,0.1\n                        c4.5-5.5,10-1.3,15.1-1.6c1.7-0.1,3.6,0.4,5.4,0.1c2.9-0.5,4.9,0.5,5.9,3.3c0.2,1-0.3,1.9-0.9,2.7c-2.5,3-5.2,4.5-9.5,3.2\n                        c-2.2-0.7-5.7-2.5-7.9,0.9c-0.3,0.4-0.9,0.4-1.4,0.2c-6.4-2.8-13,0.8-19.6-0.5c-2.6-0.5-5.9-0.3-8.2,1.4c-4.1,3-5.8,1-6.9-2.8\n                        C891,494.7,891,493.3,891,492z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3340"),
                d:
                  "M891,496c1.9,2.9,3.7,3.2,6.9,1.3c3.3-1.9,7.4-1.8,11.2-1.2c3.5,0.6,7,0.1,10.3-0.6\n                        c2.8-0.6,4.9-0.5,6.4,1.8c2-0.8,0.6-2.6,1.2-3.2c6,0.2,11.8,4.6,17-1.2c2.8,5.2-2,5.5-4.7,7.1c-1.1,0.7-2.3,0.8-3.3-0.1\n                        c-0.8,0-1.6,0.2-2,1c-0.7,0.5-1.3,0.6-2,0c-1.5-0.2-2.8,0.3-4,1c-6-0.6-11.9-2.1-17.7,1c-1.4,0.7-2.9,1.4-4.3,0.7\n                        c-2.3-1.2-3.5-0.5-4.7,1.7c-1,1.8-7.4,2-9.3,0.7C890,502.8,891.4,499.3,891,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3845"),
                d:
                  "M892,506c1.9,0.7,7.2-1.6,9.1-3.3c0.9-0.8,2-3.5,4.2-0.7c1.8,2.2,3.8,0.4,5.6-0.9\n                        c3.3-2.3,13.9-1.8,17.1,0.8c-11.3,2.7-22.8,4.6-34,8C892.3,509.2,890.3,508.5,892,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313C"),
                d:
                  "M981,551c-1.7,0.2-3.3,1.4-5,0c-1.5-2.3-3.9-1.9-6.2-2c-9-0.3-18-1-26.8-3c0.2-1.5,0.6-1.9,2.3-1.3\n                        c1.7,0.7,3.9,2.5,5.5-0.6c0.6-1.1,1.2,0.2,1.9,0.6c4,2.2,9,3.5,12.8,2.8c5-1,8.8,0.1,13,1.8c0.8,0.3,3-1.4,5-0.6\n                        c0.9,0.3,5.3,1.2,6.4,2.3C987,552.2,984,552,981,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E303B"),
                d:
                  "M981,551c3,0,6,0,9,0c0.7,0,1.3,0,2,0c0,0.7,0,1.3,0,2c-0.7,0.7-1.3,1.3-2,2c-0.6-3.4-2.7-0.5-4-1\n                        c0.6-1.5,0.3-2.4-1.4-1.7C982.8,553,981.8,552.7,981,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3543"),
                d:
                  "M1015,519.8c-0.4,0.2-0.8,0.5-0.8,0.4c-0.3-0.3-0.7-0.7-0.7-1.1c0-0.6,0.6-0.8,1-0.5\n                        C1014.7,518.8,1014.8,519.4,1015,519.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1102,537c-0.2,1.3-1,2.6-2.2,1.6c-3-2.7-6.6-1.1-9.8-1.6c-0.2-2.3,1.1-4.1,2.2-6.4\n                        C1094.8,534.1,1099.1,534.4,1102,537z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M1090.1,523c-0.3,0.4-0.5,1.2-0.9,1.4c-0.9,0.3-1-0.6-1.1-1.2c-0.1-0.7,0-1.4,0.7-1.6\n                        C1089.8,521.3,1089.7,522.3,1090.1,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1111.7,527.8c-0.1,0.8-0.6,1.2-1.3,1c-0.4-0.1-0.9-0.5-1-0.8c-0.2-0.7,0.2-1.3,1-1.4\n                        C1111.1,526.6,1111.5,527.1,1111.7,527.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1101.6,530.3c-0.3,0.4-0.5,1-0.9,1.1c-0.7,0.3-1.2-0.2-1.2-0.9c0-0.3,0.5-0.8,0.9-0.9\n                        C1100.8,529.5,1101.2,530,1101.6,530.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F3B"),
                d:
                  "M951,506c-2-1.8-4.6-1.4-6.5-0.8c-2.8,0.9-3.4-0.7-4.5-2.2c-0.3-0.7,0.2-1.8,0.5-1.7\n                        c3.2,1.3,1.1-2.1,2.3-2.5c0.6-0.3,1.3-0.5,2-0.5c4.6,1.1,9.3,2.7,13.4-1.2c0.6-0.5,1.2-0.7,1.9-0.8c5.7-0.7,11.5,0.4,17.1-1.1\n                        c3.7-1,4.7-0.3,6.2,2.9c0.2,0.5,0.6-0.1,0.9-0.2c4.2-0.9,8.3-2.7,12.4,0.5c1.1,0.9,2.3,0.6,2.6-1c1-4.3,4-2.9,6.3-1.8\n                        c3.2,1.5,6.2,1.4,9.3,0.4l0,0c3-1.6,5.6,0.8,8.3,1.2c4.1,0.6,7.5,0.3,10.7-2.2c3.1,2.5,8.3-1.3,11,4.3c1-4.9,3.2-5.6,7.3-3.9\n                        c3.9,1.7,8.3,3.4,12.3-0.3c0.1-0.1,0.3-0.2,0.4-0.3c3.8,6,9.8-3.9,13.7,1.8c0.1,0.1,0.3,0.1,0.5,0.1c3.8,0.2,7.5-4.5,11.4-0.5\n                        c3.4-4.1,6.7-1.3,10,0.1c2.1,0.9,4-0.1,5.2-1.6c0.7-0.9,1.2-1.9,2.5-2.2c1.3,1.1-0.9,2.5,0.4,3.6c3.4-0.8,6.7-2.7,10.4-1.3\n                        c1.8,4,5.4,1.1,8,2c0.9,4.3-3,2.6-4.1,2.5c-2.2-0.1-4.1-1.1-5.6,1.4c-0.2,0.4-1.3,0.8-1.7,0.6c-6.1-2.3-12.3,1.5-18.4-0.4\n                        c-0.1,0-0.2,0.2-0.4,0.4c1,2.6,3.4-0.6,4.8,1.5c-1.8,1.5-4.4,1.6-5.6,0.5c-4.4-4.2-8.4-2.4-12.7-0.2c-1.5,0.8-3.6,0.8-5.2,0.5\n                        c-3-0.6-5.6-1.1-6.3,2.9c-0.1,0.7-1.3,1.1-1.5,0.7c-1.5-5.1-4.8-0.9-7-1.1c-3.6-0.3-5.4-3.3-8.3-4.3c-4.4,2.4-9.3,1.4-13.9,2\n                        c-6.4,0.8-12.8-1-18.6,0.1c-4.9,0.9-9.7-0.2-14.4,1c-0.8,0.2-1.1,2.2-2.3,0.6c-0.6-0.8-0.3-1.5,0.2-2.2\n                        c0.5-0.7,1.9-1.2,0.7-2.3c-1-0.9-2.2-0.4-3.2,0.2c-3.9,2.3-7.7,2.6-11.7,0c-0.8,1.9,1,2,1.5,2.8c0.5,0.8,0.8,1.5,0.2,2.3\n                        c-0.6,0.8-1.7,0.9-2.2,0.2c-2.2-3-7.5,1.7-8.9-3.6c-0.2-0.6-1.1,0.3-1.4,0.8c-0.9,1.4-2.7,1.8-3.5,1.1\n                        c-3.2-2.5-7.5,1.4-10.6-2.1c-0.6-0.6-3.2,0.1-4.6,0.8c-2.1,1-4.2,4.7-5.4-0.8c-0.1-0.7-2.5-1-2.2,0\n                        C955.8,506.8,952.4,505.1,951,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F3B"),
                d:
                  "M1150,499c0.6-1,1.2-2.9,2-2.5c4.6,2.3,8.4-0.1,12.5-1.5c1.6-0.6,1.7,2,2.5,3.1\n                        C1161.5,500.5,1155.9,502.8,1150,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F3B"),
                d:
                  "M1137,500c1-0.1,2.1-0.2,2.4-1.3c0.9-2.9,3.2-1.9,5.1-1.9c3.3-0.1,1.5,2.9,2.5,4.2\n                        C1143.5,502.6,1139.8,505.6,1137,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F3B"),
                d:
                  "M1168,498c0.6-0.2,1.2-0.4,1.7-0.7c1.1-0.7,0.8-3.4,2.7-2.5c1.5,0.6,1.6,2.6,1.5,4.3\n                        c-1-0.1-1.2-2.6-2.6-1c-0.8,0.9-0.4,2.2,0.4,3.2c1,1.2,3.4,0.6,3.9,2.7C1170.1,505.9,1169.5,501.4,1168,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F3B"),
                d:
                  "M1148,501c0.4-1,1-1.6,2-2c-0.1,2.4,2.3,2.9,3.9,4.5C1150.7,504.5,1149.9,501.6,1148,501z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F3B"),
                d:
                  "M1131,497c1.3-1.4,2.7-1.4,4,0C1133.7,499.4,1132.3,499.4,1131,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961D2B"),
                d:
                  "M1017,477c-1.3,1-2.3,3.7-4.5,1.1c-0.2-0.2-0.6-0.3-0.9-0.4c0.7,4.4-3.2,2.1-4.7,3.2\n                        c-2.3,1.8-5.1-0.7-7.5,0.9c-0.1,0.1-0.3,0.1-0.4,0.2c-2.1,2.1-4.6,2.9-7.7,2.6c-3.8-0.4-7.6,0.6-11.2,1.6\n                        c-8.6,0.3-17.2-1.5-25.6-0.8c-9.5,0.7-18.8-0.5-28.3-0.5c-9.8,0.1-19.5,0.9-29.2,1.7c-2.5,0.2-4.6-0.4-6-2.5l0,0\n                        c-2-2.3-2-4.7,0-7v0c0.7-0.6,1.3-0.6,2,0l0,0c0.9-0.3,0.2,2.4,2.4,0.8c3.9-3,9-1.7,13.4-1.1c4.5,0.6,8.6-0.9,12.9-0.6\n                        c2.4,0.2,4.8-0.7,7.3-0.1c6.3-0.4,12.6,0,18.9,0c1.7,0,3.2-0.3,4.8-1c2.9-1.3,6.1-2.5,9.1,0.1c0.3,0.3,1,0.6,1.3,0.5\n                        c7.5-2.7,15.5,1.3,22.9-1.7c3.5,1.1,6.7-0.4,10-1c0.2,1.2-0.3,3.2,1.9,2.5C1004.5,473.1,1010.7,475.2,1017,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M929,476c-5.6,2.7-12.2-0.2-17.6,3.4c-2.6-4.2-6.7-2-10.2-2.1c-3-0.1-6.7-0.2-7.2,4.6\n                        c-1.8-1.7,0.2-3.6-1.1-5c1.8-2.6,3.7-3.1,7.1-2.3c3,0.7,7.9,4.1,9.8-2.3c0.2-0.7,2-0.6,2.2-0.1c1.7,6,6.4,1.6,9.6,2.7\n                        c2.1,0.7,4.8-0.9,7.2-0.9C931.7,474.2,928.9,475.3,929,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891729"),
                d:
                  "M1054.4,468.8c-4.9,0.6-9.5-3.2-14.9-0.6c1.1-4.8,6.3-1.4,7.3-4.9c2.6,1.4,5.3,2.9,7.9,4.3\n                        C1054.5,468,1054.4,468.4,1054.4,468.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M891,477c0,2.3,0,4.7,0,7c-1.4,0-2.4-0.6-2.9-2.1c-0.8-2.6-1.4,0.2-2.1,0.1c0-2,0-4,0-6\n                        C888.3,473.1,889.1,478,891,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1013,450c2.3,2.2,4.7,0.9,7,0c-2.1,4-2.1,4-10.2,2.6C1009.9,450.5,1012.4,451.5,1013,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891825"),
                d:
                  "M996,473c-3.1,2.4-6.4,3.7-10,1C989.3,473.3,992.5,471.5,996,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M893,477c-0.7,0-1.3,0-2,0c0.1-1.2-0.3-2.6,0.8-3.7C892.3,474.7,892.6,475.8,893,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1031.2,437.5c-1.2,0.6-1.6,1-2.2,1.1c-0.2,0-0.7-0.6-0.7-0.9c0.1-0.6,0.5-1.2,1.3-1.1\n                        C1030,436.7,1030.4,437,1031.2,437.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2B37"),
                d:
                  "M1015,496c-1,2.3-1.7,5.7-4.3-0.3c-0.5,2.1-0.8,3.3-1,4.5c-2.2,0-2.2-2-3-3.3c-1.4,2.1-6.6-5.8-6,2.3\n                        c0.1,1.6-2.2,2.5-3.4,1.3c-4.9-4.9-9.9-1.9-15-0.6c-0.9-1.5,1.6-2.3,1-4c-7.7,1.6-15.4,2.2-23.2,1.2c-0.1-0.7,0.2-1.5,0.8-1.6\n                        c8.2-1.4,16.1-3.9,24.5-4.3c0.7,0,1.2,0.4,1.7,0.9c-0.5,1.2-3.1,1.8-1.3,3.5c1.2,1.2,2.3-0.4,3.4-1c4.7-2.6,10.4-3.6,15-2.7\n                        C1007.5,492.5,1010.8,495.8,1015,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2430"),
                d:
                  "M987,492c-9.1,1-18,3.2-27,5c-0.3,0.3-0.7,0.7-1,1c-2.3-0.2-1.7-1.7-1.3-3.1c1.5-1.5,3.7-1.2,5.5-2\n                        c10.9-2.5,21.7-4.9,32.6-7.4c1.5-0.3,2.9-0.8,4.3,0.4c1.5-0.9,3.2-1.1,5-1c0.7,1.3,1.3,2.7,2,4\n                        C1000.2,489.3,993.2,487.6,987,492z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2B37"),
                d:
                  "M1034,495c-2,4.9-6,4.1-10,3.8c-3.3-0.3-6.1-1.5-9-2.8c4.6-2.1,9.3-3.1,14.3-2.2\n                        C1030.9,494,1032.3,495.2,1034,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2D39"),
                d:
                  "M1239,491c-1.7-0.2-3.5,0.5-5.9-0.9C1235.8,488.7,1237.4,489.9,1239,491L1239,491z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D2D37"),
                d:
                  "M1000,486c-10.9,2.5-21.7,4.9-32.6,7.3c-1.4,0.3-2.9,0.5-4.4,0.7c-2.1-0.8-6,2.1-6.1-2.9\n                        c2.2-1.9,4.8-2,7.6-2.3c5.2-0.6,10.3-2.5,15.4-3.8c4.3-1.2,8.5-2.7,13.1-1.5c2.3,0.6,3.6-2.3,5.9-1.5\n                        C999.3,483.3,999.7,484.7,1000,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681623"),
                d:
                  "M964.9,408.9c-1,0-1.9,0.1-2.9,0.1c-7.3,0-14.7,0.7-21.9-1.2c-4.4-2.5-9.4-4.1-12.2-8.8\n                        c1.3,0.3,2.7,0.6,4,1c9.1,3.4,18.3,5.4,28,3c0.3,0,0.7,0,1,0c8.6-2.2,17.2-4.6,26-6c0.3,0,0.7,0,1,0c1.9-0.8,3.8-1.4,5.5-2.8\n                        c1.5-1.3,3.4-2.6,5.7-1.2c0.1,0.2,0.2,0.5,0.3,0.7c0,0.1-0.2,0.2-0.4,0.3C988.5,400.8,977.3,406.2,964.9,408.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480E1B"),
                d:
                  "M927,391c4,0,8-0.1,12-0.1c8.1,0.9,16.2,0.5,24.3,0.5c1.8,0,3.7-0.7,4.8,1.5c-0.1,0.3-0.1,0.9-0.3,0.9\n                        c-7,1.2-13.5,3.8-21.3,2.5c-6.6-1.1-12.4-5.9-19.5-4.4c-0.3-0.2-0.4-0.4-0.3-0.6C926.8,391.2,926.9,391,927,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56111A"),
                d:
                  "M968,393c-6.2,0-12.4,0-18.6,0c-3.6,0-7.1-0.4-10.4-2c1.4-0.3,2.9,0.3,4.1-0.9\n                        c3.9-2.7,8.3-0.9,12.4-1.5c1.7,0,3.5,0,5.2,0c0.8,0,1.7,0,2.5,0c4.2,0,8.3,0.9,12.4,1.6c1.1,0.6,1.8,1.4,1.4,2.8\n                        C974,393,971,393,968,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("500F1B"),
                d:
                  "M960,403c-7.7,3.9-21.8,2.4-28-3C941.3,401.7,950.6,402.3,960,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56111A"),
                d:
                  "M999.1,393c-4.1,0.2-6.7,4.7-11.1,4c1.1-0.9,2.3-1.7,3.6-2.8c-2.9-2.1-5.9-0.8-8.6-1.2\n                        c-0.7-4,2.5-3,4.4-3.3c3.5-0.5,7.3,0.7,10.4-2c0.6-0.6,1.3-1,2.2-0.8c0.7,0.7,1.4,1.4,2,2.1\n                        C1000.2,389.7,999.8,391.5,999.1,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("500F1B"),
                d:
                  "M987,397c-8.6,2.3-16.8,6.2-26,6c0-0.6-0.1-1.8,0-1.8C969.7,400.1,978.1,396.6,987,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M927,391c0,0.3,0,0.6,0,0.9c-8.7,1.4-17.4,2.6-26-1C909.7,391,918.4,391,927,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671419"),
                d:
                  "M998.9,387.8c-1.5,3.8-4.8,2.7-7.7,3.3c-2.8,0.5-6.3-2-8.2,1.9c-2,0-4,0-6,0c-0.3-0.7-0.7-1.3-1-2\n                        c0.6-1,1.5-1.6,2.6-1.9c3-0.7,6-0.3,9-0.4c2.3-0.1,4.6,0.3,6.9-0.5C995.9,387.8,997.4,386.9,998.9,387.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871826"),
                d:
                  "M909,381.2c0.1-0.3,0.1-0.6,0-1c1.3-0.4,2.6-0.8,4-1.2c0.2,0,0.4,0,0.7,0c1.4-0.1,2.7-0.1,3.7,1.1\n                        c0.2,0.8,0.1,1.6,0.2,2.4c0.2,1,0.6,2,1.7,2.1c1.3,0.1,1.4-1.1,1.7-2c0.3-0.8,0.5-1.5,1.4-1.9c2,0.5,3.9,1.1,6,0.9\n                        c8.1,0,16.3,0,24.4,0c4.3-0.2,8.5,0.8,12.8,0.4c2.9-0.3,5.5,2.5,8.7,2.9c1.9,0.2,1.1,2-0.3,2.8c-1.7,0.9-3.6,0.7-5.4,0.7\n                        c-12.1-0.1-24.2,0.5-36.2-0.9c-0.8-0.1-1.7-0.1-2.4,0.4c-6.3,0-12.7,0.1-19,0.1c-3,0.5-4.9-1.3-7-3\n                        C905.6,383.7,907.8,383.1,909,381.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941C27"),
                d:
                  "M930,387.9c1.5-1.5,3.4-0.9,5.2-0.9c11.4-0.1,22.9,0,34.3,0c1.6,0,3.2,0,5.6,0\n                        c-7.4-4.5-14.9-3.3-22.1-4c-0.3-0.7-0.1-1.2,0.5-1.6c4.5-1.6,9.1-0.5,13.6-0.8c9.3,0,18.6-0.7,27.8,1.9\n                        c1.7,0.3,3.4,0.5,4.9,1.4c0,0,0.4,0.1,0.4,0.1c-0.1,0.7-0.2,1.4-0.3,2.1c-8.6,4.3-18,3.1-27,3.1c-11.6,0-23.3,0.2-34.9-0.6\n                        c-1.3-0.1-2.7,0.3-3.9-0.5C932.7,388,931.4,388,930,387.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9434C"),
                d:
                  "M934.1,388.1c13.7,0,27.5-0.2,41.2,0c8.3,0.1,16.4-0.8,24.6-2c0.1,0.3,0.1,0.5,0.1,0.8\n                        c-0.3,0.3-0.7,0.6-1,0.9c-1.3,0.4-2.6,0.8-3.8,1.2c-2.2,1.2-4.9-0.4-7.1,0.9c-3.3,0-6.6,0-9.9,0.1c-3.3,0.7-6.5-0.3-9.8-0.5\n                        c-1.8-0.1-3.6-0.6-5.3,0.4c-0.7,0-1.3,0-2,0c-1.7-0.9-3.3-0.9-5,0c-4.3,0-8.7,0-13,0c-2.1-2-4.5,0-6.8-0.6\n                        C935.2,389.2,934.5,389,934.1,388.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A292B"),
                d:
                  "M909,381.2c0.7,4.3-2.3,3.9-4.9,3.9c-0.3-0.1-0.7-0.1-1-0.2c-2.1-2.7,0.1-3.7,2-4.8\n                        C906.3,380.5,907.6,380.8,909,381.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63131D"),
                d:
                  "M1191,341c3.1-0.6,6.2-1.3,9.3-1.9c1.4-0.3,2.9-1.2,3.7,0.9c-2,0.1-4.1,0.2-4.9,2.6\n                        c-0.9,2.6,1.4,3.3,2.9,4.4c-3.3-0.3-6.7-0.7-10-1c-0.4,0.3-0.9,0.4-1.3,0.1c-1.1-1.3-2.8-2.1-3.2-3.9\n                        C1188,340,1189.3,340,1191,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881827"),
                d:
                  "M1191,341c-1.4,0.1-2.9-0.1-2.9,2c0.7,1,2.1,1.4,2.3,2.8c-0.2,0.7-0.8,0.9-1.3,1.2l-0.5,0l-0.5,0\n                        c-0.3-0.3-0.7-0.7-1-1c-1.5-2-3.5-2.6-5.9-2.6c-2.1,0-4.2,0.3-6.1-1.1c-0.3-0.5-0.3-1,0-1.5c4.9-1.4,10-1.6,14.9-2.9\n                        C1190.3,338.9,1190.6,339.9,1191,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("77212C"),
                d:
                  "M1189,347c0.3-0.3,0.7-0.7,1-1c0.3-0.5,0.7-0.5,1,0c0.3,0,0.7,0,1,0\n                        C1191.8,348.6,1190.3,347.5,1189,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1103,368c-2.7,2.7-5.8,2.5-9,1c-0.2-0.8-0.9-2.3,0.9-1.5C1097.6,368.7,1100.3,368.5,1103,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1526"),
                d:
                  "M1012.8,372.5c2.1-1.3,3.8-0.7,5.6-0.4c0.9,0.1,1.1,0.7,0.7,1.4c-0.4,0.7-0.8,1.5-1.4,1.9\n                        c-0.6,0.5-1.4,0.3-1.4-0.6C1016.6,371.7,1013.7,373.8,1012.8,372.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881827"),
                d:
                  "M1151,357c-4.8,0-9.5-0.1-14-2c4.2-1.4,8.2-3.4,12.6-3.8c2-0.2,4.2-0.4,4.8,2.4\n                        c1.1-3.6,2.6-6.8,7.4-5.6c2,0.5,3.9-1.5,5.9-0.4c-1.3-1.5-3.5,1-4.8-1c-1.3-2,0.2-5.3,2.5-5.7c1.8-0.3,3.6-0.2,5.4,0.3\n                        c3.5,1.7,7.6,1.8,11.1,3.7c-0.2,1.1,0.5,3-1.9,2.4c-3-0.8-5.9-1.7-6,3.2c0,0.8-2.2,2.4-2.6,2.1c-6.9-3.4-4,1.9-4.1,4.3\n                        C1161.9,357,1156.5,357,1151,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731525"),
                d:
                  "M1182,345c-4,0.2-7.7-0.6-11-3c1.3-1.3,2.6-1,3.9-0.1c2.8,0,5.5,0.2,8.3,0c3.1-0.2,4.1,1.2,3.7,4\n                        C1185.2,346.1,1183.5,345.9,1182,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961929"),
                d:
                  "M1175,342c-1.3,0-2.6,0-3.9,0.1c-1.5,0-3-0.2-4.5,0.1c-0.9,0.2-3.7-1.6-2.3,1.9c0.5,1.1-1.2,3.5,2,2.4\n                        c0.7-0.2,1.8,0.6,2.7,1.2c-3.4-0.7-6.1,4.2-9.7,1c-0.6,1.7-3.5,2.5-3.3,3.5c1.1,5-2.4,2.2-3.9,3c-0.3-1.5,1.7-1.4,1.2-2.6\n                        c-5.8-1.5-10.5,3.7-16.2,2.6c-3.3,0-6.6,0-10,0c-8.1-1-16.2-2-24.4-3c-2.6-0.3-5.3,0.9-7.7-1c4-2.7,8.5-1.2,12.8-1.5\n                        c6.9-0.1,13.8-0.1,20.7,0c2.5,0,4.9-0.3,7.1-1.4c6.1-1.3,12-3.8,18.4-2.7c-1.5-0.3-3.5-0.1-3.8-1.6c-0.5-2,1.9-1.8,3.1-2.4\n                        c1.2-0.3,2.3-0.7,3.5-1.1c0.5-0.2,1-0.3,1.5-0.4c1.6-0.3,3.2-0.3,4.8-0.3c4,0.5,8.2-1.3,11.9,1.4\n                        C1175,341.4,1175,341.7,1175,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681322"),
                d:
                  "M1007,365c-1.3-0.1-2.7,0.2-3.4-1.4C1005.5,362.4,1006.2,363.8,1007,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A51E2B"),
                d:
                  "M1154,341.9c-0.6,1.3-2.1,0.8-3.2,1.6c1.5,0.7,2.9,1.3,4.7,2.1c-6.5,1.2-12.5,2.3-18.5,3.4\n                        c-0.6-0.6-1.1-1.8-1.8-1.5c-7.1,3.2-14.4,0.3-21.6,0.9c-2.3,0.2-4.2,0.6-5.5,2.5c-4.3,0-8.7,0-13,0c-2.7-0.4-5.5,0.9-8-1\n                        c-0.3-1.9-1.8-1-2.8-1c-12.6,0.2-25.1,1.2-37.7,2.3c-4.1,0.3-8.3,0.3-12.4,0.6c-2.1,0.1-4.3-0.1-3.1-3.3\n                        c2.1-1.2,4.4-1.1,6.8-1.1c2.6,0.1,5.3,0.1,7.9-0.5c31.7-2.3,63.5-4.3,95.3-6.4C1145.3,341.1,1149.9,339.4,1154,341.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52434"),
                d:
                  "M1031,349.1c0.7,3,3.1,1.8,4.9,1.7c17.6-0.8,35.2-3.5,53.4-2.8c-1,0.8-1.7,1.4-2.3,1.9\n                        c-13.7,0.9-27.5,1-41.2,2.8c-4.2,0.5-8.5,0.2-12.8,0.2c-2.9,0.9-5.8,0.3-8.7,0.4c-1.6-0.9-4.1,0.4-5.4-2.2\n                        c2.9-1.6,6.1,0,8.9-1.2c0.6-0.3-0.5-0.6-0.1-0.1c-2.7,0.7-5.3,1.1-7.9-0.3C1023.4,346.8,1027.2,347.7,1031,349.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991F31"),
                d:
                  "M1024,353c3,0,6,0,9,0c-0.7,0.3-1.5,1-2.2,0.9c-8.3-0.6-16.5,1.5-24.8,1.1c-4.9,1.4-10.1-0.4-15,1\n                        c-1,0-2,0-3,0c-3.2,1.4-6.8-0.4-10,1l0,0c-1.4,0-2.4-0.7-3-2c0.6-0.7,1.3-1.1,2.1-1.2c14.3-1,28.6-3.9,43-1.4\n                        C1021.4,352.7,1022.8,352.2,1024,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D2C"),
                d:
                  "M991,356c4.9-2.2,10-0.4,15-1C1001.1,357.2,996,355.5,991,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D2C"),
                d: "M978,357c3.2-2,6.7-0.6,10-1C984.8,358,981.3,356.6,978,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681321"),
                d:
                  "M935,370c-0.3,0.3-0.7,0.7-1,1c-1.3,0.8-2.6,1.4-3-0.9c15.2-9.6,31-7.9,47-2.2c1.9,1.8,3.9,3.6,5,6.1\n                        c-4.1,1.4-8.1,0.4-12-0.8c-0.8-3.8-3-5.3-7-5.1c-7.3,0.3-14.5-0.2-21.8,0.5C939.7,368.8,937.6,371,935,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101F"),
                d:
                  "M931,370.1c0.8,1.1,1.9,0.9,3,0.9c0.2,0.7,0.9,1.7-0.4,1.9c-1.6,0.3-2.9-0.3-3.6-1.9\n                        C930.3,370.7,930.7,370.4,931,370.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56C72"),
                d:
                  "M995.8,383.1c-9.5-0.4-19.1-1.8-28.6-1.2c-0.3-0.2-0.4-0.5-0.4-0.7c0-0.3,0.1-0.4,0.2-0.4\n                        c2-2,5,0.3,7-1.7c5.1-0.5,10,0.3,15,1.1c1.5,1.1,3.4-0.3,4.8,0.9c1.1,1.4,2.8,0.3,4.1,1C998,384,996.9,383.5,995.8,383.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("581119"),
                d:
                  "M971,373c4,0.6,8.1-0.6,12,1c1.3,0,1.5,0.7,1.4,1.9c-0.2,1.5-1.3,1.1-2.2,1.1c-2.7,0-5.5,0-8.2,0\n                        c-0.5-2.2-2.5-2.9-4-4C970.3,372.6,970.7,372.6,971,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56C72"),
                d:
                  "M933,377c6,0,12,0,18,0c0.9,0,1.8,0.1,2.8,0.1c6,1.8,12.4,0.1,18.5,1.8c-3.4,1.9-7.2,1.2-10.9,1.5\n                        c-2.7-0.1-5.5,0.1-8.2-0.3c-4.4-1.3-8.8-0.5-13.2-0.7c-2.4-0.2-4.9,0.6-6.9-1.4C933,377.6,933,377.3,933,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M960.9,379c3.8,0,7.5-0.1,11.3-0.1c0.6,0,1.2,0.1,1.8,0.1c0.3,1,0.7,1.9-1,2c-2.1,0-4.2,0.1-6.3,0.1\n                        c-1.1,0.6-2.2,0.3-3.3,0.3c-0.9-0.3-1.8-0.5-2.5-1.1C960.7,379.9,960.7,379.5,960.9,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45867"),
                d:
                  "M993.9,381c-1.6-0.2-3.5,0.5-4.8-0.9C990.7,380.1,992.5,379.5,993.9,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45867"),
                d:
                  "M995.8,383.1c0.8-0.2,1.7-0.2,2.2-1.1c1.2,0.1,1.6,0.8,1.8,1.9C998.3,384,997,384.1,995.8,383.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B21C2C"),
                d:
                  "M358.2,345.1c-2.7-0.8-4.9,0.9-7.2,1.7c-3,0.9-3.4,0.6-3.7-2.7c-0.2-2.6-0.7-5.3-1.6-7.7\n                        c-1.2-3.5,0.4-3.7,2.9-4.2c1-0.2,3.6,0.8,2.4-2.1c0.5-1.4,1.7-2.1,3-2.3c6.4-1.3,12.8-3.3,19.4-1.7c2.8,3.8,2.4,7.4-0.5,10.9\n                        c0,0,0,0,0,0C368.1,339.9,363.6,343.3,358.2,345.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1932"),
                d:
                  "M299,343c0-0.3,0-0.7,0-1c3.9-3,9-1.7,13.1-3.6c3.6-1.7,7.2-2.5,11-1.5c0.9,2-0.4,2.8-2,3\n                        c-2.2,0.2-1.4,1.7-1.6,2.9c-1.4,5.3-4.5,2.5-7.5,1c-0.2,2.8,1.8,5,0.9,7.4c-0.1,0.7-0.5,1.3-1,1.9c-1.8,2.7-3,5.7-5.8,7.9\n                        c-1.5,1.2,1.2,0.7,1.8,1.1c-2.1,1.6-4.5,2-7,2c-1-0.3-2-0.7-3-1c-0.9-2.4-0.7-5-1.4-7.5c-0.3-1.1-0.2-2.3-1.5-2.8\n                        c-1.5-0.6-1.9-1.8-1.4-3.2c0.5-1.3,0.2-3.3,2-3.7c2-0.4,2,1.7,2.6,3c0.2,0.5,0.4,0.9,0.7,1.2c2.1,1,1.1-1.1,1.6-1.7\n                        c0.4-1.7,2.1-1.7,3.3-2.6C302.3,344.7,300.1,344.9,299,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921927"),
                d:
                  "M372.8,326c-7.3,1.2-14.8,1.3-21.8,4c-3,0.2-5.9,1.4-9,1c-0.5-0.6-1.5-0.3-2-1c0-0.3,0-0.6,0-1\n                        c0.1-0.2,0.2-0.5,0.3-0.7c2.1-4.9,5.5-6.7,11-6c6.2,0.8,12.5,0.5,18.7,1.7c0.7,0.3,1.4,0.5,2.1,0.8c1.1-0.2,2.6-0.8,2.8,0.6\n                        C375,326.6,373.7,326.5,372.8,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921A2F"),
                d:
                  "M340,330c0.8,0,1.5,0.2,2,1c-1.2,0.7-1,1.9-1.1,3.1C339.6,332.9,340.1,331.4,340,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A91A32"),
                d:
                  "M312,353c0-0.7,0-1.3,0-2c1-1.9,1.2-4.3,4.4-4.3c1.9,0,1.8-2.4,2.6-3.7c-0.4-1.2-0.8-2.4-1.2-3.6\n                        c1.6-1.3,4.7,0.9,5.2-2.4c4.7-1.5,9.3-4.4,14.5-1.8c1,1.8,1.1,3.9,1.4,5.9c-0.4,2.6,1.3,5.2,0.1,7.8c-3.2,3-1.3-0.9-2.7-2.1\n                        c-0.4,7.6-6.4,6.8-11,7.4C321,355,316,358.1,312,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63748"),
                d:
                  "M339,349c-0.3-2.7-0.6-5.4-0.9-8.1c0.6-0.5,0.1-1.6,1-2c1.8,3.3,0.6,6.7,0.8,10.1\n                        C339.6,349,339.3,349,339,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE7C86"),
                d:
                  "M318,371c0.5-0.9,1.4-1.4,2.3-1.3c0.6,0,0.4,0.7,0.2,1.1C319.7,371.9,318.9,371.3,318,371L318,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2536"),
                d:
                  "M328.1,316.9c9.8,1.4,19.8,1.2,29.6,3.1c3.6,0.7,7.2,1.1,10.4,3c-0.9,1-2,1.1-3.2,0.9\n                        c-6-1.2-12-1.4-18.1-2c-3.2-0.4-6.1-0.3-8.9,0.9c2.4,1.5,4,3.2,2.1,6.2l0,0.1c-0.6-0.3-1.3-0.7-1.9-1c-2.5-0.3-2.3-2.5-3-4.1\n                        C333.3,321,330.3,319.3,328.1,316.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B131A"),
                d:
                  "M335.1,323.9c1,1.4,2,2.7,3,4.1c-0.4,1.7,2.1,3.4-0.1,5c-0.8,0.3-1.3-0.2-1.7-0.8\n                        c-0.8-2.1-3-3.6-2.3-6.2C334.8,325.6,335,324.8,335.1,323.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C04C59"),
                d:
                  "M337,332c0.3,0.4,0.6,0.7,0.9,1.1c0.4,1.9,0.8,3.9,1.1,5.8c-0.3,0.7-0.7,1.4-1,2\n                        c-0.4-2-0.8-3.9-1.2-5.9c-0.4-0.5-1.1-0.7-1.4-1.3c-0.2-0.7-0.1-1.3,0.4-1.9C336.3,331.6,336.7,331.6,337,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961831"),
                d:
                  "M299,351c-3.1-0.2-1.2-3.4-3.3-5c0.6,2.3-0.8,3.5-1.5,5c2.2,0.9,5.1,0.9,3.6,4.6\n                        c-1.1,2.7,1.5,1.6,3.1,2.3c-3,0.8-1.9,3.4-2.9,5.1c-4.6,1.2-9.3,2.1-13.8,3.6c-4.3,1.4-4,0.9-6.1-2.8\n                        c-2.6-4.4-2.4-8.4-1.2-12.8c0.7-2.3,6.1-5.4,8.5-4.6c1.4,0.4,3.2-0.6,3.3-0.8c2.8-3.5,6.6-2.4,10.1-2.5c0.5,0.1,1.1,0,1.4,0.3\n                        c1.8,1.3,5.4-0.1,5.7,2.6c0.3,2.6-3.5,0.3-4.6,2.3c-0.2,0.3-0.3,0.6-0.5,0.8c-0.2,0.1-0.3,0.1-0.5,0.2\n                        c-1.7-0.7-0.4,1.2-1.1,1.4C299.3,350.7,299.1,350.9,299,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("85172A"),
                d:
                  "M336,332c0,0.7,0,1.3,0,2c-9.3,0.9-18.4,2.7-27.5,5c-3.4,0.8-6.9,2-10.5,1c-1.7,0.3-3.3,0.6-5,1\n                        c2-2.8,4.9-3.8,8.2-4c1.6-0.1,3.5,0.5,3.8-2c5.2,0.6,9.8-1.1,14.3-3.4c2.2-1.1,4.5-0.2,7-0.9c-0.6-1.4-1.2-2.6-2-4.3\n                        c3.3,1.5,4.4,0.1,4.7-2.6C333,325.2,334.8,328.3,336,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A41E38"),
                d:
                  "M298,340c10.7-2.3,21.5-4.6,32.2-6.8c2-0.4,4-0.3,5.7,0.9c0.3,0.3,0.6,0.7,0.9,1\n                        c-4.8-0.3-9.1,2.6-13.9,2c-8.2,0.9-15.7,4.9-24,5C297.2,342,297.5,341.1,298,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771E2B"),
                d:
                  "M518,375c2,0.1,3.2,0.8,1.9,3C518.7,377.4,518.2,376.3,518,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("561116"),
                d:
                  "M524,368c-4.1-0.7-7.8,1-11.6,2c-1.3,0.3-0.6,1.2-0.5,2c-1.4,0-2.7,0.1-4.1,0.1\n                        c-6.3,0.5-12.4,0.3-18-3c-0.6-0.4-1.3-0.7-1.9-1.1c-0.5-1.1-0.7-2.1,1-2l0,0c5,1.3,10,2.2,15,0c2.5-0.6,5-0.3,7.5-0.4\n                        c4,0.3,8.2-0.8,12.1,0.8C524.2,366.9,524.3,367.4,524,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91333D"),
                d:
                  "M489.9,369.1c5.9,1.9,11.9,2.5,18,3c-6.6,2.4-12.7,0.1-18.9-2C489.3,369.8,489.6,369.4,489.9,369.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1826"),
                d:
                  "M565,322c3.5,2.6,7.6,1.9,11.5,2.1c5.5,0.2,10.9,1.5,16.5,1.1c1.9-0.1,3.6,0.5,4,2.8\n                        c0.2,0.3,0.3,0.6,0.3,0.8c-0.1,0.3-0.1,0.4-0.2,0.4c-1.7,1.7-3.8,1.7-6,1.5c-4.7-0.6-9.5-0.5-14.2,0.2\n                        c-3.4,0.6-6.8-0.5-10.2-1.6c-2.6-0.9-5.1-1.3-7.2,1.3c-1.8,2.2-5.3,0.6-7.1,3c-3.2,0.1-5.9,3.3-9.4,1.3l-0.1,0\n                        c-0.2-0.2-0.3-0.4-0.2-0.7c0.1-0.2,0.2-0.3,0.3-0.3c6.2-2.5,11.6-6.2,17.1-10C561.7,323.4,563.4,322.7,565,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB1B25"),
                d:
                  "M543,334c0,0.3,0,0.6-0.1,1c-3.6,0.9-7.3-1.1-11.3,1c-1.7,0.9-5.7,1.2-8.8,1.1c-0.3,0-0.6-0.7-0.8-1.1\n                        c0.2-0.3,0.3-0.7,0.5-0.8c6.3-2,12.9-3.3,18.1-7.8c0.5-0.4,1.6-0.2,2.4-0.3c1.1,0,2.2-0.1,3,1c0.1,0.7,1.5,1.8,0.9,1.7\n                        C543.5,329.4,543.9,332.3,543,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B11C23"),
                d:
                  "M546,328c-1.1,0-2.3,0.2-3-1c4.8-4.6,9.8-5.6,13.1-2.7C553.2,326.8,549.9,328.3,546,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8212D"),
                d:
                  "M461,319c0.4-2.4,2.2-2,3.8-2c4.4,0,8.8,0,13.2,0c-0.1,0.8,3.2,1.6,0.1,2.5c-2.3,0.6-4.7,1-7.1,1.5\n                        l0,0c-0.8-1.6-2.1-1.1-3.4-0.9C465.3,320.5,462.9,320.8,461,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B91B28"),
                d:
                  "M461,319c3.2,1.1,7.4-2.2,10,2c-2.8-0.5-5.2,1.3-7.9,1.6c-2.6,0.3-5,1.5-7.7,0.6\n                        c-1.4-0.5-3.1-0.3-3.3,1.9c-6.5,0.7-12.5,4.3-19.2,4.2c-0.3-0.7-0.6-1.4-0.9-2.1c0.3-4.8,4.5-5,7.4-5.6\n                        C446.5,320.1,453.6,317.9,461,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("421115"),
                d:
                  "M547.9,355.1c-3.5-2.5-7.7-0.8-11.5-1.7c-3.3-0.8-6.6-1.2-10.1-3.2c6-2.2,11.4-5.4,17.7-1.5\n                        c1.2,0.8,3.3,0.7,4.9,0.3c6.3-1.6,11,2.7,16.5,4.1c1.9,0.5-0.5,1.2-0.4,2c-1.5,1.2-3.3,1.8-5,1.2\n                        C556,354.8,551.9,356.2,547.9,355.1L547.9,355.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60141B"),
                d:
                  "M547.9,355.1c5.7,0,11.4-0.1,17.1-0.1c6.1-0.1,12.2-0.4,18,2c2.3,0.7,4.7,1.3,7,2c2,2.9-1,2.3-2.1,3.1\n                        c-1.5,0.5-2.8,0.1-3.7-1.2l0,0c-2.8-0.7-5.5-1.6-8.4-1.6c-2.9-0.6-5.9-0.1-8.7-1.4c0,0,0,0,0,0\n                        C560.7,357,554.3,356,547.9,355.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A2B"),
                d:
                  "M505,361c0.3-1,0.7-2,1-3c14-0.4,27.9,1.5,41.8,2c2,0.1,4,0.1,6,0.1c2.7,1.1,5.5-0.2,8.2,0.8\n                        c1.6,0.1,3.2,0.1,4.8,0.2c3.3,1.1,6.9-0.3,10.2,0.8c1.3,0.1,2.5,0.1,3.8,0.2c0.5,0.5,0.4,1-0.1,1.4\n                        c-6.4,3.5-13.3,3.2-20.2,2.4c-4.2-2.4-9-2.4-13.5-2.4c-9.3,0-18.5-1.3-27.8-1.8C514.4,361.5,509.7,361.8,505,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M576.2,358.9c2.8,0.2,5.5,0.3,7.9,2c-4.7-0.8-9.6-0.2-14.2-1.8C572,358.2,574.1,358.3,576.2,358.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M581.1,362.9c-0.1-0.3-0.2-0.5-0.3-0.8c1.2-0.3,2.6,0,3.4-1.3c1.4-0.2,2.5,0.7,3.7,1.2\n                        c0,0.3,0.1,0.6,0.3,0.8c0.3,1-0.3,1.4-1.1,1.7C584.9,364.5,582.7,364.7,581.1,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M577,361.9c-3.4,0-6.9,0.5-10.2-0.8C570.2,361.3,573.7,360.1,577,361.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6A6F"),
                d:
                  "M576.2,358.9c-2.1,0-4.1,0.1-6.2,0.1c-1.1-0.1-2.3,0.1-2.9-1.2C570.1,357.9,573.2,357.5,576.2,358.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M562,360.9c-2.8,0-5.6,0.5-8.2-0.8C556.5,360.2,559.4,359.2,562,360.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M559,358c1.7,0.2,3.6-0.6,5,0.9C562.3,358.8,560.4,359.6,559,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1621"),
                d:
                  "M543,335c3.5,0,6.3-2.9,9.9-2c0.6-0.6,1.3-0.6,1.9-0.2c-0.2,4.1-4.5,2.8-6.4,4.7\n                        c-0.7,0.8-2.5,0.6-3.6,1.5c-2.7-0.6-5.3-0.6-8,0C538.4,336.7,541.9,337.6,543,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1621"),
                d: "M537,341c4-1.6,8-1.6,12,0C545,341,541,341,537,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781525"),
                d:
                  "M545,339c2.6-3.3,7.1-3.2,10-6c0.1-0.1,0.3-0.4,0.4-0.3c6.6,1.3,13.8-0.8,19.9,3.4\n                        c0.5,0.5,0.9,1,0.8,1.7c5.8-2.6,11.4,3.7,17.2,0.4c0.7-0.4,1.8-0.6,2.4-0.3c5.9,3,11.9,0.8,17.8,0.6c2.6-0.1,4.6,0.7,5.9,2.9\n                        c1.2,2.2,4.8,1.4,5.3,4.3c1.3,2.2,1.4,4.3-0.6,6.2c0,0.3-0.1,0.7-0.1,1c-1.2-2-2.4-3.9-5.1-3.6c-0.8,1.4,3.1,2.3,0.6,3.4\n                        c-2.3,0.9-3.4-1.2-4.5-3.4c-0.5,1.7-1,3.4-1.9,6.3c-1-3.4-2.2-5.3-5.3-5c5.1-1.2,0.1-3.6,1-5.1c-2.5-0.6-5.7-1.2-7.4,0.2\n                        c-2.5,2.2-4.3,1-6.5,0.2c-0.6-0.2-1.5-0.9-1.6-0.8c-2.5,3.3-4-0.5-5.9-0.9c-1.6,1,0.4,2-0.1,3c-3.4,1.4-4.9-1.9-7.3-3.2\n                        c-4.8-2.5-10.6-1.6-15.2-4.9c-0.9-0.6-1.6,0.7-1.7,1.8C557,340.1,551.2,337.8,545,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93202F"),
                d:
                  "M502.9,356.8c-1.6,3.2-8.1,5.1-11.2,2.6c-1.8-1.4-4.1-1.9-5.7-3.5c0.7,0,1.4-0.1,2.1-0.1\n                        C493,357.1,497.9,357.5,502.9,356.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801722"),
                d:
                  "M505,361c6.4-1.1,13-1.4,19.3-0.5c7.4,1.1,14.8,1,22.2,1.7c4.5,0.4,9.6-1,13.5,2.8\n                        c-0.3,1-0.9,1.6-1.9,1.8c-6.7,0.2-13.4,1.1-20.1,0.2c-8.1-1.1-16.3-1-24.5-1.1c-1.8,0-3.6,0-5.4,0c-1.2,0-2.4-0.1-3.2-1.1\n                        c1.1-1.4,2.8-0.5,4.2-1.2c-0.4-2.7-2.2-2.1-3.9-1.7c-0.1,0-0.5-0.1-0.5-0.1C504.9,361.6,505,361.3,505,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963B48"),
                d:
                  "M489,366c0.7-1.7,2.1-2.1,3.7-1.9c2.9,0.5,5.7,0.5,8.7,0.2c0,0.6,0.1,1.1,0.1,1.7\n                        C497.3,366,493.2,366,489,366C489,366,489,366,489,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3946"),
                d:
                  "M505,364.9c1,0.1,2,0.1,3,0.2c0.6,1.2,3.3-0.7,3,2c-2.4,0-4.8,0.5-7-1\n                        C504.3,365.6,504.7,365.2,505,364.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9A9E"),
                d:
                  "M372.8,326c0.6-0.2,1.1-0.5,1.7-0.7c-0.8-0.2-1.6-0.4-2.4-0.6c1.1-1.2,2.6-0.6,3.9-0.9\n                        c0.6,0.5,2.4-0.9,2,1.2c-0.4,0.6-0.8,1.2-1,1.9c-0.9,3.5,0.5,8-4.1,9.9C374.1,333.3,374.8,329.6,372.8,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ECB2B6"),
                d:
                  "M377,327c-1.2-1.4,0.3-1.4,1-1.9c1.2,1,2.4,2,2,3.9C379,328.4,378.6,326.8,377,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2330"),
                d:
                  "M880,484c-0.3,1.7-0.7,3.3-1,5c-0.4,0.3-0.8,0.5-1.2,0.5c-3.2,2.2-5.7-1.1-8.8-1.1\n                        c-6.9,0-13.7-0.2-20.4,2.2c-4.4,1.6-9.2-0.5-13.7-0.1c-6.1,0.5-12.6-0.6-18.1,3.1c-1.7,3.7-4.3,4.1-8.1,3.3\n                        c-3.2-0.7-6.8,0.1-10.2,0.2c-2.2,0-4.3,0.3-6.5,0.1c-4.6-1-9.1-2.2-13.8-0.5c-2.2,0.8-2.8,0-3.1-3.2c-2,2-4,4.3-7.2,3.1\n                        c-1.9-0.7-2-2.4-1.4-4.2c0.3-0.7,1.1-0.9,1.6-1.4c5.9,0.1,11.7-1.1,17.5-1.7c0.8-0.1,1.8-0.4,2.4-0.1\n                        c5.8,2.3,11.2,0.6,16.6-1.3c1-0.4,1.9-1,2.6,0c2.2,3.1,6.6,1,7,0.5c3.6-4.7,7.7-2.2,11.6-1.5c0.6,0.1,1.4,0.8,1.7,0.6\n                        c4.4-3.2,9.9-0.1,14.2-2.4c1.9-1,3.9,3.7,5-0.5c7.8,0.9,15.1-2.8,22.7-2.2C873,482.6,876.1,485.4,880,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972230"),
                d:
                  "M768,491c-0.3,0.3-0.7,0.7-1,1c-0.6,3.9-2.4,5.6-6.4,3.8c-0.7-0.3-1.6-0.3-2.4-0.5\n                        c-1.9-0.4-1.6-0.1-2.4,0.7c-1.4,1.4-2.9,4-5.2,2.7c-3.7-2.1-7-0.7-10.6,0.1c-3.7,0.9-7.5,1.4-11.3,0.3c-0.9-0.3-2-0.6-1.7-2\n                        c1.2-1.7,1-4.6,4-5c2.9,1.5,5.4,2.7,9.2,1.5C749.2,490.5,758.7,491,768,491z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M791,483c4.1-4.3,9.3-1.7,14-2C800.9,485.4,795.9,483.8,791,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d: "M785,483c2-1.9,4-0.9,6,0C789,484.6,787,482.2,785,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M732,489c0.7-0.1,1.3-1.1,2,0c-0.2,0.8,0.5,2.1-0.8,2.2C732.1,491.2,732.1,489.9,732,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d: "M781,484c1.1-1.5,2.6-0.9,4-1C783.8,483.9,783,486.5,781,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92E3B"),
                d:
                  "M878,489c0.3,0,0.7,0,1,0c0.7,0.3,1.3,0.7,2,1c0,2,0,4,0,6c-0.7,0.8-0.9,1.8-1,2.7\n                        c-0.3,3.1-1.3,4.4-4.3,2.4c-1.6-1.1-2.7-0.7-3.7,0.9c-1.7,2.5-3.8,2.2-6,0.8c-2.6-1.6-5.7-2.2-8.1-1.1\n                        c-5.4,2.5-11,1.3-16.5,1.7c-1.2,0.1-2.5,0.5-3.5,0c-5.4-3.2-11.1-0.5-16.6-1.1c-2.8-0.3-5.4,1-7.8,2.8c-4.1,3-5.6,2.2-6.5-3.2\n                        c3-3.5,6.9-4.9,11.5-4.6c0.7,0,0.7,0,0.8-0.1c2.1-2.2,4.8-3.3,6.4-1.7c3.8,3.9,6.1,0.5,8.9-1.1c2.6-1.3,5.2-3.3,7.9,0.2\n                        c0.9,1.2,3,0.5,4.3,0c7.3-2.8,15.1-3.6,22.7-5.2c1.4-0.3,2.2,0.2,3.2,0.7C874.6,490.9,876.3,490.4,878,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A303D"),
                d:
                  "M821,529c-6.7,0-13.3,0-20,0c3-2.7,7.1-2.5,10.4-2.6c8.8-0.5,17-3.7,25.6-5c15.4-2.3,30.7-5.5,46-8.4\n                        c0,2.2-2.5,3.5-2.1,6c0.2,1.2-0.3,1.5-1.1,0.3c-0.8-1.3-1.8-0.1-2.7-0.3c-7.2-1.1-14,1.3-21,2c-1.1,0.1-1.8,1.2-2.6,1.2\n                        c-2.3,0.2-4.3,4.9-7.1,0.5c-0.3-0.5-3.5-0.3-4.1,0.5c-3.2,4.6-8.4,1.9-12.3,3.7c-1.6,0.7-3.4,0.9-5.3,0.3\n                        C823.3,526.7,821.3,526.5,821,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB323F"),
                d:
                  "M807,502c1.9,3.5,3.9,4.8,7,0.9c0.9-1.2,3.2-1.6,5-1.8c4.6-0.5,9.2,0,13.8-0.9\n                        c2.8-0.5,4.9,3.7,8.2,1.8c0.2,4.7-2,7.6-6.2,7.2c-2-0.2-2,1-2.9,1.8c-3.5,3.4-5.5,3.3-9-0.2c-0.8-0.8-1.9-1.2-2.8-2\n                        c-1.9-1.6-3.3-2-4.5,0.9c-1.1,2.8-9.5,5.3-12.2,4c-0.7-0.3-1-1.2-1.1-2.1c-1.2,1.1-1.3,2.2-1.1,3.1c0.8,5.1,0.9,5.1-4.3,5.4\n                        c-0.5,0-1,0.1-1.4,0.6c3.4-0.4,4.3,2.1,5.4,4.4c-0.4,1-1,1.6-2,2l0,0c-2.1-1.1-1.9,1.5-3,2c-0.7,0-1.3,0-2,0\n                        c-0.7-0.8-1.3-0.8-2,0c-0.3,0-0.7,0-1,0c-1.8-1.4-4.1,0.1-6-1c-2.7-1.4-5.4-1.3-8.2-0.4c-2.1,0.6-4.4,2.3-5.7-1.2\n                        c-0.1-0.3-0.7-0.4-1.1-0.7c-2.7,4.7-6.4-1.4-9.7,1c-1.5,1.1-3.5-0.3-1.8-3c2.3-3.5,4.2-7.1,6.4-10.6c0.9-1.4,2.3-2.3,4.2-2.2\n                        c3,0.2,6,0,9,0.1c1.1,0,2.7-0.5,2,2c-0.4,1.5,1.8,1.7,2.8,1.6c1.9-0.1,0.7-1.2,0.7-2.3c0-2-0.5-4.7,2.6-5.6\n                        c1.3-0.4,1.7-1.5,1.8-2.7c2.5-4.1,6.9-3.5,10.4-3c2.5,0.3,4.7,1.4,7.2,0C806.2,500.5,807.2,500.7,807,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M801,525c-0.9-0.1-1.6-0.3-2-1.2c-1.2-2.5-2.5-3.9-4.5,0.6c-1.3-8.1,5.1-3.8,6.9-6.1\n                        c-3.3-3.6-2.7-6.2,2-8.6c0,3.2,0.5,1.7,2.8,2.5c3.1,1,4.8-3.8,7.6-0.9c0.3,0.3,0.8-1.3,0.8-2.3c0.3-3.2,2.6-4,5.2-2.3\n                        c1.5,1,2.4,3.4,4.9,2.4c0.2-0.1,0.6,0.3,0.8,0.4c1,0.8-2.9,4.3,1.4,3.1c2.5-0.7,5.9-2,4.2-6.4c6.4,2.9,6.9,2.7,9.9-4.3\n                        c7.5,1.8,14.5-2.5,21.9-1.7c1.1,0.1,2.2-0.5,3.1,0.7c2.4,3.1,4.1,2.6,5.6-1c1.1-2.5,1.4-2.4,6.9,1.5c-0.3-2.6,0.6-4.3,2.5-5.6\n                        c0.9,2.9-1.9,6.7,2,9c-0.3,3.5-0.4,5.5-5.7,4.9c-4.4-0.5-10.6-1.8-14.6,3.2c-1.5,1.8-5.2,1.4-6.1,1.2\n                        c-6.2-1.9-11.5,2.2-17.4,2.4c-2.9,0.1-5.6,1.2-8.5-0.3c-1.4-0.7-2.7-0.1-3.5,1.1c-4.3,6.2-10.7,6.3-17.1,5.6\n                        C806.6,522.7,804.2,525.3,801,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12834"),
                d:
                  "M980,485c-3.7,1.5-6.8,3.9-11.2,4.3c-3.5,0.3-7.4-0.1-10.8,1.7c-4.3,0.9-8.7,3-13,0\n                        c-2.1-2.4-5.1-1.5-7.7-2.1c-4.9-1-10,0.6-14.8-1.4c-1-0.4-1-0.3-1.5,1.7c-0.4,1.5-2.1,1.7-2.9,1.3c-4.7-2.3-9.5-0.7-14.2-0.6\n                        c-4.3,0.1-8.5,0.7-12.8,1.1c0-0.3,0-0.7,0-1c0.8-1,1.1-2,0-3c0-1,0-2,0-3c8,2.5,15.9-0.7,23.9-0.5c0.5,0,1-0.5,1.4-0.4\n                        c8.2,1.7,16.6-1.1,24.8,1c5.4,1.4,10.7-0.6,16.1-0.6c3.5,0,6.3,2.3,9.3,1.6C971.1,484.1,975.5,485,980,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62C39"),
                d: "M891,487c3.1,1,1.5,2,0,3C891,489,891,488,891,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2735"),
                d:
                  "M727,497c4.1,2.2,8.3,1,12.5,0.4c3.8-0.5,7.6-3.5,11.6,0c0.4,0.3,2.5-1.4,3.8-2.1\n                        c-0.6-0.2-1.2-0.4-1.8-0.6c3.2-0.2,6.4-1.5,9.7,0.5c3.4,2.1,2.6-2.4,4.2-3.1c0.2,1.4-0.6,3.2,1.4,3.8c1.6,0.5,2.9-0.3,4.1-1.3\n                        c0.7-0.6,1.2-1.6,2-2.1c0.9-0.6,1.8-0.3,2.7,0.5c1.4,1.2-4.6,1.8-0.3,3c2,0.5,3.4-2.6,3.8-2.4c3.5,2.2,7.9,0.3,11.3,2.5\n                        c0.1,3.1-2.2,2.6-4.1,2.6c-2.4,0.1-5-0.9-6.7,1.7c-10.9,0.6-21.3,4.4-32.4,3.7c-1.8-0.1-3.3,1.3-5.2,1\n                        c-0.4,0.2-0.9,0.3-1.3,0.3c-3.4,0.5-7.1,2-9.4-2.2c-4.5-0.5-9-1.4-12.7,2.4c-0.3,0.6-0.7,1.2-1.3,1.6\n                        c-5,0.8-10.3-1.7-15.1,1.5c-0.9,0.6-1.8,0.4-2.8,0.1c-7.1-2.3-7.7-2.2-11.5,4c-1.9,3-3.7,5.3-7.5,2.1c1.5,2.4,4,4.3,0,6.1\n                        c-7,1.2-13.4-1.5-20-3c-1.1-1.5-2.2-0.5-3.4-0.2c-2.5,0.6-4.3-0.6-5.8-2.9c-2.2-3.4,1.9-1.2,2.1-2.7c0.2-1,1.4-1.8,2.1-2.7\n                        c1.5,2.7,1.8,2.7,3.4,0.9c1.7-1.8,3.5-0.8,4.4,0.8c0.9,1.5,1.9,2.1,3.3,2.5c0.2-0.5,0.5-0.7,0.5-1c0.1-1.7-3.7-2.5-1.5-4.3\n                        c1.6-1.3,3.7-0.2,5.3,1.4c0.8,0.8,2,1.7,3,0.6c0.9-1-0.3-1.8-0.9-2.5c-1.6-1.5-1.7-3.8-0.2-4.6c1.4-0.8,2.9,0.3,2.7,2.8\n                        c-0.1,1.1,1.9,2.3,3.6,1.5c2.3-1.2,2.5-2.9,0.6-4.3c15.6-1.7,30.8-4,45.8-7.3C727,496.3,727,496.7,727,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12B38"),
                d:
                  "M682,521c3.2-3.6-2.8-4.7-2.1-7.8c0.4,0,1.1-0.2,1.4,0c5,4.3,6.7,0,8.5-3.4c1.9-3.7,7.3-5.2,10.8-2.7\n                        c0.5,0.4,1.4,1.2,1.5,1c3.5-2.4,7.1-2.5,11.4-2.3c2,0.1,3.7,0.2,5.4,1.1c-0.5,2.3-3.4,3.8-1.8,7c0.7,1.5-1.6,1.6-2.9,1.3\n                        c-1.7-0.3-4.4,0.8-4.4-2.5c0-0.8,0.7-1.5,0.3-2.4c-1.5-0.2-1.6,0.9-1.7,1.9c-0.4,3.3-2.1,4-4.8,2.2c-2.5-1.7-4,0.4-5.7,1.5\n                        c-0.9,0.6-1.4,1.8-0.8,3.1c0.6,1.1,1.7,1.2,2.6,1c5-1.3,9.7,1.8,14.8,0.6c2.2-0.5,3.9,2,5.6,3.6c0,0.2-0.1,0.5-0.1,0.7\n                        c-6.8,3.9-13.8,0.7-20.6,0.4c-4.5-0.2-8.9-2.2-13.4-3.4c-0.7,0.6-1.3,0.6-2,0C683.3,521.7,682.7,521.3,682,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12B38"),
                d:
                  "M753,530c1.8-0.6,4-2.6,5,1c-6.1,0.2-12-0.2-18-1.7c-2.5-0.6-5.5-1.2-8,0.7c-2.5-0.5-5.1-1.6-7.5-1.3\n                        c-3.4,0.5-4-1.2-4.5-3.7l0,0c3.5-1.4,7.1-1.7,10.5,0.2c4.1,2.3,8.6,1.2,12.7,1c2.7-0.1,5,1.1,7.6,0.7\n                        C753.4,526.5,751.8,529.3,753,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2735"),
                d:
                  "M684,522c0.7,0,1.3,0,2,0c0.2,1,1.7,2.3-0.3,2.7C683.7,525.1,684.1,523.2,684,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931E2E"),
                d:
                  "M647,508.3c-0.2,0.8-0.4,1.4-1.2,1.5c-0.7,0.1-1.5-0.1-1.2-0.9c0.1-0.4,0.9-0.6,1.5-0.8\n                        C646.2,508,647.1,507.5,647,508.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF4755"),
                d:
                  "M586.9,364.1c0.4-0.4,0.8-0.8,1.3-1.2c1.1,4.4-2.2,4.6-5,5.2c-1.6,1-3.5-0.2-5.1,0.8c-0.3,0-0.7,0-1,0\n                        c-2.7-0.9-5.5-0.1-8.2-0.4c-1.1-0.1-2.8,0.7-2.9-1.5c1.4-1.4,3.1-1,4.7-1C576.1,366.3,581.4,364.6,586.9,364.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3B48"),
                d:
                  "M578,368.9c1.5-1.4,3.4-0.7,5.1-0.8c-0.1,0.3-0.1,0.6-0.2,0.8C581.3,368.9,579.6,368.9,578,368.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A1D2C"),
                d:
                  "M727,361c-4.7,0-9.3,0-14,0c-2.9,1.3-6.1-0.4-9,1c-1.7,0-3.3,0-5,0c-4.3-1.4-8.8-1.9-13.2-0.8\n                        c-3.5,0.9-6.7-1.1-10-0.1c-0.6-2.5,1.9-1.8,2.2-3.1c3.1-2.5,7-1.6,10.4-2c8.1-1,16.3-1.8,24.4-2.4c1.8,0,3.7,0.3,5.5-0.3\n                        c0.5-0.1,1-0.2,1.5-0.2c0.8,0,1.5,0.2,2.1,0.6c0.9,0.3-1,2.3,1,1.9c3.5-0.7,4.4,1.4,4.7,4.2C727.5,360.2,727.3,360.7,727,361z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M643,361c-1-3.7-2-7.3-3-11c-0.7-1.6-1.2-3.3-2.1-4.9c-1.6-2.8-1.2-5.5,2.4-6.6\n                        c2.7,2.1,6.5,1.4,9.1,3.8c0.5,1.2-0.1,2.3-0.5,3.4c-1.9,6.2-1.3,6.8,4.5,8.6c4.2,1.3,8.3,1.5,12.6,1.5c1.6,0,3.3-0.1,4.7,1\n                        c0.2,0.3,0.4,0.5,0.3,0.8c0,0.3,0,0.5-0.1,0.5c-0.8,0-1.6,0.2-2,1c-1,0.9-2,0.9-3,0C658.3,359.7,650.7,360.3,643,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80171F"),
                d:
                  "M671,358c0-0.3,0-0.7,0-1c0.2-0.2,0.4-0.4,0.6-0.6c8.8-1.7,17.6-3.1,26.6-3.1c2.1-2.8,4.3-4.5,8.1-2.2\n                        c1.8,1.1,4-0.8,6.2-0.9c1.8,0,3.6-0.6,5.4-0.2c0.5,0.1,0.9,0.3,1.3,0.6c0.9,1,1.5,2,0.8,3.3c-0.3,0-0.7,0-1,0\n                        c-1.5,1.1-3.5-0.2-5,0.9c-12,1-24,2-36,3C675.7,358,673.3,358,671,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A1D2C"),
                d:
                  "M666,359c1,0,2,0,3,0c0.9,0,1.9,0,3.5,0C666.8,361.3,666.8,361.3,666,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A25"),
                d:
                  "M624,338c2.2,1.1,4.1-3,5.7-0.9c1.6,2.2,3.8,4.6,3.3,7.9c0,2.1,2.1,3.8,1,6c-2.3,2.8-4.7,2.8-7,0\n                        c-1.6-3.8,0.4-8.5-3.1-11.7C623.7,338.8,623.8,338.4,624,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881822"),
                d:
                  "M641,339c-3,1.3-4.3,3.5-1.7,6c1.9,1.8,0.2,3.4,0.7,5c-0.7-0.7-1.3-1.3-2-2c-3-1.9-2.9-5-3-8\n                        c-0.5-3.1,0.8-6,1-9c2.2,1.5,5-1.6,7,1C641.5,334.1,642.7,337,641,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1B2E"),
                d:
                  "M624,339c3.9-0.7,1.7,3.9,3.9,4.6c-1.6,2.3,0.6,5.1-0.9,7.4c-1,0.3-2,0.7-2.9,1c0.6-2,0.7-4,0-6\n                        c-0.5-1.2-1.2-2.4-1.1-3.8C622.9,341,623,339.8,624,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A21A2F"),
                d:
                  "M635,340c1,2.7,2,5.3,3,8c-1.3,1.1-2.1,2.8-4,3c-0.7-1.4-1.4-2.8-2.2-4.2c-0.9-1.5,0.3-1.5,1.2-1.8\n                        c1.7-1.4,0.7-3.3,1-5C634.3,340,634.7,340,635,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811723"),
                d:
                  "M727,361c0-0.3,0-0.6,0-1c1.2-1.4,2.9-1.4,4.5-1.6c9.8-1,19.6-2.1,29.5-1.9\n                        c10.1-0.2,20.2-1.4,30.3-1.4c8.2,0,16.5,0.1,24.6,1.8c1.7,0,3.3,0,5,0c2.3,2.2,5.7-0.1,8,2c0,0.3,0,0.7,0,1\n                        c-5.3,1.6-10.9,1.2-16.4,2c-1.9,0.3-4-0.7-5.6,1c-6.3,0.3-12.7,0.7-19,1c-4.3,0.3-8.7,0.7-13,1c0.2-1.3,2.8-0.5,2-2.1\n                        c-0.6-1.3-2.3-1.9-3.9-1.9C757.8,361,742.4,361,727,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811723"),
                d: "M774,365c-3.2,2-6.7,0.6-10,1C767,362.1,770.6,364.1,774,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1B2C"),
                d: "M704,362c2.8-2,6-0.6,9-1C710.2,363,707,361.6,704,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B2038"),
                d:
                  "M812,364c-1,0-1.9,0-2.9,0c1.7-1,3.3-1.5,4.9,0C813.3,364,812.7,364,812,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101F"),
                d:
                  "M971,373c-0.3,0-0.7,0-1,0c-1.8-1.3-3.6-2.3-5.9-2c-2.1,0.2-4.9,2.8-5.8-1.5c-3.5,2-7-1.7-10.9,0.5\n                        c-3.8,2.1-8.2,1.7-12.3,0.1c7.6-4.2,15.9-2.7,23.9-3c2.6-0.1,5.3-0.5,7.9-0.3C970.5,366.8,972.5,369.9,971,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC858C"),
                d:
                  "M960.9,379c0,0.3,0.1,0.6,0.1,1c-6.5,1.9-13.1,1.3-19.7,1.4c-3.7-0.1-7.5,0.2-11.2-0.3\n                        c-5.6-1.5-11.6-0.3-17.2-2l0,0c0.9-2,2.7-2.4,4.5-1.9c5.1,1.5,10.4,0.6,15.5,0.8c2.3,0,4.6,0,6.9,0.1c4.3,1.4,8.8-0.4,13.1,1\n                        C955.6,379,958.3,379,960.9,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB747D"),
                d:
                  "M782,321c-3.7-0.1-7.4,0.3-11-1c5.1-1.1,10.2-2.8,15,1C784.7,321,783.3,321,782,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C212C"),
                d:
                  "M1024,353c-10.9,0.2-21.8-0.2-32.6,0.9c-5.5,0.5-10.9,1.1-16.4,1.1c-6.8,0-13.5,0.4-20.2-1.1\n                        c0.5-2.1,2.3-2.3,3.9-2.2c6,0.3,11.9-0.7,17.9-1.1c3.8-0.2,7.6,0.5,11.3-0.6c2-0.4,4.1-0.3,6.2-0.4c5,0.2,10,0,15-0.9\n                        c3.5,0.9,7.3-0.6,10.7,1.2c2.7,0,5.5,0,8.2,0c0,0.3,0,0.6,0,1c-2.6,0-5.1,0-8.4,0C1021.1,352.6,1023.2,351.4,1024,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC8187"),
                d:
                  "M994,350.9c-1.9,0-3.8,0.1-5.8,0.1c-3.7,1.2-7.6-0.4-11.2,0.9c-7.4,0.6-14.8,1.3-22.2,1.9\n                        c-4.9,0-9.9,0.1-14.8,0.1c4.1-2.5,8.8,0,13.2-1.6c-5.5-1.4-11.1,0.9-16.2-1.4c1.7-1.7,4.1-1.3,6.1-2c3.2-0.6,6.4-0.4,9.6,0.4\n                        c1.9,0.3,3.7-0.6,5.5-0.5c0.6,0,1.1,0.1,1.6,0.2c7.7,1.4,15.2-0.7,22.8-0.7c0.9-0.1,1.7,0.1,2.6,0.3c2,0.2,3.9,0,5.9,0.1\n                        C992.5,349.1,993.9,349,994,350.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E48085"),
                d:
                  "M920,355c6.3-2.3,12.8-0.6,19.2-1C932.9,355.5,926.4,355,920,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B01E2B"),
                d:
                  "M808,351c-0.5,2.8-2.7,2-4.3,1.9c-3.3-0.1-6.5-0.3-9.8,0.3c0.4,1.1,1.4,0.6,2.1,0.8\n                        c-1.7,3-4.9,0.8-7.1,2c-8.9-0.2-17.8,0.4-26.7,0.4c-1,0-2,0.1-3,0c-1.5-0.1-3.3,0-4-1.5c-0.9-1.9,1-2.8,2.2-3.8\n                        c0.4-0.4,0.9-0.7,1.5-0.9c5.6-0.8,11.2-1,16.8-1.2c1.8-0.1,3.7,0.2,5.3-1c3.8,1.6,7.8,0.5,11.7,1.4c0.2,0,0.3,0.2,0.5,0.2\n                        C798.3,348.2,803,350.8,808,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971A1F"),
                d:
                  "M781,348c-4.3,3.9-9.8,1.9-14.6,2.9c-2.4,0.5-4.9,0.1-7.3,0.1c-0.9-3.8,2.2-3.4,3.9-3\n                        c3.4,0.8,0.3-1.6,1.1-1.9c3.6,0.6,7.3,1.2,11,0.9C776.8,348.8,779,347.7,781,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M719,351c-0.3,0-0.7,0-1,0c-1.3-1.3-5.2,0.8-4.4-3.6c0.1-0.5-3.8-1.3-6-0.6c-4.9,1.6-9.5,0.6-13.9-1.5\n                        c-2.4-1.1-3.3-2.4-0.7-4.3c4.5-3.7,10-2,15-3c1.5,0.5,3.7-1.3,4.4,1.9c0.1,0.6,3.1,1.3,4.6,1c5.2-0.9,10,0.9,15.1,1.1\n                        c1.7,0.3,3.6-0.6,5,1c-0.2,2.4,2.2,2.6,3.3,3.9c1.8,2,2,4.6-0.9,4.9C732.7,352.5,725.7,354.1,719,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1823"),
                d:
                  "M719,351c6.2,0,12.4,0,18.7,0c1.2,0,2.9,0.4,3.1-1.6c0.1-1.6-1.1-2.2-2.6-2.4\n                        c-3.9-0.4-4.4-1.7-1.1-4.1c9.1-0.2,17.9,2.8,27,3.1c0.7,0.8,1.4,1.7,2,2.5c-2.2,1.6-5.8-1.6-7.1,2.4l0,0\n                        c-7.3,3.6-15.3,2.4-22.9,3.5c-4.7,0.6-9.5,2.1-14.1-0.5c-0.7,0-1.3,0-2,0C719.7,353,719.3,352,719,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M789,355c2.3-0.4,4.9,0.9,7-1c2.7,0.7,5.4,0.4,8,0.1c2.5,1.8,5.4,0.5,8.1,0.9c1.6,0.2,3.5-0.4,3.8,2\n                        c-18.4-1-36.7,0-55,1c0.5-2.8,2.7-1.8,4.3-1.9c6.9-0.6,13.9-0.6,20.8-0.5C787.1,355.5,788.2,355.7,789,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M823.1,356c-2-0.6-4.9,1.6-6.1-1.9C819.3,353.9,821.4,354.1,823.1,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d: "M829,359c-2.6-0.8-6.2,2-8-2C823.6,357.8,827.2,355,829,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6A71"),
                d:
                  "M985,350c-0.7,0-1.3,0-2,0c-3.2-1.5-6.4-1-9.6-0.1c-2.1,0.5-4.3,0.2-6.4,0c-2.1-0.7-4.3-0.2-6.4-0.9\n                        c-0.8-0.3-2.1-0.6-1.2-2c0.1-0.1,0.5-0.3,0.2-0.3c-2.1,0.4-5.2,1.3-5.3-1.4c0-2.8,3.4-1.4,5.4-1.7c0.5-0.1,1,0.2,1.4,0.5\n                        c3.3-0.5,6.6-1.4,10-1c2.7,0,5.3,0,8,0c0.2,1.4-2.7,4.2,2.2,3.4c3-0.5,6.3,2.2,9.8,1.6c0.3,0.5,0.2,0.9-0.2,1.3\n                        C988.9,349.9,986.8,348.9,985,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE757A"),
                d:
                  "M961,344c-2,0.3-4.3-0.8-6.8,1.6c2.9,0,5.2,0,7.4,0c0.5,2.1-1.7,0.9-1.6,2.1c2.2,1.1,4.9-0.8,6.9,1.3\n                        c0.2,2.1-1.2,1.4-2.2,1.2c-1.9-0.3-3.9-0.1-5.8-0.2c-0.3,0-0.7,0-1,0c-1.9-0.9-3.5-0.1-5,1c-3.2-1.2-6.6-1-10-1\n                        c-2.1-1.4-4.5-1.6-6.8-2c-1.6-0.3-3.4-1-1.2-3c6.4-0.1,12.9,0.5,19-2C956.3,343.4,958.9,342.1,961,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF7E85"),
                d:
                  "M935,345c-0.8,3.9,2.2,1.6,3.4,1.9c2,0.5,4.9-0.7,4.6,3.1c-1.8,1.8-4,0.7-6,1c-1,0-2,0-3,0\n                        c-5.6-0.9-11-3-16.7-3.1c-1.8-0.1-2-1.4-1.3-2.9C922.3,345,928.7,345,935,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("823943"),
                d:
                  "M536.9,379c0.1-0.3,0.1-0.6,0.2-0.9c4.1,0,8.3,0,12.4,0c2.1,0,3.7,0.3,3.6,2.9\n                        C547.7,380.3,541.9,382.9,536.9,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("561116"),
                d:
                  "M552,368.2c-4.8,1.7-9.9,2.5-15,2.8c-0.4-2.5-2.3-1.8-3.9-2c-2.1-0.2-4.3,0.8-6.2-1\n                        c3.1-2.3,6.7-1.2,10.1-1.2c3.4,0.5,6.9,0.1,10.3,0.2C549,367.1,550.8,366.6,552,368.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57111E"),
                d:
                  "M537.1,367.9c-3.4,0-6.8,0-10.1,0.1c-1,0-2,0-3,0c0-0.3,0-0.5,0-0.8\n                        C528.5,365.7,532.9,364.4,537.1,367.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3B48"),
                d:
                  "M537.1,367.9c-4.3-1.6-8.7-0.7-13.1-0.7c-4.3-0.1-8.7-0.2-13-0.2c-1-0.7-2-1.3-3-2c1.7,0,3.3,0,5,0\n                        c6.4,1,12.8,0.2,19.2,0.5c2,0.1,4-0.4,5.9,0.4c7,0,13.9,0,20.9,0c2.3,0.3,4.9-1,7,1c3.3,2.5,7.6-0.5,11,1.9\n                        c-8.4,1-16.6-1.2-25-0.7C547,368.1,542.1,368,537.1,367.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8495A"),
                d:
                  "M336,332c-2.1-2.9-3.7-6.3-6.9-8.2c-1.3-2.5-4.2-3-6.2-4.7c0.2-0.5,0.6-0.8,1.1-0.9\n                        c4.3,1.3,6.8,5.1,10,7.8c1,2,2,4,3.1,6C336.7,332,336.3,332,336,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B25E6E"),
                d:
                  "M323.9,318.3c-0.4,0.3-0.7,0.6-1.1,0.9c-1-0.4-1.9-0.8-2.9-1.2c0-0.4,0.1-0.9,0.1-1.3\n                        C321.4,317.2,322.7,317.7,323.9,318.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921A2F"),
                d:
                  "M340,329c0.6-3.2-1.9-4.7-3.5-6.6c0.2-0.3,0.4-0.6,0.6-0.7c8.3-2.9,16.4-1,24.5,1.1\n                        c2,0.5,4.3,0.2,6.4,0.2c0.7,0.3,1.3,0.7,2,1c-7,1.5-14.1-0.4-21.1-0.4c-3.2,0-5.1,0.1-6,3.2C342.5,328.2,341.5,328.9,340,329z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6E77"),
                d:
                  "M718,311c-0.5,1.3,2.2,3.2-0.8,3.9c-2.2,0.5-3.4-0.5-3.2-2.9C715.2,311.3,716.5,310.8,718,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831727"),
                d:
                  "M693,341c-2.5,4.2,1.9,2,2.6,3c2.7,3.8,7.2,2.8,9.7,2c3.2-1,5.7-0.6,8.5,0c1.6,0.3,3.7-0.1,1,2.7\n                        c-1.6,1.6,2.8,0.5,3.1,2.3c-3.3,0-6.5,0.3-9.7,1.3c-0.9,0.3-1.6,0.9-2.7,0.1c-2.5-1.9-4.6-2-5.6,1.6c-1.2-2.3-3.7-0.3-5.2-1.4\n                        c-2.7-0.7-5.1-2.5-8.1-1.7c-1.2,0.3-2.3,0.3-3.5,0c-6.2-3-13-3.8-19.7-4.9c-1.3-0.2-1.9,0.3-2.3,1.2c-2.8,1.9-4.7-1.6-7.2-1.3\n                        c-0.6,0-1.3,0-1.9-0.1c-1-0.2-2.1-0.1-3.1-0.1c-0.4-0.1-0.8-0.3-1.1-0.6c0.3-1,0.7-2,1-3c1.1-4.5,2.5-5.3,6.7-4.7\n                        c8.1,1.3,16,4.7,24.5,2.7c0.6-0.1,1.7-0.1,1.9,0.4c1.4,4,4.2,0.4,6.3,1.2c1.1,0.4,2.3-1.3,3.7-0.7\n                        C692.3,341,692.7,341,693,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M692,341c-3.4,4.3-7.9,1.2-12,2c0.2-1.5,1.6-0.6,1.9-1.5c-2.3-2-4.6,2.6-6.9,0.1\n                        c-2,2.8-5.1-1.5-7.2,1.2c-0.1,0.1-1,0-1.3-0.3c-1-0.9,1.3-2.9-1-3.2c-2.4-0.3-0.5,2.2-1.5,2.9c-1.3,0.9-2-0.2-2.4-1\n                        c-2-3.7-6-1.6-8.8-2.9c-1.2-0.5-3,2-4,3.8c-2.6-1.1-6.6,1.4-8-3c-0.5-2.7-2.5-5.8,2-7c4,0.2,8.3-1,11.8,2.2\n                        c2.4-4.5,4,1.4,6.8,0.6c2.5-0.8,6.1,0.4,9.2-0.1c0.8-0.1,1,0.7,0.9,1.7c-0.1,0.5,0,0.6,0.1,0.4c0.5-0.5-0.2,0.3-0.1-0.4\n                        c0.1-0.7,0.8-0.3,0.2-0.3c-0.1,0-0.3,0.5-0.2,0.3c6.2-0.6,12.1,0.6,17.7,2.6c1.8,0.7,2.3-2.2,3.9-0.4\n                        C693,339.3,692.5,340.2,692,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1824"),
                d:
                  "M624,339c0,1.3,0,2.7,0,4c-0.5,0.2-1.1,0.2-1.3-0.3c-2-5.2-6.4-6.6-11.3-7.2c0.5-2.1-0.9-1.4-2.1-1.7\n                        c-3.8-0.8-7.3-2.7-11.4-2.1c-1.1,0.2-1.3-1.6-0.9-2.8c0-0.3,0-0.7,0-1c5.9-1.7,11.7-1.3,17.6,0c0.8,0.2,1.5,0,1.9,1.1\n                        c0.9,2.7,2.4,2,3.3,0.1c1.1-2.1,2-1.6,3.2-0.2c0.4,3,0.7,6,1.1,9C624,338.3,624,338.7,624,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52D3B"),
                d:
                  "M753,530c-2.1-2.4-5.7-3.2-8-3c-6,0.6-11.7,1.2-17.4-1.4c-2.4-1.1-5.2,0.5-7.6-0.7\n                        c-6-3.9-12.7-3.4-19.4-3.5c-1.5,0-4.5,1.5-5-2.2c-0.4-2.8,0.5-4.4,3-5.4c2.1-0.9,4.2-3.6,6.2,0.2c0.2,0.4,1.2,0.6,1.7,0.4\n                        c0.9-0.3,1.1-1.1,0.6-2c-0.7-1.5-1.2-3.1,1.1-3.3c1.2-0.1,2.8-1.3,3.8-0.1c1.7,2.1-2.2,2.6-1.3,5c1.8-1,3.7-0.3,5.9,1.1\n                        c-2.8-5.3-2.8-5.3,2.3-8.1c0-0.7,0-1.3,0-2c1.5-0.5,2.3,1,3.6,1.2c1.2,0.2,2.8,2.7,3.2-0.8c0.2-1.4,2-1.4,3.3-1.5\n                        c1.8-0.2,3.6-0.2,4.9-1.8c1.7,1.9,2.7,5.7,6.2,1.7c0.8-0.9,1.7,1.1,2.8,1.3c0.2-1.1,0.1-2.4,1.8-2.4c2.6,0.1,5.1,0.3,7.7,0.3\n                        c9.6,0.1,18.7-4.3,28.5-2.9c2.3-1.4,2.4,0.8,3,2c-0.3,1-0.7,2-1,3c-1,0.8-0.1,2.2-1,3c-1.6,1.7-4.3,2-5.3,0.8\n                        c-2.7-3.2-4.7-1.5-7.2-0.1c-1.6,0.9-3.6,0.2-5.3,0.6c-4.9,1.1-9.7,2.4-13.5,6.1c-1.2-1.1-1-3.4-3.7-3.2\n                        c1.4,2.6,0.8,5.4,1.8,8.1c-2.4,0.3-2-2.3-3.2-2.7c-2.3-0.7-0.8,2.1-2.4,2.5c-0.8-5.6-7.1-2.7-9.6-6.1c-2.2,3.8-7.9,2.1-10.3,7\n                        c3.3-1.2,6-0.4,8.7-0.1c0.8,0.1,2.2,0.1,2.3,0.5c2.1,6,7.2,2.8,10.9,3.6c1.4,0.3,2.9,0.2,4.4,0.2\n                        C752.7,525.3,753.2,527.4,753,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A42B38"),
                d:
                  "M784,502c-1-0.6-1.4-2.2-3-2c-0.2-2.3,0.9-2.8,3.2-3c2.6-0.1,5.7,2.4,7.8-1c6.8,0.5,13.7-1.7,20.6,0.5\n                        c1.9,0.6,1.3-3.2,3.4-3.5c0.6-0.9,1.3-1.7,2.4-1.4c3.8,1,7.5,0.1,11.3-0.2c2.9-0.2,4.8,0.5,5.4,3.6c-1.5,1.2-3,2.7-4.7,3.6\n                        c-1.3,0.7-3.9,0.8-4.1-0.3c-1-4.7-4.3-1.2-6.3-2.5c0.2,1.6,1.5,0.8,2.1,2.3c-5.7-1.1-10.5,1.2-15,3.9c-1-1-2.1-0.2-2.6,0.4\n                        c-1.7,2.1-2.6,1.4-4.9,0.2c-3.6-1.9-7.8-0.6-11.5,1.4c-1-0.2-2-0.3-1.6-1.7c0.2-0.7,0.8-1.6-0.4-1.9\n                        C784.9,500.1,784.5,501.2,784,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M785,528c0.8-0.1,1.9,0,2.3-0.5c2.8-3.3,2.8,0.2,3.7,1.5C788.8,530.1,786.9,529.1,785,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB323F"),
                d:
                  "M761,515.8c-1.4-2.6-0.1-3.4,1.2-4.8C762.8,513,762.2,514.2,761,515.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M796,529c0-1.3-0.2-2.8,1.3-3.4c0.8-0.3,1.4,0.6,1.7,1.4C798,527.6,797.6,529.2,796,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M792,529c0.2-0.9-0.5-2.6,1.2-2.4c1,0.1,0.7,1.5,0.8,2.4C793.3,529,792.7,529,792,529z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB323F"),
                d:
                  "M782,508c0-1.1-0.2-2.3,1-3c0,1.3,0.3,2.7-0.2,3.7C782.3,509.6,782.2,508.4,782,508z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC6D74"),
                d:
                  "M991,349c0-0.3,0-0.7,0-1l0,0c6.7-0.8,13.3-0.7,20,0c14.1-0.6,28.1-2.5,42.2-2.1\n                        c0.9,0,1.9-0.6,2.8-0.9c12.1-0.7,24.2-1.4,36.3-2.1c0.6,0,1.1-0.6,1.7-0.9c2.7-1.5,5.7-0.9,8.6-1c3.1,0.1,6.2-0.1,9.4,0\n                        c1,0,2,0,3,0c6.1-1,12.4-1.2,18.5-2.3c3.8-0.2,7.7,0.2,11.5-0.3c2.6-0.6,5.4,0.3,8-0.9c1-0.1,2,0,3,0.1c3.1,0,6.2,0.4,9.2-0.6\n                        c1.9-0.3,3.8-0.6,5.6,0.6c0.9,2.9-1.8,1.9-2.9,2.7c-1.9,0.2-3.7,0.1-5.6,0.1c-1.7,0.3-3.6-0.6-5.2,0.6l0,0\n                        c-5.3,1.3-10.8-0.5-16.1,1c-15.3,1-30.5,2-45.8,2.9c-16.8,1.1-33.5,2.1-50.3,3.2c-2.3,0.8-4.9-0.3-7.2,0.7\n                        c-2.2,0.1-4.5,0.1-6.7,0.2c-3.8,0.1-7.6-0.5-11.2,0.8c-3.6,0-7.2,0.1-10.8,0.1C1003,349.3,996.9,351.1,991,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6A71"),
                d:
                  "M1011,348c-6.7,0-13.3,0-20,0c5.2-2.1,10.7-0.5,16-1C1008.4,347.1,1009.9,346.5,1011,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4B55"),
                d:
                  "M1117,331c-7.7,1.1-15.2,3.3-23.1,3.1c-4.6-0.2-7.4,2.7-6.5,6.1c0.1,0.4,1,0.6,1.6,0.9\n                        c-4.9,0.7-9.9,1.4-14.8,2c-0.8,0.1-2,0.1-2.4-0.4c-2.8-3.9-6.7-2.2-10.4-2.4c3-1.8,5.8-3.2,9.6-3.6c4.2-0.3,8.4-2,12.7-2.7\n                        c9.7-1.7,19.7-1,29.3-3.6C1114.3,329.9,1115.7,330.7,1117,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4B55"),
                d:
                  "M1103,341.9c-3,0-6,0.1-8.9,0.1c-1.1-0.1-2.3,0.2-3.1-1c6.3-1.4,12.7-0.9,19-1\n                        c0.2,1.5-0.9,1.4-1.8,1.5C1106.5,341.7,1104.7,341,1103,341.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF434E"),
                d:
                  "M1154.9,338.9c-0.6-0.3-1.3-0.6-1.9-0.9c-4.6,1.2-9.4,0.4-14,1.3c-1.8,0.3-3.6,0.1-5.4,0.2\n                        c-3.9,0-7.8,1.7-11.6-0.5c-0.6-0.1-1.8-0.1-1.9-0.3c-0.1-1.4,2-0.6,2.1-2.1c-4.2-0.5-9.1,1.9-12.7-2.4\n                        c11.5-1.7,22.7-3.9,34-4.7c4.4-0.3,8.9-2.4,13.4-0.5c0.6,3.1-3.1,2-3.7,3.9c1.2,0.5,1.8-1.7,2.3-1.2c3.7,4,9.2,1.1,13.2,3.8\n                        c0.4,0.3,0.5,0.8,0.4,1.3c-3.6,1.4-7.5,1-11.3,1.3C1156.9,338.5,1155.8,338.3,1154.9,338.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7424D"),
                d:
                  "M1169,336c-1.9-0.2-3.7-1.6-5.8-0.6c-3.3,1.4-5.8,0.7-7.1-4c-0.7,3.5-2.5,4.1-5.1,3.8\n                        c0.8-2.2-0.3-5.6,4.2-4.5c0.4,0.1,1.1-1,1.7-1.6c7.2-2,14.6-2.2,22-2c1.2,2.5-0.8,2.9-2.3,3.3c-1.7,0.5-3.6,0.2-6,0\n                        c1.8,0.4,3.4-0.3,4.3,0.6c3.2,3.4,7.3,2.4,11.2,2.7c2.1,0.2,4.8-0.8,6,2.1C1184.5,338.6,1176.8,338.2,1169,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0434E"),
                d:
                  "M1192,335c-3.5,0-7,0.1-10.4-0.1c-2.7-0.1-6,1.3-7.2-3.1c-0.4-1.6-3.1-0.3-4.5-1.3\n                        c3-1.5,7.2,0.4,9.1-3.5c3.5-1.3,7.1-2.5,11-2c0.7,0,1.3,0,2,0c-1.2,2.1-4.6,4.5-3.1,6.2c2.3,2.5,6.1,3.8,10,2.3\n                        c0.6-0.2,1.3-0.3,1.9-0.4c0,0.2,0.2,0.6,0.1,0.7c-0.3,0.4-0.6,0.8-0.9,1.1c-1.6,0.9-3.2,1.3-5.1,1\n                        C1194,335.4,1192.7,336.1,1192,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75E66"),
                d:
                  "M1122,339c4,0,8,0,12,0c0.3,0.2,0.4,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c-6.3,1.5-12.7,0.9-19,1\n                        C1116.9,338.7,1120.1,341.2,1122,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75E66"),
                d:
                  "M1103,341.9c1.9-2.2,5.1,0.3,7-1.9c0.8,0,1.6,0.2,2,1C1109.1,342.6,1106,341.8,1103,341.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962531"),
                d:
                  "M1225,263c1.2-0.2,2.5-0.4,1-2c-0.6-0.6-0.6-1.3-0.1-2c3.8-1.4,7.1-0.7,10,2.1c-1.8,2.2-2.7,4,1.5,4\n                        c0.9,0.3,1.8,0.7,1.7,1.9c-3.4-0.3-6.9,1.1-10.1-0.9C1228.5,263.9,1224.7,266.2,1225,263z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33037"),
                d:
                  "M1225,263c1.1,1.5,3.2,0.7,4.5,1.7c1.4,1.2,0.1,1.1-0.5,1.3c-3.6,0-7.2-1.4-10.9-0.3\n                        c-2.1,0.6-3.2-2.5-5.3-2.9c-0.3-0.6-0.6-1.1-0.9-1.7C1216.4,260.5,1220.4,263.6,1225,263z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C15D63"),
                d:
                  "M1239.1,266.9c-0.7-0.3-1.4-0.7-2-1c0.4-3.7,2.7-2.7,4.9-1.9c1.2,1,3.1,0.4,3.9,2.1\n                        c-1.7,0.1-3.6-0.8-5,1C1240.3,267,1239.7,267,1239.1,266.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75E66"),
                d:
                  "M1192,335c1.1,0,2.2-0.2,2.9,0.9c-1.7,0.6-3.3,1.3-5,1.9c-4.2,4.8-9.9,2.4-14.9,3.2c-4.3,0-8.7,0-13,0\n                        c-0.3-0.2-0.4-0.5-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c2,0,4,0,6-0.1c3.4-0.4,6.7-2.4,10-1.5c-1.8-2-4.7,1.5-6.9-0.5\n                        c-2,0-4,0-6,0c-2.7,0.7-5.4,0.8-8.1,0c2.1-1.8,4.7-0.6,7-1c1.7-0.2,3.6,0.5,5.1-1c6.1,0,12.2,0,18.3-0.1\n                        C1188.9,335.9,1190.7,336.5,1192,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791722"),
                d:
                  "M1226,259c0,0.7,0,1.3,0.1,2c-5.7-3.1-12.3-0.6-18-3c1.6-2.8,4.4-2.7,7-3c1.6,0.2,2-1.4,3-2\n                        C1219.1,257,1222.5,258.1,1226,259z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3D47"),
                d:
                  "M1242,264c-1.8,0.1-3.9-0.4-4.9,1.9c-1.7,0-4.2,0.4-4.6-1.3c-0.4-1.8,1.7-2.9,3.5-3.5\n                        c0.3,0.3,0.7,0.5,1,0.8C1238.9,262,1240.7,262.4,1242,264z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82162E"),
                d:
                  "M1179,265.8c-3.2,0-6.5,0-11,0C1172.4,264.2,1175.7,264.1,1179,265.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1721"),
                d:
                  "M1215,255c-1.7,2.4-4.9,1.6-7,3c0,0-0.5,0-0.5,0l-0.5,0c-0.3-0.7-0.7-1.3-1-2c1.4-0.8,2.8-1.9,4.3-2.5\n                        C1212.1,252.9,1214.2,251.9,1215,255z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("872836"),
                d:
                  "M998,554c3.7-0.1,7.5-0.6,11,1C1005.2,556.6,1001.6,555.4,998,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2B37"),
                d:
                  "M943,499c1.4,3.1-2.6,2.2-3,4c-5,3.9-3.2-1.3-4-3c1.1-0.1,2.3,0.2,3-1\n                        C940.3,498.2,941.7,498.1,943,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M944.3,515.4c1.1-0.1,1.5,0.3,1.6,1c0,0.7-0.3,1.3-1.1,1.2c-0.6-0.1-1.2-0.4-1.8-0.7\n                        C943.5,516.4,944,515.8,944.3,515.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2B37"),
                d:
                  "M932,501c0.7,0,1.3,0,2,0c0.7,0.6,1.1,1.3,0,1.7C932.6,503.3,932.1,502.3,932,501z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4313E"),
                d:
                  "M943,499c-1.3,0-2.7,0-4,0c2.6-1.3,5.4-2.3,5-6c0.3-0.7,0.7-1.3,1-2c4.3,0.8,8.7-1,13,0\n                        c-1.4,1.6-0.2,1.8,1,2c1.4,0.2,2.9-0.4,4,1c-1.4,1.7-3.3,0.7-5,1c-3.5,4.2-8.6,3-13,4C944.3,499,943.7,499,943,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2B37"),
                d:
                  "M945,499c3.8-3,9-1.6,13-4c0,1.1-0.2,2.3,1,3C954.6,502.5,949.9,501.4,945,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d:
                  "M963,390c5-2.2,10.1-0.7,15.1,0c-0.7,0.3-1.4,0.6-2.1,0.9C971.7,390.7,967.3,390.3,963,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d: "M956,390c1.7-1.5,3.3-1.5,5,0C959.3,390,957.7,390,956,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d:
                  "M988,390c2.2-1.9,4.7-0.7,7.1-0.9C992.9,390.7,990.4,389.8,988,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C232F"),
                d:
                  "M930,379.9c3.6,0.1,7.2,0.1,10.8,0.2c5.6,1,11.3,0.1,16.9,0.4c1.8,0.1,3.7-0.6,5.3,0.6\n                        c1.2,0,2.5,0,3.7,0c0.2,0.3,0.3,0.5,0.5,0.8c-4.7,0-9.5,0.1-14.2,0.1c-6.7,1-13.4,0.2-20.2,0.5c-1.9,0.1-3.9-0.5-5.8,0.5\n                        c-2,0.3-3.7-0.3-5-2c-1.1-0.2-1.7-0.5-0.5-1.4C924.3,379.6,927.2,379.1,930,379.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E161B"),
                d:
                  "M921.1,380c0.3,0.3,0.6,0.7,0.9,1c-0.2,1.8,1,4.2-1.3,5.2c-0.9,0.4-2.6-0.2-3.6-0.9\n                        c-2-1.5-0.9-3.5-0.1-5.3C918.3,379.3,919.7,379.3,921.1,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89191C"),
                d:
                  "M927,383c3.4-2.1,7.1-0.8,10.6-0.9c5.1-0.2,10.3,0,15.4,0c0,0.3,0,0.6,0,1\n                        C944.3,383,935.6,383,927,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M921.1,380c-1.4,0-2.7,0-4.1,0c-1.3-0.4-2.9,0.4-4-1c5.7,0.3,11.4-1,17,0.8\n                        C927,379.9,924,380,921.1,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731525"),
                d:
                  "M1191,346c-0.3,0-0.7,0-1,0c-0.6-1-2.2-1.4-2-3C1189.9,343.1,1190.9,344.1,1191,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A23"),
                d:
                  "M1108,351c-0.3-2.5,0.1-3.9,3.3-3.6c6.3,0.5,12.7-0.9,19,0.9c1.6,0.5,1.5-0.7,2-1.4\n                        c1.1-1.5,2.8-1.1,4.1-0.8c1.8,0.4,0.3,1.9,0.6,2.9c-2.6,2.1-5.6,2.1-8.8,2C1121.5,350.9,1114.7,351,1108,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1141,342c5.2-2.2,10.7-0.7,16.1-1c-0.8,1-2,0.7-3.1,0.9C1149.7,342,1145.3,342,1141,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1162,340c0,0.3,0,0.7,0,1c-1.7,0-3.3,0-5,0C1158.4,339.3,1160.3,340.2,1162,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52434"),
                d:
                  "M1037.7,348.9c2.3-1.3,4.8-0.8,7.2-0.7C1042.7,349.8,1040.1,348.8,1037.7,348.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M953,379c-4.3-0.5-8.8,1.1-13.1-1C944.3,378.5,948.8,376.8,953,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56C72"),
                d:
                  "M963,381.1c-7.4-0.3-14.9,0.6-22.2-1c6.7,0,13.5-0.1,20.2-0.1C961.9,380,962.6,380.2,963,381.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A71B37"),
                d:
                  "M319,343c-0.5,2.3,0.4,5.6-4.1,4.9c-0.8-0.1-1.9,2-2.9,3.1c-0.1-1.3,0.3-3.5-0.3-3.8\n                        c-2.1-1.2-2-2.6-0.7-3.9c1.4-1.4,3.8-0.7,4.4,0.4C317.7,347.8,317.8,342.8,319,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961831"),
                d:
                  "M301,349c1.6,1.2,0.5,2.5-0.4,3.2c-0.7,0.6-1.3-0.5-1.6-1.2v0C299.6,350.2,300.1,349.4,301,349\n                        L301,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1932"),
                d:
                  "M301,349c-0.4,1-1,1.6-2,2c0-1.2,0-2.5,0-3.7C300.5,347,300,348.9,301,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841727"),
                d:
                  "M597,329c1-0.4-0.4,4.8,2.4,1c1.1-1.5,2.7,1.4,4.6,1.1c2.7-0.4,4.7,2.7,7.8,2.1\n                        c0.4-0.1-0.7,1.1-0.9,1.8c-0.8,2.2-1.7,3.9-4.6,2.7c-2-0.8-4.2,0.2-6.3-0.4c-0.4-0.4-0.7-1-1.2-1.5c0.3,0.5,0.8,1,1.2,1.5\n                        c-0.1,1-1,1.6-1.7,1.2c-4.5-3-9.6,0-14.3-1.5c-2.6-0.8-5.7,2-8.4-0.4c-0.1-0.1-0.5,0.3-0.8,0.5c-2.8-1.2-5.3-2.8-8.8-1.9\n                        c-3.9,1.1-7.3-2.2-11.2-2.1c-0.7,0-1.3,0-2,0c-0.1-0.2-0.2-0.4-0.1-0.5c1.8-2.7,11.3-6,13.9-4.7c4.3,2.1,8.4,2.3,13.2,1.2\n                        c2.8-0.6,6.6-0.8,9.8,0.2C592.4,330.1,594.6,329.7,597,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931B21"),
                d:
                  "M566,367c-2.3-0.9-4.9,0.7-7-1c0.3-0.3,0.6-0.6,1-1c7.1,0.2,14.2,0.2,21.1-2.1c2-0.1,4,0.2,5.8,1.2\n                        C580.4,368.5,573,366.5,566,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M600,337c1.8-0.7,3.5-1.8,5.5-0.6c2.2,1.2,3.9,0.3,5.5-1.4c6.6-1,11,1.5,13,8c-0.3,1,1.1,2,0,3\n                        c-4.8-2.5-8.2-8.5-15.3-5.6c-3.5,1.4-7.7,1.7-11.1-1.2c-0.1-0.1-0.4-0.2-0.5-0.1c-5.8,2.9-11.6,0-17.4-0.1\n                        c-1.9-0.1-3.9,0.7-4.7-1.9c0.8-1.1,1.3-4.6,2.8-0.3c0.1,0.4,1.5,0.8,1.7,0.6c4-4.4,9.6,1.4,13.9-2.1c0.8-0.6,2,0.8,2.9,1.6\n                        C597.4,337.8,598.6,338.7,600,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3946"),
                d:
                  "M538.1,365.9c-7.1,0-14.3,0.1-21.4,0.1c-1.3,0-2.7,0.3-3.7-0.9C521.4,365.4,529.8,364,538.1,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02834"),
                d:
                  "M835,495c-1.8-1.6-3.3-2.8-6.3-2.2c-4.1,0.8-8.4,0.2-12.7,0.2c0.1-1.8,1.5-1.9,2.8-2.1\n                        c7.5-1.4,15.1-2.1,22.7-1.3c2.8,0.3,5.1-0.1,7.9-1c7.4-2.3,15.4-1.3,23.2-1.8c0.4,0,1.1,0.3,1.2,0.5c0.5,3.5,1.6,2.2,2.8,0.4\n                        c0.5,0.4,0.9,0.9,1.4,1.3c-0.1,1.1-0.6,1.9-1.8,2c-4.4,0.2-8.9,0-13.3,0.6c-3.9,0.5-7.8,1.4-11.5,2.8\n                        c-2.8,1.1-5.7,1.7-8.6,1.9c-0.6,0-1.8,0-1.8-0.1C839.9,490.1,836.9,495.4,835,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M797,516.5c-0.9-0.1-0.9-0.8-0.9-1.4c0-0.6,0-1.4,0.9-1.4c0.9,0,0.9,0.8,0.9,1.4\n                        C797.9,515.7,797.9,516.4,797,516.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M837.4,504.4c-0.1,0.7-0.5,1.2-1.2,1.3c-0.8,0.1-1.1-0.6-1-1.3c0.1-0.4,0.5-0.9,0.8-1\n                        C836.7,503.2,837.2,503.7,837.4,504.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12B38"),
                d:
                  "M734,502c0.3,3-1.7,3-3.9,3c-2.2,0-5.3-0.7-3.2,3.5c0.9,1.8-1.6,2-1.6,1.8c-0.7-3.5-5.6-2-6.3-5.3\n                        c0.1-2.8,2.8-2.3,4.1-2.6C726.7,501.7,730.3,500.5,734,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3202D"),
                d:
                  "M789,355c-2.7,2-5.8,0.8-8.6,0.9c-6.5,0.2-13,0.5-19.4,2.1c-11.4-0.2-22.6,1.7-34,2\n                        c-0.8-5.3-4.6-2.9-7.4-2.6c-0.5-2.2,1.9-2,2.4-3.3c12.4-0.2,24.6-2.2,37-3c-1.1,1.1-2.2,2.2-3.8,4C766.9,355,778,355,789,355z\n                        "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M714,355c1.4-1.6,3.3-0.8,5-0.9C717.6,355.6,715.7,354.8,714,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M648,345c0.3,0,0.7,0,1,0c1,1.1,2-0.8,3,0c0.7,0,1.3,0,2,0c1.3,2.3-2.6,4-0.7,6.6\n                        c0-2.5,0.9-3.8,3.4-2.6c2.3,1.1,3.8,0.6,4.3-2c-0.2-1.1-0.4-2.2-0.6-3.4c7.5,2.7,15.9,1.6,22.6,6.4c0.9,0.7,2.3,1.1,2,2.5\n                        c-0.4,1.4-1.9,1-2.9,1.2c-3.8,0.6-8.1-0.1-11.1,3.3l0,0c-7,0.8-13.9-0.5-20.8-1.5c-1.9-0.3-4.6-2.5-4-5.5\n                        C646.6,348.4,646.5,346.3,648,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M671,357c0.3-3.1,2-4.4,5-4c2.8,0.4,5.4-1.8,8.7,0.1c-0.8-1.4-1.3-2.3-1.7-3.1c1.3,0,2.7,0,4,0\n                        c2.3,2.3,5.2,2,8,2c2.9,1.4,1.4-2.2,3.1-2.5c1.4,1.1,0.7,3.2,1.9,4.5c-0.4,0.3-0.8,0.8-1.2,0.8\n                        C689.4,353.7,680.4,357.7,671,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M991,349c6,0.6,12.1-1.2,18,1c-5,1.1-10,1.1-15,1c-2.8-1.9-6-0.5-9-1C986.7,348.2,989,349.3,991,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M977,352c3.6-2,7.5-0.7,11.2-0.9C984.5,352.3,980.8,351.9,977,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M959,350c2.4-2.7,5.5,0.7,8-1c3.1-0.1,6.2,0.1,9.3-0.8c2.4-0.7,4.9-0.3,6.8,1.8\n                        c-6.5-0.2-12.8,1.7-19.3,1C962.1,350.8,960.3,351.5,959,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d: "M953,351c1.1-3.1,3-2.4,5-1C956.3,350.3,954.7,350.7,953,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M661,347c-0.7,1.5,2.9,2.6,0.8,3.6c-2.3,1.2-5,0.7-6.8-1.2c-2.1,1.4,0.9,2.6-0.5,3.4\n                        c-0.5,0.3-1.8-0.1-2.2-0.6c-0.9-1.1-1.9-2.4-0.6-4c0.8-1,1.5-2.1,2.2-3.2C657,343.5,658.3,347.7,661,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M695,352c-2.1,1.8-4.6,0.9-6.8,0.8c-1.8-0.1-1.8-1.4-1.2-2.8C690.3,348,692.4,351,695,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d: "M652,345c-1,0.1-2,3.8-3,0C650,344.7,651,343.4,652,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951E2D"),
                d:
                  "M672,336c0.6,1.1,0.8,2.2-0.3,3.1C670.4,337.9,671,336.9,672,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12B38"),
                d:
                  "M700,517.2c-0.3,0.5-0.4,1.2-0.7,1.3c-0.7,0.3-1.2-0.3-1.1-0.9c0-0.4,0.4-0.9,0.7-1\n                        C699.1,516.5,699.6,516.9,700,517.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2735"),
                d:
                  "M743,505c1.1,0.2,2.4,0.1,2.3,1.7c0,0.2-0.4,0.6-0.6,0.6C743.1,507.4,743.2,506.1,743,505L743,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1171,338c2.6,0.1,5.4-2.1,8.1,0.8c-3.8,0.1-7.3,1.7-11.1,1.2C1169,339.3,1170,338.7,1171,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75E66"),
                d:
                  "M1139,339c4.6-2,9.4-0.5,14-1c-1.9,3-4.6,0.9-7,1C1143.7,339.7,1141.3,339.8,1139,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1139,339c2.4,0,4.7,0,7.1,0c-3.9,2-8,0.5-12,1c0-0.3,0-0.7,0-1C1135.7,339,1137.3,339,1139,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1157,338c2.7,0,5.4,0,8.1,0c-3.2,2-6.7,0.6-10.1,0.9C1155.4,338.2,1156.1,338,1157,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M600.2,337.2c-2.6-0.8-2.2-2.3-2.5-3.9C599.6,334.1,599.6,335.6,600.2,337.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781525"),
                d:
                  "M606.3,339.3c-2.6,0.8-3.9,0.9-6.1,0C602.4,339.3,603.6,339.3,606.3,339.3z"
              }
            })
          ]),
          _vm._v(" "),
          _c("g", { attrs: { id: "other" } }, [
            _c("g", [
              _c("path", {
                attrs: {
                  fill: "#0D0707",
                  d:
                    "M1669,422.8c15.1,1.5,29.7,5.1,44.2,9.7c21.8,7,41.2,18.3,58.7,32.7c12.1,9.9,22.4,21.8,31.3,34.9\n                            c11.2,16.4,20.1,33.8,26,52.6c3.9,12.5,7.3,25.1,7.9,38.3c0.6,4.7,1,9.4,0.5,14.1c0.5,4.9-1.4,9.8,0.3,14.8\n                            c0.7,2.2-0.6,4.2-1.9,6c-0.8,1.1-1.7,1.5-3,0.9c-1.2-0.6-1.7-1.6-1.4-2.9c1.9-6.5-1.9-12.9-0.4-19.6c0.6-2.7,0.7-5.9,0.4-8.6\n                            c-0.3,0.8,0.2,2.3-0.9,3c-2,1.1-1.3,2.1-0.4,3.5c2.2,3.4,1.3,6.7-1.1,9.7c-1.8,2.3-2.9,1.9-4.3-0.6c-2.5-4.4-1.1-9.1-1.2-13.6\n                            c-0.1-5.6-0.2-10.9-3.8-15.6c-0.8-1.1-1.4-2.2-0.7-3.7c2.3-5.4,3.1-11,2.8-16.9c-0.1-1.7,0-3.3,0.6-5.1\n                            c-2.1,1.5-1.3,3.4-0.9,5.2c0.4,1.9-0.3,3.4-2.2,3.9c-2.1,0.6-3.1-0.7-3.4-2.6c-0.5-3.1-2.2-5.9-2.4-9.2\n                            c-0.3-5.1-2.2-9.5-4.5-14.1c-2.4-5-3.4-10.5-6.1-15.7c-2.5-4.8-4.8-9.9-7.8-14.4c-5.4-8.1-9.2-17.4-16.1-24.4\n                            c-5.3-5.5-10.9-10.8-17.1-15.3c-5.8-4.2-10.4-9.6-16.1-13.7c-5.8-4.2-12.2-7.3-18.8-9.8c-5.9-2.3-10.8-6.9-17-8.1\n                            c-5.4-1-9.9-4.7-15.9-4c-3.7,0.5-7.6-0.6-10.7-3.3c-1.1-1-2.4-2.6-3.6,0.4c-0.7,1.9-2.3,0.6-3.3-0.2c-2.1-1.8-4.5-1.6-7-1.8\n                            c-4.8-0.4-9.6-2.6-14.2,1c-0.6,0.4-1.6-0.4-2.4-0.5c-4.8-1-9.5-2.9-14.4-0.1c-1.3,0.7-3,0.6-4.4,0.1c-8.9-3.1-17.3-1-25.7,1.9\n                            c-1,0.3-2,0.6-2.9,0.6c-8.3-0.5-14.4,5.5-21.8,7.7c-0.6,0.2-0.9,0.9-1.3,1.5c-1.2,2.9-5.6,2.9-5.9,6.6c-0.4,0.8-1,1.5-1.9,1.4\n                            c-6.8-0.9-11.1,2.6-14.4,8c-0.3,0.4-0.7,0.7-1.2,0.8c-3.9-2-7-0.7-9.5,4c-1.1,2-1.8,4.2-3.8,5.6l0,0c-2.1,0.3-1.6-1.3-1.7-2.6\n                            c-5.8,5-11.7,9.5-16.5,15.2c-2.5,1.8-4.7,3.9-6.3,6.5c-0.6,0.9-1.4,1.6-2.2,2.4c-1.3,1-1.3,2.6-2.1,3.8c-2.6,1.9-3.6,5.2-6,7.3\n                            c-1.8,1.2-3.6,1.3-4.6-0.7c-1.3-2.5-0.4-5.4,1.5-6.8c6.6-4.8,9.7-12.6,15.9-17.8c2.7-2.2,4.8-5.2,4.5-9.5\n                            c-0.2-3,3.1-4.4,5.4-5.9c5.3-3.6,10.7-7,14.8-12c12.4-7,25.4-12.7,39-17.1c10.1-3.3,20.3-5.6,30.6-7.1\n                            c11.2-1.6,22.5-3.2,33.9-1.8c3.4,0.4,7,0.1,10.5,0.1C1664.9,423.2,1667.1,421.9,1669,422.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#070506",
                  d:
                    "M270.6,536.9c-0.9,1.4-2,2.9-1.7,4.7c-0.6,1.8-0.8,3.8-2.2,5.3c-3.8,10.3-7.3,20.7-7.8,31.8\n                            c-1.2,3,0.4,6.3-1,9.3c-0.4,1.1-0.6,2.3,0,3.5c-0.7,2.4-0.7,4.7,0,7.1c-0.7,2.2-0.3,4.3,0.1,6.4c1.3,3-0.2,6.3,0.9,9.4l-0.2,0.3\n                            l0.2,0.3c0.8,6.4,1.2,12.8,2,19.1l0-0.1c0.9,2.5,1,5.1,1.6,7.7c-0.1,1.5,0.5,3.3-1.6,4.1c-2.6,0.4-5.2,0.8-7.8,1.2\n                            c-3,0.5-4.6,1.8-4,5.3c0.3,1.7-0.1,3.9-2.2,4.6c-2.1,0.7-3.3-1.1-4.6-2.3c-1.4-1.3-2.3-2.9-2.3-4.8c-0.2-8.6-1.5-17.3,1.6-25.7\n                            c1.2-3.2-0.5-6.2-0.5-9.3c-0.1-5.8,0-11.6,0-17.4c1.4-6.4,1.8-13,2.7-19.4c1.1-7.4,2.9-14.5,4.3-21.8c0.9-4.7,2.5-9.4,4.7-13.8\n                            c1.1-2.1,1.9-4.2,2.1-6.5c0.2-1.7,0.8-3.2,2.2-4.3c1.1-0.8,2.2-1.9,2.4-3.1c1.1-7.2,6.1-12.5,9.3-18.6c0.9-1.6,1.3-3.4,2.2-5\n                            l0,0c2.5-1.1,3.9-3.1,5.4-5.4c4.9-7.3,11-13.7,17.9-19.2c2.8-2.3,5.7-4.5,8.3-7.1c1-2,3.7-2.2,4.5-4.3l0,0c2-0.9,3.6-2.7,6-3\n                            c2.5,0.2,4.7-0.2,6.7-2.2c2.3-2.2,5.5-3.3,8.6-3.7c6.9-1,12.6-5.9,19.8-5.6c1.1,0,1.9-0.8,2.2-1.7c1.2-3.5,4-3,6.6-2.7\n                            c2.3,0.3,4.4,1.5,4.4,4c0,2.5-2.8,1.6-4.2,2.4c-7.5,4.4-17.1,4.2-23.7,10.6c-2.4,2.4-5.6,3.5-8.2,5.6\n                            c-9.2,7.8-19.2,14.6-27.2,23.8c-1.5,1.7-2.9,3.5-5.1,4.6l0,0c-1.1,2-2.6,3.6-4.4,5c-5.9,7.3-10.3,15.5-14.6,23.9\n                            C273,532.2,272.4,534.8,270.6,536.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0D",
                  d:
                    "M1549,447.9c0.2,3.7-3,4.9-5.3,6.6c-3.8,2.9-7.9,5.6-11.8,8.5c-1.4,1.1-3.1,1.6-1.7,4.6\n                            c1.3,2.7-2.2,5.1-3.9,7.3c-2.5,3.4-5.8,6.3-8.9,9.3c-1.4,1.3-2.4,2.5-2.5,4.6c-0.1,2.2-0.9,3.4-3.6,3.6c-3.6,0.3-4,3.8-4,6.5\n                            c0,2.4,2,2,3.7,1.1c1.2,3.8-1.7,6.1-3.1,8.9c-3.2,6-7.4,11.4-8.6,18.3c-0.8,4.1-3,7.6-4.4,11.5c-1.8,5.8-3.2,11.8-4.5,17.7\n                            c-1.3,5.6-0.7,11.1-1.9,16.5c-1.7,7.4-1.3,14.9-0.9,22.3c0.4,7,0,14.4,3,21.1c0.3,0.7,0.3,1.5,0.3,2.2c-0.3,3.6,0.2,7,2.1,10.1\n                            c1.1,1.9,1.5,4,1.8,6.1c0.4,2.6-0.6,4.2-3.5,4c-4.1-1-8-1.3-9.7,3.9c-0.3,0.9-1.2,1.7-2.4,1.2c-0.9-0.4-0.8-1.4-0.7-2.2\n                            c0.5-2.2-0.1-3.9-1.9-5.2c-1.8-1.3-2.1-3.2-2-5.3c0.2-3.7-0.4-7.3-3.1-10.2c-2.2-2.3-0.7-5.5-1.7-8.2c-0.3-0.9,0.1-2.9-0.4-4.4\n                            c-0.3-1,0-2.4,1-2.5c4.9-0.5,2.1-2.6,0.8-4c-4-4-4.2-9.3-4.2-14.3c0-4.1,0.6-8.3,1.1-12.4c0.6-3.1,1.4-6.3,0.3-9.5\n                            c-0.1-0.7,0-1.4,0.4-2.1c0.6-0.8,1.8-1.2,1.7-2.3c-1-7.2,3.3-13.3,4.1-20.1c0.7-4.9,4.2-8.5,5.3-13.2c1.6-5.2,3.8-10,7.3-14.3\n                            c2.8-3.4,3.8-8,5.8-11.9c6.5-9.5,13.3-18.6,21.6-26.7C1525.1,464.9,1536.4,455.7,1549,447.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#130909",
                  d:
                    "M1582,441c-1.5-1.7,0-1.7,1.1-2.2c4.8-1.9,9.9-3.2,14-6.6c0.4-0.3,0.9-0.4,1.4-0.5\n                            c10-0.4,19.3-5,29.5-4.8c1.7,0,3.3-0.1,4.7,1.1c1.6,1.3,4,1.6,5.2,0.8c4.7-3.2,10.1-2.3,14.4-0.8c3.8,1.3,5.7,1.5,7.9-1.7\n                            c0.4-0.6,2.8-0.7,3.3-0.2c2.9,3.5,6.5,1.8,9.9,1.9c2.5,0.1,4,2,5.7,3.6c0.6-1.6-0.9-3.5,0.9-4.3c1.7-0.9,2.1,1.1,3,1.9\n                            c4.1,3.1,8.6,4.9,13.8,3.6c2-0.5,3.1-0.3,4.7,1.3c1.5,1.5,3.6,2.8,6.7,1.6c2.9-1.1,4.8,2.6,7.5,3.6c3.7,1.3,6.7,4.5,10.4,5.5\n                            c7,1.7,12.7,5.6,18.6,9.1c4.2,2.5,8.3,5.5,11.7,8.9c7.2,7.3,15.8,12.9,22.7,20.3c3.5,3.8,7.5,7.9,9.5,13\n                            c3.1,7.6,9.4,13.4,12.4,21c2.6,6.7,7.9,12.3,8.1,20c0,0.8,0.4,1.6,0.9,2.2c2.6,3.5,4.1,7.1,4.4,11.6c0.2,4,1.8,7.9,2.7,11.9\n                            c0.3,1.4,0.8,2.3,2.3,1.8c1.4-0.5,2.4-2,1.1-3.1c-3.2-3.1,1.3-5,1-7.6c-0.1-0.8,1.3-0.6,2-0.2c1,0.5,1.5,1.2,0.9,2.4\n                            c-2.2,3.8-1.6,7.6-0.4,11.5c0.4,1.3,0.8,2.2-1.1,2.4c-0.9,0.1-1.9,0.6-1.3,1.6c1.6,2.9,1.5,5.2-1.5,7.2\n                            c-1.1,0.8,0.2,1.7,0.8,2.4c4,4.9,4,10.5,4.1,16.6c0.1,4.7-1.9,10.2,2,14.4c5.8-6.4,5.7-4.8-0.3-13.4c4-0.4,4-0.4,5-5.2\n                            c1,3.5,0.9,6.5,0.7,9.7c-0.2,4.8-1.5,9.9,1.5,14.6c1,1.5,0.7,3.9-0.7,5.6c-0.8,0.9-0.9,1.8,0.3,2.4c1.4,0.8,1.6-0.3,2-1.3\n                            c0.5-1.4,2.4-2.6,1.6-4c-2.7-4.9,0.2-9.9-0.9-14.8c2.3-1,2.2,0.7,2.5,2.2c1.8,8.2,1.4,16.5,1.4,24.8c0,2.3-0.2,4.7,1.4,6.6\n                            c1.4,2.1,3.5,0.9,5.3,1.1c3.4,0.3,6.8-0.2,10.2,0.4c7,1.4,14.1,0.3,21.2,1.5c3.7,0.6,7.5,0.9,11.1,2.1c0.5,0.1,1,0.3,1.5,0.5\n                            c1.5,0.8,3,1.6,4.5,2.3c3.7,1.7,7,4.1,10.9,5.2c0.7,0.2,1.2,0.6,1.8,1c4.2,3.2,8.9,5.6,13.6,7.9c0.6,0.5,0.9,1.2,0.8,2\n                            c-0.3,0.8-1,1.2-1.8,1.3c-5.9-1.1-11.4-3.8-16.5-6.6c-13.8-7.7-28.6-9.9-44-9.8c-1,0-2-0.1-3-0.3c-4.1-1.3-8.4-0.2-12.5-0.8\n                            c-0.5-0.1-0.9-0.2-1.4-0.4c-0.9-0.2-1.5-1.4-2.6-0.9c0,0,0.5,0.7,0.7,1.1c0.1,0.4,0.1,0.9,0.1,1.3c-1.9,2.3,2,5.1-0.6,7.3\n                            c-1.1,0.6-2.2,0.7-3.4,0.6c-2.5-2.5-4.7-4.2-8.9-4.6c-3.5-0.3-7.2-4.3-9.8-7.8c-0.7-0.9-1.5-1.9-0.5-3.1\n                            c2.8-1.4,4.7-0.2,6.5,1.9c1.3,1.5,2.7,2.2,4.7,0.8c2.9-2,3-1.8,5.9,1.1c1.2-3.6,0.2-4.7-3.7-4.2c-4.6,0.6-8.3-1.7-11.6-4.7\n                            c-1.3-1.2-1.9-3.2,0.1-3.4c2.7-0.4,3.3-2.7,4.9-3.9c3.8-2.8,4.3-6.7,1.9-11.1c0.1,3,0.1,5.8-0.8,8.5c-0.7,2.3-2.1,4.6-4.9,3.9\n                            c-2.5-0.7-3.7-2.4-3.1-5.7c0.9-4.9-1.3-10.1,0.6-13.9c-0.2,2.8-1.2,6.8-1,11c0.1,1.8,0,4.6-3.4,4.2c-0.7-0.9-0.8-1.9-0.9-2.9\n                            c0.1-4.6,0.2-9.2,0.8-13.8c0.6-4.6,1.2-9.1-0.1-13.7c-0.1-0.5,0-1,0.1-1.5c0.7-4.3,0.4-8.5-0.5-12.7c0-4.6-1.3-9.1-1.3-13.7\n                            c-0.1-3.1-0.2-6.2-1.4-9.1c-1.2-4.2-1.9-8.5-3.1-12.6l0,0.1c-1-1.5-1.2-3.4-2.1-5c-1-0.8-0.4-2-0.9-3c-2.6-7-5.6-13.8-8.9-20.5\n                            c-1.8-6-5.7-10.8-9.1-15.8c-9.4-13.6-21-25.2-34.6-34.8c-4.2-2.5-7.8-5.9-12.3-8.1c-9-4.2-17.2-10-27.1-12.2\n                            c-2.6-2.4-5.7-2.8-9-3.7c-4.5-1.3-9.4-0.4-13.4-2.9c0-1.7,0.2-3.2-2.5-3.5c-3.9-0.4-7.7-1.6-11.6-0.3c-2,0.1-4,0.2-5.8-0.8\n                            c-5.4-2.7-11-3.5-16.8-1.5c-1.6,0.6-3.1,1.4-4.8,0.6c-1.1-1.9-2.3-2.8-4.3-1c-0.9,0.4-1.7,0.4-2.6,0.1c-2.1-1.4-4.3-1.6-6.6-0.3\n                            c-0.4,0.2-0.8,0.4-1.2,0.5c-1.7,0.5-3.5-0.4-5.2,0.6c-0.4,0.2-0.8,0.4-1.3,0.5c-4.5-0.7-9-1.2-13.1,1.5c-2.1,2-4.1,2.8-7.1,1.4\n                            c-3-1.5-6.2-0.5-9,1.1c-2,1.1-4.1,2.1-6.1,3.4c-0.7,0.4-1.9,1.4-2.1,1.2C1588.2,439,1584.7,442.8,1582,441z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0D0707",
                  d:
                    "M324,472c10.7-8.7,22.7-14.9,36.4-17.6c-3.2-4.6-6.3-4.7-8.7-0.4c-1,1.8-2.9,2-4.8,2\n                            c-1.5,0-3.5-0.8-4.3-0.1c-4.9,4.6-11.8,3.6-17.3,6.4c-2.5,1.2-5.3,1.6-6.9,4.4c-1.4,2.4-3.6-0.3-5.5,0.3c-0.4-2.5,2.3-1.6,3-2.8\n                            c4.9-5.2,11.8-6.9,18-10c7.3-1.8,14.1-5.2,21.5-6.8c3.8-0.9,7.7-1.7,11.5-2.4c3.2-1.4,6.6-1.7,10-2.2c1.7-0.8,3.6,0.1,5.3-0.7\n                            c12.3-0.4,24.5,0.5,36.7,1.9c1.5,1.1,3.4,0,5,0.8c8,2.8,16.3,4.6,24.2,7.7c7.7,3,14.8,7,22.3,10.4c11.1,5.1,20,13.3,28.8,21.2\n                            c9,8,16.8,17.6,23.7,27.7c2.1,3.1,4,6.2,6.1,9.3c0.7,2.8,2.5,5,4,7.3c0.5,0.9,0.9,1.8-0.2,2.6c-0.8,0.5-1.6,0.3-2.3-0.3\n                            c-2.3-1.9-4.7-3.7-5.7-6.7c-0.6-0.7-1.3-1.4-1.6-2.3l0.1,0.1c-1.6-1.3-1.8-3.4-3.2-4.8c-2.3-4.3-4.4-8.7-8.1-12.1\n                            c-1.2-0.8-2.2-1.8-2.9-3c-3-2.3-6-4.7-9.1-7c-3.4-2.7-7.8-3.9-10.7-7.3l0.1,0.1c-3.9-1.7-7.6-3.6-11.3-5.7\n                            c-1.4-0.7-2.7-1.4-4.1-2.1c-7.7-3.3-14.9-7.5-21.8-12.2l0.1,0.1c-0.4-0.3-0.9-0.5-1.3-0.7c-5.7-2.3-11.6-4.5-17.5-5.8\n                            c-5.4-1.2-10.5-3.9-16-4.3c-13.3-1.1-26.7-2.4-40.1-0.3c-7.2-0.5-14.1,1.7-20.9,3.3c-9.5,2.3-18.3,6.6-26.9,11.4\n                            C327.9,472.3,326.1,473.5,324,472z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#220E0D",
                  d:
                    "M441,218c0.5-0.5-0.1-1.5,0.9-1.7c2.3-2.1,4.4-4.5,7.2-6c5.2-2.1,9.2-6.4,14.4-8.6\n                            c6.7-2.7,12.9-6.3,19.3-9.6c10.3-5.4,21.1-9.4,31.7-13.9c7.1-3.1,14.2-6.4,21.8-8.2c25-8.2,50.7-13.3,76.5-18.1\n                            c6.8-1.3,13.6-2.5,20.4-3.8c5.7-0.2,11.3-1.3,16.7-2.4c18.5-3.7,37.3-5.9,56-8.3c19.2-2.5,38.6-4.6,57.9-6.4\n                            c16-1.5,32.1-2.4,48.2-3.4c1.3-0.1,2.6-0.5,3.9-0.7c1.3-0.6,2.9-0.1,4.2-0.8c3.6-0.1,7.1-0.2,10.7-0.3c2.1-0.8,4.4,0.1,6.5-0.8\n                            c27.7,0,55.3,0,83-0.1c2.2,0,4.3,0.1,6.5,0.1c11.5,1.2,23.2,0.9,34.7,1.9c18.8,1.6,37.6,3.1,56.1,7.1c6.1,1.4,12.4,2.1,18.6,3.2\n                            c9.5,1.6,18.6,5,27.9,7.1c7.5,1.7,14.8,3.7,22,6.5c1.2,0.7,2.6,0.9,3.8,1.5c12.6,3.4,24.4,9.2,36.7,13.7\n                            c1.4,0.5,2.7,1.2,3.8,2.3c0.9,1.1,1.4,2.3,0.6,3.7c-2.4,1.5-4.5,0.1-6.6-0.8c-11.7-4.9-23.6-9.6-35.7-13.5\n                            c-6.4-2.1-12.5-4.9-19.2-5.6c-1.1-0.1-2.2-0.3-3.3-0.7c-4.9-2.5-10.3-3.7-15.6-5c-18.4-4.5-37-8.4-55.8-10.8\n                            c-15.5-2-31-3.7-46.7-4.4c-7.3-0.3-14.6-1-21.9-0.9c-27.7-2-55.3-0.4-82.9,0c-5.2,0.2-10.4-0.7-15.5,0.6\n                            c-10.4,1.5-20.9,1.7-31.3,2.5c-12.2,0.9-24.5,2-36.7,3.4c-6.8,0.7-13.6,1.2-20.3,1.9c-40.7,4.6-81.2,10.1-121.5,17.5\n                            c-22.9,4.2-45.8,8.8-68.2,15.2c-24.5,7-47.5,17.3-70,29c-5.3,2.8-10.6,5.6-15.8,8.6c-1.9,1.1-3.8,2.3-5.7,3.4\n                            c-4,2.2-7.6,5-11.1,7.8c-1.9-0.7-3.9-0.3-5.8-0.1C440.5,219.7,440.3,218.9,441,218z"
                }
              }),
              _vm._v(" "),
              _c("path", { attrs: { fill: "#3A1616", d: "M995.5,658.8" } }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A1616",
                  d:
                    "M1239,657.8c29.4,0.1,58.8,0.2,88.1,0.2c7.8,0,15.5,0,23.3,0c2.8,1,5.7-0.1,8.5,0.7c27.7,0,55.3,0,83,0\n                            c4.8-2.8,10.1-0.5,15.1-1.3c2-0.3,4.4,1,5.9-1.5c0-3.3-0.1-6.7-0.1-10c-4.5-16.7-2.4-33.6-2.3-50.5c0-3.2,0.7-6.3,1.4-9.3\n                            c1.7-7.7,2.3-15.7,5-23.2c1.1-3.7,2.2-7.3,3.3-11c2.8,4.3,0.3,8.1-1.2,12c0,0.7,0,1.3,0,2c0.3,1.4-0.1,2.7-0.4,4\n                            c-2.2,15.2-4.2,30.4-3.6,45.7c0.4,11.3-0.6,22.6,0.8,33.9c1.4,11.8,0.7,12.4-11.2,12.9c-19.2-0.2-38.3,0.5-57.5-0.1\n                            c-19.4-0.6-38.9,0.3-58.3-1.8c-5.7-0.6-11.4,0-16.9,0.7c-13.5,1.7-26.8,1.7-40.2-0.6c-1.8-0.3-3.7-0.2-5.5-0.2\n                            c-43.1,0-86.3-0.2-129.4,0.1c-10.6,0.1-21.2,0.7-31.9,0.9c-32.1,0.5-64.2,1.3-96.3,1c-4,0-8,0-12,0.2c-2.2,0-4.4-0.8-6.4,0.5\n                            c-4.4,1.8-8.8,1.2-13-0.6c-5.1-0.3-10.3-0.7-15.4,0.5c-11.1,0.7-22.3,0.3-33.5,0.6c-2.3-0.5-4.7-0.3-7-0.2\n                            c-0.9,0.1-1.8,0.1-2.7,0c-5.6-0.1-11.2,0-16.8,0c-0.9,0.1-1.7,0.1-2.6,0c-1.7-0.1-3.4-0.1-5.2,0c-1.7,0-3.4,0-5.2,0\n                            c-5.8,0.1-11.6-0.5-17.3,0.5c-1.4,0.3-2.9,0.3-4.3,0.1c-3.1-1-6.2-0.6-9.3,0.3c-13.3,0.8-26.5,0.2-39.8,0.3\n                            c-11.6,0.1-23.2,0.1-34.8,0c-3.8-0.8-7.2,0.2-10.4,2.3c-3.4,0.8-6.7,0.7-10.1,0.2c-1.8-0.5-3.6-0.9-5.5-0.7c-0.8,0-1.6,0-2.4,0\n                            c-2.4,0-4.7-0.2-7,0.6c-5.3,0.6-10.6,1.1-15.7-1.1c-2-0.7-4.1-0.5-6.2-0.7c-0.5-0.1-1.1-0.2-1.6-0.3c-5.4-0.4-10.8-1.6-16,1.2\n                            c-3.8,1.5-7.7,1.6-11.7,1.5c-8.7-0.2-17.4,0.5-26.1-0.4c-0.6-0.1-1.3-0.3-1.9-0.6c-1.1-0.5-2.9-0.5-2.5-2.3\n                            c0.3-1.3,1.8-1.1,2.9-1.2c1.5-0.1,2.9,0,4.4-0.5c6.6-0.3,13.3,0.5,19.9-0.4c24.3,0,48.6-0.1,72.9-0.1c14,0,28-0.2,42,0.1\n                            c11,0.2,21.9-1.2,32.8-1.3c7.5-0.7,15.1-0.1,22.6-0.3"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A1616",
                  d: "M1168,657.9c14.7,0.4,29.3,0.5,44,0"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2626",
                  d:
                    "M1943,581c0.3-0.4,0.7-0.7,1-1.1c1.1-1.4,2.2-2.8,3.7-3.8c2.6-2.2,5.1-4.6,7-7.5\n                            c2.9-2.1,3.8-6.7,8.4-6.7c-1.4,5.2-0.1,7.4,5.9,7c2-0.2,4.1,0.4,6.5-0.2c3-0.7,6.3-0.3,8,3.2c-2.7,4.8-6.3,8.8-10.1,12.7\n                            c-6.6,6.8-12.3,14.3-18.2,21.6c-2.7,4.2-6.5,5.5-11.3,5.2c-4.7-0.3-9.5,0-14.2,0.6c-4.5-1.5-5.3-3.1-3.5-7.2\n                            c2.2-5,6.2-8.9,9.6-13c2.4-2.9,4-6.2,6.3-9C1942.3,582.2,1942.5,581.5,1943,581z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8D8884",
                  d:
                    "M1015.1,97c8.7,0.4,17.4-1,25.9-0.4c13.7,1,27.5,1.6,41.2,3c14,1.4,27.3,5.8,41.1,7.7\n                            c14.5,2,29.1,3.3,42.8,9c6.5,2.7,13.1,5.3,19.9,7.5c0.5,1.4-0.3,2.1-1.3,2.8c-3.4,1.6-6.7-0.6-10.1-0.3\n                            c-2.4-0.1-4.7,0.1-7.1-0.4c-6.3-1.2-12.6-0.3-18.9-0.6c-6.3-0.3-12.5-0.4-18.6-2.2c0-3,2.5-2.4,4.2-2.6c3.2-0.3,6.5,0.1,9.8,0\n                            c4.3-0.2,8.4,0.4,12.6,1.2c-22.7-3.9-44.9-10.2-67.7-13.8c-8.8-1.4-17.6-3.1-26.6-3.5c-6.4-0.7-12.9-1-19.3-1.4\n                            c-5.8-1.4-11.6-0.4-17.4-0.7c-1.9,0-3.9-0.1-5.7,0.5c-1.9,0.2-3.8,0.6-5.1-1.2c-0.2-0.3,0.3-1.1,0-1c-2.9,1-5.8,0.6-8.7,0.5\n                            c-6.1-0.9-12.2-1.6-18.3-1.8c-4.8-0.2-9.5-0.4-14-2.4c0.1-1.6,1.4-1.9,2.5-1.8c4.1,0.5,8.4-0.4,12.3,0.5\n                            c7,1.6,14.2-0.1,21.1,1.7C1011.4,97.9,1013.4,98,1015.1,97z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A8883",
                  d:
                    "M1290.2,165.9c3.3,1.3,6.6,2.6,9.9,3.9c14,6.3,28.4,11.8,42.6,17.5c10.8,4.4,21.6,9.3,31.9,14.9\n                            c9.5,5.2,19.5,9.2,29.3,13.6c11.5,5.2,22.6,11.2,33.9,16.8c7.1,3.5,14.1,7.3,21.1,11c1.8,0.9,3.6,1.7,4.5,3.7\n                            c-0.4,3.4-2.9,2.6-4.9,2.2c-1.9-0.3-3.4-1.6-4.8-2.9c0.4,2.1,2.4,1.7,3.6,2.6c1.3,1,3.7,1.4,2.6,4c-3.4,1.3-5.8-1.1-8.2-2.5\n                            c-10.9-6.4-22.5-11.4-33.7-17.2c-9.1-5-18.4-9.7-27.9-14.1c-7.3-3.4-14.5-7.2-22-10.2c-0.9-0.4-1.7-1-2.3-1.8\n                            c-0.1-3.5-2.6-1.1-3.9-1.6c-1.2-0.3-2.3-0.8-3.1-1.8c-0.6-0.9-0.5-2.5-1.8-2.8c-7.4-2-13-7.6-20.3-10c-3.3-1.1-6.7-1.8-10-2.5\n                            c-4-3.4-8.8-5.4-13.6-7.2c-3.4-1.3-6.5-4-10.5-3.7c-5.7-0.9-10-4.9-15.4-6.4c-1.1-1.9-3.4-2.4-4.7-4c-0.7-1.5-2-2.8-1.4-4.6\n                            C1284.7,161.7,1286.7,166,1290.2,165.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M683,663.1c-1.7,1.8-4,0.4-6.1,1.2c1.1,0.6,2.1,1.1,3.1,1.7c-2.7,2.3-5.6,1.1-8.5,0.6\n                            c-1.5-0.2-2.4-1.4-3.7-1.9c0.8,0.6,1.7,0.9,2.5,1.5c2.7,1,5.6,1.4,8.3,2.5c1.1,0.5,2.6,0.6,2.7,2.3c-2.9,2.8-6,3.7-9.6,1.3\n                            c-8.9-5.6-18.1-10.5-27.5-14.9c-6.4-3-12.5-6.7-19.8-7.8c-9.2-1.4-18.5-1.5-27.8-2.1c-8.9-0.6-18-0.1-26.9-0.1\n                            c-2.1,0-4.3,0.2-6.4-0.8c-0.3,2.2,0.2,4.5-0.4,6.7c-3.9,2-8.6,0.6-12.6,3.2c-2.5,1.7-5.7-0.4-6.3-3.6c-0.4-2.2-0.9-4.6,0.4-6.7\n                            l0,0.1c0.8-3.4-0.2-7.1,1.9-10.2c1.3-4.3,2.7-8.7,4-13c-0.2-9.4,0.9-18.7,0.5-28.1c-0.1-1.8,0.3-3.6-0.4-5.4\n                            c-1.4-8.1-3.5-16-7.1-23.5c-0.6-2.2-1.7-4.3-1.4-6.7c1.8-1.2,2.5,0.4,3,1.4c4.6,9.4,8,19.1,9.6,29.7c1.3,8.6-1.2,18,2.2,25.6\n                            c2.6,5.9,0.9,10.7,0.8,15.8c-0.1,4.3,4.8,5.6,3.6,9.7c2.6-0.3,2.1-1.7,2-2.7c-0.5-4.5-1.1-8.9-1.7-13.3\n                            c-0.3-2.9-1.3-5.9,0.9-8.6c1.7,3.8,1,8.1,1.9,12c0.3,1.4-0.2,2.9,1.1,4.1c0.2,0.6,0.2-0.2,0.2,0.4c0,7.2,4.5,9.4,10.7,9.6\n                            l0.3,0.2l0.3-0.2c10,0.9,20,0.1,30.1,0.4c3.4,0.1,6.9-0.4,10.3,0.4c0.3,0,0.7,0,1,0c7-0.5,14.2-1.3,19.9,4.3\n                            c9.6,5.4,20,9.1,30.1,13.4c2.7,1.1,5.8,0.8,8.8,0.5C678.7,663.2,681.1,661.7,683,663.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332F2E",
                  d:
                    "M218,665.8c-5.8-0.7-11.5-2-17-3.9c-1.1-0.6-1.5-2-2.9-2.2c-0.4-0.1-0.9-0.2-1.3-0.3\n                            c-9.5-4.7-19.8-7-30.1-9.4c-3.5-0.8-6.5-3.2-9.7-4.8c-2.9-1.4-5.4-3.5-9.2-2.8c-2.8,0.5-6.2-3.9-6.3-7c4.1-1.2,7.7,1,11.6,1.6\n                            c5.2,0.8,10.4,1.9,15.5,3.2c1.3,0.5,2.3,1.3,3,2.5c1,1.6,1.4,1.1,1.9-0.3c0.3-0.7,1.2-0.8,1.7-0.4c3.9,2.6,8.6,2,12.8,4\n                            c4.5,2.1,9.7,1.7,14.6,1.7c5.3,0,10.3,1.5,15.4,2.6c2.7,0.6,5.6,1.3,8.4,2.2c5.4,1.7,8-0.4,9.1-5.9c0.5-2.6-0.2-5.4,1.2-7.8\n                            c0.3-0.6,0.7-1.3-0.6-0.7c-1.5,0.8-3,0.9-3.7-1c-0.7-1.9-0.3-3.6,1-5.2c0.7-0.9,1.7-1.6,2.9-1.8c3.3-0.4,4.6,1.1,4.3,4.3\n                            c-0.1,0.7,0,1.3,0,2c-0.8,9,0.8,17.6,3.4,26.2c0.6,2,1.5,4.1,0.6,6.3c-3.8,3.2-7.6,0.1-11.3-0.3\n                            C228.1,667.8,223.2,666,218,665.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#22120F",
                  d:
                    "M1131,172.1c-0.3-1-0.6-2-1-3c0.6-0.9,1.4-0.9,2.3-0.9c0.4,0.1,0.8,0.2,1.2,0.5c1.2,1,2.7,1.3,4.2,1.6\n                            c2.8,1.3,5.6,2.3,8.5,3.1c21.3,9.2,42,19.7,62.4,30.8c1,0.6,2.1,1.1,2.9,1.9c6.5,5.6,14.6,8.4,21.6,13.2\n                            c5.2,2.7,10.1,5.9,15.4,8.4c2.9,0.8,5.3,2.3,7.3,4.6c1,1.4,2.3,2.4,3.8,3.1c16.1,7.7,30,19,45.7,27.2c7,3.6,12.5,9.4,19.6,12.7\n                            c10.5,6.5,20.1,14.3,30.4,21.2c1.4,0.9,2.5,2.1,3.3,3.6c0,0.3,0,0.7,0,1c-0.6,1.7-1.7,1.4-2.9,0.7c-0.5-0.3-1-0.6-1.6-0.8\n                            c-0.4-0.1-0.7-0.3-1.1-0.4c-1.2-0.4-2.5-0.5-3.7-1c-6.5-3.7-11.8-9-18.2-12.8c-40.3-27.4-81.9-52.8-124.7-76.1\n                            c-12-6.5-24.2-12.5-36.5-18.5c-1.3-0.9-2.6-1.6-4.1-2.1c-0.8-0.3-1.6-0.7-2.3-1.2c-0.6-0.3-1.1-0.6-1.7-1\n                            c-0.4-0.2-0.8-0.4-1.2-0.6c-3.4-1.7-7-3.1-10.6-4.2c-4.6-3-9.7-4.9-14.7-7C1133.7,175.1,1131.3,174.8,1131,172.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#190F0F",
                  d:
                    "M169,641c-7.9-0.5-15.4-2.8-23.1-4.3c-1.6-0.3-3.2-0.8-4.9-0.7c-2.3,2-4.6,0.8-7,0\n                            c-3.6-1.6-7.4-2.5-11.3-3c-0.8-0.2-1.6-0.6-2-1.3c-0.1-3.1,2.1-2.8,4.1-2.8c6.1,1.1,12.3,2.2,18.4,3.6c8,1.5,15.9,3.2,23.8,5.1\n                            c2,0.5,4.1,1.8,5.9-0.4c1.6-3.6,4.9-3,7.7-2.6c2.8,0.3,5.2,0.1,7.4-1.7c5.6-5.7,12.5-7.7,20.4-7.1c2.1,0.2,4.2-0.4,6.3-0.7\n                            c3.3,0.6,6.6,0.6,9.9,0l-0.1,0c4.9,0.7,9.8,0.7,14.8,0c1.8-3.8,0.5-7.7,0.7-11.6c0.3-5.8,0.3-11.6,0.4-17.4\n                            c0.8-0.2,1.3,0.4,1.7,0.9c0.7,7.7-1.6,15.6,1.8,23.1c0.3,0.6-0.2,1.6-0.5,2.3c-3.6,9.1-2,18.5-2.1,27.8c0,2.9,2.7,5.2,4.9,5.8\n                            c2.8,0.8,2.2-3.4,2-4c-1.9-5.6,1.5-5.2,5-5c0.9,6.6,1.6,13.2,2.8,19.8c1.1,6.4-0.2,8-5.9,6.3c-1.9-1.5-5.1-1.1-5.9-4.1\n                            c-3.5-11.3-4.7-22.9-4-34.7c0.2-4.2-2.7-3.2-5-3.3c-6.1,2.7-12.5,1.8-18.7,1c-10.6-1.3-20.2,0.4-28.9,6.5\n                            C181.7,642.5,175.5,643.2,169,641z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#41121A",
                  d:
                    "M1952,641.9c2.1-1.6,4.8-1,7.2-1.7l-0.1,0c10.1-3.3,20.4-4.4,31-3.7c2.1,0.1,4.3,0.4,6.4-0.4l0.3,0.2\n                            l0.2-0.2c10.7-3.9,22-3.5,33.2-3.9c1.6-1.3,3.5-1.4,5.4-1.8c0.5-0.1,1.1,0,1.6,0.1c5,0.2,9.9-1.9,15-1.4l0,0\n                            c2.5-1.6,5.5,0.2,8-1.1l0,0c1.5-1.3,3.5,0,5.1-1l0,0c2.6-1,5.4-1.3,8.1-2l-0.1,0c5.1-1.7,10.3-3,15.6-3.7c0.5,0,1,0.1,1.4,0.4\n                            c-0.3,3.6-3.5,4.3-5.9,5.7c-4.8,1.6-9.6,3.4-14.6,4.7c-5,1.2-10.2,1.5-15.2,2.4c-9.4,1.7-18.9,3-28.3,4.4\n                            c-10.3,1.5-20.5,3-31,3.6c-7.4,0.4-14.7,1.8-22.2,1.7c-4.4,0.3-9-0.9-13.3,1c-0.9,0.5-1.9,0.7-2.9,0.6c-1.6-0.6-3.1-0.4-4.6,0.1\n                            c-0.5,0.1-0.9,0.1-1.4,0.2c-2.2-0.1-4.2,0.8-6.4,1c-0.5,0.1-1,0.1-1.5,0.2c-3.9,0.8-7.9,1.1-11.7,2.4c-0.5,0.2-1,0.2-1.5,0.3\n                            c-3.6-0.5-7.1,0.3-10.6,1c-1-0.1-1.9-0.5-2.7-1.2c-2.2-2.6-5.2-1.3-7.9-1.6c-1.8-0.1-3.7,0.5-5.4-0.4c-1.5-0.9-3-1.6-4.8-1.2\n                            c-1.7-0.3-3.8-0.1-4.3-2.5c1-0.1,2-0.2,3-0.3c5.7-0.4,11.4-1.1,17.1,0.7c5.6,1.8,11.4,1.6,17.1,0.1"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#170E0B",
                  d:
                    "M562,616.9c-0.4,8,1.6,15.8,2.3,23.6c0.1,1.2,1.5,3-0.8,2.9c-1.3-0.1-4.1,0.7-4.1-2.3\n                            c0-2.2-0.2-4.2-3-4.6c-0.9-0.1-0.8-1.2-0.7-2.1c0.5-4.5,0.5-9.1,1.4-13.5c0.7-3.5-0.3-4.3-4.1-3.3c2.6-1.8,3-2.9,1.1-5.4\n                            c-2.2-2.8,0.4-6.6,0.1-10c-1.4-15.2-3.5-30.1-12.4-43.1c-1.7,0-1.1-1.5-1.5-2.3l0.1,0.1c-2-4.2-3.2-8.6-4.2-13l0,0.1\n                            c-2.9-5.6-5-11.6-10.2-15.9c-1.3-1-2.1-3-1.2-5c2.4,2.5,4.1,5.7,7.7,7.6c0.1-3.8-4.8-5.6-3.5-9.4\n                            C548.2,550.3,558.1,582.6,562,616.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AFA9A5",
                  d:
                    "M1014.9,101c1.5,1.5,3.4,0.8,5.2,0.8c1.4-0.7,2.9-0.3,4.3-0.3c0.5,0.1,0.9,0.2,1.4,0.3\n                            c5,0.6,10.3-0.8,15.1,1.5c-1.9,1.6-4.1,0.8-6.1,1.4c-0.7-0.3-0.1,0.8-0.3,0.2c0-0.1,0.1-0.2,0.4-0.2c5.2,0.4,10.3-2,15.5,0\n                            c0.9,0.4,2.2,0.5,2.3,1.6c0.2,1.3-1.3,1.2-2,1.7c-1.1,0.8,1.1,0.7,0.6,1.6c-0.7,2.8-3,1.9-4.5,1.5c-12.9-2.8-26.2-3.4-39.3-5.5\n                            c-7.4-1.2-15.1-1.7-22.6-2.6c-2.6-0.9-5.2-0.7-7.8-0.6c-7.2,0.2-14.5-0.4-21.7-0.5c-1.2,0-2.2,0.3-3.3,0.7\n                            c-3.6-0.1-7.2-0.2-10.8-0.3c-1.7,0-3.7,0.2-4.6-1.9c1.1-1.5,2.8-0.6,4.1-1c-4.1,0.5-8.3,0.8-12.4,1.7c-5.9,0.2-11.8-0.5-17.7-1\n                            c-8.1-1.4-16.2-0.3-24.2-0.6c-2.2,0-4.5,0.1-6.7-0.4c-2-0.5-3.9-0.9-5.9-0.3c-0.8,0.1-1.5,0.1-2.2,0c-3-0.7-5.9-0.6-8.9,0.1\n                            c-0.8,0.1-1.6,0.1-2.4-0.1c-5.4-0.6-10.7-0.6-16.1,0.2c-3.2,0.5-6.5,0.9-9.4-1.4c-0.4-0.5-0.3-1,0.2-1.4\n                            c3.7,0.5,7.3-0.4,10.9-0.9c1.6,0.6,3.2,0.6,4.8,0c1.4,0,2.8,0,4.2,0c1.9,0.6,3.9,0.6,5.8,0c3,0,6,0,8.9-0.1\n                            c1.9,1.1,4.1,0,6.1,0.7c18.2,0.1,36.5,0.1,54.7,0.2c1.8,0,3.6,0.1,5.5,0.2c10,0.8,20.1,0,30.2,0.8c13.6,0.6,27.1,2,40.6,3.5\n                            C1009.5,100.8,1012.3,100,1014.9,101z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191011",
                  d:
                    "M101.1,581c5.8,5,11.3,10.2,17.3,14.9c13.1,10.3,26.4,20.4,40.6,29.2c1.9,1.2,2.6,3.7,5,4.2\n                            c1.9,1.3,1.3,2.1-0.6,2.3c-1.5,0.1-2.8-0.9-4.1-1.7c-4.4-2.7-9-5-14-6.4c-4.1-1.1-7.9-1-10.7,2.9c-0.8,1.2-1.9,1.8-3.3,1.9\n                            c-4.7-0.4-9.1-1.7-13.5-3.3c-0.2-0.1-0.4-0.2-0.4-0.2c-1.1-1.7-5.2-0.8-4.1-3.8c1-2.6,4.1-2.8,7.1-2.1c-3.7-1.3-3.9-3.1-0.9-7.3\n                            c0.5-0.1,0.9-0.1,1.4,0c2.5,1.3,5.2,1.5,8.5,2.7c-1.1-3.3-2.9-5.1-5.1-6.5c-3.8-4.4-8.1-8.4-12.9-11.8c-4.3-3.2-7.1-8-11.4-11.2\n                            c-0.5-0.6-0.9-1.2-0.9-2C99.5,581.7,99.5,580.5,101.1,581z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#26211F",
                  d:
                    "M2076,417c-0.3-0.3-0.6-0.7-0.9-1c-1.2-1.7,0.1-2.7,1.2-3.7c2.9-3,6.2-5.5,9.9-7.3\n                            c0.9-0.5,1.8-0.8,2.6-1.4c4.3-2.7,3.4-2.4,5.1,2.2c3.5,8.9,0.6,17.8,1.5,26.7c0,3.1,0.1,6.2-0.1,9.3c-2.4,4.1-4.7,4.6-10.3,2.2\n                            c-2.2-2.6-2-6.1-3-9.1l0.1,0.1c-1-2.1-1.7-4.2-1.7-6.5c1.8-2.4,4.3-0.7,6.4-1c1.4-0.2,3.5,0.1,3.5-1.9c0-1.8-1.6-2.8-3.4-3\n                            c-2.6-0.3-5.2,1.4-7.8,0C2077.9,420.9,2077.4,418.7,2076,417z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#391D1A",
                  d:
                    "M1847.9,401.8c-2.7-1.9-6.3-1.6-8.8-3.8c-1.2-0.9-3-1-3.9-2.5c-0.8-1.4-1.9-2.8-1.4-4.6\n                            c0.4-0.3,0.8-0.5,1.3-0.6c0.5,0,1,0,1.4,0.1c4.3,1.3,8.3,3.4,13.3,3.1c2.8-0.2,6.1,3.1,8.8,5c4.8,3.4,10.8,3.8,15.6,6.8\n                            c1.6,1.1,3.6,1.6,5.3,2.7c6.4,2.6,12.2,6.5,19.2,7.6c0.7,0.1,1.4,0.2,2.1,0.5c1.6,0.9,3.3,1.8,4.4,3.5c-0.1,3.5,2.9,2.6,4.8,3.4\n                            c16.4,4.1,32.6,9.4,49,13.3c2,0.5,4.1,0.8,5.8,2.2c0.8,1.2,0.1,1.9-0.8,2.6c-1.6,0-3.1-0.3-4.6-0.9c-15.9-1.9-31-6.8-46.3-11.3\n                            c-10.1-2.7-20-5.8-29.3-10.8c-0.9-0.9,0.4-2.7-1.4-3.2c-0.9-0.5-1.9-0.9-2.8-1.4c-1.3-0.7-2.6-1.3-4-1.7\n                            c-1.4-0.5-2.7-1.2-4.1-1.8c-0.4-0.2-0.8-0.4-1.2-0.6c-2.5-1.4-5.3-2-7.8-3.4c-0.4-0.2-0.8-0.3-1.2-0.5c-3.1-1.2-6.1-2.8-9.3-3.9\n                            C1850.7,400.6,1849.3,400.8,1847.9,401.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1A0D0E",
                  d:
                    "M2032.8,428c0,2.3,0,4.6,0,7c-4.9,4.1-10.9,6-16.8,8c-5.2,1.9-10.3,3.7-16,2.8c-0.8-0.4-1.6-0.3-2.4-0.4\n                            c-0.7,0-1.5,0-1.6-0.8c-0.1-1,0.8-1.3,1.5-1.6c5.5-1.9,10.6-4.7,15.4-8c2-1.4,3.9-3.2,6.7-2.9c1.1,0.2,2,0.7,2.8,1.4\n                            c-1-1.1-1.4-2.4-1.6-3.8c-0.2-4.1-2.2-7.6-3.6-11.3c-2.5-4.4-6.4-7.4-10.2-10.5c-1.6-1.3-3.5-2.5-4.5-4.5\n                            c0.5-3.6,2.7-1.9,4.5-1.5c3.7,2.4,8.2,3.2,11.6,6.1c5.7,3.9,10.4,8.6,12.8,15.2C2032,424.9,2032.4,426.4,2032.8,428z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B9894",
                  d:
                    "M1463,248c-8.5-6.4-18.4-10.1-27.7-15c-9.6-5.1-19.2-10.5-29.2-14.7c-14-5.9-27.4-13.2-41.3-19.2\n                            c-6.5-2.8-12.7-6.2-19.2-9c-13-5.6-26.2-11-39.3-16.4c-2.3-0.9-4.7-1.7-6.3-3.8c6.5,2.5,13,5,19.4,7.5c15.1,6,30.8,10.7,45,18.4\n                            c16.7,9.1,34.7,15.2,51.4,24.1c14.6,7.8,29.3,15.5,44,23.3c2.6,1.4,5.4,2.4,7.1,5.1C1465.5,250.8,1464.3,249.1,1463,248z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282424",
                  d:
                    "M795.6,685.9l-0.3-0.2l-0.3,0.2c-9.6,1.1-19.2,1.5-28.8,1.6c-2.8,0-5.6-0.5-8.3,0.4l0.1,0\n                            c-3.7,1.4-7.5,0.4-11.2,0.6c-8.4,0.4-16.8-0.5-25.1,0.4l-0.3-0.2l-0.3,0.2c-3,0.9-6,0.8-9,0c-0.3,0-0.7,0-1,0\n                            c-3.7,0.8-7.3,0.9-11,0c-3.3,0.6-6.6-1.1-10-0.1c-4.9,0.1-9.7-1.1-14.6,0.1l-0.2-0.1l-0.2,0.2c-3.7,1-7.5,0.3-11.2,1.1\n                            c-10,0-19.9,0-29.9,0c-1.3,0-2.7,0.1-4-0.1c-0.8-0.1-1.7-0.2-1.7-1.4c0-1.1,0.9-1.3,1.7-1.5c2.1-0.7,4.3-0.6,6.4-0.5\n                            c15.3,0.2,30.5-1.7,45.7-0.8c1.7,0.1,3.3-0.2,4.9-0.7c1.5-0.3,3-0.5,4.5-0.4c20.2,0.6,40.3-0.7,60.4-1.3\n                            c14.5-0.4,29-0.2,43.4-1.1c3.9-0.2,4.2,0,3.9,2.7C798,685.5,796.7,685.4,795.6,685.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#888781",
                  d:
                    "M1463,248c1.3-0.4,2.5,1.7,3.9,0.2c1.2,0.3,2.5,0.6,3.7,1c1.4,0.9,3.2,0.9,4.2,2.3\n                            c9,6.5,19.2,8.5,30.1,7.7c0.2,0.5,0.1,0.9-0.2,1.2c-2.8,1.4-5.7,0.8-8.6,0.7c-1.7,0-1.2,0.8-1.1,1.7c-0.6,1.1-1.6,1.6-2.7,2\n                            c-3.5,0.9-6.9,2.1-9.4,4.8c-0.6,0.7-1.2,1.4-2.2,1.6c-2.2-3.6-6.5-5.2-8-9.6c-0.8-2.2-4.8-2.4-7.2-3.7c-2.1-1.4-5.5-1.3-5.5-4.9\n                            c-1.9-3.7-6.7-3.1-9.1-6c2.8-2,2.6-1.6,5.4,0.6C1458,249,1460.7,250.2,1463,248z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#928E8A",
                  d:
                    "M1290.2,165.9c-3.6,0.9-6-2.2-9.2-2.9c-2.7,1.2-5.3,0.2-7.6-0.9c-16.1-7.6-33-13.2-49.3-20.1\n                            c-8.7-3.7-18.5-5-26.4-10.6c-2.5-0.9-5.1-1.7-7.7-2.5c-1.7-0.8-4.1-0.6-5-2.8c0.4-0.7,0.7-1.5,1.1-2.2c4.7,0.5,9.2,1.7,13.4,3.6\n                            c24.2,11,49.7,18.7,74.1,29.5C1279.3,159.5,1284.9,162.4,1290.2,165.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D3735",
                  d:
                    "M134,635c2.3,0.6,4.6,1.3,7,1c3.1,2.2,4.9,5.7,10.3,5c3.8-0.5,8.2,3.8,12.2,6.1c1.1,0.6,2,1.6,3.4,1.9\n                            c10.7,2.1,21.5,4.2,31.1,10c-1.4,1.6-3.4,0.7-5,1.1c-10.7-2.4-21.6-4.7-32-8.3c-1.6-3.2-4.9-0.3-6.9-1.8l0,0\n                            c-0.3-1.4-0.9-2.6-2.5-2.7c-4.4-0.2-8.9-1.7-12.1-3.8c-3.6-2.3-7.4-4.9-10.6-8c-0.2-0.2,0.3-0.9,0.8-1.1\n                            C131.1,634.4,132.6,634.3,134,635z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#513B3B",
                  d:
                    "M1081,313.2c-2.4-0.1-4.7-0.2-7.1-0.4c-1-0.7-2.3-0.1-3.3-0.7c-0.4-0.2-0.9-0.4-1.3-0.6\n                            c-4.1-0.4-8.1-0.4-12.2,0.4c-5.1-0.8-10.3-0.3-15.4-0.4c-1.9,0-3.8,0-5.8,0c-2.1-0.5-1.3-2-1.2-3.2c0.5-0.8,1.2-1.1,2-1.3\n                            c3.4-0.5,6.7-0.2,10.1-0.3c2.6-0.1,5.2,0.2,7.7,0.9c3.2,0.2,6.5,0.1,9.7,0.1c6.4,0.1,12.9-0.2,19.3,0.3\n                            c4.7,1.5,9.7,0.1,14.4,1.1c7.3,1.3,14.6,0.3,22,0.6c5,0.1,10.1-0.4,15.1,0.4c7.4,1.4,14.9,0.3,22.4,0.7c2.2,0.1,4.6-0.4,7.1,2.1\n                            c-5.7,2.3-11.1,1.1-16.3,1.2c-5.5,0-10.9,0.7-16.4,0.6c-5.5-0.1-11,0-16.5,0c-2.8-0.1-5.6,0.3-8.4-0.3\n                            c-5.9-0.1-11.8-0.2-17.7-0.3C1086.6,312.9,1083.7,314,1081,313.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2524",
                  d:
                    "M188,632.9c-1.5,2.7-3.6,3.3-6.6,2.5c-2.8-0.7-6-1.4-7.3,2.6c-3.9,0.8-6.7-2.2-10.2-2.8\n                            c-6.3-1.1-12.7-1.5-18.9-3.3c-3-0.9-6.1-1.5-9.2-2.3c-1.4-0.4-3.5-0.1-3.7-2.5c7.4-8.3,10.2-6.8,23.6-0.8\n                            c2.6,1.1,4.8,2.9,7.3,4.3c1.7,0.9,1.5-0.1,1.1-1.3c3.1-0.8,4.5,2.1,6.9,3"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B1110",
                  d:
                    "M1903,647c1.7,1.1,3.3-0.3,5,0c2.6,2.7,6.3-0.2,9,2c0.4,0.8,1.2,1,2,1c1.1,0.9,3.6,0.5,3.2,3.1\n                            c-3.4,1.3-6.4,3.7-10.3,0.4c-1.2-1-4-1.3-6.1-0.9c-3.6-0.5-6.3-3.1-9.7-4.2c-1.5-1.3-3.4-1.5-5.1-2.3l0,0\n                            c-8.6-4.2-18-2.9-27.1-4c-1.8-0.2-3.6,0-5.4-0.1c-5.8-1.3-11.7,0.5-17.5-1c-1.7-2.5-2.1-5.3-2.1-8.4c0-7.9,0.7-15.9-0.9-23.8\n                            c-0.3-1.4-0.3-2.7-2-2.8c1.7-4.9,0.7-10,1-15c2,7.4,1.7,15.1,2.9,22.6c0.2,1.1,0.2,2.3,0.3,3.4c0.8,2.3-0.3,4.9,0.7,7.2\n                            c0,3.3,0.4,6.6,0,9.9c-0.5,4,1.8,4.8,4.7,4.9c4.8,0.2,9.6,0.1,14.3,0.1c1.9,1.1,4.1,0,6,0.8c1.9,0.1,3.7,0.2,5.6,0.3\n                            c2.7,1,5.6-0.1,8.4,0.7c4.8,0.5,9.9-0.3,14,3.4c1.5,1.1,3.2,1.5,5,1.8C1900.4,646.2,1901.8,646.3,1903,647z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#381F20",
                  d:
                    "M1236.9,349.8c-6.6,0-13.2,0-19.9,0c-2.9-0.6-6-0.5-8.6-2.5c-4.2-3.7-5-8.7-4.9-14\n                            c0.2-0.5,0.6-0.7,1.1-0.8c2.2,0.7,1.9,2.8,2.5,4.4c1.6,5,4,6.7,9.3,6.7c0.8,0,1.5-0.1,2.3-0.1c7.3,0.8,14.2-1.2,21.2-2.5\n                            c2.4-0.4,4.7-1,7.1-1.5c0.5-0.1,0.9-0.2,1.4-0.2c2.3,0.5,3.9-0.2,5-2.3c0.3-0.4,0.6-0.7,1-0.9c3.4-0.9,2.4-5.9,6.1-6.6\n                            c1.4,0.6,1.5,1.8,1.3,3.1c-0.7,2.2-1.7,4.2-3.3,5.8C1252.6,344.8,1245,347.8,1236.9,349.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#210E0C",
                  d:
                    "M242,597c-0.6-0.3-1.1-0.6-1.7-0.9c1.3-19.1,4.7-37.7,11.6-55.7c4.8-12.6,10.4-24.8,19-35.4\n                            c0.3,4.2-3.1,7-4.2,10.5c-1.1,3.5-4.8,5-4.8,8.9c0,3.6-1.3,6.8-4.6,8.8c-0.1,0.1-0.4,0.1-0.4,0.2c-0.8,5.5-4.2,10.4-4.9,15.6\n                            c-0.4,2.9-2.7,3.5-3,5.7c-0.7,5.9-2.7,11.7-3.5,17.4c-0.8,5.5-2.4,10.7-2.9,16C242.3,590.9,242.1,594,242,597z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#443C3D",
                  d:
                    "M2012,615.1c-0.8,1.1-1.4,2.5-3,2.6c-2.6-1.7-5.1,0-7.7,0.3c-1.5,0.3-3,0.3-4.5,0.4\n                            c-2.4,0-4.8-0.1-7.2,0.7c-2.3,0.4-4.6,0.3-6.9,0.4c-5.3,0-10.6,0-15.9,0c-1.4,0-2.8-0.1-4.2-0.4c-2.7-0.9-5.5-1.5-7.9-3.2\n                            c-1.3-1.2-3.5-2.8-2.7-4.2c1.1-2,0.4-5,3.2-6.1c3.3-0.4,2.4,3,3.9,4.2c0.9,0.8,2.1,1.2,3.2,1.6c8.9,2,18,0.9,27,1.3\n                            c1.3-0.1,2.7,0.5,4-0.1c-0.4-0.1-0.7-0.1-1-0.2c-1.6-0.6-4.4,0.6-4.1-2.8c2-1.2,4.1-1,6.2-0.7c5.5,0.8,10.2,4.5,16,4.1\n                            C2011.3,612.9,2012.3,613.8,2012,615.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A2918E",
                  d:
                    "M1488.1,280.7c-5.5-0.2-10.8,2.4-16.3,0.8c-3.5-0.1-7,0.1-10.4-0.1c-2.4-0.7-4.8-0.5-7.2,0\n                            c-4.9,0-9.7,0-14.6,0c-2.8-0.9-5.9-0.5-8.7-1.7c0.4-2.8,2.9-1,4.4-1.9c-2.3,0.2-4.5,0.5-5.5-2.1c0.4-1.7,1.8-1.9,3.1-1.6\n                            c3.9,0.7,7.7-0.2,11.6-0.5c1.9,0,3.8,0,5.8,0c2.8,0,5.6,0,8.4,0c1.8,0,3.7,0,5.5,0.3c4.8,1.3,9.7,2.2,14.7,2.8\n                            c0.3,0.3,0.5,0.7,0.7,1.1c1.2,1.7,3,0.8,4.5,1C1485.5,279.1,1487.4,278.5,1488.1,280.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4444",
                  d:
                    "M1114.7,314.2c16.1,0.2,32.1-1.7,48.2-2.2c-7.6,0-15.1,0-22.7,0c-1.8,0-3.7,0.6-5.2-0.9\n                            c1.7-1.9,3.9-1.5,6-1.5c11.6-0.1,23.1,0,34.7-0.1c2,0,4,0.3,5.8-0.8c2.3-0.6,4.7-1.5,4.8,2.4c0,1.3,0.8,0,1,0\n                            c5-2,9.6,0.3,14.3,1.4c0.7,0.2,0.8,0.9,0.5,1.6c-1.5,0.8-3.2,0-4.8,0.3c-1.9,0.1-3.8-0.3-5.6,0.4c-25.4,0-50.9,0-76.3,0\n                            C1114.8,314.9,1114.6,314.6,1114.7,314.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#201C1C",
                  d:
                    "M324,472c4.7-1.4,9.6-2.7,13.1-6.2c3.8-3.8,9.1-2.3,13.2-4.7c7-4,15.3-3.9,22.9-6.1c1.4-0.4,3-1.1,3.7,1\n                            c-0.1,0.9-0.6,1.5-1.3,1.9c-4.7,0.8-9.4,1.2-14,2c-6.6,1.1-13,2.4-18.7,6.2c-2.4,1.3-4.8,2.6-7.3,3.8c-3.3,2-6.5,3.9-9.8,5.9\n                            c-1.7,1.9-3.8,3.1-6.1,4.1l0.1-0.1c-1.2,1.3-2.5,2.7-4.3,3.1c-2.6,1.9-5.1,3.9-7.7,5.8c-1.5,1.6-3,3.3-5,4.3\n                            c-0.3,0.2-0.7,0.4-1,0.6c-1.3,1.5-2.3,3.3-4.8,2.7c5.9-6.2,10.8-13.4,19-17.2C319.2,477.6,321.4,474.4,324,472z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221B1A",
                  d:
                    "M1481.1,271c0.3-0.7,0.6-1.3,0.9-2c1-0.4,1.9-0.2,2.8,0.2c2,1.3,4,1.1,6,0c2.1-1.1,4.3-1.5,6.6-1.5\n                            c1.9,0,3.8,0,5.8,0c2.4,0.3,4.5-0.4,6.2-2.2c0.8-0.6,1.7-1,2.7-0.7c0.8,0.7,1.2,1.5,1.4,2.5c-0.4,2.5,1.7,6.2-3.1,6.9\n                            c-2.4,0.5-4.8,0-7.2,0.1c-0.3,1.5,1.7,2.3,0.8,3.7c-0.2,0.5-0.3,1-1,0.7c-1.9-0.3-3.8-0.4-5.4-1.8c-0.9-0.8-2-1.2-2.9,0.1\n                            c-0.2,0.5-0.4,1-0.8,1.3c-2.7,2-12,1.9-14.8-0.2l-0.2-0.2C1480.9,276,1479.5,273,1481.1,271z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7C3435",
                  d:
                    "M1087,151.9c-14.5-4.1-28.9-8.7-43.6-12c-16.5-3.6-33.2-6.2-49.8-8.8c-21.2-3.3-42.6-3.9-63.9-5.1\n                            c-1-0.1-2,0-2.8-0.8c11.2,0.3,22.4,0.6,33.6,0.9c1.7,0.8,3.7,0,5.5,0.7c5.8,1.2,11.7,1.3,17.6,1.3c1.7,0.8,3.6,0,5.4,0.7\n                            c0.9,0.1,1.9,0.1,2.8,0.2c1.6,1,3.6-0.1,5.2,0.8c0.6,0.1,1.2,0.1,1.8,0.2c1.6,1,3.6-0.1,5.2,0.8c2.2,1.1,4.5,1.4,6.9,1.1\n                            c1.6,1,3.5-0.1,5.1,0.9c5.9,1.4,11.8,2.8,17.8,3.2c1.6,1,3.6-0.3,5.1,0.9l0.1,0c1.4,1.3,3.6-0.6,4.9,1.3\n                            c7.6,2.1,15.1,4.5,22.9,5.8c2.4,0.6,4.9,1,7.2,2l0,0c3.3,1,6.9,1.5,9.9,3.3c1,0.5,2.1,1,3.1,1.6c0.4,0.2,0.5,0.4,0.4,0.6\n                            C1087.3,151.8,1087.2,151.9,1087,151.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#734A4C",
                  d:
                    "M511,272.7c-12.4-2.1-23.7-6.9-34.7-12.8c-7.9-4.3-14.4-10.3-21-16.3c-3.5-3.1-6.9-6.5-10.4-9.7\n                            c-0.7-1.1-0.4-1.9,0.8-2.4c4.6,1,7.3,4.9,10.7,7.7c6.9,5.7,13.5,11.7,20.9,16.8c9.4,6.5,20,10.3,31.1,12.7\n                            c1.9,0.4,3.9,0.6,5.5,2C514.5,273.7,511.9,271.9,511,272.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B2D30",
                  d:
                    "M759,293.8c-1,0.1-2,0.1-3,0.2c-1.5-1.4-3.9,0.5-5.3-1.3c0-0.6,0.4-1,1-1.1c4.9,0.1,9.8-0.2,14.7,0.2\n                            c-4.9-0.5-9.8-0.1-14.7-0.2c-0.9,0-1.7,0.4-2.5,0.3c-4.3-1-8.8-0.1-13.1-0.7c-0.5-0.1-1.1-0.2-1.6-0.4c-3.2-0.8-6.4-0.3-9.7-0.4\n                            c-2.5,0-4.9-0.5-7.4-0.5c-3.4-0.8-6.9-0.8-10.4-0.1c-1.4,0.1-2.7-0.5-4-0.3c-1.6,0-3.3,0-4.9,0c-1.6-0.1-3.3,0.2-4.9-0.2\n                            c-0.4-0.5-0.4-1,0.1-1.4c2.5-0.7,5.1-0.3,7.6-0.3c-2.8,0.1-5.6-0.8-8.3,0.7c-4.9-0.7-10.1,0.4-14.9-2.5c2.8-3,5.9-1.8,8.7-2.1\n                            c5.8,0.2,11.6-0.3,17.3,0.3c4.8,1.5,9.9,0.2,14.8,1c2.6,1,5.4,0.7,8.1,0.9c0.5,0,1.1,0.1,1.6,0.3c2.3,0.8,4.7,0.5,7,0.6\n                            c2.1,0,4.2,0,6.3,0.1c0.5,0,1,0.1,1.6,0.3c1.7,0.6,3.6,0.6,5.4,0.6c1.9,0,3.8,0,5.6,0.4c2.6,0.9,5.3,0.5,8,0.6\n                            c1.9,0,3.8,0,5.7,0.1c0.8,0,1.6,0.2,2.4,0.4c1.8,0.6,3.6,0.6,5.5,0.6c2.2,0.1,4.5-0.3,6.5,1c0.7,0.7,0.7,1.5,0.4,2.3\n                            c-0.6,0.7-1.4,0.8-2.3,0.8c-4-0.6-8-0.7-12.1,0.1C764.9,294.6,762,293,759,293.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6F2D32",
                  d:
                    "M637.1,147c-0.7,2-3.3,0.1-4.1,2c-26.2,4.6-52.2,10-78.1,16.3c-6.4,1.6-12.6,3.8-18.9,5.8\n                            c-0.9-1.4,1-1.2,1.2-2c1.3-0.7,2.5-1.3,3.8-2c2.4-0.9,4.9-1.4,7.4-2c13.6-3.2,27.3-6.5,40.9-9.4C605.1,152.2,621,149,637.1,147z\n                            "
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#433733",
                  d:
                    "M2053.8,654.9c-1.3,0-2.5,0.1-3.8,0.1c-8.2,1.9-16.5,3.4-24.9,4.9c-2.3,0.4-4.6,0.7-6.9,0\n                            c-1.2-0.7-2.8-1.1-2.1-3.1c2.9-2.6,6.6-1.9,10-2.6c9.5-2,18.9-4.1,28.5-5c4.8,1.1,9.3-0.7,14-1c1.7-0.5,3.5-0.4,5.2-1\n                            c1.7-0.4,3.3-0.8,5.1-0.8c1.2,0.2,2.4,0.5,3.2,1.6c-5.4,3.7-12,2.9-17.8,4.8c-1.7,0.5-3.5,0.8-5.2,1.2\n                            C2057.4,655.1,2055.4,653.9,2053.8,654.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#665C59",
                  d:
                    "M2018,659c8.8-0.2,17.3-2.6,26-3.6c2-0.2,4-0.3,5.9-0.5c-13.1,4.6-26.7,7.2-40.1,10.8\n                            c-4.4-1-8.4,1.9-12.8,1.4c-1.7-0.1-3.4-0.3-3.6-2.5c0.2-1.2,1.2-1.7,2.2-2.2c0.5-0.2,1-0.4,1.5-0.5c1.8-0.2,3.6-0.2,5.2-1.1\n                            C2007.5,659.7,2012.5,657.2,2018,659z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M693,288c0,0.3,0,0.6,0,0.9c-0.6,0.7-1.3,0.6-2,0.3c-3.9-0.1-7.8-0.2-11.7-0.3c-2.3-1-4.9,0.2-7.3-0.8\n                            c-1.9-0.1-3.8-0.2-5.7-0.2c-2.7-1-5.6,0.2-8.3-0.7c-1.9-0.1-3.7-0.2-5.6-0.3c-1.7-0.8-3.7,0.1-5.4-0.8c-1-0.1-2-0.1-3-0.2\n                            c-1.6-1.2-3.9,0.4-5.4-1.2c-0.3-0.9-0.1-1.7,0.7-2.3c3.2-1.4,6.6-0.5,9.9-0.9c12.1-0.3,24.1,0.5,36.2,1.7\n                            c0.6,0.3,0.9,0.8,0.9,1.5c-2.4,0.1-4.9,0.3-7.3,0.4C683.6,286.6,688.5,286.4,693,288L693,288z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#251D1A",
                  d:
                    "M1539.5,274.9c-0.8,0.1-1.7,0.1-2.5,0.2c-1.7,0.9-3.7-0.1-5.4,0.8c-3.5,0-7,0-10.5-0.1\n                            c-1.8-1.5-3.3-3.2-3.6-5.7c2.4-4.5,6-1.2,9-1.3c2.9,0.9,5.3,3.6,9,2.7c-2.4-2.7-6.2-1.9-8.9-3.7c-1.7-0.9-3.6-1.5-5.4-2.1\n                            c-1.4-0.6-3-0.3-4.3-1.1c-1.7-1-1.9-2.2,0-3.3c4,0.4,7.9,1.2,11.9,2.1c5.2,1.3,10.9,1.1,15.5,4.6c1,3.3,0.5,5.7-3.5,6.2\n                            C1540.4,274.5,1540,274.7,1539.5,274.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#432323",
                  d:
                    "M864,301.2c-3.5-0.1-7-0.2-10.6-0.3c-2.1-0.9-4.4,0.1-6.4-0.7c-2.6-0.1-5.1-0.2-7.7-0.3\n                            c-2.4-1-4.9,0.1-7.3-0.7c-3-0.1-5.9-0.2-8.9-0.2c-1.9-1.1-4.1,0.1-6.1-0.8c-1.9-0.1-3.9-0.2-5.8-0.3c-1-0.9-2.9,0.5-3.4-1.5\n                            c1.4-2,3.6-1.5,5.5-1.8c12,0,23.9,0.8,35.8,1.9c3.6,0.3,7.3,0.8,10.8-0.6c0.5-0.6,0.9-1.3,1.5-1.8c0.6-0.5,1.4-0.7,2.1-0.5\n                            c0.5,0.1,0.9,0.4,1.3,0.6c1.8,1.6,4.8,0.9,6.2,3.2c-0.3,0.9-0.9,1.3-1.8,1.5c0.6,0.3,1.2,0,1.9-0.1c2.6-0.2,5.3-0.4,7.9,0.3\n                            c1.1,0.3,3,0.7,1.2,2.5c-3.4,0.8-6.8-0.6-10.2-0.1C868.2,301.4,866.1,301.8,864,301.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#220F0D",
                  d:
                    "M1983,618c2.3,0,4.6,0,7,0c2.2-1.2,4.8,0.3,7-0.9c1.7,0,3.3,0,5-0.1c1.1-0.7,2.1-0.5,3.3,0.3\n                            c-2,2-4.3,2.2-6.7,2.2c-5.2,0-10.4,0.4-15.5,1.3c-4.3,0.1-8.7,0.2-13,0.3c-3,0.5-6,0.5-9,0c-8.3-0.7-16.8,0.9-24.8-2.3\n                            c-1-0.6-2.4-0.4-3-1.6c-0.7-1.4-4.9-2.9,0.1-4.2c1.6,0,3,0.6,4.5,1.2c4.2,1.9,8.5,2.7,13.1,2.4c3.8-0.2,7.5,0.5,11.2,1.3\n                            c1.3,0,2.7,0,4,0C1971.7,618.9,1977.3,618.8,1983,618z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M943,306.1c-2.3-0.1-4.6-0.2-6.9-0.3c-0.4-0.5-0.4-0.9,0.2-1.3c2.1,0,4.2-0.5,5.5,0\n                            c-4.2-1.2-9.3,1.5-14.1-0.2c-0.6-0.1-1-0.5-1.2-1c-0.1-0.6-0.1-1.1,0.2-1.7c0.5-0.8,1.1-1.3,2-1.6c4.1-0.5,8.2-1.2,12.2,0.6\n                            c0.4,0.5,0.4,1,0.1,1.5c-1.9,0.5-3.7,0.2-5.6,0.3c14.4-1,28.7,1,43.1,1.4c4.4,1.4,8.9,0.4,13.4,0.9c3.6,0.4,3.8,1.8,1.2,4.1\n                            c-2.5,0-5,0-7.5,0c-3.4-1.1-7.1,0.3-10.5-0.9c-1.2-0.5-2.4-0.5-3.7-0.1c-3-1-6.3,0.2-9.3-0.7c-2.9-0.1-5.8-0.2-8.7-0.3\n                            C949.9,305.8,946.4,307.1,943,306.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D504E",
                  d:
                    "M1998,443.9c-0.3,0.1-0.7,0.1-0.9,0.3c-0.3,0.3-0.2,0.5,0.3,0.6c1,0.1,2,0.1,2.6,1c-2.6,0-5.1,0-7.7,0.1\n                            c-0.7-0.2-1.3-0.5-1.9-0.7c-2.4-0.7-5.7,0.4-6.2-3.9c-0.1-0.9-2.9-1.1-4.6-1.1c-4.5-0.1-8.9-0.3-13-2.4c-2-1.2-4.2-1.6-6.6-1.3\n                            c-2.1,0.2-4.3,0.3-5.3-2.3c0.7-2.3,2.3-3.5,4.5-4c4.3,0.2,8.3,1.6,12.3,2.9c6.1,1.8,12.4,2.1,18.6,3.1c1.4,0.6,1.3,1.8,1.5,2.9\n                            c1.2,1.6,3.1,0.7,4.6,1.1C1998.4,440.7,1999.4,441.7,1998,443.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403B38",
                  d:
                    "M1924.5,684.9l-0.3-0.2l-0.2,0.2c-4.7,1.2-9.4,0.2-14.1,0.5c-1.8,0.1-3.6-0.3-5.3,0.4\n                            c-0.5,0-1.1,0.1-1.6,0.1c-1.7,0.8-3.3,0.6-5,0.2c1.7-4.1,5.8-2.2,8.7-3.5c5.3,0.2,10.7-0.8,14.9,0.7c-1.2-0.2-1.2-1.9,0.6-1.9\n                            c5.2-0.2,10-2.6,15.1-2.7c5-0.1,9.9-1,14.7-2.6c12-1.3,23.6-5.1,35.4-7.3c2.2-0.4,4.5-1.8,6.6,0.2c-2.7,1-5.3,2.1-8,3.1\n                            c-10.7,2.4-21.5,4.6-32,7.9c-1.7,1.1-3.7,0-5.4,0.9l-0.3-0.2l-0.3,0.2c-1.7,1.2-3.7,0-5.4,0.9l-0.3-0.1l-0.3,0.2\n                            c-1.6,1.2-3.7-0.1-5.3,0.9l-0.4-0.2l-0.3,0.2c-1.6,1.2-3.6-0.1-5.2,0.9l0.1-0.1C1929,685.3,1926.6,683.9,1924.5,684.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1693.7,441c-6.7-0.3-12.9-2.9-19.4-4c-12.8-2-25.6-2.5-38.6-1.2c-15.1,1.4-29.8,3.9-44.1,8.9\n                            c-4,1.4-7.9,3.2-11.8,4.9c-1.7,0.7-3.3,1.7-5.2,1.2c2.2-3.2,5.9-4.2,9-6.1c6.6-2.1,12.9-5.5,19.7-6.7\n                            c15.4-2.6,30.6-6.6,46.6-4.8c5.8,0.6,11.8-1.2,17.8,0.3c7.2,1.8,14.9,1.7,21.8,4.7C1690.2,440.4,1693.7,438.1,1693.7,441z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2927",
                  d:
                    "M92.1,621.9c-0.4-1-0.8-1.9-1.1-2.9c-1.1-2.9,0.7-2.4,2.2-1.7c3.3,1.4,3.8-0.4,3.7-3\n                            c-0.2-3.9,0.5-7.6,2-11.1c0.7-1.6,1.3-3.5,3.5-3.8c1,0,1.9,0.4,2.8,0.9c1.3,1,3.1,1.7,3.2,3.8c-3.1,3.4-2.6,8-3.6,12.1\n                            c-0.7,2.5-1,5-4.1,5.7c2,3.8,7.4,1.9,8.6,6.2c-0.7,0.7-1.6,0.9-2.6,0.9c-2.1-0.3-4-1.1-5.9-1.9c-0.4-0.2-0.8-0.4-1.2-0.6\n                            c-1.5-0.9-3-1.9-4.7-2.5C93.6,623.5,92.8,622.9,92.1,621.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5453",
                  d:
                    "M1489.9,617c-2.1-1.7-1.9-4.2-2.1-6.4c-1.5-12-2.7-24.1-0.8-36.1c0.7-4.6,0-9.2,1-13.7\n                            c1.8-7.7,2.3-15.7,6.1-22.8c1.3,0.7,1.7,1.6,0.9,3c0.1,3.4-2.4,6.2-2.2,9.6c-0.8,3.4-1,7-2.1,10.3l0.1-0.1c-1,1.6,0.4,3.6-1,5.1\n                            l0.1-0.1c-1.3,2.9,0.6,6.2-1.1,9.1l0.1-0.1c-0.8,11.7-0.9,23.4,1.2,35C1490.5,612.2,1491.2,614.7,1489.9,617z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#45403D",
                  d:
                    "M129,635c2.6,2.6,6.4,2.8,9.4,4.8c3.1,2.1-0.8,2-0.4,2.8c5.8-0.5,10.4,3.5,15.9,4.1\n                            c1.9,0.2,1.5,2.1,0.1,3.2c-4.6,0.3-8.5-2.4-12.9-3c-1-0.8-2.3-0.2-3.3-0.7c-2.3-0.5-4.8-0.2-6.8-2c-0.4-1.9,0.6-1.9,2-1.6\n                            c-6.2-1.3-10.5-4.9-13.2-10.5c0.3-0.4,0.8-0.5,1.2-0.2c0.7,0,1.3,0,2,0.1C124.8,633.3,128,632,129,635z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#542E2C",
                  d:
                    "M1813,356.8c4.3,0.1,8.7,0.2,13,0.4c6,0.8,12.1-0.1,18,1.3c4.2,0,8.5-0.4,12.2,2.3\n                            c-1.6,1.9-3.6,1.4-5.6,1.2c-1.8-0.6-3.7-0.8-5.7-0.7c-1.4,0-2.8,0-4.1,0c-4,0.2-7.9-0.2-11.7-0.9c-9.1-0.2-18.2,0-27,2.5\n                            c-1.6,0.5-3.3,0.5-4.9,0.5c-2.7-0.2-5.3,0-7.9,1c-0.5,0.1-0.9,0.2-1.4,0.3c-1.8-0.5-4.3,1.3-5.3-1.7c0-0.5,0.2-0.9,0.5-1.3\n                            c1-0.7,2.1-1,3.2-1.5c2.2-1.1,4.7-0.1,6.9-1.1l-0.1,0c4.3-1.3,8.9-1.1,13.2-2c0.6-0.1,1.2-0.1,1.7-0.2\n                            C1809.7,356.4,1811.3,355.7,1813,356.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2A2423",
                  d:
                    "M1753,465c18.4,12.4,32.1,29,43.3,47.9c0.6,1.1,0.7,2.2,0.5,3.3c-1.1,0.2-1.4-0.7-1.9-1.3\n                            c-3.2-5.9-6.8-11.6-11-16.9c-1-1.9-3.2-3-3.8-5.3l0.1,0.1c-1.8-1.8-3.7-3.7-5.3-5.8c-3.4-3.4-6.7-6.7-10.1-10.1\n                            c-1.8-1.2-3.2-2.9-4.9-4.1c-0.3-0.3-0.7-0.6-1-0.9c-1.8-1.1-3.1-2.9-5-4c-0.3-0.4-0.6-0.8-1-1.2\n                            C1752.4,466.2,1752.4,465.6,1753,465z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302523",
                  d:
                    "M2084,627c2-1.5,4-3,6-4.5c1.4-2.3,2.8-0.6,4.2,0c2.1,2.9,3,5.9-0.1,8.8c-1.3,1-2.8-0.1-4.2,0.1\n                            c0.3,0.9,1.1,1.3,1.6,1.9c0.5,0.5,0.9,1,1.3,1.6c0.4,3.1,3.9,3.4,5,5.8c-3.8,2-7.4,4.6-11.8,5.3c-0.4-0.8,0-1.4,0.5-1.9\n                            c1.1-1,2.3-1.8,3.6-2.3C2087.4,637.2,2080.8,634.1,2084,627z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#210E0C",
                  d:
                    "M303,473.1c-0.4,2.9-2.8,4.6-4.8,6c-9.3,6.6-17.2,14.3-22.4,24.6c-1.1,2.2-3.2,1-4.9,1.2\n                            c2.6-6.3,7.8-10.7,12.1-15.8c4.9-5.9,10.3-11.1,16.7-15.3c0.6-0.4,1.5-0.6,2.2-0.8C302.4,472.5,302.7,472.6,303,473.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1542.8,471.6c-1.3,3.6-4.5,5.6-7,8.1c-11,10.6-20.2,22.6-28,35.7c-0.6,1-0.9,2.2-2.2,2.5\n                            c-0.9-0.9-1.3-2-1.2-3.2c4.7-8.6,10.1-16.7,16.7-23.9c1.1-1.2,2.2-2.5,2.9-4c0.4-0.6,0.8-1.2,1.3-1.6c4.2-3.9,8.4-7.7,12.8-11.5\n                            C1539.5,472.5,1540.7,470.9,1542.8,471.6z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5F4D4B",
                  d:
                    "M2012,615.1c-0.1-0.1-0.2-0.4-0.3-0.4c-8.3,0.2-15.3-6-23.7-4.7c-2,1.3-3.9,1.9-5.2-0.9\n                            c3.6-2.3,7.4-0.8,11.6-0.5c-3.5-0.8-6.5-0.6-9.5-0.7c-1.6-0.1-3.5,0.5-4.1-1.8c5.1-3,10.5-1.3,15.8-1.2\n                            c6.6,0.2,12.7,3.1,19.3,3.8c0.7,0.8,0.8,1.5-0.2,2.1C2014.5,612.3,2013.3,613.7,2012,615.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#743334",
                  d:
                    "M537.2,169.1c0.7,1.3-1.3,1-1.2,2c-17.9,6.6-35.4,14.2-52.8,22c-0.7,0.4-1.4,0.5-2.1,0.1\n                            c1.5-3.7,5.3-3.7,8.2-5.1c10.7-4.6,21.5-9.2,32.2-13.8c0.9-0.4,1.7-0.9,2.5-1.4c1.8-0.7,3.5-1.4,5.4-1.8\n                            C532,170.4,534.6,169.8,537.2,169.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4D4043",
                  d:
                    "M993,308.9c-2.7-2.1,0.3-1.7,1.2-2.5c-5.1-1.3-10.4,0.9-15.2-1.3c0.7-1,1.9-1.3,2.9-1.7\n                            c0.9-0.3,1.9-0.3,2.8-0.2c0.5,0.1,1,0.2,1.4,0.3c2.5,0.4,5,0.2,7.5,0.2c2.4,0,4.9-0.1,7.3,0.4c2.7,0.9,5.5,0.6,8.3,0.6\n                            c2.6,0.1,5.2-0.1,7.7,0.4c3.6,1.2,7.3,0.5,11,0.6c2.6,0.1,5.3-0.4,7.7,0.9c0.6,0.4,0.7,0.9,0.4,1.5c-0.3,0.3-0.7,0.7-1,1\n                            c-1.7,1.6-3.7,1-5.6,1c-7-0.3-14.1,0.7-21.1-0.5c-2.1,0-4.2,0-6.3,0c-2.7-0.1-5.3,0.3-8-0.3C993.7,309.1,993.3,309,993,308.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7A6260",
                  d:
                    "M1967,437c4.5,1.6,9.2,2.1,14,2c1.1,0,3.1-0.6,3.1,0.5c0.1,4.8,4.7,3.6,6.8,5.6c-1.7,0.5-3.3,0.6-5-0.1\n                            c-10-0.8-20-2.4-29.8-4.5c1-2.2,2.6-0.9,4-0.7c1.2,0.3,2.5,0.5,3.7,0.8c3-1.4,6,0.1,9-0.2c0.7,0-0.3-1.1,0-0.5\n                            c-2.8,0.8-5.4,0.2-8-1c-1.9-0.4-3.8-0.9-5.8-1.3C1961.4,434,1964.4,437,1967,437z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#47423E",
                  d:
                    "M1814,566c0.4,5,0.8,10,1.2,14.9c0.3,4.1,0.6,8.1,0,12.2c0,0.3,0,0.5,0,0.8c1.1,11.3-0.7,22.3-2.4,33.4\n                            c-0.3,2.3-0.7,4.6-0.7,6.9c-0.5,3-1.5,4.8-4.4,1.7c1.2-9.7,3.1-19.3,4.4-29c-0.7-2.1,1-3.7,1.1-5.6c0.4-4.5,0.5-8.9,0-13.4\n                            c0.3-0.3,0.2-0.6-0.1-0.9c-0.5-6.9-1.2-13.7-0.6-20.6C1812.9,565.8,1813.4,565.7,1814,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9898",
                  d:
                    "M835,97c6.8,2.4,13.6-0.9,20.4,0c1.9,0.3,4-0.7,5.6,1c-3.6,2.2-7.8-0.1-11.5,1.7\n                            c-8.7,0.7-17.4,0.1-26.1,0.3c-2.7,0-5.4,0-8.1,0c-2.3,0-4.6,0-6.9,0c-2,0-3.9-0.2-5.9,0.5c-3.1-0.2-6.2,0.8-9.3,0.5\n                            c-2-0.2-4,0.5-5.9-0.5c-0.6-0.4-0.6-0.9-0.1-1.4c0.2,0.1,0.5,0.1,0.7,0c2.9-1.5,6.2,0.3,9.1-1l-0.1,0c2.6-1.5,5.6,0.2,8.2-1\n                            c6.6,0,13.2,0,19.8-0.1C828.3,96.2,831.6,96.3,835,97z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8B5554",
                  d:
                    "M1895,366.2c18.2,1.2,36.2,3.2,53,10.9c-2,1.8-4,0.7-6,0.1c-1.7-0.5-3.4-1.5-5.2-0.5\n                            c-3.1-0.3-5.4-2.8-8.6-2.7c-0.9-0.2-1.9-0.4-2.9-0.5c-2.8-0.2-5.6,0.3-8.2-1.1c-2.7-1.5-5.8-1.1-8.6-1.7\n                            c-4.9-0.6-10,0.5-14.5-2.6C1893.6,367,1894.1,366.5,1895,366.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#231F1D",
                  d:
                    "M1542.8,471.6c-6.3,4-10.8,10.2-16.8,14.5c-3.8-2.7,0.4-4.1,1-6.1c5.1-6.1,11.3-11.1,17.7-15.9\n                            c1.2,1.3-0.5,3.2,1.3,4C1545,469.2,1543.9,470.4,1542.8,471.6z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4C48",
                  d:
                    "M105,601c-0.8,0-1.6-0.2-2-1c-1.4-1.3-4.6,0.6-4.8-2.7l-0.2-0.4c1-3.1,0.7-6.3,0.2-9.4\n                            c-0.9-3.1-2.5-6.1-2.1-9.5c3.2,0.2,2.5,3.5,3.9,5c0.3,0.4,0.6,0.7,1,1.1c3.4,4,6.4,8.1,7.8,13.3\n                            C108.5,599.6,107.7,601.3,105,601z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3835",
                  d:
                    "M98.1,597.3c1.6,0.9,3.2,1.8,4.8,2.7c-4.8,3.3-4.6,8.6-4.9,13.4c-0.3,5.7-0.4,6-6.1,4.3\n                            c-0.9-0.3-0.8,0.7-1,1.3c-1.1-3.4-2.9-6.7,2.8-8.2c2.5-0.6,1.9-4,2.3-6.2C96.5,602.1,96.8,599.6,98.1,597.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E2B2A",
                  d:
                    "M813,296c-1.7,0.3-3.6-0.6-5,1c-0.9,0.8-2,0.6-3,0.2c-2.9-0.1-5.9-0.2-8.8-0.3c-2-1-4.2,0.1-6.2-0.8\n                            c-1.6-0.1-3.2-0.2-4.8-0.2c-2.7-1-5.5,0.1-8.2-0.7c-3.2-0.1-6.4-0.2-9.6-0.3c-1.7-0.8-3.7,0-5.4-0.7c-1-0.1-2-0.2-3-0.4\n                            c2.9-1.7,6-0.4,9-0.8c4-0.7,8-0.8,11.9,0c0.7,0,1.3,0,2,0c6.8-0.7,13.7-1.3,20.5-1.2c1.1,0.2,2.1,0.5,2.7,1.5\n                            c-0.7,2.5-3.1,0.4-4.4,1.5c1.6-0.9,3.7,0.5,5.1-1.1c0.5-0.2,1-0.2,1.5-0.2C809.3,294.2,812.2,292.7,813,296z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7A4B4B",
                  d:
                    "M1895,366.2c-0.4,0.3-0.8,0.6-1.1,1c-0.8,0.8-1.8,1-2.9,1.1c-1.6,0.1-3.1,0-4.6-0.3\n                            c-1.4-0.5-2.9-0.6-4.4-0.7c-4.4-0.2-8.7-1.3-13-1.9c-1.2-0.1-2.4-0.2-3.6-0.4c-2.3-0.6-4.5-1.4-6.8-1.5c-0.9,0-1.9,0.2-2.7-0.4\n                            c-0.4-0.7-0.3-1.4,0.2-2c-3.8-1.8-7.8-2-11.9-2.1c-0.3-0.1-0.5-0.3-0.4-0.5c0.1-0.2,0.2-0.3,0.3-0.3c7.4-0.3,14.6,1.3,21.9,2.3\n                            c1.7,0.5,3.4,1.2,5.1,1.4c6.1,2,12.5,2,18.8,3.2C1891.5,365.3,1893.4,365.1,1895,366.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F3835",
                  d:
                    "M1994,669c-10.1,1.5-19.9,4.1-29.8,6.5c-4,0.9-8,1.7-12.2,1.5c-1.2,0.3-1.3-0.5-1.1-1.3\n                            c1.6-2.3,4.4-1.8,6.6-2.7c9.3-1.8,18.5-4,27.7-5.7c3.7-0.7,7.5-1.4,11.3-0.7c0.9,0.2,2.4-0.5,2.4,1.3\n                            C1997.5,669.2,1995.7,669,1994,669z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#766E69",
                  d:
                    "M2092.9,631.1c3.5-2.3,1.8-5.2,0.8-8c2.9-2.6,6,1.1,8.9-0.2c1.7,3.2,5.6,5.6,3.4,10.1\n                            c-0.3,1.9-1.8,2.9-3,4.2c-0.2-0.1-0.4-0.2-0.6-0.3c-2.2-1.5-3.9-4.1-7.1-3.5c-1,0-1.8-0.3-2.4-1.1\n                            C2092.6,631.9,2092.7,631.5,2092.9,631.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#696561",
                  d:
                    "M1522,264.9c1.7,0.7,3.4,1.3,5.1,2c-1.9,0.9,0.8,2-0.1,3c-1.8,0.4-3.5-0.4-5.3-0.6\n                            c-1.4-0.2-3.5-1-3.6,1.7c-1.9,0.4-1.6,3.8-4.3,3.2c-1-2.3,0.3-4.9-0.9-7.1c-0.4-0.7-0.7-1.3-1.1-2c-2.2-1.1-3.7-3.2-6.1-4.1\n                            c-0.4-0.3-0.7-0.6-0.9-1c0-0.3,0.1-0.5,0.1-0.8c1.9,0,3.8-0.1,5.7-0.1c2.3,1.1,5-0.4,7.3,1c3.3,2,7.4,1.8,10.9,3.1\n                            c0.4,0.1,0.5,0.3,0.4,0.5c-0.1,0.2-0.2,0.3-0.3,0.3c-4-0.9-8.1-0.6-12-2.1c-1-0.5-2.5-0.1-2.6,0.5c-0.3,2,1.3,3.1,2.6,4.2\n                            c0.7,0.3,1.5,0.6,2.2,0.9c-0.8-0.8-2.7-0.5-2.4-2.4C1518.6,264.2,1520.3,264.4,1522,264.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D3B42",
                  d:
                    "M1923,433c-2.6-3.4-7.4-2.1-10.2-5c7.1,0.4,13.5,3.4,20.1,5.4c8.4,2.5,16.8,4.7,25.6,5.7\n                            c0.6,0.1,1.2,0.5,1.8,0.8c-1.3,0.3-2.8-0.5-4,0.7c-9.1-2.4-18.7-2.7-27.8-5.6C1926.6,434.4,1924.6,434.2,1923,433z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#402424",
                  d:
                    "M1933,614c-2.5,1.9,2,1.7,0.9,3.2c-0.6,0.5-1.3,0.4-1.9,0c-3-0.9-5.3-2.7-7.1-5.2\n                            c-0.7-2.3-0.8-4.6,0.1-6.9l0,0c0.7-1.3,0.7-3,2.2-3.9l0,0.1c3.3-5.5,7.6-10.2,11.5-15.3c1-1.3,2.1-3,4.2-3.2\n                            c-1.3,3.4-3.1,6.3-5.7,9c-4,4.3-7.3,9.4-10.5,14.4c-1.4,2.2-0.3,4.2,2.3,4.9C1930,612.4,1933.1,611.1,1933,614z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M361.7,459.9c4.6-2,9.7-1.4,14.3-2.8c7.2-2.4,14.5-0.5,21.7-0.2c4.6,0.2,9.3,0.7,13.9,0.7\n                            c6.7,0,13,2,19.3,3.7c0,0.3,0,0.6,0,0.9c-16.6-1.3-33.1-2.8-49.7-3.9c-3.7-0.3-7.6,0.3-11.3,1.1\n                            C367.2,459.9,364.5,460,361.7,459.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2827",
                  d:
                    "M2007.1,403c-1.3,0.6-3.5-2.5-4.1,1c-0.2,0.1-0.4,0.3-0.6,0.4c-6.1-0.4-8-5.2-9.9-9.8\n                            c-0.8-2.1-1.5-3.8-4.1-2.5c-1.5,0.6-2.7-1-4.2-0.7c-2-0.6-4-1-4.8-3.3c0-0.5,0.2-0.9,0.5-1.2c1,0.1,2,0.1,3,0.2\n                            c2.3,0.6,4.7,1.1,7,1.8c2.2,0,3.9,1.2,5.8,2.1c1.3,2.7,4.4,3.5,5.9,6c0.6,1.6,1.7,2.6,3.4,3.1\n                            C2006.3,400.6,2007.5,401.3,2007.1,403z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1A1213",
                  d:
                    "M1469,564c-0.3-2.5,0.8-4.7,1.5-7c0.5-1.7,1-3.4-0.3-5c2.1-7.5,4.1-15.1,7.8-22c1.2-0.3,1-2.9,3-2\n                            c0,3.4-3.3,5.5-3.7,8.3c-1.2,8.3-6.6,15.6-5.3,24.4C1472.3,562.9,1471.5,564.2,1469,564z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B3133",
                  d:
                    "M1325,274.8c9.5,4.7,17.4,11.9,26.5,17.4c1.1,0.7,2.2,1.5,3.3,2.2c1,2.1,4.1,2.7,4,5.6\n                            c-11.3-8-22.7-15.9-34-23.9C1324.5,275.6,1324.6,275.2,1325,274.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#804849",
                  d:
                    "M2034.8,532c0,1,0.1,2,0.1,3c-0.4,0.3-0.8,0.3-1.3,0.2c-1.3-0.8-2.1-1.8-2.1-3.4c0.7-2.6,0.8-4.8-2.9-4\n                            c-3.1,0.6-6.4-1.9-9.4,0.6c-0.6,0.4-1.3,0.6-2,0.7c-0.7,0.1-1.4,0.1-2.1,0c-0.5-0.1-0.9-0.2-1.3-0.4c-1.5-1-3.1-1.8-4.2-3.3\n                            c-0.2-0.5,0-0.8,0.4-1.1c7.6,0,15.2-1.2,22.7,0.9c1.3,0.4,2.5,0.7,3.2,1.9C2037.7,529.1,2034.2,530.1,2034.8,532z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2A2423",
                  d:
                    "M1583.3,446.1c-2.9,1.6-5.8,3.1-8.7,4.7c-5.8,1.6-10.2,5.9-15.6,8.2c-0.2-0.2-0.3-0.5-0.2-0.7\n                            c0.1-0.2,0.1-0.4,0.2-0.4c2-5.1,6.7-7.3,10.9-10.1c2.6-1.7,4.1,2.9,6.1,0.1C1578.1,446,1580.1,443.9,1583.3,446.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322C2B",
                  d:
                    "M1713.1,444.9c6.3,0.5,11.6,3.3,16.9,6.4c3.6,2.1,7.4,3.8,11,5.7c0.5,0.6,0.6,1.3,0,1.9\n                            c-9.7-4.3-19.3-8.7-29-13C1711.9,445.1,1712.1,444.6,1713.1,444.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282323",
                  d:
                    "M1713.1,444.9c-0.3,0.3-0.7,0.7-1,1c-6.1-1.6-12.2-3.3-18.3-4.9c-0.9-1.5-2.9-0.5-3.9-1.8\n                            c0.1-0.2,0.1-0.3,0.2-0.5c0.4-0.2,0.7-0.1,1,0.1c3.9,1.4,8.9-2.1,12.2,2.5c0.1,0.2,1,0.1,1.3-0.1\n                            C1709,438.7,1711.1,441.6,1713.1,444.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#604546",
                  d:
                    "M1356.1,301c0.9,0.5,1.9,0.8,2.8,0c2,2.6,0.8,3.7-1.9,4.2c-0.3,0-0.6-0.1-0.8-0.1\n                            c-6.2-0.2-12.3-0.2-18.5,0.8c-3.5,0.1-7,0.7-10.5,0.5c-2.6-0.2-5.1,1.1-7.7,0.9c-2-0.1-4.3,0.5-5.7-1.8c0.5-1.7,2.1-1.9,3.5-2.4\n                            c3.1-0.6,6.3-0.5,9.4-0.5c2.7,0,5.5,0.3,8.2-0.5c1.6-0.4,3.2-0.4,4.9-0.4c2.1,0,4.2,0.1,6.3-0.6c1.8-0.4,3.6-0.4,5.5-0.4\n                            C1353,300.7,1354.5,301.1,1356.1,301z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#662C2E",
                  d:
                    "M1133,169c-1,0.1-2,0.1-3,0.2c-11.7-5.2-23.6-9.8-35.7-14c-1.6-0.5-3.2-0.7-4.4-2c0.9-0.9,2-0.4,3-0.5\n                            c7.2,0.9,13.5,4.6,20.1,7.1c1.7,0.6,3.4,1.2,5,2.3c0.8,0.2,1.7,0.1,2.1,1c2.7,0.4,4.9,2.4,7.6,2.6c1.2,0.1,2.3,0.5,3.3,1\n                            C1131.8,167.3,1133.4,167.3,1133,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#763F42",
                  d:
                    "M781.5,103.3c-6.9,0.7-13.8,1.7-20.7,1.7c-4.5,0-8.9,0.8-13.4,1.2c-2.5,0.3-5.1,0.9-7.5-0.4\n                            c-0.3-1.3,0.7-1.3,1.5-1.6c0.5,0,1-0.1,1.5-0.1c2.6-1.3,5.5,0.2,8.2-0.9l-0.1,0.1c2.8-1.5,6,0,8.9-1.1\n                            c5.4-0.3,10.8-0.6,16.2-0.5C778,101.7,780.1,101.3,781.5,103.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2520",
                  d:
                    "M244,669c2.4,0.8,4.3,2.3,5.9,4.1c-10.7-2.1-21.4-4.2-31.9-7.3c4.3-1.7,8.3,0.4,12.4,0.9\n                            C235,667.3,239.3,669.1,244,669z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#796E6A",
                  d:
                    "M1513.8,273.9c2.4,0.5,1.3-4.3,4.4-2.9c1.7,1.2,2.4,3,2.9,4.9c-5.8-0.1-11.6-0.6-17,2.2\n                            c-0.5-1.9-2.6-2.4-3.5-4.1c3.1-1.8,6.4,0.2,9.3-0.9C1511,274,1512.6,273,1513.8,273.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D4447",
                  d:
                    "M2007.1,403c-1.1-2.9-6.8-0.9-6.1-5.7c0.4-0.4,0.8-0.5,1.3-0.4c4.7,2.1,8.9,5.2,14,6.4\n                            c1,0.6,2.1,1,2.7,2.2c2.4,2.5,6,3.9,7.1,7.6c-3.1-0.5-5.3-2.7-8-4C2014.9,406,2010,406.3,2007.1,403z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#231F1D",
                  d:
                    "M1559,458c0,0.3,0,0.7,0,1c-0.1,0.3-0.1,0.5-0.1,0.8c-1.3,1.2-2.5,2.5-4.3,3.1c-3.5,0.7-5.3,4.2-8.6,5.2\n                            c1.8-4.8,3.8-9.4,8.5-12.2C1557.4,454.2,1558.5,455.1,1559,458z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1813,566c0.4,7,0.9,14,0.1,21c-2.6-3.3-1.4-7.4-1.7-10.9c-0.9-10.4-1-20.9-3.4-31.2\n                            c2.3,3.7,2.2,8.2,3.8,12.2C1812.5,560,1813.4,562.9,1813,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383330",
                  d:
                    "M2095.2,432.3c-0.1-6.7-0.1-13.5-0.2-20.2c0-1.4,0.5-2.7-1.9-3.6c-3.7-1.5-0.9-3.8,1.7-6.4\n                            c-4.2,0.9-5.8,4.2-8.9,3.9c1.9-3.4,5-5.3,8.4-6.9c3.1,2.4,1.1,5.7,1.6,8.6c0.4,2.1,0.2,4.2,0.3,6.3c0.5,2,0.5,4,0,6\n                            c-0.1,3.9-0.2,7.8-0.3,11.7C2095.8,432,2095.6,432.2,2095.2,432.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#382324",
                  d:
                    "M2038.1,548c0.3,0.2,0.6,0.2,0.8,0c2.1,1.1,5.1,1,5.6,4.3c0,1.2-0.4,2-1.7,2.2c-6.1,0.9-11.6-2-17.5-3\n                            c-1.1-2.9,2-2.3,2.9-3.5c1.8-1.2,3.9-1.2,5.9-1.3C2035.6,546.5,2037.1,546.5,2038.1,548z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D393B",
                  d:
                    "M1279.9,217c0-1.5-1.7-1.7-2.2-2.9c3.9-2.4,6.4,1.4,8.8,2.7c5.1,2.9,10.8,5,15.5,8.6\n                            c1.3,1,3.2,1.6,1.3,3.7c-2.2,0.3-3.5-1.3-5.2-2.1C1292,223.7,1285.9,220.4,1279.9,217z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E2B2A",
                  d:
                    "M749,291c0.7,0,1.3,0,2,0c0.3,0.2,0.5,0.4,0.4,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c0,0.3,0,0.6,0,0.9\n                            c-0.2,0.5-0.5,0.6-1,0.3c-1-0.1-2.1-0.3-3.1-0.4c-2.4-0.6-4.8-0.1-7.2-0.3c-1.9-0.1-3.8,0.3-5.7-0.3c-2.1,0-4.1-0.1-6.2-0.1\n                            c-2.2-1.3-4.7,0.1-6.9-0.8c-0.7-0.1-1.4-0.3-2.1-0.4c-3-0.7-6-0.1-9-0.3c-1.6-0.1-3.3,0.3-4.9-0.3c-0.7-0.2-1.4-0.3-2.1-0.5\n                            c0-0.2,0-0.4,0.1-0.6c1.3,0,2.7-0.1,4-0.1c3.3-0.7,6.7-0.8,10,0c2.7,0,5.3,0,8,0c3.2,1.4,6.8-0.4,10,1l0,0\n                            C739.6,291.4,744.4,289.6,749,291z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#837773",
                  d:
                    "M2102,623c-2.7,2.7-5.5-0.8-8.3,0.2c-1.3-0.1-2.4-1.2-3.8-0.6l-0.2-0.3l0.2-0.2\n                            c-0.4-0.2-0.5-0.5-0.4-0.7c0.1-0.2,0.2-0.3,0.4-0.3c2.6-0.9,5.3-1.8,7.4-3.8c2.7-2.6,3.9-0.9,4.6,1.8\n                            C2102.2,620.3,2105.3,621.7,2102,623z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989192",
                  d:
                    "M1505.1,515.1c0.7,0.8,0.8,1.8,0.5,2.8c-4.5,7.3-6.6,15.7-10.5,23.2c-0.3-1-0.6-2-0.9-3\n                            c1.3-3.6,2.6-7.3,4-10.9c1.4-3.9,3.2-7.6,5.3-11.1C1503.7,515.3,1504,514.4,1505.1,515.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#381D1B",
                  d:
                    "M1481,528c-1.6-0.2-1.1,2.7-3,2c3.7-10,9.1-19.2,15-28c-1.8,4.9-2.2,10.1-6.6,14.4\n                            C1483.8,518.9,1480.9,523.3,1481,528z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#985C5F",
                  d:
                    "M740,105c2.2,2.1,5,0.3,7.4,1.2c-5.1,0.9-10.3,1.8-15.4,2.6c-4,1.7-8,0.9-12.1,0.7\n                            c-1.1,0-2.1-0.2-2.2-1.4c0-1.3,1-1.5,2.1-1.5c2.8-0.2,5.6,0.4,8.3-0.4l-0.1,0.1c1.9-1.4,4.3,0,6.3-1c0.2,0.2,0.4,0.2,0.6,0\n                            C736.6,104.1,738.3,104.3,740,105z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#958E8A",
                  d:
                    "M92.1,621.9c0.9,0.4,1.9,0.8,2.8,1.1c1.4,0.8,2.5,2,3.8,2.9c3,3.6,6.5,6.5,10.2,9.2\n                            c1.2,0.9,3.3,1.4,2.1,3.7c-8.2-2-13-8.6-18.5-14.1C92,624.2,92.2,622.9,92.1,621.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#997475",
                  d:
                    "M1196.9,314.1c1.7-0.1,3.4-0.2,5.1-0.2c2.5,0,2.9,1.8,3.3,3.7c-0.4,5.1,1.4,10.5-1.2,15.4\n                            c-0.3,5.3,1.6,9.9,5.1,13.8c0.4,0.7,0.4,1.3-0.1,1.9c-5.2-3-5.8-8.1-6.1-13.3c-0.1-2.2-0.1-4.3-0.1-6.5\n                            c-0.7-2.7-0.1-5.5-0.4-8.3c-0.2-2.1-0.3-4.3-2.4-5.5c-0.9-0.1-1.8-0.2-2.7-0.3C1196.8,314.8,1196.7,314.5,1196.9,314.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C403C",
                  d:
                    "M1937.1,375.9c0.3-2.5,1.6-1.4,2.8-0.9c2.6,1,5.2,2.3,8.1,2c4.9,1,9.5,3,14.1,4.9\n                            c-0.2,0.8-0.7,1.3-1.4,1.6c-0.7,0.2-1.5,0.2-2.3,0c-6.5-2.7-13.7-3-20.2-5.8C1937.6,377.3,1937.1,376.7,1937.1,375.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1015.1,97c-2.2,1.8-4.8,1-7.2,0.9c-10.3-0.6-20.5-1.3-30.8-1.9c-1.2-0.1-2.3,0.2-3.3,0.9\n                            c-0.8,0.9-1.7,0.5-2.7,0.4c-0.3-0.2-0.4-0.5-0.4-0.8c0-0.3,0-0.5,0.1-0.5c6.3-3.1,13-1.2,19.3-0.8\n                            C998.4,95.9,1006.8,95.9,1015.1,97z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8B8682",
                  d:
                    "M2084.9,443.1c3.4,0.4,7.1,2.6,10-1.2c0.9,1,0.8,2,0.1,3.1l0,0c-0.4,2.8-3.6,4.1-3.8,7\n                            c-0.1,2.9-0.2,5.8-0.3,8.7c-1.7,0.9-1.5-0.7-1.9-1.4c-0.5-2-0.4-4-0.3-6c0.1-2.4-0.9-4.1-2.9-5.4c-0.3-0.6-0.6-1.3-0.9-1.9\n                            C2084.3,445.1,2084.4,444.1,2084.9,443.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#743B3C",
                  d:
                    "M1834.9,390.9c-0.3,0.1-0.5,0.3-0.8,0.3c-1.8,2.5-4.3,0.8-6.4,1.1c-1.9-0.8-3.8-1.6-5.7-2.4\n                            c-1.5-0.4-3-0.8-4.2-1.9c-1.7-1.1-3.9-1.2-5.1-3.1c0-0.5,0.1-0.9,0.4-1.3c2.1-1.5,3.9-0.8,5.9,0.5c3.2,2.2,6.7,3.6,10.6,3.6\n                            C1831.6,388.4,1834.3,387.8,1834.9,390.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7A7370",
                  d:
                    "M111,638.8c-2.3-3.5-6.4-4.8-9.2-7.8c-1.5-1.6-2.9-3.1-3.8-5.1c0.7-0.6,1.3-0.5,2,0l0,0\n                            c6.5,3.4,11.2,9.2,17.7,12.7c0.9,0.5,2.2,1.2,1,2.7c-2.1,0.5-3.8-0.8-5.7-1.4C112.3,639.6,111.7,639.2,111,638.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#421F23",
                  d:
                    "M367,445c-10.5,3-21.3,5.3-31.3,9.8c-0.4,0.2-1.1-0.4-1.7-0.6C344.6,449.6,355.3,445.6,367,445z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C3035",
                  d:
                    "M480.8,192.8c0.8,0.1,1.6,0.2,2.4,0.3c-6.1,3.8-12.7,6.7-19.2,9.9c-0.5-0.6-0.8-1.3-0.6-2.1\n                            c3.1-3,7-4.4,11-5.8c1.3-0.5,2.7-0.9,3.6-2.1C478.8,192.3,479.8,192.4,480.8,192.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E494F",
                  d:
                    "M1236.9,349.8c7.2-3.6,15.1-6,20.9-12c1,1.4-0.4,2.1-0.8,3.2C1251.3,346.3,1244.7,349.4,1236.9,349.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#613634",
                  d:
                    "M1782.9,362.9c1.3,2,3.7-0.7,5.1,1.2c0.4,1-0.1,1.6-0.7,2.2c-1.4,1.5,1.6,1.3,1,2.5\n                            c-0.2,2.9,4,1.9,4,4.5c-0.1,0.8-0.6,1.2-1.4,1.4c-2.9,0.1-4.6-2.2-6.9-3.5c-1-1-2-2.1-3-3.1\n                            C1780.1,365.7,1780.2,363.8,1782.9,362.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#753B3E",
                  d:
                    "M1790.7,374.1c0.4-0.3,0.8-0.6,1.2-1c1-0.9,2.1-0.3,3.1-0.2c1.5,0.3,2.6,1.3,4,1.8\n                            c0.4,0.2,0.7,0.5,1,0.8c1.5,1.3,3.3,1.9,5,2.8c1.2,0.6,2.3,1.2,3.5,1.8c1,0.5,2.1,1,2.6,2.2c-0.1,0.8-0.7,1.2-1.4,1.4\n                            c-1-0.1-2,0-2.8-0.6c-2-1-4-2-6.1-3.1C1797.6,377.9,1793.2,377.7,1790.7,374.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D1D1B",
                  d:
                    "M1983,620.8c3.4-2.9,7.5-1.4,11.3-1.8c2.9-0.3,6,0.3,8.8-0.9c0.5-0.2,1.6-0.3,0.3-1\n                            c-0.4-0.2-1-0.1-1.5-0.1c1.9-1.9,4.4-0.8,6.6-1.5c1.4-0.5,0,1.4,0.4,2.2C2000.5,620.5,1991.8,620.8,1983,620.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M550.1,589.5c2,6.5,1,13.2,0.7,19.7c-0.2,4.6,0.8,9.3-0.8,13.7c-2.1-2.7-1.3-5.9-0.9-8.6\n                            C550.5,606.1,549.6,597.8,550.1,589.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#504746",
                  d:
                    "M1973.1,547c0.3-0.2,0.6-0.4,0.9-0.6c1.9-0.6,3.8,0.6,5.7,0.3c0.5,0,1,0,1.5,0c3.7-0.1,7.4,0,11.1,0\n                            c2,0,3.9-0.1,5.8-1c3.8-1.4,8.5-0.1,9.8,2.7c-0.9,0.7-1.9,0.8-3,0.9c-2.3-0.1-4.5,0.2-6.7,0.8c-8.3,0-16.6,1.2-24.9-0.7\n                            C1972.4,548.7,1972.4,547.9,1973.1,547z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#483A38",
                  d:
                    "M1540.1,274.2c2.4-1,3.7-2.7,4-5.3c1.4-1.3,3-2,4.8-0.8c1.7,0.9,2.5,2.1,1.9,4.2\n                            c-0.8,2.9-3.4,0.8-4.9,1.8C1544,274.7,1542,274.6,1540.1,274.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989391",
                  d:
                    "M1548.9,268.1c-1.6,0.3-3.2,0.5-4.8,0.8c-4.7-2.6-10-3.3-15-4.9c0-0.3-0.1-0.5-0.1-0.8\n                            C1535.7,264.2,1542.9,263.7,1548.9,268.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2094.2,399.1c-2.8,2.3-5.6,4.6-8.4,6.9c-4,2.9-8.9,4.9-10.8,10.1c-1.4-1.2-1.5-2.6-0.2-3.8\n                            c5.2-5.1,11.6-8.7,17.4-13C2092.7,398.8,2093.5,399.1,2094.2,399.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#978E8C",
                  d:
                    "M970.8,96.1c0.2,0.2,0.3,0.5,0.5,0.7c-1.5,1.6-3.6,0-5.2,1.1c-9.9-1.5-20.1,0-30-1.7\n                            C947.7,96.1,959.3,96.1,970.8,96.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#372728",
                  d:
                    "M2018,409c3.1,0.5,5.4,2.5,8,4c3.8,4.3,6.8,9,6.8,15C2029.9,420.1,2025.3,413.5,2018,409z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7C5952",
                  d:
                    "M1961,382.9c0.4-0.3,0.8-0.6,1.2-0.9c5.7,1,11.5,1.9,16.9,4c-0.8,1.2-2.1,1.8-3.2,2.5\n                            c-2.2,0.5-4.2-0.7-6.2-1.2c-2.2-0.8-4.5-1.4-6.6-2.5C1962.2,384.3,1961.4,383.8,1961,382.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E3637",
                  d:
                    "M927,303c0,0.3,0,0.6,0,1c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3c-3.2,0-6.4,0-9.6,0\n                            c-2.1-0.9-4.3,0-6.4-0.7c-4-0.2-8-0.4-12-0.5c0.9-2.4,3.1-1.9,4.9-2c2.7-0.2,5.5,0,8.2-0.1C917.1,302.1,922.3,300.3,927,303z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M759.6,102.9c-2.8,0.1-5.7,0.2-8.5,0.3c5.7-1.8,11.7-2.6,17.6-3.1c4.4-0.4,8.9-0.1,13.4-0.1\n                            c0.1,0.3,0.2,0.5,0.2,0.8c-0.2,0.2-0.3,0.4-0.5,0.7c-0.2,0.1-0.5,0.2-0.7,0.4c-3.8,0.6-7.7-0.3-11.5,0.7\n                            C766.2,102.9,762.9,101.9,759.6,102.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5350",
                  d:
                    "M1496.6,638.2c0.5,1.9-0.1,4.1-2,2.6c-2.5-1.9-5.4-1.2-7.7-2.7c1.3-1,2.7-0.6,4-0.3\n                            c3.1,0.6,3.3-1.1,2.7-3.4c-0.5-1.8-1.1-3.6-1.6-5.5c-0.8-1.2-0.6-2.5-0.3-3.8c0.4-0.5,0.8-0.5,1.2,0c-0.2,1-0.2,2,0.6,2.9\n                            c2,2,1.5,4.8,2.4,7.1C1495.9,636.3,1495.6,637.4,1496.6,638.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#623736",
                  d:
                    "M912,303c-4.3,0.4-8.7-0.8-13,0.7c-2,1.4-3.4-0.8-5.1-0.9c-0.8-0.5-2.9,0-1.8-2.2\n                            c3.2-1.7,6.8-1.5,10.3-1.8c1,0.1,2,0.4,2.7,1.3c-0.4,2-1.8,1.3-2.9,1.3c1.7,0.6,3.3-0.7,5.1-0.6\n                            C909.2,300.9,911.4,300.3,912,303z"
                }
              }),
              _vm._v(" "),
              _c("path", { attrs: { fill: "#FDFDFD", d: "M721.6,688.9" } }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4A2727",
                  d:
                    "M2016,443c5.2-3.4,11.1-5.5,16.8-8C2028.6,440.5,2022.7,442.6,2016,443z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#35312D",
                  d:
                    "M2085.9,447.9c2.9-1,4.4-0.3,4.2,3.1c-0.2,2.8-0.1,5.5-0.1,8.3c-0.7,0.3-1.4,0.3-1.8-0.5l0,0.1\n                            c-1.6-1.2,0.1-3.3-1.2-4.6C2085.4,452.4,2086.3,450,2085.9,447.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M452.1,467.8c7.3,4.1,14.5,8.1,21.8,12.2C465.6,477.7,458.4,473.7,452.1,467.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2928",
                  d:
                    "M1741,458.9c0-0.6,0-1.3,0-1.9c4.4,2,7.9,5.5,12,8c0,0.6,0,1.2,0,1.9\n                            C1748.7,464.8,1744.7,462.1,1741,458.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M113,640c2,0.4,4,0.7,6,1.1c3.3-0.6,6.2,1,9.1,2.1c3.3,1.3,6.5,2.2,10,2.7c1,0.5,2.4-0.2,3.1,1\n                            C131,647.7,121.8,644.6,113,640z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D3634",
                  d:
                    "M1008,309c9,0,18,0,27,0c1.1,0.6,0.1,1.3,0,1.9c-0.6,0.7-1.3,0.6-2,0.3c-1-0.1-2.1-0.3-3.1-0.4\n                            c-3.4-0.7-6.9-0.1-10.3-0.3c-3.5-0.2-7.1,0.4-10.6-0.4c-0.4-0.1-0.7-0.3-1.1-0.4C1007.9,309.5,1008,309.2,1008,309z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M524.8,523.1c0.4,2.9,2,4.8,4,6.9c3.6,3.8,6.1,8.6,7.4,13.9c-2.6-4.3-4.7-9.3-8.1-12.9\n                            c-2.7-2.8-4.3-5.6-4.9-9.3C523.7,522.2,524.2,522.7,524.8,523.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#604C4A",
                  d:
                    "M1479.1,278.1c4.2,1.9,8.6,0.5,12.9,0.5c2.6,0,0.2-3,2-3.7c2.2,0.9,5,1.4,3,4.8c-3-0.3-6-0.2-8.9,0.8\n                            c-2.9-1.8-6-0.1-8.9-0.6C1476.4,279.5,1477.7,278.8,1479.1,278.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2A211E",
                  d:
                    "M2087,644.9c-0.3,0.4-0.7,0.7-1,1.1c-0.8,1.8-2.3,1.9-4,2c-1.2-0.1-2.5,0.1-3.3-1.2\n                            c-1.1-0.2-2.3-0.4-2-2c0.4-0.6,0.9-1.1,1.5-1.3c1.7-0.4,3.4-1,5.2-1.1C2085.4,642.1,2087.2,642.3,2087,644.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#683232",
                  d:
                    "M892,301.1c0.7,0.6,1.3,1.1,2,1.7c-3.5,0-7,0.1-10.5,0.1c-2.4-1-5,0.1-7.4-0.7c-1.9-0.1-3.9-0.2-5.8-0.3\n                            c-0.4-0.1-0.6-0.3-0.6-0.7c3.8-0.1,7.6-0.1,11.4-0.2C884.7,298.8,888.4,298.8,892,301.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C38486",
                  d:
                    "M1439.3,281.8c-0.1-0.3-0.2-0.6-0.3-0.8c5.4,0,10.8-0.1,16.2-0.1c1.9-0.6,3.8-0.6,5.7,0\n                            c3.6,0.5,7.3-0.5,10.9,0.6C1460.9,281.6,1450.1,281.7,1439.3,281.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1795,514.9c0.6,0.4,1.2,0.9,1.9,1.3c2.5,7,7,13.2,8.3,20.8C1801.1,530,1798.2,522.4,1795,514.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D3634",
                  d:
                    "M1071,311c0,0.3,0,0.6,0,1c-3.2,1.1-6.5,0.2-9.8,0.5c-2.1-0.1-4.2,0.3-6.2-0.3\n                            c-4.6-0.1-9.1-0.2-13.7-0.3c-0.4-0.1-0.6-0.3-0.7-0.7c5.8-0.1,11.6-0.1,17.3-0.2C1062.3,310.2,1066.7,310.2,1071,311z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#796566",
                  d:
                    "M649.2,282.9c-3.4,0.1-6.8,0.2-10.1,0.3c-2.6,1.6-5.4,0.6-8.1,0.9c-2.3-0.4-4.6-0.8-6.9-1.2\n                            c0.3-2.1,2.1-1.9,3.6-2.2c5.4-0.2,10.8-0.1,16.2,0C645.8,280.6,648.2,280.1,649.2,282.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M452,467.1c0.1,0.2,0.2,0.5,0.2,0.8c-7.5-0.5-14.5-2.5-21.3-5.8c0,0,0.1-0.1,0.1-0.1\n                            c3.1-1.8,5.6,0.4,8.4,1.1C443.7,464,447.9,465.3,452,467.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B948E",
                  d:
                    "M2102,623c1.8-1.3-0.5-2.7,0-4c2.8,2,3,5.7,5.1,8.1c0.6,1.6,0.5,3.3,0.1,4.9c-0.4,0.4-0.8,0.7-1.2,1.1\n                            C2106.7,628.9,2102.6,626.7,2102,623z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#864645",
                  d:
                    "M1847.9,401.8c0.2-4,1.9-3.5,4.1-1.3c2.3,2,5.3,2.8,7.9,4.2c0.8,1.1,0.2,1.7-0.9,2.1\n                            C1854.9,406.1,1852.1,402.3,1847.9,401.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1800.5,536.9c-2.2-4.6-4.4-9.1-6.6-13.7c0.5-0.2,0.9-0.5,1.4-0.7c2.2,4.5,4.5,9,6.7,13.5\n                            C1801.5,536.3,1801,536.6,1800.5,536.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E8DDDB",
                  d:
                    "M2016,404c-5.1-1.4-10-3.3-14.2-6.8c0.1-0.2,0.2-0.5,0.2-0.7c0.5-0.5,1.1-0.9,1.9-0.5c1,1.3,2.4,1.8,4,2\n                            c1.2,1,2.5,1.7,4,2.1c0.6,1.3,1.6,2,3,1.9C2015.5,402.5,2016.6,402.8,2016,404z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#866267",
                  d:
                    "M591.1,280.8c-5-0.4-10.1-0.8-15.1-1.1c-0.1-1.3,0.7-2.1,1.8-2.5c5.4,0.4,11.1-0.5,16.2,2\n                            C594.1,281.5,591.9,279.9,591.1,280.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#96595B",
                  d:
                    "M2038.1,548c-1-0.5-2.1-0.4-3.1,0c-0.4-0.4-0.7-0.9-0.9-1.4c0.1-3.9-2.5-7.7-0.1-11.6c0.3,0,0.6,0,1,0\n                            C2036,539.3,2037,543.7,2038.1,548z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C282E",
                  d:
                    "M1295.2,309.2c-0.2,0.2-0.3,0.4-0.3,0.6l0.1,0c-3.7,1.6-7.7-0.2-11.5,1c-2.1,0.1-4.3,0.2-6.4,0.2\n                            c-2-0.1-4.1-0.1-6.1-0.2c-0.1-0.3-0.1-0.5-0.2-0.8c0.3-0.5,0.7-0.8,1.3-1c3.7-1,7.6,0.2,11.2-1.1c3.6-0.4,7.2-0.7,10.8,0.1\n                            C1294.5,308.3,1295,308.7,1295.2,309.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A7774",
                  d:
                    "M511,272.7c1-0.6,2-1.1,3-1.7c3.6-2.1,6.8-0.7,10,1c0.6,1.9-1.3,1.2-1.9,1.8\n                            C518.4,273.5,514.7,273.1,511,272.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2076,417c2.3,0.8,2.2,3.2,3.1,4.9c1.7,1.7,2.4,3.7,1.8,6.1c0.4,2.3,0.9,4.6,1.3,6.9\n                            C2078.4,429.6,2078.7,422.8,2076,417z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#514844",
                  d:
                    "M1999,667.8c-0.7-0.3-1.3-0.6-2-0.8c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3\n                            c4.3,0.5,8.5-2.6,12.9-0.3C2006.1,665.6,2002.9,668.9,1999,667.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#91544F",
                  d:
                    "M1859,406.8c0.3-0.5,0.6-1,1-1.5c0.5-1.3,1.3-0.1,2-0.3c0.4,0,0.8,0.1,1.2,0.1c1.3,2.5,4.8,1.8,6.1,4.3\n                            c-0.8,1.5-1.8,1.3-3,0.5C1863.5,409.8,1861.3,408.1,1859,406.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C69898",
                  d:
                    "M1978.9,547.8c-1.8,0.2-3.6-0.1-5-1.4c0.6-2.2,2.7-3.1,4.1-4.6c0.5-0.5,0.9-1,1.6-1.1\n                            c0.5,0.1,0.8,0.4,1,0.8c0.2,0.7,0.1,1.3-0.1,2C1979.6,544.8,1979.2,546.3,1978.9,547.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9D9692",
                  d:
                    "M2097.8,640.8c-3.4-0.5-5.7-2-6-5.7c1.1-0.7,1.9,0,2.5,0.7c1.9,2.3,3.6,1.3,5.4,0\n                            c1.3-0.4,2.2,0.4,3.2,0.8c0.1,0.2,0.1,0.4,0,0.6C2101.8,639.2,2099.5,639.5,2097.8,640.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C3737",
                  d:
                    "M1327,305c3.7,0,7.4-0.1,11.1-0.1c1.2-0.6,2-0.5,2.1,1c-1.3,1.1-3.1,0-4.4,0.9c-0.6,0.1-1.2,0.1-1.9,0.2\n                            c-1.8,0.7-3.7,0.2-5.5,0.3C1327.4,307,1326.6,306.4,1327,305z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#583131",
                  d:
                    "M1843.9,358.2c0,0.3,0.1,0.5,0.1,0.8c-6-1-12.1-0.3-18.1-1.8C1832,357,1838,356.5,1843.9,358.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#85494B",
                  d:
                    "M447,209.9c0.6-0.1,1.2-0.2,1.8-0.2c0.5,0.4,0.6,0.9,0.3,1.5c-2.5,1.5-3.7,4.9-7.2,5.1\n                            C442.7,213.4,444.9,211.7,447,209.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M260.9,634.1c-1.5-6.3-2-12.7-2-19.1C260.7,621.3,261.3,627.6,260.9,634.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E8DDDB",
                  d:
                    "M2001.8,397.2l-0.4,0l-0.4,0c-1.1-1-2.1-2.1-3.6-2.4c-2.2-0.5-2.2-2-1.5-3.7c2.4-0.3,3.6,1.9,5.3,2.9\n                            c0.7,0.8,1.4,1.5,1.1,2.7C2002.1,396.9,2001.9,397.1,2001.8,397.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#764D4D",
                  d:
                    "M2039.6,561.9c-2,1-2.2,3.4-3.8,4.7c-0.5,1.4-1,2.9-3,2.6c-0.3-0.4-0.5-0.9-0.5-1.4\n                            c1.2-4.4,3.3-7.8,8.6-8C2041.6,561.2,2040.6,561.5,2039.6,561.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373230",
                  d:
                    "M100,583c-2.3-0.9-2.1-3.7-3.9-5c-0.8-0.7-1.2-1.9-0.6-2.5c1.1-1.1,1.6,0.3,2.1,1c1.2,1.5,2.3,3,3.5,4.5\n                            C100.3,581.4,100,582.1,100,583z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A6764",
                  d:
                    "M544,276.8c-3.3-0.4-6.7-0.7-10-1.1c0.1-1.6,1.3-2.1,2.6-2.6c3.2-0.6,6.2,0.2,9.1,1.4\n                            C547.1,276.7,544.8,276.2,544,276.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8B6F6E",
                  d:
                    "M2043,553.8c1.1-0.3,0.9-1.3,1.1-2.1c0.3-0.2,0.6-0.2,0.9,0.1c0.3,2.2-0.5,4.2-1,6.2\n                            c-0.4,0.3-0.9,0.3-1.3,0c-0.4-0.3-0.7-0.6-1.1-1c-2.6-2.1-6.5,0.5-8.9-2.5c0-0.6,0.3-1,0.9-1.1\n                            C2036.8,553.7,2039.9,553.2,2043,553.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C28C87",
                  d:
                    "M1991.9,529.9c1.7-2.6,4.8-2.4,7.2-3.5c0.3,0.4,0.4,0.9,0.3,1.4c-0.8,2-2.2,3.3-4.2,4.1\n                            C1993.7,531.8,1991.9,532.4,1991.9,529.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E302E",
                  d:
                    "M1957,565c3-1.2,3.9-4.8,6.7-6.2c1.4,1.4,0.6,2.4-0.7,3.1c-3.3,1.7-4.7,5.4-7.8,7.2\n                            c-0.2-0.1-0.3-0.3-0.5-0.4c0-1.2,0.7-2,1.4-2.8C1956.4,565.7,1956.7,565.3,1957,565z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8D7477",
                  d:
                    "M627.3,281.8c-1.1,0.4-2.4,0-3.2,1c-3.1,0.3-6.1-0.5-9.1-1c-0.2-0.7,0-1.2,0.7-1.5\n                            C619.6,279.6,623.8,278,627.3,281.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#746563",
                  d:
                    "M1497,279.8c0.6-2.6-1.7-3.4-3-4.8c4.2-1.6,5.6,3.5,9.1,3.7C1501,279,1498.8,278.6,1497,279.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#311418",
                  d:
                    "M316,464.2c0,2.1-2.4,1.5-3,2.8c-2.2,0-3.6,2.7-6,2C309.3,466,312.2,464.3,316,464.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1813.2,587.9c0.8,4.5,1.2,8.9,0,13.4C1812.5,596.9,1812.8,592.4,1813.2,587.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M489.2,487.7c3.7,2.2,7.7,4,10.7,7.3C495.8,493.3,491.5,492,489.2,487.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9F615F",
                  d:
                    "M1866.3,409.9c0.9-0.1,2,0.3,2.7-0.7c0.6-1.2,1.3-0.1,2-0.1c0.4,0,0.7,0.1,1.1,0.1\n                            c0.6,1.5,3.1,1.3,3.2,3.4c-0.4,0.8-1,0.8-1.8,0.5c-1.2-0.3-2.3-0.6-3.5-1C1868.5,411.7,1867.3,411,1866.3,409.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A2847C",
                  d:
                    "M1999,526.7l0.1-0.4c0.3-0.1,0.6-0.2,0.9-0.3c2.1-0.1,4.3-0.3,6.4-0.3c1.5,0.4,3.7-0.2,3.5,2.5\n                            c-1.8,1.4-3.9,1.5-6,1.8C2001.3,530.4,1999.4,529.6,1999,526.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463738",
                  d:
                    "M927,304.9c0-0.3,0-0.6,0-0.9c5.3,0,10.6,0,15.9,0c0,0.2,0,0.5,0,0.7c-2.4,0.2-4.8,0.3-7.1,0.5\n                            c-2.6,0.4-5.2,0.5-7.8,0C927.7,305.1,927.4,305,927,304.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CEA9A3",
                  d:
                    "M1991.9,529.9c1,1.7,2.7,1,4.1,1.1c0.1,0.1,0.3,0.3,0.4,0.4c0.3,0.6,0.3,1.2,0.2,1.8\n                            c-0.1,0.4-0.4,0.7-0.7,1c-0.4,0.1-0.8,0.1-1.2-0.1c-0.4-0.2-0.7-0.4-1.1-0.6c-2-0.7-3.5,1.5-5.4,1.1c-0.7-0.2-1.2-0.5-1.2-1.3\n                            C1988.7,532.2,1989.5,530,1991.9,529.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E5356",
                  d:
                    "M440.8,228c0.8-1.7,1.4,0.1,2.2,0.1c2,0.5,3.2,1.6,3.2,3.8c-1,0.4-1.1,1.2-1.2,2.1\n                            C442.7,232.6,441,230.8,440.8,228z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M478,482.1c4.3,0.8,7.6,3.5,11.3,5.7C484.9,487,481.2,485.2,478,482.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C69898",
                  d:
                    "M1987,533.3c0.3,0.2,0.7,0.4,1,0.7c0.7,1.7-0.7,2.5-1.5,3.5c-1.5,1.4-2.7,3.1-4.7,4\n                            c-0.7,0.2-1.4,0-1.9-0.5l-0.2-0.2c0.6-2.8,3.2-3.9,4.9-5.8C1985.3,534.2,1985.8,533.3,1987,533.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M536.1,543.8c1.9,4.2,3.1,8.6,4.2,13C537.3,553,536.1,548.6,536.1,543.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#753D45",
                  d:
                    "M630.9,284c2.5-2,5.4-0.7,8.1-0.9c0,0.6,0,1.2,0,1.7c-0.2,0.5-0.5,0.6-1,0.3\n                            C635.8,284.1,633,285.9,630.9,284z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#63514D",
                  d:
                    "M536,274.2c-0.7,0.5-1.3,1.1-2,1.6c-2.6-0.3-5.3-0.7-7.9-1c-0.2-1.3,0.5-2,1.6-2.5\n                            C530.7,271.9,533.6,272.1,536,274.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E302E",
                  d:
                    "M1955.2,569.2c-1.2,3.9-4.5,5.7-7.6,7.7c-0.3-0.7-0.2-1.3,0.3-1.9c0.3-0.4,0.7-0.7,1-1.1\n                            c1.8-1.9,3-4.5,5.9-5.1L1955.2,569.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M297.1,496.2c1.6-0.9,3.2-1.8,4.8-2.7c-2,3.7-5.2,5.9-9,7.4C294.3,499.3,295.7,497.8,297.1,496.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#604546",
                  d:
                    "M1325,308c-4.3,0-8.6,0-12.9,0c-0.2-1.4,0.8-1.7,1.8-1.6c3.9,0.4,7.7-0.3,11.6,0\n                            c0.7,0.4,0.8,0.8,0.3,1.4l-0.4-0.1L1325,308z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2084.9,443.1c0,0.9,0.1,1.9,0.1,2.8c-2.1-3.5-2.9-7.2-2.8-11.2C2083.1,437.6,2084,440.4,2084.9,443.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#45403D",
                  d:
                    "M154,650c2.2,0.8,5.9-3.7,6.9,1.8C158.6,651.5,156.2,651.1,154,650z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7B4B4B",
                  d:
                    "M1209.1,348.7c0-0.6,0.1-1.3,0.1-1.9c2.6,1,5.2,2,7.9,3C1214.3,350,1211.5,350.6,1209.1,348.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2095,445c0-1-0.1-2-0.1-3.1c0.1-3.2,0.2-6.4,0.3-9.6c0.3-0.2,0.5-0.4,0.7-0.7\n                            C2095.6,436.1,2097.1,440.7,2095,445z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332F2E",
                  d:
                    "M193,660.1c1.4-1.8,3.3-0.9,5-1.1h0c0.9,0.7,2.1,1.4,1,2.8C196.9,661.5,194.8,661.2,193,660.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1060.9,312.1c3.4-0.1,6.8-0.1,10.1-0.2c1,0.1,2.2-0.2,3,0.9c-4.2,0-8.4,0-12.6,0\n                            C1060.9,312.8,1060.7,312.6,1060.9,312.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5F4F4D",
                  d:
                    "M553.9,277.7c-2.3-0.3-4.5-0.6-6.8-0.9c0.3-2.5,2.4-1.7,3.9-2.1c1.9,0,3.9-0.2,5.6,0.8\n                            C557.7,278.6,554.8,276.9,553.9,277.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9290",
                  d:
                    "M604.1,281.8c-1.4,0-2.8,0-4.3-0.1c-0.1-1.3,0.6-2,1.7-2.5c2.4-0.5,4.8-1.2,6.6,1.2\n                            C607.4,282.5,605.3,280.9,604.1,281.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#764B4C",
                  d:
                    "M604.1,281.8c1.1-1.1,2.7-0.4,4-1c2.4-1.6,4.6-1.7,6.8,0.3c0,0.2,0,0.4,0,0.6\n                            C611.3,281.8,607.7,281.8,604.1,281.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M546,636c-0.6,3.4-1.3,6.8-1.9,10.2C544.2,642.7,542.8,638.9,546,636z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M540.2,556.7c0.5,0.8,1,1.6,1.5,2.3c0.1,2.4,1.8,4.4,1.3,6.9C541.2,563.2,540.1,560.2,540.2,556.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7B5F5D",
                  d:
                    "M565,278.7c-2.3-0.3-4.6-0.6-6.9-0.9c0.3-2.4,2.3-1.8,3.8-2.1c1.6,0,3.2,0,4.7,0.7\n                            C568.1,278.6,566,278.3,565,278.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#311418",
                  d:
                    "M303,473.1c-0.4,0-0.7-0.1-1.1-0.1c1.5-1.6,2.4-3.9,5-4C308,472.5,304.1,471.5,303,473.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1490.8,560.9c-0.1-3.6,0.8-7,2.1-10.3C1493.2,554.3,1492.7,557.8,1490.8,560.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D4F4F",
                  d:
                    "M600.9,280.2c-0.3,0.5-0.7,1.1-1,1.6c-2.8-1.5-5.9-0.2-8.8-1c1-0.3,2.1-0.6,3.1-1\n                            C596.5,278.3,598.8,278.2,600.9,280.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M335.7,469.9c2.1-1.9,4.6-3.1,7.3-3.8C341.1,468.5,338.6,469.6,335.7,469.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1020.3,310.8c-0.2-0.2-0.3-0.4-0.4-0.7c3.4,0,6.8-0.9,10.1,0.6C1026.7,310.8,1023.5,310.8,1020.3,310.8\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2091.2,452c-0.4-3.2,2.3-4.8,3.8-7C2095.5,448.2,2092.4,449.6,2091.2,452z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1775,487.1c2.4,1.4,4.1,3.3,5.3,5.8C1777.7,491.7,1775.7,490,1775,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#86726D",
                  d:
                    "M565,278.7c0.7-0.5,1.3-1,2-1.5c2.1-1.9,4.1-1.8,6.1,0.1c-0.5,2.5-2.9,0.5-4,1.6\n                            C567.7,278.8,566.4,278.8,565,278.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M835,97c-3.3,0-6.6,0-10,0.1c3.2-2.1,6.8-0.6,10.2-0.9C835.1,96.4,835,96.7,835,97z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4B47",
                  d:
                    "M569.1,278.8c1.2-1.2,2.8-0.4,4.1-0.9c1.3-1,2.6-1,3.8,0.3c-0.3,0.5-0.7,1-1,1.5\n                            C573.7,279.4,571.4,279.1,569.1,278.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E6BDBA",
                  d:
                    "M2006.3,527c-2.1-0.2-4.4,0.5-6.3-1c0.7-1.2,2-0.9,3.1-1c0.6-0.6,1.3-0.5,2-0.3\n                            C2006,525.2,2006.5,525.9,2006.3,527z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M262,642c-0.5-2.6-1.5-5.2-1.1-8c1.8,2.4,2.2,5.2,2.1,8.1C262.6,642.4,262.3,642.4,262,642z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1488.8,575c-0.2-3.1-0.1-6.2,1.1-9.1C1489.6,568.9,1491.1,572.2,1488.8,575z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B9694",
                  d:
                    "M262,642c0.3-0.1,0.6,0,0.9,0.1c0.1,1.1,0.1,2.2,0.3,3.3c0.1,0.8,1,2-0.5,2.2c-0.5,0.1-1.2-1.2-1.8-1.8\n                            C262.3,644.9,261.4,643.2,262,642z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M258.9,614.4c-1-3.1-1.2-6.2-0.9-9.4C260,608,258.7,611.2,258.9,614.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M319.8,479.8c1.6-2,4-2.8,6.1-4.1C324.8,478.5,322.7,479.7,319.8,479.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M709.9,290.2c3,0,6.1-0.9,9.1,0.6c-2.9,0-5.8,0-8.6,0.1C709.9,290.8,709.7,290.6,709.9,290.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M270.6,536.9c0.7-2.6,1.8-5,3.3-7.2C274,532.7,273.2,535.2,270.6,536.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M98.1,587.5c1.1,3.2,1.9,6.3-0.2,9.4C98,593.8,98.1,590.7,98.1,587.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M258,588c-0.3-3.2-0.2-6.3,1-9.3C258.6,581.8,260,585.1,258,588z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M797.1,98.1c-2.9,1.8-6.1,0.8-9.1,1C790.8,97,794,98.4,797.1,98.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#957B77",
                  d:
                    "M562.3,276.8c-1.3,0.5-3-0.3-4.1,1c-1.4,0-2.8-0.1-4.2-0.1c0.6-1.4,2.3-0.5,3-1.5\n                            C559,274.5,560.8,274.3,562.3,276.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: { fill: "#FDFDFD", d: "M712,689c3,0,6,0,9,0" }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M805.2,97.1c-2.6,1.4-5.4,0.9-8.2,1C799.5,95.9,802.5,97.4,805.2,97.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M288.5,505.8c1-2.1,2.4-3.8,4.4-5C292.7,503.6,291,505.1,288.5,505.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1780.2,492.8c1.7,1.5,3.5,2.8,3.8,5.3C1782.2,496.7,1780,495.6,1780.2,492.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M302.8,492.9c1.4-1.8,3.1-3.2,5-4.3C307,491,305.6,492.8,302.8,492.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1760,472.9c2.4,0.4,3.8,2.2,4.9,4.1C1762.4,476.7,1761.2,474.8,1760,472.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1754,468c2.3,0.6,3.9,1.9,5,4C1756.5,471.8,1755.3,469.9,1754,468z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A44E51",
                  d:
                    "M1092.9,152.1c0.2,0.3,0.3,0.6,0.4,0.9c-1.1,0-2.2,0.1-3.4,0.1c-1-0.4-1.9-0.7-2.9-1.1\n                            c0-0.3,0-0.6-0.1-0.9C1089,151.4,1090.9,151.7,1092.9,152.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#543F39",
                  d:
                    "M1976.1,387.9c0-2.2,1.7-1.7,3-1.9c0.3,0.3,0.6,0.6,1,1c-0.1,0.5-0.2,1-0.2,1.5\n                            c-0.8,0.6-1.8,0.6-2.7,0.3C1976.7,388.6,1976.3,388.3,1976.1,387.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#543F39",
                  d:
                    "M1990,389c-2.5,0.2-4.9-0.4-7-1.8C1985.6,386.7,1987.8,387.8,1990,389z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9D8283",
                  d:
                    "M551.2,275.8c-1.3,0.3-2.7,0.7-4,1c-1.1,0-2.1,0-3.2,0c0.7-0.6,1.3-1.1,2-1.7\n                            C547.9,273.6,549.8,273.1,551.2,275.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M751.1,103.1c-2.6,1.1-5.4,1.1-8.2,0.9C745.5,102,748.4,103.3,751.1,103.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2088.2,458.8c0.6,0.2,1.2,0.3,1.8,0.5c-0.1,0.8,0.1,1.3,1,1.4c-0.3,0.8-0.9,1.4-1.9,1\n                            C2087.6,461.1,2088.1,459.9,2088.2,458.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1518,260.1c-2.5,0.1-4.9-0.1-7.3-1C1513.2,259.3,1515.8,258,1518,260.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#96595B",
                  d:
                    "M2034.8,532c-1.7-2.2,1.8-3.2,1.2-5.1C2038.1,529.2,2035.3,530.3,2034.8,532z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M520,517.1c1.9,1.1,2.4,3,3.2,4.8C520.9,521.1,520.4,519.1,520,517.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E4D6CE",
                  d:
                    "M2005.2,525.1c-0.7,0-1.4-0.1-2.2-0.1c2.2-1.7,4.7-0.9,7.1-0.9c-0.2,0.2-0.3,0.5-0.5,0.7\n                            C2008.3,526.5,2006.8,525.9,2005.2,525.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#694644",
                  d:
                    "M527,273.2c-0.3,0.5-0.6,1-0.9,1.5c-1.6,1.1-2.5-1.2-4-0.8c0.7-0.4,1.5-0.7,2.2-1.1\n                            C525.3,272.2,526.2,272.2,527,273.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M739.9,292.1c2.4,0.1,4.8-0.9,7,0.6c-2.2,0-4.4,0.1-6.7,0.1C739.8,292.8,739.7,292.6,739.9,292.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M266.7,546.9c0.5-1.8,0.8-3.8,2.2-5.3C269.1,543.7,268.9,545.7,266.7,546.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M875.9,95.8c-2.1,0.1-4.2,0.5-6.1-0.7C871.9,95.2,874.1,94.3,875.9,95.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9898",
                  d:
                    "M860.9,95.1c-1.9,1.4-3.9,1.4-5.8,0C857,95.1,859,95.1,860.9,95.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1002.2,309.8c-0.2-0.3-0.4-0.5-0.7-0.7c2.2,0,4.3,0,6.5-0.1c0,0.2,0,0.4-0.1,0.6\n                            C1006,309.7,1004.1,309.8,1002.2,309.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1540.1,274.2c2,0,3.9,0,5.9-0.1c-2,1.7-4.3,0.7-6.5,0.8C1539.7,274.6,1539.9,274.4,1540.1,274.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: { fill: "#FFFFFF", d: "M1055,312.2c1.9,0,3.9,0,5.8-0.1" }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M257.9,598.6c-0.9-2.4-0.8-4.7,0-7.1C257.9,593.8,257.9,596.2,257.9,598.6z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M817,298.2c2.1-0.2,4.1-0.1,6.1,0.8C821.1,298.8,818.9,299.7,817,298.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2002.2,396.7c-0.7-0.8-1.2-1.6-1.1-2.7c1.4,0,2.4,0.7,2.9,2C2003.4,396.3,2002.8,396.5,2002.2,396.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2012,400.1c-2.2,1.1-3.1-0.6-4-2.1C2009.6,398.2,2011,398.6,2012,400.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C1B0AE",
                  d:
                    "M442.1,220.2c-0.3,1.1-1,1.9-1.9,2.5c-0.1-1.6-0.7-3.4,0.9-4.7C441.3,218.8,440.8,219.9,442.1,220.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d: "M2096.1,420c0-2,0-4,0-6C2097.5,416,2097.5,418,2096.1,420z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2016,404c-0.3-0.6-0.7-1.3-1-1.9c2.2,0.1,3.4,1.3,3.9,3.4C2017.9,404.9,2017,404.4,2016,404z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1986,445.1c1.7,0,3.3,0,5,0.1c0.4,0.3,0.9,0.5,1.3,0.8C1990.2,445.8,1987.9,446.8,1986,445.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1554.6,462.9c1.2-1.4,2.6-2.4,4.3-3.1C1558.2,461.8,1556.9,463.1,1554.6,462.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D3735",
                  d:
                    "M199,661.8c-0.3-0.9-0.7-1.9-1-2.8c2.7-0.7,2.3,1.6,3,3C200.3,661.9,199.7,661.9,199,661.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M315.5,482.9c1.2-1.3,2.6-2.5,4.3-3.1C319.2,481.9,317.9,483.1,315.5,482.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M734.4,105.1c-2,1-4.2,1.1-6.3,1C729.9,104,732.2,105.3,734.4,105.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M740,105c-1.7,0-3.3,0.1-5,0.1c1.9-2,4.3-0.8,6.5-0.9C741,104.4,740.5,104.7,740,105z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1806,540c1.7,1.3,1.9,3.1,2.1,5C1806.3,543.8,1806,542,1806,540z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1489.9,566c-0.2-1.8-0.1-3.6,1-5.1C1490.8,562.6,1491.8,564.6,1489.9,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9898",
                  d:
                    "M850.9,95.1c-1.6,1.3-3.2,1.3-4.8,0C847.7,95.1,849.3,95.1,850.9,95.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M787.3,99.1c-0.2,0.3-0.3,0.5-0.4,0.8c-1.6,1.5-3.2,1.4-4.8,0.2L782,100\n                            C783.5,98.3,785.5,99.2,787.3,99.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1474.9,251.4c-1.6-0.5-3.2-0.9-4.2-2.3C1472.5,249.1,1474.1,249.5,1474.9,251.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2053.8,654.9c1.6-1.4,3.4-0.8,5.2-0.9C2057.5,655.7,2055.6,654.8,2053.8,654.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2107.2,631.9c0-1.6-0.1-3.3-0.1-4.9C2108.4,628.6,2108.4,630.3,2107.2,631.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M509,502c1.7,0.3,2.6,1.4,2.9,3C510.1,504.9,509.1,503.9,509,502z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M698.2,289.8c-0.2-0.2-0.4-0.5-0.6-0.7c1.8,0,3.6,0,5.4-0.1c0,0.2,0,0.4-0.1,0.6\n                            C701.4,289.7,699.8,289.8,698.2,289.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M1531.6,275.9c1.7-0.8,3.5-1,5.4-0.8C1535.4,276.7,1533.4,275.8,1531.6,275.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FDFDFD",
                  d:
                    "M2087,454.3c1.3,1.3,1.1,3,1.2,4.6C2086.2,457.8,2087.3,455.9,2087,454.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: { fill: "#FDFDFD", d: "M1836,738c-0.7,0-1.3,0-2,0" }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1E1B1A",
                  d:
                    "M1583.3,446.1c-2.8-0.8-4.8,1.7-7.3,1.9c-0.2-2.1,0-3.8,2.6-4.4c1.4-0.3,2.8-1,3.4-2.6\n                            c2.8-0.7,5.6-1.5,8.4-2.2c1.1,1-1.3,1.7-0.5,2.9c5.1-2.9,9.4-7.1,15.7-6.8c1.4,0.1,2.3-0.7,3.7,0.9c1.6,1.8,3.8,0.7,4.7-1.8\n                            c5,0,10-1.2,15-1l0,0c1.8-1.6,4.2,0.5,6-1v0c2.3-1,4.7-1.3,7,0c1,0,2,0,3,0c1.7-1.4,3-0.6,4.1,0.9c1.6-0.3,3.3-0.6,4.9-0.9\n                            c5.8-1.4,11.4,0.2,17,1c1.8,1.8,4,0.7,6,1c3.1,0.7,6.4,0.5,9.5,1.6c1.7,0.6,3.6,0.9,3.5,3.3l-0.2,0.4\n                            c-12.6-2.8-25.3-5.3-38.4-5.4C1627.9,433.6,1605.2,437.4,1583.3,446.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#231F1D",
                  d:
                    "M1505.1,515.1c-3.5,3.4-4.1,8.4-7,12c0.8-6.7,5-12,8-17.7c1.7-3.1,3.8-6,4.9-9.5c1.9-2.4,2.2-6.2,6-7\n                            c0.9-1.2,0.6-3,2-4c0.4-1,1.1-1.6,2-2c1.4-1.9,2.7-2.2,4.1,0c-1.4,3.6-4.6,5.9-6.9,8.8C1513.3,501.9,1509.2,508.5,1505.1,515.1z\n                            "
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0D",
                  d:
                    "M1525.1,487c-1.3-0.9-2.7-1-4.1,0c0.7-3.4,3.6-5,6-7c0.2,2.1-3.2,3.6-1,6.1\n                            C1525.7,486.4,1525.4,486.7,1525.1,487z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0D",
                  d:
                    "M1519,489c-0.2,1.6-0.7,3-2,4C1517.2,491.4,1516.3,489.3,1519,489z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1A1213",
                  d:
                    "M1490.9,637.8c-1.3,0.1-2.7,0.2-4,0.3c-2.5-0.2-3.8,1.1-4,3.6c-0.9,4.4-1.7,8.7-1.4,13.2\n                            c0.1,1.9-0.6,3.5-1.7,5l0,0c-5,1-8.1,3.2-6.2,9c0.4,1.4-0.2,3.2-0.4,4.8c0.6,1.4,0.2,3,0.3,4.5c0.2,2.5,0.1,4.8-3.2,5.1\n                            c-3.1,0.3-5.7-0.1-6.7-3.7c-0.2-0.6,0.1,0.2-0.1-0.5c-2.6-8.5-2.6-8.5-11.5-8.5c-75.5,0-151-0.4-226.4,0.2\n                            c-28.5,0.2-57,0.7-85.4,0.8c-2.7,0-5.3,0.2-7.9-0.6c-2.7-1.9-0.8-2.7,0.9-3c3.4-0.6,7-0.6,10.5-0.5c5,0.2,10,0.1,15,0.2\n                            c3.2,0.1,6.1-0.3,8.8-2.5c3.1-2.5,5.5-1.6,7.8,2.2c0.5,0.9,2.2,1.1,6.8,1.1c-1,0.2-2,0.1-2.9,0c-1.5-0.2-2.6-1-2.4-2.6\n                            c0.2-1.4,1.5-2,2.6-1.8c4.4,0.8,8.9-1.6,13.3,0.1c3.5,1.4,6.7-1.1,10.3-0.9c6.9,0.5,13.8,2,20.8,1.3c1.2-0.1,2.3,0,3.5-0.1\n                            c5-0.4,9.6-1.8,15-0.9c4.5,0.8,9.8,0.4,14.8,0.1c10.5-0.6,21.1-1.8,31.4-0.9c15.6,1.3,31.2-0.6,46.8,0.5\n                            c10.8,0.8,21.9,0.2,32.9,0c10-0.2,20,0.6,29.9,0.1c19.3-1.1,38.6,0.7,57.9,0.1c2.6-0.1,5.1-2.1,7-1.1c-0.7-0.3-2.1,0.1-3.7,0.3\n                            c-1.7,0.3-3.8,0.8-4.2-1.9c10.2,0,10,0,9.4-10.4c-0.4-7.5-0.6-15.1-0.7-22.6c-0.2-11.3,0.1-22.6,0.4-33.8\n                            c0.3-8.5,2.1-16.9,3.9-25.2c0.2,0.1,0.3,0.3,0.5,0.4c0.8,1.6,0.4,3.3,0.5,4.9c0,0.2,0,0.4,0,0.6c-0.1,4,0.1,7.9-0.8,11.9\n                            c-0.5,2.1-1.5,5.1,1.8,6.4c0.8,0.3,0.5,1.1,0,1.6c-2.3,2.5,0.2,4.7,1.5,5.3c4.3,2.2,2.6,5.1,2.1,8.1c-2,0.7-1.5-2.8-3-1.6\n                            c-1.4,1.2,0,2.3,1.1,3.1c1,0.8,1.9,1.6,0.5,2.7c-0.6,0.5-2.3-0.5-2,1.3c0.4,2.1,2.4-0.3,3.6,1.3c-3.4,2.2-2.9,3.9,0,6.6\n                            c2.5,2.3,2.6,6.4,2.1,9.9c-0.2,1.6-0.4,3.2,1.2,3.8c4,1.7,3.5,4.5,2.4,8.2C1481.5,637.5,1485.1,635.2,1490.9,637.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#595351",
                  d:
                    "M1491.8,620.1c0.1,1.5,0.2,3.1,0.3,4.6c0,1.4-0.1,2.8-0.1,4.2c-1.7-3.2-3.3-6.4-1.9-10.1\n                            C1490.7,619.3,1491.3,619.7,1491.8,620.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1A1213",
                  d:
                    "M1468,569c0-1.1-0.2-2.3,1-3c2.9,3,0.8,6,0,9v0C1467.8,573.2,1469.3,570.9,1468,569L1468,569z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373131",
                  d:
                    "M1885.6,687.9l-0.3-0.1l-0.3,0.2c-3,1.3-6.4-0.2-9.4,0.9l-0.3-0.2l-0.3,0.2c-4.7,0.1-9.3,0.1-14,0.2\n                            c-2.8-2.9-6.3-2.2-9.8-1.9c-7.1,0.5-7.7-0.3-8.9-7.1c-1.2-6.7-0.1-13.5-1.3-20.2c-0.5-2.8,1.1-5.7,0.1-8.5\n                            c-0.7-1.8,0.6-3.4,0.5-5.1c0.4-0.6,0.8-0.7,1.4-0.3l0,0c4.6,1.4,9.4-0.4,14,1c10.7,0,21.6-0.4,31.8,3.2\n                            c9.1,3.2,17.8,7.7,26.7,11.6c1.8,0.8,3.6,1.5,5.5,2.3c3.5,0.3,6,2.7,8.9,4.1c1.6,0.8,1.5,2,0.6,3.3c-4.1,3.6-9.1,3.4-14,3.5\n                            c-5.2,0.1-7,1.9-6.4,6.8c-5.2,2.4-11,1.6-16.5,2.4c-4.1,0.6-8.3,1.1-12.4,1c-3.8-0.1-8.2,2-11.2-2.6c-0.6-0.9-2.1-0.2-3.1,0.2\n                            c2.8-0.2,2.8-0.2,3,2.1c0.1,1.1,0.9,1.7,2.9,1.6c2.6-0.2,5.3-0.7,7.9-0.6c1.8,0.1,3.7-0.1,5.3,1.1\n                            C1886.4,687.4,1886.3,687.7,1885.6,687.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#150A0B",
                  d:
                    "M2087,644.9c-1.1-1.9-2.5-2.2-4.4-1.3c-1.4,0.6-3,1.4-4.6,0.4c-4.2,0.1-8.2,0.3-12.5-0.7\n                            c-6.1-1.4-12.6-0.9-17.7,3.9c-3.7,3.5-8,5.4-13.2,3.9c-0.3-0.1-0.7-0.2-1-0.1c-6.2,2.8-13.4,2.8-19.3,6.8\n                            c-8.6,0.9-16.6,4.3-25,6.3c-4.1,1.5-8.4,1.7-12.7,2.2c-2.3,0.1-4.6-0.3-6.9,0.3c-0.5,0.2-1,0.3-1.5,0.4c-4,0.1-8,1.4-11.9-0.6\n                            c-0.8,0-1.6-0.1-2.4-0.1c-8.1,0.8-16.3,1.9-24.4,0.4c-2.2-0.7-4.4-1.7-6.5-2.8c-0.4-0.3-0.8-0.6-1.1-1c-0.3-0.3-0.5-0.6-0.8-0.9\n                            c-4.7-2.9-9.7-5.3-14.3-8.3c-0.2-0.2-0.5-0.5-0.7-0.7c-0.3-0.2-0.5-0.4-0.4-0.6c0-0.3,0.1-0.4,0.2-0.4c2.9-0.3,6-1.4,8.1,1.7\n                            c1.3,2,1.8-0.2,2.6-0.3c1.8-0.2,3.5-0.3,5.3-0.5c0.4-0.3,0.8-0.4,1.3-0.4c5.7,0.8,11.1-1.2,16.6-1.9c6.6-0.8,13.1-1.8,19.7-1.5\n                            c3.8,0.2,7.2-1.2,10.6-2.2c7.3-2,14.9-0.9,22.2-2.4c8.2-1.7,16.7,0.3,25-2.1c3-0.9,6.8,1,10.1-0.7c6.8-3.3,14.5-2.6,21.6-4.2\n                            c7.1-1.7,13.8-4.5,20.7-6.7c4.8-1,9-3.9,14-4c-0.6,6.7,4.2,10.3,7.7,15C2090.5,642.7,2088.8,643.8,2087,644.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151211",
                  d:
                    "M1807.9,635.9c2.3,1.5,3.3,0.7,3.1-1.9c0.4-3,1-6,1.6-9.1c0.2-1.3,0.2-3.1,2.4-3c0,1,0,2,0,3\n                            c1.3,1.4,0.4,2.8,0,4.2c-0.6,2.7-1.6,5.4-0.3,8.2c0.8,1.9-0.4,2.3-1.6,2.5c1.1,2.1,4.4-5.3,4.9,1.1c2.3,4.4,6.8,6.3,10.3,9.4\n                            c0.8,0.7,1.7,2,2.9,0.7c1-1.1,1.7-2.3,3.6-0.9c1.8,1.4,2.3,2.6,0.9,4.4c0.4,0.2,0.9,0.3,1.3,0.5c0.3,0.2,0.4,0.4,0.3,0.6\n                            c-0.1,0.2-0.2,0.3-0.3,0.3c-10,3-20.1,5.1-30.6,5.2c-1.1,0-2.3-0.1-3.4-0.1c-2.5-1.4-1.5-3.3-0.7-5.1c1.9-3.8,3.1-7.9,4.4-12\n                            C1807.5,641.3,1807.8,638.6,1807.9,635.9L1807.9,635.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0D0707",
                  d:
                    "M1818,641c-0.2-1.5-0.7-2.1-2.3-1.2c-1.6,1-3.3,1.8-5,2.8c-0.8-3.1,3.8-3.8,2.3-7.5\n                            c-1.2-3.2,1.2-6.7,2-10.1c3.7-4.9,1.3-11,3-16.3c0.5-1.6-0.6-3.6,1.2-5.4c1.4,1.9,1.1,4,0.8,5.7c-0.7,4.6-0.9,9.2,0.5,13.7\n                            c0.1,0.5,0.4,1.2,0.2,1.4c-3,2.3-0.2,4,1.1,4.3c2.4,0.5,3.7-1.9,3.7-3.8c0-3.2,2-6.5-0.7-9.4c1.9-0.9,3.4-0.4,3.7,0.4\n                            c1.1,2.3,1,5,2.1,7.5c0.8,1.7-8.4,9.7-11.1,9.9c4.9,5.2,10.3,7.8,17.4,4.7c0,3.3,0,6.4,0,9.9c-2.7-1-3.4-3.3-4.3-5.3\n                            c-2.4,0.4-2.1,4.3-5,3.5c-1.9-0.6-3.6-1.6-4.5-3.5C1821.8,640.1,1819.7,641.3,1818,641z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2727",
                  d:
                    "M1837,656c0-0.3,0-0.6,0-1c1.3,0,2.7,0,4,0c1,1.5,0.3,3.1,0.5,4.6c0,0.2,0,0.3,0.1,0.5\n                            c0.2,0.5,0.4,0.4,0.5-0.1c1.4,1.1,1,2.7,1,4.1c-0.4,6.3,0.7,12.5,1,18.7c0.1,2.3,1,3,3.2,3.3c3.4,0.3,6.9-0.4,10.2-0.7\n                            c4-0.3,3.6,1.4,3.7,3.8c-4.9,0.3-9.9,0.9-14.8,0.9c-3.8,0-6.9-1.2-6.3-6.1c-1.7-8.3-1.9-16.7,0-25\n                            C1840.8,656.2,1838.9,656.1,1837,656z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322B2A",
                  d:
                    "M1956.9,665c3.8,2.6,8.1,0.3,12.1,1c-1.5,3.9-5.5,1.5-8,3.1c-3.3,0.4-6.6,1.5-10,1.2\n                            c-5.5-1.8-10.6,0.7-15.9,1.2c-1.8,0.1-3.6,0.9-5.2-0.5c0.7-1.4,0-1.7-1.2-2.3c-2.7-1.3-5.2-3.1-7.8-4.7c0.3-0.4,0.7-0.7,1-1.1\n                            c0.3,0,0.7,0.1,1,0.1c1.9,0.9,3.3,3,5.9,2.1c6.4,1.8,13,1,19.5,0.5c2.2-0.2,4.5-0.6,6.8-0.5c0.5,0.9-0.9,0.9-0.8,1.6\n                            C1955.2,666.1,1956.3,665.9,1956.9,665z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322D2B",
                  d:
                    "M1815,622c-3.4,3.3-1.5,8.4-4,12c0.1-5.2-0.2-10.6,2.8-15.3c0.3-0.5,0.2-1.3,0.2-2\n                            c-0.6-7.7,1.5-15.2,1.2-22.8c2.6,4.7,1,9.6,0.8,14.4C1815.7,612.9,1815.3,617.4,1815,622z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#402E29",
                  d:
                    "M1859,641c8.5,0.4,17,0.7,25.5,2c2.5,0.4,4.7,1.2,6.6,3c-10.2-2.3-20.5-3.2-30.9-3\n                            c-1.2,0-2.3,0.1-3.2-0.9C1857.4,641.3,1858.5,641.7,1859,641z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1A19",
                  d:
                    "M1690,438.9c-1.9-2.7-5-2.2-7.6-2.8c-1.9-0.5-3.9-0.6-5.4-2c5.6-2.4,10.7,1.1,16.1,1.1\n                            c0.3,1.9-2.4,1.9-2,3.7C1690.7,438.8,1690.4,438.9,1690,438.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1A19",
                  d:
                    "M1629,433c-5,0.7-9.8,3.2-15,1C1618.9,431.5,1623.9,431.7,1629,433z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1A19",
                  d:
                    "M1671,433c-5.7,0.7-11.3-1.3-17-1C1659.9,429.1,1665.4,430.8,1671,433z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0D0707",
                  d:
                    "M1833.9,632.1c0.7-1.1-0.8-3.6,1.7-3.8c1.5-0.1,1.5,1.5,1.3,2.6c-0.2,1.5-0.2,3.7-1.7,4.1\n                            C1833.9,635.4,1833.3,633.7,1833.9,632.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#665858",
                  d:
                    "M1906.9,653.7c5.1,2.2,10.2,4.5,14.3,8.3C1915.9,660.3,1910.9,657.8,1906.9,653.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E403D",
                  d:
                    "M1859,641c-0.4,0.8-1.2,0.9-2,1c-5.3-0.1-10.6-0.2-15.9-0.3c-0.1,0-0.2-0.2-0.2-0.4\n                            c0-0.2,0.1-0.3,0.2-0.5C1847,641,1853,641,1859,641z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B1110",
                  d:
                    "M1842,660c0,0.5,0.1,1.1-0.2,1.4c-1,1.2-0.8-0.1-0.8-0.5c-0.1-2-0.1-4-0.1-6c1-2.3-4.6-4.7,0-7\n                            c1,0.8,0.1,2.2,1,3C1842,654,1842,657,1842,660z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#574241",
                  d:
                    "M1905.9,652c0.1,0.3,0.2,0.7,0.2,1c-4.6,0.2-7.7-3-11.3-5c0.4-0.4,0.8-0.4,1.2-0.1\n                            C1899.4,649.3,1902.6,650.7,1905.9,652z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322D2B",
                  d:
                    "M1815.2,593.1c0-4.1,0-8.1,0-12.2C1816,585,1817.3,589.1,1815.2,593.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2727",
                  d:
                    "M1857,647c-4.7-0.5-9.5,1.1-14-1C1847.7,646.5,1852.5,644.9,1857,647z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1A19",
                  d:
                    "M1642,432c-2.3,0-4.7,0-7,0C1637.3,429.7,1639.7,428.9,1642,432z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322D2B",
                  d:
                    "M1813,566c-0.4-3-0.8-6-1.1-9c1.8,2.7,2.1,5.8,2.1,9l-0.5,0L1813,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1A19",
                  d:
                    "M1649.1,432.9c-1.4-0.3-2.7-0.6-4.1-0.9c0.2-2.2,1.8-2.1,3.3-1.9C1650.4,430.4,1648.6,432,1649.1,432.9z\n                            "
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B1110",
                  d:
                    "M1843,646c-0.3,0-0.7,0-1,0c-0.3,0.4-0.5,0.9-1,1c-2-0.2-2.1-1.5-1.8-3.2\n                            C1840.5,644.5,1842.4,644.1,1843,646z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1A19",
                  d:
                    "M1635,432c-1.8,1.8-4,0.7-6,1C1630.4,429.3,1633.2,433.3,1635,432z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#513C38",
                  d:
                    "M1896.1,648c-0.4,0-0.8,0.1-1.2,0.1c-1.6-0.2-2.9-0.8-3.9-2C1893,645.9,1894.7,646.5,1896.1,648z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0D0707",
                  d:
                    "M1847.2,643.5c-1.1,0.6-2.1,0.6-3.4,0C1845,642.8,1846.1,642.7,1847.2,643.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2727",
                  d:
                    "M1841,647c0.3-0.3,0.7-0.7,1-1c0,1.7,0,3.3,0,5c-1.2-0.7-0.9-1.9-1-3C1841,647.7,1841,647.3,1841,647z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B28",
                  d:
                    "M452,467.1c-7-1.7-14-3.4-20.9-5.1c-5.2-2.4-11-2.3-16.5-2.8c-12.8-1.2-25.7-1.5-38.6-2.1\n                            c0.3-0.4,0.7-0.7,1-1.1c7.2-1.3,14.2-2.2,21.7-1.3c5.2,0.7,10.9,0.4,16.4,0.7c3.3,0.2,6.7,0.1,9.1,3.3c0.4,0.6,2.2,0.2,3.3,0.3\n                            C436.2,460.1,444.3,462.7,452,467.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544D4B",
                  d:
                    "M1164,188c0.7,0.4,1.3,0.7,2,1.1c0.9,1.6,2.7,1.3,4.1,1.9c19.6,8.7,38.4,19.1,57.1,29.6\n                            c34.3,19.3,67.8,40.1,100.4,62.2c1.5,1,2.9,2.1,4.4,3.2c0.3,1-0.3,1.3-1,1.5c-2.9,0-4.8-2.1-7-3.5c-15-9.4-29.8-19.3-45.6-27.5\n                            c-9.5-5.9-19.6-10.6-28.9-16.7c-11-6.4-22.2-12.4-33.4-18.3c-5.7-3-11.3-6.2-17.3-8.5c-0.5-0.2-0.9-0.4-1.3-0.7\n                            c-8.8-5.4-18.4-9.1-27.8-13.2c-7.7-3.4-15.3-7.2-23.1-10.5c-2.2-0.9-4.9-1.5-5.8-4.2c-0.4-1,3.1-2.2,0.3-2.7\n                            c-4.6-0.9-8.5-3.2-12.6-5.1c-8.4-3.8-16.7-7.6-25.4-10.6c-3.1-1.1-6-2.7-9.4-3.1c-2.5-0.3-4.8-1.1-6.1-3.6\n                            c0-1.1,0.4-1.9,1.5-2.3c13.1,3.3,25.3,9,37.7,14c1.4,0.6,2.7,1.3,4.3,1.2c3.2,2.7,7.3,3.6,11,5.2c3.1,1.4,6.1,2.9,9,4.7\n                            c2.7,3.8,7,4.2,11,5l0,0C1162.6,187.5,1162.5,189.2,1164,188z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1B1718",
                  d:
                    "M863.9,294c-0.6,0-1.2,0-1.9,0c-0.9,0.3-1.3-0.3-1.5-1.1c0.7-3.6,0.5-7.1-0.6-10.6\n                            c-1-5.4-2.1-10.8-2.9-16.3c-0.6-2.3-0.1-4.8-1.2-7c-2-4.1-0.6-8.6-1.8-12.8c-0.4-1.9-0.6-3.8-1.1-5.6c-1-6.5-1.9-13.1-3-19.6\n                            c-0.8-4.6-1.2-9.3-2-13.9c-0.4-3.3-0.9-6.6-1.4-9.9c-0.1-2.8-1.1-5.5-1.1-8.3c-1.4-12.1-3.3-24.2-4.5-36.4\n                            c-0.2-2-0.5-3.9-0.6-5.9c-0.1-4.1-1.7-6.7-6.3-6.1c-3.5,0-7.1-0.4-10.6,0.4c-3,0.4-5.9,1.5-9,0.8c-1.4-0.2-2.8-0.9-4,0.4\n                            c-0.1,0.4-0.2,0.8-0.3,1.2c-0.2,1.3-0.1,2.7-1,3.8c-2,0.6-2.2-1.3-3.1-2.2c-0.3-0.4-0.5-0.8-0.7-1.2c-4.2-2.2-8.4-0.1-12.5,0.2\n                            c-7.4,0.5-14.8,0.9-22.2,1.8c-17,1.2-33.9,3.3-50.9,5.1c-15.6,1.6-31.2,4.2-46.8,6.2c-12.8,1.7-25.6,3.9-38.3,6.3\n                            c-1.5,0.3-3,0.3-4.5-0.1c-0.5-0.2-1-0.4-1.5-0.8c-0.3-0.5-0.2-1,0.2-1.5c1.8-1.3,4.1-0.7,5.9-1.9c5.7-2.2,11.7-2.3,17.5-3.8\n                            c2.1-0.4,4.2-0.1,6.2-0.8c0.5-0.2,1.1-0.3,1.6-0.4c11.7-1.2,23.3-3.4,35-4.5c7.6-0.7,15.1-2.3,22.7-3c0.5-0.2,1.1-0.3,1.6-0.4\n                            c5.8-0.3,11.6-1.1,17.4-1.8c5.5-0.6,11.1-1.2,16.6-2c0.5-0.2,1.1-0.3,1.7-0.3c7.6,0.1,15.2-1.1,22.8-1.6\n                            c0.5-0.2,1.1-0.3,1.7-0.4c9.8-0.9,19.6-0.8,29.4-2.4c2.1-0.3,4.3-0.5,6.4-0.7c3.4-0.2,6.9,0.4,10.3-0.6c2.9-0.6,5.8-0.3,8.7-0.6\n                            c1.7-0.2,3.6-0.2,4.6-2.1c-0.5-2.6-2.6-1.9-4.2-2.1c-2.3-0.3-4.9,0.6-6.9-1.4c4.9-2.1,10.1-0.5,15.1-0.9c1,1.2,1.2,2.6,1.2,4\n                            c0.8,4.4,0.7,8.9,1.7,13.2c2.3,11.3,2.6,22.9,4.2,34.2c0.2,1.5,0.1,3,0.7,4.4c1.5,9.5,2.4,19.2,4.1,28.6\n                            c0.3,2.7,0.5,5.5,1.1,8.2c0.2,2.2,0.4,4.3,0.9,6.4c0.1,5,1.6,9.7,2.2,14.6c-0.2,4.4,1.6,8.5,2,12.8c0.1,2.4,0.7,4.7,1,7\n                            c0.1,1.8,0.3,3.6,0.8,5.3c0.4,2,1.1,4,1.2,6.1c-0.3,3.9,2.2,7.2,2,11.1c-1.1,2.9,1.5,6.4-1.7,8.9C864.3,294,864.1,294,863.9,294\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#504947",
                  d:
                    "M462.9,209c5.5-4.7,12.2-7.2,18.4-10.5c26-13.8,53.2-25,81.9-31.9c25.9-6.2,52-11.5,78.4-15.5\n                            c19.1-2.9,38.2-6.1,57.4-8.7c13.3-1.8,26.6-2.9,40-4.3c-0.2,2.8-3.1,2.5-4.5,3.9c-10.2,2.5-20.6,2.8-30.9,3.9\n                            c-3,0.7-6.3,0.3-9.2,1.9c-1.7,0.6-3.5,0.5-5.2,1.1c-0.9,0.2-1.9,0.4-2.9,0.4c-2-0.1-4.1-0.6-6,0.7c-3,0.8-6.1,0-9,1.3\n                            c-0.5,0.1-1.1,0.2-1.6,0.3c-16.5,2.3-32.8,5.3-49.2,7.8c-4.1,0.6-8,2.3-12.2,2.4c-3.8-0.8-7.2,0.8-10.6,2\n                            c-0.5,0.2-0.9,0.3-1.4,0.4c-6.1,0.7-12.1,1.9-18.1,3.5c-0.5,0.2-0.9,0.3-1.4,0.4c-2.2,0.2-4.2,1.2-6.2,2\n                            c-17.2,4-34,9.1-50.4,15.5c-13.1,5.1-25.8,11.1-38.4,17.6c-3.4,1.8-7.1,3.5-10.7,5C468.5,209,465.8,210.6,462.9,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534C4B",
                  d:
                    "M927,129.1c14.6,0,29.1,1.5,43.7,2.7c27.2,2.2,53.9,7,80.3,13.4c5.5,1.3,11.5,1.7,16.1,5.8\n                            c-2.8,3.7-6.3,1.1-9.6,1.2c-1-0.2-1.9-0.6-2.8-1.1c-2-1.2-4.2-1.8-6.5-1.3c-4.7-3.8-10.3-2.4-15.6-2.9\n                            c-4.2-0.5-8.2-1.4-12.1-3.2c-8.9-2.1-17.8-4.9-27.1-5.2c-10.1-0.3-20-1.7-30-2.9c-1.7-0.2-3.3,0-4.9,0.4\n                            c-12-1.7-24.1-1.3-36.1-2.2c-7-0.5-14.2-0.3-21.3,0.2c-2.3,0.2-5.6,0.8-4.9-3.5c6-1.8,12.2-0.8,18.3-0.7\n                            C918.8,129.8,923,130.9,927,129.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#615E5E",
                  d:
                    "M462.9,209c4.9-0.9,9.1-3.6,13.7-5.4c14.2-5.8,27.5-13.7,42-18.9c10.2-3.7,20.4-7.3,30.8-10.5\n                            c7.1-2.2,14.2-4.4,21.7-5.1c1.9-1,4.1-0.9,6-2l0,0c2-0.8,4.1-0.8,7.3,0.2c-7.4,5.1-15.4,4.8-22.3,7.5c-0.7,0.4-1.4,0.8-2.1,1.1\n                            c-26.1,7-50.8,17.6-75.1,29.2c-5.8,2.4-10.9,6.2-16.9,8.4c-1.4,0.5-2.7,1.4-4.2,1.2c-1.1-0.9-2-1-3.5-0.4\n                            c-2,0.9-2.7-0.2-2.3-2.2C459.4,210.7,460.9,209.4,462.9,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575352",
                  d:
                    "M1057,151c3.4-0.4,6.8,1.7,10.1-0.1c1,0,1.9,0,2.9,0.1c0.4,2.1-1.6,1.3-1.8,1.3\n                            c6.7,1.3,13.7,2.4,19.8,6.7c7.1,2.6,14.3,4.9,21.2,7.9c5.2,2.3,10.7,3.5,15.6,7c3,2.1,7.5,3.1,11.1,4.8c2.7,1.3,6.8-0.1,8.4,3.7\n                            c-0.8,1.2-2,1.5-3.4,1.7c-0.6,0.6-1.2,0.6-2,0.5c-1.9-0.9-3.6-2.3-5.8-2.3c-10.5-3.3-20.4-8-30.7-11.6\n                            c-5.4-1.9-10.6-4.8-16.6-4.8c-13.3-4.4-26.7-8.6-40.3-11.9c-2.4-0.6-5.9-0.3-6.6-4c4-1.9,7.9-0.1,11.6,1\n                            c5.2,1.6,10.3,3.4,15.2,4c-1.9-0.7-4.5-0.8-7-1.3C1057.2,153.3,1055.9,152.9,1057,151z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#554A4A",
                  d:
                    "M735,141c0-2.8,3.2-1.3,4-3.1c4.2-1.8,8.8-1.3,13.2-1.7c19-2,38-3.5,57-5.1c6.3-0.5,12.6-0.8,18.9-1.1\n                            c2.9,0,5.9,0.1,8.8-0.1c3.1-0.2,4.7,0.8,4.1,4.1c-4.1,2.1-8.4,0.9-12.6,0.9c-5.6,0.6-11.2-0.6-16.8,0.9\n                            c-2.7,0.8-5.5,0.5-8.3,0.6c-3.3,0.1-6.6-0.4-9.8,0.5c-0.5,0.2-1,0.3-1.6,0.3c-11.5,0.4-23.1,1.2-34.6,1.9\n                            c-4.2,0.3-8,1.8-12.1,2.5c-0.6,0.4-1.3,0.7-2,0.7C740.7,140,737.4,143.6,735,141z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#594747",
                  d:
                    "M927,129.1c-0.5,2.7-2.7,1.9-4.3,1.9c-8.9,0.1-17.8,0-26.6,0c-1.2,2.4-3.4,1.7-5.3,1.6\n                            c-15.4-0.9-30.8,0.9-46.2,0.9c-0.6,0-1.1-0.2-1.5-0.5c0-1.3,0.1-2.6,0.1-3.9C871.1,128.4,899,127,927,129.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B6261",
                  d:
                    "M457.9,212c0.6,1.7,1.3,2.3,2.9,0.8c1.1-0.9,3.1-2,2.1,1.2c-3.3,4.6-7.9,7.4-13,9.6\n                            c-0.8,0.1-1.5-0.1-2-0.7c-0.4-1-0.7-1.9-1.1-2.9C449.8,216.2,453.8,214,457.9,212z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524846",
                  d:
                    "M1088,159c-6.9-2.1-13.9-4.3-20.9-6.4c0.9-0.5,1.9-1,2.9-1.6c6.7,0.8,12.9,3.3,19,6\n                            C1088.7,157.6,1088.3,158.3,1088,159z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6F2D32",
                  d:
                    "M449.1,211.2c-0.1-0.5-0.2-1-0.3-1.5c4.8-3.2,9.6-6.6,15.2-8.5c0,0.6,0,1.2,0,1.8\n                            C458.6,204.8,454.9,209.9,449.1,211.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3434",
                  d:
                    "M1131,670c23.8,0,47.7,0.5,71.5-0.1c85-2,170.1-0.3,255.1-1c4.2,0,6.7,0.2,6.9,5.6\n                            c0.1,2.2-1.8,7.3,3.9,7.5c3.3,0.2,5.1-0.7,4.6-4.4c-0.2-1.3,0.1-2.6,0.2-4c1,1.7,0.5,3.6,0.7,5.4c0.3,4.1-1.1,6-5.7,5.7\n                            c-16.7-1.2-33.5,0-50.2-0.1c-23-0.1-45.9,0.1-68.9,0.2c-2.9-2.6-6.5-1.4-9.8-1.4c-2.4,0-4.8,0-7.2-0.5c1.9-3.4,5.2,0,7.3-1.6\n                            c-17.2,1.5-34.5-0.1-51.8-0.4c-30.8,0.2-61.5-0.4-92.3-0.7c-29.6-0.3-59.2-0.9-88.8-0.3c-29.6,0.6-59.3,0-88.9,0.5\n                            c-16.4,0.3-32.8,0.5-49.3,0.7c-6.1,0.1-12.3-0.2-18.4-0.2c-7.9-0.4-15.9,0.5-23.8,0.8c-11.3,0.3-22.6,1-34,0.6\n                            c-4.1-0.5-8.1-0.1-12.2-0.3c-2.6-2-7.5,1.4-8.9-3.6c-4.9,1.8-10.3-0.1-15.2,1.6c-6.8,2.4-14,0.5-21,1.3c-4.1-5.1-9-0.4-13.5-0.9\n                            c-4.9-0.5-10-0.8-14.9,0.6c-1,0.3-1.9,0.7-2.9,0.6c-1.7-0.1-3.8-0.2-4.3-1.9c-0.5-1.8,1.7-2.1,2.9-2.8c3.4-1.9,7-2.9,10.9-2.5\n                            c-2.9-0.5-5.6,0.4-8.4,0.8c-4.4,0.1-8.7-0.3-13.1,0.3c-0.6,0.1-1.2,0.1-1.7,0c-1.2-0.6-3.1-0.4-2.9-2.6c0.8-0.9,1.9-1.3,3.1-1.4\n                            c8.9-0.1,17.8-0.7,26.7,0.3c1.3,2.5,4.5,1.2,6.2,3c0,2.4-1.9,1.9-3.2,1.9c-3,0-5.9,0.3-8.8,0.7c3.6-0.6,7.3-0.6,10.9-0.8\n                            c2.3-0.1,1.6-1.4,1-2.7c3.8-3,8.3-0.9,12.4-1.7c1.5-0.4,3-0.5,4.5-0.3c2.3,0.6,4.6,0.4,6.9,0.4c17.4-0.6,34.8,1.5,52.1,0.9\n                            c0.6,0,1.3,0.2,1.9,0.2c-8.6-0.5-17.2,0.4-25.8-0.6c0.1-2,1.8-2.3,3.2-2.4c12.7-0.1,25.3-1,38,0.5c0.7,0.2,0.7,1.3,1,1.3\n                            c19.2-1.9,38.5-0.2,57.7-1c0.5-0.1,1.1-0.1,1.6,0c1,0.9,2.1,1,3.8,1c-1.7-0.3-3.8,0.5-2.3-2.2c2.7-1.2,5.6-0.9,8.4-0.9\n                            c28.8,0,57.5,0.2,86.3-0.1c16.9-0.2,33.9-1.3,50.9-0.9C1126,668.5,1128.8,667.9,1131,670z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#160C0B",
                  d:
                    "M917,672.1c-12.6,0-25.2,0-37.8,0c-1.4,0-3-0.4-4.2,0.9c-12,0.9-24,0.8-35.9,0.1c-1,0.3-2,0.6-3,1\n                            c-4.4-1-8.9-0.5-13.3-0.2c-1.7,0.1-3.3,0.5-4.7-0.7c-8.8,0-17.6,0-26.3,0c-1.6,0-3.4-0.5-4.7,0.9c-1.9,1.9-4.3,1.4-6.6,1.4\n                            c-17.7,0.1-35.4,0-53.1,0c-10.5-0.2-21,0.3-31.5-0.3c-2.7-0.9-5.5-0.6-8.3-0.9c-2.5-0.3-5.4,0.1-6.5-3.2c-3.5-2.1-8-1.8-11-5\n                            c3.3,0,6.7,0,10,0c13-0.4,26,1,39-1c5.2-2.7,10.6-1.4,16-1c0.3,0,0.7,0,1,0c1.8,1.3,4.2-0.2,6,1c5.3,1.4,10.6,1,16,1\n                            c2.2-1.3,4.8,0.3,7-1c0.7,0,1.3,0,2,0c1.5,1.2,3.5-0.2,5,1c3.7,0,7.3,0,11,0c2.8-1.6,6.2-1.4,9-3c25.7,0,51.3,0,77,0\n                            c2.7-0.8,5.3-0.8,8,0c1.3,0,2.7,0,4,0c5.9-1.4,12.1,0.4,18-1c1.7,0,3.3,0,5,0c1.7,0.8,3.3,0.8,5,0c0.7,0,1.3,0,2,0\n                            c6,0.8,12,0.8,18,0c0.7,0,1.3,0,2,0c2.3,0.8,4.7,0.8,7,0c6.5,0,13.1,0,19.6,0c4.8,0,9.6,0,14.4,0c5.3-1.4,10.7,0.4,16-1\n                            c3.8,2.8,7.9,2.5,12,1c1.7-0.7,3.3-0.7,5,0c2-1.2,4.2-1,6.3-1c17,0,34,0.1,51-0.1c12.1-0.1,24.1-1.1,36.1-0.8\n                            c11.6,0.2,23.2,0.7,34.7,0.1c47.7-2.6,95.3-0.3,143-1.2c9.2-0.2,18.1,2.3,27.3,2.1c8.4-0.2,16.7-1.8,25.1-1.9\n                            c11.6-0.1,23.3,0.2,34.8,1.2c5.6,0.5,11.1-0.2,16.6-0.1c10.2,0.3,20.5,0.5,30.7,0.5c14.8,0.1,29.6,0,44.3,0\n                            c4,2.1,8,0.9,12.2,0.6c-3.8,1.8-7.7,3.4-12,3.3c-11-0.2-21.9,0.2-32.9-0.4c-7.1-0.4-14.3-0.2-21.5,0.3\n                            c-9.1,0.6-18.2-0.1-27.4-0.1c-7.5,0-14.9,0.3-22.4,0.3c-6.5,0-13.3,1.4-19.3,0.3c-13.4-2.5-26.6,0.8-40-0.8\n                            c-11.3-1.4-22.9,0.2-34.4,0.8c-5.1,0.3-10.9,1.2-15.3,0.3c-8.9-1.8-17.1,2.3-25.6,0.6c-4.9-1-10-0.9-14.9-1.8\n                            c-2.3-0.4-3,2.1-4.9,1.7c-5-1-10.1-0.8-15.1-0.7c-1.4,0-3.6-1.1-3.9,0.7c-0.4,2.3,2.1,1.9,3.6,2c1.1,0.1,2.3,0,3.4,1\n                            c-3.4,0-6.9,0-10.3,0c-0.5,0-1.8-0.1-1.3-0.6c2.1-2,0.9-2.9-1-3.2c-1.9-0.3-4.2-0.6-5.1,1.9c-0.8,2.5-2.8,1.9-4.5,1.9\n                            c-9,0-17.9,0-26.9,0c-1.6,0-3.4-0.6-4.7,1c-11.6,0-23.3-0.4-34.9,0.1c-38.1,1.8-76.3,0.4-114.4,0.9c-1.6,0-3.4-0.5-4.7,1l0,0\n                            l-0.5,0l-0.5,0c-1.4,0.9-2.9,0.5-4.4,0.5c-16.9,0-33.8,0.1-50.7,0C919.6,672.5,918.2,672.8,917,672.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M792,663c-2.2,3.6-5.8,2.7-9,3C785.2,662.5,788.6,662.9,792,663z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M899,662c-5.9,2.2-12,0.4-18,1C886.9,660.8,893,662.6,899,662z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d: "M929,662c-6,1.6-12,1.6-18,0C917,662,923,662,929,662z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M735,664c-5.3,0.3-10.8-0.8-16,1c0.3-0.5,0.6-1.6,0.9-1.6C725,663.2,730,662.1,735,664z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M988,661c-5.2,2-10.7,0.4-16,1C977.2,659.9,982.7,661.5,988,661z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M752.1,663.2c4.2,0,8.5,0,12.7,0c0,0.2,0,0.3,0,0.5c-4.2,0-8.5,0-12.7,0\n                            C752.1,663.5,752.1,663.4,752.1,663.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M877,663c-2.7,0-5.3,0-8,0C871.7,661.5,874.3,661.5,877,663z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M938,662c-2.3,1.6-4.7,1.6-7,0C933.3,662,935.7,662,938,662z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M765,665c-2.1,1.9-4.7,0.6-7,1C760.1,664.1,762.7,665.4,765,665z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M742,665c-2-0.3-4.2,0.8-6-1C738,664.3,740.2,663.2,742,665z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M909,662c-1.7,1.5-3.3,1.5-5,0C905.7,662,907.3,662,909,662z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M772,666c-1.7-0.2-3.6,0.7-5-1C768.7,665.2,770.6,664.3,772,666z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M1005,662c-1.7,0-3.3,0-5,0C1001.7,660.5,1003.3,660.5,1005,662z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342E2E",
                  d:
                    "M1963,562c0.4-1,1.2-1.9,0.7-3.1l0.1,0c2.5-2.5,5-5,7.3-7.8c0.6-0.7,1.3-1.4,1.9-2.1c8.7,0,17.4,0,26,0\n                            c1.9-1.2,4.2,0.1,6.1-0.9c1-0.1,2.1-0.2,3.1-0.3c0.9-0.7,1.7-0.6,2.6,0c0.1,2.1-0.4,4.5,3.1,4.5c0.9,0,1.8,0.9,0.9,2.1\n                            c-1.5,1-3.3,0.8-4.9,1.4c-1,0.3-2,0.4-3.1,0.4c-1.6,0-3.2,0-4.7-0.4c-4.3-1.2-8.8,0.5-13-1c-2-0.8-4.2-0.3-6.1-1.5\n                            c-1.8-1.8-1.5-2.7,1.1-2.9c3-0.2,5.9,1.1,7.9,0.5c-4.6-0.7-10.1-1.2-14.9,2.7c-0.8,0.4-1.7,0.8-2.6,1.2c-1.2,0.5-2.4,1-3.3,2\n                            c-0.9,1.1-0.2,1.6,0.8,2.2c5.4,3.2,11,5.7,17.1,7.1c0,4.1-2.5,5.6-6.2,5.9c-2.8-2.1-5.7-3.8-9.1-1c-1.4,1.2-2.7,0.8-3.9-0.5\n                            c-1-1.1-2.3-1.8-3.4-0.7c-2.9,2.8-4.2-0.7-5.6-1.7c-1.5-1.1,0.5-2.6,1.2-3.9C1962.5,563.5,1962.7,562.7,1963,562z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3635",
                  d:
                    "M1983,572c2.3-1.7,5.1-2.9,6-6c0.2-0.1,0.4-0.2,0.5-0.3c0.4,0.1,0.8,0.2,1.1,0.6\n                            c0.5,0.7,0.9,1.5,0.8,2.4c-0.5,1.6-1.9,2.3-2.9,3.4c-4.3,3.7-7.3,8.5-11.4,12.5c-1.3,1.8-2.4,3.8-4.1,5.2\n                            c-1,0.9-1.6,2.1-2.3,3.2c-4.7,5.7-9.8,11.1-12.6,18c-2.1-1,0.3-4.7-3.1-5c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3\n                            C1963.2,593,1973.7,583,1983,572z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B3131",
                  d:
                    "M1955,605c0,0.3,0,0.7,0,1c-1.3,3-3.4,6,0,9c-1.9,2.3-4.4,1.6-6.8,1.5c-3.8-0.1-7.5-0.6-11.1-1.5\n                            c-1.3-0.3-2.7-0.7-4-1c-1-1.4-3.5-0.9-4-3c4.2-1.2,8.5-1.2,12.7-0.9C1947.1,610.5,1951.7,609.7,1955,605z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302B2A",
                  d:
                    "M1886.1,687.1c-4.6,0.1-9.3-0.6-13.8,0.8c-2.2,0.7-3.5-0.7-4.3-2.5c-1.1-2.3,1.8-0.7,1.7-2.3\n                            c-1.4-0.1-3.1-0.2-4.7-0.2c2.9-1,6-3.3,7.9,1.3c0.1,0.3,0.9,0.6,1.3,0.5c11.6-1.9,23.4-2,35.1-3.1c0.3,0,0.5-0.4,0.7-0.6\n                            c1.8-1.6,3.8-1.5,5.8-0.4c0.9,2.5-0.9,2.6-2.6,2.8c-2.1,0.3-4.2-0.5-6.2,0.5c-3,0.8-6.3,0.3-9,2.1c-0.3,0.5-0.8,0.6-1.2,0.8\n                            l-0.4-0.2l-0.4,0.2C1892.7,687.9,1889.4,687.7,1886.1,687.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ABA6A3",
                  d:
                    "M1051,109c-3.9-2.4,1.3-1.5,1-2.6c-6.5-2.5-13.3-0.2-19.9-2.2c2.6-0.1,5.2-0.3,9.2-0.5\n                            c-6.3-1.7-11.5,0.6-16.3-1.6c6-1.1,11.9-0.7,17.9-0.2c6.7-0.1,13.4,0.4,20.1,1.1c10.8,2.3,21.7,4,32.6,5.6\n                            c6.4,0.9,12.6,2.9,18.9,4.1c6.9,1.3,13.8,2.8,20.7,4.6c3.4,0.9,7.4,1,9.6,4.6c-4.9,0.7-10-1-14.9,1.1c-5,2.3-10.4,1.6-15.6,2.1\n                            c-3.8-2.4-8.5-2.1-12.6-3.5c-3.7-1.3-8-1.3-11.5-2.7c-9.1-3.7-19.4-1.6-28.1-6.4c-2.6-3.8-4-4.1-8.8-1.8\n                            C1052.3,110.4,1051.7,109.6,1051,109z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9D9894",
                  d:
                    "M1144.8,121.8c-5.2-1.9-10.4-3.7-15.8-5c-9.3-2.4-19-2.8-28.1-6.2c-5.2-1.9-11.1-0.6-16.4-2.6\n                            c-7-2.6-14.9-1.1-21.5-4.9c11.6,1.2,23.2,3,34.7,5c7.5,1.4,15.2,2.5,22.4,4.4c11.9,3.2,24.2,4.8,35.9,8.5\n                            c0.6,0.2,1.2,0.1,1.8,0.9C1153.5,121.8,1149.2,121.8,1144.8,121.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#56524E",
                  d:
                    "M1113,123.9c5.7-0.3,11.3-0.6,17-0.9c11,0.3,21.9,0.7,32.9,1c1.8,0.1,3.7-0.4,5.3,0.9\n                            c-1.4,1.7-3.6,1.3-5.3,2.1c-1.1,0.3-2.3,0.4-3.5,0.5c-5.4,0-10.8,0.2-16.2-0.4c-6.5-1.2-13.1-1-19.6-0.2c-3,0.4-5.9,0.7-8.8,0.2\n                            c-1.7-0.6-3.5-0.7-4.8-2C1110.2,122.8,1111.6,123.3,1113,123.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807E79",
                  d:
                    "M966.1,97.9c1.5-1.6,3.5-0.4,5.2-1.1c0.8,0,1.7,0.1,2.5,0.1C984.9,98,996,98,1007,100\n                            c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3C993.4,100.1,979.8,98,966.1,97.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#65615C",
                  d:
                    "M1185,126c1.7,0.6,3.5,1.3,5.2,1.9c-0.5,1-1.5,1.5-2.5,1.9c-2.5,0.7-4.8-0.5-7.2-0.5\n                            c-3.8-1.4-8.4,0.5-11.6-2.9c1.7-2,4.2,0,6.1-1.3C1178.3,125.4,1181.6,125.7,1185,126z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#78736F",
                  d:
                    "M1042.9,101.9c-6,0.1-12,0.1-17.9,0.2c0,0,0.1-0.2,0.1-0.2c-0.4-0.2-0.5-0.4-0.4-0.5\n                            c0.1-0.2,0.2-0.3,0.4-0.3C1031,101.5,1037,99.9,1042.9,101.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484540",
                  d:
                    "M1174.9,125.1c-1.8,1.7-4,0.4-6,1c-2,1.5-4,1.6-5.9-0.3c1.5-1.5,3.5-0.5,5.1-1\n                            C1170.4,125,1172.7,125,1174.9,125.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D7874",
                  d:
                    "M1007,100.9c0-0.3,0-0.6,0-0.8c2.9,0,5.8,0,8.6,0c0.1,0,0.2,0.2,0.3,0.3c-0.3,0.2-0.7,0.4-1,0.7\n                            C1012.3,101,1009.7,100.9,1007,100.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807E79",
                  d:
                    "M1025,101.1c0,0.3,0,0.5,0,0.8c-1.7,0-3.3,0-5,0C1021.5,100.4,1023.4,101.2,1025,101.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#888480",
                  d:
                    "M1197.8,130.1c27.4,11.7,55.5,21.7,83.2,32.9c0.6,1.4,2.2,2.3,2,4c-1.6,1.3-3.3,0.3-4.9,0.4\n                            c-0.4-0.1-0.8-0.4-1.2-0.6c-10.1-5.3-20.8-9.2-31.9-11.9c-0.7,0-1.4-0.1-2.1-0.3c-3.7-2.2-6.6-6.9-12-4.1\n                            c-0.5,0-0.9-0.2-1.3-0.5c-0.8-2.1-2.8-2.9-4.7-3.3c-1.9-0.3-3.5-1.1-5-2c-6.6-4-14-5.7-21.1-8.3c-2.7-1-4.2-2.3-4-5.2\n                            C1195.5,129.9,1197,131,1197.8,130.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989891",
                  d:
                    "M1460,253c1.3,2.4,4,2.7,6,4c3.1,3.3,7.2,5.6,9.6,9.7c1,1.7,3.7,2.7,2.6,5.3c-1,2.4-3.6,2.7-5.8,3.1\n                            c-0.8,0.1-1.6-0.1-2.4-0.2c-0.5-0.2-0.8-0.5-1.1-0.9c2.4-4.2,1.6-6.2-3.3-9.4c-7.9-5.1-15.7-10.5-24.1-14.8\n                            c-0.9-0.5-1.6-1.2-2.3-1.9c-5.9-3.7-11.3-8.1-17.6-11.1c-1.5-0.7-3.2-1.1-3.7-3c0.1-0.2,0.1-0.5,0.2-0.7\n                            c7.8,1.9,14,7.1,21.3,9.8C1446.6,245.5,1452.3,251.2,1460,253z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989891",
                  d:
                    "M1359,204c1,0.3,2,0.7,3,1c1.2,0.9,3.3,0.1,4,2c16.6,6.9,32.4,15.6,48.8,23c1.5,0.7,2.5,1.6,3.2,2.9l0,0\n                            c-3.3,1.9-5.4-1.1-8-2c-2.3-0.8-4.2-2.5-6.8-2.7c-1.5-0.3-2.8-0.7-4.1-1.6c-0.4-0.3-0.7-0.6-1-1c-2-2.6-5-2.9-7.9-3.7\n                            c-8.8-4.5-17.7-8.7-26.9-12.5c-3.7-1.5-7.1-4-10.8-6c-1-0.5-2-1.2-1.7-2.7C1354.6,199.4,1357,201.3,1359,204z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#908D88",
                  d:
                    "M1359,204c-2.7-1-4.9-3.2-8-3c-6.6-0.2-11.6-4.4-17.2-7.1c-2.3-2.3-6-2.5-8-5.3c0.1-0.2,0.1-0.5,0.2-0.7\n                            c7-0.3,12.8,2.7,18.8,5.9c4.1,2.1,7.6,5.9,12.6,6.1C1361.1,200.1,1358.3,202.7,1359,204z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989792",
                  d:
                    "M1287,171c4-0.7,6.7,2.4,10,3.8c2,0.8,3.9,1.7,6,2.2c3.7,1.6,7.3,3.6,11.1,5.1c1.2,0.5,2.4,1.2,1.8,2.9\n                            c-1.2,1-2.6,0.6-3.8,0.1c-10.9-5.3-22.5-9.2-33.2-15.1c-0.2-0.5-0.2-0.9,0-1.4C1282.5,166.4,1284.8,168.7,1287,171z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#908D88",
                  d:
                    "M1316,185c-3.7-3.7-9.4-4.2-13-8c5,1,10.3,2.4,14.3,5.3c2.8,2,7.7,1.1,8.7,5.7l0,0\n                            c-3.8,1.5-6.5-1.2-9.5-2.4C1316.3,185.4,1316.2,185.2,1316,185z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#928E8A",
                  d:
                    "M1287,171c-2.7-0.6-4.6-4.1-8-2c-0.9-0.4-1.5-0.9-1-2c1.7-1.4,3.3-0.2,5,0\n                            C1284.1,168.5,1287.7,167.6,1287,171z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#908D88",
                  d:
                    "M1366,207c-1.3-0.7-2.7-1.3-4-2C1363.4,205.6,1366.3,202.9,1366,207z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M681,671c4.3,3.1,9.6,0.8,14.1,2.9c-0.5,1-1.3,1.5-2.3,1.7c-0.3,0-0.6,0-0.9-0.1\n                            c-0.1,0.6,0.4,0.3,0.5,0.3c5.6-0.2,11.2,0,16.8-0.2c31.1-1,62.2-0.4,93.3-0.7c0.9-0.1,1.8-0.4,2.5-0.9c3,0,5.9,0,8.9,0\n                            c-5.1,0.7-9.4,3.3-13.7,5.4c2.8,2.5,5.5-0.2,8.3-0.3c5.1-0.2,10.3-0.1,15.5-0.1c1.2,0,3,0.4,3.4-0.2c3.1-4.6,4.7-0.4,7.3,0.5\n                            c1.7,0.6,5.1,2.9,7.5,0c0.3-0.3,0.9-0.9,1-0.8c8.1,4.4,15.9-2.6,24-0.7c1.2,0.3,2.7,0.4,3.7-0.8c0.7-0.8,1.3-2.4,2.6-0.9\n                            c1.5,1.7-0.5,2.4-1.5,3.4c2.3,1.1,5.1-0.7,7.1,1.4c-0.6,0.7-1.4,1-2.2,1.2c-4.7-0.4-9.7,1.7-14.2-1.4c-0.2-0.1-2.3,1.9-4,2.1\n                            c-3.8,0.2-7.6,0.1-11.4,0.1c-2.6,0.2-5.1-0.7-7.7-0.5c-2.2-0.1-4.5,0.2-6.8-0.1c2.1,0.1,4.1,0.1,6.2,0.1c2-0.1,3.9,0.2,5.8,0.5\n                            c2.5,0.4,5.3-0.9,7.5,1.2c-8.6,1.3-17.2,0.5-25.8,0.7c-9.5,0.2-19,0.1-28.4,0.1c0-0.6,2.5-2.3-0.2-1.7\n                            c-8.8,1.7-17.6,0.2-26.3,0.9c-14.4,1.1-28.9,0.2-43.2,1.2c-13.8,1-27.5,0.3-41.3,0.8c-4.2,1-8.5,0.4-12.8,0.4\n                            c-3.9,0-4.4-3.5-5.5-6.1c-0.4-0.8,0.4-1.9,1.2-1.8c3.6,0.6,6.6-3,10.4-1.1c1.4,0.7,3.1-0.2,4,0c-4.8,0.6-10.1-1.3-15.4-2.2\n                            c-2.1-0.3-2.1-3.1-0.1-5c1.4-0.1,2.3,0.8,3.3,1.7C675.1,672.7,678.1,672,681,671z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#170E0B",
                  d:
                    "M672,671.9c-1-0.3-2-0.6-2.9-1c-8.3-1.2-15.9-4.9-23-8.9c-13-7.3-26.8-10.3-41.5-10.6\n                            c-12-0.3-23.9,0.6-35.9-0.6c-2.6-0.3-3.5,2.4-5.8,2.2l0.1,0c-0.8-1.3-2.9-2.1-1.3-4.2c0.7-0.9,1.3-1.8-0.6-1.8\n                            c-0.7,0-1.8,0.8-1.8-0.7c0-1.3,1.2-1.6,2.2-1.3c7.2,1.8,14.6,1,21.9,0.8c11.7-0.3,23.2,0.8,34.8,1.3c7.4,0.3,14.6,2.8,21.5,6.3\n                            c9.9,5,19.4,10.8,29.6,15.4C670.7,669.6,671.9,670.1,672,671.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#160C0B",
                  d:
                    "M670,666c-2.3-0.1-4-0.7-5.4-2.3C667.6,662,669,663.6,670,666z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M169,641c8.1,1,15.2-1.5,21.8-6.2c6.5-4.6,14.3-5.6,21.9-4.6c7.5,1,14.9,0.4,22.3,0.8\n                            c-0.3,0.4-0.5,0.9-0.8,1.3c-1.3,1.5-2,3.5-0.6,5c1.4,1.5,2.6-1.2,4.5-1.2c-0.7,5.7-1.4,11.4-2.2,17c-0.1,0.5-1.1,1.4-1.2,1.4\n                            c-3.6-2.2-7.9,1.4-11.8-1.5c-1.2-0.8-4.3-1.2-6.6-1.9c-0.5-0.2-8.1-1.9-8.9-2.1c-0.6-0.1-1.3,0-1.9,0.1\n                            c-5.2,1.1-11.1,0.4-15.5-0.8c-4.6-1.3-10-1.8-14.3-4.8c-1.4-1-2.3-1.8-1.7,1c0.2,1.1-1.8,0.6-2.3,0.1\n                            C170.6,643.5,169.9,642.2,169,641z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#552223",
                  d:
                    "M1325,274.8c-0.1,0.4-0.1,0.9-0.2,1.3c-2.9-0.7-5-2.6-7.3-4.2c-18.8-12-37.5-24.2-57.2-34.9\n                            c-2-1.1-4.3-1.9-5.3-4.3c11.8,5.9,23.6,12,34.4,19.6c4.9,3.4,9.9,6.6,15.5,8.6C1311.7,265.7,1318.4,270.2,1325,274.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#494641",
                  d:
                    "M1331,287c0.3-0.3,0.7-0.7,1-1c6.5,3.6,12,8.7,18,12.9c-0.7,0.8-1.7,0.5-2.6,0.5\n                            c-4.6-0.7-7.6-4.2-11.2-6.7C1334.6,290.7,1330.9,290.6,1331,287z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#794E4D",
                  d:
                    "M1211,206.9c7.8,3.1,14.9,7.5,22,12c0.4,0.5,0.3,1-0.2,1.4c-6.3-3.6-12.7-7.2-19-10.8\n                            C1212.7,208.8,1211.3,208.5,1211,206.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#885653",
                  d:
                    "M1232.8,220.3c0.1-0.5,0.1-0.9,0.2-1.4c5.5,1.9,9.9,5.5,15,8.1c0.2,0.5,0.3,0.9,0.5,1.4\n                            C1242.8,226.7,1238.1,222.8,1232.8,220.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#514743",
                  d:
                    "M1162,187c-6.3,1-9.8-0.6-11-5C1154.9,183.3,1158.8,184.4,1162,187z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DCD5D4",
                  d:
                    "M1347,299c1,0,2,0,3.1,0c1.4,0.5,3.2-0.6,4.4,0.9c-4.2,0-8.5,0-12.7,0\n                            C1343.1,297.4,1345.1,298.6,1347,299z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#514743",
                  d:
                    "M1164,188c-0.5,0.9,1.3,2.6-0.4,2.6c-1.6,0-2.7-1.6-1.5-3.5C1162.9,187,1163.6,187.2,1164,188z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#514743",
                  d:
                    "M1170.1,190.9c-1.7,0.1-4.4,2.3-4.1-1.9C1167.7,189,1169,189.8,1170.1,190.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#642D32",
                  d:
                    "M1063.8,122.1c-14.5-3.1-29.1-6.2-43.6-9.2c-8.7-1.8-17.5-3.2-26.3-4.7c-2.5-1.7-5.5,0.1-8.1-1l-0.1,0\n                            c0.9-3.5,4-2.8,6.4-3.1c10.4,0.8,20.8,1.2,30.9,4.3c0,0.8-0.5,1.1-1.2,1.1c0.3,0.3,0.7,0.2,1.1,0.2c9.5,0.2,18.7,2.7,27.8,4.9\n                            c4.3,1.1,8.9,1.3,13.1,3c1.8,0.7,4,0.9,4.4,3.4C1067.1,122.7,1065.6,122.8,1063.8,122.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5F2429",
                  d:
                    "M849.7,98.8c3.7-1.2,7.6,0,11.3-0.8c0.7,0,1.3,0,2,0c3-0.8,6-0.8,9,0c0.7,0,1.3,0,2,0\n                            c1.7-0.7,3.4-0.9,5,0.1c2.2,0,4.5,0,6.7,0c6.4,0.9,12.9,0.1,19.4,0.4c2,0.1,4-0.4,5.9,0.4c6,0.3,12,1.3,18,0.8\n                            c2.6-0.2,5.2-0.8,7.7,0.4c5.3,1.2,10.7,0.8,16.1,1.2c1.8-0.3,3.5,0.1,5.2,0.4c0.1,3.5-2.2,2.7-4.2,2.3l-0.4,0.1l-0.4-0.2\n                            c-7.8-1-15.7-0.4-23.4-1.6c-1.6-0.2-3.3,0.2-4.9-0.4c-15.1,0.4-30.2-1.1-45.3-1.7c-5.8-0.2-11.6-0.3-17.4-0.5\n                            C858,98.6,853.7,100.5,849.7,98.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D3639",
                  d:
                    "M1063.8,122.1c1.4-0.4,2.8-0.7,4.2-1.1c1.7-1.6,3.7-1.3,5.6-0.8c7.4,1.9,14.8,3.8,22,6.5\n                            c1.1,0.6,2.2,1.1,3.4,1.4c5.4,1.4,11.2,2.1,15.2,6.6c-0.2,0.5-0.6,0.8-1.1,1c-5.3-0.5-10-2.9-15.2-3.6\n                            C1086.5,128.9,1075.4,124.6,1063.8,122.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C383D",
                  d:
                    "M953.8,104.1c1.6-0.3,3.4-0.1,4.2-2.1c1.3-1,2.7-0.8,4.2-0.7c9.1,0.5,18.1,0.8,27.2,1.7\n                            c1.1,0.3,2.5,0.2,2.9,1.8c-2.1,1-4.6,0.6-6.4,2.3C975.1,107,964.4,105.2,953.8,104.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D3639",
                  d:
                    "M1137.6,145.2c-7-0.9-13.3-3.9-19.7-6.7c-0.6-1.9-4.5-0.2-3.9-3.5l0-0.1c4.3-2.2,7.8,1,11.7,1.8\n                            c3.2,0.6,6,2.5,9.2,3.6c1.5,1.4,4.2,1.3,4.5,4C1139.1,145.2,1138.5,145.6,1137.6,145.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5F2229",
                  d:
                    "M849.7,98.8c4.1,0.8,8.4-0.9,12.3,1.1c-13.6,0.6-27.3,1.6-40.9,1c-0.5-1.9,1.4-1,2-1.7\n                            C831.9,99.1,840.8,99,849.7,98.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#713C40",
                  d:
                    "M1137.6,145.2c0.5-0.4,0.9-0.8,1.4-1.2c0.1-0.1,0.3-0.3,0.4-0.3c7.5,1.1,14.7,3.3,20.7,8.2\n                            c0.2,0.5,0.1,1-0.4,1.4c-3.2-0.8-6.5-1.6-9.7-2.4C1145.9,148.9,1141.8,147.1,1137.6,145.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C383D",
                  d:
                    "M924.7,102.1c9.5-0.3,18.9,0.3,28.3,1.9C943.5,103.7,934,104.3,924.7,102.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#713C40",
                  d:
                    "M1114,135c0.4,2.1,3.4,1.4,3.9,3.5c-6.6-2.1-13.3-4.3-19.9-6.4C1103.6,131.5,1108.4,135.2,1114,135z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D4E53",
                  d:
                    "M823,99.2c-0.7,0.6-1.3,1.1-2,1.7c-1.7,0-3.4,0-5,0c-0.5-0.5-1.6-0.6-0.8-1.7\n                            C817.8,99.2,820.4,99.2,823,99.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E4B4B",
                  d:
                    "M793.2,100.2c3.3-0.1,6.5-0.1,9.8-0.2c0.2,0.2,0.3,0.4,0.2,0.6c-0.1,0.2-0.2,0.3-0.3,0.3\n                            c-1.6,0.5-3.6-0.4-5,1.1c-1,0-2-0.1-3-0.1c-0.6-0.5-1.6-0.2-2.2-0.8C792.6,100.6,792.8,100.4,793.2,100.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9D7E7B",
                  d:
                    "M803,100.9c0-0.3,0-0.6,0-0.8c1.5-1.6,3.4-0.8,5.1-0.9c0.7,1.1,3-0.7,2.9,1.7\n                            C808.3,100.9,805.6,100.9,803,100.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A07876",
                  d:
                    "M811,100.9c-1-0.6-1.9-1.1-2.9-1.7c2.4,0,4.7,0,7.1,0c0.3,0.6,0.6,1.2,0.8,1.7\n                            C814.3,100.9,812.7,100.9,811,100.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C383D",
                  d:
                    "M985.9,107.1c2.7,0.2,5.6-1.2,8.1,1C991.2,108,988.5,108.3,985.9,107.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#201C1C",
                  d:
                    "M121,632c-0.3,0-0.7,0.1-1,0.1c-4.2,0.1-8.2-0.4-11-4c-3-1.3-5.9-2.7-8.9-4c-1.9-0.9-2-3-0.6-3.3\n                            c5.4-1.3,4.1-5.8,4.6-9.1c0.5-3.1,0.5-6.1,3.9-7.6c1-0.5,1.8,0,2.6,0.4c3,1.5,6.2,2.7,8.8,4.9c0.8,0.8,2,1.3,1.6,2.7\n                            c-3.5,2.2-2.5,4.4-0.5,6.8c-2,0.2-4.6,0.7-6.8,2.6c1.5,0.8,3.7,0.5,4.3,2.5c-2.9,1.3-5.9,0.7-9.6,0.5c4.9,0.6,9,1.7,13.1,2.9\n                            c1.4,0.4,3.5,0.2,3.5,2.7C123.4,630.2,121.3,629.3,121,632z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332F2E",
                  d:
                    "M125,630c-5.4-2.8-11.8-2.5-17.2-5.6c3.6-0.7,6.9-2,10.3-0.4c4.7,1,9.3,2,14,3c4.1,2.1,9,1.6,13,4\n                            c-0.3,1.2-1.1,2.1-2,3C137,632.6,131,631.3,125,630z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3738",
                  d:
                    "M143,634c0-1.5,0-2.9,2-3c9.8,1.9,20.1,1.5,29,7c-1.1,3.4-3.8,2.1-5.8,1.5\n                            C159.9,637.2,151.5,635.6,143,634z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332F2E",
                  d:
                    "M129,635c-2-1-4-2-6-3c3.9,0.2,7.6,0.9,11,3C132.3,635,130.7,635,129,635z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D0F11",
                  d:
                    "M2070,631c-7.4,3.3-14.5,7.5-23,8c-4.6,0.3-9,3.1-13.9,1.3c-1.4,3.5-5.3,1.9-7.5,3.6\n                            c-0.7,0.5-1.4,1-2.3,0.7c-8.1-2.3-16.3,0.4-24.2,0.8c-9.6,0.4-19.6,0.5-29.1,2.9c-3.8,1-7.2,2.7-11.4,2.1\n                            c-4.9-0.7-10.3-0.3-14.6,0.8c-6,1.6-12.3,0.3-17.9,3.1c-1.7,0.9-2.4-0.1-3.1-1.4c1.2-3.3,4.5-3,7-4c0.3,0,0.7,0,1,0\n                            c3.9-1.6,8.6,0.4,12-3c0.3,0,0.7,0,1,0c2.5,1.1,4.8,0,7-1c0.3,0,0.7,0,1,0c1.3,1.4,2.7,0.9,4,0c1,0,2,0,3,0c2.9-1.3,6-0.8,9-1\n                            c1.7-0.1,3.6,0.7,5-1c7.1,0,14.1-0.6,21.1-1.7c5.4-0.8,11.1-0.2,16.7-0.9c10-1.2,20.3-2.2,30-4.1\n                            C2050.5,634.3,2060.5,634,2070,631z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1973,643c0.1,0.7,0.8,2-0.5,1.9c-4.5-0.3-9,1.2-13.5,0.1c0.3-2.4,2.2-2,3.8-2\n                            C1966.2,643,1969.6,643,1973,643z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1930,649c-2.3,1.3-4.7,2.7-7,4c-0.3,0-0.7,0-1,0c-1-1-2-2-3-3C1922.6,649.2,1926.3,648.6,1930,649z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1943,646c-0.9,3.1-3.4,3.1-6,3c-2-0.1-4,0-6,0C1934.7,646.6,1939.1,647.4,1943,646z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1917,649c-3-0.7-6.9,2.9-9-2C1910.9,647.9,1914.7,645,1917,649z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1951,645c-2,2.9-4.4,2.6-7,1C1946.3,645.7,1948.7,645.3,1951,645z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1956,645c-0.1,1.1-0.5,1.9-1.8,1.9c-1.4,0.1-2.1-0.5-2.3-1.9C1953.3,645,1954.7,644,1956,645z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D1317",
                  d:
                    "M1903,647c-1.4-0.1-3,0.5-4-1C1900.8,644.3,1901.8,646,1903,647z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292424",
                  d:
                    "M950,680c14.8-0.3,29.6-0.1,44.3-0.4c25.5-0.7,51.1-0.3,76.7-0.6c14-0.2,28-0.4,41.9-0.6\n                            c16.8-0.3,33.6-0.9,50.4-0.2c21.3,0.9,42.6,0.4,63.9,1c20.2,0.5,40.5,1,60.7,0.9c-0.3,2.4-2.2,1.3-3.4,1.4\n                            c-4.2,0.4-8.4-0.5-12.6,0.5c-30.3,0.1-60.6,0.3-90.9,0.4c-30.6,0.1-61.3,0.1-91.9,0.1c-3.3,0-6.6,0.8-9.8-0.3\n                            c-1.9,0-3.8,0-5.7,0c-1.5,0.5-3,0.5-4.6,0c-1.9-0.3-3.7,0.9-5.6-0.1c-0.3,0.4-0.7,0.4-1,0c-1.8,0.9-3.7-0.2-5.5,0.1\n                            c-0.6,0-1.3,0-1.9,0c-2.8-1-5.7,1.4-8.5-0.1c-1,0.5-2,0.5-3,0c-1.5,1.2-3-1.1-4.5,0.1c-1,0.4-2,0.4-3,0c-5.5-1.4-10.9,0-16.4,0\n                            c-0.9,0.4-1.7,0.4-2.6,0c-2.7-0.5-5.4-0.5-8,0c-0.7,0-1.3,0-2,0c-1.8-1.1-3.6,0.7-5.4,0c-1.4,0.5-2.8,0.5-4.1-0.1\n                            c-2.3,0.6-4.7,0.6-7,0c-0.7,0.5-1.3,0.5-2,0c-2.8,1.6-5.7-2.2-8.5,0.1l-0.3,0.1l-0.2-0.2c-1.8,1.2-3.7-1.1-5.5,0.1\n                            c-3.5,0.3-7,1.6-10.5-0.1c-2.3,0.6-4.7,0.6-7,0c-1.4,0.6-2.8,0.5-4.2,0.1C950.6,682.5,949.9,681.7,950,680z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292424",
                  d:
                    "M852.3,684.1c-2.7-0.1-5.4-0.3-8.1-0.4c-0.1-2.2,2.3-0.5,2.8-1.7c4,0,8,0,12,0c5.9-1,11.8-0.2,17.7-0.5\n                            c5.1-0.3,10.3,0.6,15.3-0.5c11.3,0,22.7,0,34,0c0.2,2-1.4,1.3-2.3,1.5c-1.6,0.3-3.2-0.6-4.7,0.6l-0.3,0.2l-0.3-0.2\n                            c-10.6,0.6-21.3,0.7-31.9-0.1c-0.3,0.5-0.6,0.5-0.9,0c-6.8,1.2-13.7-0.4-20.6,0.8C860.8,684,856.5,684.1,852.3,684.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342F2F",
                  d:
                    "M1272,682c3.2-2,6.7-0.5,10-1c2-0.3,4.3,0.8,6-1c10.4-0.4,20.7,1.2,31.3,0.5c7.5-0.5,15.6-0.4,24.1,0.8\n                            c-4.1,1.5-8-0.1-11.4,1.6C1312,683.6,1292,681.6,1272,682z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M919,683.1c1.8-2.4,5.1,0.2,7-2.1c8,0.5,16-1.7,24-1c0.4,1.1,1.3,1.7,2.4,2.1\n                            C941.2,682.5,930.1,682.8,919,683.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M886.4,683.1c10.6,0,21.3,0,31.9,0.1c-0.2,0.2-0.3,0.5-0.5,0.7c-9.4-0.1-18.7-0.1-28.1-0.2\n                            C888.7,683.6,887.5,683.2,886.4,683.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1019.6,682.2c5.5-1.7,10.9-2,16.4,0C1030.6,682.7,1025.1,682.7,1019.6,682.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1009,682.1c2.7-1.7,5.4-1.7,8,0C1014.3,682.7,1011.7,682.7,1009,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1046.5,682.1c2.8,0.9,5.7-2.2,8.5,0.1C1052.2,682.6,1049.3,682.8,1046.5,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M980,682.2c2.8-2.9,5.7,0.4,8.5-0.1C985.7,682.9,982.8,682.6,980,682.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1001.6,682.1c1.8-0.6,3.6-2.3,5.4,0C1005.2,682.7,1003.4,682.7,1001.6,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1073.6,682.1c1.9-1.2,3.8-1.3,5.7,0C1077.4,682.7,1075.5,682.7,1073.6,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M974,682.1c1.8-2.5,3.7,0.3,5.5-0.1C977.7,682.8,975.8,682.7,974,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1063.5,682.1c1.8,0.6,3.7-1.9,5.6,0.1C1067.2,682.7,1065.3,682.8,1063.5,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1056.9,682.2c1.8-2.1,3.7,0.6,5.5-0.1C1060.6,682.7,1058.8,682.7,1056.9,682.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M956.5,682.1c2.3,0,4.7,0,7,0C961.2,682.8,958.9,682.8,956.5,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M990.5,682.1c2.3,0,4.7,0,7,0C995.2,682.8,992.8,682.8,990.5,682.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M1039,682.2c1.5-2.1,3,0.4,4.5,0C1042,682.7,1040.5,682.7,1039,682.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B5B2AE",
                  d:
                    "M992.3,104.8c-0.8-0.3-1.5-0.5-2.3-0.8c-1.8-1.2-3.9-0.3-5.8-0.6c-0.9-0.2-1.7-0.4-0.9-1.5\n                            c0.5-0.6,1.1-0.3,1.7,0.1c11.7,1.3,23.5,2.5,35.2,4.1c9.1,1.3,18.2,2.2,27.3,3.8c1,0.2,3,1.9,3.5-0.9c0.8,0,1.6,0.2,2,1\n                            c3,0.8,6.4-0.5,9,2c1.8,0.2,3.5-0.3,5.2,1c3.9,3.1,9.2,0.1,13.4,2.6c1.6,0.9-1.6-3.9,2-1.9c1.4,0.8,1.1,2.8,3.4,3.1\n                            c8.8,1,17.2,4.6,26,5.3c1.7,0.1,1.4,0.8,1,1.8c-1.1,0.3-2.2,0.6-3.3,0.9c-2,2.2-4.4,1.8-6.8,1.1c-15.5-4.7-31.4-7.4-47.2-10.5\n                            c-10.4-2.1-20.7-4.4-31.3-5.7c-0.5-0.1-0.8-0.5-1.1-0.9C1013.1,106.7,1002.7,105.5,992.3,104.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BAA8A6",
                  d:
                    "M985,102c-0.2,0-0.4,0-0.5,0.1c-0.2,0.2-0.3,0.4-0.5,0.6c1.9,1,4.3-0.7,6,1.3c-10.7-0.2-21.3-2.3-32-2\n                            c-1.7-0.2-3.5-0.4-5.2-0.7c2.3-2.5,5.7-1.1,7.8-0.9c7.1,0.8,14.2,0.1,21.2,0.5C983,101.1,984.2,100.9,985,102z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9898",
                  d:
                    "M911,98.9c-8.4,0-16.9,0.3-25.3-0.8C894.2,98.3,902.6,96.9,911,98.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CDACAA",
                  d:
                    "M936.7,100.2c-2.6-0.1-5.1-0.3-7.7-0.4c4.3-1.7,8.6-0.3,12.9,0C940.2,99.9,938.5,100,936.7,100.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9898",
                  d: "M872,98c-3,0-6,0-9,0C866,96.4,869,96.4,872,98z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF9898",
                  d:
                    "M879,98.1c-1.7,0-3.4,0-5-0.1C875.7,96.5,877.4,96.5,879,98.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373230",
                  d:
                    "M119,610c-3-1.7-6-3.3-9-5c3.8-3.8-0.3-5.6-2-8c-2.4-4.3-4.7-8.6-7.1-12.9c4.6,2.7,7,7.6,11.1,10.9\n                            c2.9,4.3,8.5,6.5,9.6,12.2c0.2,1,2.2,1.6,1,2.9C121.6,611.2,120.2,610.6,119,610z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282524",
                  d:
                    "M119,610c1,0,2,0,2,0c0.7-7.2-7.4-9-9-15c5,3.3,9.5,7.1,13,12c2.1,1.4,4,3.4,2.2,5.6\n                            c-1.7,2.1-4.2,0.7-6.2-0.6h0C120.3,611.3,119.7,610.7,119,610z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#201C1C",
                  d:
                    "M121,612c1.9-0.1,3.9,2.2,5.5,0.2c1.6-2-0.7-3.5-1.5-5.2c3.4,0.3,4,3.7,5.8,5.7c1.3,1.4-1.7,3-2,2.8\n                            C126.7,613.2,122.6,615.3,121,612z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8B8584",
                  d:
                    "M2080.9,428c-1.3-1.8-1.5-4-1.8-6.1c2.4,0.4,4.6-0.3,6.8-0.9c3-0.8,4.6,0.5,5.8,3.1\n                            c1.1,2.4,0.7,3.5-2,4.2C2086.6,429.3,2083.8,427.9,2080.9,428z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#502818",
                  d:
                    "M1879,409c-5-1.4-9.5-4.2-14.4-5.9c-4.4-1.5-10.1-3.2-13-8.2c-0.4-0.7-1.1-1-1.6-0.7\n                            c-5.4,2.5-9.5-1.3-14-3c3.1-3.4,7-5.7,11.1-7.6c0.5-0.1,0.9-0.1,1.4-0.1c1.4,0.2,2.9,0.3,4.3,0.4c2.7,1.2,6.3-0.4,8.4,2.6\n                            c-2.8,2.9-6.4,1.4-9.7,2c-0.6,0.3-1.1-0.7-1.8-0.1c0.3,0.1,0.5,0.2,0.8,0.4c1.7,1.5,3,3.6,5.6,3.7c1.2,0.1,1.9,0.8,2.3,1.8\n                            c1.4,1.4,2.7,2.5,4-0.1c1.6-0.6,3.2-0.6,4.6,0.6c0.9,2.4,4,1.8,5.2,3.8c0.7,2.8,3.6,3.2,5.3,4.9\n                            C1878.9,405.1,1881.6,406.4,1879,409z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C6261",
                  d:
                    "M1967,437c-2.5,1.7-5.5-1.6-7.9,0.8c-16.8-4-33.3-9-49.9-13.9c2-3.8,4.9-0.6,7.4-1\n                            c4.8,1.5,9.9,2.4,14.6,4.4c1.5,0.6,3.1,1,4.8,0.2c0.7-0.2,1.5-0.2,2.2,0c5.2,2.1,10,5.3,15.8,5.7c0.5,0.2,0.9,0.5,1.1,1\n                            c1.4,1.4,2.8,1.7,4.8,1.1C1962.4,434.5,1965,434.8,1967,437z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C2813",
                  d:
                    "M1879,409c1.2-3.8-2.3-4.2-4.1-5.8c-1.3-1.2-3.8-1.5-2.9-4.2c2.5-1.8,5-0.1,7.5,0.1\n                            c1.9,0.8,3.7,2.1,4.3,3.9c1.6,4.7,5.3,6.7,9.4,8.6c2.7,1,4.7,2.7,5.9,5.4c-3.3,0.7-5.9-1.7-8.8-2.5\n                            C1886.3,413.2,1882.7,410.9,1879,409z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D6BDBB",
                  d:
                    "M1848,384c-4.2,2.1-7.4,5.7-11.9,7.2c-0.4-0.1-0.7-0.2-1.1-0.3c-1.7-1.4-4-1.3-5.9-2\n                            c-0.4-0.2-0.9-0.4-1.3-0.6c-1.6-0.6-4.2-1-3.5-3c0.7-2,3.1-0.7,4.7-0.1c1.3,0.6,2.6,1.5,4.2,1.2c1.3-0.2,2.7-0.5,3.3-1.9\n                            c0.6-1.4-0.7-1.9-1.5-2.7c-0.9-0.9-3.1-1.3-1.4-3.3c2.8-1.2,5.4-0.3,8,0.5c2.5,0.8,4.5,2.7,6.9,3.8\n                            C1848.4,383.2,1848.3,383.6,1848,384z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#90401C",
                  d:
                    "M1899,417c-2.3-1-3.1-4-6-4c-1.2-2.2-3.2-3.6-5-5.3c-1.6-1.4-3.4-2.7-2.5-5.4c3.1-2.3,4.7,1.6,7.3,1.8\n                            c0.4,0.1,0.9,0.2,1.3,0.4c1.7,1.1,3.1,2.4,4.1,4.2c0.2,0.4,0.2,0.8,0.2,1.3c0.1,3,3.1,3.3,4.6,4.9c0.7,2,0.3,3-2.1,2.2\n                            C1900.3,417,1899.7,417,1899,417z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#523931",
                  d:
                    "M1917,423.9c-2.6,1-5.1-2.3-7.7-0.1c-5-0.4-5.8-1.1-4.3-3.7c1-2,3.1-1.2,4.7-1.8c3,0.7,5.8,1.8,7.8,4.3\n                            C1917.5,423.2,1917.3,423.6,1917,423.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#744A31",
                  d:
                    "M1909.1,418.7c-1,1.4-2.8,0.9-4.1,1.5c-1.3-1.1-3.2-1.3-4-3.1c1.2-0.3,2.6-0.5,1.1-2.1\n                            c-1.7-1.4-4.2-2.2-4.1-5.1l0.1-0.5c0.1-0.2,0.3-0.4,0.4-0.6C1902.6,411.4,1907,413.8,1909.1,418.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#502818",
                  d:
                    "M1835.9,395.2c-2.6-1.1-5.6-1.2-7.8-3.4c1.8-2,4.1,1.1,6-0.6C1834.7,392.6,1835.3,393.9,1835.9,395.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#793D3C",
                  d:
                    "M1873.5,413.1c0.5-0.3,1.1-0.6,1.6-0.9c0.2-0.4,0.5-0.6,1-0.5c1.4,0.3,2.7,1.1,4.1,1.3\n                            c0.9,0.3,1.9,0.7,2.8,1c0.5,1.8-1.2,1.4-1.9,1.9C1878.5,415,1876,414,1873.5,413.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#614443",
                  d:
                    "M1964.9,439.1c3,0.4,6.1,0.8,9.1,1.1c0,0.2,0,0.3,0,0.5c-3.3,0-6.7,0-10,0\n                            C1964.2,440.2,1964.5,439.6,1964.9,439.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D6ADA7",
                  d:
                    "M1862,405c-0.7,0.1-1.3,0.2-2,0.3c-2.6-1.7-6.3-1.7-8-4.9C1855.5,401.7,1858.9,402.9,1862,405z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D5ABA1",
                  d:
                    "M1870.9,409.1c-0.7,0-1.3,0.1-2,0.1c-1.8-1.5-5.3-0.7-5.8-4.1C1865.8,406.4,1868.7,407,1870.9,409.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#67342E",
                  d:
                    "M1881.1,415.9c0.6-0.6,1.3-1.2,1.9-1.9c1.9,0.6,3,1.4,0.9,3.2C1883,416.8,1882,416.3,1881.1,415.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#97887B",
                  d:
                    "M1880.2,413c-1.6,0.8-2.9,0.1-4.2-0.8c-0.6-0.4-0.6-0.8,0-1.2C1877.6,411.3,1879,411.9,1880.2,413z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C8A59F",
                  d:
                    "M1876,411c0,0.4,0,0.8,0,1.2c-0.3,0-0.6-0.1-0.9-0.1c-0.9-1.1-3.1-0.9-3-3\n                            C1873.4,409.8,1874.7,410.4,1876,411z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4748",
                  d:
                    "M1998,443.9c0-1.9-0.2-2.9-2.7-2.8c-1.6,0.1-4,1.3-5.3-1.2c3.7-1.6,7-5.3,11.6-2c0.3,0.2,0.5,0,0.5-0.2\n                            c-0.4,0.5-0.3,0.4-0.5,0c-1.6-2.8,0.8-2.7,2.2-2.8c3.3-0.4,6.3-0.8,8.4-3.9c0.8-1.2,3-1.1,4.6-1.5c1.6-0.1,2.5,1,3.4,2.1\n                            c0.2,0.5,0.1,0.9-0.2,1.3c-6.6,1.8-11.2,7.1-17.5,9.4C2001,442.9,1999.8,444.2,1998,443.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5759",
                  d:
                    "M2020.1,432.1c-1.6,0.1-2.1-1.4-3.1-2.2c-3-3.2-4.8-6.6-1.9-10.9c0.4-0.6,0.9-1.1,1.6-1.4\n                            c0.5-0.1,0.9-0.1,1.3,0.3c2,3.8,4,7.6,3.9,12.1C2021.2,430.5,2021.8,432.4,2020.1,432.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4647",
                  d:
                    "M2018.1,417.9c-0.3,0-0.7,0-1,0c-1.4,0.1-2.6-0.6-3.8-1.1c-1.8-0.9-4.1-0.7-5.4-2.6\n                            c-0.6-2.1-1.8-3.8-3.1-5.5c-1.1-1.4-2.5-2.7-1.7-4.8v0C2009.2,407.4,2014.5,411.7,2018.1,417.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342225",
                  d:
                    "M2020.1,432.1c0.6-0.7,1.3-1.4,1.9-2.1c-0.3,1.9,2.2,2.8,1.8,5.2c-1.8,0.1-2.4-1.9-3.8-2.3\n                            C2020,432.7,2020.1,432.4,2020.1,432.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383232",
                  d:
                    "M562.9,653.1c1.1-4.1,3.5-4,7.4-3.5c6.7,0.9,13.6,0.6,20.4,0.3c21-0.7,41.3,1.5,59.8,12.7\n                            c5.8,3.5,12.3,5.6,18.5,8.3c-3.2,0.2,0.4,1.8-0.6,2.9c-0.4,0.5,1,0.6,1.6,0c0.8-0.9,2.1-1.1,2.7-0.4c4.1,5.1,10.1,2.5,15.2,4.1\n                            c-6.1,0.4-12.3,0.4-18.2,2.3c1.4,4.7,4.4,7.1,9.8,6.1c2.4-0.4,5-0.1,7.5-0.1c-1.6,1.7-3.8,1-5.7,0.9c-17.4-0.6-34.7,1.8-52.1,1\n                            c0,0.4,0,0.8,0,1.2c11.7,0,23.4,0,35.2,0c-11.1,1.4-22.2,0.8-33.2,0.6c-15.9-0.3-31.8,1.1-47.7,1.2c-3.5,0-7-0.1-10.4,0\n                            c-2.1,0-3.5-0.8-4.2-2.8c-0.3-3.9-4.1-7.5-2.6-11.3c1.4-3.8-3.1-6.1-1.3-8.8c-0.3,1.4,1,3.7-1.1,5.4c-2-3.8-0.5-7.8-0.7-11.8\n                            C563,658.7,563,655.9,562.9,653.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#593234",
                  d:
                    "M1308.8,232.2c-1.9-1.1-4.3-1.4-5.8-3.2c-0.5-3.7-4.1-4.2-6.3-5.4c-5.6-2.9-11-6-16.5-9\n                            c-0.7-0.4-1.6-0.3-2.4-0.5c-3.3-1.4-6-3.7-8.8-5.9c-0.4-0.9,0.1-1.4,0.9-1.7c2.7-0.3,4.8,1.3,6.9,2.5\n                            c15.2,8.4,30.2,17.4,45.7,25.3c1.8,0.9,3.4,2.1,3.7,4.3c-1.2,1.7-2.7,1.5-4.2,0.4C1317.1,237.7,1314,232.8,1308.8,232.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#493533",
                  d:
                    "M1230.7,187.1c-3.2,1.4-4.1-2.4-6.5-3c-1.7-0.4-3.3-1.5-4.9-2.2c-4.6-0.9-8.4-3.4-12-6.1\n                            c-1.6-1.7-3.7-2.7-5.8-3.7c-1.3-0.6-2.8-1.2-2.6-3.1c2.6-1.8,5.2-1.4,7.9-0.3c6.2,2.5,10.9,7.6,17.5,9.2c1.4,0.4,1.9,2.3,3.2,3\n                            c2.7,1.5,7.8,0.8,6.3,6.4C1232.7,187.7,1231.7,187.5,1230.7,187.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D393B",
                  d:
                    "M1230.7,187.1c1.1,0,2.2-0.1,3.3-0.1c1.3-1.1,2.5-0.4,3.7,0.2c6.2,3.3,12.5,6.5,18.7,9.8\n                            c3,2.3,6.6,3.6,9.8,5.5c1.7,1,4.1,1.6,3.8,4.4c-0.4,0.4-0.8,0.9-1.2,1.3C1256.1,201.2,1243.4,194.2,1230.7,187.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8D8C86",
                  d:
                    "M1469,274c3.1,0,7.6,0.3,8.2-2.6c0.6-2.9-3.1-5.8-5.7-7.9c-2.3-1.9-4.9-3.3-5.6-6.5\n                            c2.3,0.3,4,1.9,6.3,2.4c1.6,0.4,3.7,1.7,2.9,4.4c-0.3,1.1,0.2,2.4,1.2,2.3c4.1-0.6,3.7,2.8,4.7,4.9c-1.3,2.2,3.3,6.1-2.1,6.9\n                            c-4.7-0.7-9.6-0.8-14-2.9C1466.1,273.7,1467.5,273.8,1469,274z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#565452",
                  d:
                    "M1484,270c-0.7-0.3-1.3-0.6-2-1c2.5-3.2,6.1-4.3,9.9-5.1c2,0.7,4.1-0.8,6.1,0.3c0.7,0.4,1.3,1,0.9,1.9\n                            C1494.1,267.7,1489.2,269.5,1484,270z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403C39",
                  d:
                    "M1505,259.9c0.3,0.1,0.7,0.1,1,0.2c-2.4,4.3-5.9,5.2-10.3,3.6c-0.4-0.2-0.7-0.5-0.9-1\n                            c-0.7-1.1-2.7-0.6-3.2-2.8C1496.1,259.9,1500.5,259.9,1505,259.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403C39",
                  d:
                    "M1498,265c-2-0.3-4.3,0.8-6.1-1c0.9-0.4,1.9-0.8,2.8-1.2c0,0,0.3,0.3,0.3,0.3\n                            C1495.7,264.3,1498.3,262.4,1498,265z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635E5A",
                  d:
                    "M1197.8,130.1c-0.6,1.2-1.8,0.8-2.8,1c-2.9,1.2-5.1,0-7-2.1c0.5-0.9,1.3-1,2.2-1.1\n                            C1192.7,128.6,1195.3,129.4,1197.8,130.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#47423E",
                  d:
                    "M1807.9,635.9c2.4,7-1.5,12.7-3.7,18.8c-0.7,2-2.9,3.8-1.2,6.3c-0.7,0-1.3,0.1-2,0.1\n                            c-2.2-1.2-1.1-3-0.5-4.3C1803.6,650,1805.3,642.8,1807.9,635.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4444",
                  d:
                    "M1098,310.1c7.5,0,15.1-0.5,22.5,0.8C1113,310.6,1105.5,312,1098,310.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#604648",
                  d:
                    "M1078.1,311.2c4.2,0,8.5,0,12.7,0c0,0.2,0,0.3,0,0.5c-4.2,0-8.5,0-12.7,0\n                            C1078.1,311.5,1078.1,311.4,1078.1,311.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1071,311c-4.3,0-8.7,0-13,0C1062.3,309.4,1066.7,309.4,1071,311z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1036,307.1c3.8-0.1,7.6-0.2,11.3,0.8c-3.8,0-7.6,0.1-11.3,0.1C1036,307.7,1036,307.4,1036,307.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4444",
                  d:
                    "M1128.9,312.7c-2.9,0-5.8,0-8.7,0C1123.1,311.8,1126,311.9,1128.9,312.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1041,309.7c2.9-0.6,5.5-1.1,9.1,0C1046.3,309.7,1043.7,309.7,1041,309.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1053.8,308.9c3.6-1.7,7.1-0.7,10.7,0C1061,308.9,1057.4,308.9,1053.8,308.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4444",
                  d:
                    "M1111.5,313.1c1.5-1.7,2.5-0.8,4-1.2C1114.1,313.6,1113,312.6,1111.5,313.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#25191B",
                  d:
                    "M1175.8,308.1l-0.4,0.1l-0.4-0.1c-3.1-1.5-6.7,0.5-9.8-1.4c-2.2-1.4-4.7-1.2-7.2-1.2\n                            c-8.7-0.3-17.5,0.8-26.2-0.6c-0.6-0.3-0.9-0.7-1.1-1.3c0.2-1,1.1-1.3,1.9-1.6c0.8-0.2,1.7-0.3,2.6-0.3c1.6,0,3.3,0,4.9-0.1\n                            c6.7-0.4,13.5,0.9,20.1-0.8c1.7-1.9,3.8-2.3,6.2-1.5c2,0.7,4.1,1.1,6.2,1.1c2.8-0.5,5.6-0.4,8.4-0.2c10.3,1,20.7,0,31-0.6\n                            c0.8,0,1.6,0.1,2.3,0.2c7.7,0.9,15.4,1.6,23.1,2.4c-4.5-1.6-9.3-0.3-13.8-1.7c-0.6-0.2-1.3-0.1-2-0.3c-1.6-0.4-3.8-0.7-3.6-2.7\n                            c0.2-2.1,2.4-1.8,4-1.9c1.8-0.1,3.6,0,5.5-0.1c0.8-0.1,1.6,0,2.4,0c3,0,5.9,0.4,8.7,1.3c1.8,0.9,4,0.6,5.8,1.4\n                            c1.2,2.3,3.9,1,5.6,2.3c1.1,1,1.1,2.5,2,3.6c8.4,0.7,16.9,0.3,25.3,1.3c4,0,8,0,12,0c1.2,3-1.2,2.4-2.6,2.4\n                            c-5.2-0.1-10.4,1.4-15.6,1.1c-0.7,0,0.1-0.3-0.5,0c-0.7,0.4,0.4,0.6,0.4,1c0,0.3,0,0.6-0.1,1c-2.6,0.1-5.2,0.1-7.7,0.2\n                            c-2.8,0.7-5.9-0.1-8.5,1.7c-0.8,0-1.5-0.2-2.3-0.4c-4.3-0.1-8.6,0.5-11.8-0.9c1.6,0,2.2,1.1,0.5,3.1c-1.5,1.8-3.7,2.1-5.8,2.6\n                            c-6.6,1.8-13.5,1.8-20.1,3.1c-3.4,0.7-5.5,2-4.2,6c0.7,2.3,0.6,4.9,0.9,7.4c0.5,4.1,1.9,7.9,4.1,11.3c-6.1,0-9.6-3.4-10.3-9.7\n                            c-0.1-0.8-0.5-1.5-0.8-2.3c-1.2-5.3,0.2-10.7-0.8-16c-0.2-1.4-0.9-2.5-2.2-3.1c-4.9-1.1-9.7-3-14.9-1.9c-1.7,0.3-2.8,0.1-1-1.7\n                            c-1.3-0.8-2.5-1.6-4.2-1.1l-0.5,0l-0.4-0.2C1179.4,307.9,1177.5,309,1175.8,308.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373332",
                  d:
                    "M1241,342c-7.5,2.1-15.1,3.7-23,3c-5.6-3.7-6-9.9-6.9-15.6c-1.4-9-1-8.8,8.3-10c7.5-1,15.2-1.2,22.1-4.7\n                            c1.7-0.8,3.8-0.7,4.4,1c2,5.5,6.6,9.1,9.6,13.8c2,3.3,1.6,5.5-1.5,7.5v0c-1.7,1.6-3.8,2.5-6,3l0,0\n                            C1245.5,340.2,1241.9,336.2,1241,342z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2A29",
                  d:
                    "M1254,337c2.4-2.8,2-5.3-0.4-8.1c-2.5-2.9-4.4-6.2-7.6-8.3c-0.4-0.2-0.8-0.8-0.7-1.1\n                            c1.5-7.2-3.1-3.8-5.7-3.2c-4.8,1.2-9.3,3.3-14.6,2.9c-2.9-0.2-5.9,1.3-9.2,1.3c-2.7,0-5.2,1.6-4.1,6.1\n                            c1.5,6.4,3.1,12.7,6.5,18.4c-0.7,0-1.3,0-2,0c-6.5-3-4.1-9.7-6-14.6c-0.2-0.4-0.1-1,0-1.5c0.7-2.7-2.8-5.9,0-8\n                            c3-2.3,7-2.9,10.9-2.9c5.6,0.1,10.8-1.6,16.1-2.6c1.7-0.3,3.7-0.6,4.2-3.2c-1.8-0.1-3.5-0.3-5.2-0.4c0-0.3,0-0.5,0.1-0.8\n                            c5.6,0,11.2,0,16.8,0c-0.8,1,0,2.2-0.2,3.3c-0.1,1.8-1.3,1.8-2.6,1.7c2.3,2.2,3.2,5.3,5.5,7.4c2,1.8,4.5,3.3,4.3,6.6\n                            C1258.1,332.4,1258.8,337.1,1254,337z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#433433",
                  d:
                    "M1260,330c-2.8-4.4-7.4-7.4-9.9-12.2c-0.6-1.2-2.9-1.7-1.5-3.5c1.6-2,1.7,1.6,2.9,1\n                            c0.3-0.2,0.4-0.8,0.6-1.3c1.3-0.6,1.9,0.7,2.7,1.2c1,0.8,2.3,1.1,3.3,1.8c2.8,1.8,3.9,4.8,5.8,7.2c0,1.8,0,3.7,0,5.5\n                            c-1,1.1-1.9,2.1-2.9,3.2C1261,331.8,1261.2,330.7,1260,330z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2A29",
                  d:
                    "M1241,342c-2.1-1.6-1-3.8,0.4-4c2.2-0.4,5.4-1.7,6.6,2C1245.9,341.4,1243.5,341.8,1241,342z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4444",
                  d:
                    "M1204.2,317c1.9,5.2,0.4,10.7,0.8,16c-0.3,0-0.6,0-0.9,0.1C1204.1,327.7,1204.2,322.3,1204.2,317z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2A29",
                  d:
                    "M1248,340c1.7-1.5,3.4-3.2,6-3C1253.5,340.9,1251.5,341.9,1248,340z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1818",
                  d:
                    "M1958.1,611c-0.6-6.7,5.3-9.7,8.1-14.5c1-1.7,2.6-3,3.9-4.4c1.7-1.1,3.7-1.7,4.8,0.1\n                            c1,1.6-0.8,3-1.8,4.2c-0.9,1.1-2.7,1.5-2.2,3.4c-0.1,0.9-0.5,1.8-1,2.5c-0.6,0.9-1.3,1.8-2.1,2.7c-0.9,1.3-1.2,2.4,0.9,2.8\n                            c1.8,0.3,3.6,0.7,5.3,1.3c0.7,0.4,1.4,0.7,1.2,1.8c-4.5,2.9-9.3,1.6-14.1,1.2C1960,611.7,1959,611.3,1958.1,611z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332C2C",
                  d:
                    "M1961,612c4.8-0.1,9.4-0.6,14-2c2.3-1.9,4.5-1.1,7-0.2c3.9,1.5,8,1.3,12,2.2c0.3,0,0.7,0,1,0\n                            c-0.3,2.8-3,0.6-4,2c-9.1-0.3-18.3,0.8-27.3-1C1962.7,612.8,1961.7,612.9,1961,612z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D1D1B",
                  d:
                    "M1937,615c6,0,12,0,18,0c2.2,1.3,5,1.2,7,3C1953.6,617.6,1944.9,619.8,1937,615z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342F2E",
                  d:
                    "M1994,612c-6.5,0.5-12.6-2.1-19-2c-0.7,0-1.3,0-2,0c-0.3-0.6-0.2-1.1,0.4-1.5c3.3-1.1,6.5-1.6,9.5,0.6\n                            c1.5,1.5,3.4,0.7,5.1,0.9C1989.5,612.1,1992.5,609.9,1994,612z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D1D1B",
                  d:
                    "M1983,618c-5.7,1.6-11.3,1.6-17,0C1971.7,618,1977.3,618,1983,618z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342F2E",
                  d:
                    "M1991,614c0.9-1.6,3.1-0.4,4-2c1.4,0.2,2,1,0.4,1.6C1994.1,614.1,1992.5,613.9,1991,614z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D1D1B",
                  d:
                    "M1997,617c-2.1,1.8-4.7,0.6-7,0.9C1992.1,616.2,1994.6,617.3,1997,617z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B9BBB7",
                  d:
                    "M1444,275c-4.6,1.6-9.4-0.2-14,0.5c0,0.6-0.3,0.8-0.8,0.8c-2.7-2.4-6.6-3.2-8.4-6.6\n                            c0.1-0.5,0.4-0.9,0.8-1.2c2.6-1.2,5.6-0.4,8.2-1.3c2.9-0.6,5.8-1.3,8.8-1.8c0.7-0.2,1.5-0.2,2.2-0.2c0.5,0.1,0.9,0.2,1.4,0.4\n                            c0.7,0.5,1.2,1.1,1.4,1.9c6.3-2.5,6,2.5,7,6.1c-0.2,0.5-0.5,0.8-1,0.9C1447.7,274.8,1445.7,273.9,1444,275z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F2F2B",
                  d:
                    "M1429.4,275.9c0.2-0.1,0.4-0.2,0.6-0.4c1.6,1.9,4.8,0.7,6.2,3.3c-1.8,0.1-3.6,0.2-5.3,0.4\n                            c-4.3-0.2-8.7,0-12.9-1.1c-2.3-1.4-4.9,0.1-7.2-1l-0.4,0.1l-0.4-0.2c-1.6-1.2-3.6,0.1-5.3-0.8l-0.4,0.1l-0.3-0.2\n                            c0.7-3,3.3-2.5,5.1-2.2c5.7,1.1,11.4,0.7,17.2,0.7C1427.5,274.4,1428.4,275.3,1429.4,275.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989891",
                  d:
                    "M1469,274c-1.1,1.4-2.6,0.8-4,1c-2,0-4,0-6,0c-0.3-0.6-0.2-1,0.3-1.5c0.7-0.5,1.5-0.7,2.4-0.8\n                            C1464.2,272.8,1466.8,272,1469,274L1469,274z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A6A7A0",
                  d:
                    "M1459,274c0,0.3,0,0.6,0,1c-3,0-6,0-9,0c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3v0\n                            C1453,272,1456,271.9,1459,274z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B2B4AD",
                  d:
                    "M1450,274c0,0.3,0,0.7,0,1c-2,0-4,0-6,0C1445.7,273.2,1448,274.3,1450,274z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#947D7B",
                  d:
                    "M1460.8,280.9c-1.9,0-3.8,0-5.7,0C1457,279.4,1458.9,279.5,1460.8,280.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2927",
                  d:
                    "M1498,265c-1-0.6-2-1.3-2.9-1.9c4.1,0.9,7.8-0.1,10.9-2.9c2.8,0.6,4.8,2.3,5.9,4.9\n                            c-0.6,0.3-1.2,0.6-1.8,1c-1.9,1.2-3.7,2.6-6,2.9c-2.4,0-4.8,0-7.2,0c-0.5-1.8,1.6-1.8,2.1-3C1498.7,265.7,1498.3,265.3,1498,265\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#746F6E",
                  d:
                    "M1499,266c1.2,2.3-1.9,1.6-2.1,3c-2.4-0.2-4.5,0.6-6.5,1.8c-2.5,1.6-4.6,1.3-6.5-0.8\n                            C1488.7,267.6,1493.6,265.7,1499,266z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2927",
                  d:
                    "M1513.8,273.9c-1.4,0-2.8,0.3-3.9-0.8c1.7-0.1,3.6,0,2.4-2.8c-0.5-1.2,0.3-2.2,0.7-3.3\n                            C1516.9,268.9,1513.7,271.6,1513.8,273.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#626260",
                  d:
                    "M1504.1,268.9c2.2-0.7,3.2-3.5,6-2.9C1508.9,268.6,1506.7,269.2,1504.1,268.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FCFAF9",
                  d:
                    "M448,222.9c0.6,0.1,1.2,0.2,1.8,0.3c1.3,0,2.2,0.9,2.9,1.8c10.8,11.9,21.7,23.5,35.5,32\n                            c10.2,5.7,21.5,7.8,32.8,9.4c15.7,2.3,31.6,4,47.4,5.3c0.9-0.1,1.7,0,2.6,0.1c0.9,0,1.8,0.2,2.6,0.4c13.3,1.3,26.7,2.2,40,3.4\n                            c5.9,0.5,11.8,1.3,17.8,1.3c3.6,1.2,7.4,0.6,11.1,0.8c1.1,0,2.3,0.1,3.4,0.4c2.7,0.9,5.4,0.6,8.1,0.6c2-0.1,3.9,0,5.9,0.4\n                            c2.8,0.9,5.6,0.6,8.5,0.5c7.3,1.1,14.8,0.7,22.1,1.9c1.6,0.3,3.3,0.2,4.6,1.5c-2.8,2.9-6.2,1.1-9.3,1.2\n                            c-12.2-0.4-24.4-0.9-36.6-1.3c-7.2-1.3-14.6-0.9-21.9-1.1c-4.1-1-8.2-0.8-12.4-0.6c-2.3-0.1-4.6-0.2-6.8-0.3\n                            c-2.3-1.1-4.7-0.9-7.2-0.7c-2.2-0.1-4.5-0.2-6.7-0.3c-5.7-1.2-11.5-1.3-17.2-1.7c-1.3-0.1-2.5-0.2-3.8-0.3\n                            c-2-0.9-4.1-0.8-6.2-0.7c-1.6-0.1-3.2-0.2-4.7-0.4c-1.7-0.8-3.5-0.9-5.3-0.6c-1.9-0.1-3.9-0.3-5.8-0.4c-1.7-0.9-3.4-0.8-5.2-0.7\n                            c-3.3-0.3-6.7-0.7-10-1c-3-0.3-6-0.7-9-1c-0.9-0.1-1.8-0.2-2.7-0.4c-3.3-1.2-6.8-1.4-10.3-1.7c-20.6-3-37.9-12.5-53.1-26.4\n                            c-4.8-4.4-9.7-8.5-14.6-12.8c-1.1-1.3-2.2-2.5-3.2-3.8C444.6,226.3,447,225.3,448,222.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E1DCDD",
                  d:
                    "M757,288c0,0.3,0,0.6,0,0.9c-0.9,0.9-2,0.6-3,0.3c-1.8-0.1-3.7-0.2-5.5-0.3c-1.8-0.8-3.7-0.1-5.5-0.7\n                            c-0.4-0.1-0.7-0.2-1.1-0.4c-2.4-0.8-4.9-0.2-7.3-0.4c-2.2-0.1-4.5,0.3-6.7-0.3c-0.3-0.1-0.7-0.2-1-0.4c-0.3-0.6-0.1-1.1,0.4-1.4\n                            c1.8-1,3.8-0.7,5.7-0.8c2.8,0,5.5-0.1,8.3,0.1c0.5,0,1.1,0.1,1.6,0.3c2.6,0.9,5.3,0.5,8,0.6c1.9,0.1,3.9-0.2,5.7,0.9\n                            C757.2,286.9,757.3,287.4,757,288z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4B3C3A",
                  d:
                    "M782,291.1c7.2,0.3,14.4,0.4,21.5,1.8c-7.2-0.4-14.3,2.5-21.5,0.1C782,292.4,782,291.8,782,291.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E5D8DE",
                  d:
                    "M685.8,284.1c3-0.9,6.3,0.8,9.2-1c2.3-2.3,5.1-1.5,7.8-1.2c2.1,0.3,4.2,0.5,6.3,0.6\n                            c1.2,0.2,2.5,0.4,3.2,1.7c-2.7,2.3-5.8,1-8.8,0.8c-5.7-0.1-11.4-0.2-17.1-0.3C686.1,284.6,686,284.4,685.8,284.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DBD0D5",
                  d:
                    "M703.4,285.1c2.8-0.5,5.9,0.8,8.6-0.9c0.3-0.4,0.8-0.6,1.3-0.6c1.9,0.2,3.9,0.2,5.8,0.2\n                            c1.8,0.1,3.6-0.1,5.3,0.6c0.5,0.3,0.8,0.7,0.9,1.2c-0.2,0.6-0.5,0.9-1.1,0.9c-1.9-0.1-3.8,0.3-5.6-0.4\n                            C713.5,286.1,708.4,286.4,703.4,285.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M751,292c0-0.3,0-0.7,0-1c4.9,0,9.9,0,14.8,0c0,0.3,0,0.7,0,1C760.9,292,755.9,292,751,292z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M749,291c-4.7-0.5-9.5,1.1-14-1C739.7,290.5,744.5,288.9,749,291z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4B3C3A",
                  d: "M780,293c-4,0-8,0-12,0C772,291.4,776,291.4,780,293z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M735,290c-3.3-0.5-6.8,1-10-1C728.3,289.5,731.8,288,735,290z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M717,289c-3.3,0-6.7,0-10,0C710.3,287.5,713.7,287.4,717,289z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M693,288c2.5-2,5.2-0.4,7.9,0C698.3,288,695.6,288,693,288L693,288z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M754,289.2c1-0.1,2-0.2,3-0.3c1.5,0.1,3.1,0.2,4.6,0.3c0.4,0,0.6,0.3,0.6,0.7\n                            C759.5,289.8,756.6,290.8,754,289.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D6CCD0",
                  d:
                    "M718.5,286.1c2.2,0,4.3-0.1,6.5-0.1c0.7-0.6,1.3-0.5,2,0c0,0.3,0,0.6,0,0.8\n                            C724.1,287,721.3,287,718.5,286.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M728,287.2c2.1,0,4.3,0,6.4,0c0.4,0.1,0.7,0.3,0.9,0.7C732.9,287.8,730.3,288.7,728,287.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DBD5D6",
                  d:
                    "M735.3,287.8c-0.3-0.2-0.6-0.5-0.9-0.7c2.5,0.1,5.1-0.9,7.5,0.7C739.8,287.8,737.5,287.8,735.3,287.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E0DCDC",
                  d:
                    "M762.3,289.9c-0.2-0.2-0.4-0.5-0.6-0.7c2.2-0.2,4.4-0.9,6.4,0.6C766.1,289.8,764.2,289.8,762.3,289.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E2B2A",
                  d:
                    "M770.1,290.3c1.9-0.1,3.8-0.4,5.5,0.6C773.7,290.8,771.8,291.6,770.1,290.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C3333",
                  d:
                    "M743,288.2c1.9-0.1,3.7-0.2,5.5,0.7C746.7,288.8,744.7,289.6,743,288.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#251414",
                  d:
                    "M2015,657c1.9-2.5,3.5-5.7,7.5-2.6c0.1,0.1,3.5-2,5.6-2.9c3.1-1.3,5.5-2.2,9-1c2.7,0.9,6.6-0.5,8.5-2.9\n                            c5.2-6.4,12.7-6.9,19.1-5.8c4.3,0.7,9.2-0.2,13.3,2.2c-0.4,0.4-0.8,0.7-1.1,1.1c-0.7,1.8-2.3,2.4-4,2.9c-1.7,0.7-3.5,0.3-5.2,1\n                            c-4.3-0.2-8.2,2.5-12.6,1.1c-13,2.3-26,4.6-39,7C2015.7,657.3,2015.3,657.3,2015,657z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B211F",
                  d:
                    "M2015,657c0.3,0,0.7,0,1,0c0.7,0.7,1.3,1.3,2,2c-5.3,1-10.7,2-16,3c-1.5,1.2-3.5-0.2-5.1,1l-0.5,0\n                            l-0.5,0c-2.3,0.7-4.6,2.1-7,0C1997.7,661.2,2005.7,656.4,2015,657z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544542",
                  d:
                    "M2055.1,650.1c4.3-0.7,8.7-1.3,13-2c0.3,0.3,0.9,0.4,1,1C2064.4,649.8,2059.9,651.9,2055.1,650.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A7F7D",
                  d:
                    "M2073.1,647.2c1.6-0.1,1.9-2.5,3.7-2.1c0.6,0.6,1.3,1.1,1.9,1.7c-1.4,1.1-3,1.3-4.7,1.3\n                            C2073,648.5,2072.9,648,2073.1,647.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726262",
                  d:
                    "M2073.1,647.2c0.3,0.3,0.6,0.6,0.9,0.9c-1.4,1.4-3.3,0.7-5,1c-0.3-0.3-0.6-0.7-1-1\n                            C2069.8,647.8,2071.4,647.5,2073.1,647.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#58504D",
                  d:
                    "M1997,666c0,0.3,0,0.6,0,0.9c-11.7,1-23.1,4.2-34.6,6.4c-1.8,0.4-3.6,0.6-5.4,0.6\n                            c-1.5-1.7-1.3-2.2,2.1-4.7c0.5-0.2,1.1-0.3,1.6-0.3c9.9-3,20.3-3.5,30.4-5.4c0.9-0.2,2-0.2,2.8,0.5\n                            C1994.1,666.1,1995.6,666,1997,666z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B49",
                  d:
                    "M1994,664c-11.5,1.2-22.8,3.2-34,6c-0.6-1.1,0.5-1.4,1-2c2.4-1.9,5.7,0.1,8-2l0,0c2.2-1.3,4.8,0.3,7-1\n                            c4.4-0.4,8.7-0.7,13-2c2.3,0,4.7,0,7,0C1995.6,663.8,1994.8,664,1994,664z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#58504D",
                  d:
                    "M1996.9,662.9c1.5-1.5,3.3-0.8,5.1-1C2000.6,663.7,1998.7,662.8,1996.9,662.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8F8481",
                  d:
                    "M1527,269.9c0.3-1-3.4-2.1,0.1-3c3.8,1.5,8.5,1.1,11.5,5.6C1534.1,273.1,1530.2,273.3,1527,269.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403C39",
                  d:
                    "M1516.9,266.9c-3.9,0.3-2.7-4.2-6.7-5.4c3.4-0.7,5.2-0.8,6.8,0.4c-1.4,1.4-0.4,1.9,0.9,2\n                            c1.4,0.2,2.9-0.3,4.1,0.9c-1.6,0.5-3.7-0.7-5,1.1c0.2,0.2,0.3,0.4,0.2,0.6C1517.1,266.8,1517,266.9,1516.9,266.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524547",
                  d:
                    "M806.9,293.7c3.3-1.8,6.7-0.3,10-0.2c15,0.7,29.9,2.6,45,2.2c-0.2,3.3-2.8,2.3-4.5,2.2\n                            c-13.8-0.6-27.6-1.3-41.4-2c-1,0-2,0-3,0C811.5,293.9,808.3,296.2,806.9,293.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544748",
                  d:
                    "M892,301.1c-3.6,0-7.3,0-10.9-0.1c-3.4-2-7.1-0.5-10.6-1c-1.9-0.3-4,0.7-5.7-1.2\n                            c1.8-1.8,4.6,0.3,6.3-1.7c0.8-1.1,2-1.3,3.3-1.4c8.2,0.5,16.3,1.9,24.5,2c1.5,0,3,0.3,3.6,2.1\n                            C898.9,300.2,895.4,300.6,892,301.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544748",
                  d:
                    "M875,294.9c-3.7,0-7.4,0-11.1-0.1c0-0.3-0.1-0.6-0.1-0.9c0,0,0.1-0.1,0.1-0.1c2.4-0.7,4.7-1.6,7.2-1.2\n                            C872.8,292.9,874.7,292.7,875,294.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#734344",
                  d:
                    "M792.8,100.9c0.7,0.3,1.4,0.7,2.1,1c-1.5,0.1-2.9,0.2-4.4,0.3c-1.8,0.7-3.8,0-5.5,0.7\n                            c-1.2,0.1-2.3,0.3-3.5,0.4c-7.3-0.1-14.6-0.2-21.9-0.4c3.2-1.3,6.5-1.4,9.9-1c4.1-1.1,8.4,0.5,12.5-0.9l-0.1-0.1\n                            C785.5,100.4,789.2,100.3,792.8,100.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E4B4B",
                  d:
                    "M785,102.8c1.7-1.5,3.7-0.7,5.5-0.7C788.8,103,786.9,103,785,102.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463738",
                  d:
                    "M982,304.1c-0.8,1.1-1.9,0.8-3,0.9c-16,0.1-32-1.9-48-3.2c3.4,0,6.9,0,10.3,0c3-2,6.5-0.8,9.7-1.2\n                            c3,0.1,6-0.2,9,0.4c6.1,1.5,12.4-0.3,18.5,1.6C979.8,303,981.1,302.9,982,304.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544748",
                  d:
                    "M912,303c-3.8-2.2-8-0.2-12.1-1.3c1.4-1.5,4,0.2,5-1.8c5-2.4,10.1-1.3,15.2-0.8c0.5,0.2,0.9,0.6,1.1,1.2\n                            c-0.3,1.4-1.3,1.1-2.2,1.1c2.6,0.2,5.5-1.9,7.9,0.6c0,0.3,0,0.7,0,1C922,303,917,303,912,303z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E6E0E2",
                  d:
                    "M921.2,300.9c-0.2-0.2-0.4-0.4-0.6-0.7c3.2-3,7.3-0.8,10.8-1.9c0.6-0.1,1.1-0.1,1.7,0\n                            c3.6,0.7,7.3,0.3,11,0.4c2.6,0.1,5.2-0.1,7.7,0.4c3.1,1.1,6.3,0.5,9.5,0.6c2.4,0.2,5-0.6,6.9,1.6c-2.7,2.5-5.8,1.1-8.7,0.9\n                            c-2.8,0.5-5.6,0.1-8.5-0.2c-3.4-1-7,0.2-10.4-0.7c-4.2,0-8.4,0-12.6,0C925.7,301.5,923.5,302,921.2,300.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463738",
                  d:
                    "M921.2,300.9c2.2,0.1,4.5,0.2,6.7,0.2c-0.3,0.3-0.7,0.6-1,0.9c-3,0-5.9,0-8.9,0c0-0.2,0-0.4,0-0.6\n                            C919.1,301.2,920.2,301,921.2,300.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E0D7DA",
                  d:
                    "M940.6,301.1c3.5,0.1,7.1-1.1,10.4,0.7c-3.2,0-6.4-0.1-9.7-0.1C941.1,301.6,940.8,301.3,940.6,301.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#443F3F",
                  d:
                    "M2016,419c-2.7,3.9,0.1,7.4,1.1,10.9c-4.7,3-8.8,7.5-15.2,6.1c-0.2,2,1.5,1.6,2.2,2.8\n                            c-5-2.5-9.4,0.7-14.1,1.1c0.3-1,0.6-2,1-3c0.5-0.9,1.3-1.4,2.1-1.8c6-1.8,10.6-5.1,12.8-11.1c0.8-1.5-1.6-1.8-1.1-3.2\n                            c1.8-1.4,1.2-3.3,1.1-5.1c0.4-0.3,0.8-0.5,1.2-0.6c1.7,0.1,3.2,0.9,4.8,1.1C2013.3,417.2,2015.4,417.1,2016,419z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373131",
                  d:
                    "M1993,436c-0.5,0.8-1.2,0.9-2,1c-6.8,0.1-13.5-0.7-19.9-3c1.6-1.5,3.2-0.5,4.7-0.2\n                            c-1-1.6-4.9,0.7-4.6-3.1c1.4-1,2.9-1,4.5-1c3.5,0.5,6.9,0.6,10.3-0.5c1.7-0.3,3.2,0.1,4.6,1.1c1.2,0.8,2.7,1.7,2.4,3.4\n                            c-0.3,1.5-2,1.3-4.4,2C1991,435.1,1992.1,434.9,1993,436z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221F1D",
                  d:
                    "M1971,431c1.7,0.8,3.3,1.6,6,3c-2.7,0-4.3,0-6,0c-4-1-8.1-2-12.1-3c-0.8-0.9-0.8-1.8-0.3-2.8\n                            c0.6-0.9,1.5-1.4,2.5-1.6C1964.4,428,1968.3,428.3,1971,431z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C8BFBF",
                  d:
                    "M1958.9,428.1c0,1,0,1.9,0.1,2.9c-1.3,1-2.6,2.1-3.9,3.1c-0.3-0.1-0.7-0.1-1-0.2\n                            c-0.7-0.7-0.8-1.6-0.5-2.6c0.3-0.6,0.8-1,1.4-1.3c0.9-0.5,1.6-1.2,2.4-1.9c0.3-0.3,0.7-0.4,1.2-0.4\n                            C1958.6,427.8,1958.7,428,1958.9,428.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373131",
                  d:
                    "M1907,684c2.5-2.6,7,1,9-3c0.8-1.1,2-1.4,3.2-1.8c0.7-0.2,1.4-0.3,2.2-0.4c2-0.1,4,0,5.9-0.7\n                            c3.2-0.7,6.6,0,9.8-0.7c0.5-0.2,0.9-0.3,1.4-0.4c2.4-0.4,4.8,0,7.2-0.8c1.1-0.3,2.3-0.7,3.4-0.9c0.7-0.1,1.4,0.1,2,0.6\n                            c0.3,0.3,0.7,0.7,1,1c-3.7,2.7-8.2,2.9-12.3,2.8c-6-0.3-11.1,3.9-17.1,2.3c-1,4-4.2,1.5-6.2,1.8\n                            C1913.3,684.3,1910.1,684,1907,684z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5551",
                  d:
                    "M138,645.9c-6.8,0.2-12.9-2.3-19-4.8c-6.8-4.5-13.4-9.2-18.9-15.1c2,0.7,4,1.3,6,2\n                            c6,3,12.5,5.2,16.8,10.8c2,2.7,6.3,2.1,8.3,5C133.5,644.3,135.9,644.6,138,645.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4743",
                  d:
                    "M131.1,643.8c-5-1.8-9.9-3-13-8.4c-0.9-1.6-5.1-2.6-7.7-4.3c-1.5-1-3.1-1.8-4.4-3.1c1,0,2,0,3,0\n                            c3.7,1.3,7.3,2.7,11,4c3.5,3.6,6.7,7.6,11.7,9.4C135.6,642.9,130.6,642.8,131.1,643.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#43403E",
                  d:
                    "M108,597c2.2,0.5,3.3,2,4.4,3.9c2,3.3,1.3,4.5-2.4,4.1c-0.7-0.3-1.3-0.7-2-1c-1-1-2-2-3-3\n                            C106.6,600.1,107.9,599,108,597z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5551",
                  d:
                    "M100,626c-0.7,0-1.3,0-2,0c-1.2-0.8-2.4-1.6-3-3C97.1,623.2,98.5,624.6,100,626z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#756B67",
                  d:
                    "M1786.9,365.9c0.4-0.6,0.7-1.3,1.1-1.9l0,0c2.6-1,5.4-1.2,8-2c3.4,0.4,6.7-0.4,9.8-1.3\n                            c7.7-2.2,15.4-1.6,23.2-1.5c-0.2,1.8-1.3,1.3-2.4,1.1c2.1,0.4,4.3-0.8,6.4,0.3c2.7,0.4,5.4,1,8.2,1c2.9-0.2,5.6,1,8.5,1\n                            c4.5,0.4,8.9,1.3,13.4,1.7c0.5,0,1,0,1.5,0.2c1.9,0.9,4,0.2,5.9,0.9c1.4,1.1,4.5,1,3,4.2c-2.4,1.1-5,0.5-7.5,0.8\n                            c-10.2-0.6-20.4-2.5-30.6-3.1c-2.7-0.4-5.4-1.2-8.2-1c-3.7,0.3-6-2.1-8.4-4.3c-1.2-0.8-2.3-0.1-3.3,0.4c-4.8,1.4-10,1-14.8,2.6\n                            C1796.1,364.7,1791.7,367.5,1786.9,365.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A18D86",
                  d:
                    "M1833.1,361.1c-2.3,0-4.6,0-8.3,0c2.2-1,3.2-1.4,4.2-1.9c3.9,1,7.8,0.8,11.8,0.9c0.4,0.6,0.3,1-0.3,1.4\n                            C1838,362.3,1835.6,361.4,1833.1,361.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#968583",
                  d:
                    "M1856,361c0,0.6-0.1,1.3-0.1,1.9c-1.9,1.4-3.8,0-5.7,0c-0.8,0-1.5-0.2-2.1-0.7c-0.3-0.5-0.3-0.9-0.1-1.4\n                            c0.7-0.4,1.4-0.4,2.2,0C1852,360.9,1854,361,1856,361z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#613634",
                  d:
                    "M1796,362c-2.5,1.3-5.2,2-8,2C1790.4,362,1793.2,361.9,1796,362z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#735B59",
                  d:
                    "M1848.2,361.1c-0.1,0.3-0.1,0.5-0.1,0.8c-1,1.4-2.4,0.5-3.7,0.6c-1.2-0.5-2.7-0.3-3.5-1.6\n                            c0-0.2,0-0.5,0-0.7c1.4,0,2.8,0,4.2,0C1845.9,360.9,1847.4,360,1848.2,361.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7A4B4B",
                  d:
                    "M1848.2,361.1c-1.1-0.2-2.3,0.1-3.1-1c1.7,0,3.5-0.6,5,0.8C1849.4,361,1848.8,361,1848.2,361.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CAC2BF",
                  d:
                    "M2099.8,636.2c-2.6,3.7-3.9,3.7-6.2,0.2c-0.4-0.6-1.2-0.9-1.8-1.4c-0.3-0.3-0.6-0.6-0.9-0.9\n                            c-0.5-1.8-0.5-3.1,2-2.1c0.7,0.3,1.4,0.6,2.1,1C2097.2,633.3,2099.2,633.6,2099.8,636.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A9A0A0",
                  d:
                    "M2092.9,632.1c-1.4,0-1.9,0.8-2,2.1c-1.3-1.6-4.8-2.7-3.5-4.6c1.6-2.3,3.4,1.7,5.5,1.5\n                            C2092.9,631.4,2092.9,631.8,2092.9,632.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M865,683.9c6.8-1.9,13.7-0.5,20.6-0.8C878.8,684.6,871.9,684.1,865,683.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342F2E",
                  d:
                    "M1967,604c0.7-0.7,1.3-1.3,2-2c7.6,0.3,14.8-1.1,21.9-3.7c1-0.4,2.4,0.5,3.4,0.3c2.3-0.6,4.8,0.7,5.8-4\n                            c1.1-5.6,4.6-10.9,7.6-16c3.4-5.6,11.2-3.9,14.3,2.5c0.7,1.4,0.4,3.3,2.5,4.9c0.2-5.5,3.2-9.5,5.1-14.1c0.6-1.6,0.8-3.7,3.2-3.9\n                            c0.1,0.4,0.2,0.8,0.4,1.3c-1.1,3.2-2.2,6.4-3.3,9.6c-3.5,8.2-7,16.4-10.6,24.6c-0.8,2-1.6,4-3.2,5.6c-2.2,1.7-4,1.5-6.6,0.1\n                            c-5.1-2.7-11.1-2.5-16.7-3.1c-3.9-0.4-7.9-0.1-11.8-0.1c-4.7,1.8-9.3,0.4-13.9-0.6C1966.6,605,1966.6,604.5,1967,604z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#645F5E",
                  d:
                    "M1967,605.1c4.7-0.5,9.3,0.8,14,0.9c4.3,2.4,9.6-0.4,14.5,3.1c-4.7,0-8.6,0-12.6,0\n                            c-3.3,0-6.6-0.1-9.9-0.1c-1.5,0-2.9-0.5-4.4-0.5C1966.2,608.3,1965.9,606.9,1967,605.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#363030",
                  d:
                    "M563.8,673.3c0-3.1,0-6.2,0-9.6c4.6,2.3-1.2,10.5,8.4,9.9c-5.9,2.1-6.3,4.5-3.8,8.2c1,1.5,2,4.1,0.4,6.3\n                            c-0.6-0.4-1.2-0.8-1.8-1.1C566.2,682.4,562.3,678.5,563.8,673.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E3DDDE",
                  d:
                    "M959.4,302.1c2.8-0.5,5.9,0.9,8.6-0.9c1-1.3,2.4-1.3,3.9-1.4c1.4,0,2.8,0,4.2,0.4c3.2,1,6.6,0.4,9.9,0.6\n                            c2.5,0.2,5.2-0.4,7.6,0.7c0.5,0.3,0.8,0.8,0.7,1.4c-3,0.9-6.3-0.9-9.2,1c-1,0.1-2.1,0.2-3.1,0.3\n                            C974.5,302.8,966.9,303.7,959.4,302.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1017,306.2c3.9-0.1,7.7-0.3,11.5,0.8C1024.7,306.7,1020.8,307.9,1017,306.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1001,305.2c2.9,0,5.8-0.4,8.5,0.8C1006.7,305.7,1003.7,306.9,1001,305.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M985,304.2c2.9,0,5.8-0.4,8.6,0.7C990.7,304.7,987.7,305.8,985,304.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#564242",
                  d:
                    "M1005.8,307.5c-2.1,0.4-4,0.9-6-0.1C1002,306.6,1004,307.1,1005.8,307.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9D7E7B",
                  d:
                    "M792.8,100.9c-3.7,0-7.3,0-11,0c0.1-0.2,0.1-0.5,0.2-0.7c1.6-0.1,3.2-0.1,4.8-0.2\n                            c2.1,0.1,4.2,0.2,6.3,0.3C793.1,100.4,792.9,100.6,792.8,100.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A9948F",
                  d:
                    "M1890.9,367.2c1,0,2,0,2.9,0c4.8,2.6,10.3,1,15.3,2.6c-0.2,0.2-0.3,0.4-0.5,0.7\n                            c-2.2,1.3-4.8,0.6-7.1,1.6c-4.6,0.1-9.5,1.3-13-3C1888.6,367.4,1890.1,367.7,1890.9,367.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B1A39B",
                  d:
                    "M1928,373.1c0.6,1.3,1.2,2.7,1.8,4c-2.2,1.1-4.1,0.3-5.9-1.1c-0.1-1.2-1.7-1.4-2-2.6\n                            c1-1.6,2.7-0.3,3.9-1.1C1926.8,372.1,1927.6,372.2,1928,373.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C8AEA8",
                  d:
                    "M1925.9,372.3c-1.2,0.7-3.1,0.7-2.1,2.9c-1.8,1.2-3.4,1.2-4.9-0.4c0.2-0.3,0.3-1.3,0.1-1.2\n                            c-1.1,0.2-1.9-0.1-2.4-1.2c0-0.5,0.1-1,0.4-1.4C1919.7,373.1,1923,371.3,1925.9,372.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A9948F",
                  d:
                    "M1917,371c0,0.3,0,0.7,0,1c-3.1,1.3-6,1.2-8.1-1.8c0.1-0.1,0.2-0.3,0.3-0.4\n                            C1911.8,369.7,1914.6,369.5,1917,371z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4B3C3A",
                  d:
                    "M805.3,293.9c0.3-0.1,0.5-0.1,0.8,0.1c-1.9,1.7-3.9,0.9-6,0.2C801.8,294.1,803.5,294,805.3,293.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A7E7A",
                  d:
                    "M1866,369.1c2.7,0,5.3,0,8-0.1c2.3-2.1,5.7-0.9,8-2.9c1.4,0,2.9-0.5,4,0.9c0.3,1.3,1.8,0.1,2.2,1.1\n                            c-0.4,1.5-0.8,2.9-2.3,3.8c-2.4,0.7-4.8,0.5-7.3,0.1c-2.6-0.9-5.3-0.4-7.9-0.6C1869,371.2,1866.6,371.8,1866,369.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8F736F",
                  d:
                    "M1882,366.1c-1.5,4.2-5.1,2.6-8,2.9c-1.3-1-2.7-2-4-3.1c-0.6-0.5-1.4-0.7-1.1-1.7\n                            C1873.2,364.8,1877.6,365.4,1882,366.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D5855",
                  d:
                    "M1849.9,362.1c2,0.3,4,0.6,5.9,0.8c0.7-0.3,1.5-0.6,2.2-0.9c1.5,2,4.9,0.4,5.9,3.1\n                            c-4.8,0.8-9.3-1.3-14-1.2C1849.4,363.4,1849.4,362.8,1849.9,362.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A18281",
                  d:
                    "M1864,365.2c-1.5-2-5.2,0.3-5.9-3.1c2.4,0.3,4.8,0.6,7,1.9c-0.2,0.4-0.5,0.7-1,0.9L1864,365.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C5A39F",
                  d:
                    "M1864.1,364.8c0.3-0.3,0.6-0.6,1-0.8c1.3,0.1,2.5,0.2,3.8,0.3c0.4,0.6,0.8,1.2,1.1,1.7\n                            C1868,365.7,1865.8,366.5,1864.1,364.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C4B0AA",
                  d:
                    "M1887.9,368.2c-1-0.2-2-0.4-3-0.7c0.4-0.2,0.7-0.4,1.1-0.6c1.6,0.1,3.3,0.1,4.9,0.2\n                            c-0.7,0.3-1.3,0.7-2,1C1888.6,368.5,1888.3,368.5,1887.9,368.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B49",
                  d:
                    "M1951,676c-0.7,0-1.3,0-2,0c-0.1,0.1-0.3,0.2-0.4,0.2c-1.5,0.1-3.7,1.2-4.3-0.6\n                            c-0.6-1.8,1.8-2.4,3.2-3.1c3.6-2,7.3-3.5,11.6-2.5c-0.1,1.6-3,1.8-2,4C1955.4,675.8,1952.7,674.4,1951,676z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B635E",
                  d:
                    "M2099.8,636.2c-1.6-1.1-3.2-2.1-4.9-3.2c4.4-2.8,5.7,1.5,8,3.6C2101.8,637.4,2100.9,636.2,2099.8,636.2z\n                            "
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#827B75",
                  d:
                    "M2098.5,629.8c-0.4,0.2-0.8,0.7-1.4,0.8c-0.9,0.1-1-0.6-0.9-1.3c0.1-0.8,0.6-1.1,1.3-1.1\n                            C2098.4,628.2,2098.6,628.7,2098.5,629.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#453F39",
                  d:
                    "M1427,275c-5.3,1.9-10.7,1.1-16,0.4c-2.4-0.3-4.8-1.2-7,0.5c-7.4,0.1-14.4-1.6-21-4.7\n                            c-1.8-1.4-4.2-1.7-6.1-2.8c-1.2-0.8-2.8-1.3-2.1-3.3c2-1.3,3.8,0.2,5.7,0.5c2.8,0.8,5.7-0.1,8.6,0.2c0.7,0,1.5,0.2,2.2,0.4\n                            c4,1.4,7.9,2.7,11.9,3.9c7.1,0,13.6,4.4,20.9,2.8C1425.5,272.6,1426.4,273.8,1427,275z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#573A3A",
                  d:
                    "M1375,265c1.6,3.4,6.1,3.2,7.9,6.2c-5.7-0.3-10.3-4.1-15.7-5.4c-2.8-1.8-5.6-3.6-8.4-5.5\n                            c-0.5-1.1-2-1.8-1.1-3.3C1364.6,257.3,1370,260.8,1375,265z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#453F39",
                  d:
                    "M1404.7,276.1c1.8,0,3.7-0.8,5.3,0.8c-1.6,0-3.2,0-4.9,0C1405,276.7,1404.8,276.4,1404.7,276.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#503235",
                  d:
                    "M1201.3,172.8c-5.5-3.5-11-6.9-17.3-8.7c-5.3-2.3-10.7-4.6-16-6.9c-0.5-0.7-0.5-1.5-0.2-2.2\n                            c1-0.9,2.1-1.1,3.2-0.6c8.4,3.8,17.1,7.1,25.6,10.6c1.4,0.6,3.6,1.5,2.4,4c2.2,3.2,7.1,2.4,8.9,6.2\n                            C1205.7,174.4,1203.5,173.6,1201.3,172.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#713C40",
                  d:
                    "M1163.8,155.2c-1.6-0.1-3.2-0.4-4-2c0.1-0.1,0.2-0.3,0.3-0.4c1.8-1.1,3.4-1.2,4.4,1.1\n                            C1164.5,154.5,1164.2,154.9,1163.8,155.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#713C40",
                  d:
                    "M1167.9,155c0,0.7,0,1.4,0,2.2c-1.5-0.5-3-0.7-4.1-1.9c0.1-0.1,0.2-0.3,0.4-0.4\n                            C1165.5,153.9,1166.7,153.9,1167.9,155z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#73716D",
                  d:
                    "M1516.9,266.9c0.1-0.3,0.1-0.6,0.1-0.9c1.4,0.4,2.7,0.8,4.6,1.4C1519.5,268.2,1518.1,268.3,1516.9,266.9\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1B1516",
                  d:
                    "M2003,404c0.8,3.7,5.7,5.4,5,9.9c-0.2,0.1-0.3,0.3-0.5,0.4c-0.2,0-0.4,0-0.6,0.1\n                            c-1.9-0.3-3.7-1.1-5.7-0.5c-2,0.1-3.7-0.5-5.4-1.4c-4-3.6-9.5-3.1-14-5.4c-2.4-1.3-4.6-3.2-7.7-2.8c-1,0-2-0.1-3-0.3\n                            c-0.5-0.1-1-0.3-1.5-0.6c-1.1-1.1-2.8-2-1.2-4c1.8-1,3.7-0.7,5.7-0.4c3.4,1,6.9,0.4,10.3,0.6c1,0,2,0.1,3,0.4\n                            c1.6,0.5,3,1.3,5.5,1.3c-2.1-0.9-2.9-2-3.7-3.4c-0.6-2-2.7-3.6-1.2-6c0.2-2.1,1.7-2.2,3.2-1.7c1,0.3,1.9,0.5,2.1,2.2\n                            C1994.3,398,1996.9,402.6,2003,404z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#423E3E",
                  d:
                    "M1974,400.2c-2-0.1-4-0.1-6-0.2c-0.7,0.8-0.9,1.9-1.6,2.6c-1.9,1.4-3.3-0.5-4.9-0.8\n                            c-0.9-0.4-1.7-0.8-2.5-1.3c-5.4-4.3-12-3.1-18.1-4c-4.2-4.5-4.5-6.5-1-9.4c0.6,0.7,1.3,1.3,1.9,2c2.2,3.2,5.6,3.9,9.1,3.9\n                            c4.2,0,8.2,0.8,12.1,2.1c5.7,1.9,11.5,3,17.5,2.7c3.6-0.1,6-0.5,4-4.9c-0.3-0.6,0-1.3,0.5-1.8c1.5-1.3,1.9,1,3,1\n                            c0.7,2,1.4,4,2.1,6c0.7,2,0.2,3.2-2.1,3c-1,0-2,0-3-0.1C1981.4,399.7,1977.6,401.1,1974,400.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C5C2BD",
                  d:
                    "M1985,391c2.5,8.1,2.5,8.1-6.8,8c-5.3,0-10.5-0.9-15.4-2.9c1.6-1.9,3.9-1.6,5.9-1.2\n                            c3.6,0.7,7.1,0.4,10.6-0.1c1.1,0,1.4-0.3,0.6-1.3c-1.3-1.5-3.5-2.7-2.8-5.3c0.9,0.1,1.9,0.2,2.8,0.3\n                            C1981.5,389.3,1983.3,390.2,1985,391z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AF8886",
                  d:
                    "M2034,535c-0.2,4.1,1.6,8,1,12c-3.6,1.1-3.6-1.9-4.1-3.9c-0.7-2.8-0.9-5.8-2.8-8.2\n                            c-1.1-1.6-2.3-3.1-1.2-5.1c2.5-1.3,4.2-0.3,5.2,2.1C2032.7,533,2033.3,534,2034,535z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C2121",
                  d:
                    "M2032,532c-1.5-1-3-2.3-5-1.9c-3,0.7-5.8,0.5-8-2.1c0.3-2.2,1.8-3.1,3.5-2c2.1,1.3,4.2,0.6,6.2,0.7\n                            C2034.6,526.8,2034.7,526.6,2032,532z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#937C79",
                  d:
                    "M2019,527.9c2.7,0.7,5.3,1.4,8,2.1c0.2,1.6,0.7,2.9,2,3.9c0.7,1.2,0.9,2.4-0.5,3.3\n                            c-1.1,0.3-1.8-0.3-2.3-1.2c-0.4-1.3-1.4-2-2.7-2.3c-0.4-0.2-0.8-0.4-1.1-0.6c-1.5-1.3-3.3-0.6-4.9-0.7c-0.5-0.2-0.8-0.5-0.9-0.9\n                            c0-0.2,0-0.3,0-0.5c-0.5-1.1,3.5-1.5,0.5-3C2017.7,528,2018.3,528,2019,527.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E4943",
                  d:
                    "M2005.2,525.1c1.5-0.1,3-0.2,4.4-0.3c1.5,0.9,3.4,1.3,4.4,3.1c-0.7,1-1.7,1.1-2.7,0.9\n                            c-0.5-0.2-0.9-0.4-1.2-0.9c-1.1-1.1-2.4-1-3.8-0.9C2005.9,526.4,2005.6,525.7,2005.2,525.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D2BDB9",
                  d:
                    "M2017,528c3.9,1.1-0.4,2.6,0.2,3.9c-0.1,0.7-0.6,1.2-1.2,1.4c-1.5,0-2.3-1.1-3.2-2.1\n                            c-0.1-0.4-0.1-0.8,0-1.3c0.8-0.6,1.9-0.7,2.2-1.8C2015.7,528,2016.3,528,2017,528z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ADA29E",
                  d:
                    "M2015.1,528.1c1,2.5-1,1.8-2.2,1.9c-0.3,0.3-0.7,0.4-1.1,0.2c-0.7-0.5-1.2-1.2-0.8-2.1\n                            c1-0.1,2-0.1,3.1-0.2C2014.4,527.9,2014.7,528,2015.1,528.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#573735",
                  d:
                    "M1327.9,307c-0.6,0.1-1.2,0.1-1.8,0.2c-4.7,0.2-9.5-1.2-14.1,0.9c-5.5,2.1-11.2,0.9-16.8,1.2\n                            c0,0-0.3-0.3-0.3-0.3c1.4-4,5-2.4,7.7-3.1c2.8-0.5,5.7,0.4,8.3-1.2c1-0.2,2.1-0.4,3,0.3c4.3,2.6,8.7-0.2,13,0\n                            C1327.3,305.7,1327.6,306.4,1327.9,307z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#422B27",
                  d:
                    "M1341.8,305.8c-0.6-0.1-1.2-0.2-1.8-0.3c-0.6-0.2-1.3-0.4-1.9-0.6c6.3-1.6,12.6-1.4,18.8-0.2\n                            C1352,305.8,1346.8,304.4,1341.8,305.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DCD5D4",
                  d:
                    "M1314,305c-1,0-2,0-3,0.1c-2.4,1.5-5.1,0.8-7.7,0.8c-0.6-0.2-1.1-0.5-1.4-1c5.1-1.6,10.3-0.7,15.4-0.7\n                            C1316.2,304.5,1315.1,304.7,1314,305z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544A4A",
                  d:
                    "M2043,553.8c-3.3,0.1-6.6,0.2-9.9,0.3c-3.1,2.1-6.6,1.2-10,1c-3.7-1.1-7.4-2.2-11.3-3.1\n                            c2.8-3.5,7.1-3.8,13.2-1C2031.2,550.9,2036.9,553.5,2043,553.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4443",
                  d:
                    "M2025,551c-4.1,0.7-8.2-1.9-12.6,0.3c3.3,1.2,6.8,0.5,9.5,2.7c-1.3,1.5-3.1,1.3-4.8,1.2\n                            c-0.9-0.1-1.7-0.5-2.2-1.2c-0.5-0.3-1.1-0.7-1.6-0.9c-1.5-0.3-3.6,0.6-4.4-1.1c-0.9-1.8,1.8-2.4,2.2-3.9\n                            c0.2-0.2,0.4-0.4,0.6-0.6c1.5-0.8,3.1-0.6,4.8-0.3c3.1,0.9,6.4,0.3,9.6,0.5c1.1,0.1,2.2,0.3,3,1.2\n                            C2028.2,550.7,2025.8,549.3,2025,551z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#91817E",
                  d:
                    "M2028.9,548.9c-0.9,0-1.8,0-2.8,0c-0.7-0.5-1.8-0.2-2.4-1c-0.1-0.5,0-0.9,0.3-1.3\n                            c0.4-0.3,0.8-0.5,1.2-0.6c1.4-0.3,3.2-0.4,2.4-2.7c-0.1-0.4-0.2-0.9-0.2-1.3c0.2-1.7-0.9-3.5,0.5-5c1.3-0.7,1.1-1.9,1.1-3.1\n                            c2.2,2.3,2.7,5.1,3,8.1c0.2,2.1,0.2,4.4,3,4.9c0,0.3,0,0.7,0,1C2033,548.5,2030.8,547.4,2028.9,548.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D3536",
                  d:
                    "M1358,257c0.3,1.1,0.6,2.2,0.9,3.4c-4.6-1.5-8.1-5.3-13-6.3c-8-4.6-16-9.3-24-13.9c0-0.4,0-0.7,0-1.1\n                            c1.4-0.2,2.9,0.4,4.1-0.9c0.2-0.1,0.4-0.2,0.6-0.3c0.7,0.1,1.4,0.3,2,0.7c5.1,3.5,11.2,5.5,15.8,9.9c1.6,1.8,3.7,3,6,3.8\n                            c0.4,0.2,0.8,0.4,1.1,0.6c1.7,1.3,3.4,2.6,5.5,3.3C1357.4,256.4,1357.7,256.6,1358,257z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9B7B0",
                  d:
                    "M1947,384c-4.3-0.7-6.1-4.5-8.9-7.1c6.8,2.5,14.4,2.5,20.9,6.1c-0.6,3.2-3,2.1-4.9,2\n                            c-1.3-0.3-1.3-4.6-3.7-1.1c-0.3,0.4-0.6,0.6-1,0.8C1948.5,384.8,1947.7,384.6,1947,384z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D9D6CC",
                  d:
                    "M1953,384c2-0.2,4.3,0.9,6-1c0.7,0,1.3,0,2-0.1c0.7,0.4,1.3,0.8,2,1.1c-4.3,3.3-9.6,3.4-12.9,0.2\n                            l-0.1-0.3C1951,383,1952,383.2,1953,384z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#704E50",
                  d:
                    "M1258,317c-1.4-0.1-3,0.4-4.1-0.9c0.5-1.4-1.4-2.7,0.1-4.1c3-0.9,6-1.7,9.2-0.9\n                            c-0.8,0.2-1.6,0.6-2.4,0.6C1256.1,311.5,1256.3,313.9,1258,317z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B89F9A",
                  d:
                    "M1829,386c-1.3-0.3-2.7-0.6-4.4-1c1.2,2.1,3.7,1.9,4.5,3.9c-4.3,0.9-7.6-1.7-10.7-3.7\n                            c-1.9-1.2-3.5-1.1-5.3-1.2c-0.9-0.3-1.4-0.9-1.6-1.8c-0.4-0.9-2.2-0.9-1.7-2.4c0.3-0.7,0.7-1.2,1.3-1.7\n                            c3.7-2.7,7.4,0.2,11.1,0.1c2.6,0.4,5,1.4,7.6,1.8c1.3,0.2,2.8,0.7,3.1,2c0.5,1.7-1.4,1.9-2.3,2.7\n                            C1830.1,385.2,1829.5,385.6,1829,386z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#453F39",
                  d:
                    "M1410.8,277.1c2.4,0.1,5-1,7.2,1C1415.5,278.3,1413.1,278,1410.8,277.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#887C7B",
                  d:
                    "M1786.9,365.9c4.6-1.1,9.2-2.4,14.1-1.9c0.1,0.2,0.1,0.4,0.2,0.7c-0.6,1.1-1.6,0.7-2.3,0.8\n                            c0.8,0.7,3.3-1.2,3.2,1.7c-1.2,0.8-2.5,0.2-3.7,0.2c1.4,0.4,4.2-0.1,2,2.9c-0.4,0.3-0.8,0.5-1.2,0.6c-1.6,0.3-3,0.8-4.4,1.6\n                            c-2.8-0.3-5.4-1.1-6.9-3.8c-0.5-0.4-1.2-0.7-1.6-1.1c-0.6-0.6-2.3-0.4-1.6-1.8C1784.8,365.6,1786.1,365.9,1786.9,365.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B19393",
                  d:
                    "M1787.9,368.7c2.2,1.7,4.5,2.9,7.3,3.3c0.2,0.3,0.4,0.6,0.4,1c-0.1,0.4-0.2,0.7-0.5,0.9\n                            c-1.2,0.4-2-0.5-3.1-0.8c-1.6-0.9-3.3-1.6-4.8-2.6C1785.8,369.5,1786.8,369,1787.9,368.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#988883",
                  d:
                    "M1810.9,379.1c-0.3,0.3-0.6,0.6-0.9,0.9c-0.5,0.6-1.2,0.6-1.8,0.8c-1.1-0.6-2.2-1.1-3.2-1.7\n                            c-0.2-1-1.8-1.1-1.4-2.4c0.1-0.4,0.4-0.8,0.8-1C1807,375.9,1809.3,376.9,1810.9,379.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B5A4A1",
                  d:
                    "M1804,377.1c-0.2,0.9,2.4,0.5,1,2c-2-0.8-4.2-1.4-5.8-3C1801.2,374.3,1802.6,375.6,1804,377.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C7D7F",
                  d:
                    "M1795,373.9c0-0.5,0.1-0.9,0.1-1.4c1.2-1.4,2.6-0.8,3.9-0.1c0.6,0.4,1.1,0.9,1.3,1.7\n                            c-0.1,0.7-0.3,1.4-1.3,0.9C1797.2,376.5,1796.6,373.4,1795,373.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A8383",
                  d:
                    "M1799,375c0.3-0.3,0.6-0.6,1-1c2-0.6,3.3,0.2,4,2.1c0,0.3,0,0.7,0,1c-1.6-0.3-3.2-0.7-4.8-1\n                            C1799.1,375.8,1799.1,375.4,1799,375z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C3ACA4",
                  d:
                    "M1808.2,380.8c0.4-0.8,1.1-0.8,1.8-0.8c0.6,0.7,1.3,1.4,1.9,2c-0.3,0.1-0.6,0.1-1,0.2\n                            C1810,381.7,1809.1,381.3,1808.2,380.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BAAFAD",
                  d:
                    "M2011,548.1c-0.9-0.1-1.9-0.1-2.8-0.2c-3.2,0.1-6-2.7-9.3-1.1c-3.1-1-3.9-2.7-0.7-4.3\n                            c1.5-0.8,1-2.9,2.8-2.9c3.4-0.4,6.6,1.4,10.4,0.9c-1.7-0.1-3.7,0.9-4.2-0.9c-0.4-1.5,1.6-1.7,2.8-2.1c2.7,0.2,5.4-0.2,8.1-0.3\n                            c1.3-0.1,0.6-0.9,1-1.3c2.3-1.5,4.6-1.4,7.1,0.3c-0.8,2.1-3.2,1.9-4.2,3.3c-2.1,0.9-4.4,1.6-6.2,3.1c-3,0-5.9,0.7-8.9,0.1\n                            c3.9,0.8,8-0.7,11.9,0.9c0.4,0.4,0.5,0.8,0.4,1.3c-0.4,0.6-1,0.9-1.7,1.1c-1.9,0.4-3.9-0.2-5.6,1c-0.3,0.3-0.7,0.5-1,0.7\n                            L2011,548.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CDC7C6",
                  d:
                    "M2000.9,540c-1.4,0.5,0.4,2.7-2.1,3.2c-3.7,0.8-0.8,2.4,0.1,3.6c-1.9,0.6-3.7,1.8-5.9,1.1\n                            c-0.7-0.5-1.5-0.6-2.3-0.7c-5.2-0.9-5.2-0.9-3.6-6.1c1-1.2,1.4-2.6,1.7-4.1c0.3-0.4,0.7-0.6,1.1-0.8c1.2-0.3,2.3-0.2,3.3,0.5\n                            c1.6,1.9,2.7,5.2,6,1.9C2000.1,538.6,2001.2,538.4,2000.9,540z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D7D2CF",
                  d:
                    "M1988,541c-1.1,2.7-2.3,5.4,2.5,5.4c0.8,0,1.6,1,2.4,1.5c-4.3,0.5-8.6,0.4-12.9,0\n                            c-0.7-1.6-0.2-3.3-0.1-4.9c0-0.7,0-1.4,0-2c0.6,0,1.2-0.1,1.8-0.1C1983.9,541.3,1986,540.1,1988,541z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C1B2AE",
                  d:
                    "M1980,543c1.2,1.6,1.1,3.2,0.1,4.9c-0.4,0-0.7-0.1-1.1-0.1C1976.3,545.6,1979.1,544.5,1980,543z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4443",
                  d:
                    "M2005.1,548.1c-1.9,1.5-4.1,0.6-6.1,0.9C2000.8,547.2,2003,548.2,2005.1,548.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E2E1DE",
                  d:
                    "M1950.1,384.2c4.3,1.7,8.6,0.9,12.9-0.2c2.3,0.7,4.7,1.4,7,2.1c0.5,2.3,2.6,2.6,4.2,3.6\n                            c2.8,1.5,6.2,2.4,6.8,6.3c-6.1,2.1-12.2-0.4-18.2,0.2c-5.1-1.2-10.2-2.5-15.5-2.9c-2.6-0.2-4.7-1.4-5.4-4.2\n                            c4.4,3,9.2,3.5,14.5,2.1c-3.9-1.5-9.2-1.2-9.4-7.2C1948,384,1949,384.1,1950.1,384.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D9D6CC",
                  d:
                    "M1981,396c-1.7-2.7-4.3-3.9-7.1-5.1c-2-0.8-5-1.3-4-4.8c2,0.6,4.1,1.2,6.1,1.8c0.3,0.1,0.6,0.2,1,0.3\n                            c0.9,2.2,2.8,3.5,4.3,5.2C1982,394.1,1983.6,395.4,1981,396z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E4B4B",
                  d:
                    "M782,101c-4,2.2-8.3,0.6-12.5,0.9C773.6,100.8,777.8,101,782,101z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E302E",
                  d:
                    "M1971.1,551c-1.5,3.5-3.8,6.1-7.3,7.8C1965.8,555.8,1967.7,552.7,1971.1,551z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#473E3D",
                  d:
                    "M1301.9,304.8c0.3,0.1,0.7,0.2,1,0.3c0.6,0.6,0.6,1.2,0.1,1.8c-2.9-0.1-5.7,0.2-8.1,1.9\n                            c-4,0-7.9,0.1-11.9,0.1c-3.9,1.4-8.1-0.4-12.1,1l0,0c-1.3-0.4-2.7-0.8-5.3-1.6c9-0.7,16.7-0.9,24.2-2.2c4-1.6,8.2,0.2,12.2-1\n                            L1301.9,304.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#25191B",
                  d:
                    "M1271,310c3.9-2,8.1-0.5,12.1-1C1279.2,310.8,1275,309.6,1271,310z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2827",
                  d:
                    "M2032.8,568.1c-3.3,6.5-6.3,13.1-8,20.4c-2.7-1.2-2.8-3.5-3.4-5.7c-1.1-3.9-3.9-6.6-7.8-6.4\n                            c-3.6,0.2-5.8,2.7-6.8,6.8c-0.8,3.4-3.2,6.4-4.9,9.6c-0.5,1-1.3,2-1.4,3.1c-0.2,1.6,3.3,1.2,2.2,3.1c-1.3,2.4-2.8-0.3-4.2-0.3\n                            c-1.5,0-1.3,2.8-3.6,1.8c-3.2-1.5-6-1-9.4,0.9c-3.7,2.1-8.5,3.2-13,0.9c-0.9-0.5-2.3-0.1-3.5-0.2c0.3-0.7,0.7-1.3,1-2\n                            c2.9-2.9,4.8-6.3,9.3-8c2.9-1.1,4.5-5.7,7.6-7.9c5.5-3.9,9.3-10.2,15.6-12.4c9.1-3.3,17.7-8.2,27.5-9.5c0.6-0.1,0.5-0.7,0.6-1.2\n                            c-8-0.1-15.7,2-23.6,2.9c-1.6,0.2-3.3,0.6-4.9,0.7c-2.1,0-3.2-0.8-2.1-3.1c5.2-4.4,11.8-3.9,17.9-4.6c7.2-0.8,14.4-1.1,21.7-0.9\n                            c1.2,0,2.3,0.1,3.2,1c0.1,0.4,0.2,0.8,0.3,1.2c-0.5,0.9-1.1,1.5-2.1,1.7C2036.6,560.9,2034.7,564.5,2032.8,568.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4444",
                  d:
                    "M2042.8,557c-12.1,0.5-24.3,0.5-36.2,2.9c-2.2,0.5-4.4,1.4-6.6,2.1c-1.2,1.8-2.7,3.3-4.5,4.5\n                            c-1.1,0.7-2.1,1.5-3.4,1.8c-0.5,0.1-0.8-0.1-1.2-0.4c-0.8-0.4-1-1.2-1-2c1.2-2.3,4.4-2.8,5.4-5.3c0.3-0.6,0.6-1.1,1.1-1.5\n                            c1.3-0.8,1.7-2.3,2.4-3.5c0.9-0.6,1.9-1.2,3-0.6c1.7,0,3.3,0,5,0c6.7,0.6,13.4-0.5,20.1-0.5c1.9,0,4-0.5,5.8,0.4\n                            c2.4,0,4.9,0,7.3,0C2041.7,555,2043,555.1,2042.8,557z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#655D5D",
                  d:
                    "M2033,555c-7.1,0.3-14.2,0.7-21.3,1c-1.6,0.1-3.4,0.6-4.7-0.9c1,0,2,0,2.9,0c2.2-1.2,4.8,0.4,7-1\n                            c1.7,0,3.3,0,5,0c3.7,0,7.4,0.1,11.1,0.1C2033,554.4,2033,554.7,2033,555z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E4D6CE",
                  d:
                    "M2011,528.1c0.3,0.6,0.7,1.2,1,1.8c-0.2,1.4-1.1,2.3-2.3,2.8c-1.7,0.6-3.4,0.5-5.1,0.6\n                            c-2.4,0.4-4.8,0.6-6.9-1c-0.6-0.4-1.1-0.8-1.6-1.4c0,0,0,0,0,0c1-1.4,2-2.9,3-4.3c1.2,2.2,2.9,2.8,5.3,2.2\n                            c1.9-0.5,3.8-0.7,5.8-1C2010.4,527.9,2010.7,528,2011,528.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DECCC6",
                  d:
                    "M1993,537c-1.3,0-2.7,0-4,0c0.1-4.1,3.1-3.9,5.9-4c0,0.3,0,0.6,0,1c0.3,0.8,0.7,0.4,1.1,0.1l0,0\n                            c0.5-0.6,1.1-0.8,1.8-0.7c0.7,0.1,1.2,0.5,1.5,1.2c-0.4,1.9,1.9,0.3,2,1.5c0.1,0.5,0.1,0.9-0.1,1.3c-0.7,0.8-1.6,1.1-2.6,1\n                            C1996.6,538.3,1994.6,538.5,1993,537z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F0C9C3",
                  d:
                    "M1994.9,533c-2.2,1-4.9,1.2-5.9,4l0,0c-1,0.8-2,0.9-3,0c0.7-1,1.4-2,2.1-3\n                            C1990.4,534.1,1992.1,530.1,1994.9,533z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B5A49B",
                  d:
                    "M1997.9,533.9c-0.6,0.1-1.3,0.1-1.9,0.2c0-1,0-2.1,0-3.1c0.6,0,1.3,0.1,1.9,0.1\n                            C1998.7,532,1998.9,533,1997.9,533.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B5A49B",
                  d:
                    "M1996,534c-0.1,0.9-0.3,1.7-1.3,1.8c-0.3,0-0.7-0.4-1.1-0.6c0.4-0.5,0.8-0.9,1.3-1.4\n                            C1995.3,534,1995.7,534,1996,534z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DECCC6",
                  d:
                    "M1985.9,537c1,0,2,0,3,0c1.1,1.7,1.2,3.1-1,4c-2.1,0.7-4.2,3.3-6.2-0.1\n                            C1983.2,539.6,1984.6,538.3,1985.9,537z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0D",
                  d:
                    "M1468,569c1.8,1.7,0.7,4,1,6C1467.2,573.2,1468.3,571,1468,569z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0D",
                  d:
                    "M1465.7,601c0.5,0.8,0.8,1.2,0.9,1.6c0,0.3-0.3,0.7-0.5,1.1c-0.3-0.3-0.8-0.5-0.9-0.8\n                            C1465.1,602.5,1465.4,602,1465.7,601z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3635",
                  d:
                    "M1919,680c-0.7,1.2-1.9,1-3,1c-2,0-4,0-6,0c-2-0.7-2.3-4.4-0.1-5.6c2-1,4-2.4,6.9-1.8\n                            c4.5,0.9,9-0.5,13.2-2.6c4.4-1.1,9.1-0.7,13.3-2.6c2.6-1.2,5,1.2,7.7,0.6c0.2,2-1.4,2.1-2.6,2.4c-4.7,1.1-8.9,3.5-13.6,4.4\n                            C1929.2,676.1,1924.2,678.4,1919,680z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#64605F",
                  d:
                    "M1928.9,665.1c-2.9,2-4.3-0.4-5.9-2.1C1924.9,663.7,1926.9,664.4,1928.9,665.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#746A69",
                  d:
                    "M1956.9,665c-0.6,3.5-3.2,1.5-5.1,1.6c1.1-0.5,2.1-1,3.2-1.5C1955.7,665.1,1956.3,665,1956.9,665z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322B2A",
                  d:
                    "M1976,665c-2.1,1.8-4.7,0.7-7,1C1971.1,664.1,1973.7,665.3,1976,665z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#443F3C",
                  d:
                    "M1935,675c2.8-2.2,6.4-2.5,9.5-3.9c2-0.9,4.5-0.6,6.5-2.1c3.4,0.6,6.6-1.1,10-1c-0.3,0.7-0.7,1.3-1,2\n                            c-0.3,0-0.7,0-1,0c-5.1,0.8-9.7,2.6-14.5,5.8c1.8,0.1,3.1,0.2,4.5,0.3c-0.7,1.2-1.9,1-3,1c-2.5,1.3-5.5-0.4-8,1h0\n                            c-0.5,0.5-1.2,0.5-1.8,0.5c-1.1-0.1-2.5,0.6-3.1-0.6C1932.4,676.3,1934.7,676.2,1935,675z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2828",
                  d:
                    "M1198,212c0.3,0,0.6,0,1,0c8.1,4.8,16.7,8.5,24.8,13.1c7,4,14.2,7.7,21.2,11.8c1.6,1,3.5,1,5,2\n                            c9.6,5.8,19.9,10.3,29,17c1.1,0.8,2.8,1.3,1.7,3.3c-2.8,1.4-4.8-0.5-6.7-1.9c-6.8-5.2-14.9-8.6-21.6-14\n                            c-0.9-0.7-2.2-1.4-3.8-1.2c-0.4-0.1,0.4,0.8,0.2,0.1c-0.1-0.2,0.1-0.3,0.4-0.1c5.1,1.8,5.4,2.3,3,5.4c-0.9,0.5-1.7,0.8-2.8,0.7\n                            c-0.8-0.4-1.1-1-0.9-2c0.1-0.4,1.2-0.6,0.5-0.8c-6-2.1-11-5.9-16.5-8.8c-7.5-5.2-15.6-9.3-23.6-13.6c-5.2-2.8-10.1-6.3-15.6-8.6\n                            c-1.6-0.7-4.5-2-1.6-4.7C1194.2,210,1196.2,210.8,1198,212z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383435",
                  d:
                    "M1198,212c-2.4,0.5-4.2-0.7-6.1-1.9c-0.5,0.5-1.1,0.6-1.8,0.5c-1.4-0.7-2.8-1.1-4.4-1.1\n                            c-13.5-6.9-27.5-12.9-41.2-19.6c-7.2-3.5-14.8-5.7-22-9c-10.3-4-20.5-8.4-31-11.9c-2.1-0.7-5.1-0.8-5.6-4\n                            c6.3-1.2,11.3,2.8,16.8,4.5c10.6,3.4,20.5,8.5,31.2,11.5c1.4,1.5,3.5,1.7,5,3c0.7,0,1.3,0,2,0c9.3,5.8,19.7,9.1,29.5,13.9\n                            c8.5,4.2,17.3,7.9,25.9,11.8C1197.4,210.2,1197.9,210.9,1198,212z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#393536",
                  d:
                    "M1281,259c-0.7-1-1.3-2-2-3c5.3,1.5,9.7,4.7,14.3,7.5c12.7,7.7,25.1,15.7,37.7,23.5c1.3,2.5,4.6,2.6,6,5\n                            c-3.2,1.9-5.9-0.2-8.1-1.8c-9.9-7.4-20.9-13.2-31-20.3c-2.8-2.4-5.9-4.3-9.3-5.9c-0.4-0.2-0.8-0.4-1.1-0.7\n                            c-1.8-1.6-4.2-2.3-6.1-3.8C1281.2,259.4,1281.1,259.2,1281,259z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383435",
                  d:
                    "M1250,239c-1.2-0.1-2.3,0.7-3.8-0.2c-14.7-8.6-29.4-17.2-44.9-24.3c-1-0.4-1.6-1.7-2.3-2.5\n                            c8.2,2.5,15.3,7.3,22.9,11.2c9.2,4.6,18.2,9.7,27.2,14.6C1249.5,238,1249.7,238.6,1250,239z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#666261",
                  d:
                    "M846.9,189c0.3,2.7,0.7,5.3,1,8c-6.5,0.5-7.3-0.1-7.7-5.4c-0.5,0.6,0,1.2-0.1,1.7\n                            c-2.2,6.6-0.2,12.9,1.4,19.3c0.5,2-0.6,3.3-2.3,3.9c-2.8,1-3.7,2.6-3.4,5.7c0.3,3.1-6.6,8.2-9.3,7.1c-2.1-0.9-2.5-3.4-3.3-5.3\n                            c-0.6-1.4-0.1-3-0.3-4.5c-0.3,1.2-0.1,2.9-1.9,2.9c-1.5,0-1.7-1.3-2.1-2.4c-1.7-4.9-2-10.1-3.6-15c-0.4-1.1-0.1-2.4,1.1-3.1\n                            c7.8-4.2,8-4.6,8.6-13.6c-3.4,1.4-4.2,7-8.2,6.2c-2.2-0.4-5.7-0.8-6.7-4.2c-0.6-2.9-0.3-5.9-0.4-8.8c0-1.3,0.1-2.6,0.6-3.8\n                            c1.8-1.8,4.3-0.9,5.5,0c3.1,2.7,4,0.5,5-1.7c1.1-2.5,2.6-3.4,5-1.6c0.4,0.3,0.8,0.6,1.3,0.6C839.5,175,843.4,177.7,846.9,189z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B6868",
                  d:
                    "M811.1,191c2.2-0.1,3.5,1.7,5.2,2.6c1.4,0.8,1.7-0.2,2.5-1.2c1.9-2.5,4.2-4.6,6.9-7.3\n                            c2.5,8.5-2.7,14-6.5,20.1c-1.7,0.4-0.6-2.8-3.2-2.6c1.5,6.4,2.9,12.6,4.5,19.1c2.4-1.4,0.8-3.5,2-4.9c2,3.7,1.1,8.2,4.5,11.7\n                            c1.1,0.1,1.4-2.3,3.7-2.1c2.1,0.1,5.4-1.7,3.7-5.7c-1.2-2.8,0.2-4.2,3.2-4.7c2.5-0.4,4.8-1.4,1.9-4.6c-0.6-0.6-2.3-2.2-0.2-4.1\n                            c1.1-0.9-0.3-3.4-1.5-4.8c-1.6-1.8-2.5-2.8,0.2-5c2.3-1.9,1-5.5,0.2-8.4c1.5-0.4,3.1,0.4,3,1.1c-1.4,6,3.5,5.6,6.7,6.9\n                            c0.6,3.3,1.4,6.5,1.1,9.9c0.3,0.4,0.6,1,0.3,1.3c-0.6,0.8-1.7,1-1.6,2.8c0.3,4,1.2,8.2-0.8,12.1c-0.6,3.6-2.7,6.7-3.9,10.1\n                            c-1,2.9-4.5,4.3-6.6,6.5c-1.5,1.6-4.2,0.6-6.2,0.2c-2.9-0.5-5.8-1.3-8.8-1.1c-3.3,0.2-6.9-4.3-6.4-8.6c0.5-4.7-2.1-8.2-3-12.4\n                            c-1.4-7.8-1-15.8-2.2-23.6C809.8,193,810,191.8,811.1,191z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5A5A",
                  d:
                    "M846.9,189c-1.4-2-3.4-3.8-4.2-6c-1.9-5.6-7.4-5.8-11.4-8.2c-0.5-0.3-1.6-0.3-1.7-0.1\n                            c-1.7,3.4-3,2.7-4.9,0c-0.9-1.3-2.5-0.5-2.6,1.3c-0.2,2.3-1.9,3.4-3.3,4.8c-0.8,0.9-2.2,1.1-2.3-0.1c-0.4-3.7-3.7-2.3-5.5-3.6\n                            c-1.8-2.3-1.5-4.5,0.8-6c2.1-1.3,3.8-0.1,4.8,2c3.1-3.3,4.9-7.5,8-10.7c1.9-1.9-0.1-3.6-0.5-5.4c-0.4-1.6-3.4-3.9,1-4.4\n                            c0.1,0,0.1-0.2,0-0.2c-2-0.5-1.3-4.5-3.3-3.6c-3.5,1.5-8.7-1.1-10.4,5.3c-2.6-4.4-3.1-7.9-0.5-11.5c-0.7-0.1-1.5,0.1-2-0.6\n                            c-0.1-0.3-0.1-0.7,0-1c1.5-1.1,3.4,0.1,4.9-0.9c3,1.8,6-1,9-0.1c3.6-1.2,7.4,0.3,11-0.9c4.6-0.8,7.6,0,7.9,5.6\n                            c1,14,2.9,28,5,41.8C847.1,187.3,846.9,188.2,846.9,189z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#686463",
                  d:
                    "M854,214c-2.2-9.5-3.1-19.2-4-28.9c-0.8-2.1-0.5-4.2-0.1-6.3c0.2-1.1,0.2-2.6,1.6-2.7\n                            c1.4,0,1.5,1.5,1.8,2.5c0.5,2.3,4.7,4.8-0.6,6.9c-0.8,0.3-0.1,3.4-0.2,4.9c-1.5-4.6,3.1-7.4,4.6-11.4c0.7-2,4.7-2.6,6.9-0.1\n                            c2.7,3,5,4.4,8.9,1.2c1.9-1.6,6.3-4.7,6.9,2.1c0.1,1.7,1.8,1,2.5,0c0.9-1.3,0.4-3.4,2.6-4.8c2.1,4.7,0.7,10.4,4.5,14.2\n                            c1.1,3.4,2,6.9,1.6,10.5c-0.3,0.7-0.6,1.9-1.5,1.7c-8.8-2.7-15.9,2.4-23.5,5.3c-3.1,1.2-6.8,1.6-9,4.8\n                            C856.5,214.8,855,215,854,214z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#666466",
                  d:
                    "M806,143.8c0.3,0.1,0.7,0.2,1,0.2c1.1,4.5,3.1,9,2.1,13.8c-1.1,3.2-1.6,7.2-6.6,4.2\n                            c-4.3-2.2-8.4-2.2-13.5-1.6c-6.9,0.8-13.3,5.3-20.6,3.5c-0.3-0.1-0.7,0-1,0.2c-8.2,6.3-18.2,4.5-27.5,6.2\n                            c-2,0.4-3.9,0.7-5.7,1.5c-6.7,3.2-13.5,2.2-20.3,0.4c-0.8-1.8,0.5-2.7,1.7-3.7c6.1,0.1,10.2-4.9,15.9-6.1c2.7-0.6,5.2-1.8,8-1.3\n                            c1.2,0.2,2.4,0.4,3.4-0.3c2.9-2,5.6-3.5,9-0.8c0.9,0.7,1.9-0.2,2.7-0.8c2.4-1.7,4.6-2.3,7.2,0c1.6,1.4,3,0.6,3.7-1.4\n                            c1.2-3,1.3-7.5,6.8-4.4c1.1,0.6,3.3-2.4,5.7-2.3c0.5,0,0.9,0.1,1.4,0.3c1.6,0.3,3,2.7,4.7-0.4c1.1-1.9,3.7-1.6,5.7,0\n                            c0.5,0.4-0.3,1.3,0.1,1c3.6-2.1,7.4-2.3,11.4-2.3c3.4,0,2.2-4,3.9-5.6C805.6,144,805.8,143.9,806,143.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#222023",
                  d:
                    "M909.8,297.1c-9.5-0.4-18.9-0.9-28.4-1.3c-2.1-0.3-4.2-0.6-6.3-0.9c-3.5-1.9-7.3-0.6-11-1.1\n                            c2.2-2.4,0.2-5.3,1-7.8c3.1,1.3,5.5,4,8.9,4.4c0.8-0.4,0.7-1.1,0.3-1.7c-1.7-3.1-3.7-6.3,2.2-7c0.3,0,0.7-0.2,0.8-0.5\n                            c3.9-8.1,10.7-5.8,17-4.6c4,0.8,7.9,2.2,12.1,2.1c3.5,4.4,2.5,10.2,4.7,14.5c-0.1-0.8-0.1-2,1.4-2.7c4.3,0.6,8.5,1,12.8,1\n                            c1.8,0,4.1-0.3,4.8,2.3c-2.2,2-4.9,1.1-7.4,1.4c-1.3,0-2.6-0.1-3.9-0.1c-0.5,0-0.9,0-1.4,0c-0.9,0-1.7,0-2.6,0.2\n                            c-0.9,0.5-1.3,1.7-2.5,2C911.5,297.5,910.6,297.6,909.8,297.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#605C5D",
                  d:
                    "M854,214c0.6-0.2,1.5-0.1,1.9-0.5c4.4-5,10.6-6.1,16.6-7.6c1.1-0.3,1.4-1.4,2.2-1.9\n                            c1.4-0.8,2-4.9,4.6-1.2c2.2-4.5,5.1,1.7,7.2-0.4c1.7-1.6,2.4,0.6,3.6,0.5c1-0.1,1.5,0.5,1.9,1.2c1.5,5.6,2.8,11.2,3,17\n                            c-0.3,3.6-2.8,0.8-4,1c-2.3,0.3-1-2.1-1.3-3.4c-2.1,0.8-1.6,2.6-1.9,4.1c-0.9,4.3-2.8,5.5-7,4.2c-2-0.6-3.9-1.6-6,0.1\n                            c-1.4,1.1-3.2,0.1-3.9-1.1c-2-3.5-6.1-3.4-8.9-5.4c-0.4,0-0.9,0-1.3-0.1c-2.2-0.9-3.5,2.1-5.6,1.4\n                            C854.2,219.4,853.8,216.7,854,214z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5959",
                  d:
                    "M852,180c0-1,0-1.9,0-3.4c-2.5,2.8-1.8,5.8-2.1,8.5c-1.9-5.8-1.7-12-2.7-18c-1.2-7-1.5-14.1-2.3-21.1\n                            c-1.4-9-1-9.4,7.9-9.4c1.8,0,3.7-0.1,5.4,0.3c0.9,0.5,2.8,1,1.3,2.3c-4.6,3.7-2.6,8.9-1.1,12c1.9,3.8,3.2,8.2,6,11.7\n                            c1.4,1.7,2.8,3.3,4.7,4.3c3.4,1.8,6.7,0.2,7.2-3.6c0.2-1.5-0.8-3.8,1.7-3.8c2.7,0.1,2.2,2.6,2.3,4.3c0.3-1.3-0.9-3.6,2.1-3.3\n                            c2.3,2.5,2.5,5.5,2.1,8.6c-0.6,1.2-1,2.4-1.1,3.8c-0.2,2-1.1,3.5-3.1,1.5c-1.4-1.5-2.1,0-2.9,0.3c-5.5,2.3-7.5,2.2-11.5-2.2\n                            c-3.1-3.4-6.1-1-9.2-0.9c-3,0.1-1.6,2.8-2.4,4.2C853.8,177.3,854.7,179.8,852,180z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#28272A",
                  d:
                    "M906,279c-3.1,1-5.7,0.9-8.9-0.6c-4.9-2.2-10.4-1.5-15.8-1.1c-1,0.1-1.6,0.8-1.7,1.6\n                            c-0.5,3.1-1,4.9-5.3,4.6c-2.3-0.2,0.3,3.7,1,4.2c1.7,1.3,1.9,1.9,0.5,3.4c-1.4,1.6-2.4,1.7-4.1,0.2c-2.2-1.9-6-1.7-6.8-5.4\n                            c0.9-4.3-2.9-7.7-2-12c2.9-3.6,7.3-3.5,11.3-4c3.1-0.4,6.2-1,9.3-0.8c0.8,0.1,2,0.2,2.3-0.4c2-4.1,6.3-3,9.3-4.4\n                            c4.6-2.2,6.4-0.5,8.6,2.7C905.7,270.8,908.2,274.5,906,279z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5758",
                  d:
                    "M861,220c1.4-0.1,3.3-2.6,4,0.8c0.1,0.5,0.8,0.9,1.2,1.4c5.1-5.8,2.8,2,4.6,2.5c1.4,0.4,3,4.2,4.4-0.2\n                            c0.1-0.2,4,0.5,5.9,1.3c3.8,1.4,6.3,0,5.5-4.1c-0.7-3.5,1.3-3.8,3.4-4.7c1.6-0.7,2.1,0.6,1.6,1.2c-3,3.8,1.3,2.7,2.4,3.7\n                            c3.7,1.7,2.8,5.2,3.2,8.3c-0.2,1.8-0.9,3.2-2.8,3.5c-1.6,0.3-2.7,1.3-3.6,2.5c-3.3,4-7.5,4.3-12.2,3.4c-4-0.8-7.8-2.1-11.8-3\n                            c-2.3-0.5-3.2-2.8-4.8-4.1c-1.9-1.6-3.8-3.2-5.9-4.5c-1.3-1.8-1-3.9-1-6C857,221.4,857.7,216.9,861,220L861,220z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#110F10",
                  d:
                    "M629,162c9.7,0.2,18.8-3.2,28.3-4.3c13.2-1.6,26.4-3.9,39.6-5.6c16.8-2.2,33.7-4.1,50.6-5.9\n                            c7.8-0.9,15.6-1.4,23.5-2.1c3.2,1.8,7-1.1,10.2,1.1c-0.8,2.6-3,2.2-4.9,2.3c-34.4,2.6-68.6,6.8-102.8,11.8\n                            c-22.9,3.1-45.7,7.2-68.4,11.5c-3.1,0.6-6.2,1.4-9.3,1.6c-1.8,0-3.7-0.2-5.5,0.6c-4,1.3-8,2.5-12.2,3c-0.8,0-1.6-0.3-2.2-0.8\n                            c-1-2.2,0.6-2.9,2.1-3.6c1.6-0.7,3.4-1,4.9-2.2c0.5-0.2,1-0.4,1.5-0.5c3.2-0.1,6.3-0.7,9.5-1.2c4.1,0.2,7.9-0.6,11.5-2.6\n                            c6.4-0.8,12.6-2.6,19-3.6C625.9,161.3,627.5,160.7,629,162z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2C2E",
                  d:
                    "M860.9,293.1c-5.1-0.1-10.2,0.1-15.2-1c2.6-1.5,5.4,0,7.6-0.6c-4.4-0.1-9.5,0.4-14.4-2\n                            c3.6-1.9,7.2-3.8,11.3-4.1c1.7-0.1,2.9-0.5,3.3-2.3c0.4-1.8-0.2-3.3-1.8-4.3c-5.7-3.4-11.1-7.9-18.5-4.9c-0.6,0.2-1.3,0-2,0\n                            c-7-0.5-7-0.5-10.5,5c-2.1-0.3-2.2-2.7-3.7-3.6c-1-1.5-0.7-3.2-0.3-4.8c1.4-1.7,0.4-5.4,2.5-5.6c4.1-0.4,8.3-2.3,12.2-1.2\n                            c3.6,1,7.2,0.7,10.7,1.2c13.8,2.1,17.9,6.7,17.9,17.7c0,1.3,0.8,2.6,0.2,4c0.7-1.2-0.4-2.7,0.7-3.7\n                            C862,286.4,863.8,289.8,860.9,293.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#525052",
                  d:
                    "M856,228c3.8-0.5,5.6,2.6,7.8,4.7c1.8,1.8,2.7,4.4,5.8,2.2c1.8,3,5.1,2,7.7,3c5.5,2,10.7,1.4,13.5-4.1\n                            c1.4-2.8,5,0.6,5.2-2.9c3.7,2.2,2.8,5.9,2.9,9.2c-2.5,3.1-3.9,6.8-9.8,6c-3.2-0.5-7,0.5-10.5-0.6c-2-0.6-4-0.3-5.7,0.9\n                            c-3.3,2.3-7.4,1.4-11.1,2.3c-3.1,0.8-3-3.4-3.8-5.8C857.4,238,855.5,233.2,856,228z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5F5C5C",
                  d:
                    "M792,136c0.3,0,0.7,0,1,0c3.3-0.8,6.8,0.8,10-1c3,0,6,0,9,0c1.8-1.5,3.9-0.5,5.8-0.4\n                            c3.4,0.1,6.8-0.5,10.2-0.6c4.3,0,8.6,0,13,0c-1.3,3.3-4.5,2.6-7,3c-2.6,0.4-5.3,0.1-7.9,0.1c-3.6,1.2-7.5-0.4-11.1,0.9\n                            c-1.6-0.3-3.2,1.3-4.9,0.1c-10.3,1.4-20.8,1.6-31.1,2.9l0,0c-6.4,0.6-12.8,0.6-19.2,1.5c-1.6,0.2-3.3-0.5-4.8,0.6l-0.4,0.1\n                            l-0.4,0c-5.5,0.2-11,1.4-16.5,1.4c-1.9,0.7-3.9,0.2-5.8,0.9c-4.3,0.5-8.6,0.9-12.8,1.6l0,0c-17.2,1.9-34.2,4.6-51.4,6.4\n                            c-1.5,0.2-2.8,1.2-4.3,0.9c-1.8-2.3-0.2-2.8,1.7-2.8c1.8,0,3.6-0.1,5-1.5c0.3,0,0.7,0,1,0c3.6,0,7.3,0.1,10.8-1.3\n                            c1.3-0.8,3,0.5,4.2-0.7c1,0,2,0,3,0c1.9-1.2,4.3,0.4,6.1-1.3c1.8-0.7,3.6-0.7,5.5-0.7c2,0.4,3.5-1,5.3-1.3\n                            c11.4-0.3,22.6-2.5,33.9-3.4c1.2-0.1,2.3-0.2,3.3,0.6c0.3-0.3,0.7-0.6,1-1c10.2-2,20.5-2.9,30.9-3.5\n                            C780.6,137.2,786.3,136.9,792,136z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5556",
                  d:
                    "M809,142c1.6,0,3.3,0,4.9,0c-7.2,2-2.7,6.5-2.3,10.3c-0.8-4.3,1.6-4.8,4.6-3.9c1.6,0.5,2.7-0.1,4.1-0.8\n                            c2.1-1,5.3-2.7,4.3,2.4c-0.2,1,0.3,1.6,1.2,1.8c1.1,0.2,3.2-1,2.4,1.6c-0.8,2.6-2-0.1-3-0.1c-0.5,0-0.9,0.1-1.8,0.1\n                            c1,1.6,2.9,3.5,2.5,4.2c-1,2,6,6.3-1.7,6.1c-0.2,0-0.7,0.5-0.7,0.6c1,5.8-7.8,6.3-5.3,13.2c-3.2-2.2-1.7-6.6-5.4-5.8\n                            c-3.2,0.6-1.4,3.5-1.8,5.4c0,1.3,0,2.7,0,4c-0.7,0-1.2-0.2-1.6-0.8c-1.6-5.9-0.6-11.8-0.7-17.8c0-4.4,0.8-8.9-0.5-13.3\n                            c-0.2-0.8,0.2-1.6,0.8-2.3C809,145.3,809,143.6,809,142z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484648",
                  d:
                    "M858,243c1.5,2.2,1.4,6,6.5,3.6c2.5-1.2,6.4,0.1,9.4-2.2c1.4-1.1,3.9-0.6,5.8,0c2.9,1,5.9,2.7,8.7-0.2\n                            c0.1-0.1,0.4-0.2,0.5-0.1c4.4,2.9,6.3-1.5,9.2-3.1c0.2,0.2,0.3,0.3,0.5,0.5c0.8,2.5,1.3,5.1,1.1,7.8c-0.2,0.4-0.5,0.8-1,1\n                            c-0.7,0-1.5-0.6-1.9-0.2c-6.2,4.1-13.2,2.9-20,2.9c-1.9,0-3.3,0.2-3.7,2.3c-0.3,1.6-1.4,2.4-2.9,1.9c-3.3-1.1-6.8,0.3-10.1-1.1\n                            C859.6,251.6,857.8,247.5,858,243z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#353336",
                  d:
                    "M861,283c0,1.6,0,3.3,0,4.9c-1.4-3.2-1.8-6.5-2.2-9.8c-0.7-6.2-5.5-9-10.9-10.7\n                            c-1.6-0.5-4.4-3.9-4.7,2.1c-1.4-2.1-1.2-4.4-4.1-3.4c-4.7,1.6-9.4-3-14.2-0.4c-1.9,1.1-3.6,1-5.2-0.2c-1.6,1.8,0.7,5-2.8,5.5\n                            c-0.8-0.7-0.9-1.7-0.8-2.7c2.2-8.3,6.8-11.2,15.2-9.5c4.6,0.9,9.3-0.2,13.9,0.4c5.1,0.7,10,1.8,12.7,6.9\n                            C859.5,271.6,860.6,277.2,861,283z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C595A",
                  d:
                    "M670,150c-0.3,2.4-2.2,1.9-3.7,2c-1.5,0.1-3-0.1-3.3,2c-1.1,1.2-2.9-0.2-4,1.1l0,0\n                            c-1.9,1.2-4.2-0.4-6.1,1c-6,1.3-12,2.6-18,3.9c-1.8,1.3-4.2-0.2-6.1,1l0,0c-12.4,2.2-24.6,5.5-37.2,7c-0.8,0-1.6,0-2.4-0.2\n                            c-1-0.3-1.8-0.7-1.7-2c0.2-1,1.1-0.9,1.8-1.2c2.4-1,5.1-0.6,7.5-1.5l0,0c3.4-0.6,6.5-2,10-2c9.7-3.2,19.9-4,29.9-5.9\n                            c7.2-1.4,14.6-2.1,21.9-3.6C662.5,150.8,666.4,151.7,670,150z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#413F41",
                  d:
                    "M860,256c1.7-2.2,5.4,1.4,6.5-2.4c4.2,5.3,5.2,1,6.8-2.2c0.1-0.2,2.6-0.3,3.1,0c4.3,2.5,8.6-1.2,13,0.1\n                            c1.5,0.5,4.3,0.3,5.5-2.1c1.8-3.7,2.8-0.4,4,0.5c1.7,1.2,2.1,2.8,1.6,4.7c-6.3,5.6-13.8,6.5-21.7,5.2c-3.6-0.6-6.8-0.5-9.8,1.9\n                            c-2.4,1.9-5.4,0.2-8.1,1.2C860.7,260.6,860.4,258.3,860,256z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#595658",
                  d:
                    "M851.1,220.9c1.7,6.6,2.6,13.3,3,20.1c-1,0.3-1.6-0.2-2-1c-1.7-3.2-0.7,0.3-0.8,0.4\n                            c-1.4,2.1-3.7,3.3-5.6,4.7c-2,1.5-4.4,2.5-6.9,2.6c-6.7,0.3-13.3,1.4-20.1,0.7c-1.8-0.2-3.2-0.7-4.1-2.2\n                            c-0.3-0.7-0.4-1.4-0.3-2.1c1.6-3.5,6.6-5,11.3-3.2c5.3,2,10.5,1.3,15.5-0.7c4.1-1.6,3.6-6.4,5.1-9.7c0.6-1.6,0.5-3.1,0.2-4.8\n                            c0-0.5,0.1-1,0.3-1.4c0.2-0.3,0.5-0.7,0.7-0.6C850,224.6,850.4,222.5,851.1,220.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3A3D",
                  d:
                    "M858,266c0,0.2,0,0.3-0.1,0.5c0,0.2-0.1,0.3-0.2,0.5c-5.3-7-12.7-7.4-20.6-6.5c-1.7,0.2-4.2,0.7-5.2-0.2\n                            c-4.2-3.6-7.5,2.9-11.4,0.5c-0.8,1.4-1.7,2.7-2.4,4.2c-0.5,1,0,2.4-1.2,3.1c-0.9-0.2-1.4-0.8-1.8-1.6c-0.3-4-2.2-7.8-0.9-11.9\n                            c0.2-0.5,0.6-0.8,1.2-0.8c1.4,1.5,2.6,2.1,5.1,1.3c5.9-1.7,12.2-0.4,18.3,0.1c2,0.2,3.9,0.2,5.8-0.5c7-2.3,8.8-1.6,12.3,4.3\n                            C858.8,261.1,857.7,263.6,858,266z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#454345",
                  d:
                    "M857,258.9c-0.2,0.5-0.2,2.2-1.2,0.6c-3.3-5.5-5.4-6.3-11.4-3.4c-1.7,0.8-3,0.6-4.7,0.4\n                            c-6.2-0.6-12.3-1.7-18.5-0.4c-0.4,0.1-0.9-0.5-1.6,0c-3.1,2.2-3.2,2.2-3.6-2c2.3-3,5.3-3.9,9.1-3.9c5.9,0.1,11.7-1.5,17.7-0.7\n                            c2.3,0.3,3.8-1.8,5.5-2.9c3.2-2.1,4.6-1.6,5.9,2c0.6-0.3,0.2-0.9,0.2-1.3c0.1-0.5,0.2-1,0.6-1.3C857.2,250,855,254.8,857,258.9z\n                            "
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#323234",
                  d:
                    "M903,267c-0.7-0.3-2.1-0.6-2.1-0.9c-0.2-4.6-3.4-1.3-3.7-1c-1.6,2.1-2.9,2.1-5,0.7\n                            c-2.2-1.5-3.7,0.6-3.9,2.2c-0.2,2.5-1.9,2.4-3.4,2.4c-7.5,0-14.9,0.8-21.9,3.5c-0.3-2-0.7-4-1-6c7.6-2.4,14.9-6.3,23-5.9\n                            c5.7,0.3,10.3-0.9,14.3-4.8c0.6-0.6,1.4-0.8,2.2-0.1C902.9,260.4,905.3,263.3,903,267z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#504E50",
                  d:
                    "M855,246c0,1.3,0,2.6,0,4.6c-2.1-4.5-4.5-5.4-6.7-2.5c-2.3,3.1-5.4,3.5-8.3,2.8\n                            c-6.2-1.5-12,2.2-18.1,0.6c-2.7-0.7-3.2,3.5-6,2.6c-0.3,0-0.6,0-1,0c-1.5-1.3-1.3-3.1-1.3-4.9c0.1-1.2,0.3-2.3,1.3-3.1\n                            c2.2,2.9,6.9,2.1,8,1.7c5.5-2.1,11.1,0.3,16.6-1.2c4-1,6.6-3.8,10-5.5c2-1-1-4,1.9-5.3c0.9,1.6,0.6,4.1,2.6,5.3\n                            C855.5,242.4,854.8,244.3,855,246z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#39373A",
                  d:
                    "M901,257c-4.7,7-11.7,6.5-19,6.5c-3.8,0-7.6,1.3-11.2,3.3c-2.4,1.3-5.8,0.8-8.8,1.2c-1-1.5-1.1-3.3-1-5\n                            c1.1-1.2,1.5-4.2,4.2-1.5c1.1,1.1,2.5,0.4,3.5-0.6c2.5-2.4,5.2-2.9,8.8-2.3c6.5,1,13.4,2.2,19.2-2.9c0.7-0.6,2.2-0.4,3.3-0.5\n                            C900.9,255.4,901.5,255.9,901,257z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322F30",
                  d:
                    "M859.9,138.1c-3.2,0-6.4,0.2-9.5-0.1c-4.4-0.5-6.3,1.1-5.5,5.5c0.1,0.8,0,1.7,0,2.5\n                            c-1.7-4.2-1-8.7-1.9-13c0.3,0,0.6,0.1,0.9,0.1c4.4,2.5,9.3,1.2,13.9,1.5c17.1,0.1,34.2,0,51.3,0.1c2.4,0,5.1-0.8,6.8,1.8\n                            c-1.5,2.5-4,2-6.2,2c-9.1,0.1-18.2-0.1-27.3,0.2c-1.3,0-2.6,0.3-3.9,0.5C872.4,139.2,866.1,140.9,859.9,138.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262325",
                  d:
                    "M591,167.1c10.2-1.8,20.4-3.5,30.6-5.5c2.5-0.5,4.9-0.6,7.4-0.6c0,0.4,0,0.7,0,1.1\n                            c-8.1,0.8-15.8,4.2-24,4c-3.3,2.4-7.5,1.5-11,3c-3.3,0.5-6.6,1.5-10.1,0.9C584.9,165.4,588.8,168.4,591,167.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M659,155.1c1-1.6,2.6-0.9,4-1.1c18.6-2.7,37.2-6.1,56-6.9c-5.3,1-10.5,2.4-15.9,2.8\n                            c-12.8,1.1-25.5,3.3-38.2,4.9C663,155,661,155,659,155.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0F0D0E",
                  d:
                    "M781.1,145c-3.3-0.5-6.9,1-10.1-1c10.3-0.9,20.7-1.2,31-2.8c1.3-0.2,2.7-0.4,4-0.1\n                            c3.5,0.7,0.6,1.8,0,2.7c0,0,0,0.3,0,0.3C797.8,145.7,789.5,147.9,781.1,145z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#646060",
                  d:
                    "M851.1,220.9c1.3,4-2.8,2.7-4.1,4.1c-1.9,0.1-1.6-0.9-1-2c0.8-3.1,1.3-6,0.5-9.3\n                            c-0.6-2.5,0.3-5.1,2.5-6.8C850.4,211.5,850.8,216.2,851.1,220.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484445",
                  d:
                    "M809,146.9c2,11.3,0.7,22.7,1,34.1c-0.3,0.1-0.5,0.1-0.8,0.2c-0.5-0.3-0.8-0.7-1.1-1.3\n                            c-0.6-5-0.7-10.1-1.4-15.1c0.9-1.8,0.3-4,1.2-5.8c0.7-5.1-1.4-10-0.9-15C807.6,145,808.3,146,809,146.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M779,141c3.2-2.3,7.1-1.2,10.6-1.5c6.8-0.5,13.6-2.6,20.5-1.5c-2.1,1.5-4.7,1.5-7,1.7\n                            C795.1,140.5,787,140.7,779,141z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M755,143.1c7.9-2.3,16-2.1,24-2C771.1,142.5,763.1,143.1,755,143.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M719,147c4.2-1.5,8.5-2.1,13-2.1c1.4-0.9,3-0.3,4.5-0.4c0.2,0.2,0.4,0.3,0.6,0.5\n                            C731.1,146.4,725.1,147.2,719,147z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M737,144c5.7,0.3,11.4-1.8,17.1-0.9c-5.6,1.2-11.3,2-17.1,2c0,0-0.1-0.1-0.1-0.1\n                            c-0.3-0.2-0.4-0.4-0.3-0.6C736.8,144.1,736.9,144,737,144z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M834,139.1c-3.5,2-7.4,0.5-11,0.9C826.5,138.1,830.3,139.4,834,139.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M815,138c3.5-2.1,7.4-0.5,11.1-0.9C822.5,138.9,818.7,137.6,815,138z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262325",
                  d:
                    "M629,161c1.8-1.7,4-0.8,6.1-1C633.3,161.8,631,160.7,629,161z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M653,156.1c1.8-1.9,4-0.8,6.1-1C657.2,156.7,655,155.8,653,156.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M814,140.1c-1.4,1.5-3.3,0.7-4.9,0.9C810.4,139.4,812.3,140.2,814,140.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5253",
                  d:
                    "M591,167.1c-2.1,1.7-5.4,0.4-7.1,2.9c-0.3,0-0.6,0.1-0.9,0.2c-2.5,2-5.9,1.5-8.5,3\n                            c-2.9,0.3-5.7,1-8.6,1.5c-0.5,0.2-0.9,0.3-1.4,0.3c-1.3,0.1-2.5,0.2-3.5-0.9c5.5-2.7,11.7-3.2,17.4-4.9c1.2-0.4,2.5-0.4,4.6-2.1\n                            c-2.7,0-4.4,0-6.1,0c6.4-2.7,13.1-3.7,20-4c-2.9,0.9-5.7,1.7-8.5,2.6C588.6,167.6,590.6,165.7,591,167.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M743,142c-11.6,1.1-23.2,2.2-34.7,3.5c-1.3,0.1-2.2,0-3.3-0.5c-0.4,0.5-1,0.6-1.6,0.4\n                            c-0.1-0.1-0.3-0.3-0.4-0.4c3.2-2.2,7-0.8,10.5-1.5c7.1-1.4,14.3-1.7,21.5-2.5c1.7-0.2,3.4,0.3,5-0.9\n                            C742.2,138.4,742.7,140.3,743,142z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5253",
                  d:
                    "M607,161c-3.1,1.9-6.5,2.1-10,2C600.2,161.7,603.1,158.9,607,161z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C595A",
                  d:
                    "M682,149c-3.6,0.9-7.1,3.3-11,1c3.2-1.8,6.7-0.7,10-1C681.3,148.6,681.7,148.7,682,149z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M701,147c-2,0-4,0-6,0c-0.3,0.4-0.7,0.4-1,0c2.5-2.9,5.9-1.8,9-2l0,0C703.6,146.9,701.5,146.1,701,147z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5253",
                  d:
                    "M577,167c-1.6,1.9-3.8,2.1-6,2C572.6,167.1,574.8,166.9,577,167z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M682,149c-0.3,0-0.7,0-1,0c1-3.7,3.5,0.1,5-1C685,149.5,683.4,148.8,682,149z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C595A",
                  d:
                    "M694,147c0.3,0,0.7,0,1,0c-1.8,1.8-4,0.7-6,1C690.4,146.3,692.3,147.2,694,147z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5A58",
                  d:
                    "M857,136c-3.3,0-6.5,0-9.8,0.1c-2.3,0.1-3.4-0.7-3.3-3c0.7-0.5,1.4-1.4,2-1.3c13.7,1.2,27.3-1.5,41-0.7\n                            c3,0.2,6.1,1.2,9.1,0c3.4,4.4,8,1.1,11.9,1.3c11.2,0.6,22.4,0.3,33.7,1.3c5.8,0.5,11.7-0.1,17.4,1.3c1.4,0.3,3.8-0.7,3.7,1.7\n                            c-0.1,1.6-2.2,1.4-3.7,1.6c-1,0.1-2,0.1-2.9,0.1c-2.3,0-4.5,0.1-6.8-0.4c-1.9-0.7-3.9-0.7-5.9-0.6c-0.6,0-1.2,0-1.8,0\n                            c-26.4-1.7-52.8-2.4-79.3-1.9C860.6,135.5,858.8,135.1,857,136z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575354",
                  d:
                    "M1057,151c0.3,2.5,2.2,1.9,3.8,2c4,0.2,5.5,0.7,9.5,3.3c-10.8-0.3-20.7-5.7-31.4-6.3\n                            c-1.5,1.5-3.3,1.4-5.1,1c-8.6-1.7-17.1-3.6-25.7-4.9c-1-0.2-1.9-0.6-2.4-1.5c-0.2-0.6-0.1-1.1,0.1-1.7c3.2-2.2,6.5-0.4,9.5,0.2\n                            c6.3,1.1,12.6,2.3,18.6,4.4c1.4,0.5,2.9,0.7,4,0.3c-1.5-0.5-4,1.2-4.9-1.8c5.7-0.8,11.2-1,16,3c2.1-0.1,4,0.6,6,1\n                            C1055.7,150.3,1056.3,150.7,1057,151z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5A58",
                  d:
                    "M1033,146c1.3,1.9,3.7,0.3,5,2.6c-10.7-1.9-21.4-3.7-32-5.6c-2.6,2.2-5.2,0.6-7.8,0\n                            c-1.7-0.8-3.6-0.7-5.4-0.7c-3.3,0.2-6.5-0.7-9.6-1.3c-2.4-0.9-4.8-0.6-7.3-0.6c-3.2-0.1-6.4-0.2-9-2.4c0.5-2.4,2.5-2,4-1.9\n                            c9.5,0.8,19,1.7,28.5,2.6c7.4,0.7,14.5,2.7,21.7,4.3C1025,144,1029,145,1033,146z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575354",
                  d:
                    "M1021,143c-7.5-0.1-14.5-3-21.9-3.5c-9.8-0.7-19.6-2.5-29.4-2.5c-1,0-2,0-2.7,1c-4.9,2.3-8.4,2-11-1\n                            c2,0,3.9,0,6.6,0c-1.6-0.9-2.6-1.5-3.6-2c2.8-2.4,5.7-0.2,8.5,0c12.1,1,24.3,1.7,36.4,3.1c5.4,0.7,10.6,3.1,16.2,3.3\n                            C1020.4,141.4,1020.7,142.4,1021,143z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575352",
                  d:
                    "M1055,150c-2.1,0.4-4.2,0.4-6-1C1051.4,147.1,1053.1,148.9,1055,150z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#201E1E",
                  d:
                    "M484,204.1c14.5-6.3,28.3-13.8,43.4-18.9c10.8-3.7,21.3-8,32.5-10.2c1.5-1.1,3.6,0.3,5.1-1l0,0\n                            c1-0.7,1.8-0.4,2.4,0.5c0.2,0.5,0.2,0.9,0.1,1.4c-0.5,1.3-1.3,2.5-2.4,3.4c-0.4,0.2-0.9,0.2-1.4,0.2c-2.1-0.5-4.1-0.6-6.3,0\n                            c-8.7,2.4-17.5,4.7-26,7.8c-1.7,0.6-3.3,1.4-4.6,2.9c-3.5,0.5-6.7,1.5-9.2,4.1c-7,0.1-12.3,4.5-18.1,7.4c-4,2-7.9,4.3-12.2,5.7\n                            c-1.3-0.6-2.4-1.4-3.4-2.2C483.6,204.8,483.7,204.4,484,204.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302A2B",
                  d:
                    "M484,204.1c0,0.3,0,0.6,0,0.9c0.3,0.3,0.5,0.8,0.6,1.2c-0.1,0.2-0.1,0.5-0.2,0.7c-0.2,0.4-0.6,0.7-0.9,1\n                            c-7.4,4-14.8,8.2-22,12.5c-2.5,1.5-4.9,3-6.8,5.2c-1.2,1.2-2,0-2.9-0.5c-0.6-0.7-1.2-1.3-1.8-2c4.4-3,8.8-6.1,13.1-9.1\n                            C470.5,211.7,476.9,207.2,484,204.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292728",
                  d:
                    "M565,174c-1.4,1.7-3.4,0.8-5.1,1c0.4-0.3,0.7-0.6,1.1-0.9C562.3,174,563.7,174,565,174z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151213",
                  d:
                    "M1006,144c11,2,21.8,4.9,33,6c8.3,4.2,17.7,4.7,26.4,7.8c6.9,2.5,14,4.1,20.7,7.1\n                            c11.8,4.7,23.6,9.3,35.3,14c0.6,0.2,1.1,0.7,1.6,1c0.1,2.1-1.6,1.9-2.9,2.1c-7.8-1.8-15-5.4-22.5-8.1\n                            c-8.9-3.3-17.9-6.2-26.9-9.1c-8.3-2.9-17-4.6-25.5-7c-24.6-6.2-49.6-10.1-74.8-12.5c-9.9-0.9-19.9-1.7-29.9-2.3\n                            c-1.3-0.3-2.6-0.6-3.9-0.6c-17.3,0.7-34.6-1.5-51.9-0.8c-2.4,0-1.7,1.8-1.8,3.2c-0.1,1.9,0.5,4.1-2.3,4.6\n                            c-2.2-0.9-1.9-2.9-2.1-4.7c0-1.7,0.1-3.5-0.2-5.2c0-0.5,0.1-1,0.4-1.4c3.1-1.9,6.6-0.9,9.9-1c9.1-0.3,18.1-0.1,27.2-0.1\n                            c0.3-0.1,0.6-0.1,0.9-0.2c7.4-0.6,14.8,0.6,22.3,0.2c11.3,0.2,22.4,2,33.6,2.8C983.9,140.6,995,142,1006,144z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544D4B",
                  d:
                    "M1139,184c-1.9-0.7-4.4-0.2-5-3C1136.1,181.3,1137.9,182,1139,184z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M792,136c-5.5,2-11.4,1.5-17,2.1c-8.8,1-17.7,1.8-26.5,2.8c-1.5,0.2-3,0.1-4.5,0.1\n                            c0.3-0.5,0.5-1.5,0.9-1.6c6.8-0.9,13.6-1.9,20.4-2.4C774.2,136.5,783.1,136.3,792,136z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M828,134c-5.2,1.8-10.7,0.7-16,1c0.3-0.5,0.7-1.6,0.9-1.6C817.9,134.9,823,133,828,134z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#545252",
                  d:
                    "M803,135c-3.1,2.9-6.6,1.6-10,1C796.2,134,799.7,135.4,803,135z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2E",
                  d:
                    "M804,675c-1.5,1.6-3.4,1-5.2,1c-15.8,0.1-31.6-0.1-47.4,0.1c-14.5,0.2-29,0.6-43.5,0.9\n                            c-0.6-0.9-0.6-1.7,0.4-2.4c6.3-0.2,12.6,0,18.9-0.1c19.1,0,38.2,0,57.3,0c1.8,0,3.7-0.5,5.4,0.5c0.3,0,0.7,0,1,0\n                            C795.3,674.2,799.7,674.2,804,675z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#443F3C",
                  d:
                    "M839,673c12,0,24,0,35.9-0.1c8.9,0,17.9,0,26.8,0c0,0.2,0,0.4,0.1,0.7c-0.8,0.1-1.6,0.3-2.4,0.4\n                            c-18.7,0-37.5,0-56.2,0C841.8,674,840.2,674.4,839,673z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#474140",
                  d:
                    "M790,675c-21,0-42,0-63,0c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3c20,0,40,0,60-0.1\n                            C788.1,674.1,789.3,673.8,790,675z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463D3D",
                  d:
                    "M917,672.1c19.7,0,39.3,0,59-0.1c-1.5,1.6-3.4,1-5.2,1c-16.3,0.1-32.6,0-48.9,0c-1.5,0-2.9,0.2-4.4,0.6\n                            C916.1,674,916.9,672.7,917,672.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M809.7,677.7c4.5-2.1,8.9-1,12.9-2.4c1-0.3,1.3,0.2,1.5,0.6c0.6,1.5-1,1.7-1.7,1.7\n                            C818.3,677.8,814.2,677.7,809.7,677.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M818,673c6,0.5,12.1-1.2,18,1c-4.3,0.6-8.8-1.2-13,1C821.5,673.8,818.2,677.5,818,673z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M892,681c-4.9,2.2-10,0.4-15,1c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c0.7,0,1.3,0,2,0\n                            C883.3,681,887.7,681,892,681z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#474140",
                  d:
                    "M804,675c-4.3,0-8.7,0-13,0c4.5-2.1,9.3-0.5,14-1C804.7,674.3,804.3,674.7,804,675z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463D3D",
                  d:
                    "M977,672c1.3,0,2.6,0,4.5,0C979.5,673.5,978.2,673.2,977,672C977,672,977,672,977,672z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#554E4F",
                  d:
                    "M727,674.1c0,0.3,0,0.6,0,0.9c-6.3,0-12.7,0.1-19,0.1c-5,1.4-10,1.7-14.9-0.1c0.7-0.3,1.3-0.7,2-1\n                            C705.7,674,716.3,674,727,674.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#867F7B",
                  d:
                    "M1996.9,560c-0.3,0.3-0.7,0.6-1,0.9c-0.7,1.1-1.8,1.9-3.1,2.1c-3.6,0.9-6.3-1.5-9.3-2.7\n                            c-2.9-1.1-5.7-2.6-8.7-3.6c-0.9-0.7-1.7-1.5-0.5-2.6c0.6-0.4,1.2-0.8,1.8-1.2c1.9-0.8,3.6,0.3,5.4,0.3c4.2,1,8.5,1.6,12.5,3\n                            C1995.5,556.8,1998.3,556.9,1996.9,560z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#443D3A",
                  d:
                    "M1989,566c-4.1,1.6-7.2-1.2-10.8-2.2c-3-0.9-5-3.2-8.1-4.2c-3.2-1-1.4-2.8,0.9-3.6\n                            c4.6,0.5,7.8,4.5,12.4,5c2.4,1.1,4.9,2,7.5,2.7C1992,565.8,1989.5,565.1,1989,566L1989,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4443",
                  d:
                    "M1980.9,554.1c-1.6-0.4-3.3-0.7-4.9-1.1c5.6-3.5,11.8-3.2,18.5-2.7c-2.5,2.3-4.7,1.6-7.2,1.2\n                            c-1.3-0.2-4.3-2.7-4.4,1.6c-0.1,0.2-0.2,0.4-0.3,0.6C1982.2,554.1,1981.7,554.6,1980.9,554.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544C47",
                  d:
                    "M1983,562c-4.7-0.6-8.3-3.4-12.1-6c0.7-1.3,1.6-2.1,3.2-1.8c-0.1,0.8,0,1.5,0.8,1.9\n                            C1977.5,558.3,1982.1,557.6,1983,562z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4443",
                  d:
                    "M2002,555c-1,0.3-2,0.7-3,1c-3.7,2.4-6.9,0.2-10.1-1.3c0-0.2,0.1-0.5,0.1-0.7\n                            C1993.3,555.1,1997.8,553,2002,555z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544A4A",
                  d:
                    "M2017,554c-2.1,1.9-4.7,0.7-7,1c1.4-1.6,3.3-0.7,5-1C2015.6,554,2016.3,554,2017,554z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4443",
                  d:
                    "M1983,553c2,0.3,4.2-0.8,6,1l0,0C1986.9,554.4,1984.6,555.8,1983,553L1983,553z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#24201F",
                  d:
                    "M1991,568c0.3,0,0.6,0,1,0c2.9-0.9,5.7-2,8.7-2.9c1.5-0.6,2.9-1.3,4.5-1.1c2.1,0,4.2-0.5,6.3-0.9\n                            c5.4-1,10.9-1.7,16.4-2.6c1.2-0.2,2.3-0.4,3.2,0.6c0,0.8,1.6,2.1,0,2.3c-7.3,1.2-14.2,3.5-20.6,7.3c-1.9,1.1-4.5,0.2-6.7,1.5\n                            c-6.1,3.7-10.8,9-16.2,13.5c-3,2.5-5.9,4.8-7,8.8c0,0.1-0.3,0.3-0.4,0.3c-5.3-1.9-6.6,3.8-10.2,5.3c0.3-1.2-4.4-4.3,1.4-3.7\n                            c0.8,0.1,2-2.4,3-3.7c-1.5-1.2-3-0.5-4.4-0.7c0.7-1,1.3-2,2-3c3.9,1.4,5.1-1.6,6.6-4.1c2.7-4.9,7.5-8.5,9.5-13.9\n                            C1989,570,1990,569,1991,568z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#161212",
                  d:
                    "M1988,571c1.5,0.1,1.5,0.7,0.7,1.8c-3,4.3-5.8,8.6-9.7,12.2c-1.3,0.7-2.2-0.1-3-1\n                            C1980.3,579.9,1983.3,574.7,1988,571z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1D1818",
                  d:
                    "M1976,584c1,0.3,2,0.7,3,1c-1.2,5.7-3.4,7-7,4C1974,587.9,1974.6,585.6,1976,584z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#342E2E",
                  d:
                    "M1989,566c0.7-0.7,1.3-1.4,2-2c-0.5-2,1.5-1.1,2.1-1.8c0.9-0.4,1.8-0.9,2.8-1.3\n                            c-0.1,3.9-3.6,3.8-5.8,5.1C1989.7,566,1989.3,566,1989,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AFA9A5",
                  d:
                    "M1062,112c-3.2,0.1-6.2-0.3-9-2c2.5-3.1,6.2-3.5,9.8-0.8C1064.2,110.3,1062,111,1062,112z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B312F",
                  d:
                    "M1135,141c-5.9-0.6-10.9-4-16.7-5.3c-1.4-0.3-2.8-0.7-4.3-0.8c-4.6-3-9.9-4.2-15-6\n                            c1.3-2.9,4.2-2.1,6.5-2.6c2.8-0.6,5.6-0.4,8.4-0.4c8.1,0.2,16.1-1.7,24.2-0.9c1.6,0.1,3.3-0.5,4.8,0.8c-3.3,3-7.4,0.7-11,1.9\n                            c-2.1,0.5-4.2,0.4-6.5,0.5c3.1,1.7,6.5,2.2,9,4.6c3.7,1.9-0.9,4.8,0.8,6.9C1135.3,140.2,1135.3,140.6,1135,141z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ABA8A3",
                  d:
                    "M1130.7,126.9c4-1.3,8.2-0.5,12.2-1c5.7,0.1,11.4,0.2,17.1,0.3c10.4,2.2,20.4,5.9,30.8,7.9\n                            c4.7,1,8.9,3.4,13.4,4.9c1.5,0.5,3.1,1.2,3.1,3.3c-1.1,2.1-2.8,1.2-4.3,0.7c-5.1-1.9-10.3-3.5-15.7-4.3\n                            c-5.6-0.8-10-4.7-15.9-4.9c-6.8-0.3-13.5-0.7-20.2,0.1c-1.3,0.3-2.6,0.3-3.9,0.1c-1.7-0.6-3.8-0.2-5.3-1c-1.6-0.9-2.8-2-5-1.5\n                            c-1.7,0.4-3.5-0.7-4.1-3.3c4.4-0.9,8.8-0.3,12.6-0.5C1140.9,126.9,1135.8,128.5,1130.7,126.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B9893",
                  d:
                    "M1191,135c-8.6-2.1-17.8-2.1-25.4-7.4c-1.7-1.2-4,0.2-5.6-1.4c1-0.1,2-0.2,3-0.3c2,0.1,3.9,0.2,5.9,0.3\n                            c4,0.7,8,1.4,12,2c1.5,2.1,4,2.1,6,3.2C1188.6,132.2,1191,132.3,1191,135z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534647",
                  d:
                    "M1114,126c-4.8,1.8-10.2,0.7-14.9,3c-1.1,0-2.3,0.2-3-0.9c2-2.6,5.5-1.7,8-3.1c1.9,0.9,3.8-0.5,5.7-0.1\n                            C1111.1,125.2,1112.9,124.5,1114,126z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#928E8A",
                  d:
                    "M1191,135c-2.1-2.3-5.1-2.8-7.8-3.8c-1.5-0.6-3.5-0.6-2.3-3.1c2.4,0.3,4.7,0.6,7.1,0.9\n                            c2.3,0.7,4.7,1.4,7,2.1c0.7,2.8,2.8,3.4,5.3,4.4c7.2,3,15.3,4.1,21.7,9.1c1.8,1.5,4.7,1.8,6.1,1.7c4.5-0.3,1.7,2.2,2,3.6\n                            c-1.5,1-2.8,0.2-4.3-0.2c-5.7-2.7-11.8-4.4-17.7-6.8c-0.4-0.3-0.8-0.6-1.1-0.9C1202.1,138.7,1196.2,137.7,1191,135z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A2A09A",
                  d:
                    "M1278,167c0.3,0.7,0.7,1.3,1,2l-0.1,0c-2.4,1.6-4.4-0.2-6.5-0.8c-1.9-0.5-3.5-2-5.4-2.3\n                            c-5.8-0.9-11.5-2.3-17-4.2c-0.5-0.1-0.9-0.3-1.3-0.6c-0.9-2.1-1.8-4-4.5-4.5c-1.2-0.2-2.4-1-2.4-2.6c0.4-0.4,0.8-0.5,1.2-0.1\n                            c0.7,0,1.3,0,2,0.1c5.6,0.6,10.1,4,15.2,5.8C1266.2,162,1272.8,162.9,1278,167C1278,167,1278,167,1278,167z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#928E8A",
                  d:
                    "M1278,167c-11.1-4-22.7-6.8-33-13c1.4-1.8,2.9-0.3,4,0.2c8.9,3.6,18.4,5.8,26.8,10.6\n                            C1276.8,165.4,1278,165.5,1278,167z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ACAAA4",
                  d:
                    "M1242,154c0.8,1.1,2.1,1.8,3.3,1.9c3.5,0.2,3.8,2.4,3.7,5.1c-2.5,0.1-3.6-2.8-6-2.7\n                            c-5.4-1.4-10.3-4.1-15.6-5.8c-1.6-0.5-3.5-1.1-3.5-3.5c0.7-0.5,1.4-0.5,2.1,0.1c1.3,0.3,2.7,0.6,4,0.9c0.3,0,0.6,0.1,1,0.1\n                            C1235.2,149.9,1238.9,151.1,1242,154z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#928E8A",
                  d:
                    "M1242,154c-3.7-1.4-7.3-2.7-11-4.1c4.5-2.8,6.8-2,12,4C1242.7,154,1242.3,154,1242,154z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A6A7A0",
                  d:
                    "M1469,274c-2.7,0-5.3,0-8,0c-1.5-5.3-3.2-9.9-8.7-13.3c-9.7-6-19.9-11.1-29.7-16.9\n                            c-1.1-1.7-2.3-3.3-4.3-4c-0.4-0.2-0.8-0.4-1.2-0.7c-5.4-2-9.9-5.7-15.3-7.8c-1.9-0.8-3.7-1.6-4.1-3.8c0.1-0.8,0.6-1.3,1.3-1.5\n                            c1.3,0.3,2.7,0.7,4,1c11.5,5.4,22.6,11.8,33.3,18.6c1.1,0.7,2.5,0.9,3.7,1.4c4.2,3.9,9.7,5.7,14.4,8.9c5,3.4,10.3,6.4,15.2,10\n                            C1473.1,268.5,1472.6,272.3,1469,274z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9E9F98",
                  d:
                    "M1440,247c-1,0.4-1.9,1.1-3.2,0.3c-8-5-16-9.7-23.9-14.8c-3.2-2-7.9-1.2-9.8-5.5c4.7,0.2,8,3.8,12.2,5.3\n                            c0.9,0.3,1.8,0.5,2.7,0.7c6.5,4,12.9,8,19.4,11.9C1438.4,245.5,1439.5,245.9,1440,247z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A7A7A0",
                  d:
                    "M1399,226c-0.3,0.3-0.7,0.7-1,1c-3,2.1-4.9-1.2-7.4-1.6c-5.6-2.9-11.5-4.9-17-8\n                            c-7.7-4.6-16.2-7.7-24.2-11.7c-12-6-24.4-11.2-36.7-16.6c-11.2-4.9-22.1-10.6-33.4-15.5c-7.5-3.3-14.7-7.3-23.1-8.2\n                            c-2.6-0.3-5.7-0.8-6.3-4.5c1.3-0.8,2.6-0.4,3.8,0.1c8.2,3.2,17.1,4.2,25.2,7.9c12.5,5.1,24.3,11.5,37,16v0c5.8,3.2,12.1,5,18,8\n                            c5.7,2.7,11.3,5.3,17,8c8.7,5.7,18.5,9.4,27.8,14c4.1,2,8.1,4,12.2,6c2.4,1.9,5.4,2.6,8,4C1399,225.3,1399,225.7,1399,226z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9E9F98",
                  d:
                    "M1399,225c-3.5,0.3-6-1.4-8-4C1393.9,222,1397.2,222,1399,225z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#989792",
                  d:
                    "M1334,193c-6.3-1.9-12.9-3.4-18-8c3.6,0,6.5,2.7,10,3C1328.3,190.2,1332.1,190.1,1334,193z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#272123",
                  d:
                    "M693.1,675c5,0,9.9,0.1,14.9,0.1c0,0.6,0,1.3,0,1.9c-6.7-0.2-13.4,0.8-20-1.4\n                            C689.6,674.5,691.4,675.3,693.1,675z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3434",
                  d:
                    "M877,681c0,0.3,0,0.6,0,1c-6,0-12,0-18,0c1.7-1.5,3.3-1.8,5.8-1.2C868.7,681.6,872.9,681,877,681z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2828",
                  d:
                    "M847,682c-0.9,0.6-1.9,1.2-2.8,1.7c-1.7-0.3-3.4-0.5-5.2-0.8c-0.3-0.2-0.4-0.4-0.3-0.7\n                            c0.1-0.2,0.2-0.3,0.3-0.3C841.7,682,844.3,682,847,682z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3434",
                  d:
                    "M839,682c0,0.3,0,0.7,0,1c-2.3,0-4.6,0-6.8,0c0-0.3,0-0.7,0-1C834.4,682,836.7,682,839,682z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#242224",
                  d:
                    "M1296.6,302.8c-4.2,0.1-8.4,0.1-12.6,0.2c1.4-3.4,4.4-0.1,5.7-1.5c-4.4-1.1-9,1.7-14,1.6\n                            c-3.5,0-5.1-1.2-5.7-4.6c-1.1-6-2.2-12-5.6-17.4c-1.6-2.5-3.3-3.4-6-1.9c-2.3-1.8-1.2-3.9-0.5-5.9c0.8-2.5,0.5-4.5-1.6-6.2\n                            c-1.7-1.6-4.5-2.1-4.4-5.2c0.6-1.1,3.1,0.8,2.8-1.7c5.5-2.1,7.7-1.2,9.2,4.2c1,3.8,2.1,7.7,3.4,11.4c1,2.9,3.2,4.3,5.9,4.5\n                            c2.5,0.2,4.9-0.4,6.9,1.7c0.4,0.4,1.4,0.8,1.6-0.1c1.2-5.8,5.6-2.2,8.4-2.7c2.9-0.5,6.6-1.4,8.7,2.7c1.4,2.8,4.1,1,6.3,1\n                            c2.6,0.1,4.2,1.5,5.3,3.7c0.5,1.6-1.4,3.7,1.3,4.7c1.6,0.6,3.4,1.3,2.5,3.5c-0.8,1.9-2.2,3.3-4.5,3.5c-1.3,0.1-2.5-0.8-3.9-0.1\n                            c3.4,0.2,6.6-0.2,9.9,0c2.6,0.1,3.6,1.1,1,3.1c-1.7,0.2-3.4-0.2-5.1,0.4c-1.2,0.1-2.4,0.2-3.6,0.2\n                            C1304.3,303.2,1300.4,301.8,1296.6,302.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#201E1E",
                  d:
                    "M1298,269c10.3,6.2,20.7,12.4,30.5,19.5c2.6,1.9,5.3,3.3,8.5,3.6c3.3,2.3,6.7,4.6,10,6.9\n                            c-1.8,0.3-3.5,0.6-5.3,0.9c-1.6,0.1-3.2,0.2-4.7,0.3c-2,0.8-4.1,0.2-6.2,0.4c-1.7-0.2-2.1-2-3.4-2.7\n                            c-21.2-14.3-42.5-28.6-64.5-41.7c-1.4-0.8-2.9-1.7-3.4-3.4c0.5-3-1.7-1.7-2.9-1.8c-2.2-0.5-4.3-1-4.6-3.8c0.3-1,2.7-1.7,0.3-2.9\n                            c-1.5-0.8-2.9-1.5-4.2-2.7c2.5,0,4.4,1.2,6.6,2.4c7.5,4.4,15.1,8.7,22.1,13.9c1.2,0.9,2.7,1.3,4.2,1.2l0,0c2.2,1.6,4.4,3.1,7,4\n                            l0,0C1291.3,265.1,1294.5,267.2,1298,269z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151111",
                  d:
                    "M1258,279c1.7-0.5,1.7-2.3,2.8-3.9c4.8,5,8.4,10.4,9.1,17.3c1,9.4,3,10.9,12.3,9.1\n                            c3.5-0.7,7.1-0.4,12-0.7c-4.1,2.1-7.6-0.2-10.2,2.2c-4.3,0.4-8.6,0.7-12.9,1.1c-2,1.4-4.3,0.7-6.4,0.8c-2.9-0.8-4.6-4.6-8.3-3.6\n                            c-1.7-0.1-3.4,0-5,0.2c-0.5,0-0.9-0.2-1.3-0.5c-1.5-1.2-4.8,2.5-5-2c1.2-1.8,5.2-0.6,4.7-4.3c0.1-1.2,0.5-2.4,1.3-3.3\n                            c2.1-2,3.1-4.5,3.9-7.2C1255.5,282.2,1255.6,279.9,1258,279z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2929",
                  d:
                    "M1328.1,297c2,0.2,1.9,1.6,1.9,3c-0.4,0.3-0.9,0.3-1.4,0.1c-2.6-1.1-5.2-0.5-6.8-0.6\n                            c1-0.2,3-0.1,5.1,0.2c0.5,0.5,0.4,0.8-0.2,1.1c-1.6,0.1-3.1,0.2-4.7,0.3c-1.7,0.5-3.4,0.8-5-0.2c0.2-0.6,0.4-1.8,0-1.6\n                            c-4.3,1.6-8.8-2.2-13.2,1.4c0.6-2.8,1.3-4.6,3.6-3.4c2.7,1.4,3.8-0.4,5.3-2c1.6-1.8,0.4-2.6-1-2.6c-6.6-0.1-3-3.1-1.7-5.6\n                            c5.5,0.4,8.5,5.2,12.9,7.5C1324.6,295.4,1325.8,297.2,1328.1,297z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B8C8E",
                  d:
                    "M1264.1,304.1c2.3,0,4.7,0,7,0c1.8,1.5,4.1,0.3,6,1c0.3,0.4,0.2,0.6-0.2,0.7c-8.6,0.2-17.2,0.4-25.8,0.5\n                            c-0.2,0-0.6-0.4-0.6-0.5c0-0.3,0.3-0.6,0.4-0.8C1255.2,302.2,1259.7,304,1264.1,304.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#604546",
                  d:
                    "M1276.9,305.9c0.1-0.2,0.2-0.5,0.2-0.7c8.3,0,16.6,0,24.9,0c-3.9,1.8-8.1,0.3-12.2,1\n                            C1285.5,306,1281.2,306,1276.9,305.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DCD5D4",
                  d:
                    "M1296.6,302.8c3.8-0.9,7.6-0.9,11.4-0.8C1304.3,303.8,1300.4,302.9,1296.6,302.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DCD5D4",
                  d:
                    "M1326.7,300.9c0.2-0.2,0.4-0.4,0.6-0.7c0.5-0.8,1.1-0.7,1.7-0.1c0.3,0,0.7,0,1-0.1c2.3,0,4.7,0.1,7,0.1\n                            C1333.7,301.8,1330.2,300.9,1326.7,300.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DCD5D4",
                  d:
                    "M1317,300.9c1.7,0.1,3.3,0.1,5,0.2c-3.4,1.7-6.9,0.8-10.4,0.7C1313.4,301.5,1315.2,301.2,1317,300.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B312F",
                  d:
                    "M1104,125c-1.7,3.6-5.4,1.9-8,3.1c-9.3-2.6-18.2-6.6-28-7.1c-3.4-2.6-7.6-3-11.6-3.9\n                            c-12.1-2.6-24.2-5.6-36.5-7.8c1.1-0.2,2.2-0.3,3.4-0.5C1050.5,112.6,1077.6,117.3,1104,125z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#443D3B",
                  d:
                    "M1135,141c0-0.3,0-0.7,0-1c3.2-0.6,6.3-2.1,9.7-0.9c10.2,6.1,21.4,10,32.5,14\n                            c13.4,5,26.6,10.3,39.8,15.7c3.1,1.2,6.2,2.4,8.7,4.8c1.3,1.6,1.6,3.4,1.6,5.4c-0.1,1.2-0.4,2.2-1.3,3c-1.3-1.4-1.7-3.2-4.4-3.8\n                            c-4.6-1-8.3-4.7-12.5-7.1c-2.7-1.6-6.4-3.3-10.1-2.1c-1.5-4.5-6.1-3.6-9.3-5.1c-7.1-3.3-14.5-5.9-21.8-8.9\n                            c-1.3-0.1-2.5-0.1-3.8-0.2c-0.5-2.3-2.5-1.7-4-2c-6.3-4.7-14-6-21.1-8.9C1138.2,142.3,1135,143.8,1135,141z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#32180F",
                  d:
                    "M1858,395c-0.7-0.7-1.3-1.4-2-2c-2.1-0.6-3.5-2.3-5.1-3.6c-0.3-0.4-0.3-0.9,0-1.3c3.2-1.5,6.7-1,10-1.1\n                            c3.5-2.4,6.3,0.6,9.4,1.1c1.6,0.9,2.6,2.7,4.6,3.1c0.9,0.4,1.8,0.8,2.6,1.4c1.5,1.6,4.1,2.5,3.4,5.4c-5,2-9.5-0.4-14-2.1\n                            c-1.4-1.6-3.3-0.8-5-1C1860.7,396.1,1859.3,395.9,1858,395z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#966047",
                  d:
                    "M1870.9,389.2c-3.6,0.4-6.3-2.8-9.9-2.2c-2.6-2-6.2-0.3-8.9-2.1c-1.2-1-2.7-0.3-4-0.5\n                            c0,0-0.1-0.4-0.1-0.4c0-0.3,0-0.7,0-1c0.7-3.1,3.3-2.5,5.1-2.1c5.7,1.3,11.7,1.6,17.2,3.8c1.2,0.6,2.1,1.4,3,2.4\n                            c0.5,0.5,0.9,1.1,1.1,1.9c0,0.8-0.4,1.3-1.2,1.5C1872,390.6,1871.6,389.7,1870.9,389.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C3B25",
                  d:
                    "M1867,396c3.2,0.6,6.3,1.1,9.5,1.7c1.6,0.3,3.2,0.8,4.5-0.7c1.9-1.2,2.8,0,3.6,1.4\n                            c0.2,0.7,0.2,1.4,0,2.1c-1.9,2.4-3.1-0.2-4.6-0.6c-2.8,0.5-5.3-1-8-1c-1.4-0.9-2.9-0.9-4.5-1.1\n                            C1866.2,397.7,1866,396.9,1867,396z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E3422",
                  d:
                    "M1851,389c2.6,0.2,3.7,2.2,5,4c-1.9,1.2-4.1-0.3-6.1-3.9C1850.3,388.6,1850.7,388.6,1851,389z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E3422",
                  d:
                    "M1858,395c1.3,0,2.7,0,4,0c0.5,0.6,1.1,1.2,2.3,2.5C1861.5,396.7,1859.1,397.8,1858,395z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E4F34",
                  d:
                    "M1851,389c-0.4,0-0.7,0-1.1,0.1c-1.2-0.3-2.6-0.4-2.5-2.2c1.5-0.5,2.4,0.8,3.5,1.2\n                            C1851,388.4,1851,388.7,1851,389z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E392D",
                  d:
                    "M1848.1,384.4c1.4-0.7,2.9-1.6,4,0.5C1850.7,385,1849.3,385.3,1848.1,384.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DFD9D7",
                  d:
                    "M1954.1,430.8c0,1-0.1,2.1-0.1,3.1c-6.3,0.6-11.1-2.8-15.9-6c0.1-0.2,0.2-0.4,0.3-0.6\n                            c2.1-2.1,3.2-4.6,3.4-7.5c0-0.7,0-1.4,0-2.1c0-0.7,0.1-1.5,0.2-2.2c0.3-1,0.7-1.8,1.7-2.2c2.5,1,5,1.3,7.8,0.6\n                            c1.8-0.4,3.7,0.7,3.7,3c-0.1,2.2,1.7,3.1,2.4,4.7c0.4,1.5-0.1,2.8-0.7,4c-0.6,1.2-1.2,2.3-2.2,3.3\n                            C1953,429.1,1954.6,430.3,1954.1,430.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#554748",
                  d:
                    "M1917,423.9c0-0.3,0-0.7,0-1c4-1.9,7.5,1.4,11.4,1.1c2.2,0.7,4.3,1.3,6.5,2.1c0.7,0.4,1.3,0.8,1.3,1.7\n                            c-0.2,1.8-1.1,2-2.8,1.5C1927.9,427.4,1922.4,425.7,1917,423.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DFD9D7",
                  d:
                    "M1936.1,427.8c-0.3-0.3-0.6-0.6-1-0.9c-0.1-1.4,0.9-1.6,1.9-1.4c1.4,0.3,1.8,1.2,1,2.5l0.1-0.1\n                            C1937.4,427.9,1936.8,427.9,1936.1,427.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#722E10",
                  d:
                    "M1880,400c1.7-1.2,2.4,1.6,4,1c1.2-0.6,2-0.6,2,1c-0.5,3.1,2.2,4.3,3.9,5.8c1.7,1.5,3.4,2.7,3.1,5.2\n                            C1885.9,411.4,1883.7,405,1880,400z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#FAF1EC",
                  d:
                    "M1798.9,373.1c-1.3-0.3-2.4-1.3-3.8-0.6c0.2-0.2,0.2-0.3,0-0.5c-0.1-3.3,2.3-1.7,3.8-2\n                            c7.4-1,14.6,1,21.9,1.8c6.6,1.3,13.4,1.8,20,3c3.7,0.8,7.4,1.2,11.1,1.7c1.6,0.2,3.3,0.1,4.3,1.8c0.1,1.3-0.4,2.3-1.5,2.9\n                            c-4.4,0.5-8.6-0.6-12.8-1.4c-3-0.3-5.9-1.5-8.9-1c-5.7,1.4-10.8-1.5-16.2-2.1C1810.8,375.8,1804.7,375.3,1798.9,373.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9B6AE",
                  d:
                    "M1817,375.9c5.3,1,10.7,2,16,3.1c0.3,0.3,0.7,0.7,1,1c1.6,1.6,6.3,1.7,3.8,5.2c-2,2.8-5.6,4.2-8.9,0.7\n                            c-1.3-3.3,2.6-2,3.2-3.8c-3.4-1.1-6.8-2.1-10.2-3.2C1820.5,377.8,1817.3,379.1,1817,375.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F5E8DB",
                  d:
                    "M1842,380c4.4,0.3,8.7,0.6,13.1,1c2.2-0.6,4.5-0.9,6.8-0.7c1.8,0.5,3.5,1.1,5.3,1.7\n                            c0.9,0.3,1.8,0.6,2.7,0.9c1.4,0.6,2.9,0.9,3.5,2.5c-0.5,1.3-1.3,1.4-2.4,0.8c-5.6-1.3-11.2-2.7-16.8-3.9c-2-0.4-4.3-1-6.1,0.7\n                            C1845.8,382.3,1843.6,381.6,1842,380z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#473B35",
                  d:
                    "M1873.8,389.1c-0.3-0.3-0.6-0.6-0.9-0.9c2.3-2.1,4.1-0.2,6.1,0.7c2.5,1.6,4.6,3.8,7.1,5.4\n                            c1.5,1.2,3.3,2.2,5,3.1c1.3,0.9,2.3,2,3.7,2.8c1.8,1.4,3.8,2.7,4.5,5c-0.1,0.8-0.6,1.2-1.4,1.5c-1.6,0.3-2.6-1-3.9-1.6l-0.5,0\n                            l-0.5,0c-2-2.2-4.9-3-6.9-5.1c-2-3.4-6.2-4.3-8.5-7.3C1876.4,391.4,1874.7,390.7,1873.8,389.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B57557",
                  d:
                    "M1886.7,399.1c1.5,2.7,6,2.1,6.4,6c-3.6,1.8-4.2-3.2-7.1-3c-0.4-0.8-1.2-1-2-1c0-0.7,0-1.3,0-2\n                            C1884.9,398.2,1885.8,398.3,1886.7,399.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DCC8AE",
                  d:
                    "M1894.1,405.1c1.5-0.4,2.6,0.7,3.9,1c0.8,0.5,2.3,0.2,2.3,1.7c-0.4,1-1.4,0.7-2.2,1\n                            c0.2,0.2,0.2,0.4,0,0.6C1897,407.7,1894.7,407.1,1894.1,405.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A85C37",
                  d:
                    "M1898,409.9c1.4,1.7,2.7,3.4,4.1,5.1c-2.6,0-3.7-2.1-5.2-3.7C1896,410.3,1897.3,410.1,1898,409.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F0EBE6",
                  d:
                    "M1898,408.8c0.7-0.3,1.4-0.7,2.1-1c0.3-0.2,0.7-0.2,1-0.1c0.5,0.4-0.4,0.4,0.3,0.2\n                            c0.4-0.1,0.2-0.4-0.2-0.4c-1-0.6-1.7-1.4-2.2-2.4c-1.6-1.4-3.3-2.7-4.9-4.1c-0.2-0.9,0.3-1.2,1.1-1.4c3.5,0.3,5.5,3.3,8.4,4.8\n                            c3.9,2.7,8,5.2,11.9,8c1.1,0.9,2.1,1.8,3.1,2.8c0.8,0.8,0.9,0.1,1.1-0.5c0.3-2.9,0.7-5.7,4.6-5.7c1.1,0,2.2,0.2,3.1,0.9\n                            c1.3,1.6,1.1,3.5,1.1,5.3c-0.4,2.2,0.6,4.8-2,6.6c-0.4,0.2,1.3,0.1,1.9,0.6c1.2,0.5,2.1,1.3,2.1,2.8c-0.4,0.5-0.8,0.6-1.2,0.1\n                            c-4.1,0.2-8-1.5-12-2.1c-2.6-1.4-5.3-2.8-7.9-4.3C1905.4,415.4,1901.7,412.1,1898,408.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D7373",
                  d:
                    "M2016,419c-1.4-0.6-2.7-1.2-4.1-1.8c0.3-1,1.3-0.7,2-1.1c1.2,0.4,2.4,0.7,3.2,1.8\n                            C2016.7,418.3,2016.3,418.7,2016,419z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B3A7A9",
                  d:
                    "M2013.8,416.1c-0.4,0.9-1.2,0.8-2,1.1c-1.6-0.5-3.1-0.9-4.7-1.4c-0.8-0.5-0.7-1.2-0.2-1.8\n                            c0.3,0,0.6-0.1,1-0.1C2009.9,414.6,2011.9,415.4,2013.8,416.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#565951",
                  d:
                    "M1270,207c-3.6-4.6-10.1-4.9-14-9c0.1-2-2-3.6-0.9-5.7c3.5-3,6.5-0.6,8.9,1.5c3.2,2.8,6.6,4.8,10.8,5.4\n                            c5.1,0.8,6.2,4.9,7.4,8.9c0.2,0.4,0.5,0.7,0.8,1.1c2.5,1.3,5.1,2.4,7.8,3.1c1.9,0.5,3.2,0.7,4,3.3c1,2.9,5.3,3.2,7.7,3\n                            c5-0.3,7.4,2.5,10,5.7c-0.8,2.7,0.9,1.2,1.8,1c0.7-0.1,1.3-0.1,2,0.1c2.6,2.1,5.2,4.1,8.4,5.2c4.2,1.5,4.4,3.3,1.4,7.3\n                            c0,0,0,0.1,0,0.1C1307.3,227.7,1288.7,217.3,1270,207z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#51534B",
                  d:
                    "M1256,193c-1,1.7,2.8,3.3,0,5c-7.3-3.7-14.7-7.4-22-11c-0.9-4.5-5.2-3.6-8-5c0-1,0-2,0.1-3\n                            c3.6-1.1,6.7-2,10,1.8c2.9,3.3,7.8,4.7,12.2,6C1251.8,187.9,1254.2,189.9,1256,193z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#504A48",
                  d:
                    "M1130.9,303c0.1,0.3,0.1,0.6,0.2,0.9c-4.7,2.2-9.7,0.5-12.7,0.8c14.6,1.5,31.1,0.1,47.6,1.2\n                            c3,0.8,6.2,0.5,9,2.1c-1.1,0.5-2.3,0.5-3.4,0c-12.4,0.7-24.7,0.7-37.1,0c-5.2,0.7-10.3,0.2-15.5-0.2c-6.2-1-12.5-0.1-18.7-0.4\n                            c-2-0.1-4,0.3-5.9-0.4c-3.2,0.6-6.3,0.2-9.5-0.2c-5.1-1.2-10.3,0.3-15.4-0.8c-9.2,0.2-18.4-0.3-27.6-1.2\n                            c-3.8-1.1-7.7,0.3-11.5-0.8c-2.2,0.6-4.3,0.2-6.5-0.2c-0.7-0.4-1.4-0.8-1.3-1.8c0.3-0.5,0.7-0.8,1.2-1c9.2,0.6,18.4,0,27.6,0.2\n                            c15.2,0.4,30.4,2.4,45.7,1.8c1.3,0,2.7-0.1,3.9-0.8c1.4-0.6,2.8-0.7,4.3-0.2c1.7,4,2.3-2,3.7-0.5c5.8-0.4,11.5-0.2,17.3-0.2\n                            C1128,301.6,1129.7,301.6,1130.9,303z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E4445",
                  d:
                    "M917,294c0.3,0,0.7,0,1,0c1.3,0.7,2.6,1.3,4,0.1c2.7,0,5.3,0,8-0.1c2.9-1.8,5.7-2.3,8.2,0.6\n                            c-3.8,2.8-7.8,0.9-11.8,0.8c11.6,0.8,23.3,0.9,34.9,2.1c8.3-0.4,16.5,1.5,24.8,1.1c7,0.3,14,0.4,20.8,2c0.5,0.7,0.6,1.5,0,2.2\n                            c-0.7,0-1.3,0-2,0c-3.8-1.1-7.7,0.2-11.4-0.8c-2.5-0.1-5.1-0.2-7.6-0.3c-3.4-1-7,0.2-10.4-0.7c-1.2-0.1-2.4-0.2-3.6-0.2\n                            c-3.7-0.9-7.4-0.2-11.2-0.4c-2.9-0.2-5.9,0.4-8.8-0.3c-2.5-0.1-5-0.2-7.5-0.3c-3.8-1.1-7.7,0.3-11.5-0.8c-0.3,0-0.7,0-1,0\n                            c-4-0.4-8-0.8-12-1.2c-2.3-1.2-5,0.6-7.2-1.1c0.3-1,0.1-2.2,1.2-2.8C915,295.1,916,295.1,917,294z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#393D37",
                  d:
                    "M1007,302.9c0-0.6,0-1.3,0-1.9c5.4-1.6,10.7-1,16,1c0,0.3,0,0.6,0,1c-4.1,0.9-8.2,0.6-12.2,0.1\n                            C1009.5,303.1,1008.2,303,1007,302.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1069.6,306.1c5.1,0.3,10.4-1.1,15.4,0.8C1079.8,307,1074.7,307.1,1069.6,306.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1010.7,303.1c4.1,0,8.2-0.1,12.2-0.1c0.3,0.3,0.7,0.6,1,0.9C1019.6,303.9,1015.1,304.2,1010.7,303.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M993.6,302.1c3.8,0.1,7.7-1,11.4,0.8c-3.6,0-7.1-0.1-10.7-0.1C994,302.6,993.8,302.4,993.6,302.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1030.5,304.1c3.8,0.3,7.8-1,11.5,0.8C1038.1,304.9,1034.2,305.2,1030.5,304.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1134.4,308.1c12.4,0,24.7,0,37.1,0C1159.2,309.2,1146.8,309.1,1134.4,308.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1175.8,308.1c1.8-0.4,3.6-0.7,5.2,0.8C1179.2,309,1177.5,308.9,1175.8,308.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0F0D0E",
                  d:
                    "M938.1,294.9c-2.6-1.7-5.4-0.5-8.2-0.9c-3-1.9-6.4-0.8-9.5-0.9c-3-0.1-5.9-0.4-8.4-2.1\n                            c-3.2-2.7-2.6-6.9-3.7-10.4c-0.6-1.9-0.9-3.8-1.4-5.7c-1.5-8.1-3.5-16.1-5.1-24.2c-0.9-4.7,0.3-5.7,5.3-5.2\n                            c1.5,1.4,3.4,2.2,5.4,2.1c6.8-0.3,13.6,2.1,20.5-0.8c2.4-1,6.1,0.7,9.2,1c-3.7-0.6-7.5-0.9-11.3-1.9c3.4-3.3,39.2-3.4,43.1-0.1\n                            c-5.3,1.3-10.3,2.4-15.6,0.8c4.4,1.6,9.3,0.1,13.6,2c0.7,0,0.3-0.9,0.2-0.3c0,0.2-0.2,0.1-0.5,0.1c-0.7,0-1.4,0-1.7-0.7\n                            c-0.2-0.5,0.3-1.1,0.7-1.1c1.8,0,3.6-0.8,5.4-0.2c5.4,1.7,10.3,2.2,15.3-1.8c3.2-2.5,7.8-0.4,11.7-1.3c1.6-0.1,3.6-0.6,4,1.7\n                            c0.2,1.4-1.1,1.7-1.4,1.6c5.6-0.3,12,1.2,18.5,1.4c5.4,0.2,10,6.3,9.5,11.7c-0.1,1-0.1,1.9,0.5,2.8c4.1,5.8,5.7,12.2,4.7,19.2\n                            c-0.3,1.8,1.2,2.9,2.1,2.4c3.5-1.8,4.6,1.2,6.9,3.4c0.3-5.6-2-9.7-4-13.7c-3.7-7.4-5.9-15.2-8.8-22.8c-0.4-1.1-0.5-2.3-0.6-3.4\n                            c-0.1-2-0.6-4.3,2.3-4.6c2.4-0.3,5.2-1,6.5,2.1c1.3,2.9,2.9,5.6,4.2,8.8c2.5-3.6-2.6-9.3,3.4-10.9c2.8-0.7,6.5-1.4,7.9,2.9\n                            c2,7,5.7,13.2,8.7,19.7c1.9,4.2,2,9,4.8,13c1.2,1.7,2.2,2.6,4.2,2.8c21.3,2.4,42.7,2.2,64,3.7c3.4,0.3,6.8,1.3,10.3,1.2\n                            c2.5-0.1,4.2,1.8,5.3,4c1.1,2.1,1.7,4.4,2.5,6.6c0.3,1.5,1.7,2.5,2,4.1c0.9,2.3-0.7,2-2,2c-6.3,0-12.7,0-19,0\n                            c-1.7-0.8-3.3-0.8-5,0c-0.7,0-1.3,0-2,0c-9.9-1.1-19.9-0.3-29.8-0.5c-6.6-0.1-13.3-0.4-19.9-0.1c-3.8,0.2-7-2.1-10.6-2.2\n                            c-0.5-0.1-1-0.3-1.5-0.5c-1.5-1.1-3.3-1.3-5.1-1.6c-2.9-0.5-4.7-2.1-4.9-4.9c-0.3,4-3.6,7.1-9.3,8.2c-7.1-1.1-14.3-0.2-21.4-0.6\n                            c-9.6-0.5-19.2-1.5-28.9-1.4c-6.9,0.1-13.8-1.5-20.8-1c-1.2,0-2.4-0.1-3.6-0.3c-4.3-1.3-8.7-0.5-13.1-0.6\n                            c-2.7,0-5.4,0.1-8.1-0.4c-3.9-1.2-7.8-0.2-11.7-0.6C942.1,296.2,939.9,296.5,938.1,294.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#382F2F",
                  d:
                    "M1158,298c-0.7-2.3-1.4-4.7-2.1-7c-2.6-5.9-4.2-11.9-4.3-18.4c0.4-2.1,0.4-4.7,3.8-3.4\n                            c0.5,0.3,0.7,0.6,0.9,1.1c0.3,1.2-1.9,2.1-0.6,3.5c0.5,3.9,1.2,7.7,2.8,11.4c0.7,2.2,2.6,2.6,4.5,2.8c0.4,0.1,0.9,0.2,1.3,0.4\n                            c4.1,3.8,10,2.8,14.7,5c1.8,0.9,3.4-0.9,5.1-1.3c2.6-0.3,5,1.1,7.5,0.9c0.8,0,1.6,0,2.3,0.2c1.7,0.9,3.5,0.8,5.4,0.8\n                            c3.1,0.9,6.7-0.7,9.5,1.7c-0.7,1.6-2.5,1.1-3.7,1.8c0.7,0.5,1.5,0.5,2.2,0.8c1.5,0.8,4.1-0.1,4.5,2.7c-12.2,1-24.4,1.5-36.6,0.3\n                            c-1.1-0.1-2.2,0.4-3.4,0.7c-2.1-3.1-4.7-4.8-8.7-3.5C1161.6,299,1159.7,299.2,1158,298z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1052.9,300c4.6-1.8,7.7-4.8,8.4-10.5c0,5.8,2.5,8.2,7.8,7.5c1.2-0.1,1.7,0.8,1.5,2.1\n                            c-3.6,0.3-7.1,0.3-10.5,0.3c3.6-0.1,7.2,0.1,10.5-0.3c20.1,3,40.1,2.7,60.1,2.8c0.7,0,1.5,0.6,2.2,0.9c-0.7,0-1.4,0-2.1,0.1\n                            c-8,0-16,0-23.9,0c-0.3,0.4-0.7,0.4-1,0c-1.7,0-3.3,0-5,0c-9.3-0.3-18.6,1.1-27.9-0.5c-5.2-0.9-10.5-0.4-15.8-0.5\n                            C1055.7,301.9,1053.5,302.7,1052.9,300z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1166,306c-0.7,0.3-1.4,1-2.2,1c-15.9,0.4-31.8-0.1-47.7-1.1c-0.4,0-0.8-0.5-1.2-1.9\n                            c5.4,0,10.8,0,16.2,0c9.5,0,19.1,0,28.6,0C1162.1,303.9,1164.3,304,1166,306z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#382D2B",
                  d:
                    "M1227.2,295.9c0.7,0,0.9,0.4,1,1c-3.1,0-6.3,0-10.7,0c8,5.5,17.4,0.1,23.7,6.5\n                            c-9.2,0.2-18.2-1.1-27.2-2.4c-0.1-0.1-0.2-0.3-0.3-0.4c-1.7-1.5-4.6-2.9-3.5-5.2c1.1-2.1,3.8-0.4,5.8,0\n                            C1219.7,296,1223.5,294.9,1227.2,295.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5F4543",
                  d:
                    "M1227.2,295.9c-5.4,0.4-10.9,0.3-16.2-0.8c-0.9,3.1,3.9,2.9,2.9,5.9c-0.7,0-1.3,0-2,0\n                            c-1.2-1.9-3.8-0.1-5.1-1.9c0.2-1.1,0.4-2.1,1-3.1c-2.8-2-6-0.5-8.9-1.1c-1.5-1.1-3.6,0.2-5.1-1c-0.7,0-1.4-0.1-2.1-0.1\n                            c1-2.3,2.7-1.2,4.3-1C1206.5,294.3,1217,293.9,1227.2,295.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D3533",
                  d:
                    "M1264.1,304.1c-4.3,1.4-8.8,0.6-13.1,0.9c-0.7-1.2-1.2-2.5-1-4c0.3,0,0.6,0,1,0c1.5-1.1,3.5,0.2,5-1\n                            C1259.7,299.5,1262.8,300.1,1264.1,304.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D494C",
                  d:
                    "M1229.8,296.9c4.3-2.1,8.7-0.5,13.1-0.4c3.4,0.1,5.6-0.3,6.7-4.1c1.1-4,2.9-7.7,4.4-11.6\n                            c0.7,0.5,1,1.3,1.1,2.1c-0.2,3.3-1.3,6.3-3.1,9c-1.1,0.7-0.9,1.9-1,3c-2.8,5.7-7.6,3.3-11.9,3.1\n                            C1235.9,297.6,1232.8,297.2,1229.8,296.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2426",
                  d:
                    "M1158,298c4.1-0.1,8.3-2.5,12.4,0.7c1.2,1,1.6,1.9,1.6,3.3c-3.6-1-7.2-2.6-11-1\n                            C1159.7,300.3,1158.6,299.4,1158,298z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#502024",
                  d:
                    "M1239,298c4.2-0.2,8.8,1.2,11.9-3.1c0.9,5.5-3.2,3.8-5.9,4.2C1243,298.6,1240.7,299.8,1239,298z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#705B5D",
                  d:
                    "M1254,312c-0.3,1.4,1.8,2.7-0.1,4.1c-0.6-0.7-1.3-1.4-1.9-2.1c-0.3-1.2-1.9-2.8,1-2.9\n                            C1253.3,311.4,1253.6,311.7,1254,312z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1135,303c1.7-1.4,3.3-1.4,5,0C1138.3,303,1136.7,303,1135,303z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332C2C",
                  d:
                    "M1967,605.1c-0.4,5,4.6,1.7,6,3.9c0,0.3,0,0.7,0,1c-1.4-0.3-2.9-0.9-4.3-0.9c-5.4-0.2-3.8-2.5-1.7-5.1\n                            C1967,604.4,1967,604.7,1967,605.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1430,268c-2.8,2.1-6.1,0.4-9.1,1.1c-0.2,0-0.4,0-0.6,0c-1.4-0.4-2.9-0.9-4.4-1.2\n                            c-9.7-4.5-18.7-10.3-28.3-15.2c-26.3-13.9-52.9-27-79.7-39.9c-0.9-0.7-2.3-1.2-1.9-2.8c2.3-1.7,4.4-0.6,6.4,0.7\n                            c2.7,1.7,5.7,2.7,8.5,4c2.8,1.3,4.6,1.1,5.3-2.2c1.6-0.9,3.3-0.9,5-0.4c2,0.7,2.9,2.6,4.2,4.1c2.2,2.3,4.6,3.7,7.9,2.1\n                            c1.7-0.6,3.4-0.3,4.8,0.7c7.1,5.5,16,7.4,23.4,12.2c6.5,4.3,13.9,7.1,20.3,11.5c3.7,2.6,8.4,3.6,12.4,6.1c2.4,1.5,5.1,2.5,7,4.7\n                            c0.3,0.4,0.7,0.9,1.1,0.9c7.1,0.1,11.5,6,17.5,8.4c1.9,0.8,2.7,2.3,3,3.4C1433.4,268.2,1430.6,266.8,1430,268z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B2B4AD",
                  d:
                    "M1374,217c4.4,1.8,8.9,3.3,13.1,5.5c1.3,0.7,2.4,1.6,3.9,1.5c3.2,4.2,8.2,5.8,12.6,8.1\n                            c4.7,2.4,9.3,5.2,14.4,6.9v0c1.7,1.3,3.4,2.6,5,4c12.6,5.9,24.7,12.7,35.7,21.2c1.3,1,5.2,5.7,2.3,9.8c-0.7,0-1.3,0-2,0\n                            c-3,0-6,0-9,0c-0.2-2.2-1.4-4-2.5-5.8c-1-1.5-1.4-1.4-2.2,0.8c-0.6,1.7-1.5,0.9-2,0.2c-0.6-0.9-0.9-2.1-1.3-3.1\n                            c0.7-1.2,3.2-0.3,3.2-2.4c2.4-1.1,4.4,0.4,5.6,0.6c-15.5-7.6-31.8-16.1-47.4-25.7c-8.9-6-18.4-11.1-28.1-15.6\n                            c-1.2-0.6-2.5-1-3.5-1.8c-1.5-1.1-4.6-1.6-3.5-3.9C1369.4,214.9,1372,215.9,1374,217z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C6CBC4",
                  d:
                    "M1430,268c-0.1-1.2,2.7-0.5,1.6-1.8c-0.5-0.6,0.3-3.1-2.3-2c-2.7,1.1-4.1-1.6-5.5-3.2\n                            c-2.3-2.7-4.8-4.5-8.5-4.1c-1.5,0.2-3.2,0-4.1-1.4c-2.9-5-8.6-6.9-12.9-8.5c-7.1-2.7-12.6-8-19.8-10.1c-3.3-0.9-5.3-4.1-8.5-5.5\n                            c-7.9-3.6-16.2-6.4-23.2-11.9c-0.9-0.7-2.5-0.4-3.8-0.6c-5.9-0.6-6.3-0.9-6.6-6.2c2.9-4,5.2-4.1,8.3-0.1c0.8,1,0.6,2.7,2.4,2.8\n                            c7.7,0.6,13.6,5.1,20.1,8.7c4.7,2.6,9.1,5.8,14,8.1c4.4,1.7,8,5.3,13,5.7c1.3,0.1,2.6,0.9,3.5,1.9c3.5,3.9,7.1,6.9,12.8,7.8\n                            c3.2,0.5,5.6,4.3,9,5.9c5.1,2.4,10.4,4.3,15.4,7c1.8,0.9,3.4,1.6,2.5,4c-0.3,0.6-1.1,0.5-1.5,1.1c0.4-0.3,0.9-0.3,1.3-0.4\n                            c0.7-0.2,1.2,0.1,1.7,0.6C1436.1,267.3,1433.2,268,1430,268z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C2C6C0",
                  d:
                    "M1437,265c-1.2-4.5-5.7-4.2-8.8-5.9c-5.7-3.1-12.3-4.7-16.9-9.7c-0.7-0.8-1.3-1.6-2.4-1.2\n                            c-4,1.3-6-1.3-8.5-3.7c-2.9-2.9-5.3-6.3-10.8-5.8c-1.9,0.2-6.2-2.9-8.6-5.7c-3.2-1.9-5.8-4.7-9.4-6.2c-2-0.8-4.5-2.1-2.4-5.2\n                            c5.9-0.2,10,4,14.8,6.5c7.2,3.8,14.1,8.2,21.3,12c11.6,6.4,23.2,12.8,34.6,19.4c2,1.1,4.2,2,5.2,4.4c1,3.7-2,1.4-3,2\n                            c-0.3,0-0.7,0-1,0C1439.9,264.9,1438.1,266.1,1437,265z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#626961",
                  d:
                    "M1388,251.9c8.3,3.7,16,8.4,23.9,12.8c1.6,0.9,3.3,1.6,4.9,2.3c1.3,0.9,2.8,1.2,4.1,2l-0.1,0\n                            c0.1,0.3,0.1,0.6,0.1,0.9c-4.7,3-9.8,1-14.8,1.5c-2-1-4.6-1.6-3.6-4.8c0.1-0.3-0.3-0.1-0.4-0.1c-4.6-0.1-7.5-2.7-9.6-6.5\n                            C1391.2,257.3,1387,256.1,1388,251.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4A4744",
                  d:
                    "M1405,271c5.3-0.3,10.7-0.7,16-1c2.9,1.8,6.6,2.4,8.3,5.9c-0.8-0.3-1.6-0.5-2.3-0.8\n                            c-2.6-2.5-5.6-0.2-8.5-0.6c-5.3-0.8-10.2-3.1-15.6-3.4C1403.7,270.5,1404.3,270.4,1405,271z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1437,265c1.4,0.2,2.9-0.5,4,1c-0.7,0-1.3,0-2,0c-1-0.1-2-0.3-3.1-0.4\n                            C1436.3,265.4,1436.7,265.2,1437,265z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5756",
                  d:
                    "M709,283.7c-4.7-0.2-9.4-0.4-14.1-0.6c-9-0.8-18-1.5-27-2.3c-2.8-1.1-5.7,0.2-8.5-0.8\n                            c-1.9,0.4-3.7,0.1-5.5-0.2c-2.8-1-5.7,0.2-8.5-0.8c-0.8,0-1.6-0.1-2.5-0.1c-0.1-0.3-0.2-0.5-0.3-0.8c0.3-0.5,0.7-0.8,1.3-1.1\n                            c5.5-1.1,11.1-1.1,16.6-2.2c8-1.2,15.9,0.5,23.8,1c13.6,0.9,27.1,2.2,40.7,2.7c3.7,0.1,7.3,0.4,10.8,1.5c1.5,3.1,0.7,4.4-3,4.6\n                            c-4.6,0.2-9.1-1-13.7-0.7C715.8,284.7,712.5,282.6,709,283.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#555050",
                  d:
                    "M569,272.9c-22.4-1.9-44.9-3.4-66.9-8.9c-5.4-1.4-10.7-3.3-15.3-6.8c0.1-0.2,0.2-0.4,0.3-0.6\n                            c0.6-0.7,1.4-1.1,2.3-1.4c1.1-0.4,2.3-0.8,3.5-0.9c7,2.2,13.6,5.7,21.1,6.7c14.2,2.9,28.6,3.4,42.8,5.5c2,0.3,4,0.2,5.8,1\n                            c1.6,1,3.5,1.1,5.2,1.9C568.9,270.3,569.5,271.4,569,272.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5754",
                  d:
                    "M631.5,278.1c-19.7-1-39.3-2.5-58.8-4.9c0.8-1.2,2.1-1.3,3.3-1.4c1.5,0.1,2.7-0.4,3.6-1.7\n                            c0.8-0.7,1.8-0.9,2.9-0.8c2.9,0.6,5.9,0.3,8.9,0.3c2.9,0.1,5.7-0.1,8.6,0.2c3.2,1.1,6.6,0.6,9.9,0.8c2,0.1,4,0,5.7,1.3\n                            c0.4,0.5,0.9,1,0.6,1.7c-0.3,0.8-1,0.8-1.7,0.7c0.5,0.7,1.1-0.2,1.6,0c2.8,1.6,1.7-2.1,3.3-2.3c8.4-0.7,16.7-0.5,24.8,2.1\n                            c0.1,2.1-1.7,1.9-2.8,1.8c-4.4-0.4-8.9,0.3-12.9-0.7c3.4,1.4,7.5,0,11.4,0.8c1.3,0.3,3.2-0.3,3.2,2l0,0\n                            C639.2,278.8,635.4,278.7,631.5,278.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#46403E",
                  d:
                    "M451.7,225.1c0.8-0.2,1.6,0.9,2.3-0.1c1.4-0.6,2.2,0.5,2.9,1.3c3.9,4.6,8.3,8.6,12.5,12.9\n                            c1,1,2.1,1.7,3.1,2.6c2.7,3.1,6,5.5,9.1,8.3c2.5,2.3,4.2,1.8,6.1-0.3c2.2,2.5,2,4.8-0.5,6.9c-0.2,0.1-0.3,0.3-0.4,0.5\n                            C473,248.9,462,237.4,451.7,225.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#514A49",
                  d:
                    "M577.1,272.9c-1.5,0.1-2.9,0.2-4.4,0.3c-0.6-0.1-1.1-0.1-1.7-0.2c-1.5-2.2-2.1-4.5-0.6-6.9\n                            c3.2-1,5.2-2.8,4.5-6.5c-0.2-0.9,0.2-1.9,0.9-2.7c0.5-0.2,1-0.2,1.4,0.1c0.3,0.4,0.6,0.9,0.7,1.4c0.3,1.4,0.3,2.8,0.3,4.2\n                            C578,266,579.3,269.7,577.1,272.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403E3F",
                  d:
                    "M571,266c-1,2.3,0.5,4.7,0,7c-0.7,0-1.3,0-2-0.1c-0.3-1-0.7-1.9-1-2.9c-0.7-0.6-1.6-1.2-1.3-2.4\n                            c0.7-1.8,1.1-3.7,1-5.7c0.4-2.8-1.3-6.1,2.1-8.2c0.8,0.5,1.1,1.2,1.4,2.1C571.3,259.3,572,262.6,571,266z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635B59",
                  d:
                    "M631.5,278.1c3.8,0,7.6-0.1,11.5-0.1c0,0.3,0,0.7,0,1C639.2,279.1,635.3,279.1,631.5,278.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635958",
                  d:
                    "M659.5,280.1c2.8,0.2,5.8-1,8.5,0.8C665.1,281,662.2,281.2,659.5,280.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635958",
                  d:
                    "M645.5,279.1c2.8,0.3,5.8-1,8.5,0.8C651.1,280,648.2,280.1,645.5,279.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262426",
                  d:
                    "M817,275c2.5-0.5,2.9,1.5,3.5,3.4c1-5,4.1-7.2,8.9-6c2.6,0.7,4.9-0.4,7.2-0.4c3.5,0,8-2.3,10.5,2.6\n                            c0.9,1.9,3.1,2.3,4.9,2.8c3,0.8,3,3.2,3.5,5.5c-2.3,0.4,0.5,6.7-5.1,3.8c-3.1-1.6-6.1,3.7-10.2,2.5c5.3,1.8,10.6,2.2,16.2,2.5\n                            c-3.5,0.2-7.1,0.3-10.6,0.5c-7.6-0.4-15.1-0.8-22.7-1.2c-1.3-0.9-3,0-4.3-0.8c-3.7-4.4-3-9.5-2.2-14.6\n                            C816.6,275.4,816.8,275.2,817,275z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5B4E4D",
                  d:
                    "M818.9,289.8c1.4,0.4,3-0.2,4.1,1.1c-8.8,0-17.6-0.8-26.4-1.7c2.2-2.4,4.6-0.1,6.6-0.7\n                            c-0.3-0.4-1.3-0.2-2-0.1c-11.6,0.6-23-2.8-34.6-1.7c-2.4,0.2-4.9-0.3-7.4-0.8c-1.7-0.9-3.6-1.5-5.5-1.9\n                            c-1.1-0.3-2.7-0.7-1.4-2.5c5.7-2.4,11.5-0.1,17.2,0.2c10.9,0.6,21.9,1.1,32.8,2.2c1.4,0.3,2.8,0.9,4.3,0.7\n                            C811.7,284.1,816.3,284.7,818.9,289.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544E4D",
                  d:
                    "M759,285c15.1-0.6,30,2.2,45,3.8c-2.5,0.1-4.9,0.2-7.4,0.4c-7.9,0.1-15.8-0.6-23.7-1.4\n                            c-2.7-0.8-5.4-0.2-8.1-0.4c-2.2,0-4.4,0.1-6.6-0.1c-2.2-1.6-4.8-0.6-7.2-0.9c-2-0.1-3.9,0.2-5.9-0.2c-0.7-1.7,0.6-1.9,1.6-2.3\n                            c1.4-0.3,2.8-0.4,4.2-0.2c1.9,0.4,3.8,0.2,5.8,0.4C757.6,284.2,758.3,284.5,759,285z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5B4E4D",
                  d:
                    "M764.7,287.2c2.8,0.1,5.6-1,8.3,0.7c-2.5,0-5.1,0-7.6,0C765,287.8,764.7,287.6,764.7,287.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E0DCDC",
                  d:
                    "M764.7,287.2c0.2,0.2,0.4,0.4,0.6,0.7c-2.8,0-5.6,0.1-8.3,0.1c0-0.3,0-0.6,0-0.9c0.2-0.5,0.5-0.6,1-0.3\n                            C760.2,286.9,762.4,287.1,764.7,287.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#565150",
                  d:
                    "M747,285c-0.7,0.3-1.3,0.6-2,0.9c-0.6,0.7-1.3,0.6-2,0.3c-0.4-0.1-0.7-0.2-1.1-0.4\n                            c-3.1-0.7-6.2-0.1-9.3-0.3c-2.6-0.2-5.2,0.4-7.7-0.4l0.1-0.3c-1.9-0.7-3.9,0.1-5.7-0.5c-0.3-0.2-0.4-0.5-0.4-0.8\n                            c0-0.3,0-0.5,0.1-0.5c4.6,0.1,9.2,0,13.7,0.5c2.5,0.3,3.2-1,4.3-2.5c3-2.1,6-2,9,0c-0.5,3.1-3.2,1.1-4.2,2\n                            C743.2,283.8,746.2,281.4,747,285z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5756",
                  d:
                    "M732.7,285.2c3.1,0,6.3-0.9,9.3,0.7c-2.8,0-5.6,0-8.5,0C733.1,285.8,732.8,285.6,732.7,285.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DBD5D6",
                  d:
                    "M743,286.2c0.7-0.1,1.3-0.2,2-0.3c1.8,0.1,3.7,0.2,5.5,0.2c0.4,0.1,0.6,0.3,0.8,0.7\n                            C748.6,286.8,745.7,287.8,743,286.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DBD5D6",
                  d:
                    "M732.7,285.2c0.3,0.2,0.5,0.5,0.8,0.7c-2.2,0.1-4.3,0.1-6.5,0.2c-0.7,0-1.3,0-2,0c0-0.3,0-0.6,0-0.9\n                            C727.5,285.1,730.1,285.1,732.7,285.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5B4E4D",
                  d:
                    "M751.4,286.8c-0.3-0.2-0.5-0.4-0.8-0.7c2.5,0.1,5.1-0.9,7.4,0.7c-0.3,0.1-0.6,0.2-1,0.3\n                            C755.1,287,753.2,286.9,751.4,286.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5054",
                  d:
                    "M719,283c0,0.3,0,0.6,0.1,0.9c-0.2,0.2-0.4,0.3-0.6,0.5c-1.8,0-3.6,0.3-5.4-0.2c-0.4,0-0.7,0-1.1-0.1\n                            c-1-0.1-2-0.3-3-0.4C712.2,281.3,715.7,283.8,719,283z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5756",
                  d:
                    "M719.1,283.9c2,0.4,4.1-0.6,5.9,0.9c-1.9,0-3.7,0-5.6,0.1c-0.4,0-0.6-0.2-0.6-0.6L719.1,283.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D6CCD0",
                  d:
                    "M718.8,284.2c0.2,0.2,0.4,0.4,0.6,0.6c-2.1,0-4.4,0.8-6.4-0.6C715,284.2,716.9,284.2,718.8,284.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B4A",
                  d:
                    "M960.6,300.2c3.8,0,7.7-1.1,11.4,0.7c-1.3,0.1-2.7,0.2-4,0.2c-2.2-0.1-4.4-0.2-6.6-0.3\n                            C961.1,300.8,960.8,300.5,960.6,300.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E0D7DA",
                  d:
                    "M933,299.1c3.9-0.1,7.7-0.2,11.5,0.8C940.7,299.7,936.7,300.9,933,299.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E0D7DA",
                  d:
                    "M960.6,300.2c0.3,0.2,0.5,0.4,0.8,0.7c-3.1-0.1-6.4,0.9-9.4-0.7C954.9,300.2,957.8,300.2,960.6,300.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#120C0D",
                  d:
                    "M1993,436c-1.6,0-3.3,0-6.3,0c2.7-1.2,4.2-1.9,6-2.7c-2.2-1.6-3.9-3.5-6.7-3.3c-1.4,0-2.3-0.7-3-1.8\n                            c-0.3-2.8-2.2-6.1,2.4-7.3c1.8-0.2,3.6-0.1,5.4,0.2c4,0.7,7.8,1.9,11.9,1.3c1.6,0.1,3,0.4,4.2,1.5\n                            C2004.9,430.9,2000.2,434.9,1993,436z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#291B1C",
                  d:
                    "M2006,416c1.3,2.1,4.3,4.5-1.1,5.1c-0.8,0.8-1.8,0.9-2.8,0.9c-3.5-0.8-7-2.1-10.5-2.7\n                            c-0.5-0.1-0.9-0.2-1.4-0.4c-1.1-0.4-2.2-0.8-3.3-1.1c-0.9-0.3-1.7-0.7-2.6-1c-5.9-2.2-12.4-2.1-18.3-4.6\n                            c-0.5-0.2-0.9-0.5-1.3-0.8c-0.4-0.4-0.6-0.8-0.8-1.3c-0.6-3.5,2.1-2.9,4-3.3c3.5-0.4,6.8,1.2,10.3,0.8c0.7-0.1,1.4,0,2.1,0.3\n                            c0.4,0.2,0.8,0.4,1.2,0.7c1.1,0.7,2.2,1.5,3.4,2.1c4.1,1.3,7.8,3.5,12,4.5c2.4,1.9,4.9,0.5,7.3,0\n                            C2004.9,415.1,2005.5,415.4,2006,416z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#706363",
                  d:
                    "M2006,416c-0.6,0-1.2-0.1-1.8-0.1c-3.5-0.9-7.5,0-10.4-2.9c0.2-1.5,1.1-1.6,2.3-1.2\n                            c2,0.4,3.9,0.8,5.9,1.2c1.7,0.3,3.3,0.6,5,0.7l0,0.3c0.1,0.6,0.1,1.2,0.2,1.8C2006.8,415.9,2006.4,415.9,2006,416z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E0D7D6",
                  d:
                    "M2002,421.2c1,0,1.9-0.1,2.9-0.1c-0.5,1.8,5.3-0.9,2.1,2.9c-1.5,0.3-2.9,0-4-1.1c-0.4,0-0.8-0.2-1.1-0.5\n                            C2001.7,421.9,2001.7,421.6,2002,421.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5656",
                  d:
                    "M2013.8,428c-0.5,0.4-0.9,0.8-1.2,0.8c-0.7,0.1-1.3-0.3-1.1-1.1c0.1-0.3,0.7-0.6,1.1-0.5\n                            C2013,427.2,2013.3,427.6,2013.8,428z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F3837",
                  d:
                    "M1971,431c-3.5-0.8-7.1-1.5-9.9-3.9c-1.5-2-0.3-4,0.1-6.1c0.4-0.8,0.9-1.3,1.8-1.5\n                            c4.6,1.2,10.1,0.1,13.3,5c0.3,1-3.5,0.2-0.9,2.3c1.1,0.9,1.4,2.6,0.7,4.1C1974.3,431,1972.7,431,1971,431z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4A413F",
                  d:
                    "M1976,431c-0.6-1.4-1-2.8-1.7-4.1c-1.6-2.8,0.9-1.5,1.8-1.9c3.3-0.6,5.6,1.3,8,3.1\n                            c0.7,0.6,1.4,1.3,2.1,1.9C1982.9,432.2,1979.4,430.9,1976,431z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4645",
                  d:
                    "M1962,421.1c-0.3,2-0.6,4-0.9,6c-0.7,0.3-1.5,0.7-2.2,1l0,0.1c-1.7-2.5,0.3-4.5,0.8-6.8\n                            C1960.4,420.6,1961.1,420.1,1962,421.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F3837",
                  d:
                    "M1959.6,421.8c1.8,2.4-1.5,4.1-0.7,6.4c0,0-0.4-0.1-0.4-0.1l-0.4,0.1c-2.1,0.6-2.9-0.2-2.2-2.3\n                            c0.4-1.3,0.8-2.5,1.2-3.8C1957.8,421.2,1958.7,421.2,1959.6,421.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8E8785",
                  d:
                    "M1955.9,425.9c-0.1,1.6,0.9,2.2,2.2,2.3c-0.7,0.9-0.9,2.2-2.2,2.6c-0.6-0.6-1.3-1.1-1.8-1.8\n                            C1954.6,428,1955.2,426.9,1955.9,425.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635B59",
                  d:
                    "M1954,429c1.1,0,2,0.4,1.8,1.8c-0.6,0-1.2,0-1.8,0C1953.9,430.2,1953,429.7,1954,429z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403B38",
                  d:
                    "M1935,675c1.9,1.7-0.6,1.8-1.7,3c2,0,3.4,0,4.7,0c-3.5,2.1-7.4,0.5-11,1c-1.8,1.2-4.2-0.3-6,1\n                            c-0.7,0-1.3,0-2,0C1923.7,676.2,1929,674.4,1935,675z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403B38",
                  d:
                    "M1938,678c2.5-2,5.3-0.6,8-1C1943.5,679,1940.7,677.6,1938,678z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3635",
                  d:
                    "M1921,680c1.8-1.8,4-0.7,6-1C1925.2,680.8,1923,679.7,1921,680z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8F8885",
                  d:
                    "M1866,369.1c2.5,1.9,5.3,0.6,8,0.9c1.7,0.2,3.6-0.6,5,1c-1.6,1.1-3.5,0.2-5.1,0.6\n                            c-0.1,0.1,0.1-0.1,0.5,0c1.6,0.3,4.5-1,4.6,1.2c0.1,2.9-3,1.3-4.7,1.5c-2.1,0.3-4.2,0.1-6.4,0.1c-7.3,0.1-14.5-0.1-21.7-1\n                            c-1.6-0.2-3.3-0.2-4.5-1.7c-0.2-0.5-0.2-1.1-0.1-1.6c3.7-1.8,7.4-0.3,11,0.3c-4.2-1-8.4-1.5-12.7-1.2c-1.9,0.1-4.1,0.4-5.3-1.8\n                            c-0.1-0.6,0-1,0.4-1.5C1845.3,367,1855.7,368,1866,369.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#887C7B",
                  d:
                    "M1835,366c0,0.3,0,0.7,0,1c-5.4,3-10.7,0.4-15.9-0.6c-4.1-0.8-8-1.6-12.2-0.9c-2.2,0.4-4.3,0.4-5.9-1.6\n                            v0c4.6-2.9,10.2-0.9,15-3c1.1,0,2.2,0,3-0.9C1822.6,366.6,1829.6,364.2,1835,366z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E4340",
                  d:
                    "M1840.9,360.9c1.1,0.2,2.4-0.1,3.2,1c-0.7,1-2.1,0.1-2.9,0.9c-2.9,0.3-5.5-0.5-8-1.8\n                            C1835.7,361,1838.3,361,1840.9,360.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B1D1A",
                  d:
                    "M1841.1,362.9c0.7-1.1,1.9-0.7,2.9-0.9c1.3,0,2.7,0,4-0.1c0.6,0.1,1.2,0.2,1.8,0.3c0,0.6,0,1.2,0.1,1.9\n                            C1847,363.6,1844.1,363.2,1841.1,362.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8F8885",
                  d:
                    "M1819,360.1c-0.4,2.2-1.4,2.5-3,0.9C1816.7,359.9,1817.8,360,1819,360.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2827",
                  d:
                    "M2020,597c0-1,0-1.9,0-3c-1.5,0.2-0.8,2.1-2.2,2.2c-0.2-0.1-0.6-0.3-0.6-0.5c-0.1-2.2-0.4-4.7,1.1-6.3\n                            c0.4-0.5,4,0.7,4.3,1.7C2023.3,593.3,2021.5,595.3,2020,597L2020,597z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2827",
                  d:
                    "M2020,597c-0.1,1.2-0.5,2.2-1.4,3.2C2017.4,598.3,2018.9,597.8,2020,597L2020,597z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5B5351",
                  d:
                    "M975.6,301.1c3.5,0.1,7-1,10.4,0.7C982.5,301.9,979,302,975.6,301.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#736965",
                  d:
                    "M1918.9,374.1c1.4,1.2,3.2,0.9,4.9,1.1c2,0.6,4.1,1.3,6.1,1.9c0.2,0.3,0.2,0.6,0.1,0.9\n                            c-0.5,0.7-0.1,1.8-1,2.3c-0.6,0.3-1.3,0.4-1.9,0.2c-0.8-0.2-1.6-0.7-2.3-1.2c-0.8-0.7-1.7-1.2-2.8-1.3c-2-0.4-4.1-0.9-6.1-1.3\n                            c-1.9-0.7-3.9-0.4-5.8-0.8c-2-0.6-4-0.7-6-1.1c-1.3-0.4-2.6-0.9-3.2-2.2c0.3-1.4,1.6-1.3,2.6-1.7\n                            C1908.8,370.9,1913.9,372.1,1918.9,374.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#918A89",
                  d:
                    "M1939.9,387.1c-3,3.4-0.3,6.1,1.2,8.9c1.8,1.4,2.4,2.9,0.4,4.6c-1.2,0.6-2.4,0.6-3.7,0.2\n                            c-1.7-1.5-0.5-4.1-2.1-5.7c-0.5-1.8-0.7-3.5-0.8-5.4c0-1.6-0.1-3.2-0.6-4.8c-0.2-1-0.3-1.9-0.2-2.9c0.1-0.8,0.4-1.5,1-2\n                            C1936.6,382.4,1938.3,384.7,1939.9,387.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4647",
                  d:
                    "M1935,380c0,0.6,0,1.1,0,1.7c-1.1,1-2.4,0.5-3.6,0.4c-1.1-0.4-2.7-0.3-2.4-2.2c0.1-0.7,0-1.5,0.9-1.9\n                            C1930.9,380.5,1934.5,376.4,1935,380z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D6C4BE",
                  d:
                    "M1918.9,374.1c-5.3-0.3-10.3-2.5-15.7-2.2c-0.4-0.2-1.1-0.2-1.1-1c2.1-1.7,4.5-0.5,6.8-0.7\n                            c2.7,0.6,5.4,1.2,8.1,1.8c0.5,0.8,1.2,0.9,2,1c0.4,0,0.7,0.3,1,0.5C1919.7,373.7,1919.3,373.9,1918.9,374.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#88847D",
                  d:
                    "M1902.1,370.9c0.4,0.3,0.7,0.6,1.1,1c-0.8,0.2-1.7,0.2-2.2,1.1c-5,1.6-9.8,1.6-14-2\n                            c-1-1.4,0.1-2,0.9-2.8c0.3-0.1,0.7-0.1,1,0C1892.8,371.7,1897.5,370.9,1902.1,370.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9A9593",
                  d:
                    "M1887,371c4.6,1.4,9.3,1.5,14,2c1,0.3,2,0.7,3,1c-0.2,2.4-2.1,2.1-3.6,2.3c-2.1,0.2-4.3,0-6.3,0.7\n                            c-8.2,1-16.2-1.2-24.3-2c-1-0.1-1.9-0.7-1.8-1.9c3.5,0,6.9,0,10.8,0c-2.1-1.9-4.7-0.3-7.8-2.1c3.5,0,5.8,0,8.1,0\n                            C1881.7,371,1884.3,371,1887,371z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C635C",
                  d:
                    "M1405,271c-0.7,0-1.3,0-2,0c-4.2-0.7-8.2-2-12-4c-4-3.4-6.3-9.3-12.9-9c-1.7,0.1-3.3-0.8-4.5-1.9\n                            c-4.4-4.2-10-6.2-15.1-9.1c-1.7-1-3.2-1.8-4.3-3.8c-1.9-3.2-5.7-3.3-8.9-3.3c-3.3,0-5.7-0.8-7.6-3.5c-3.2-4.6-9-6.1-12.8-10.1\n                            c-0.9-1-2.6-0.5-3.9-0.2c-1.3,0.2-2.3,0.1-2.6-1.4c-0.8-2.5-2-3.3-4.8-2.3c-2.5,0.9-8.9-5.5-8.4-8.1c0.3-1.5,2-1.5,3-2.3\n                            c16.1,7,31.7,15,47.4,23c10.9,5.5,21.7,11.4,32.6,17.1c1.7,3.6,6.8,5.9,7.4,8.4c1.7,6.6,7.2,3.7,10.2,6.1\n                            C1400.4,266.9,1406,269.5,1405,271z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#595E57",
                  d:
                    "M1319,224c0.6,2.9,2-0.4,3.3,0.4c1.6,1,5.3-1.6,4.8,3.1c0,0.2,0.8,0.8,0.9,0.7c3.3-2.4,3.7-0.4,3.7,2.4\n                            c3.2-0.1,4.6,2.4,6,4.5c3.6,5.2,9.8,2.7,14.4,4.9c1.7,0.8,2.9,1.3,4,3.5c1.3,2.5,4.9,4.6,7.9,5.2c2.1,0.4,3.5,1.3,5,2.4\n                            c3.8,3.2,7.4,6.8,13.1,6c1.4-0.2,2.6,0.8,3.3,1.9c1.6,2.5,3.2,4.8,6.2,6c1.7,0.7-0.6,1.3-0.6,2.1c-0.7,0-1.3,0-2-0.1\n                            c-4.1-0.3-7.7-1.5-10.9-4.4c-4.4-3.9-9.9-6.2-15.1-8.8c-1.3-0.7-2.6-0.3-3.7,0.5c-0.5,0.1-0.9,0.1-1.4-0.1\n                            c-3.2-5-7.9-8-13.6-9.4c-4-1-8.3-1.3-10.9-5.6c-1.1-1.9-3.6,1.5-5.4,0c-0.6-0.4-1.3-0.7-1.9-1.1c1.6-3.7,1.2-6.2-3.6-6.5\n                            c-2.3-0.1-2.9-4.3-6.4-2.8c-0.9,0.4,1.5-1.8,0-2.7C1316,223.8,1317.4,223.7,1319,224z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#555951",
                  d:
                    "M1359,254c0.1-5,3.4-2.1,4.6-1.4c4.7,2.7,10,4.5,14.2,8.2c3.2,2.8,6.6,5.7,11.2,6.2c-3-0.4-6,0.8-9,0\n                            c-4.6-3.4-9.7-5.8-14.8-8.2C1362.7,257.7,1360.1,256.8,1359,254z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#505149",
                  d:
                    "M1359,254c6.7,3.4,13.4,6.9,20.1,10.3c1,0.5,0.8,1.7,0.9,2.6c-1.7-0.6-3.3-1.3-5-1.9\n                            c-5.7-2.7-11.3-5.3-17-8c-0.3,0-0.6,0-1,0c-0.7-0.5-1.5-0.9-1.3-2c0.6-0.8,1.3-1.1,2.2-1C1358.3,254,1358.7,254,1359,254z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A4F4F",
                  d:
                    "M1979.1,408c-3.7,2.7-7.4-1.2-11.1-0.1c-0.3-0.3-0.5-0.7-0.7-1.1c-1.1-2.1-3.2-1.3-4.8-1.4\n                            c-6.2-0.5-12.4-0.8-18.5-1.8c-0.7-0.5-1.2-1.1-1.3-1.9c1.3-2.5,3.7-1.7,5.8-2c4.5,0,9,1.1,13.5,1.4c1.6-0.8,2.5,2.6,4.2,0.7\n                            c1.5-0.3,2.5,0.6,3.6,1.3c0.4,0.1,0.8,0.1,1.1,0.2c1.7,0.8,3,2.4,5,2.7C1977.3,406.2,1978.6,406.5,1979.1,408z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463B3D",
                  d:
                    "M1996.1,411.8c-0.8,0.2-1.7,0.3-2.1,1.3c1.1,0.9,3.5,0.4,3,2.9c-4.7-0.8-8.7-3.1-13-5\n                            c0.3-0.4,0.7-0.5,1.2-0.5c0.8,0,1.6-0.1,2.4,0.1c0.7,0-0.1-1,0.1-0.4c0,0-0.1,0.3-0.4,0.3c-0.8,0-1.6,0-2.4-0.2\n                            c-1.3-0.6-2.7-0.6-3.9-1.3l-0.2,0c0.4-1-3.1-3.5,1.2-3c3.3,1,6.6,1.9,9.9,2.9C1993.6,409.4,1995.5,409.6,1996.1,411.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2827",
                  d:
                    "M1982,406c-2.8,0,0.5,2.5-1.2,3c-0.6-0.3-1.1-0.6-1.7-0.9c-1.3-0.4-2.6-0.8-4-1.2\n                            c0.3-0.3-0.5-2.9-1.2-3.8C1977.3,402.3,1979.6,404.3,1982,406z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#463B3D",
                  d:
                    "M1974,403c0.1,1.4,6.2,0.9,1.2,3.8c-2.2-0.4-3.4-1.9-4.2-3.7C1972,403.1,1973,403.1,1974,403z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2827",
                  d:
                    "M1988,401c1.3-0.6,2-1.6,2.1-3c1.3,1.1,2.6,2.3,4,3.5C1992,402.9,1989.9,403.3,1988,401z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2827",
                  d:
                    "M1974,400.2c3.7,0.3,7.5-1,11,0.8C1981.4,400.6,1977.6,402,1974,400.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E7E3E6",
                  d:
                    "M1969.8,403c-1.5,0.5-2.7,0-3.6-1.3c-0.1-1.3,0.6-1.8,1.8-1.7C1968.6,401,1969.2,402,1969.8,403z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4647",
                  d:
                    "M2007,413.7c-1.7,0.2-3.6,1-5-0.7C2003.9,411.4,2005.4,413.3,2007,413.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5352",
                  d:
                    "M1949.1,401c-2,0.3-4.2-0.5-6.1,0.7c-1.8,0.9-2.1-0.2-2.1-1.7c1.9-1.3,0.6-2.7,0.2-4\n                            c6.7-0.7,13.4-0.8,19,4c-1.9,2-3.9-0.2-5.9,0.1C1952.4,400.3,1950.7,400.1,1949.1,401z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726867",
                  d:
                    "M1949.1,401c3.3-3.8,7.3-1,11-1c0.6,0.4,1.3,0.7,1.9,1.1C1957.7,403.2,1953.4,400.4,1949.1,401z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ADA29E",
                  d:
                    "M2022,538.9c-1.5-3.7,3-0.6,2.9-2.8c-2,0-4.1-0.9-5.9,0.8c-4,1-4.2,0.9-3.4-2.2c0.1-0.2,0.3-0.4,0.5-0.6\n                            c0.3-0.3,0.7-0.6,1.1-0.8c1.5-0.5,3.1-0.5,4.6-0.9c0.5,0,0.9,0.1,1.2,0.4l0,0.1c0.9,1.4,3.1,0.6,3.9,2.1\n                            c0.3,0.6,0.6,1.3,0.9,1.9c-0.4,1.7,1.7,3.3,0.3,5c-3.1-0.1-3.1-0.1-4.3-2.7C2023.7,539,2022.6,539.4,2022,538.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#EFDFDA",
                  d:
                    "M2022,533c-1.3,2-3.1,0.8-4.8,0.7c-0.7,0.2-1-0.2-1.1-0.9c0.3-0.3,0.7-0.7,1-1c0.3,0,0.6,0,0.9,0\n                            C2019.6,531.3,2021.1,531.2,2022,533z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#91817E",
                  d:
                    "M2026.9,535.1c-1.5-0.4-3.7,0.6-3.9-2.1C2024.6,533.2,2026.8,532.3,2026.9,535.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#867470",
                  d:
                    "M2022,533c-1.3-0.4-2.6-0.8-3.9-1.2c2-1.2,3.9-1.9,4.9,1.1C2022.7,533,2022.3,533,2022,533z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ADA29E",
                  d:
                    "M2016.1,532.9c0.4,0.3,0.8,0.6,1.1,0.9c-0.1,0.1-0.2,0.3-0.4,0.4c-2.6,2.1-5.9-0.2-8.6,1.3\n                            c-0.5,0.1-0.9,0.1-1.4-0.1c-1-1-3.1-1.1-2.9-3.3c2,0,4-0.1,6-0.1c0.9-0.8,2-1,3.2-1.1C2014.2,531.6,2015.2,532.2,2016.1,532.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6A5F5A",
                  d:
                    "M2013.3,530.9c-0.6,1.7-2,1.1-3.2,1.1c0.1-1.1,0.9-1.7,1.9-2.1c0.3,0.1,0.6,0.1,0.9,0.1\n                            C2012.9,530.4,2013,530.7,2013.3,530.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#604546",
                  d:
                    "M1303,307c0-0.6,0-1.2-0.1-1.8c2.7,0,5.4-0.1,8-0.1C1309.1,308.9,1305.7,306.2,1303,307z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ADA29E",
                  d:
                    "M2010.9,547.7c0.1-0.3,0.1-0.7,0.2-1c0.8-0.6,1.7-0.7,2.7-0.6c1.7-0.5,3.8,1.1,5.2-1.1c0-0.3,0-0.7,0-1\n                            c1.1-2.3,3.1-2,5.1-1.9c1.4,0,2.8-0.1,3.9,1c1.3,0.7,2.5,1.7,1.5,3.1c-1.1,1.7-3.1,0.6-4.6,0.9c-0.4-0.5-0.8-0.5-0.9,0.2\n                            c0,0.3-0.1,0.5-0.1,0.8c-2.6,1-5.3,0.7-7.9,0.2C2014.3,548,2012.6,547.9,2010.9,547.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544A4A",
                  d:
                    "M2016,548.1c2.6-0.1,5.3-0.1,7.9-0.2c0.7,0.3,1.5,0.6,2.2,1C2022.8,548.7,2019.3,549.9,2016,548.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D0C5C4",
                  d:
                    "M2028,543c-1.4,0-2.8-0.1-4.2-0.1c-2.5-1.5-5.5,1.5-7.9-1c1-3.1,3.7-2.8,6.1-3c1.5-0.7,2.8-0.3,4.4,0.6\n                            c-1,0.3-1.8,0.6-2.7,0.9c1.5,1,3.5-0.1,4.5,1.6C2028.1,542.4,2028,542.7,2028,543z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E7DFDD",
                  d:
                    "M2024.1,547.2c-0.7-0.5-1.3-1.1-0.4-1.8c0.4-0.3,1.1-0.1,1.7-0.1c-0.1,0.6-0.3,1.1-0.4,1.7\n                            C2024.7,547,2024.4,547.1,2024.1,547.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#555951",
                  d:
                    "M1358,254c-0.4,0.8-1.2,1-2,1c-2,0.1-3.5-0.8-5-2l0,0c-2.6-0.9-4.7-2.6-7-4c-5-3.9-11.2-5.8-16-10\n                            c2.2-0.8,4.4-1.6,6.9-2.4c-1.2,5.9,4.4,6.2,6.7,6.4c5.7,0.4,9.6,3.4,14,6.2C1357.6,250.4,1358.2,251.8,1358,254z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#573A3A",
                  d:
                    "M1344,249c2.9,0.4,4.9,2.2,7,4C1347.8,253.1,1345.4,251.9,1344,249z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#573A3A",
                  d:
                    "M1351,253c1.7,0.7,3.3,1.4,5,2c0.4,0.7,0.7,1.3,1.1,2C1354.3,256.7,1352.2,255.6,1351,253z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A39C93",
                  d:
                    "M1953,384c-1,0-2-0.1-3-0.1c-0.3-0.8-1.4-1.8-0.1-2.5c1.5-0.8,2.9,0.3,4.1,0.9\n                            C1954.7,382.7,1953.1,383.3,1953,384z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C4B2AA",
                  d:
                    "M1817,375.9c1.2,1.7,3.9,1.1,5,3.1c-3.7,1.4-7.4-2.9-11.1,0.1c-2.3-1-4.6-2-6.9-2.9\n                            c-1.3-0.7-2.7-1.4-4-2.1c-0.3-0.3-0.7-0.6-1-0.9C1805.1,373.4,1811.1,374.2,1817,375.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#77706D",
                  d:
                    "M1801,364c1,0.2,2.1,0.9,2.8,0.6c7.6-3,14.6,0.8,21.8,1.6c3.1,0.3,6.2,0.7,9.3,0.7\n                            c3.5,1.8,7.4,0.7,11,1.5c2.7,0.6,5.5,0.3,8.4,2.1c-4.5,0.9-8.4-1.5-12.4-0.7c-4.9,2.3-9.7,0-14.6-0.1\n                            c-5.9-0.1-11.7-1.8-17.7-0.7c-2.7,0.5-5.7,0.7-7.6-2.3c-1-1.4-2.8-0.5-4.1-1.2C1798.6,364.4,1800.5,365.4,1801,364z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#928D89",
                  d:
                    "M1802.1,366.9c3.5,1.2,6.9,1,10.6,0.5c4.3-0.5,8.8,0.3,13.2,0.8c5.4,0.5,10.7,1.2,16.1,1.8\n                            c0,0.4,0,0.7,0,1.1c-6,2.7-12.3,1.1-18.5,1c-7.3-0.6-14.4-2.5-21.8-1.7c-0.7,0.1-1.3-0.1-1.7-0.6c1.6-2.6-1.8-1.2-2-2.7\n                            C1799.3,367.1,1800.7,367,1802.1,366.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BCB5B0",
                  d:
                    "M1799.9,369.8c7.8-1.6,15.4-0.2,23.1,1.1c0.4,0.9,2.5,0.6,1.8,1.8c-0.8,1.5-2.5,0.9-3.9,0.4\n                            c-7.4-0.5-14.8-1.3-22.1-2.9C1799.3,370,1799.6,369.9,1799.9,369.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#837876",
                  d:
                    "M1999.2,538.2c0.6-0.4,1.1-0.8,1.7-1.3c3.1-2.1,6.4-1,9.6-0.5c0.6,0.4,0.8,0.9,0.4,1.5\n                            c-1,0.5-2,1-3.4,1.8c1.8,0.2,3.1,0.3,4.5,0.5c-3.8,0.4-7.5,2.1-11.1-0.2c-0.2-0.9-1-1-1.7-1.2l-0.4-0.3L1999.2,538.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F4EBEA",
                  d:
                    "M2015.9,541.9c2.6,0.6,5.4-0.9,7.9,1c-1.6,0.3-3.2,0.7-4.9,1c-4.5-0.2-9-0.4-13.4-0.6\n                            C2008.9,541.4,2012.5,542.3,2015.9,541.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CABDBD",
                  d:
                    "M2010.9,537.9c0-0.3,0-0.6,0-0.8c-0.5-0.8-0.5-1.6,0.2-2.3c2-0.2,4-0.6,5.9,0.2\n                            c-0.1,0.8-1.6,1.2-0.8,1.8c0.6,0.5,1.9,0.2,2.8,0.2C2016.4,538.6,2013.8,539.6,2010.9,537.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F7F2F0",
                  d:
                    "M2019,545c0.9,0.3,2.4-0.2,2.5,0.9c0.2,1.4-1.2,1.1-2.1,1.1c-1.8,0-3.6-0.1-5.4-0.2\n                            c-0.1-2.3,2.4-0.5,2.9-1.8C2017.7,545,2018.3,545,2019,545z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F4EBEA",
                  d:
                    "M2017,545c-1,0.6-1.9,1.2-2.9,1.8c-1,0-2-0.1-3-0.1C2012.5,543.9,2015,545.5,2017,545z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F3EFEC",
                  d:
                    "M1999.2,538.2c0,0.2,0,0.4,0,0.6c-0.2,1.4-0.1,3.5-2.2,3.1c-2.4-0.5-4-2.1-3.9-4.9\n                            C1995.1,537.3,1997.4,536.1,1999.2,538.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B4A",
                  d:
                    "M912.8,296.8c2.3,0.7,5-0.7,7.2,1.1c-3.4,0.1-6.9,0.3-10.2-0.7C910.8,297,911.8,296.9,912.8,296.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B3635",
                  d:
                    "M2031,561c-6.7,1-13.3,2-20,3c-1.9,1.2-4.2-0.3-6,1c-1.5-0.1-2.8,0.3-4,1c-2,0.6-4,1.1-6,0\n                            c1.5-1.5,2.9-3.3,5-4c0.2,2.2,1.5,1.4,2.8,1.2c8.9-1.4,17.8-2.8,26.7-4.1c1.1-0.2,2.2,0,3.4,0C2033,560.5,2031.7,560.5,2031,561\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#544C47",
                  d:
                    "M1983,553c1.8,1.7,4,0.7,6,1c3.1,2,6.4,2.6,10,2c1.2,2.4-0.5,3.1-2.1,4c-3-4.2-8.2-3.3-12.2-4.9\n                            c-1.2-0.5-2.7,0.2-3.7-1C1981.6,553.7,1982.3,553.4,1983,553z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2827",
                  d:
                    "M1995,566c2,0,4,0,6,0c-2.8,1.7-5.9,2.1-9,2C1993,567.3,1994,566.6,1995,566z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C7BCB8",
                  d:
                    "M2004.1,532.1c0.6,1.2,3.1,0.6,2.8,2.8c-0.4,0.7-1.1,1-1.8,1c-2.1,0.2-4.1-0.6-6.1-1.1\n                            c-0.3-0.3-0.7-0.6-1-1c0-0.9,0-1.9,0.1-2.8C1999.8,532.8,2001.9,532.8,2004.1,532.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B9292",
                  d:
                    "M2004.9,535.1c0.7-0.1,1.3-0.2,2-0.2c0.4,0,0.7,0.1,1.1,0.1c1-0.3,2.1-0.3,3.1,0c-0.1,0.7-0.1,1.4-0.2,2\n                            c-3.3-0.1-6.7-0.1-10-0.2c0-0.2,0-0.5-0.1-0.7C2001.9,534.7,2003.7,536.2,2004.9,535.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#877E7B",
                  d:
                    "M2004.9,535.1c-1.1,1.4-2.8,0.7-4.1,1.1c-0.6-0.5-2.3,0.6-1.8-1.3C2001,533.8,2002.9,534.9,2004.9,535.1\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#170D0D",
                  d:
                    "M1255,261c-0.2,2.6-2,0.6-2.9,1c-5.9-2.1-9.8-7.4-15.4-9.9c-0.4-0.2-0.8-0.4-1.2-0.7\n                            c-1.1-0.9-2.4-1.4-3.6-1.9c-4.9-2.7-10.1-5.1-15.3-7.1c-2-0.8-4-1.6-1.3-4c3.7-0.9,7.2-2.2,11-2.7c2.3-0.2,4.6-1.9,6.8,0.3\n                            c5.8,1.9,10.3,6.3,16,8.3c2.7,1-1,2.9,0.9,3.7c0.8,0.1,1.4,0.5,1.8,1.2C1252.9,253.1,1254.6,256.9,1255,261z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1C1918",
                  d:
                    "M1233,236c-2.3-1.2-4,0.9-6.1,1c-2.5-3.1-6.1-4.6-9.4-6.4c-6.6-3.5-12.8-7.7-19.7-10.6\n                            c-3.1-1.5-5.9-3.6-9-5c-1.5-0.7-2.8-1.6-4.2-2.4c-5.4-2.4-10.5-5.4-15.8-7.9c-6.9-3.4-13.9-6.5-20.8-9.9\n                            c-4.2-2.3-8.7-3.9-13-5.8c-1.8-0.7-3.5-1.6-5.3-2.3c-3.2-1.9-7.6-1.7-9.6-5.8c1.1,0,2.3,0.2,3-1c12.1,3.9,23.4,9.6,34.9,14.8\n                            c9.9,4.4,19.6,9.2,29.1,14.3c1.1,0.2,2,0.6,3,1c0.7,0,1.3,0,2,0c-0.7,2.9,2,3.6,3.5,4.4c12.5,5.9,24.2,13.3,36.3,20.1\n                            C1232.3,234.8,1232.6,235.5,1233,236z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4D484A",
                  d:
                    "M1250.9,249.1c-0.4-0.4-0.7-0.7-1.1-1.1c0.5-0.8,1.2-1,2.1-1c1.6,1.2,2.9,2.7,5,3c1.2,0.4,2.4,0.8,3,2\n                            c7.6,6.2,16.5,10.4,24.6,15.9c14.4,9.8,29,19.3,43.5,29c-2,2.2-3.1,0.1-4.5-0.9c-4.5-3-8.6-6.6-13.6-9c-1.8-0.8-2.7-3.1-5-3.1\n                            c-1.1-0.5-2.4-0.8-3.4-1.4c-0.8-0.4-1.6-0.7-2.4-1.2c-8.4-6.6-17.8-11.6-26.8-17.2c-6.1-3.8-11.8-8-18.1-11.5\n                            C1252.8,251.8,1252,250.4,1250.9,249.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2828",
                  d:
                    "M1190,210c-1.4,0.8-2.4,0.6-3-1C1188.7,207.2,1189.2,208.9,1190,210z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2828",
                  d:
                    "M1298,269c-4.5-0.1-7.1-3.3-10-6C1291.9,264.1,1295.3,265.9,1298,269z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2828",
                  d:
                    "M1288,263c-3.4,0.6-5.3-1.6-7-4C1283.7,259.7,1286.3,260.5,1288,263z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484445",
                  d:
                    "M810,181c0.3,0,0.6,0,1,0c0,3.3,0.1,6.7,0.1,10c0,1,0,2-0.1,3c-0.6,0.3-1.1,0.2-1.5-0.3\n                            c-0.8-1.3-0.9-2.7-0.9-4.2C808.9,186.6,807.9,183.6,810,181L810,181z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#625F61",
                  d:
                    "M846,223c0,0.8,0.2,1.6,1,2c0,0.3,0,0.7,0,1c-0.3,1.3,1.1,2.7,0,4c-0.5,2.1,1.3,4.7-1.8,6.1\n                            c-1.5,0.7-0.5,1.4,0.5,2c1.5,0.9,0.8,1.3-0.3,1.9c-5.4,3-11.5,3.8-17.2,3.3c-2.9-0.2-6.4-0.7-9.2-1.5c-3.2-0.9-2.6,1.6-3.8,2.2\n                            c-0.4-0.3-0.7-0.7-0.9-1.2c-0.2-0.7-0.3-1.5-0.4-2.3c0-1.9-0.4-3.7-0.9-5.4c-0.5-3.8-0.1-7.8-1-11.6c-0.4-1.6-0.2-3.3,1.2-4.5\n                            c0.2-0.1,0.3-0.1,0.5-0.2c-0.3,3.3,4.4,4.8,2.9,8.6c-1.1,2.7,0.2,4.9,1.2,7.5c1.4,3.6,3.4,3,6.2,2.5c3.1-0.5,5.9,2.1,9.1,1.7\n                            c0.8-0.1,1.8,0.6,2.4,0.3c2-1,3.4-2.4,2.4-4.9c1.7,0,4.1,1.5,4.4-1.8C842.5,229,845.2,226.4,846,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#494749",
                  d:
                    "M813.1,219c-0.1,5.7,1.5,11.3,1,17c1.1,1.5-0.3,3.5,0.9,5c0,0.7,0,1.3,0,2c-0.5,0.3-1,0.4-1.5,0.1\n                            c-0.7-0.5-1.1-1.1-1.4-1.9c-0.7-2.8-0.1-5.9-1.1-8.7c-0.7-5-0.1-10.1-1.3-15c-0.1-0.6-0.1-1.1-0.1-1.7c0.1-2.4-0.1-4.9,0-7.3\n                            c-0.1-2.5,0.5-5-0.5-7.5c-0.6-1.2-0.6-2.4-0.4-3.7c0.2-1.2,0.2-2.5,1.4-3.4c0.3,0,0.6,0,0.9,0\n                            C812.4,202.3,812.5,210.6,813.1,219z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#63605F",
                  d:
                    "M852,180c1.7-3.1,1.7-6.6,2.3-10.2c1.8,0.3,3.4,1.8,5.4,0.2c2.8-2.2,5.6-1.1,7.3,1.6\n                            c3,4.7,6.4,4.2,10.5,1.8c1.6-0.9,4-3.1,4.3,1.4c2-1.5,0.5-2.7,0.4-3.8c-0.2-1.8,0.8-1.4,1.8-1c4,4,3,9.6,4.4,14.4\n                            c0.7,2.4,1.9,5.1-0.2,7.6c-3.2-3.8-3.5-8.3-3.5-13.3c0.3,5.6-2.1,7.3-7.1,5.6c-0.7-1.7,1.8-2.3,1.2-4c-0.8-2.2-6.3,0.4-10.9,5.5\n                            c-0.2-3.6-3.6-4-5.2-6.5c-1-1.5-4.8-1.2-5.3,0.7c-1.2,4.6-7,7.6-4.7,11.7c0.7-1.7-3.5-5.3,1.4-8.4\n                            C855.7,182.4,851.2,182.1,852,180z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2B2B",
                  d:
                    "M888.1,192c-0.7-7.5-2.5-14.7-4.1-22c0.1-3.2-0.7-6.2-1.9-9.1c-1.9-3.8-3.4-7.6-1.2-11.9\n                            c1.9-1.8,1.2-3.9,0.6-6c-0.5-1.7-0.7-3,1.6-3c2.1,2.6,0.6,6,1.8,8.8c0.6,4.3,1.1,8.6,1.9,12.8c0.6,3.4,1.2,6.7,2,10\n                            c0.4,1.8,0.5,3.6,1.1,5.3c0.5,3.4,1,6.7,2,10c0.5,3.2,1.5,6.3,1.4,9.6c0,2.1-0.1,4.3,0.5,6.3c0,0.7,0.1-0.2,0.1,0.5\n                            c0,1.3,0.3,3-1.2,3.3c-2,0.3-0.6-2.1-1.7-2.8c-0.3-0.4-0.7-0.7-1-1.1C890,199.2,889.3,195.5,888.1,192z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#626061",
                  d:
                    "M781.1,145c8.3,0.4,16.6-1.8,24.9-1c-0.3,1.1-0.8,2.2-0.9,3.3c-0.3,3-2.5,4.2-5.7,3.5\n                            c-1.6-0.4-3.5,0.7-5.2,0.8c-2.4,0.2-4.7,1.8-7.3,1.1c0.2-1.3,1.5-0.5,2-1.3c-1.4-0.8-3.7-1.1-4.1,0c-1.7,5.7-3.9,1.4-5.9,0.5\n                            c0.3-0.3,0.8-0.4,1.2-0.5c-0.5,0-0.9,0.1-1.2,0.5c-1.1,0.3-2.3,0.5-3.3,1c-1.9,0.8-3.5,6.9-5.8,0.3c-0.2-0.5-1.5,0.1-1.8,1\n                            c-0.5,1.4-1.5,2.8-1.5,4.2c-0.1,5.1-3.8,3.7-5.3,2.2c-2.8-2.9-4.6-1.8-6.8,0.3c-1.3,1.2-2.4,3.1-3.9-0.2\n                            c-0.8-1.8-2.9-2.3-4.6-0.4c-2.3,2.5-4.8,2.7-8,1.8c-1.9-0.6-4.4-0.7-5.6,1.8c-0.1,0.3-0.5,0.7-0.6,0.7\n                            c-6.1-1.5-9.5,6.7-15.8,4.3c-2.9,1.9-6.1,1.2-9.2,1c-1.2-0.1-2.3-0.8-3.4-0.4c-7.9,3-16.1,1.5-24.1,1.9\n                            c-1.3,0.1-2.5-0.2-3.5,1.2c-5.6,7.1-12.9,7.6-20.9,5.1c-0.8-0.3-1.8-0.7-2.4-0.2c-3.1,2.7-7.4,1.3-10.8,3.1\n                            c-2,1.1-4.4,2.1-5.8-1.2c-0.7-1.8-1.1,0.1-1.6,0.4c-2.2,1.2-4.7,4.3-5.6-1.1c-0.2-1.2-1-0.1-1.4,0.1c-7.8,2.3-16.1,2.8-23.6,6.3\n                            c-0.3,0.1-0.7,0.2-0.9,0.5c-4.7,7.7-12.1,1.9-18.1,3.6c-1.5,0.4-3.3-0.5-4.3-2.1c-0.7-5.4-0.3-5.1,4.5-4.7\n                            c5,0.4,10.3,0.1,14.6-3.5c0.1-0.1,6.6-1.8,6.7-1.7c0.7,0.4,1.7,1.1,2.3,0.6c4.9-3.8,11.7-3.3,16.6-7.5c2.8-2.4,7.3-1.9,11.1-2.2\n                            c5-0.5,10-0.2,15-0.1c2.2,0.1,4.9-1.3,6.1-1.2c4.7,0.5,8.3-4.8,13-1.9c0.1,0.1,0.1,0.7,0.3,0.4c6-5.9,13.8-3,20.8-4.2\n                            c0.3-0.1,0.4-1.4,0.1-3.4c-4.7,5.4-11.3,2.8-16.8,4.3c-1.4,0.4-3.1-0.5-3.6-2.1c-0.5-1.4,1.4-1,1.9-1.7c11.7-1.7,23.3-3.5,35-5\n                            c16.6-2.1,33.3-3.9,49.9-5.8c5.9-0.6,11.9-0.9,17.9-1.4C777.6,145.8,779.5,146.3,781.1,145z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#68676A",
                  d:
                    "M714,172c5.3-0.9,10.7,2,15.9-0.1c5.4-2.1,11.1-2.2,16.7-3.4c4.4-0.9,8.7-0.7,12.9-1.8\n                            c2.4-0.6,6.1,0.1,6.7-3.9c1.3,1.4,3.2-3.8,4.2,0.4c3.3-1.3,7.8,0.1,10.2-3.1c1.3-1.7,1.5-1.2,3.2-0.8c2.4,0.6,5.7,2.6,7.6-1.8\n                            c0.3-0.7,5.1-0.3,7,0.8c1.5,0.9,3.1,1.6,4.6,2.6c1.4,1.1,3.1,1.9,2.7,4.1c-0.1,0.4-0.3,0.8-0.6,1.2c-0.9,0.8-1.9,1.7-2.7,2.6\n                            c-0.4,0.3-0.7,0.4-1.2,0.4c-1.4-0.5-2.6-1.3-2.5-3c0.5-0.4,0.3-0.4-0.1-0.1c-0.5,0.4,0.1-0.2-0.4,0.2c-4.4,0-8.5,2.1-12.9,1.7\n                            c-1-0.1-2.4-0.6-2.9,0.1c-3.1,4.3-5.2,1.1-7.4-0.7c0,0.5,0-0.7-0.1-0.3c-0.2,1.2,1,3.8-1.4,3.1c-3.2-0.9-6.1,0.7-9.3,0\n                            c-3.3-0.7-6.8,0.1-10.1,1.7c-4,1.9-8.2,3.7-12.9,2.5c-1.7-0.4-4.3-0.9-4.7,1.4c-0.8,3.6-3.6,3.9-6,4c-4.5,0.1-8.7,4.5-13.4,1.4\n                            c-3.7-2.4-7.3-1.9-11.1,0c-2.4,1.3-5.6,0.2-7.7,1.2c-4.1,2-7.7,3.4-12.1,1.4c-1.7-0.8-2.4,0.3-2.5,2.3c-0.2,3.5-1.5,6.1-5.7,3.2\n                            c-2-1.4-4.6,0.1-6.4,0.2c-4.2,0.3-9.3-0.3-12.7,3.7c-0.7,0.7-2.2,1.2-2.8,0.6c-3.2-3.1-5.7-0.1-8.3,0.9\n                            c-1.8,0.6-3.1,0.4-4.2-1.4c-0.2-0.4,1.5-1.7-0.4-1.1c-7.6,2.3-15,5.1-23,5.7c-0.7,0-1.4,0.6-1.9,0.3c-3.9-2.2-7.6-0.5-11.4,0.2\n                            c-1.3-0.8-2.8-1.5-4.2-1.1c-4.4,1.4-8-2.9-12.6-1.2c-2,0.7-1.5-2.1-0.8-3.6c1.3-2.1,3.2-2.8,5.6-2.3c2,0.4,4,0.3,5.9,0.8\n                            c3.1,0.8,5.2,0.2,5.9-3.3c0.2-1.3,0.6-2.8,2.2-3c1.7-0.2,2.1,1.4,2.6,2.6c1.7,4.3,4.7,1.6,7.1,1.4c6.6-0.7,13-3.5,19.8-2.2\n                            c0.3,0.3,0.6,0.6,0.9,0.9c-0.2-0.2-0.3-0.4-0.5-0.7c0.9-2.1,2.8-2.6,4.6-3.2c2.5-0.8,4.1,0.2,4,3c0.4-0.1-0.1-0.3,0-0.5\n                            c3-2.4,6.7-2.1,10.1-2.5c6.8-1,13.4-2.1,19.5-5.7c3.1-1.9,7.1-1.6,10.6-1.6c4.7,0.1,8.7-1,13.1-2.7\n                            C704.7,171.9,709.3,168.8,714,172z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#656366",
                  d:
                    "M648,187c-0.6-0.1-1.3-0.2-1.9-0.3c0.7-4.8-1.8-2.6-3.7-1.6c-1.2,0.6-2.3,1.3-3.4,1.9v0\n                            c-4.5,0.7-9.1,1.8-13.3,2c-3.3,0.2-6.4,2.5-9.5,1.5c-2.3-0.8-1.8,2.2-3.5,2.1c-1-2.3-2.9-4.3-2.9-7.1c-0.7,0.2-1.2,0.3-1.3,0.4\n                            c-2.6,7.9-2.6,8-12.8,5.8c-2.4-0.5-4.2-0.7-5.7,1.4c-2.9-0.9-5.5,1.1-7,2.4c-3.4,2.9-4.3,0.8-5.7-1.6c-0.6-1.8-0.6-3.6-0.4-5.4\n                            c0.1-1.3,0-2.9,1.6-3.3c1.2-0.3,1.4,1.7,2.6,1.9c2.8,1.5,5.8,1.2,8.8,0.6c1-0.2,2.3-0.8,2.8-0.4c5.2,4.2,7-0.9,9.7-3.4\n                            c0.3-0.3,0.4-0.7,0.5-1.1c2.6,3.8,3.8-0.4,5.5-1.1c6.4-2.4,13.4-2,19.8-4.4c0.6-0.2,1.6-0.2,1.9,0.2c2.4,2.7,2.3,2.7,5.3-0.6\n                            c0.3-0.3,0.8-0.5,1.8-1c-1.7,6.6,1.4,5.3,4.7,3.4c3.4-1.9,8.1,0.3,10.8-3.7c0.4-0.6,1.5,0.6,2.1,0.7c1.5,0.2,3.4,4.8,4.8-0.3\n                            c0.3-1.1,1.2,0.3,1.8,0.7c2.3,1.5,4.7,3.2,6.8-0.2c0.6-1.1,1.4-1.4,2.4-1c1.2,0.4,1.9-0.2,2.6-0.9c4.8-4.1,4.9-3.5,11.9-3.9\n                            c4.7-0.3,9.6,1,14.4-1.3c5.2-2.6,11,0.8,16.6-0.2c-0.7,1-1.3,2-2,3c-4.1-1.5-7.5,2.5-11.5,1.6c-0.4-0.1-1,0-1.3,0.3\n                            c-3.8,4.2-8.6,2.9-13.4,3.3c-3.6,0.3-7.8-0.6-11.1,2.2c-2.9,2.5-7.8,1.4-10,5.3c-2.8-2.6-5.8-0.2-8.7-0.2\n                            C654.5,184.5,651.3,186,648,187z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6C6E",
                  d:
                    "M805,166c0.4-2.1-1.1-3.4-2-5c2.8,2.2,3.6-0.4,4.9-2c0,2,0.1,4,0.1,6C807.3,166.1,806.5,167.1,805,166z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4B4848",
                  d:
                    "M908,275c1.3,5.3,2.7,10.7,4,16c-0.2,1.4,0.5,2.9-0.7,4.6c-3.6-5.1-2.9-11.3-5.3-16.6\n                            c-0.1-4.2-1.4-8.1-3-12c0.5-3.6-2.1-6.5-2-10c-0.3-0.7-0.7-1.3-1-2c-0.3-1.7-0.7-3.3-1-5l0,0c0.4-0.6,0.7-1.4,1.7-1.2\n                            c3.3,4.4,2.8,9.9,4.3,14.8C906.2,267.4,906.5,271.3,908,275z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B4A",
                  d:
                    "M922,294c-1.4,3.4-2.7,0.7-4-0.1C919.3,294,920.7,294,922,294z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B4A",
                  d:
                    "M917,294c-0.1,1-0.4,2-1.7,1.8c-1-0.1-1.1-1-1.3-1.8C915,294,916,294,917,294z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383638",
                  d:
                    "M908,275c-3.9-6.5-4.1-14.1-6-21.1c-0.5-1.8-0.6-3.6-2.1-4.9c-1.3-2.5-1.1-5.4-2-8c0,0,0,0,0,0\n                            c0.1-3.5-0.6-6.8-2-10c0-3.2-0.4-6.2-2-9c-1-6-2-12-3-17.9c0.5,0.7,0.9,1.3,1.7,2.5c0.1-1.5,0.1-2.5,0.2-3.5\n                            c0.2-0.1,0.4-0.2,0.6-0.3c0.5,0.1,0.8,0.4,1.1,0.8c0.6,1.5,0.6,3.2,1.2,4.7c0.4,1.4,0.6,2.8,1.1,4.1c0.4,1.7,0.5,3.4,1.1,5\n                            c0.9,5,2,10,3,15c0.3,1.9,0.5,3.8,1.1,5.7c0.2,0.9,0.4,1.8,0.6,2.6c0.1,0.4,0.2,0.8,0.3,1.2c0.2,1,0.7,1.8,1.9,1.9\n                            c1.1,0.2,2.3,0.2,3.1,1.1c0.2,0.9-0.1,1.3-1.1,1.2c-4.1-0.6-4.8,1.2-3.9,4.8C905,258.8,907.1,266.8,908,275z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575352",
                  d:
                    "M880.9,149.1c0.4,4,0.8,7.9,1.2,11.9c-1.9,1.2-0.4,3.5-1.5,5c-1-0.7-0.5-1.8-0.6-2.6\n                            c-0.2-1.3-0.4-3.3-2-2.8c-2.1,0.8-0.2,2,0.4,2.9c0.7,1,0.4,1.9-0.7,2.4c-0.6,0.3-1.2,0.7-1.8,0.8c-2.1,0.3-0.3,4.5-3,3.5\n                            c-3.7-1.3-7.9-2.7-9.5-6.7c-1.1-2.8-4.4-4.8-3.5-8.5c-6-1.5-1.5-7.6-4.7-10.7c-1.5-1.4,1.7-3,2.2-4.9c0.2-0.6,1.6-0.9,2.5-1.3\n                            c6.3,0,12.6,0,19,0c0,0.3,0.1,0.6,0.1,0.9c1.1,1.5-0.2,3.5,1,5C880.2,145.7,879.4,147.6,880.9,149.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#605C5D",
                  d:
                    "M861,220c0.1,0.8,1.3,1.6,0.3,2.5c-0.1,0.1-0.7,0-0.8-0.1C859.8,221.4,860.2,220.6,861,220L861,220z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5C5D",
                  d:
                    "M581,187c-2.2,3.5-1.7-0.5-3-1.6c0,3.3,0,5.9,0,8.6c1.1,1.9,1.3,3.9,1.3,6c0,2.9,0,5.8,0,8.7\n                            c0,2,0,4.1,0,6.1c0,1.5-0.1,3-1.2,4.2c-0.6,0.2-1.2,0.1-1.6-0.4c-1.6-3.2-0.8-6.6-1-9.9c0.1-6.2,0-12.4,0-18.6\n                            c0-3.4,0-6.8,0.1-10.2c0-2,0.3-3.9,2.4-4.9c4-1,8-2,11.9-3c1.5-1.2,3.6,0.2,5.1-1c11.9-2.1,23.8-4.4,35.7-6.4\n                            c14-2.4,28-5.1,42.2-6.6c-2.8,3.8,2,3,2.2,2.8c4.4-3.3,10.8,2.1,14.7-3.5c0.4-0.6,2.5-0.1,3.8-0.2c-3.2,2.5,2.6,3.5,1,5.8\n                            c-0.7,1.1-2,1.3-2.5,0.5c-2.2-3.7-5.2-1.6-8-1.5c-3.4,0.2-6.6,1.8-10.2,1.2c-3.3-0.5-3.2,2.6-3.2,5c-1.8-0.9-0.9-4.3-2-3.5\n                            c-1.6,1.4-4.8-0.9-5.1,2.4c-0.1,0.9-1.2,2-1.4,1.6c-3.3-5.4-5.4,1.4-8.1,0.7c-3.8-1-7.6-0.7-11.4-0.4c-4.2,0.3-9-2.1-12.7,2.2\n                            c-0.7,0.9-1.8-0.3-2.4-1.1c-0.6-0.8-1.5-1.1-1.9,0c-2.1,5.2-7.2,4.2-11.1,5.3c-1.5,0.4-2.2,1.3-3.2,2.1\n                            c-1.6,1.5-3.6,1.9-5.5,1.4c-2.1-0.5-2-0.8-2.3,1.4c-1.1,0.6-4-6-3.7,0.9c0,0.8-1.8,1.6-3,1.2c-3.5-1.2-6.5,0.1-9.4,1.7\n                            c-1.2,0.6-2.2,0.7-3.2-0.1C579.6,179.7,581.4,184.9,581,187z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#161516",
                  d:
                    "M576.9,190c0,6.3,0,12.7,0,19c-1.9,0-2.2-1.5-2.2-2.8c-0.1-11.4-2.3-22.8-0.8-34.2c3-0.6,6-1.3,9-1.9\n                            c-0.1,1.9-1.7,1.6-2.9,2.1c-1.5,0.6-3.9,0.3-4.1,2.8C577.3,179.9,575.7,185.1,576.9,190z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292728",
                  d:
                    "M576.9,190c-2-4.9-0.4-10-0.9-15c0.7,0,1.4,0,2,0C575.8,179.9,577.7,185,576.9,190z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#161516",
                  d:
                    "M594,169c3.2-2.7,7.5-1.5,11-3C602,169.3,597.9,169,594,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#161516",
                  d:
                    "M595.1,171c-1.5,1.4-3.4,0.8-5.1,1C591.4,170.3,593.4,171.2,595.1,171z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262426",
                  d:
                    "M816,267c0.3,0.3,0.7,0.7,1,1c0,1,0,2,0,3c1,1.3,0,2.7,0,4l0,0C813.4,272.7,814.4,269.9,816,267z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C595A",
                  d:
                    "M701,147c0.7-0.7,1.3-1.3,2-2c0.7,0,1.3,0,2,0C704.7,147.7,702.6,146.8,701,147z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C595A",
                  d:
                    "M737,144c0,0.3,0,0.6-0.1,0.9c-1.6,0-3.3,0-4.9,0C733.4,143.3,735.3,144.2,737,144z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5A5A",
                  d:
                    "M820.7,160.6c-0.1-0.3-0.5-0.6-0.5-1c-0.1-0.5,0.2-1,0.7-0.8c0.3,0.1,0.7,0.6,0.8,1\n                            C821.8,160.4,821.4,160.6,820.7,160.6z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#525052",
                  d:
                    "M898,241c1.4,2.5,2,5.2,2,8c-0.3,0.3-0.7,0.7-1,1C898.7,247,897.5,244.1,898,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#646060",
                  d:
                    "M847,230c0.4-1.3-1.8-2.7,0-4C848.4,227.3,848.4,228.7,847,230z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#454345",
                  d:
                    "M814,243c0.3,0,0.6,0,1,0c0,0.3,0,0.6,0.1,1c0,0.7,0,1.3,0,2c0,1-0.1,2.1-0.1,3.1\n                            c-0.6,0.2-1.1,0.1-1.5-0.4C812.6,246.7,812.4,244.7,814,243z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151318",
                  d:
                    "M814,248.9c0.3,0.1,0.7,0.1,1,0.2c0,1.6,0.1,3.3,0.1,4.9c0.3,4.3,0.6,8.7,1,13c0.4,2.7-1,5.5,1,8\n                            c0.2,5-0.2,10.1,1.9,14.8c-4.3-5.2-10.7-3-16-4.8c3.3-2.4,6.8-1.1,10.3-0.5c-3.2-0.7-4.6-1.9-1.7-4.7c1.7-1.6,2.3-3.8,1.9-6\n                            c-1-6.7,0.4-13.7-1.9-19.9c-1.1,1.9-2.9,2.8-5.6,2.6c-3.1-0.3-6.3,0.4-9.4,0.4c-2.9,0-2.9,0.1-4.7-3c-0.3-0.4-5.5,0.8-6.1,1.1\n                            c-2.8,1.6-2.2,5.3-4.8,7.2c-2.1,1.4-3.6,1.7-5.2,0.1c-1.7-1.7-3.6-3.7-2.3-6.5c0.4-0.8,1.5-0.3,2.2-0.5c0.7,0-0.2-0.9,0.1-0.3\n                            c0.1,0.2,0,0.3-0.3,0.3c-4.2,0.4-8.7,0-11.2,4.7c-0.9,1.7-2.7,2-4.4,1.4c-8.1-2.5-16.4-1.5-24.6-1c-7.4,0.5-14.8-0.6-22.2-0.2\n                            c-6.6,0.4-13,3.3-19.7,1.5c-2.1-0.5-4.4-0.2-5.9-2.1c-1.1-2.1-4.5-0.9-5.3-3.5c1.1-1.7,2.9-1.5,4.6-1.7\n                            c19.8-1,39.6-2.4,59.3-3.9c11.4,0.2,22.7-1.4,34.1-2.2c8.9,0.7,17.6-1.6,26.4-1c2,0.1,4-0.1,6,0.4\n                            C812.9,248.2,813.5,248.5,814,248.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575354",
                  d:
                    "M857,136c1.5-1.6,3.5-0.9,5.2-0.9c19.8,0,39.6-0.3,59.4,0.1c7.1,0.2,14.2,0.8,21.4,0.8\n                            c-0.7,2.7-2.9,0.9-4.3,1.5c-7.6-0.1-15.2,0.4-22.7-0.5l0,0c-1.5-1.6-3.4-0.9-5.2-0.9C892.9,136,874.9,136,857,136z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#737172",
                  d:
                    "M805,166c1-0.3,2-0.7,3-1c1,5.3,1.1,10.6,1.1,15.9c0.3,0.4,0.3,0.8,0,1.2c-2.5-2.2-5.6-1-8.4-1.1\n                            c-3.1-0.1-6.3,0.2-9.4,0.5c-1.9,0-3-1.8-5.4-1.7c-3,0-4.8-2.7-4-6.2c3.4-3.6,8.2-1.4,12.3-2.9c2.3-0.9,5-2.1,7.8-1.8v0\n                            C802.8,167.8,803.8,166.8,805,166L805,166z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5556",
                  d:
                    "M808.9,182c0.1-0.3,0.1-0.7,0.2-1c0.3,0,0.6,0,0.9,0c0,3-0.1,6.1-0.1,9.1c-1.5,0-1.8-1.2-2.1-2.3\n                            C807.7,185.7,807.4,183.7,808.9,182z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292728",
                  d:
                    "M574,172c1.2,1.9,1.1,4.1,1,6.2c-0.6,9.6,1.6,19,1.1,28.6c0,0.7,0.6,1.4,0.9,2.2c0,3.3,0.1,6.6,0.1,9.9\n                            c2,2.6,1.2,5.6,1.3,8.5c0.1,1.9,0,3.9,0.7,5.8c0.6,3.7,0.2,7.4,0.4,11.1c0,3.2,0.1,6.5-0.1,9.7c-0.1,1.6,0.3,3.8-2.3,4.1\n                            c0-0.3,0-0.6,0-1c-1.9-2.2-1.2-4.9-1.3-7.4c0-1.9,0.1-3.8-0.5-5.6c-0.3-1.6-0.7-3.2-1.2-4.8c-0.2-5.7-1.4-11.4-1.4-17.1\n                            c0.1-1.7,0.1-3.5,0.1-5.2c0-7.6,0.4-15.1-1.2-22.6c-0.4-1.9-0.5-3.9,0-5.9c0.1-2.1,0-4.2,0.2-6.3c0.4-3.7-0.6-6.3-4.6-7\n                            c-0.4-0.9-1.2-1.1-2.1-1.2C567.9,172.7,570.8,172,574,172z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534C4B",
                  d:
                    "M939,137c1.4-0.2,3,0.4,4-1c0.3,0,0.7,0,1,0c1.5,1.2,3.5-0.2,5,1c2.3,0,4.7,0,7,0c3.5,2.1,7.4,0.5,11,1\n                            c3,0.3,6,0.7,9,1c2.2,1.3,4.8-0.3,7,1c3.4-0.1,6.6,1.6,10,1c1.5,1.2,3.5-0.2,5,1c2.7,0.1,5.2,1.5,8,1c0,0.3,0,0.7,0,1\n                            c-11-1.1-22-2.1-33-3.3c-11.3-1.2-22.6-2.8-34-2.8c-0.3-0.2-0.5-0.4-0.4-0.6C938.8,137.1,938.9,137,939,137z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575354",
                  d:
                    "M949,137c-1.7-0.2-3.6,0.7-5-1C945.7,136.2,947.6,135.3,949,137z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575354",
                  d:
                    "M983,140c-2.3-0.4-4.9,0.9-7-1C978.3,139.4,980.9,138.1,983,140z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#575354",
                  d:
                    "M998,142c-1.7-0.2-3.6,0.7-5-1C994.7,141.2,996.6,140.3,998,142z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#676567",
                  d:
                    "M564,178.9c0.3,0.1,0.7,0.1,1,0.2c2.5,3.7,1.1,7.7,1.1,11.6c-0.2,1-0.7,1.8-1.1,2.7\n                            c-2.7,5.6-3.9,5.9-8.4,1.8c-2-1.9-4.4-2-6.9-1.9c-5.2,0.1-10.3-0.4-15-2.8c-0.9-0.5-1.8-0.9-1.9-2.1c1.6-3,4.9-3.2,7.6-3.9\n                            C548.2,182.4,555.7,178.8,564,178.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292728",
                  d:
                    "M487.2,256.7c0.9-2.3,1.6-4.5-0.2-6.7c-3-4.1-0.9-8.8-1.5-13.1c0-7.9,0-15.8,0-23.8\n                            c0-2.1-0.4-4.3,1.4-6.1c8.6-4.4,17.2-8.8,25.7-13.4c2-1.1,3.5,0.3,5.2,0.3c0.1,0.2,0.2,0.5,0.3,0.7c-2.7,3.8-7.5,4-11.2,6.3\n                            c-4.3,2.1-8.8,3.8-12.8,6.5c-3,1.3-3.9,3.6-3.9,6.8c0.1,12.8,0.1,25.7,0,38.5c0,1.3-0.5,2.4-1.3,3.3\n                            C488.6,256.8,488,257,487.2,256.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292728",
                  d:
                    "M564,178.9c-10.6,2.6-21.2,5.3-31.2,9.9c-1.4,1.7-3.2,2.2-5.3,1.6c-0.2-0.2-0.4-0.3-0.5-0.5\n                            c-1.1-3,1.8-2.9,3-3.3c7.7-2.7,15.5-5.4,23.5-7.1C557.1,178.7,560.3,176.7,564,178.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F3B3C",
                  d:
                    "M565,192c0-4.3,0-8.6,0-12.8c0-1.5,0.6-2.5,1.9-3.2c2.4,2.6,1.4,5.9,1.6,8.9c0.2,7.5-0.7,15,0.4,22.5\n                            c0.2,0.6,0.3,1.1,0.4,1.7c0.1,3.5,0.4,6.9-0.2,10.4c-0.7,1.8-0.5,3.9-1.8,5.5c-1.5,0.7-1.8-0.5-2.3-1.5\n                            c-0.3-1.3-0.3-2.6-0.3-3.9c-0.1-1.8-0.3-3.6,0-5.4c0.1-1.6-0.1-3.2,0-4.8C565.1,203.5,563.8,197.7,565,192z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#646162",
                  d:
                    "M567.1,185.1c-0.1-3-0.2-6.1-0.2-9.1c0.1-0.3,0.1-0.5,0.2-0.8c5.9-1.2,5.9-1.2,6,5c0,2.6,0,5.3,0,7.9\n                            C569.3,190.4,568.3,187.5,567.1,185.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#333133",
                  d:
                    "M487,207c0,10,0,20,0,30.1c-0.6,0.2-1.2,0.1-1.5-0.5c-1.4-3.4-0.7-7.1-0.9-10.6\n                            c-0.2-6.6,0.8-13.3-0.5-19.9c0-0.3,0-0.7,0-1C485.5,205,486.9,205,487,207z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292728",
                  d:
                    "M517.9,193.9c1-3.4,4.7-5,9-4c0,0,0.2,0.2,0.2,0.2c-2,3.7-5.1,4.7-9.1,3.9L517.9,193.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6A6464",
                  d:
                    "M485.9,226c0,3.6,0.1,7.3,0.1,10.9c0.5,1.3,1,3-0.3,3.9c-1,0.7-1.4-0.8-1.9-1.6c-0.3-1.1-1-2.1-1.2-3.2\n                            c-0.6-2.7-1-5-4.5-2.7c-0.6,0.4-1.6-0.2-2.4-0.5c-2.3-0.8-3.3,0.2-3.8,2.4c-0.5,1.8-0.1,4.5-3.1,4.8c-5.6-4.4-10-9.9-15-15\n                            c1.6-2.7,4.2-4,6.9-5.1c1.1-0.5,2.4-0.2,3.4-0.8c4.6-2.8,9.3-2.8,14.1-0.8c0.7,0.3,4-4.2,4.3-5.7c0.3-1.9-0.2-4,1.2-5.7l0,0\n                            c2.7,0.4,1.4,2.5,1.5,3.9C485.8,215.8,484.9,220.9,485.9,226z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635F5E",
                  d:
                    "M483.9,206.9c1.7,5.7-1.9,9.8-4.8,14.3c-1.2-0.1-1.5-1.2-1.7-2.6c-0.1-1.1-1.5-1.9-2-0.7\n                            c-1.5,3.4-3.4,2-5,0.6c-1.9-1.7-2.8,0.2-3.7,0.8c-1.9,1.3-3.6,2.3-5.8,0.7C468.1,214.8,475.8,210.4,483.9,206.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635F5E",
                  d:
                    "M485.9,226c-2.1-4.2-0.4-8.7-1-13c-0.3-2,0.8-4.3-1.1-6.1c0-0.3,0-0.6,0.1-0.8c2.5,0.3,1.9,2.2,2,3.8\n                            C486,215.2,486,220.6,485.9,226z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#636162",
                  d:
                    "M885.9,162.1c-1.4-4.2-2.1-8.6-2-13c-0.5-4.3,0.4-5.3,4.2-4.1c2.4,0.8,4.2,1.3,6.4-0.4\n                            c1.7-1.3,3.8-0.5,5.8,0c2.7,0.7,5.5,1.4,8.4,0.9c7-1.2,13.9-2.4,21-1c-2.7-0.1-5.2-1-7.8-2.1c6.4-0.9,12.8-1.3,19.2-0.5\n                            c24.1,0.4,47.9,3.6,71.6,7.5c11.2,1.9,22.5,3.8,33.4,7.5c-0.2,0.3-0.5,0.5-0.8,0.5c1,0.5-0.1,1.6,1.2,2.5\n                            c1.8,1.2,0.3,3.1-1.6,3.4c-1.4,0.2-3.3,0.7-4.4-0.2c-2-1.7-3.3-0.6-5,0.4c-3.5,2.1-7.4,3.3-11.3,1.6c-5.5-2.4-11.2-1.1-16.6-0.4\n                            c-2.6,0.4-4.2,1.2-4-2.3c0.1-1.2-0.8-2.3-1.7-2c-3.1,1.1-6-0.4-9.4,0.5c-6,1.7-12.5,2.7-18.6-0.3c-0.4-0.2-1-0.4-1.5-0.2\n                            c-7.7,2.4-15.4-1.8-23.1,0.4c-3.5,1-6.3,0.3-9.8-1.6c-4.8-2.6-10.9-1.2-15.7,1.8c-2.4,1.5-3.5,1.4-4.4-1.2c-1-3-2.8-2.8-5-1.3\n                            c-1.3,0.9-2.6,1.4-4.2,0.6c-1.4-0.7-2.4-0.1-3.5,1c-2.8,2.8-6.7,3-10.2,0.7c-2.7-1.8-5.5-4.1-7.5,1\n                            C888.5,163.1,887,162.4,885.9,162.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#686666",
                  d:
                    "M885.9,162.1c0.4-0.8,1.1-0.5,1.8-0.4c-0.7-5.4,3.7-3.6,6.3-4.6c1.8-0.7,2.3,0.5,2.6,1.3\n                            c0.7,1.9,2.2,1.5,3.4,2.1c4.2,2.2,5.7-0.1,7.1-3.1c0.5-1,1.4-1.3,1.9-0.5c2.3,3.1,4.1,1,6.1-0.2c3.6-2.1,4.8-1,6.2,5.5\n                            c1.7-2.2,2.6-4.8,6.4-3.7c1.4,0.4,4-4.6,6.2,0.3c1.8-0.9,0.6-2.6,1.6-3.7c0.3,0.1,0.8,0.2,1.1,0.5c0.9,1.1,1.3,3,3.3,2.2\n                            c2.2-0.8,3.1-0.5,2.6,2.2c-0.3,1.3,1.3,1.5,2.2,1.1c5.7-2.9,12.2-2.7,17.7-1.7c3.9,0.8,7.7-1.8,10.5,0.1c4.3,2.9,8.8,0.5,13,1.6\n                            c1.8,0.5,4.5,0.5,5.8-0.6c3.5-2.7,7.1-1.2,10.6-1.3c4.9-0.1,2.4,3.3,2.1,5.6c6.4-2.3,12.6-3.2,18.8-1c4.4,1.5,8.1,1.6,11.7-1.9\n                            c1.3-1.3,4.9-1.3,5.3-0.5c1.5,2.8,4-1.1,5.1,1.3c0.3-0.5,1.1-1.1,1-1.5c-0.4-1.9-2.4-0.2-3.2-1.3c2,0.3,0.9-3.2,3.2-2.6\n                            c8.5,1.7,16.9,3.8,25,7c1.2,2.5,3.9,1.8,5.8,2.6c2.4,1,5,1.7,1,4.1c-1.8,1.1-1.9,4.1-4.6,4c-1.9-0.4-3.8-1.2-5.8-0.4\n                            c-0.6,0.3-1.5,0.6-1.9,0.1c-5.4-5.3-13.3-2.5-19.2-6.3c-2.2-1.4-4.7-0.4-7.1,0.3c-2.7,0.8-3.9,4.9-7.6,3.3\n                            c-0.7-0.3-0.3,0.8-0.4,1.3c-0.3,1.7-0.4,3.3-2.2,4.2c-6.9-3.3-14.2-4.2-21.8-4.3c-4-0.1-7.9-1.7-12.1-2\n                            c-4.3-0.2-8.5,0.6-12.7,0.9c-5.1,0.4-9.2-0.1-13-4.2c0.9,1.7,1.5,3.1-0.6,3.7c-1.7,0.5-3.2,0.1-4.9-0.3c-3.3-0.9-6.5-2.4-10-0.1\n                            c-1.9,1.2-3.6-0.5-5.1-2c-2.3-2.4-8.3-2.1-11,0.3c-1.4,0.5-2.3-0.2-3-1.2c-4.3-3.7-9.2-1.9-14-1.4c-0.5,0-0.9-0.1-1.4-0.3\n                            c-2.9-1.5-5.6-1.8-8.3,0.5c-2.4,1.9-5.3,1.4-8,1.2c-4.3-2-9.1,0.2-13.6-1.4c-0.6-0.2-0.1,0.4-0.1,0.5c0.1,1.9-0.3,3.6-1.8,4.9\n                            C886.6,168.9,886,165.6,885.9,162.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6968",
                  d:
                    "M1073,174c3.3-0.4,1.6-6.3,6.4-5.2c-3.6-2.1-7.6-1.6-10.7-4.6c0.9-0.1,1.7-0.2,2.4-0.3\n                            c15.8,4.1,30.8,10.3,46,16.2c0.9,0.4,1.9,0.6,2.8,0.9c3.4,1.7,6.7,3.3,10.1,5c0.1,1.3,1.7,1.2,2.1,2.3c0.1,0.4,0,0.7-0.2,1\n                            c0,0.1-0.5,0-0.2,0.3c0.2,0.1,0.6-0.1,1-0.1c2.1,0.7,1.5,1.8,0.4,3c-0.3,0.6-1.8-0.1-1.3,0.8c0.5,1,1.9,1.8,0.8,2.9\n                            c-1.1,1.1-2.5,0.7-3.6-0.2c-2.5-2-5.1-3.5-8.2-4.5c-3.5-1.1-7.7-0.4-10-4.2c-0.1-0.2-0.6-0.2-0.9-0.2\n                            c-6.1,0.9-10.4-3.2-15.5-5.4c-6.2-0.7-12.2-1.7-17.9-4.4C1075.2,176.5,1072.7,176.8,1073,174z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5B5C",
                  d:
                    "M941.1,141.9c-6,0-11.9,0-19.3,0c4.6,2,8.3,0,11.5,1.9c-0.5,1.9-2,2.3-3.1,2.1c-4-1-8.2-0.1-12.2-0.8\n                            c-2.6-0.5-4.7,0.9-7,1.4c-3.6,0.6-6.8,0.3-10.2-0.4c-2.5-0.4-5.8-3.5-7.2,1.8c-0.1,0.2-3.6-0.3-5.4-1.3\n                            c-2.2-1.1-4.7-1.4-4.2,2.6c-1.7-2.9-0.9-6-0.8-9c18.1,0.3,36.1,0.7,54.2,1C938.7,141.1,940,140.9,941.1,141.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322F30",
                  d:
                    "M939,137c0,0.3,0,0.6,0,1c-6.3,0-12.6,0-18.9,0c-1.4,0-3,0.4-4.2-1C923.7,137,931.3,137,939,137z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2B2B",
                  d:
                    "M880,144c-1.6-1.4-0.8-3.3-1-5C880.7,140.4,879.8,142.3,880,144z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#625C59",
                  d:
                    "M1993.1,562.2c-0.7,0.6-1.4,1.2-2.1,1.8c-3,0.7-5.5-0.5-8-2c-1.7-3.3-6.3-2.7-8-6\n                            c4.3,0.3,7.8,2.7,11.5,4.5C1988.7,561.6,1990.8,562.1,1993.1,562.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2827",
                  d:
                    "M2005,565c1.8-1.8,4-0.7,6-1C2009.2,565.8,2007,564.7,2005,565z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AEADAB",
                  d:
                    "M1177,154c-11.5-3.4-22.7-7.6-32.9-14.1c-3.7-1.5-6.9-3.7-10.1-6.1c-3.9-1.9-7.7-3.9-11.6-5.8\n                            c0.1-0.4,0.1-0.8,0.2-1.2c2.7,0,5.4,0,8.1,0c5.7,0,11.5,0,17.2,0c0,0.4,0,0.7,0,1.1c-4.7,0-9.4,0-14,0c-0.1,0.5-0.2,0.9-0.3,1.4\n                            c4.6,0.9,9.1,1.9,13.4,3.6c-0.4,0.8-1.2,1.3-2,1.7c-1.3,1.3,0.1,1.7,0.8,2c9.4,4.3,18,10.1,27.6,13.8\n                            C1175,151.2,1177.2,151.5,1177,154z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484A44",
                  d:
                    "M1134,133.9c4,1,6.9,3.7,10.1,6.1c-2.1-0.6-4.2-1-2.4,2.8c-2.7-0.9-3.8-4.1-6.8-2.7\n                            c-2.2-0.6-4.4-1.4-1.1-3.4C1136.1,135.4,1134.4,134.8,1134,133.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BEBFBA",
                  d:
                    "M1145,134c0.5-0.8,1.2-0.9,2-1c1.3,0,2.7,0,4,0c4.1-1,8.4-0.2,12.5-0.5c8.9,5.6,18.6,9.6,26.8,16.5\n                            c4.6,3.8,11,6.4,17.7,4c1.8-0.7,3.7-0.6,5.4-0.2c2.1,0.4,4.3,1.8,4.5,4.1c0.1,2.1-2.7,1.5-3.7,2.4c-2.6,2.2-6,0.7-8.5,2.4\n                            c-4.4-0.1-8.3-1.3-12.1-3.6c-7.9-4.8-14.8-11.2-24.1-13.5c-1.3-0.3-2.7-0.9-3.5-1.9c-4.6-5.9-11.3-6.4-17.8-7.4\n                            C1147,135,1145.8,135,1145,134z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B4B4AF",
                  d:
                    "M1165,133c-4.7,0-9.3,0-14,0c6.6-1.9,13.4-1.6,20-0.4c11.6,2.2,22.8,5.9,33.9,9.8\n                            c0.9,0.3,1.6,0.4,2.1-0.5c0.3,0,0.7,0,1,0c0.8,1,1.9,1.8,0.9,3.3c-3.1,1-6,0.7-8.8-1c-2.4-1.4-5.1-2.1-7.9-2.4\n                            C1182.2,141.9,1174,136.1,1165,133z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ABA8A3",
                  d:
                    "M1209,145c-0.3-1-0.7-2-1-3c6.2,1.9,12.5,3.4,18,7c-0.7,0-1.4,0-2,0c-2.9,2.6-5.9,2.6-9,0.3\n                            C1213.1,147.8,1210.7,146.8,1209,145z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B0B2AB",
                  d:
                    "M1405,241c-7.5-2.9-14-7.8-21.1-11.5c-4.9-2.6-9.4-6-14.9-7.5c-4.4-0.4-8-3-11.8-5\n                            c-12.9-6.7-26.2-12.8-39.1-19.5c-5.4-2.8-11.2-4.9-16.6-7.7c-12.5-6.6-25.2-12.4-38.3-17.6c-2.3-0.9-4.7-1.7-6.8-3.1\n                            c-3.8-2.4-8.2-3.3-12.1-5.4c-1.6-0.9-3.1-2.2-3.3-4c-0.2-2,2-1.8,3.1-2.6c2.2,0.7,3.6,2.3,5,4c0.3,0,0.7,0,1,0\n                            c1.9,2.3,4.8,3.8,7.4,3.5c6.9-0.8,12.4,3.1,17.8,5.6c8.9,4.1,18,8.1,26.8,12.4c7.7,3.7,15.1,8,23.4,10.6\n                            c9.8,3.1,18.4,8.8,27.5,13.2c5,2.4,10,4.6,15.1,6.7c2.3,1,4.5,1.9,6,4.1c-1.7,0-3.5,0-5.2,0c0,0.3-0.1,0.6-0.1,0.9\n                            c7.7,4,15.4,7.8,23,12c4.3,2.4,8.9,4.3,12.3,8.1C1404.4,239,1405.6,239.7,1405,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B5B5AF",
                  d:
                    "M1244,157c-4.4,3.2-1,4.7,1.5,5.9c3.7,1.9,7.7,3.4,11.5,5.1c-0.8,0.8-1.7,1-2.8,1\n                            c-5.6-2.6-11.3-0.9-16.9,0c-6.8-1.4-6.9-1.4-7.5-8.3c-0.2-1.8-1.5-1.6-2.4-1.8c-6.3-1.4-11.8-4-16-9c-1.4-1.6-3.4-2.2-5.4-1.5\n                            c-5.5,1.9-9.5-2-14-3.7c-2-0.7-1.1-2.4,0.1-3.5c2.3-0.1,4.5,0.1,6.6,1.3c3.2,1.8,6.7,2.6,10.4,2.7c1.8-0.2,3.2,0.5,4.4,1.7\n                            c3,3.2,6.6,3.7,10.6,2.3C1230.2,152.8,1237.1,155,1244,157z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ACAEA6",
                  d:
                    "M1418,239c-2.5,0.6-4.4-1-6.5-2c-6.7-3.2-13.6-6-19.6-10.5c-1.1-0.8-0.7-1.7-0.9-2.5\n                            c2.5,0.7,4.1,3.4,7,3c4.3,4.3,10.2,5.8,15.3,8.9C1414.9,236.9,1417,237,1418,239z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ACAEA6",
                  d:
                    "M1423,243c-2.3-0.6-4.3-1.5-5-4C1420.8,238.9,1422.2,240.6,1423,243z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C292C",
                  d:
                    "M1302,282c1.4,0.1,2.4,0.7,3,2c-3.2,1.3-6.6,2.6-7.9-2.2c-0.6-2.1-2.1-1.3-3.2-1.3\n                            c-2.9-0.1-5.8,0.2-8.6,0.1c-0.9,0-2.1-0.9-2.6,0.1c-0.7,1.4,1.7,1.4,1.4,3.1c-2.3,0-4.5,1.1-6.7-1.9c-1.1-1.6-4.1,1-6.8-0.5\n                            c-2.2-1.3-3.8-2.3-4.5-4.6c-1-3.7-2.7-7.1-3.2-10.9c-0.6-4.7-3.1-6.8-7.9-4.8c-2.3-3.6-3.5-7.6-4.1-11.9\n                            c14.6,9.1,29.2,18.2,43.8,27.4c1.9,1.2,3.6,2.9,5.3,4.4C1300.6,281.5,1300.7,282.9,1302,282z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#673538",
                  d:
                    "M1236,250.9c6.3,2.3,11,6.9,16,11.1c0.9,2.2,3,3,4.9,4c3.2,6.4,0.7,11.8-2.8,17\n                            c-0.1-0.7-0.2-1.5-0.2-2.2c0-0.2,0-0.3,0-0.5c3-7.9,1.1-14.3-6.1-19c-2.6-2.9-6.2-4.4-9.2-6.7\n                            C1237.4,253.6,1235.4,253.3,1236,250.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#502024",
                  d:
                    "M1254.1,283c1.9-5.5,4.9-10.8,2.8-17c2.7,2.2,3.6,4.9,1.9,8.2c-0.8,1.5-0.9,3.1-0.8,4.8\n                            c-2.4,4.1-1.5,9.9-6.1,13C1252.6,289,1253.4,286,1254.1,283z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2B2828",
                  d:
                    "M1259.9,252.1c-1.4-0.1-2.4-0.8-3-2c1.3-0.8,2.7-1.2,3.9-0.1C1262,251.1,1259.9,251.2,1259.9,252.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#25191B",
                  d:
                    "M1256,300c-1.4,1.6-3.3,0.7-5,1C1252.4,299.3,1254.3,300.2,1256,300z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#201E1E",
                  d:
                    "M1329,300.1c-0.6,0-1.1,0.1-1.7,0.1c-2.4-0.1-4.9-0.3-7.3-0.4C1323.1,299.2,1326.1,298.1,1329,300.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#585F58",
                  d:
                    "M1319,224c-1,0.7-2,1.3-3,2c-0.7,0-1.3,0-2,0c-1.2,0.7-1.5-0.3-2-1c-3.2-4.8-8.2-5.3-13.3-6.3\n                            c-1.8-0.3-6.7,1-5.1-4.4c0.4-1.3-1.1-0.4-1.8-0.5c-3.4-0.3-6-3.1-9.6-3c0,0-0.1-1.2-0.2-1.9c0.1-0.1,0.3-0.2,0.4-0.3\n                            c0.8-0.9,2.1,0.6,2.8-0.6c0.1-0.1,0-0.4-0.1-0.4c-1.4-0.5-2,0.8-3,1.4c-3.1-0.1-0.8-3.5-3-5c-1.7-1.2-2.5-2.9-5.3-3.6\n                            c-3.5-1-8.2-1.3-10.3-5.7c-0.8-1.7-5.4-2.6-7.4-1.7c-6.1-5.6-15.1-6.1-21.1-11.6c-2.8-2.6-5.9-1.9-8.9-2.4c0.1-1.8-0.1-3.4-1-5\n                            c0.6-0.6,1.3-0.7,2.1-0.6c14.4,5.8,28.5,12.3,42.7,18.6c3.5,1.8,6.9,3.8,10.6,5c0.4,0.1,0.9,0.3,1.3,0.5\n                            c5.2,2.5,10.2,5.4,15.6,7.5c0.4,0.2,0.8,0.4,1.2,0.6c2.2,1.6,5.1,1.9,7.1,3.9c0.1,0.2,0.2,0.4,0.3,0.6c0.7,0.6,1.4,1.2,2.1,1.8\n                            c-0.1,0.6,1.2,1.6-0.4,1.8c-0.7,0.1-1.8-0.6-1.9,0.7c0,0.8,1,0.4,1.6,0.7c2.3,1-0.9,2,0.1,3.1c1.4,0.6,1.7-2,3-1.4\n                            c1.6,1.4-2.2,3.6,0.8,4.5c2.3,0.7,4.6,0.3,5.7-2.9C1315.9,221.2,1320.2,221.5,1319,224z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C4C6C2",
                  d:
                    "M1227,174.2c-0.7-0.1-1.3-0.1-2-0.2c-13.9-6.5-28.3-12-42.6-17.5c-1.8-0.7-3.6-1.6-5.4-2.5\n                            c-6.6-3.4-13.1-6.7-19.7-10.1c-4.4-2.2-8.9-4.3-13.3-6.7c-1-0.5-3-1-2.3-2.7c0.4-1.1,2.1-0.5,3.3-0.6c5.5-0.5,10.6,1.6,15.9,2.2\n                            c0.7,0.1,1.7,0.7,2,1.3c3.6,6.4,10.5,7,16.4,9.3c1.7,0.7,3.7,1,4.5,2.6c1.5,2.8,3.2,4.7,6.8,4.2c2-0.3,1.4,4.5,4.7,2.8\n                            c2.4,4.3,7.2,3,10.7,4.5c8.6,1.7,16.9,4.5,25,7.7c0.3,0.4,0.3,0.8,0.2,1.3C1229.8,171.4,1226.9,171.3,1227,174.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B7163",
                  d:
                    "M1886.7,399.1c-0.9,0-1.8,0-2.7-0.1c-0.7-1.1-1.5-2.1-3-2c-1.7-1-3-2.4-4.2-3.9\n                            c-0.1-0.9,0.2-1.3,1.2-1.1C1880.9,394.3,1883.8,396.7,1886.7,399.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#51413E",
                  d:
                    "M1878,391.9c-0.4,0.4-0.8,0.8-1.2,1.1c-0.6-0.3-1.3-0.6-1.9-0.9c-0.2-1.1-2.6-0.3-1.9-2.2\n                            c0.3-0.3,0.6-0.6,0.9-1C1875.4,389.7,1877.2,390.2,1878,391.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E392D",
                  d:
                    "M1873,390c0.6,0.7,1.3,1.5,1.9,2.2c-1.9-0.2-3.7-0.7-4-3C1871.6,389.4,1872.3,389.7,1873,390z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C1B2AF",
                  d:
                    "M1879,390.1c-1.8-1.2-3.6-2.5-6-1.9c-0.7-0.7-1.4-1.4-2.1-2c0.8-0.2,1.6-0.1,2.1-0.9\n                            c2.1-1.1,3.5,0.5,5.2,1.2c0.8,0.6,1.3,1.4,1.4,2.4C1879.5,389.3,1879.3,389.7,1879,390.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DAD4CF",
                  d:
                    "M1959.6,421.8c-0.9,0.1-1.7,0.2-2.6,0.3c-1.2-1.7-4.7-1.9-2.8-5.6c0.6-1.2-1.9-1.9-2.9-1.4\n                            c-2.9,1.3-5.2-0.5-7.7-1.2c-0.6-1.1-0.5-2.1,0.2-3c1.5-1,3.2-0.7,4.8-0.6c4.2,0.3,8.4,1.5,12.6-0.3c1.2-0.5,2.6,0.1,3.7,0.9\n                            c0.2,0.2,0.5,0.3,0.8,0.3c0.9,0.4,1.6,0.9,1.3,2.1c-1.1,1.7-1.7,3.7-2.6,5.6c-0.4,0.6-0.9,1-1.7,1.1c-0.3,0.4-0.6,0.8-0.9,1.2\n                            C1961.2,421.3,1960.4,421.6,1959.6,421.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#857E7C",
                  d:
                    "M1929,425l0.2-0.2l0.3,0.1c1.3-0.9,1.9-2.4,3-3.4c0.5-0.7,2-0.3,1.5-2.1c-0.9-3.5-1.3-7.1-1.2-10.7\n                            c0.1-1.5,0.1-3,1.7-3.9c0.5,0,0.9,0.3,1.2,0.7c1.3,1.6-0.6,4.5,2.1,5.6c1.9,0.6,3.5,1.4,3.7,3.7c-0.2,0.7-0.6,1.2-1.3,1.6\n                            c-1.5,0.1-3.2,0-2.7,2.4c0.9,4,3.9,0,5.5,1.5c-1,3,0.1,7.3-4.9,7.9c-0.4-1.7-1.1-2.8-2.8-1.1\n                            C1932.8,427.1,1930.8,426.3,1929,425z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#57524F",
                  d:
                    "M1940.9,415.1c-0.6-2-2.1-2.9-4-3.3c-1-2.1-0.4-4.2-0.2-6.3c2.1-3.4,3.6-2,5,0.6\n                            c1.4,3.2,1.1,6.6,1.1,9.9c0,0.6,0,1.2,0,1.8C1940.5,418.1,1940.2,417,1940.9,415.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#453E3C",
                  d:
                    "M1942.8,415.9c-1.2-3.3-1.4-6.7-1.9-10.1c-0.8-1.4-0.2-2.1,1.2-2.4c0.5,0,0.9,0.2,1.2,0.5\n                            c0.6,0.7,1,1.5,1.4,2.3c0.9,1.8,0.6,3.5-0.7,5c-0.2,0.9-0.3,1.8-0.5,2.6C1943.4,414.6,1943.1,415.2,1942.8,415.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B3AAA8",
                  d:
                    "M1940.9,415.1c0.3,1.1,0.7,2.2,1.9,2.6c0,0.8,0,1.6,0,2.4c-2.6,1.9-5.1,3.3-6.7-1.1\n                            c0.7-1.7,2.8-1.8,3.8-3.2C1940.2,415.7,1940.6,415.4,1940.9,415.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DAD4CF",
                  d:
                    "M1948.9,422.6c-1.5-2-2.4-2.9-3.4-3.8C1947.7,418,1948.9,418.7,1948.9,422.6z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C4BFBA",
                  d:
                    "M1821,373c1-0.3,2.3,0.7,3.1-0.6c0.1-0.2-0.7-1-1-1.5c6.3,0.1,12.6,0.1,19,0.2c8.5,2.2,17.3,1.9,26,2\n                            c8.6,1.7,17.3,3,26.1,2.9c3-0.9,5.9,0.3,8.8,0.2c2.8,1.3-0.4,3.1,0.4,4.5c-2.7,3.1-5.5,1.9-8.3,0.3c-0.5-0.2-0.9-0.4-1.4-0.6\n                            c-6.3-2.3-13-2.3-19.5-2.7c-7.4-0.5-14.8-1.1-22.2-1c-3.5,0-7.3,0.7-10.9-0.5C1834.2,375.4,1827.5,374.9,1821,373z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CECAC6",
                  d:
                    "M1841,376c10.6-1.6,21.3-0.4,31.9,0c6.3,0.3,12.5,1.3,18.7,2c1.3,0.2,2.6,0.7,3.4,1.9\n                            c-1.2,0.9-2.5,0.3-3.3,0.4c0.8,0.1,2.1,0.5,3.3-0.4c2.6,1.2,5.3,2.4,8,0.4c0.2-0.9,0.9-1.2,1.7-1.3c4.1,0.7,8.3,0.8,12.2,2.6\n                            c0.5,2.4,1.6,4.8-0.9,6.8c-0.5,0-1-0.1-1.5-0.3c-3.3-2.4-7.1-2.7-10.9-2.8c-3-0.1-6-0.3-8.9-0.7c-4.3-2.1-9.7,0-13.6-3.4\n                            c-6-2.2-12.1-1.9-18.3-1c-2.2-0.6-4.7,0.9-6.7-1.2C1851.2,377,1845.8,378.1,1841,376z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ECF3F2",
                  d:
                    "M1856.1,379c2.3,0,4.6,0,6.9,0c0.8,1.6,4.2-1.2,3.8,2.3c-1.6,0.6-3.2,0.3-4.7-0.2\n                            c-2.4-0.4-4.7,1.9-7.1-0.1C1855,380.1,1855.2,379.4,1856.1,379z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4542",
                  d:
                    "M1877.9,387.4c-1.7-0.7-3.3-1.5-5-2.2c-1.3-0.5-2.5-0.9-3.8-1.4c-0.1-1.5,1.1-1.6,2.1-1.9\n                            c2.6-0.3,5.2-0.1,7.6,1.1c1.4,1.1,3.8,1.5,3,4.2C1880.5,388.1,1879.2,387,1877.9,387.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CECAC6",
                  d:
                    "M1862.1,381.1c1.6,0,3.2-0.1,4.8-0.1c0.8-0.4,1.1,0.1,1.3,0.8c-0.2,0.7-0.8,0.9-1.4,1.3\n                            C1865.2,382.6,1863.5,382.3,1862.1,381.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#686B66",
                  d:
                    "M1866.9,383c0-0.8,0.5-1,1.1-1.2c1.4-0.8,2.6-0.8,3.2,1c-0.7,0.3-1.4,0.7-2.1,1\n                            C1868.4,383.5,1867.7,383.3,1866.9,383z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D0C3C2",
                  d:
                    "M1879,390.1c0-0.5,0.1-0.9,0.1-1.4c0.5-0.4,1.1-0.4,1.8-0.2c0.4,0.1,0.8,0.3,1.1,0.5\n                            c0.9,0.6,1.7,1.1,2.6,1.7c1.1,1,2.7,1.6,2.9,3.3c-0.2,0.7-0.5,1.2-1.4,1C1882.7,394.8,1881.8,391.1,1879,390.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9C4C6",
                  d:
                    "M1886.1,395c0.3-0.2,0.6-0.3,0.9-0.5c2.8-1.6,3.6,0.6,4.6,2.5c0,0.6-0.2,1.1-0.7,1.4\n                            C1889.4,397.1,1886.7,397.5,1886.1,395z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D3D2CA",
                  d:
                    "M1890.8,398.4c0-0.4,0.1-0.8,0.1-1.2c2.4-0.6,3.7,0.4,4,2.8c-0.3,0.3-0.7,0.6-1,0.9\n                            C1893,400.1,1891.9,399.2,1890.8,398.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E7471",
                  d:
                    "M1899,405c1,0.7,2,1.3,3,2c0.3,0.9,0,1.3-1,1c-0.3-0.1-0.5-0.2-0.8-0.3c-0.7-0.6-1.5-1.1-2.2-1.7\n                            C1898.3,405.7,1898.6,405.4,1899,405z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2D",
                  d:
                    "M1914.9,413c-4.2-2.4-8.2-4.9-12-8c0.5-1,1.6-1.5,2.2-2.3c1.6-3,2.3-7,7.2-6.1c0.3,0.1,0.6-0.3,0.7-0.6\n                            c1-2.6,3.9-3.8,4.6-6.6c2.3-0.4,3.2,0.6,3.1,2.9c-1.3,1.8-2.6,3.6-2.4,6c-1.1,3.7-2.5,7.4,1.7,10.3c0.3,0.4,0.4,0.8,0.4,1.3\n                            C1918.9,411.5,1917.6,413.5,1914.9,413z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#1B1614",
                  d:
                    "M1906,404c-1,0.3-2,0.7-3,1c-2.6-1.7-5.3-3.4-7.9-5c-1.1-1.3-2.4-2.4-4-2.8c-1-1.5-2.2-2.5-4-2.7\n                            c-0.5-1.7-2.5-2-3.3-3.4c2.9-2.1,5.6,0,8.4,0.4c2.1,0.3,4.1,1,6.2,1.5c2.5,1.4,4.4,0.4,6.2-1.4c0.5-0.1,1-0.1,1.6,0.1\n                            c2.2,1.3,2.9,3.5,1.8,5.4C1906.4,399.3,1906.9,401.8,1906,404z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#918A89",
                  d:
                    "M1927.1,415.7c0-1.9-0.1-3.8-0.1-5.7c1.1-0.5,1.8,0.1,2.5,0.8c1.2,3.6,2.9,7,2.9,10.8\n                            c-3,0.6-3,0.6-4.7-3.5C1927.5,417.4,1927.5,416.5,1927.1,415.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#494142",
                  d:
                    "M1914.9,413c1.9-0.7,2.7-3.2,5.1-3c0.8,1.9,0.4,3.9,0.2,5.9c-0.6,0.3,0.2,2.6-1.4,1.4\n                            C1917.3,416.2,1916.2,414.5,1914.9,413z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ECE4E1",
                  d:
                    "M1927.1,415.7c0.3,0.7,0.5,1.5,0.8,2.2c1,1.6,1,3.3,0.3,5c-2.6,0.2-4.7-0.4-6.1-3.2\n                            C1926.8,420.7,1926.8,420.7,1927.1,415.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7B7372",
                  d:
                    "M1928.2,422.9c-0.8-1.6-0.3-3.3-0.3-5c2.1,0.6,1.5,4,4.1,4c0.4-0.4,0.7-0.4,0.9,0.1\n                            c-0.2,2.1-2,2.4-3.6,2.9C1929.4,424,1929,423.3,1928.2,422.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7B7372",
                  d:
                    "M1929,411c-0.7-0.3-1.3-0.7-2-1c-0.9,0-1.8-0.1-2.7-0.1c-0.5,0-0.7-0.3-0.6-0.8c0.7-1.1,2.8-1.2,2.1-3.2\n                            c-0.4-2.1,0.7-3,2.7-3.2c0.5,0.1,0.9,0.4,1.2,0.9c0.7,2,0.7,4.1,0.2,6.2C1929.7,410.2,1929.4,410.7,1929,411z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ECE4E1",
                  d:
                    "M1923.9,409.1c0.1,0.3,0.2,0.6,0.4,0.8c-5-0.4-2.3,4.3-4,6.1c-0.1-2-0.2-4-0.2-5.9\n                            c0.3-0.2,0.4-0.5,0.3-0.8c0.2-0.4,0.6-0.7,1-0.9C1922.4,408.1,1923.3,408.2,1923.9,409.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D0C8C8",
                  d:
                    "M1901,408.1c0.3-0.3,0.6-0.7,1-1c1.1,0.4,1.9,1.1,2.5,2.5C1902.8,409.9,1901.9,409,1901,408.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#595E57",
                  d:
                    "M1312,225c0.7,0.3,1.3,0.7,2,1c-1.1,1.2-2.3,1.5-3.6,0.2C1310.9,225.8,1311.5,225.4,1312,225z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1052.9,300c1,1.1,2.4,0.9,3.7,0.9c12.8,0.4,25.7,0.7,38.5,1.2c2,0.1,3.9,0.6,5.8,0.9\n                            c0.2,0.8,1.1,1.6-0.9,1.7c-16.7,0.2-33.3-1.2-50-2.2c-9-0.5-18.1,1.6-27.1-0.4c-5.3,0-10.7,0.2-16-1c-6.7-0.3-13.4-0.7-20.1-1\n                            c-2.1-1.6-6,1.2-7-3c18.7,0.6,37.4,1.3,56,2.8C1041.6,300.3,1047.3,300,1052.9,300z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534B49",
                  d:
                    "M1106,303c0.3,0,0.7,0,1,0c0.2,0.7,0.9,1.5-0.2,2c-0.4,0.2-0.9,0.1-1.3,0.2\n                            C1105.6,304.5,1105.8,303.7,1106,303z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B4A",
                  d:
                    "M938.1,294.9c6,0.5,12-0.9,17.9,1c-1.4,1.1-3.2,0.1-4.7,0.7c2.6-0.2,5.3-0.1,7.9-0.1\n                            c1.5,0,2.7,0.5,1.7,2.4c-11.9-1.3-24-1.1-35.8-4C929.5,294.9,933.8,294.9,938.1,294.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5B5351",
                  d:
                    "M961,299c-0.7-3-3.1-1.8-4.9-1.9c-2-0.2-4,0-6-1.1c2,0,4,0,5.9,0c2.6,0,5.3,0.1,7.9,0.1\n                            c4.3,1.3,8.8-0.3,13.1,0.9c1,0,1.9,0.1,2.9,0.1c1.6,2.7,5,1.1,7,3C978.3,300.7,969.7,298.5,961,299z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1153,272c-0.5,6.6,2.7,12.5,3,19c-2.1-2.8-4.4-3.6-8.4-3.4c-4.8,0.2-9.9-0.8-14.8-1.4\n                            c-5.8-0.7-11.6-0.7-17.3-0.9c-8.4-0.3-16.8-2.1-25.2-0.9c-2.1,0.3-3.8-0.1-5.7-0.9c-2.9-1.2-5.8-0.8-8.9-0.4\n                            c-2.5,0.3-6.8-8.2-7.8-11.9c-1.3-4.9-2.7-9.7-6.1-13.9c-2.3-3-2.7-7.4-3.9-11.2c3.2-0.5,6.1-4.8,9.8-1c5-4.7,11.1-1.2,16.6-2.3\n                            c1-0.2,2-0.1,3,0c1.4,0.2,3.6,0,3.4,1.8c-0.1,1.7-2.3,1.6-3.7,1.6c-2.5-0.1-5.1,0.4-8.2-0.4c1.5,1.5,2.6,1.7,3.8,1.3\n                            c2.9-0.9,4.9-0.1,5.6,3c0.7,3.2,3.4,3.3,5.8,3.4c2.4,0.2,5.1,0.5,6.3-2.6c0.6-1.7,1.6-2.9,3.6-2.8c0.5,0.1,0.9,0.2,1.4,0.4\n                            c3.6,1.2,6.2-0.5,8.1-3.2c2.5-3.8,5.2-4.1,8.7-1.5c1.7,1.2,3.9,1.7,6,3.3c1.3-2,1.2-5.3,4.8-5.3c2.9,0,4.5,1.5,6.2,3.4\n                            c2.2,2.4,5.2,1.5,8,1.7c2.6,0.2,5,0.7,6.6-2.5c1.2-2.2,4.1-2.6,6.5-3.3c2.3-0.5,4.6-0.5,6.9-0.2c1.1,0.1,2.6,0.2,2.7,1.7\n                            c0.1,1.1-1.1,1.5-2,2c-4,2.1-8.3,3.5-11.8,6.4c-0.9,0.8-1.8,1.5-2.6,2.3c-1.4,1.8-0.3,2.4,1.3,2.6c5.4,2.3,6.6,8.1,2.7,12.4\n                            c-2-0.3-1.8-3.1-4.2-3.6C1153.3,267.1,1151.8,269.4,1153,272z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#141316",
                  d:
                    "M1160,242.1c-2,1.8-6.3,0.9-6,5.3c0,0.2-0.8,0.5-1.2,0.8c-3.6,1.8-13.4-0.5-15.9-3.9\n                            c-1.4-1.9-3.3-1.1-5-1.1c-1.9,0.1-1.9,1.6-1.6,3c0.3,1.3,0.2,2.4-1.2,2.7c-1.2,0.3-2.2,0.1-3-1.1c-1.6-2.6-5.3-1.9-7.2-4.4\n                            c-0.6-0.7-2.6-0.4-3,0.8c-1.3,3.5-4.5,4.4-7.1,6.4c-3.1,2.2-2.8-0.2-3.6-1.4c0.6-0.6,0.6-1.3,0.3-2.1c0,0.7,0.4,1.5-0.3,2.1\n                            c-1.3,0.1-3.3-0.2-3.3,1.4c-0.1,6.2-4.7,4.6-7.9,4.5c-3.2-0.1-7-0.2-6.9-5.2c0-1.6-0.9-2.7-2.6-1.7c-3.6,2.1-5.8,0.9-7.2-3\n                            c4.3,0,8.5,0,12.8,0c0-0.3,0-0.6,0-0.9c-6.5,0-13.2-0.9-19.5,0.5c-2.2,0.5-3.5,0.2-5.4,0.1c-2.1-0.1-4.1,3.3-7,1.4\n                            c-1.7-3.7-4.9-2-7.3-1.8c-2.8,0.3-0.6,2.7-0.7,4c-0.3,2.4,0.1,4.8,0.2,7.5c-5.6-0.1-5.6-5.5-6.8-8.4c-1.6-3.7-3.7-4-6.3-3.2\n                            c-3.1,0.9-1.3,4-0.9,5.4c2.4,7.5,5.1,15,8.3,22.2c2.2,4.8,3.7,9.8,5.9,14.5c0.6,1.4-0.3,2.7-1.5,2.3c-1.3-0.4-3.7,1.5-4-1.5\n                            c-0.1-0.8-0.2-1.6-0.3-2.5c-2-0.3-3.1,3.5-5.2,1c-1-1.2-1.9-2.6-2.9-3.9c4.6-1.2,1.3-4.4,1-6.1c-0.6-4.5-0.5-9.6-5.2-12.6\n                            c-1.6-1-0.8-2.2,0.1-3.3c1.4-1.8,1-3.9-0.4-4.9c-3.3-2.3-5.5-6.4-10.7-5.8c-5.1,0.6-10.4-0.1-15.4-1.6c-0.4-0.1-1.1-0.1-1.4,0.1\n                            c-1.1,0.7-2.3,2.3-2.8-0.2c-0.4-2,1.6-0.9,2.5-1.2c0.8-0.3,2.3,0.2,1.8-1.4c-0.1-0.4-1.5-0.4-2.2-0.6c0-0.3,0-0.6,0.1-1\n                            c1.4-1.5,3.2-1.6,5-1.6c8.4,0,16.8-0.2,25.2,0c21-0.4,42,0.7,62.9-0.4c18.5-0.9,36.9-0.5,55.4-0.8\n                            C1155,241,1157.9,239.9,1160,242.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#141316",
                  d:
                    "M907,246c0.3-0.3,0.7-0.7,1-1c4.1-2.3,8.7-2.5,13.2-2.5c4.1,0.1,8.1,0,12.2,0\n                            c20.5-0.1,40.9,0.2,61.4-0.1c3.1-0.1,6.4-0.8,9.1,1.5l0.1,0.1c-2.2,1.9-4.8,0.7-7.2,1c-2.4,0.3-5.4-1-6.3,3\n                            c-0.3,1.5-2.3,0.8-3.5,1c-5.5,1-10.6-1.3-16.2-2.3c0.7,2,2.4,0.7,3,1.8c-6.3,1.1-8.4,0.9-18.6-2.5c5.9,0,11.8,0,17.8,0\n                            c0-0.2,0-0.5,0-0.7c-13.6,0-27.1,0-41.8,0c5.2,1.8,10.6-1.1,14.1,3.8c-3.9-0.5-7.8,1.3-11.2-1.6c-0.3-0.3-2.6,1.9-4.4,2.1\n                            c-0.6,0.1-1.2,1.2-1.5,1.1c-6.2-2.7-12.9-0.2-19.2-1.9C907.5,248.4,907.1,247.3,907,246z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524B4A",
                  d:
                    "M977.1,296.9c-4.4-0.4-8.8,1.1-13.1-0.9C968.4,296.4,972.8,295.1,977.1,296.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#694143",
                  d:
                    "M1236,250.9c2.2,3.2,6,4.3,8.7,6.8c1.2,1.1,2.8,1.7,3.1,3.5c-6-3.7-12-7.5-18.2-11\n                            c-6.9-3.9-14.4-6.3-21.8-9.1c-4.6-2.2-9.6-1.6-14.5-1.7c-2.9,0-3.4-1-1.3-3.1c8-2.1,15.6-0.5,23,2.7c-1,1.7,0.1,1.6,1.4,2.1\n                            c5.8,2.1,11.4,4.4,16.5,7.9C1233.8,250,1235,250.3,1236,250.9L1236,250.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B4E4F",
                  d:
                    "M1192,237c-1,3.1,1.5,1.8,2.6,1.9c4.5,0.4,9.3-0.8,13.4,2.3c-16.9-4.1-31.6,1.8-46,9.7\n                            c-0.5,0.9-1,1.8-2.2,0.7c-0.6-2.7,1.5-3.4,3.2-4.4c2.7-1.6,5.5-3.1,8.4-4.2c2.1-0.8,1.2-2.1,1.6-3.2\n                            C1179.1,237.3,1185.1,234,1192,237z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9F7677",
                  d:
                    "M1196.2,292.9c-1.4,0.6-3.1-0.4-4.3,1c-2.6,0.2-5-1.8-7.7-1c-7,0.6-13.7-1-20.1-3.7\n                            c-0.3-0.1-0.7-0.3-1-0.4c-0.7-0.9-0.6-2-0.7-3.1c0-1.8-0.7-3.4-1.3-5c-0.3-0.8-0.6-1.7-0.5-2.6c0.2-0.7,0.4-1.3,0.7-1.9\n                            c0.6-1.1,0.5-2.6,1.8-3.4c2.6,3.5,1.7,7.9,3.6,11.7c1.5,3,3,4.7,6.5,5.1C1180.9,290.5,1188.5,291.8,1196.2,292.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#856463",
                  d:
                    "M1163.1,272.8c-0.3,1.4,0.4,3.1-1.1,4.3c-1.4-0.8-1.8-2.4-2.7-3.6c-0.7-1.4-2.6-1.3-3.3-2.6\n                            c0-0.3,0-0.6,0.1-0.9c0.4-0.6,1-0.9,1.7-1c4.3-2.1,1.2-5.8,1.9-8.7c0.3-0.4,0.7-0.6,1.3-0.5c3.4,2.5,0.3,6.4,2.1,9.2\n                            C1163,270.3,1163.1,271.5,1163.1,272.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E6464",
                  d:
                    "M1159.8,272.9c1.5,1,2,2.5,2.2,4.1c-0.3,0.3-0.7,0.7-1,1c-0.4,0.4-1.6,0.2-1.4,0.7\n                            c0.3,0.9,1.7,0.5,2.4,1.2c0.6,2,2.5,3.7,1,6c-1.7,0-3.3-2.7-5,0c-2.6-4-3.1-8.4-3-13C1156.5,271.7,1158.1,271.8,1159.8,272.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#462C2B",
                  d:
                    "M1164.1,289.2c6.6,2,13.4,2.4,20.1,3.7c-2.2,2.3-4.3,2.6-7.3,1.1\n                            C1172.7,292.1,1167.5,293.1,1164.1,289.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332D30",
                  d:
                    "M1157.9,269.7c-0.6,0.1-1.3,0.2-1.9,0.3c-1.7-0.4-3.5-0.9-3,2c-1.4-1.1-1.1-2.7-0.9-4.1\n                            c0.2-1.9-2-5,1.1-5.3c2.3-0.2,4,2.5,3.8,5.4C1157.7,268.4,1158.3,268.8,1157.9,269.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#868483",
                  d:
                    "M1158,286c0.2-1.4,0.5-3.3,1.9-3.5c2.5-0.5,1.6,2.7,3.1,3.5c0.5,0.9,0.8,1.8,0.1,2.7\n                            C1160.8,288.9,1158.3,289.5,1158,286z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6A5D5A",
                  d:
                    "M1208,296c0.7,1.4,1.5,2.8-1,3.1c-1.6,0-3.2-0.2-4.3-1.8C1204,295.2,1206.2,296.2,1208,296z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A59795",
                  d:
                    "M1159.8,272.9c-1.6,0.1-3.2,0.1-4.8,0.2c-1.1-1.4,0.4-1.6,1-2.2C1157.4,271.3,1159.7,270,1159.8,272.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#462C2B",
                  d:
                    "M1194,294c1.7,0.2,3.6-0.5,5.1,1C1197.4,294.8,1195.4,295.7,1194,294z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#0F0D0E",
                  d:
                    "M1071.9,299.3c-5,1.1-8.9,0.5-12.7,0C1063.1,299.3,1067,299.3,1071.9,299.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C7CCC7",
                  d:
                    "M1231,170c0-0.3,0-0.7,0-1c1.6-1.7,3.5-0.2,5.2-0.5c7.8,0.5,14.5,4.4,21.8,6.5\n                            c8.4,2.4,15.8,7.6,24.4,9.3c2.4,0.5,2.8,3.9,5.7,3.2c4.5,0.5,8,2.1,11.7,5.3c4.5,4,10.4,6.9,16.8,7.5c5.6,0.5,9.3,3.8,12.9,7.6\n                            c0.9,1.5,2.2,2.8,2.8,4.5c-0.1,0.2-0.1,0.4-0.2,0.6c-2,0-4,0-6,0c-0.2-0.1-0.3-0.3-0.5-0.4c-0.8-1.5-2.1-0.9-3.2-0.8\n                            c-0.4-0.1-0.8-0.2-1.2-0.4c-0.2-2.7-2.5-0.6-3.5-1.5c-0.4-0.1-0.8-0.3-1.2-0.4c-2.3-1.2-4.2-3-6.9-3.3c-4.1-1-7.9-2.9-11.8-4.4\n                            c-3.6-5.2-9.1-6.9-14.9-8.1c-5.1-2.4-10.5-3.8-15.9-5.4c-4.9-1.4-10.4-3.1-14.3-7.2c-0.9-1-1.8-2.5-3.1-2.3\n                            c-5.4,0.7-9.8-2.7-14.8-3.4C1232.1,175,1229.1,173.9,1231,170z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#CCD1CC",
                  d:
                    "M1298,201c4,1.3,8,2.7,12,4c2.3,1.4,4.4,3.1,7,4c0.5,2.3,2.8,1.1,4,2c0.3,0,0.7,0,1,0\n                            c0.9,1.4,3.2,0.2,4,2v0c0.9,4.2-0.7,4.5-4.4,3.4c-5.5-1.6-9.7-6.2-15.7-6.4l0,0c-2.4-1.8-5.2-3.1-8.1-3.9l0.1,0\n                            c-5.7-2.7-11-6.2-17.1-8.1l0.1,0.1c-3.6-2-7.2-3.9-11.2-5.1c-14.3-6.3-28.5-12.6-42.8-18.9c-3-5.6,1.9-3.5,4-4.2\n                            c0.4,3.2,1.7,5.3,5.4,3.7c1.1-0.5,1.5,0.4,2.1,0.8c1.1,0.8,2.3,2.3,3.3,2.1c8.3-1.1,13.3,5.4,19.7,8.5c0.6,0.3,1.4,1.3,2-0.1\n                            c0.7-1.8,1.8-0.6,2.3-0.1c1.5,1.4-1.6,1.3-1,2.4c6.8-0.2,12.9,1.4,18.3,5.6c3.8,3.5,9.2,4.1,13.4,7\n                            C1296.9,200.3,1297.6,200.4,1298,201z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C7CCC7",
                  d:
                    "M1337,213c-0.2,4.2,3.6,4.4,6,6c-2.4,3.5-4.7,0.8-6.7-0.3c-2.1-1.2-3.5-3.4-4.3-5.7v0\n                            c0.8-0.8,1.8-1.1,2.9-1C1335.7,212.1,1336.4,212.4,1337,213z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B9BBB7",
                  d:
                    "M1421,269.1c-1.7,0-3.2-0.4-4.1-2C1418.5,267,1420,267.6,1421,269.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ABAEA6",
                  d:
                    "M1405,241c0-1.1-2.2-1.5-1-3c4,0.5,6.6,3.7,9.9,5.5c12.4,6.6,24.8,13.1,37.2,19.6c1.3,0.7,2.8,1,3.8,2.9\n                            c-3.5-0.7-6.7-1.4-9.9-2C1431.7,256.3,1418.3,248.7,1405,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C3C7C0",
                  d:
                    "M1337,213c-0.7,0-1.3,0-2,0c-1.7-1.8-3.9-2.8-6-4c-5-5.6-11.2-8.4-18.8-8.6c-2,0-3.8-2.5-5.9-3.3\n                            c-4.3-1.7-7.1-5.5-11-7.7c-1.8-1-4.3,1.4-5.3-1.5c-2.9-1.5-5.1-4.2-8.3-5.2c-0.8-0.2-1.2-1.2-0.6-2.1c1.2-0.9,2.6-1,3.7-0.3\n                            c6.1,3.5,13,5.3,19.2,8.6c19.2,8.1,37.7,17.7,56.1,27.3c3.6,1.9,7.5,3.3,10.9,5.7c1.1,5.3,6.2,5.7,9.8,7.8\n                            c1.5,0.9,2.3,1.5,2.2,3.2c-0.3,0-0.8,0.1-1,0c-4.8-3.7-10.8-5.4-15.4-9.3c-1.5-1.3-3.1-2.3-5.1-2.8c-2.5-0.7-5.7-0.6-7-3.8\n                            c-0.1-0.3-0.5-0.7-0.5-0.7c-5.8,2.9-7.8-2.1-10.9-5C1338.8,209.1,1338.3,212.3,1337,213z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0E",
                  d:
                    "M688,259c4.9,2.8,10.4,2.6,15.4,1.4c2.8-0.7,5.2-1.3,8.1-1c2,0.2,4.1,0.3,6.3-0.2c3.1-0.8,6.3,0,9.4,0.2\n                            c5.4,0.3,11,0.1,16.7-0.9c4.3-0.7,10-0.3,14.8,1.6c1.3,0.5,2.6,1.5,4.1,0.1c6.6-6.1,6.7-6.1,15.1-4.8c-1.1,1.6-3.1,0-4.3,1.5\n                            c0.5,1.1,0.9,2.3,1.5,3.5c0.8,1.4,1.8,2.9,3.8,2.6c-0.8-2.7,5-2.1,2.9-5.5c-0.9-1.5,0.1-1.5,1.1-2.4c3.4-2.9,7.2-1.6,10.9-1.9\n                            c0.2,1.6-2.1,0.9-1.9,3.3c6.7-2.5,14.6,2.5,20.4-4.7c2.9,7.5,1.5,15.7,2.5,23.6c0.3,2.7-0.6,6-4.2,6.8c0.9,2.1,2.9,1.7,5.5,3.1\n                            c-5.2,0-9.2,0-13.2,0c-14.5-0.5-29-1.4-43.5-2.9c-2.5-0.3-5-0.1-7.4-0.1c-2,1.5-4,1.6-5.9-0.1c-2.9-1.7-6.1-0.6-9.1-0.9\n                            c-24.7-1.7-49.3-3.4-74-5.1c-1-0.1-2,0-3,0c-1,0.8-2,0.5-3.1,0.3c-2.7-0.7-5.4-0.2-8.1,0c-1.7,0-3.4,0-4.7-1.4\n                            c-8.7-1.3-17.4-2.2-26.1-1.9c-0.7,0.6-1.3,0.6-2,0c-5.1-2.2-10.8,0.2-16-1.9c-2.8-1.2-5.8-0.3-8.7-0.6c-1,0-2,0-3-0.1\n                            c1.3-3.7,5.4-5.3,8.6-4.3c1.5,0.5-0.3,2.9,2,2.3c1.4-0.3,3-0.1,4.5,0.1c0.6,0-0.1-1,0-0.4c0,0.2-0.1,0.3-0.3,0.3\n                            c-1.4-0.2-2.9,0.4-5.1-1.2c8.3-3.1,16.1-3.6,24.1-2.2c0.5,0,0.9,0.1,1.4,0.3c6.7,0.5,13.5,1.8,19.1-3.7c1.3-1.2,3.1-0.6,4.8-0.3\n                            c2.3,0.5,4.2,1.8,6.2,3c0.4,0.2,0.9,0.2,1.3-0.2c-0.5,0.2-1.1,0.4-1.4,0.1c-1.7-1.2-1-2.3,0.5-2.9c2-0.9,4.3-1,6.3-0.8\n                            c3.8,0.4,7.4-0.4,11.1-0.9c1.5,0,3.1,0,4.6-0.1C680.1,260.2,684,258.7,688,259z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635B59",
                  d:
                    "M644.1,274.9c1.6,0,3.2,0.1,4.9,0.1c2.6,1.3,5.5-0.3,8.1,0.9c1,0,1.9,0,2.9,0c-5.6,1.5-11.3,2.1-17,2\n                            c-5-2.6-10.5-0.8-15.7-2c-1.2-0.3-2.7,0.4-3.8-2.1C630.6,274.9,637.4,275.3,644.1,274.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B6B5B7",
                  d:
                    "M568.9,263.4c-0.3,1.6,0,3.6-1.9,4.6c-1.2,0.9-2.4,2.1-4,0.9c-13.4-1.7-26.9-3.3-40.3-5\n                            c-3.3-0.4-6.6-0.7-9.7-2c-0.2-1.6,1.1-1.9,2.2-2.2c3.1-1.2,6.2-2.7,9.5-0.6c1.7-2.9,4.5-3.1,7.4-2.9c7.7,0.4,14.8-2.1,21.9-4.9\n                            c4.1-1.6,8.4-0.4,12.4,0.3c2.6,0.4,1.2,3.8,2,5.6C568.7,259.3,568.1,261.4,568.9,263.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AFAFB1",
                  d:
                    "M567.9,257c-1.1-3.8-2.5-7-7.3-4.1c-5.7-4-9.7,2.4-14.9,2.7c-5.2,0.2-10.9,0.9-15.9,2.2\n                            c-5.5,1.4-11.8,0.7-16.8,4.2c-7.5-0.7-14.1-4.5-21.1-6.9c-0.2-0.1-0.4-0.3-0.6-0.4c-1.3-1.8-1.8-3.7-0.1-5.4\n                            c1.9-1.8,3.5-0.9,5,0.9c0.9,1.1,1.7-0.7,2.7-0.4c3.2,2.7,7.3,1.4,10.8,2.5c1.5,0.3,3.2-0.3,4.6,0.7c1.1,1.4,1.9,3.5,3.8,0.6\n                            c1.1-1.6,2.9-2.5,4.7-2.3c8.6,0.8,17-1.6,25.6-1.2c4.9,0.2,9.1-1.8,13.1-4.3c1.8-1.1,3.4-2.8,5.8-1.6c1.3,2,0.6,4.5,1.4,6.7\n                            c0.2,0.8,0.2,1.6,0.1,2.4C568.2,254.4,568.9,255.9,567.9,257z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#474343",
                  d:
                    "M563,268.9c1.3-0.3,2.7-0.6,4-0.9c0.3,0.7,0.6,1.4,1,2C566.3,269.7,564.3,270.7,563,268.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#46403E",
                  d:
                    "M489,256c0.1-1.1,0.1-2.1,0.2-3.2c0.4-0.1,0.8-0.1,1.2,0.2c0.5,0.6,1,1.4,1.8,1.7l-0.2,0.4\n                            C491.2,256.2,490.1,255.9,489,256z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635B59",
                  d:
                    "M616,273c0.7,0,1.3,0,2,0c0.7,1.4,2.8,0.5,3.9,2.4c-3.3-0.2-6.1-0.4-9.2-0.6\n                            C614,274.1,615,273.5,616,273z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C393A",
                  d:
                    "M577.1,272.9c0-3.6,0-7.3-0.1-10.9c0.9-0.3,1.3,0.2,1.7,0.9c0.2,0.4,0.3,0.9,0.4,1.3\n                            c0.5,2.2-0.7,4.7,0.9,6.8C579.9,273,578.6,273.1,577.1,272.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2C2F",
                  d:
                    "M580,271c-0.9,0.3-1.9,0.8-2-0.9c0-2.1,0-4.1,0-6.2c2.6,1.3,3.5,4,5.1,6c-0.4,0.4-0.8,0.4-1.2,0\n                            C581.2,270.1,580.4,270.2,580,271z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#141318",
                  d:
                    "M591,270c3,0.4,6.2-1,9,1c-3,0-6-0.1-8.9-0.1c-0.4-0.2-0.5-0.3-0.4-0.5C590.8,270.1,590.9,270,591,270z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C393A",
                  d:
                    "M591,270c0,0.3,0.1,0.6,0.1,0.9c-3.1-0.2-6.2,0.9-9.1-0.8c0.4,0,0.7-0.1,1.1-0.1c1.7-1.4,3.3-1.4,5,0\n                            C589,270,590,270,591,270z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5857",
                  d:
                    "M485,238c0.1,0.7-0.3,1.6,0.8,2.2c0.1-1.2,0.2-2.2,0.2-3.3c0.3,0.1,0.6,0.1,0.9,0.1\n                            c0,4.3,0,8.6,0.1,12.9c-0.4,1.5,0.9,3.7-1,4.5c-1.5,0.6-2.4-1.5-3.5-2.3c-3.9-3-8.4-5.3-10.6-10c-1.7-2.8-0.7-5.9,1.3-7\n                            c2.3-1.3,5.8-2.3,8.1,0.7C482.4,237.1,484.3,236.5,485,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635F5E",
                  d:
                    "M485,238c-1.4-0.9-3.8,1.1-4.5-2.2c-0.4-1.6-7,0.1-7.5,2c-0.4,1.4-0.6,2.9-0.9,4.3\n                            c-1.4-0.1-2.4-0.8-3-2.1c1.6-1.8,2-4.1,2-6.4c0-1.9,0.9-2.7,2.8-2.6c2.5,0.2,4.8,1.7,7.4-0.5c1.4-1.2,2.7,1.3,2.4,2.1\n                            C482.6,235,484.8,236.2,485,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5C5D",
                  d:
                    "M575.1,239.9c1.2,1.2,0.7,2.7,0.9,4.1c0.9,1.6,0.3,3.4,0.5,5.1c-0.2,2.6,0.4,5.2-0.4,7.8\n                            c0,1.4-0.3,2.9,0,4.3c0.7,4.3-1.1,5.6-5,4.7c-1.7-3.2-0.8-6.7-0.9-10.1c3.2-1.4,3.7-4,3.6-7.2\n                            C573.7,245.8,572.8,242.6,575.1,239.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2C2F",
                  d:
                    "M578,263c-0.3-0.3-0.7-0.7-1-1c0-1.3,0-2.7,0-4c2.1-4.6,0.3-9.5,1.1-14.2c0.6-0.1,1.1,0.1,1.4,0.6\n                            c0.4,0.7,0.6,1.6,0.7,2.4c0.1,4.2,0.1,8.4,0,12.6c0,1.2-0.2,2.3-0.8,3.3C579.1,263.2,578.6,263.3,578,263z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C393A",
                  d:
                    "M576.1,256.9c0-2.7,0-5.3,0-8c0.3-0.4,0.6-0.4,0.9,0c0,2.7,0,5.3,0,8C576.7,257,576.4,257,576.1,256.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807D7E",
                  d:
                    "M575.1,239.9c0,3.6-0.3,7.2,0,10.7c0.3,3.9-0.9,5.7-5,5.3c-0.1-0.6-0.1-1.2-0.2-1.9\n                            c-1.1-1.7-1-3.8-1.8-5.7c-0.2-5-0.7-9.9-0.5-14.9c-0.2-3.7,0.5-7.3,0.2-11c-0.3-0.8-0.4-1.6,0.1-2.4c0-3.7,0.1-7.4,0.1-11\n                            c3.6,1.9,3.2,5.2,3.5,8.2c0.9-0.6-1.1-3.3,1.5-3.4c0.7,0.9,0.4,2,0.5,3c0.2,1.7-0.6,3.6,0.5,5.2\n                            C574.4,228,574.7,233.9,575.1,239.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#474343",
                  d:
                    "M569.1,248.8c1.2,1.6,0.8,3.5,0.8,5.3c-1.8,3-0.4,6.3-1,9.4c-0.3-2.1-0.6-4.3-1-6.4\n                            c0.1-1.3,0.1-2.7,0.2-4C569.1,251.7,567.6,249.9,569.1,248.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5756",
                  d:
                    "M746.1,281.9c2,0,3.9,0.1,5.9,0.1c1.8,2.1,5.7-0.5,7,2.9c-0.7,0-1.3,0-2,0c-2-0.8-4-0.8-6,0\n                            c-1.3,0-2.7,0-4,0c-2.7-2.3-6.3,0.1-9.8-1.8C740.4,281.3,743.4,282.4,746.1,281.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5B4E4D",
                  d: "M751,285c2-1.5,4-1.5,6,0C755,285,753,285,751,285z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#281F1C",
                  d:
                    "M1963,419.9c0.2-0.4,0.5-0.7,0.7-1.1c0.8-0.4,1.5-0.9,2.4-1c5.8,0,11.4,1.4,17.1,2.2\n                            c1,0.1,1.9,0.7,2,1.9c-2.9,1.6-1.1,4.1-1.2,6.2c-2.7-1-5.3-2-8-3.1C1972.5,421.1,1966.9,422.7,1963,419.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#796D6A",
                  d:
                    "M1985.2,421.9c-6.3-1-12.6-2-18.9-3c0.2-2.5,2.3-2.3,3.7-2.1c7.7,0.8,15.5,1.1,22.9,3.9\n                            c0.5,2-0.6,1.8-1.9,1.5C1989,422.1,1987.1,422,1985.2,421.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#534A49",
                  d:
                    "M1990.9,422.2c0.6-0.3,1.3-0.6,1.9-0.9c0.1-0.8,0.6-1.3,1.4-1.6c2.6,0.5,5.4,0.6,7.8,2.2\n                            c0.3,0.3,0.7,0.6,1,1C1998.8,425.4,1994.9,422.7,1990.9,422.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#43312F",
                  d:
                    "M1994,420.2c-0.4,0.3-0.8,0.6-1.1,1c-6.5-1-13-2-19.5-2.8c-2.3-0.3-4.8-1.3-7.1,0.5\n                            c-0.9,0-1.7,0-2.6-0.1c1.2-1.9,0.3-5,3.3-5.9c5.7-0.6,10.6,2.3,15.9,3.5c0.7,0.2,1.4,0.4,2.1,0.5c1.7,0.4,3.4,1.3,5.2,1\n                            c0.3,0,0.6,0,0.9,0.1C1991.8,419.2,1993.5,418.8,1994,420.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635A58",
                  d:
                    "M1944.1,411.2c0-1.7,0.6-3.4-0.2-5.1c3.7-3.2,6.5-1,9.2,1.6c-0.5,1.6-1.6,1.9-2.6,1.7\n                            c4.4-0.2,9.5-2,14.4,0.6c0.1,0.3,0.1,0.6,0.1,0.8C1958.1,412.7,1951.1,412.2,1944.1,411.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4D4341",
                  d:
                    "M1965,410c-6.2,0-12.3,0-18.5,0c1.9-2.5,4.6-0.3,6.5-2c0.2,0,0.4-0.1,0.6-0.1c1.6-0.2,3.4,0.4,4.5-1.4\n                            c0.4-0.6,1-1,1.7-1.2c2.8,0.4,5.8-0.4,8.2,1.8c0,0.3,0,0.5,0,0.8C1967.1,408.8,1963.9,406.3,1965,410z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C5253",
                  d:
                    "M1983.3,417.7c-5.4-1.8-10.7-4.1-16.4-4.7c-0.4-0.6-0.7-1.2-1.1-1.9c6.3,2,13,2.2,19.2,4.7\n                            C1984.9,416.8,1983.9,417.1,1983.3,417.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312424",
                  d:
                    "M1997,416c-0.4-1.6-2.2-1.7-3-2.9c3.5,0.4,7,1.2,10.2,2.8C2001.8,415.9,1999.4,418.9,1997,416z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#DDD1D1",
                  d:
                    "M1994,420.2c-1-0.7-3.4,0.4-2.9-2.2c3.7,0.7,7.6,1.1,10.9,3.2c0,0.2,0,0.4,0,0.7\n                            C1999.3,421.3,1996.6,420.8,1994,420.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F5E4E2",
                  d:
                    "M1990.1,418c-1.7,2-3.4-0.1-5-0.2c0-1.8,1-1.3,2-0.9C1988.1,417.1,1989.4,416.8,1990.1,418z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#706463",
                  d:
                    "M1981,409c1.4,0.1,3-0.5,4,1c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c-0.3,0-0.7,0-1,0.1\n                            C1983,410.3,1982,409.7,1981,409z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C5B3B1",
                  d:
                    "M1987.1,417c-0.7,0.3-1.3,0.6-2,0.9c-0.6,0-1.2-0.1-1.8-0.1c-0.7-1.8,0.8-1.6,1.7-1.9\n                            C1985.7,416.2,1986.4,416.6,1987.1,417z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#867E7C",
                  d:
                    "M1917,382c-4-0.6-8-1.3-12-1.9c-0.2-2.9,3.1-1.4,3.9-3.1c0.1-0.4,0.3-0.7,0.4-1.1\n                            c0.2-0.3,0.4-0.6,0.7-0.9c2,0.3,4.3-0.7,6.1,1c0.2-0.6,0,0.9-0.3,0.3c-0.4-0.6-0.9-0.2-0.3,0.1c1,0.5,2.6-0.5,2.9,1.3\n                            c-0.5,3,1.6,1.6,2.7,1.6c2.7-0.1,4.5,0.6,4.1,3.8C1922.2,384.2,1919.5,383.7,1917,382z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#675F5D",
                  d:
                    "M1924.8,383.3c-0.6-4.1-3.4-2.7-5.9-2.3c-1.1,0.2-3,0.7-3.4-0.9c-0.3-1.2,1.5-1.5,2.4-2\n                            c1-1.2,2.3-0.4,3.5-0.5c1.2,0.4,2.4,0.5,3.4,1.4c1,0.1,1.9,0.4,2.3,1.4c0.6,1.4,0.4,2.7-0.9,3.7\n                            C1925.5,384.4,1925,384.1,1924.8,383.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A807F",
                  d:
                    "M1910,375c0,0.3,0,0.7,0,1c-1.4,1.4-3.3,1-5,1.2c-0.4,0-0.9-0.1-1.3-0.1c-3.3,0.3-6.5-0.6-9.7-1.2\n                            c2.9-2.6,7,0.6,10-2C1906.1,374,1908.1,373.8,1910,375z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C3BDBB",
                  d:
                    "M1926,384.1c0.9-1.1-0.1-2.8,1.2-3.7c0.6-0.1,1.2-0.3,1.9-0.4c0.5,1.5,1.9,0.8,2.9,1.2\n                            c-0.5,1.6,0.1,3.2,0.4,4.8c-1.5,2.4-3.2,0.8-4.8,0.2C1926.7,385.7,1925.7,385.3,1926,384.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A807F",
                  d:
                    "M1921.9,378.1c-1.3,0-2.6-0.1-3.9-0.1c-0.9-1.7-2.9-0.5-4.5-1.8c1.1-0.1,1.9-0.2,2.6-0.2\n                            c2.3,0.4,4.6,0.7,6.9,1.1C1923.2,378,1922.9,378.5,1921.9,378.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#867E7C",
                  d:
                    "M1921.9,378.1c0.4-0.4,0.8-0.7,1.1-1.1c1.2,0,2,0.5,1.9,1.9C1923.8,379,1922.7,379,1921.9,378.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D0CBC8",
                  d:
                    "M1927.9,385.1c1.4,0.3,2.4,2.2,4.1,0.9c0.8-0.9,1.7-1.7,3.1-1.1c1.4,1.5,0.9,3.3,0.8,5\n                            c-0.3,0.3-0.7,0.4-1.1,0.3c-1.8-0.4-1.8,1.1-2.2,2.2c-0.2,0.4-0.5,0.7-1,0.8c-1.7-0.4-3.7-0.4-4.5-2.5\n                            C1926.7,388.8,1926.5,386.9,1927.9,385.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#746B6E",
                  d:
                    "M1942.9,404.1c-1.2,0-1.9,0.6-2,1.8c-1.5-2.2-2.8-1.2-4,0.3c-0.6,0.4-1.2,0.4-1.8-0.1\n                            c0-0.4-0.1-0.8-0.1-1.1c-2-3.2-0.1-6.3,0.4-9.5c0.2-0.2,0.4-0.4,0.6-0.6c2.2,1.3,3.3,2.9,1.2,5.2\n                            C1938.4,402.5,1942.3,400.7,1942.9,404.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C4BEBE",
                  d:
                    "M1935,390c0.3,0,0.6,0,0.9,0c-0.1,1.7,1.1,3.3,0,4.9c0,0,0,0,0,0c-0.9,1.1,0.2,3.1-1.7,3.7\n                            c-1.3,0.3-2.4-0.1-3.5-0.8c-3.2-3.2-3.1-3.4,1.2-4.8l0.1-0.2C1933.5,392.4,1933.9,390.8,1935,390z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B5ADAC",
                  d:
                    "M1935,384.9c-1,0.4-2,0.7-3.1,1.1c-0.8-1.6-4.6-3.2-0.1-4.8c1,0.2,2,0.4,3,0.6\n                            C1935,382.8,1935,383.9,1935,384.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#D2C7C9",
                  d:
                    "M1942.9,404.1c-0.8-1.6-2.2-1.1-3.5-1.1c-2.1,0.1-2.5-1.2-2.3-2.9c1.3,0,2.5-0.1,3.8-0.1\n                            c0.3,1.1,1,1.5,2.1,1.7c0.4,0.4,0.7,0.7,1.1,1.1c0.2,0.3,0.4,0.5,0.3,0.8c0,0.3-0.1,0.5-0.2,0.5\n                            C1943.8,404.3,1943.4,404.3,1942.9,404.1L1942.9,404.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E2D9D9",
                  d:
                    "M1944,403.8c0-0.4,0-0.7,0-1.1c7.1,0.4,14.2,0.7,21.3,1.3c1.4,0.1,5.4-0.9,2.7,3.1c-3-0.4-6-0.8-9-1.2\n                            C1953.7,407.2,1948.9,405.2,1944,403.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#78696C",
                  d:
                    "M1985,411c0-0.3,0-0.7,0-1c1.5,0,3.1-0.2,5.9,1.4C1988,411.1,1986.5,411,1985,411z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#887C7B",
                  d:
                    "M2011.1,535c-1,0.5-2.1,0.6-3.1,0c2.6-3.6,6,0,8.9-0.9c0.1,0.3,0.1,0.5,0.1,0.8\n                            C2015,535,2013,535,2011.1,535z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A69B99",
                  d:
                    "M2005.6,539.3c-0.3,0.1-0.7,0.4-1.1,0.3c-0.4-0.1-0.6-0.6-0.9-1c0.4-0.2,0.8-0.5,1.2-0.5\n                            C2005.3,538.1,2005.8,538.4,2005.6,539.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5857",
                  d:
                    "M1192,237c-6.6-0.2-13,1.3-19,4c-1.7,1.7-3.6,0.2-5.4,0.5c-1.1-0.2-1.7-1.1-2-2.1\n                            c-0.2-2.7,3.2-4.1,2.7-6.9c3.3-1.5,4.8-0.6,4.6,3.1c0.8,0.2-1.7,2.3,0.4,1.2c6.6-3.5,14.5-1.9,20.9-6c1-0.6,2.3,0.1,3.9-0.1\n                            c-1.3-1.1-2.6-1.6-3.5-2.5c-1.3-1.2-4-1.7-3.2-4.3c0.8-2.5,2.2-4.7,5.4-4.6c0.5,0,1,0.1,1.3-0.3c10,4.4,19.1,10.4,28.7,15.5\n                            c1.3,0.7,0.7,1.6,0.2,2.5c-4.1-0.1-7.7,2.6-11.8,2.1C1207.4,238.7,1199.9,235.8,1192,237z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#673538",
                  d:
                    "M1236,251c-1.5,0.1-2.9,0.1-3.1-1.9C1234.4,249,1235.4,249.7,1236,251z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747070",
                  d:
                    "M1095,181c2.3,0.6,4.9,0.4,6.4,3.1c1.2,2.3,4.9,1.9,5.7,1.2c2-1.6,3.5-0.1,4,0.6c2,2.6,4.7,3.2,7.6,3.7\n                            c5,0.8,9.1,3.4,13,6.9c1.2-2.7-1.8-2.7-1.7-4.5c1,0,2,0,3,0c2.3,1.3,4.6,2.3,7.4,2c3-0.4,4.9,2.5,7.8,2.7\n                            c0.6,0.3,0.4-0.8,0.2-0.2c0,0.2-0.2,0.1-0.4,0c-1.2-0.2-2.4-0.7-2-2.2c0.3-1,1.2-0.8,2-0.3c7.2,2.8,14.2,6.1,20.9,10\n                            c-0.8,1.8,1,4.5-2.1,5.6c-1,0.3-0.2,0.9,0.1,1.5c2.1,3.6,0,6.5-2.6,8c-5.4,3-11.2,5.9-17.8,3.3c-3.9-0.1-7.6,1.1-11.4,1.6\n                            c-1.1,0.4-2.2,0.9-3.4,1.1c-1.5,0.3-2.9,0.2-4.4,0.3c-2.2-0.3-4.2,1-6.3,1.1c-1.5-0.3-2.8-1-3.4-2.6c1.5-3.5,5.1-2.6,7.7-3.5\n                            c3.4-1.3,6.9-1.8,10.2-3.7c3.3-1.9,7.4-0.1,11.2,0.2c3.3,0.2,6.7-2.2,7.3-5.3c0.4-2.1-0.2-3.6-2.2-4.4\n                            c-5.9-2.4-11.7-5.4-17.9-6.6c-6.9-1.3-13.6-3.9-20.8-3.2c-1.2,0.1-2.3-0.1-3.4-0.6c-1.9-0.9-3.3-2.2-4.2-4\n                            c-2.2,3.7-3.7,0.2-5.4-0.6c-0.8-0.4-1.8-0.5-2.4,0c-5.2,4.8-9.6,0.7-14.1-1.3c-1.1-0.5-1.8-1.2-3.2-0.9\n                            c-8.5,2.3-17-1.3-25.6-0.2c-0.2,0-0.5-0.4-0.7-0.7c-0.7-2-0.5-3.9,1.6-5c1.1-0.6,1.4-1.2,0.8-2.3c0-0.9,0.4-2,1.1-2\n                            c3.7-0.1,7.4-0.2,11,0.2c1.5,0.1,3.8,1.3,5.2,0.7c5.5-2.5,10.3,1.4,15.5,1.3C1091.4,182.1,1093.4,182.5,1095,181z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#615D5C",
                  d:
                    "M1198,218.9c-1.2,0.7-2.6,1.3-3.7,2.3c-1.8,1.6-3.5,3.6-0.1,5.3c2.2,1.1,3.5,3.8,6.8,3.6\n                            c-10.4,4-21.1,5.3-31.3,9.1c-0.6-2.6,2-1.8,2.3-3.1c0.2-1.6,3.2-1.8,2.3-3.6c-1.4-3.1-4-1.9-6.3-1c-0.4,0.1-0.9,0.2-1.4,0.2\n                            c-4.3,1.3-8.8,0.8-13.2,1.1c-3.8,0.2-7,1.2-10.3,2.7c-0.5,0-0.9-0.1-1.4-0.3c-0.9-0.7-1.6-2-2.9-1.3c-3.4,2-7-0.4-10.5,0.7\n                            c-1.3,0.4-2.5-0.7-2.7-2.2c0.2-1.3,1.1-2.1,2.1-2.7c2.2-0.4,4.5-0.6,6.4-1.9c0.5-0.1,0.9,0,1.3,0.2c1.2,1.4,2.7,1.5,4.5,1.2\n                            c9.5-1.6,19.2-1.2,28.6-2.9c1.8-0.3,3.7-0.4,4.7-2.3c0.5-1,1.4-1.5,2.4-1.3c3.1,0.6,5.1-0.7,6.3-3.5c0.4-1,1.3-1.6,2.4-1.3\n                            c3.6,1,3.5-1.9,4.5-3.9C1192.3,215,1195.1,217.1,1198,218.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E6A69",
                  d:
                    "M1135,228c-0.3,0-0.7,0-1,0c-0.2,0.1-0.4,0.1-0.7,0.2c-1.7,1-3.7,0.6-5.4,1.3c-0.5,0.2-0.9,0.4-1.4,0.5\n                            c-3.7,0.3-7.5,0.7-10.7-1.9c0.7-3,2.8-2.9,5.1-2.1c1.8-1.3,3.6-2.4,6-2c1.7,1.7,3.3,1.1,5,0c1-0.3,2-0.7,3-1c3.9-1,8.2,0,12-2\n                            c6,2.3,16.4-0.8,19.1-5.6c0.8-1.4,2.4-2.9-1-3.9c-1.8-0.5-1.8-2.6,0.8-3c0.8-0.1,1.6-0.1,2.2-0.8c-0.4-1.3-2.3-0.1-2.6-1.7\n                            c0.5-1.7,2.9-0.4,3.5-2c5.6,2.1,10.8,5,16,8c0.2,1.9-1.3,1.6-2.3,1.7c-2.1,0.2-4,1.1-4.8,3c-2.3,5.2-7.3,6.2-11.7,7.5\n                            c-5.7,1.7-11.7,2.6-17.4,3.4C1144.4,228.2,1139.6,231.6,1135,228z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#666262",
                  d:
                    "M1135,228c2,0,4-0.1,6,0c1.4,0.1,3.1,0.8,3.1-1.7c0-0.7,1.1-1.4,1.2-1.2c2.5,4.9,4.7,0,7-0.2\n                            c4.3-0.4,8.6-2.1,12.7-1.7c4.5,0.4,6-5.2,10.7-4c1.6,0.4-1.5-1.9,0.4-3.5c2.7-2.2,5.4-3.7,8.8-3.8c1.7,0,2.7,1.3,4,2\n                            c1.2,2,0.1,5.3-0.6,5.1c-4.5-1.4-5.7,2.2-7.9,4.4c-0.8,0.9-1.6,0.8-2.7,0.7c-1.6-0.2-3.9-1.5-3.6,2.1c0,0.4-4,1.3-6.2,1.5\n                            c-9.3,1-18.6,1.7-27.8,2.8C1137.6,230.8,1135.5,231.4,1135,228z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E6A69",
                  d:
                    "M1148.1,194c-1,0.2-2.2,0.5-0.7,1.6c1.1,0.8,2.8,0.6,3.8,1.9c-4.5,1.7-7.7-3.2-11.7-2.3\n                            c-3.3,0.7-5.2-0.3-6.5-3.1c0.5-1.1,0.8-2.1-1-2c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3v0c0.7-1.2,2.1-0.3,3-1\n                            C1139.5,189.7,1144.1,191.2,1148.1,194z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747070",
                  d:
                    "M1135,188c-0.7,1.2-1.9,0.9-3,1c-0.5-1-1.6-0.8-2.4-1.3c-1.7-1-1.1-1.5,0.4-1.8\n                            C1131.7,186.7,1133.4,187.3,1135,188z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#242224",
                  d:
                    "M1302,282c0.2,0.9,1,2.1-0.9,1.9c-2-0.2-1.8-1.6-1.1-3C1300.7,281.3,1301.4,281.6,1302,282z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#848183",
                  d:
                    "M809,188c0.3,0.7,0.6,1.4,0.9,2.1c0.1,1.3,0.1,2.6,0.2,3.9c-0.1,1.3-0.1,2.7-0.2,4\n                            c-0.9,0.2-1.3-0.3-1.8-0.9c-2.5-3.3-5.4-4.4-9.6-3.3c-7.4,1.9-15,3.4-22.5,4.9c-2.5,0.5-4.9,0.2-7.1-1.3c0.3-3.7,4.7-7,7.5-5.4\n                            c2.3,1.3,3.8,0,5.6-0.6c1.9-0.6,3.9-0.8,5.8-1.4c6-0.9,10.4-5.7,16.8-6.4c3.6-0.4,4.3-0.1,3.9,3.1\n                            C808.4,187.2,808.6,187.6,809,188z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#595658",
                  d:
                    "M815,241c-1.6-1.4-0.8-3.3-0.9-5C815.6,237.4,814.8,239.3,815,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#98989B",
                  d:
                    "M810.9,216c0,0.3,0,0.7,0,1c-0.5,4.6-4.3,3.1-5.9,2.2c-5.1-3-8.4,0.9-11.6,3c-3.1,2.1-5.7,3.7-9.3,2.2\n                            c-3-1.2-6.4,0.1-9.3-1.3c0.6,2.7,2.2,5.9-0.8,8.3c-2.8,2.3-3-2.2-5-2.3c0,5.4,2.5,7.9,8.1,6.9c3.8-0.7,4.7,1,5.1,4\n                            c-4,2.3-8,3.8-12.6,1.6c-3.2-1.5-5.9-1.8-9.2,0.7c-4,3-9.5,1.9-14.2,3.4c-3.3,1-6.9,0.8-10.2,2c-1.8,0.6-4,0.5-5.5-1.3\n                            c-1.7-5.6-0.8-6.6,4.8-5.8c2.9,0.4,5.6-0.7,8.2-1.6c4.1-1.5,8.1-2.8,12.7-1c-0.9-3.9-4.1-3.3-6.1-3.5c-5.5-0.5-11-2-15.7,3.6\n                            c-2.6,3-7.6,3.2-11.9,4c2,2.4,5.6,2.2,7.4,4.8c-2.2,5-8.9,6.2-13.4,2.4c3.5-4.3,0.7-8.9,0.7-13.3c0-1.8-2.5-1.6-3.8-1.1\n                            c-4.6,1.8-9.6-0.5-14.2,1.6c-1.9,0.8-3.3-0.9-3.5-3.1c2.5-4.7,4.5-5.4,12.1-4.1c6.6,1.1,12.9,0.7,18.9-2.8\n                            c2.6-1.5,5.1,0.4,7.8,1.1c-0.3-4.1,3.5-4.2,5.3-3.6c5.3,1.8,9.2-1.3,13.5-2.7c1.5-0.5,2.6-1,4.1,0c3.8,2.4,5.6,2.1,7.3-2\n                            c1.6-3.9,3.9-4,7-2.7c2.4,2.3,4.7-0.3,7-0.2c0.4-0.2,0.8-0.4,1.3-0.6c2.9-0.5,6-0.1,8.8,0.1c4.3,0.4,6.8-1.4,8.6-4.5\n                            c1.5-2.5,3-2.9,5.1-1.5C805.4,211.8,810.3,210.9,810.9,216z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9C9BA0",
                  d:
                    "M782,240c-1.4-1.5-2-5.6-5-1.5c-2.7-2.2-7.1-1.2-8.8-3.6c-1.2-1.6-1.6-5.1-0.9-8.3\n                            c1.5,0.7,2.9,1.4,4.3,2.1c0.9,0.5-0.6,3.3,2,2.1c1.4-0.7,1.1-2,0.8-3.5c-0.4-2.1-0.1-4.2-0.1-7c0.6,1,0.9,1.9,1.1,1.9\n                            c5-0.6,9.8,2.5,14.8,0.8c0.6-0.2,1.3-0.2,1.9-0.3c-2.2-5.8,3.3-1.6,4.3-3.3c3.6-6.2,8.4,0.4,12.5-1c0.9-0.3,1.1,0,2.1-1.3\n                            c1.1,5.2,1.1,10.5,1.1,15.8c0.8,2.9,0.1,5.9,0.4,8.8c0.3,2.3-1,2.9-2.9,2.7c-1.5-2.6-3.7-3.1-6.8-3.4\n                            c-6.3-0.7-12.4-0.9-18.5,0.9C782.8,242.3,781.8,241.9,782,240z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8D8D8E",
                  d:
                    "M809,197c0.3,0.3,0.6,0.7,0.9,1c0.2,0.7-1.1,1.4,0,2c0.8,0.8,0.5,1.8,0.5,2.7c-0.2,0.6-0.3,1.3-0.4,1.9\n                            c-0.4,4.8-0.5,4.8-4.5,2c-0.9-0.6-1.8-0.8-2.8-0.9c-6.5-0.7-12.3,1.1-18,4c-0.4,0.3-0.8,0.5-1.3,0.5c-1.2-0.9-2.2-1.4-3.9-1\n                            c-4.8,1.1-9.8,1-14.5,2.3c-1.2,0.3-2.7,0.4-3.3-1.3c-0.3-3.4-0.8-6.6,4.7-6c1.8,0.2,4.5-0.9,6.4-2.4c1.3-1,2.7-2.4,3.8,0.3\n                            c0.1,0.2-0.4,1,0.3,0.5c5-3.5,11.1-1.9,16.5-3.7c1.3-0.5,2.4-1.1,3.4-1.8c1.3-0.8,2.6-1.7,4.1-1c1.8,0.8,3.4,0.7,5-0.7\n                            C808,193.8,808.3,195.8,809,197z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#949496",
                  d:
                    "M803,205c3.3-1.6,3.8,1.9,5.7,2.9c0.9-1.4-0.5-3.5,1.1-4.8c1.3,1.5,0,3.5,1,5.1c0,2.6,0.1,5.2,0.1,7.9\n                            c-1.3-3.4-5.3-2.4-7.6-4.4c-0.7-0.6-2.3-1.7-3.7-1.8c-2.1,5.7-5.3,7.6-11.1,6.6c-0.5-0.1-1,0-1.4,0.1c-1.7,0.4-3.5,3.4-4.8-0.4\n                            c-0.8,0.3-1.5,0.6-2.3,0.9c-0.3-0.4-0.7-0.8-1,0c-3.3,1.9-6.3,1.9-7,0c2.8-4.4,6.5-7.3,12-7l0,0c1.9-2.1,4.8-1.7,7.2-2.2\n                            C795.1,206.9,798.8,204.7,803,205z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#87868C",
                  d:
                    "M809,243.9c2.1-0.4,3.4-1.2,3.1-3.8c-0.3-2.4,0-4.9,0-7.3c1.6,2.9,0.4,6.1,1,9.1\n                            c0.6,1.3,0.2,2.8,0.3,4.2c-2.6,4.7-5,1-7.5-0.1c-0.2-0.4-0.2-0.8,0-1.3C806.9,244,807.9,243.9,809,243.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B6868",
                  d:
                    "M810.9,208.1c-1.3-1.5-0.6-3.4-1-5.1c0-1,0-2,0-3C812,202.5,810.7,205.4,810.9,208.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#595658",
                  d:
                    "M812.9,247c0.1-1.7,0.1-3.3,0.2-5c0.3,0.3,0.6,0.7,0.9,1c0,2,0,3.9,0,5.9c-0.4,0-0.7-0.1-1.1-0.1\n                            C812.4,248.2,812.4,247.6,812.9,247z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747273",
                  d:
                    "M890.9,187.2c-1.7-3.2-2-6.6-2-10.1c-0.2-1.4-0.5-2.9-0.4-4.4c0-0.6,0.2-1.8,0.7-1.6\n                            c5.1,2.1,8.1-4,12.9-3.1c0.3,0.1,0.6,0,1,0.1c8.6,3.9,17.7,4.5,26.9,4.7c3.9,0.1,7.8,0.3,11.8,1.1c2.3,0.4,5.2-0.6,8,0\n                            c2,0.5,3.8,0.9,5,2.8c1.4,2.1,3.7,3.3,6,2.9c8.2-1.4,15.8,1.5,23.6,2.9c3,0.5,6,0.3,8.9-0.4c2.3-0.6,4.7-2.4,6.1,1.3\n                            c0.4,1.1,0.8-0.2,1.2-0.4c1.9-1.1,4-1.2,5.8-0.3c1.8,0.9,2.5,0.6,3.4-0.9c0.7-1.2,2.7-2.1,3.4-1.1c3.1,4.6,8.2,2.6,12.2,4.1\n                            c2.2,0.8,4.6,1.3,2.1,4.3c-1.4,1.4-4,0.9-4.4,4.2c-0.3,2.4-4,0.4-6,1.1c-1.3,0-2.7,0.3-3.7-1c-0.4-0.5-1.1-1.3-1.6-0.9\n                            c-5,3.3-10.3-1.6-15.3,0.6c-2.9,1.3-4.8-0.3-5.6-3.1c-2.6,3.6-5.3,4.7-8.9,1.6c-2.2-1.9-5.2-1.5-7.6-1.2\n                            c-7.9,1-14.8-2.1-21.5-5.3c-3.3-1.6-6.2-2.2-9.5-1.1c-2.4,0.8-4.3,0.5-6.5-0.9c-2.4-1.5-5.4-0.3-8.2-0.8c-6.2-1-12.6,0-18.4-3.2\n                            c-2.4-1.3-2.3,3.5-4.7,2.1c-1.6-0.9-1.8-3.5-4.5-3.1c-2.7,0.3-3.5,2.2-4.5,4.1C895.4,184.8,895.1,188,890.9,187.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807C7E",
                  d:
                    "M890.9,187.2c1.7-1.4,4.4-2.1,4.1-5.2c5.9-0.1,11.6,1.2,17.4,1.7c2.8,0.2,5.7,0.4,8.6-0.5\n                            c1.4-0.4,2.9-1.3,3.5,1c-0.1,0.3-0.2,0.5-0.3,0.7c0.3,0,0.5-0.2,0.9-0.1c9.6,1.7,19.1,4.5,29,2.4c1.1-0.2,2.9-0.3,3.2,0.7\n                            c1.5,4.2,5.2,4.2,8.5,5.4c2.1,0.8,3.1,3,1,5.2c-3.9,0.7-7.9,1.1-11.9,0.5c-0.8-0.2-1.8-0.5-1.9-1.3c-0.5-3.9-3.2-3.4-5.8-2.9\n                            c-1.2,0.1-2.3-0.2-3.4-0.3c-3.9-0.5-7.7,0.2-11.7-1.4c-3.4-1.4-7.9,0.2-11.9,0.1c-5.3-2.7-11.1-3.6-17-4.1c-0.9-0.1-0.9,1.8-2,2\n                            c-0.3,0.2-0.6,0.1-0.8-0.3c0,0.3,0.2,0.6,0.5,0.8c0.5,1.1,0.8,3-0.8,2.6c-3.3-0.9-4.8,1.2-6.7,2.9c-0.5,0.2-0.8,0.2-1.2-0.2\n                            C891.7,193.7,891.3,190.4,890.9,187.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6B6C",
                  d:
                    "M903,169c-2.9,0-5.2,2.2-8.3,2.1c-2.6-0.1-0.9,3-2.2,4.1c-2.1-0.2-1.9-2.3-3-3.3\n                            c-1.3,1.7,0.8,3.5-0.5,5.1c-1.3-1.4-0.8-3.2-1-4.9c-0.8-5.9,3.7-6.6,7.5-6.6c2.4,0,5.3-0.2,7.6,1.4\n                            C903.6,167.7,903.6,168.3,903,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383638",
                  d:
                    "M892,196.9c0.3,0.1,0.6,0.2,0.9,0.3c1.7,1.8,1.6,3.7,0.3,5.6c0,0-0.3,0.2-0.3,0.2\n                            C891.3,201.2,892.2,199,892,196.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#666466",
                  d:
                    "M779,152c1.1-1.3,2.3-1.3,4.2,0.2C781.4,152.1,780.2,152.1,779,152L779,152z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6C6E",
                  d:
                    "M802,169c0,2.7-0.6,3.7-2.5,1c-0.6,3.8-3.6,0.9-4.6,1.6c-4.1,2.7-8.9,0.1-12.9,2.5c-0.2,0-0.5,0-0.7,0\n                            c-7.5-2.3-14.2,1.8-20.7,3.7c-4.4,1.3-8,3.4-12.5,1.2c-4.1,5.1-9.5,3.5-14.8,3.1c-2.5-0.2-3.2,3-4.7,4.8\n                            c-0.4,0.3-0.8,0.5-1.3,0.6c-5.5-1-10.8-2.3-16.3,0.7c-3.4,1.9-7.8,0.4-11.8,0.5c-1.5,0-3-0.6-4.3,0.5c-3.7,3.4-8.8,4.8-13,5.5\n                            c-5.4,0.9-10.4,4.8-16.2,2.8c-3-1-5.1,0.7-7.1,2.5c-1.7,1.4-3,2.5-4.5-0.6c-1-2-3.8-1.5-5.1-0.6c-5.6,4.1-12.2,2.8-18.2,3.2\n                            c-9.2,0.7-18.4,1.8-27.6,1.7c-2.5-0.3-5,0-7.4,0.5c-2.7,0.6-4.5-0.2-5.1-3.1c0.7-3.4,2.7-4.6,6.1-4c3.4,0.6,6.9,0.1,10.3,0.8\n                            c3.4-2.1,6.8-1.5,10.6-1.4c4.6,0.1,10.2,0.6,15.2-2.8c3.3-2.3,8.5-1.9,13-2.7c0.6,1.3-2.3,1-1.1,2.4c0.5,0.6,1.9,1.2,2,0.5\n                            c0.4-2.8,7.4,0.7,3.9-5.5c2.9,1.6,3.7,6.1,7,4.2c1.8-1,4-1.9,5.2-3.2c2.1-2.2,3.7-1.6,5.6-0.5c3.9,2.3,1.3-1.5,2.3-2.4\n                            c1.4,1.1,2.7,5,5,0.9c0.2-0.3,2.1-0.2,2.8,0.3c1,0.8,1.2,3.3,3.1,1.4c1.3-1.2,1.6-2.8,0.7-4.6c-0.4-0.9-0.6-1.9,0.4-3.2\n                            c2.2,3.5,8.1-2.6,9.3,4.3c0.4-5,5.7-5.5,7.1-5c4.7,1.5,7.8-0.9,11.2-2.7c1.4-0.7,2.9-1,3.6,0.1c2.1,3.3,5.7,1.9,8.5,3\n                            c2.8,1.1,0.7-2.5,2-3.3c1.9,1.6,4.2,1.5,6.3,0.8c2.1-0.7,4.8-0.6,4.7-4.4c-0.1-1.9,2.8-1.4,4.3-1.1c5.7,1,10.8,0,15.6-3.4\n                            c1.6-1.1,4.5-1.1,6.7-0.7c4,0.8,8-1.7,12.1,0.8c0-1.7,0-3.2,0-4.9c1.9,1.7,3.6,3.3,6,5.5c0-3-0.1-4.9,3.6-3.9\n                            c2.8,0.8,6.5,2.2,8.9-1.5c1.9,2.1,4.7-1.7,6.5,1C799.7,167.3,800.7,168.3,802,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6B696A",
                  d:
                    "M607,198c-2.6,1.8-5.4,1.2-8.1,0.4c-3.7-1-6.6-0.5-7.9,3.6c-0.2,0.1-0.3,0.3-0.5,0.4\n                            c-1,0.4-2.1,0-3.1,0.2c-1.9,1.1-4.1,0.3-6.1,1c-3.1,1.1-1.4-3-3.2-3.6c0-2,0-4,0-6c1.1-0.9,2.1,5,3.6-0.1c0.3-0.9,4.3-1.2,6-3.4\n                            c0.7-0.9,1.6,1.5,2.3,2.4c-0.2,0.8-0.7,1.7-0.5,2.3c0.3,0.7,1.2,0.3,1.7-0.1c2-1.8,3.7-3.7,5.3,0.5c0.6,1.6,2.4,0,3.6,0.4\n                            C602.4,196.7,605.6,194.2,607,198z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#656366",
                  d:
                    "M639,187c1.1,0.3,2.6-0.6,3.4,0.9c0.1,0.2-0.4,0.8-0.7,0.9C640.1,189.2,639.2,188.6,639,187L639,187z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#656366",
                  d:
                    "M648,187c0.8,0.5,2.1,1.1,1.5,2.1c-0.6,1.1-1.2,0.2-1.4-0.6C648,188,648,187.5,648,187z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6C6E",
                  d:
                    "M800.4,164.3c0.2,0.2,0.8,0.5,0.8,0.8c0.2,1-0.7,0.8-1.3,0.8c-0.3,0-1,0.6-0.9-0.4\n                            C799.2,164.9,799.4,164.3,800.4,164.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6C6E",
                  d:
                    "M805,166c-0.6,1.4-1.6,2.4-3,3C802.1,167.1,803.1,166.1,805,166z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#929192",
                  d:
                    "M895.9,212.2c-1-1.2-1-2.7-0.9-4.1c-1.6-3.3,0.5-5,3.1-4.4c7.3,1.7,14.7-0.9,22.2,1.5\n                            c4.2,1.3,9.4,2.1,14.2,0.3c1.8-0.7,3.5-0.3,5.3,0.4c3.4,1.3,6.8,2.6,10.2,3.9c3,1.2,5,0.7,7.2-1c3.6,2.1,6.4,5.3,11.5,5.2\n                            c4.1-0.1,8.3,0.4,12.6,0.1c3.9-0.3,4.7,1.4,3.4,5.2c-0.7,1.9,0,4-1.4,5.7c-0.4,0.2-0.9,0.3-1.3,0.2c-0.7-0.4-0.9-1.9-1.7-1.4\n                            c-3.8,2.3-7.9,1.7-11.9,2.3c-3.4,0.5-6.8,2.2-10.3,3.1c-7.9,2-16.1,2.3-23.9,4.6c-1.5,0.4-3,0.4-4.4-0.1\n                            c-1.9-0.6-3.2,0.2-4.3,1.7c-0.4,0.3-0.8,0.5-1.3,0.6c-0.9,0.2-1.9,0.3-2.9,0.3c-1.9,0-3.7-0.2-5.5,0.4c-0.4,0.1-0.9,0.2-1.4,0.3\n                            c-4.6-1-8.6,2.3-13.2,2c-0.5-2-1.4-3.9-1.1-6c0.4-0.3,0.8-0.4,1.2-0.2c4.1-0.3,8.3,0.2,11.9-2.6c0.4-0.3,1-0.6,1.4-0.5\n                            c5.3,2.7,9.8-2.1,14.6-1.8c6.1,0.4,10.4-3.1,15.3-5.3c0.9,1,1.8,1.8,2.9,0.2c1.9-0.2,1.7-1.8,2.2-3.3c-2.3,0.4-1.2,3-2.7,3.7\n                            c-0.7,0.5-1.3,0.4-1.8-0.1c-1.6-1.6-1-4.2-2.8-5.7c-0.8-0.6-2-1.8-2.5-1.4c-4.7,3.6-7.2-4.3-11.6-2c-3.4,1.8-7.1,3.5-9.3-1.9\n                            c-0.6-1.4-3.1-1.7-4-1c-2.7,2.3-5,1.5-7.9,0.5C903.2,210.2,899.6,212.6,895.9,212.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9A989A",
                  d:
                    "M895.9,212.2c1.3-2.7,1.3-2.7,3.3-1.4c0.4,0.3,0.8,0.5,1.1,0.8c1.5-3.5,4.5-0.5,6.3-1.5\n                            c1.8-1,2.9-1.8,3.4,1c0.4,2.3,1.4,0.3,1.9,0c3.8-2.2,7.3-3.2,9.2,2.3c0.5,1.5,1.3,1.6,2.7,1.1c4-1.4,8.3-6.5,11.4,1.1\n                            c0.1,0.1,0.5,0.2,0.7,0.2c8-1.1,9.2-0.2,9.2,7.1l0,0c-2,2.7-6.1,2.4-7.8,5.6c-0.3,0.5-1.8,1.1-2.2,0.8c-4.2-3-7.9,1.8-12,0.8\n                            c-2.5-0.6-3.6,2.2-6.1,2.6c-3.3,0.6-1.6-1.5-2.1-3.8c-2.7,6.8-9.3,2.6-13,6.4c-0.4,0.4-0.6-1.5-0.8-2.4c0.1-2.7,2.2-3.2,4.1-3.5\n                            c3.3-0.5,6-2.7,9.2-3.5c1.8-0.5,2.5-2,1.1-3.3c-1.7-1.6-1.7-5.5-5.8-4.1c-1.3,0.4-3.3-0.5-4.8,0c-2.9,1-5.4,0.2-7.8-1.3\n                            C895.8,215.7,895.9,214,895.9,212.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C8A8B",
                  d:
                    "M957,209c-1.1,3.8-2.1,4.6-6.4,2.3c-3.7-2-8.3-3-12.4-4.9c-0.6-0.3-1.5-0.4-1.9-0.2\n                            c-4.5,2.9-9.2,0.2-13.8,0.8c-0.8,0.1-1.9,0.3-2.5-0.1c-6.9-4.4-14.8,0.8-22-2.4c-1.5-0.6-3.6,1-3,3.6c-1.2-1.5-0.9-3.3-1-5\n                            c-0.8-1.2-0.3-2.4-0.4-3.7c1.1-2.5,2.8-0.1,4.2-0.3c3.7-0.4,7.1,0.1,11-1.4c2.4-0.9,7.5,0.3,10.9,2.4c0.7,0.4,1.7,1.5,2,1.2\n                            c4-4.3,8.2,1.3,12.2-0.4c1.6-0.7,3.8-0.4,5.3,0.7c5.8,4.2,12.5,3.6,19.1,3.8c3.8,0.1,4.1,1.5,1.8,4.1\n                            C958.8,210.5,957.8,210.3,957,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9F9FA0",
                  d:
                    "M896.9,217.2c0.4-0.5,0.8-1,1.2-1.5c2.4,3.7,5.8,1,8.7,1.3c1.1,0.1,2.5-0.1,3.4,0.4\n                            c4.7,2.8,0.6-1.9,2.2-2.2c2.1,2,1.6,6,5.1,7.5c0.8,0.4,0.3,4-3.2,5.1c-4.5,1.4-9.4,2-13.3,5.2c-0.3,0-0.7,0-1,0\n                            C898.7,227.8,897,222.6,896.9,217.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E6D72",
                  d:
                    "M921,244c-4.3,0.3-8.7,0.7-13,1c-1.3,0-2.7-0.1-4-0.1c-1-4.4,2.4-4,4.8-4.3c7.1-0.7,14.2-0.4,21.2-2\n                            c7.8-1.8,15.8-1.1,23.7-2c6.1-0.7,12.2-1.1,18.3-1.7c2.3,0.1,4.5,0.6,6.8,0.7c1.7,0.1,3.8-0.1,4.4,2.3c-1.6,2.9-4.5,2.4-7,2.5\n                            c-11.2,0.4-22.4,1-33.5,3c-3.2,0.1-6.4,0-9.6,0.1C929.1,243.8,925,242.8,921,244z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#77767B",
                  d:
                    "M972,236c-4.7,2.1-9.8,1.5-14.7,1.7c-14.1,0.7-28.1,2.5-42.2,4.2c-2.4,0.3-4.9,0.1-7.4,0.1\n                            c-2.1,0-3.6,0.6-3.8,2.9c-2.3,0.1-2-1.5-2-2.9c1.2-1.7,2.9-2.4,5-2.8c7.3-1.3,14.5-2.7,22-2.5c2.2,0.1,4.2-0.8,6.2-1.6\n                            c2.6-0.6,5.2-0.6,7.8-0.2c2.6,0.9,5.3,0.5,7.9,0.2c5.8-0.9,11.8,0.4,17.5-1.7c1.3-0.5,2.6,0.1,3.6,1.1\n                            C972.3,235,972.3,235.5,972,236z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#848182",
                  d:
                    "M894,199c0,1.4,0,2.7-0.1,4.1c-0.3-0.1-0.5-0.2-0.8-0.3c-0.1-1.9-0.2-3.7-0.3-5.6\n                            c-0.2-2.3,2.5-2.7,2.8-3.6c1.2-3.1,1.8-1.9,3.3-0.4c0.8,0.8,1,0.6,1-2.2c2.4-3.7,6.3-2.9,9.7-2.8c3.4,0.2,6.3,3.2,10.1,2.9\n                            c0,0,0.1,1.2,0.2,1.9c0,0.2,0,0.5,0.1,0.7c-0.2,1.7-0.7,2.7-2.9,2.1c-3.3-1-6.8-0.9-10.3-0.5c-1.9,0.2-3.7,0.1-5.2,2.1\n                            C899.8,200,896.5,197.9,894,199z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828286",
                  d:
                    "M935,236c-1.8,2.2-4.4,2-6.9,2c-8.9,0.1-17.6,1.5-26.1,4c-0.1-0.3-0.2-0.6-0.2-0.9c2.5-3.4,5.8-5,10-4.4\n                            c1.2,0.1,2.2,0.1,3.2-0.7l0,0c1.8-1.4,4.2,0.7,6-1c1,0,2,0,3,0C927.7,235.4,931.5,233.3,935,236z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C8B8C",
                  d:
                    "M915,236c-0.5,0.9-1.2,2-2.1,1.7c-4.7-1.8-7.6,1.8-11.1,3.5c-0.8-0.5-0.8-1.3-0.7-2.1\n                            C905.4,236.3,910,235.2,915,236z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5959",
                  d:
                    "M878.4,157.1c-1.9,2.7-4.4,3-7.1,2.6C873.1,157.9,874.8,155.5,878.4,157.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#757477",
                  d:
                    "M782,174c2.5,5.8,3.5,6.2,7.3,3.4c0.8,1.1-0.4,3.2,1.7,3.6c-1.6,3.5-5.3,4.7-8.2,4.7\n                            c-3.3,0.1-6.4-0.7-9.5,1.3c-1.3,0.9-2.9-0.4-4.4-0.1c-7.8,1.9-15.5,4.7-23.6,4.3c-2.4-0.1-3.9,1.7-6,2c-3.4,0.4-6.3,0.6-9.7,3.2\n                            c-4,3.1-10.1,5.2-15.9,3.6c-3.2-0.9-5.8-0.4-8.3,1.7c-1.4,1.2-3.1,2-5,1.7c-2.1-0.3-3.9,0.2-5.6,1.5c-1,0.8-2.2,1.8-3.4,0.1\n                            c-0.3-0.4-1-1-1.1-0.8c-3.4,5.8-8.6-1.3-12.5,1.8c-3.7,2.9-8.9,2.5-12.9,4.8c-2.1,1.2-3.9-0.3-5.8-0.1c-3.2-1.3-6.2,1.5-9.4,0.7\n                            c-6.1,1.9-12.6-0.2-18.7,1.7c-8.5,2.6-17.4,0.6-25.9,2.7c-1.3,0.3-2.6-0.1-3.8-0.7c-2.4-1.1-5.2-1.5-7.3-0.7\n                            c-5,1.9-9.6,1.8-14.5,0c-0.2-0.1-0.7,0.6-1.3,0.5c0-2,0-4-0.1-6c0.5-1.8,0.4-2.7,3.5-2.4c7.9,0.5,15.7,1.2,23.5,2.2\n                            c2.8,0.4,6.4-0.9,8-4.3c2.8,1.9,6.1,2.4,9.1,1.9c11.1-1.9,22.4-1.7,33.6-2.7c3.2-0.3,6.3-3.8,9.7-0.6c0,0,0.3,0,0.4-0.2\n                            c3.4-6.2,9.7-3,14.5-4.4c2.2-0.7,4.7-0.1,6-2.8c0.1-0.3,0.7-0.7,0.7-0.6c4.3,4.9,8-3.5,12.4-0.4c1.7,1.2,3.2,0.1,4.9-1.8\n                            c2.2-2.5,6.5-4.3,9.8-2.5c4.7,2.6,7.7,0.4,11.1-2c0.8-0.6,1.7-1,2.6-1.4c6.6-2.5,13.5-2.6,20.4-3.1c6.8-0.5,13.5-1.3,19.8-5\n                            C772.2,176.5,777,174.3,782,174L782,174z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D7C7F",
                  d:
                    "M578.1,215c1.1-2.9,3.3-1.1,4.9-0.9c3.3,0.4,6.2,1.9,9.4-1.1c1.2-1.1,5.1-0.9,6.7,0.2\n                            c4.3,2.9,8.5,0.6,12.7,0.6c3.8,0,7.7-0.4,11.6-0.3c1.7,0.1,4.6,0.6,4.9-2.7c3.8,2.6,7.6-1.1,11.4,0c0.8,0.2,7-0.2,7.4-0.7\n                            c1.7-1.9,2.5-1.2,2.9,0.9c-0.1,3.8-3.8,3.8-5.9,5.5c-0.7,0-1.3-0.3-1.9-0.6c-1.4-0.6-3-0.7-4.3-0.1c-4,1.9-8,3.7-12.4,1\n                            c-0.4-0.2-1.2,0.4-1.8,0.7c-1.4,0.5-2.9,0.9-3.8,2.2c-0.3,0.3-0.7,0.6-1.1,0.7c-0.7,0.2-1.4,0.1-2-0.3c-1.9-2.5-4.3-3.3-7.3-2.4\n                            c-3,1-6.6-0.9-9.3,1.9c-2.5,1.5-5,1.3-7.7,0.5c-5.1-1.3-9.9,0.2-14.7,1.6c-0.2-1-0.3-1.9,0.2-2.8C578,217.7,578,216.4,578.1,215\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#717173",
                  d:
                    "M613,205c-0.6,0.4-0.9,1-0.6,1.7c0.5,1.1,2.4,2.1,0.8,3.4c-1.5,1.2-1.7-0.8-2.5-1.4\n                            c-0.9-0.7-1.6-0.6-2.5,0.4c-1.6,1.7-3.5,2.7-5.5,0.4c-0.9-1-1.6-1.1-2.4,0c-1.3,1.8-2,1.7-2.1-0.6c0-0.3-0.9-0.8-1-0.7\n                            c-4.7,3.2-9.4-1.7-14.2-0.1c-1.1,0.4-3.4,2.8-3.3-1c-0.6,0.7-1.1,1.3-1.7,2c0-3,0-6,0-9c0.3-0.1,0.8-0.4,0.9-0.3\n                            c1.8,1.8,6.3,2.4,9,1.3c0.8,1.1,1.5,2.3,3,1c3,3.1,6.3-0.2,9.4,0.2c1,0.1,1.9-0.2,2.6,0.8c2.9,0.1,5.7,1.3,8.6,0.6\n                            C612.5,203.4,613.3,203.8,613,205z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2C2F",
                  d:
                    "M577.9,219.1c0.1,1,0.1,1.9,0.2,2.9c1.9,3.7,2.2,7.4-0.2,11c-1.7-4.6-0.5-9.4-0.8-14.2\n                            C577.3,218.9,577.6,219,577.9,219.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#626061",
                  d:
                    "M650.5,167.4c1.7-0.4,2.7-0.8,3.6,0.2C653,168.2,652,168.2,650.5,167.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#908F95",
                  d:
                    "M809,243.9c-0.7,1.2-1.9,1-3,1c-5.9,0.1-11.9-0.7-17.7,1.2c-4.2,1.4-8.6,0.5-12.9,0.4\n                            c-7.7-0.2-15.1,2.1-22.6,2.7c-0.8,0.1-1.6,0-2.5-0.3c2.5,1.2,5.7-1.4,8,1.8c-4.2,1.6-8.4-0.4-12.3,1.2\n                            c-12.2,0.9-24.4,2-36.7,2.8c-7.8,0.5-15.6,0.8-23.3,1.1c-1.6-1-3.2-0.4-4.8-0.2c-0.8,0.1-1.8-0.2-2-1c-0.3-1,0.7-1.6,1.4-1.7\n                            c5.4-0.6,10.4-3.8,16.1-2.7c5.4,1,10.8-2,15.7,0.2c-0.1,0.1-0.8-0.1-1.1-0.6c-0.4-0.6,0-1.3,0.7-1.6c1.8-0.8,3.5-0.9,5.1,0.6\n                            c4.7,1.5,9,1,13-2c0.1-0.6,0.4-0.9,1-1c6.9,0.9,13.5-0.9,19.8-2.9c2.5-0.8,5.1,0.9,7.2-1.1c5.2-4.6,10.2-2.4,15.8-0.5\n                            c1.6,0.5,5.5-0.4,8.2-1.5c2.1,3,4.5-2.6,6.6,0.3c2.7-3.2,6.2-1.1,9.2-1c2.6,0.2,5.2,0.9,7.8,0.6\n                            C809.1,239.4,809.6,241.2,809,243.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9A9A9F",
                  d:
                    "M717,249c-1.6,0-3.3,0-5,0c0.1,1.1,1,0.8,1.4,1.1c1.2,0.9,0.1,0.9-0.4,0.9c-6.4-0.9-12.6,1.6-19.2,0.5\n                            c-4.3-0.7-9,2.8-15,2.4c3,1.8,5.6,0.1,7.2,2.1c-1.4,0.3-2.8,0.6-4.1,0.9c-0.2,0.2-0.4,0.4-0.6,0.6c-3.1,1.2-6.2,1.3-9.3-0.1\n                            c-1.8-3.2,0.2-4.2,2.9-5c-1.4,0.4-2.7,0.7-4.3-1.2c3.6-2.7,8.1-0.8,11.6-2.4c2.5-0.7,3.6-2.4,3.5-5c-0.1-1.9-0.1-3.9,0.5-5.7\n                            c3.1-6.1,3.9-6.5,9.2-5.6c0.2,0.2,0.4,0.4,0.6,0.6c1.3,1.6,2.1,4.7,4.7,0.7c0.8-1.3,3.6,0.5,5.8,0.4c2.8-0.2,5.5-0.5,8.2-1\n                            c2.6-0.4,4.4,0.1,4.4,3.5c0,3.1-1.6,6.9,2.3,9.3c0.8,0.5-0.6,2-1.5,1.8C718.4,247.3,717.9,248.4,717,249z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#141318",
                  d:
                    "M578,263c0.4-0.1,0.9-0.2,1.3-0.2c1-0.9,2.3-1,3.5-1.1c3.4,0.3,3.4,0.3,4.5,2.5c0,0.1-0.9,0.6,0.1,0.2\n                            c7.1-2.8,14.6-3.8,22.2-3.7c2.5,0,4.9-0.1,7.3-0.9c8.1-1.8,16.4-0.8,24.6-2.2c0.9-0.1,1.7-0.1,2.6-0.1c4,0.1,8,0,12,0.1\n                            c4.1-0.3,8.3,1.6,12.4-0.3c0.5-0.1,1-0.2,1.5-0.2c4,0.4,7.9,0.9,11.9-0.3c0,0-0.1,0-0.1,0c2,0.9,5.1-1.6,6.1,2.1\n                            c-3.7,2.6-7.9,1.9-12,2c-1.7-0.8-3.3-0.8-5,0c-5.7,2-11.8-0.2-17.8,1.7c1.7,1.9,3.4-0.8,4.9,0.9c-2,1.1-4,2.2-6.2,0.8\n                            c-4.3-2.8-8.2-1.9-12.2,0.7c-5.3,3.4-11,2.3-16.3,0.7c0.3-0.2,0.1-0.1,0,0c0.3-0.2,0.5-0.3,0.8-0.5c-0.1-0.1-0.2,0-0.7,0.5\n                            c-4.6,0.1-8.8-0.2-13-0.1c-3.5,0.1-6.8,2-10.4,2.2c1.9,0.1,3.8,0.2,5.7,0.4c0,0.2,0,0.3,0,0.5c-3.5,0-7.1,0-10.6,0\n                            c-0.1-1.2,1.9-0.1,1.9-1.3c-3.7-1.6-6.1,1.3-9,2.6c-1.7,0-3.3,0-5,0c-3.5-0.4-4-3.4-5-6C578,263.7,578,263.3,578,263z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#87868C",
                  d:
                    "M746,252.1c3.4-2.5,7.5,0,11.9-1.9c-4.1,0-7.4,0-10.6,0c-0.3-1.5,0.8-1.9,1.3-1.8c6.5,1,12.5-3,18.6-2.6\n                            c5.4,0.3,10.6-2,16.1-0.2c2.3,0.8,5.4-1,8.1-1.4c5-0.8,9.9-1.3,14.7,0.8c0,0,0,0,0,0c-2.2,2.3-5.1,2.5-7.8,2.2\n                            c-6.3-0.6-12,2.2-18.1,2.8C768.7,250.9,757.4,252.2,746,252.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E7E83",
                  d:
                    "M780,250c1.2-1,2.1-3.2,4.2-1.1c0.2,0.2,0.8,0.2,0.9,0.1c6.1-5.9,14.2-1.1,20.9-3.9c2.1,1.2,4,3.4,6.9,2\n                            c0,0.6,0,1.2-0.1,1.8C801.9,249.2,791,249.6,780,250z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D7C7D",
                  d:
                    "M769,186c4.9,0.4,9.4-4.3,14.5-1c1.5-3.2,5.5-1.7,7.5-4c2.5-2.8,5.8-0.3,8.7-1.1\n                            c2.1-0.5,4.4,0.3,6.7-0.7c2.8-1.2,0.8,2.6,2.5,2.8c0,2,0.1,4,0.1,6c-1.6-1-0.5-2.8-0.8-3.3c-8-1-13,5.5-20.2,6.3\n                            c-5.8-1.7-11.7-1.6-17.4-0.3c-2.8,0.6-3.6-0.1-3.9-2.5C766.5,186.4,768.2,186.8,769,186z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6C6E",
                  d:
                    "M806.8,173.4c-2-0.8-3-1.7-2.2-4.5C806.3,170.2,807,171.4,806.8,173.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828385",
                  d:
                    "M577.8,233c0.1-3.7,0.1-7.3,0.2-11c2.7-3,5.7-3.2,9.7-3.2c4,0.1,8.2,2.6,12.2,0.2\n                            c3.4-0.3,6.8,0.1,10.1-1.4c2.4-1.1,5.2-0.2,6.9,2.4c0.7,0,1.3,0,2,0c0.1,2.2-2,2.6-3.3,3.7c-5.9,1.1-11.8,0.5-17.7,0.7\n                            c-4.2,0.1-8.4,1.1-12.8,0.3c-2.8-0.5-5.2,0.9-4.9,4.5c0,1.3,0.1,2.7,0,4c-0.1,2.3,0.1,4.6,0,6.9c-0.1,1.5-0.1,3-1.5,4\n                            c-0.3-0.1-0.5-0.2-0.7-0.4C578,240.2,577.9,236.6,577.8,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6969",
                  d:
                    "M573,217c0-1,0-2,0-3c-3-3.4,0.2-7.2-0.6-11c0-0.5-0.9,0.4-0.3,0.1c0.2-0.1,0.3,0,0.3,0.4\n                            c0,1.2,0.7,3.1-0.8,3.4c-1.7,0.4-2.4-1.3-2.5-2.9c-0.1-1.9-1-3.8-0.3-5.8c-1.1,3.2,1.9,6.8-0.8,9.9c-1.9-7.6-0.5-15.3-0.8-23\n                            c1.8,1.3,3,3.8,5.9,2.9c-1,4.9,0.9,9.7,0.9,14.6c0,4.8,0.1,9.6,0.1,14.4C573.6,217.5,573.3,217.4,573,217z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#767273",
                  d:
                    "M573,217c0.3,0,0.6,0,0.9,0c0,1.7,0,3.3,0,5C572.3,220.6,573.2,218.7,573,217z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2C2F",
                  d:
                    "M577,249c-0.3,0-0.6,0-0.9,0c0-1.7,0-3.3-0.1-5C577.7,245.4,576.8,247.3,577,249z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6C696C",
                  d:
                    "M518.1,194.1c3.2-0.9,6.4-1.9,9.1-3.9c1.9-0.4,3.8-0.9,5.7-1.3c2.8,0.9,6.8,3.3,7.9,2.9\n                            c4.3-1.6,8.1,1.7,12,0.4c2.6-0.8,4.2,1.2,5.6,2.4c3.3,3,3,3.3,5-0.9c0.3-0.7,1.1-1.1,1.7-1.7c1.2,6,1,12,0.9,18\n                            c-2.6-0.5-1.8-2.7-2.2-4.4c0-5,0-5.1-4.7-4.2c-3.6,0.7-7.7,0-10.6,3.3c-0.7,0.8-2.3,0.8-3.3,0c-5.7-4.6-12.3-2.9-18.6-2.8\n                            c-5.4,0.1-10.9,0.5-16.3-0.1c-1.3-0.2-2.6-0.6-3.3-1.9C510.6,198,514.3,196,518.1,194.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#787678",
                  d:
                    "M565,205c0.2,1.7-0.6,3.5,0.9,5c0,1.7,0,3.4,0,5c-0.3,0.3-0.6,0.4-1,0.2c-1.7-0.4-1,2-2.3,2\n                            c-0.7-0.2-1.2-0.7-1.5-1.3c-0.6-1.6-0.3-3.2-0.1-4.8c-2.4,2.6-5.5,2.2-8.6,1.9c-4.6-0.4-9.2-0.7-13.6,1.5\n                            c-1.2,0.6-2.7,0.7-3.9,0.1c-2.9-1.6-5.6-1.6-8.5-0.1c-1.9,0.9-3.5-0.4-4.8-1.8c-1.7-1.8-3.1-2.3-5.8-1.1\n                            c-4.1,1.9-8.9,1.8-13.2,1.4c-3.8-0.3-7.4,2.4-11.1,0.1c-0.8,1.3,0,2.6-0.2,3.9c0.1,3.9,0.2,7.8,0,11.8c-0.1,1.8,0.1,3.5,0,5.3\n                            c-0.2,2.4,0,4.8,0,7.2c0.2,4-0.1,7.9-1.5,11.8c-0.3,0-0.6-0.1-0.8-0.2c0-13,0.1-26-0.2-39c-0.1-4.6,1-7.4,5.8-7.9\n                            c3.2-1.9,6.4-2.3,9.8-0.7c1.9,0.9,3.7,1.5,5.9-0.2c1.6-1.3,4.6,0.9,6.3-2.2c0.4-0.8,3.6,2.7,6.5,1.5c1.5-0.6,3.6,1.3,5.4-0.6\n                            c0.7-0.7,2.6-0.1,3.3,0.3c4.9,3.2,10.3,1.1,15.4,2c3.2,0.6,5.7-1.4,8.7-1.4C559,204.6,562,204.3,565,205z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#727072",
                  d:
                    "M565,205c-3,0.3-6,0.6-9,1c-1.8,0.2-4.1-0.9-5.1,1.8c-0.4,1-1.1,0.6-2,0.1c-2.7-1.5-5.6-1.8-8.4-0.2\n                            c-2.3,1.2-4.1-0.5-6-1.2c-1.9-0.7-4.9-0.8-6.8,0.5c-1.1,0.7-1.9-0.1-2.5-0.8c-1.1-1.3-2.3-1.3-3.5-0.4c-2.7,1.8-3.8,0.5-4.1-2.7\n                            c-2.2,1.8-1.4,5.5-4.7,5.6c-1.4-1.2,0.7-2,0.2-3.3c-1.4,0.6-3.4-0.1-3.7,2.2c-0.3,1.9-0.9,1.1-1.8,0.6c-4-2.2-8.1-3.9-12.7-2.1\n                            c3.6-2.9,7.8-4.4,12.1-6c6.6,1.4,13.2,1.2,19.8,0.6c5.3-0.4,10.5-0.1,15.7,0.5c1.4,0.2,1.8,1.4,2.5,2.3c1.3,1.6,3.2,1.4,3.8,0.1\n                            c2.6-5.7,9.2-0.5,12.5-4.8C562.3,197.3,565,200.7,565,205z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#89888A",
                  d:
                    "M566,219c0,1.3,0.1,2.6,0.1,4c-1.3,1.1,0.3,2.8-0.8,3.9c-2.9,1.6-5.8,2.6-9.2,1.3\n                            c-2.2-0.8-4.2,0.8-6.3,1.1c-6.5,1-13,0.3-19.5,0.1c-3.6-0.1-6.9,1.8-10.7,1.2c-3-0.4-6.2,0.7-9.1-1.4c-1-0.8-2.3-0.1-3.2,0.6\n                            c-3.1,2.5-7,1.7-10.6,2.4c-3,0.6-3.2-2.8-4.4-4.6c-0.4-1.1-0.5-2.3-0.4-3.4c0.2-2.9-0.1-4.8,4.4-3c6.2,2.3,13,1.1,19.3-1.5\n                            c1.4-0.6,2.5-1.4,4.1-1.3c11.7,1.1,23.4,0,35.1,0.8C558.6,219.4,562.2,217.2,566,219z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828284",
                  d:
                    "M566,219c-8.4,3.2-17.2,0.5-25.8,1.6c-6,0.8-12.6,0.3-18.8-0.8c-2.9-0.5-4.4,1.4-6.5,1.9\n                            c-5.7,1.3-11.5,2.5-17.4,1.6c-1.8-0.2-3-1.2-4.4-2.5c0,2.6,0,4.9,0,7.2c0.7,1.1,1.1,2.3-0.3,2.9c-1.4,0.6-1.8-1.1-2.6-1.8\n                            c0-4.3,0-8.7-0.1-13c5.7,1.6,11.2,1.1,16.8-0.7c1.6-0.5,3.2-1.7,4.7-0.3c3.5,3.2,7.1,1.9,10.7,0.7c3.4-1.1,6.9-1.4,10.3-0.3\n                            c3,1,6,1,8.8-0.2c3.9-1.7,7.8-1.5,11.5-0.1c3.1,1.2,6.3-0.6,9.3,0.9c0.3,0.3,0.7,0.7,1,1c0.9-0.4,0.1-2.6,2-2c0.3,0,0.6,0,0.9,0\n                            C564.9,216.4,566.3,217.7,566,219z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#767273",
                  d:
                    "M568,208.1c0-3.6,0-7.2,0-10.9c1.6,2.9,1.2,6.4,3.1,9.2c1.7-1.3,0.3-3,1.9-4.9c0,4.6,0,8.6,0,12.5\n                            c-1.6,0.9-0.5,2.8-1.4,4c-1.2-3-2.4-6-3.6-9C567.9,208.7,567.9,208.4,568,208.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#919193",
                  d:
                    "M565,227c0.1-1.4-0.5-3,1.1-4c0.3,0.8,0.6,1.5,0.8,2.3c1.9,2.2,0.8,4.8,1.1,7.2c0,1.1,0.1,2.2-0.4,3.2\n                            c-0.3,0.5-0.8,0.7-1.3,0.7c-0.5-0.3-0.8-0.6-1-1.1c-0.7-2.4-0.5-4.9-0.3-7.4C564.9,227.5,564.9,227.2,565,227z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383637",
                  d:
                    "M567.1,233c-0.1-2.6-0.2-5.2-0.2-7.8c0.4-1.7-0.5-3.7,1-5.2c0.1,0.7,0.2,1.3,0.2,2\n                            c0.7,3.5,0.2,6.9,0.3,10.4C568.2,233.1,567.8,233.3,567.1,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#686666",
                  d:
                    "M902.9,155.3c-0.1,0.7-0.4,1.4-1.2,1.1c-0.3-0.1-0.5-0.8-0.6-1.2c0-0.7,0.3-1.4,1.1-1.4\n                            C903.1,153.9,902.9,154.7,902.9,155.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#686666",
                  d:
                    "M1032.6,159.5c1.5-0.6,2.6-0.7,3.6,0C1035.1,160.2,1034.1,160.1,1032.6,159.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#706D6E",
                  d:
                    "M903,169c0-0.7,0-1.3,0-2c2.6-0.9,6.2,2,8-2c3,0.6,6.2-1.2,9,1v0c5.2,2.3,10.7-0.5,16,1c0,1.3,0.7,2,2,2\n                            c4.7-1,8.9-1.2,13.6,1.7c5.1,3.2,11.6,2.8,17.6,3.4c5.3,0.6,10.9-2.2,15.9,1.6c0.7,0.6,1.6,0.6,2.3,0.1\n                            c4.1-3.1,9.2-2.5,13.5-2.2c3.5,0.3,6.8-0.3,10.1-0.2c1,0,2.2,0,2.8,0.8c2.8,4,7.1,3.5,11.1,3.7c2.2,0.1,4.2,0.9,6.2,2\n                            c-0.6-1.2-3.1-1-2.2-3c0.3-0.8,0.7-1.5,0.9-2.3c0.5-2.5,1.1-1.8,3.1-3.4c1.9-1.6,4.1-2.4,6-3.9c2.2-1.8,4.6-1.9,7-0.9\n                            c5.4,2.3,11,3.8,16.8,3.4c3.2-0.2,0.8,4.9,3.8,3.5c2.1-1,3.8-1.9,5.8-0.2c0.3,0.2,0.4,0.5,0.7,0.7c3.6,2.3,7.9,2.9,11.6,4.7\n                            c3.4,1.7,7.5-1.1,10.4,2.3c-0.2,1,0.6,2.3-1.5,2.4c-3.9,0.1-8,0.6-11.5-1.5c-3.6-2.2-5.5-1.4-6.5,2.8c-1.3-0.1-2.3-6.3-4-0.5\n                            c-0.1,0.4-1.9-0.1-1.9-0.9c0-3.7-1.3-3.4-3.9-1.7c-1.6,1-3.5,0.8-5.1-0.5c-1.7-1.4-2.7-0.6-3.5,1c-1.5,1.9-3.3,2.4-5.3,0.9\n                            c-4.4-2.4-14-0.9-16.1,2.5c-1.8,4.2-4,5.3-8.2,4.2c-0.1-0.2-0.2-0.5-0.3-0.7c0.7-1.5,1.3-2.8-1.3-3c-3-0.3-5.8-1.2-8.9-1\n                            c-1.6,0.1-3.7,0.9-3.3-2.6c0.2-2-1.7-1.3-2.8-0.4c-1.4,1.1-0.9,3-1.3,4.6c-3-2.4-5.6-5.6-9.3-1c-0.8,1-2.9,0.5-2.1-1.5\n                            c1-2.5-0.9-2.3-1.8-1.8c-7.2,3.6-13.9,0.2-20.9-0.3c-4.1-0.3-8-3.5-12.9-1.1c-3,1.4-7.1,0.1-9.2-3.9c-1.1-2.1-8.3-2.8-9.8-1\n                            c-0.6,0.7-0.9,1-1.3,0.3c-1.6-2.8-4.5-1.6-6.7-1.9c-6.3-0.9-12.7-0.3-19.1-1.1C911.4,172.3,907.3,170.8,903,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6B6C",
                  d:
                    "M1029,177c0.4,1.8,2.2,1.1,3.1,1.9c1.1,0.8,1.2,2.1,0.2,3.1c-1.8,1.9-1.2-0.4-1.8-1\n                            c-1.6-1.5-4.3-2.4-5.8-1.7c-2.9,1.4-5.6-2.6-8.3,0.3c-0.6,0.6-1-0.7-1.4-1.5c-2.1-4.5-6.3-4.7-9.3-0.6c-0.4,0.5-0.7,1.2-1.5,0.8\n                            c-0.7-0.3-1.1-0.9-0.8-1.6c0.9-2.7-0.3-2.8-2.5-2.2c-4.8,1.4-10.5-1.1-14.5,3.6c-0.5,0.6-1.3,0.4-1.7-0.3\n                            c-2.4-4.8-7-1.1-9.4-2.3c-4.1-2.1-7.8,2.7-11.5-0.8c-1.8-1.7-5,0-7.8-1.1c-1.8-0.7-3.7-1.2-5.4-2.4c-2.3-1.6-4.7-3.2-7.8-1.7\n                            c-1.7,0.8-3.2,0.2-4.7-0.6c-0.1-2.3-0.2-4.6,3.4-3.1c1.1,0.5,2.4,1.4,3.8,0.4c2.4-1.8,3.8-0.1,4.7,1.7c0.8,1.5,2.5,2.9,3.2,2.3\n                            c4.8-4.7,9.2-0.4,13.7,0.2c0.9,0.1,1.9-0.3,2.8-0.4c0.4-2.1-3.5-1.9-1.6-5.2c4.7,7.2,12.1,6.6,18.6,5.7c3.3-0.5,6.5-0.3,9.8-0.7\n                            c3.6-0.4,7-0.5,9.9,2.1c0.1,0.1,0.3,0.3,0.4,0.3c4.8-4.4,9,1.9,13.8,0.8C1023.9,172.3,1027,173.7,1029,177z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6B6C",
                  d:
                    "M936,167c-5.4,0.5-10.9,3.4-16-1c4-1.9,8.2-1.2,12.4-1C934,165.1,935.3,165.5,936,167z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6B6C",
                  d:
                    "M920,166c-3-0.6-6.2,0.9-9-1C914.1,164.5,917.4,162.3,920,166z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#636162",
                  d:
                    "M971.6,161.4c1.7-0.6,2.5,0.1,3,1.1c0.1,0.2-0.4,1-0.6,1C972.8,163.6,972.1,162.8,971.6,161.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747070",
                  d:
                    "M1132,189c0,0.3,0,0.7,0,1c-1,0.4-1.9,1.3-3.1,0.7c-0.2-0.1-0.4-0.6-0.3-0.8\n                            C1129.4,188.4,1130.8,189.3,1132,189z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BABBB5",
                  d:
                    "M1237,169c-2,0-4,0-6,0c-3.6-0.2-22.6-6.3-25-8c1.8,0.8,1.8-6.5,4.6-1c0.7-4.4,4.9-0.9,6.6-2.9\n                            c-4.9-4.4-12.2-4.2-15.4,1c-0.9-3.8-3.3-4.9-6.7-5.1c-2.5-0.1-5.2-1.4-6.4-3.2c-4.2-5.8-11.1-7.3-16.6-10.9\n                            c-1.8-1.2-3.7-3.4-6.8-3.1c-1.8,0.2-0.4-1.7-0.2-2.7c6.3,1.5,12.9,2.4,18.1,6.3c3,2.3,6.2-0.2,8.9,1.7c-0.1,0.8-0.3,2.3-0.2,2.4\n                            c4.1,0.9,7.8,5.5,11.6,4.1c5.3-1.9,8.4,0,11.1,3.6c3.8,5.1,9.8,4.9,14.8,6.9c1.9,0.7,4.7,0.1,1.4,3.1c-1.7,1.6,0.7,3.5-0.8,6.5\n                            c3.7-3.8,4.7,0.8,7.1,0.4c0.2,0.2,0.3,0.4,0.2,0.7C1237.2,168.9,1237.1,169,1237,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BEC0B9",
                  d:
                    "M1302,189c-6.2-1.6-12-4.2-17.7-6.9c-1.7-0.8-3.4-1.2-5.3-1.1c-6.7-3.5-14-5.6-20.8-9\n                            c-1.8-0.9-4.2-1.3-4.2-4c1,0,2,0,3,0c11.7,5.2,23.5,10.4,35.2,15.6C1295.6,185.1,1299.3,186.2,1302,189z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C5C8C1",
                  d:
                    "M1254,168c5.5,4.6,12.6,5.7,18.8,8.8c2.3,1.1,5.1,1.3,6.2,4.2c3,2.3,7.2,3.1,9,7c-0.8,0.1-1.1,1.8-1.9,1\n                            c-6.3-6.6-15.6-7-23.2-10.9c-8-4.1-17.2-6.1-25.9-9.1c0-0.3,0-0.7,0-1C1242.7,166.8,1248.3,164.4,1254,168z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1280.9,198.1c2.7-1.2,4.5,0.9,6.6,1.9c2.9,1.3,5.2,3.9,8.8,3.4c2.1-0.3,0.8,2,1.6,2.8\n                            C1291.9,204.2,1286.3,201.4,1280.9,198.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#565951",
                  d:
                    "M1282,209c0-1.1,0.7-1.7,1.5-2.4c0.8-0.7,1.3-2,2.8-1.2c1.3,0.7-1.7,2.8,0.9,3.1c-0.7,1-1.6,1.4-2.8,1.1\n                            C1283.6,209.4,1282.8,209.2,1282,209L1282,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C7CCC7",
                  d:
                    "M1269.8,193.1c4.3,0.5,8.2,1.8,11.2,5.1C1276.9,197.3,1273.3,195.3,1269.8,193.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1297.9,206.2c3.7-0.9,5.9,1.6,8.1,3.9C1303.1,209.2,1300.2,208.3,1297.9,206.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#625E5E",
                  d:
                    "M1881,389.1c-0.6-0.1-1.3-0.3-1.9-0.4c-0.4-0.4-0.8-0.9-1.1-1.3c0.8-2,2-0.7,3.1-0.4\n                            C1881.6,387.7,1881.5,388.4,1881,389.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A7A09D",
                  d:
                    "M1929,411c0-0.3,0-0.6,0.1-1c1.3-2,2.9-2,4.8-0.9c0.4,3.6,0.7,7.1,1.1,10.7c0.2,1.6-0.1,2.5-2,2.3\n                            c-0.3,0-0.6-0.1-0.9-0.1C1931,418.3,1930,414.6,1929,411z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#918A89",
                  d:
                    "M1933.9,409.1c-1.6,0.3-3.2,0.6-4.8,0.9c0-2.3-0.1-4.6-0.1-6.9c0.9-0.7,1.4-1.4-0.1-2\n                            c-0.2-0.4-0.1-0.9,0-1.3c1.4-1.5,3.7-0.3,5.1-1.8c1.5-0.5,0.6-2.5,2-3.1c0.8,3.5-1.2,6.6-1,10\n                            C1933.5,406.1,1934.2,407.7,1933.9,409.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#97908E",
                  d:
                    "M1939.9,415.9c0.9,3.7-2.5,2.2-3.8,3.2c0.1-1.5-0.8-3.4,0.6-4.5C1937.9,413.6,1938.7,415.7,1939.9,415.9\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383431",
                  d:
                    "M1935.1,406.1c0.6,0,1.2,0.1,1.8,0.1c1.9,1.9,0.4,3.7,0,5.6c-0.6,0.1-1.6,1.3-1.8-0.2\n                            C1934.9,409.8,1935.1,407.9,1935.1,406.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#958B89",
                  d:
                    "M1944,403.8c5.1,0.2,10,0.9,14.9,2.2c0,0.6-0.1,1.2-0.1,1.8c-1.9,1.4-3.9,0.3-5.9,0.2l0,0\n                            c-2.9-1.1-5.7-3-9.1-1.8c-0.3-0.7-0.6-1.4-0.9-2.2C1943.4,403.9,1943.7,403.9,1944,403.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8A807F",
                  d:
                    "M1910,377c0.7,1.5,0.2,2.1-1.4,2c-1.3,0-2.7-0.3-3.6,1.1c-0.6,0.1-1.3,0.2-1.9,0.3\n                            c-4.3-2,0.4-2.2,0.7-3.2c0.1-0.1,0.3-0.2,0.4-0.3C1906.1,376.3,1908.1,376.2,1910,377z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#F4F0EF",
                  d:
                    "M1927.9,385.1c0.1,2.3,0.1,4.6,0.2,6.9c1,1.1,0.5,2.1-0.1,3.2c-0.9,0.9-2.3,1.2-2.9,2.5\n                            c-0.2,0.4-0.5,0.7-0.8,1.1c-1.7,1-3.2,0.3-4.7-0.5c-1.7-1.9-1-3.6,0.3-5.3c0.8-2.7-0.9-3-2.9-2.9c-0.8,0.3-1.2-0.1-1.5-0.8\n                            c0-0.5,0.1-0.9,0.5-1.2c0.5-2-0.6-4.2,1-6c2.6,0.4,5.2,0.8,7.8,1.3c0.4,0.3,0.8,0.6,1.2,0.8C1926.3,385,1927.1,385,1927.9,385.1\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E5E1E1",
                  d:
                    "M1871.3,382.8c-1.1-0.3-2.2-0.6-3.2-1c-0.4-0.3-0.7-0.6-1.1-0.9c-0.9-1.6-3.1-0.4-4-2\n                            c6.4-1.8,12.8-1.1,19,1c-3.2,1.9-6.5,0.8-9.8,0.6c7.8,0.5,15.5,2,23.1,3.8c1.8,0.5,4.8-1.6,5.1,2.3c-0.5,0.8-1.2,1.1-2.1,1.4\n                            c-3.1,0.5-6-0.1-8.9-1c-1.7-0.8-3.5-0.7-5.3-1.1c-1.7-0.6-3.2-1.5-5-1.9C1876.4,383.7,1873.8,383.2,1871.3,382.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A9A4A3",
                  d:
                    "M1895,384.7c-8-1.2-15.9-2.4-23.9-3.6c0-0.4,0-0.7,0-1.1c3.6,0,7.2,0,10.8,0c1.3,1.7,3.1,2.1,5.2,2\n                            c2.8-0.1,5.5,0.1,7.9,1.9c0.3,0.2,0.5,0.4,0.3,0.5C1895.2,384.6,1895.1,384.7,1895,384.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ACA6A5",
                  d:
                    "M1895,384.7c0-0.3,0-0.5,0-0.8c5.5-0.3,11,0,16.4,1.1c1.6,0.3,3.3,0.7,3.5,2.9c-4.3,1.9-8.5-1-12.8-0.2\n                            c-0.8,0-1.6-0.2-2.1-0.8C1899.4,383.7,1896.6,385.6,1895,384.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E9E3E4",
                  d:
                    "M1902,387.1c4.5-1.9,8.6,0.8,13,0.8c0.4,0,0.7,0.1,1.1,0.1c0,0.4,0,0.8-0.1,1.1\n                            c-1.6,1.4-3.5,1.1-5.3,0.8c-1.7-0.5-3.4-0.8-5.1-0.8c-0.7-0.1-1.5-0.2-2.2-0.5C1902.6,388.4,1902.2,387.8,1902,387.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C1BCB9",
                  d:
                    "M1895,380c-2.4,1.8-4.9,1-8.6,0.4C1890,378,1892.6,380.9,1895,380L1895,380z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E4949",
                  d:
                    "M1903.4,387.9c0.6,0.1,1.1,0.1,1.7,0.2c0.5,0.4,1.3,0.6,1.3,1.4c-0.2,1-0.7,1.7-1.7,1.9\n                            c-2.1-0.2-4,0.6-6,0.8c-6-0.1-11.8-2.1-17.6-3.1l0,0c0-0.7,0-1.4,0-2c1.2-2.2-1.8-1.6-2-2.9c1.7,0,3.4,0.1,5,0.9\n                            c1.7,1.1,3.8,0,5.5,0.9c2.8,0.9,5.6,1.2,8.5,1.2C1899.7,388,1901.7,387.1,1903.4,387.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#625E5E",
                  d:
                    "M1880.9,389.1c4.5-1.7,8.5,1.2,12.7,1.4c1.7,0.1,3.5,0.4,5.3,0.5c1.2,1.2,3.5-0.7,4.4,1.4\n                            c-0.4,3.4-2.7,1.9-4.5,1.7c-5.1-1-10.2-2-15.3-3C1882.4,390.9,1881.7,390,1880.9,389.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282425",
                  d:
                    "M1920.2,397.8c1.3,0.1,2.5,1.3,3.8,0.3c2.1-1.8,4.4-2.3,7-1c1,0.3,2,0.7,2.9,1c-0.3,3.9-3.5,0.9-5,2.1\n                            c-0.6,0.5-1.2,1-1.2,2c0.1,0.4,0.1,0.8,0.1,1.2c-0.9,0.7-1.7,1.5-0.9,2.7c-1,2.9-4.3,1.3-5.9,3l-0.2,0.3l-0.4,0\n                            c-1.6-0.5-4.4,0.5-4.2-2.1c0.2-3.1-2.3-6.9,1.9-9.1C1918.8,397.4,1919.5,397.5,1920.2,397.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282425",
                  d:
                    "M1904.9,391c0.4-0.6,0.8-1.3,1.2-1.9c1.4-0.9,2.8-0.5,4.2-0.2c1.9,0.1,3.8,0.2,5.6,0.3\n                            c0.4,0.3,0.7,0.6,1.1,0.9c0.7,3.7-2.7,7.7-4.1,7.5c-5.7-0.8-5.1,3.9-6.9,6.5c0.1-2.2-0.1-4.4,0.7-6.7c0.7-2,0.7-4.2-1.7-5.4\n                            c-0.3-0.2-0.4-0.4-0.3-0.6C1904.7,391.1,1904.8,391,1904.9,391z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#797678",
                  d:
                    "M1920.2,397.8c-0.7,0-1.4,0.1-2.1,0.1c-1.7-2.5-1.6-4.3,1.8-5C1920.4,394.5,1919,396.2,1920.2,397.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524E4E",
                  d:
                    "M1904.9,391c0.1,0.3,0.1,0.7,0,1c-0.3,0-0.5,0.1-0.8,0.1c-0.4,0.5-0.8,0.5-1.1-0.1c-1.4-0.2-3,0.5-4-1\n                            C1901,390.7,1902.9,389.3,1904.9,391z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4E4949",
                  d:
                    "M1903,392c0.4,0,0.7,0,1.1,0.1c-0.5,3.9-2.6,3.5-5.2,2C1900.5,393.8,1902.7,394.7,1903,392z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#474040",
                  d:
                    "M1921,409c1.1-2.8,4.2-1.5,5.9-3c2.2,4.1-1.6,2.5-3,3.1C1922.9,409,1922,409,1921,409z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BBB5B4",
                  d:
                    "M1928.9,401.2c1.6-0.2,3.2-0.6,4.9,0.5c-1.4,2-3.4,0.9-4.9,1.4c-0.4,0-0.7,0.1-1.1,0.1l0.1-0.2\n                            C1927.4,402,1928.1,401.6,1928.9,401.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#322E2D",
                  d:
                    "M1167,241c2,0,4,0,6,0c-0.1,0.7,2.6,1.2,0,2.2c-3.3,1.3-6.4,3.3-9.6,5c-1.6,0.8-3.4,1.5-3.3,3.8l0,0\n                            c-2.5,1.8-5.1,3.2-8.1,0.9c4.5-5.2,10.9-7.5,18.2-10.9c-4.2,0-7.2,0-10.2,0c-2.3,0-4.7-0.1-7-0.1c2.1-4.1,5.9-1.7,8.9-2.4\n                            C1163.6,239.7,1165.5,239.7,1167,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#614E51",
                  d:
                    "M1152,252.9c2.8,0.6,5.3-0.9,8.1-0.9c-1.2,2.7-0.5,5.3,0.3,7.8c-0.2,0-0.5,0-0.7,0\n                            c-1.8-1.1-2.1-5.1-5.6-3C1150.6,257,1150.1,255.6,1152,252.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E2829",
                  d:
                    "M1154,257c3.8-2.7,4.4,0.7,5.6,3c1.3,2.3,1.3,4.8,1.5,7.3c0.1,2.4-1.1,2.9-3.1,2.5\n                            c-0.3-0.6-0.6-1.2-0.9-1.8C1160.2,263.2,1158.8,258.1,1154,257z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#535253",
                  d:
                    "M1162,241c-3,0.4-6.2-0.9-9,1c-15.6,0-31.3-0.5-46.8,0.3c-24.1,1.3-48.1,0.5-72.2,0.7\n                            c-1.2-1.3-2.2-2.9-1.2-4.5c0.9-1.5,2.4,0,3.6,0.1c3.4,0.3,6.5-1,9.7-1.5c6.5-1.1,12.9-0.3,19.3,0.2c1.4,0.1,2.9,0.6,4.3-0.3\n                            c0.7-0.3,1.3-0.3,1.9,0.2c1.1,1.7,3,1.5,4.5,1.2c8.3-1.8,16.9-1,25.3-2.7c5.3-1,11.1-2.4,16.9-0.7c3.5,1.1,7.2-1.5,10.8-0.6\n                            c4.3,1.2,8.6-0.2,12.9,0.6c0.3,0,0.7,0,1,0c2.9,1.6,5.2-0.3,7.7-1.2c5.3-1.8,11.1-0.7,16.3-2.8l0,0c0.7,0.5,1.1,1.1,1,2\n                            c0.9,0.6,1.8,1.2,3.1,2.1c-2.1,1.1-4.2,1.7-5.1,3.9C1165.4,241.1,1163.1,239.9,1162,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5B5D",
                  d:
                    "M1066,238c-4.8,1-9.6-1.1-14.4-0.1c-4.3,0.8-8.9,0-13,2.5c-1.9,1.1-3.2-1.3-5.1-1.7\n                            c0.2,1.5,0.4,2.9,0.5,4.3c-8.3,0-16.5,0-24.8,0.1c-1.8,0-3.7-0.5-5.3,0.8c-23.6,0-47.3,0-70.9,0.1c-0.3-0.2-0.4-0.4-0.3-0.6\n                            c0.1-0.2,0.2-0.3,0.3-0.3c3.3,0,6.7,0,10,0c8.2-1.7,16.4-1.6,24.7-1.3c10.7,0.5,21.1-1.5,31.5-3.7c3.9-0.8,7.8-2,12.1-0.3\n                            c2.5,1,5.5-0.6,8.3-0.7c9.4,1.6,18.2-2.6,27.4-2.5c12.1,0.1,24-2.2,36.1-2.2c2,0,4-0.1,5.3,1.9c0.1,0.6-0.1,1.1-0.5,1.6\n                            c-5.5,1.6-11,3.6-16.9,1.3c-0.3,0.3-0.7,0.7-1,1C1068.7,239.4,1067.3,237,1066,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1089.2,250.7c0-1.4,0.9-1.7,2-1.7c1.1,0,1.8,0.6,1.7,1.8c-0.2,1-0.8,1.8-1.9,1.7\n                            C1089.8,252.5,1089.3,251.7,1089.2,250.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1150.1,243.5c0.6,5.9-3.7,2.6-5.9,3.3C1146.3,245.8,1149.2,246.4,1150.1,243.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1104.9,246c1,0.1,2,0.3,1.7,1.3c-0.2,0.6-1,1.1-1.6,1.7c-0.3-0.7-0.7-1.4-1-2.1\n                            C1103.6,245.7,1104.7,246.4,1104.9,246z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1107.5,244.5c-0.4,0.1-1,0.4-1.6,0.4c-0.7,0-1.4-0.3-0.8-1.1c0.3-0.4,1.1-0.6,1.7-0.6\n                            C1107.3,243.2,1107.7,243.6,1107.5,244.5z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151113",
                  d:
                    "M1098.7,251c-0.5-0.3-1.1-0.5-1.2-0.8c-0.2-0.8,0.4-1.1,1.1-1c0.3,0,0.8,0.5,0.9,0.8\n                            C1099.5,250.3,1099,250.6,1098.7,251z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#636367",
                  d:
                    "M933,243c0,0.3,0,0.6,0,0.9c-4,0-8,0-12,0C924.9,241.9,929,243.5,933,243z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C8684",
                  d:
                    "M1162,280c-0.6,0.2-1.3,0.3-1.9,0.5c-1.1,0.3-2.1-0.1-2.4-1.1c-0.2-0.6,0.1-1.8,0.6-2.3\n                            c1.3-1.2,1.7,0.9,2.8,1C1161.3,278.7,1161.7,279.3,1162,280z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1298,201c-5.9-1.1-11-4.2-16.3-6.9c-0.5-0.3-1.5-0.5-0.2-1c0.4-0.2,1-0.1,1.5-0.1\n                            c6.5-0.6,10.9,3.5,15.6,6.8C1298.6,199.9,1298.2,200.6,1298,201z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C6CBC4",
                  d:
                    "M1329,209c3-0.2,5.5,0.4,6,4c-1,0-2,0-3,0C1330.8,211.8,1329.5,210.7,1329,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1326,213c-1.4-0.6-4.1,1.6-4-2C1324.3,209.6,1326.6,208.5,1326,213z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1321,211c-1.9,0.5-4.8,2.9-4-2C1318.2,210,1321.4,206.9,1321,211z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C9D1CA",
                  d:
                    "M1317,209c-3.1,0-5.2-1.8-7-4C1312.9,205.4,1314.9,207.2,1317,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C7CCC7",
                  d:
                    "M1312.9,197.9c-0.5,0.4-0.8,0.8-1.2,0.9c-0.3,0-0.7-0.3-1-0.5c0.3-0.3,0.5-0.8,0.9-0.9\n                            C1311.9,197.3,1312.3,197.7,1312.9,197.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5E5756",
                  d:
                    "M657.1,276c-2.7-0.3-5.6,1-8.1-0.9C651.7,275.3,654.6,274.3,657.1,276z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151318",
                  d: "M671,261c1.7-1.5,3.3-1.5,5,0C674.3,261,672.7,261,671,261z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9F9EA0",
                  d:
                    "M566,235c0,0.3,0,0.7,0,1c0.6,3.3,0,5.5-4.1,5.2c-3.8-0.3-7.4,1.3-11.1,2.1c-7.6,1.8-15.3,1.3-23,1.3\n                            c-6.1,0-11.8,2.3-17.9,2.2c-3.6,1.2-8.1-0.7-11,3.2c-0.7,1.1-1.3,2.2-2,3.3c-2-0.9-1.1-5.4-4.5-3.8c-2.7,1.2-0.7,3.4-0.3,5.2\n                            c-1.6,0.6-1.9-0.6-2.1-1.7c0-4,0.1-8,0.1-11.9c7.8,1.1,15.6-1.5,23.4-0.6c0.7,0.1,1.8,0.4,1.9,0.1c2.5-5.6,7.8-1.4,11.3-3.2\n                            c0.6-0.3,1.3-0.4,2-0.2c9.5,3.7,18.1-0.2,26.9-3.2c1.5-0.5,3.3-0.1,4.7-1.2c0.5,0,0.9,0.1,1.2,0.5c0.5,1,0.6,2-0.5,3.3\n                            C562.6,235.1,563.8,233.2,566,235z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A4A4A6",
                  d:
                    "M510,246c0.6-0.3,1.1-0.9,1.7-0.9c6.5,0.3,12.8-3.3,18.8-2.3c5.1,0.9,9.8-0.7,14.8,0.3\n                            c1.7,0.4,4.9-0.5,6.7-1.2c4.1-1.7,8-2.2,12.4-2.1c1.6,0-0.1-3.1,1.7-3.9c0.3,0,0.6,0,0.8,0c1.3,2,1.6,4.1,0.2,6.2\n                            c-2.7,1.4-5.7,1.7-8.5,2.5c-2.4,0.6-4.9,1.3-6.6,3.2c-2.4,2.5-4.9,2.3-7.7,1.3c-5.7-2.1-11.2-1.7-16.6,0.9\n                            c-0.4,0.2-0.9,0.7-1.3,0.6c-4.5-1.2-8.2,1.6-12.2,2.4c-1.3,0-2.7,1-4,0c-0.2-0.5-0.1-1.1,0.3-1.3C513.7,249.6,513,247.7,510,246\n                            z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#ABAAAC",
                  d:
                    "M514,253c3.1-2.4,6-5.3,10.6-3.3c0.5,0.2,1.4,0.1,1.9-0.2c6-4.3,12.4-3.7,18.7-1.2\n                            c3.8,1.5,4.8-1.6,7.1-2.6c4.6-2,9.5-4,14.8-3.6c0.1,0.2,0.3,0.3,0.4,0.5c0.2,0.6,0.1,1.2-0.6,1.5c-1.7,2.1-5.2,1.8-6.3,5.1\n                            c-0.6,2-3.2-0.8-4.4,0.1c-6.4,4.3-13.4,1.3-20,2.4c-4.4,0.7-8.6,1.4-13.1,0.7c-3.5-0.5-4.6,3.2-6.6,5.8\n                            C515.1,256.4,513.8,255.1,514,253z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B6B7B8",
                  d:
                    "M510,246c2.1-0.1,4.3,0,4.6,2.6c0.4,3.2-3.1,2.8-4.6,4.4c-4.5,1.2-10.1-0.3-11-3\n                            c-0.1-2.9,1.1-4.2,4.2-3.9C505.4,246.3,507.7,246,510,246z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#403E3F",
                  d:
                    "M567,242c0-2-0.1-4-0.1-6c0.1-1,0.2-2,0.3-3c0.3,0,0.7,0,1,0c0.4-0.4,0.6-0.4,0.8,0.2\n                            c0.1,5.2,0.1,10.4,0.2,15.6c-0.3,1.4,0.4,3-1,4.2c-0.1-0.6-0.2-1.3-0.3-1.9c-0.9-3,0.3-6.1-0.7-9.1L567,242z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807D7E",
                  d:
                    "M567.1,241.9c1.4,3,0.8,6.1,0.7,9.1c-1.5-2.2-0.5-4.7-1.1-7C566.9,243.3,567,242.6,567.1,241.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A5A5A7",
                  d:
                    "M578.8,244.2c0.1-1.4,0.2-2.7,0.3-4.1c1.1-0.8,2.1-1.5,3.6-1.3c10.4,1.7,20.9,1.5,31.4,0.9\n                            c0.9-0.1,1.5,0.7,2.1,1.2c4.3,2.9,9.4,1.6,13.9,1.5c6.3-0.2,12.7-0.4,19-0.2c2.5,0.1,3.3,1.8,4.2,3.5c0.4,0.2,0.7,0.1,1-0.1\n                            c1.8-1.7,4.1-4.2,6.1-1.2c1.5,2.2,1.2,5.4-1.6,7.5c-1.9,1.4-3.9,2.5-6.1,3.5c1.5,0.9,3.8,0,4.4,2.3c-0.2,0.5-0.6,0.8-1.2,0.7\n                            c-4,0.3-8-0.6-12,0.5c-0.7,0-1.3,0-2,0c-1.1-0.9-3.7-0.7-3.4-2.4c0.7-4.5-2.5-4.5-5.3-5.4c-2.8-1-4.9-3.4-8.6-2.8\n                            c-4.5,0.7-9.4-0.8-13.8-0.6c-10.7,0.5-21.1-2.5-31.8-1.9C579,245.4,578.9,244.8,578.8,244.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A9A9AC",
                  d:
                    "M579,246c5.4-3,10.9-0.3,16.4-0.5c2.4-0.1,4.9,2.3,7-0.7c0.1-0.2,0.6-0.3,0.9-0.2\n                            c9.4,2.9,12,3.1,24.6,1.7c0.5-0.1,1.3,0,1.4,0.2c2.6,4.8,7.6,4.2,12.7,5.3c-4.9,3.1-2.6,5.2,0.1,7.3c-8.7,0.7-17.3,1.4-26,2.1\n                            c-2.3,0.9-4.7,0.2-7,0.4c-2.2-0.8-1-1.6,0.1-2.1c1.4-0.7,3-0.9,4.2-2.3c1.8-2.1,1.8-4.2-0.8-4.6c-6.4-1.2-12.7-3.7-19.4-0.7\n                            c-3.7,1.7-8-2.1-12.2,0.9c-0.2,1.9,1.4,4.8-1.2,7C578.7,255.2,579.1,250.6,579,246z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#AFAFB2",
                  d:
                    "M579.7,259.7c0.1-3.1,0.3-6.3,0.4-9.5c0.5-0.3,0.7,0.1,0.9,0.5c4.5-3.1,9.3,2.3,14.2-1\n                            c4-2.7,8.9,0.2,13.4,0.5c0.9,0.1,1.9,0.6,2.8,0.8c1.8,0.2,4.6-0.4,4.4,2.3c-0.2,2.6-0.3,6.1-4.2,6.7c-1.3,0.2-2.7-0.3-3.8,0.9\n                            c-1.5,1.3-3.4,0.3-5,0.6c-3.2-1.6-7.4-1.3-9.6-5c-0.4-0.7-1.3-0.6-1.7-0.1c-2.1,2.6-5.7,3.2-7.8,5.8c-0.4,0.3-0.8,0.5-1.2,0.7\n                            c-1.1,0-2.2,0-3.4,0C579.5,261.8,579.6,260.7,579.7,259.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#767273",
                  d:
                    "M568.9,233.1c-0.3-0.1-0.5-0.2-0.8-0.2c0-3.6,0-7.3,0-10.9C570,225.6,568.6,229.4,568.9,233.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#635A58",
                  d:
                    "M1953,408c1.9-1.1,4,0.6,5.9-0.2C1957,409.8,1955,409.4,1953,408z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#776A6A",
                  d:
                    "M1910,377c-1.9,0-3.9-0.1-5.8-0.1c1.7-1.7,3.9-0.5,5.8-0.9C1910,376.3,1910,376.7,1910,377z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B6B2B1",
                  d:
                    "M1931,397.1c-2.4-0.5-4.6,1-7,1c0-0.3,0-0.7,0-1c0.9-0.9,2.2-1.1,3.1-2c1.1-0.8,0.9-2,1-3\n                            c1.8-1.4,2.6,0.5,3.9,1C1931.7,394.4,1927.5,394.8,1931,397.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#EBE8E4",
                  d:
                    "M1935,390c-0.4,1.5,1.2,5.2-3,2.9c-0.5-1.7-0.9-3.5,1.3-4.4C1934.7,387.9,1934.8,389.1,1935,390z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5859",
                  d:
                    "M1168,233c-0.8-0.4-1-1.2-1-2c4.4-3.9,7.6-1.7,10.3,2.5c-1.6,0.6-3.7,1.1-5.3,2.5\n                            C1172.8,232.1,1170.3,232.7,1168,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#615D5C",
                  d:
                    "M1162,241c1.3-0.7,2.7-1.3,4-2c0.8,0.4,1,1.1,1,2C1165.3,241,1163.7,241,1162,241z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#797575",
                  d:
                    "M1017,193c1.8,0,3.6,0,5.5,0c0.7-1.4-2.8-1-1.5-2c1.6-1.2,3.5-3.2,6.1-2v0c1.5,2.5,4.2,3.1,6.7,3.9\n                            c1.1,0.3,2,0.5,2.8-1.1c3.9-7.8,12.1-8.9,18.5-2.8c5.9-2,11.7,0.5,17.5,0.5c3.1,0,6.1,0.3,8.8-1.3c0.8-0.5,1.8-1,2,0\n                            c0.8,3.5,4.2,2.7,6.2,4.1c2.5,1.7,4.8,2.2,6.8-0.8c1.2-1.8,3.5-2.2,4.7-0.5c2.8,4.3,4.1,2.7,5.1-1.6c0.5,5.1,3.1,6.2,7.4,6.9\n                            c5.3,0.9,11.7-2.4,16,3.2c0.2,0.2,0.7,0.4,0.9,0.3c5.6-2.3,9.7,2.3,14.6,3.2c2.8,0.5,4.5,3.5,8,3c1.1-0.2,3.2,2.1,2.7,4.2\n                            c-0.6,2.5-0.9,5.9-3.6,6.5c-2.2,0.5-3.2,2.3-5,2.7c-1.1,0.3-0.9-2.3-3.8-1.8c-3.4,0.6-6.6-0.8-10.3,2c-2.7,2.1-7.1,1.9-10.8,2.6\n                            c-1.6,0.3-3.3,0.5-4.5,1.7c-2.6,2.2-6.4,2.8-9.1,2.6c-6.2-0.3-11.9,1.9-18.1,1.8c-5.6,0-11.6-0.8-16.7,2.7\n                            c-5.7-1.4-11.7,0.8-16.9,0c-6.9-1.1-13,2.6-19.6,1c-2-0.5-3.4,1-5.2,1.3c-7.2,1.2-14.4,1.8-21.7,1.2c-1-0.1-1.8,0.8-2.8,0.8\n                            c-0.5,0-1-0.1-1.5-0.4c-0.9-0.7-1.3-1.6-1.4-2.7c0.1-0.8,0.3-1.6,1.1-2c1.4-0.7,2.9-0.8,4.3-0.7c8.4,0.9,16.5-1.7,24.8-2.3\n                            c7.2-1.3,14.5-1.5,21.8-1.9c2-0.1,3.9-0.2,5.9-0.5c9.4,0.4,18.6-3.4,28.1-1.8c0.6,0.1,1.3,0,2-0.2c5.8-1.8,11.6-3.3,17.6-3.8\n                            c4,0.6,7.2-0.4,10.2-3.5c3.5-3.6,8.8-2.6,12.7-4.3c-6.8-0.9-13-4.8-19.7-7.6c-6.4-2.7-13.9-3.4-21-2.8c-4.7,0.4-8.6-0.5-12-3.8\n                            c-0.4-0.4-0.6,0.8-1,1.3c-0.6,1.4-1.5,2.4-3,2c-7.4-1.9-15.6,1.3-22.5-3.3c-0.8-0.5-1.2-0.1-1.6,0.3c-2,1.9-3.9,0.9-5.9-0.1\n                            c-2.8-1.5-5.7-2.6-6.8,2.1c-0.3,1.2-1.3,1.9-2.7,1.3c-2.9-1.3-6.2-1-9-2.6c-2-1.1-4.1-2-6.2,0.4c-2.1,2.4-3-2-5-1.1\n                            C1014.1,196.2,1015.7,194.6,1017,193z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747273",
                  d:
                    "M1055,189c-0.6-0.2-1.5-0.2-1.9-0.6c-4.7-4.8-9.2-0.3-13.8,0.4c-0.7,0.1-2,1.6-1.8,2.1\n                            c2,7.3-3.1,3.1-5,2.9c-2.6-0.3-5.1-1.6-5.6-4.8c3.8,0.9,6.5-0.2,8-4c5.4-2.6,11.1-3.2,17-3c1.7,2.2,3.3-0.2,5,0\n                            c1.1,0.1,2.5-0.3,2.7,1.3c0.2,1.3-0.9,1.6-1.9,1.6C1054.7,184.9,1055,187,1055,189z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726F6F",
                  d:
                    "M1074,231c0.7-2.4,2.3-2.9,4.7-3.3c7.2-1.2,14.7,1.3,21.7-2.4c0.9-0.5,2.6,0.3,3.9,0.4\n                            c1.6,0.1,3.7,0.8,4.8,0.1c2.9-1.7,5.8-2.1,8.9-1.7c1,0.7,2,1.3,3,2c-1.8,0.4-3.6,0.6-5,2c-1.2,1.3-2.9,1.3-4.5,1.3\n                            c-7.5-1.1-14.9,0.8-22.2,1.9c-5,0.7-9.8,0.4-14.7,0.3C1074.4,231.3,1074.2,231.1,1074,231z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726F6F",
                  d:
                    "M1147,221c-3.5,3.5-8,1.4-12,2C1139,222.1,1142.8,220.5,1147,221z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726F6F",
                  d:
                    "M1132,224c-3.1,2.9-4.3,2.9-5,0C1128.7,224,1130.3,224,1132,224z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5859",
                  d:
                    "M1071,237c5.8,0,11.4-0.6,17-2c2.2-1.9,4.6-2.4,7.6-2.6c6.8-0.3,13.7-0.9,20.5-1.6\n                            c3.4-0.3,6.7,0.4,9.9,1.2c0.7,1.3,1.5,2.3,3.1,1.4c3.3-1.7,6.9,1.2,10.3-1.2c1.7-1.2,2.7,0.8,2.6,2.7c-3.8,0.6-7.3,1-11.3,0.5\n                            c-6.4-0.7-13.1,0.4-19.8,0.5c-2.8,0-6.2,0.1-9.3,0.9c-8.9,2.3-18.2,1.2-27.3,2.9C1071.9,240.3,1070.8,239.4,1071,237z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#666262",
                  d:
                    "M1126,232c-5.7,0.1-11.5,0.2-17.2,0.4c-5.6,0.2-11,2.1-16.7,1.1c-1.1-0.2-1.7,3.5-4.1,1.5\n                            c0-0.3,0-0.7,0-1c0.7-1-1.1-1.5-0.4-2.5c5.4-2.2,11.2-1.2,16.8-2c1.8-0.3,3.6-0.1,5.5-0.3c5.8,0,11.7,0.2,17.5,0.4\n                            c0.2,0.1,0.4,0.3,0.6,0.4C1127.6,231,1127,231.6,1126,232z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5859",
                  d:
                    "M1167,231c-2.9,2.6-6.7,2.3-10.2,3c-3.2,0.6-6.6,0.4-9.3,2.9c-2.9,2.8-3.3-0.7-4.6-1.9\n                            c3.8-5.1,9.7-2.7,14.6-3.9C1160.6,230.5,1163.9,231,1167,231z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#666262",
                  d:
                    "M1134,228c-1,3.5-3.7,2.1-6,2l0,0c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3v0\n                            C1129.9,228.3,1132,228.3,1134,228L1134,228z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#646264",
                  d:
                    "M1128,229c0,0.3,0,0.7,0,1c-4.8,0.5-9.6-1-14.3,0.9c-1,0.4-2.4-0.6-3.7-0.9c-0.6-1.1,0.5-1.4,1-2\n                            c1.7,0,3.3,0,5,0C1119.9,228.9,1124,229.2,1128,229z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#646264",
                  d:
                    "M1134,228c-1.9,1.2-3.9,1-6,1C1129.9,227.9,1131.8,226.9,1134,228z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#868688",
                  d:
                    "M616,223c-0.2-2.2,2.3-1.7,3-3c0-0.3,0-0.7,0-1c2.4-1.4,4.6,1.8,7,0.1c1.6-0.6,3.2-0.7,4.8-0.6\n                            c4.8,0.6,9.7,0.9,14.5,0c2-1.7,4.1-2.9,6.8-1.9c0.6,0.2,1.4,0.2,2,0c7.4-3.1,15-0.4,22.5-0.5c4.5-0.1,8.2-2.5,12.3-3.4\n                            c0.8-0.2,1.5-1.2,2.2-1.1c9.1,1.6,16.7-5.8,25.8-4.4c6.5,1,11.7-2.1,16.9-5.3c4.9,4.7,10.1,0.1,15.1,0.3c3.3,0.1,6.9-0.3,9.1-3\n                            c3.2-4,7-3.2,11-2.1c4.1,1.2,8-0.2,12-0.6c6.1-0.7,11.5-3.9,17.7-3.5c1,0.1,0.1-3.5,2.2-1.7c2.4,2.1,7,0.6,8,4.8\n                            c0.1,0.3,0,0.7,0,1c-0.3-0.2-0.5-0.4-0.8-0.6c-3.3,4.2-9.4-2-12.3,3.4c-0.6,1.1-1.6,1.5-2.4,0.8c-2.2-1.9-2.9-0.4-4.6,1\n                            c-1.5,1.2-4.9,1.6-6.6,0.7c-5.1-2.7-4.5,1.6-5.8,4c-2.9-0.9-0.4-3.1-1.3-5.1c-1.7,3.9-6.4,2.1-8.4,5.2c-0.1,0.2-1,0.2-1.3,0\n                            c-3.3-2.2-4.2-1.9-2.1,1.9c0.4,0.8-0.6,1.4-1.4,1.8c-1.1,0.8-2.5,0.4-3.7,0.9c-3.2,1.4-6.4-0.4-9.6-0.4c-4.3,0.1-8,1.9-12.2,2\n                            c-11.1,0.2-21.8,3.2-32.6,5.2c-3.4,0.6-6.9,0.8-10.2,1.1c-5.4,0.4-9.5,3.6-14.3,5c-1.8,0.5-7.6,1.3-9.1,0.1\n                            c-1.4-1.1-2.4-0.7-3.6,0c-3.1,1.8-6.2,2-9.6,1c-2.7-0.8-5.6-0.3-8.4-0.1c-2.9,0.2-5.9,1.3-8.4-1.2c-0.2-0.2-0.7-0.3-0.9-0.2\n                            c-5.7,1.7-11.6,1.2-17.4,1.5C619.2,225.1,617.5,225,616,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7F82",
                  d:
                    "M769,197c-1.8,0.1-3.5,3.2-5.3-0.1c-0.6-1.1-1.4-0.2-1.8,0.5c-3.3,5.1-8.8,5.8-14.1,6.4\n                            c-2.3,0.3-4.3,0.2-6.6,1.6c-2.2,1.3-6.2,0.9-7.2-3.4c-2.4-2-0.7-3.2,1.1-3.9c2.3-0.9,4.6-1.9,7-2.5c1.5-0.4,3.4-2.1,4.6-0.8\n                            c2.6,2.8,4.3,0.7,5.9-0.7c4.2-3.7,9.9-3.5,14.4-6.1c1.2-0.2,0.2,4,3.2,1.2c2.9-2.6,14.7-0.8,17.8,1.8c-2.9,1.5-6.4,1.1-9.3,3.3\n                            c-1.7,1.3-2.5-2-4.7-2.5C774.3,195.3,770.2,194.6,769,197z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#909092",
                  d:
                    "M759,210c1-1.6,2-0.3,3,0c7,0.3,13.7-1.4,21.1-2.8c0.5,0.3-0.5,2.2,0.9,2.8c-0.3,0.4-0.6,1.2-0.8,1.1\n                            c-5.1-0.6-7.3,4.3-11.2,5.9c-2.4,0.2-5.8-2-6.1,3.3c-0.1,1.7-2.9,3.4-4.7,4.8c-2.1,1.6-2.4-0.9-3.2-1.8\n                            c-1.5-1.6-1.6-2.8-4.7-0.8c-3,1.9-7.4,5.2-12.2,2.6c-2.6-1.3-5.5,0.9-5.4,3.9c-3.6-1.1-6.3-2.2-10.8-0.1\n                            c-4.3,2-10.3,3.4-16.2,1.7c-4.1-1.2-9.1-1.8-12.6,2.4l0,0c-4.3-2.2-8.7-1-12.9,0.3c-6,1.8-11.9,1.4-17.7-0.7\n                            c-1.2-0.4-2.2-0.7-3.3,0c-3.7,2.4-7.4,1.1-10.9-0.1c-1.9-0.6-1.4-0.4-1.4,1.3c-0.1,1.5-2.5,1.8-3.8,1.3c-6.4-2.4-13,0-19.4-0.9\n                            c-8-1.1-16.1,0.1-24.1-0.5c-3.6-0.3-7.4-0.7-11,0.9c-2.8,0.9-5.8,0.1-8.6,1.1c-2.1,0.7-3.3-0.7-3.9-2.6c0-1.3,0-2.7,0-4\n                            c2.6-2.5,5.4-3.1,9.1-2.5c6,1,12.2,1.6,18.3,0c1.3-0.3,2.7-0.1,3.9,0.3c8.2,2.8,16.7-0.6,25.1,1.1c2.1,0.4,3.6-2.1,6.4-2\n                            c4,0.1,8-1.4,11.2,2.1c0.2,0.2,1,0,1.5-0.1c9.2-2.4,18.7-1.4,28-2.2c1-0.1,2-0.2,2.7-1c0.8-0.9,1.8-1.7,3-1.5\n                            c6.7,0.9,13.2-2.3,20-1.2c4.1,0.7,8.1-0.1,12-2.2c4.1-2.2,9.2-1.9,13.5-4c0.6-0.3,2.9,1.1,4.8,0.5c3.4-1.1,7-1.1,10.4-2.5\n                            c1.7-0.7,3.5-0.6,4.8,0.3c2,1.4,3.5-0.1,5-0.6C760.9,212.9,757.6,211.1,759,210z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9A9A9F",
                  d:
                    "M731,246c-0.3,0.3-0.7,0.7-1,1c-3-1.6-6.7-1.6-9-4.6c-0.6-0.8-1.2-1.8-0.5-2.7c0.8-1,1.6-0.3,2.5,0.2\n                            c2.9,1.4,10.6-1.8,12-4.8c0.3-0.8,0.5-2,1.3-1.8c4.8,1,9.3-2.2,14.5-0.2c3,1.1,6.2,0.9,7.4,4.5c0.5,1.3,0.2,3-1.1,2.2\n                            c-6.2-4.1-11.6,0.3-17.1,1.5c-3.1,0.7-5.7,1.7-8.2-1.3C730.9,242.2,730.1,244,731,246z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9C9BA0",
                  d:
                    "M769.7,224.1c0.4-0.2,0.8-0.6,1.2-0.6c0.9,0,1,0.7,0.8,1.3c-0.1,0.3-0.6,0.5-0.9,0.8\n                            C770.6,225.2,770.3,224.9,769.7,224.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#909092",
                  d:
                    "M779,217c-0.8-0.5-1.1-1.2-0.7-2.1c0.1-0.2,0.6-0.5,0.8-0.4c1.3,0.4,0.8,1.6,0.9,2.5\n                            C779.7,217,779.3,217,779,217z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#909092",
                  d:
                    "M803,205c-1.3,2.7-4.4,1.3-6.5,2.7c-2.2,1.5-5.8,0.6-8.2,3c-1.3,1.3-2.5-2.1-4.3-0.7\n                            c0.9-5.2,5.5-3.1,8.4-4.1c1.6-0.5,3.3-0.1,4.6-1.7C799.4,201.2,800.9,205.5,803,205z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7A7779",
                  d:
                    "M1017,193c0.5,1.3-2.5,3.5,1,4c0.3,1.4-0.8,1.6-1.7,1.9c-6.9,0-13.8,0.1-20.7-0.9\n                            c-1.9-0.3-4.4-1-6.4,0.5c-0.6,0.5-1.7,0.4-2.4-0.1c-3.9-3-8.6-1.3-12.9-2.4c-2.6-0.7-4.3,2.3-6.9,2c-0.1-2.9-0.7-4.6-4.4-4.3\n                            c-1.9,0.2-5.7,0.9-5-3.9c0.3-1.9-2.1-1.5-3.5-1.4c-6.5,0.5-13.1,2.4-19.3-1.2c-3,3.5-5.7-2.5-8.8-0.3c-0.1,0.1-1.3-1.2-2-1.9v0\n                            c-0.1-2.1-1.5-1.2-2.5-1c-2.2,0.6-8.3,0.6-10.9-0.1c-0.8-0.3-1.1,0.3-1.5,0.8c-0.4,0.5-1,0.8-1.5,1.2c-3.1-4.9-9.1-0.3-12.7-3.9\n                            c0.5-4.8,4.3-5.9,7.9-6.1c2.2-0.2,1.6,3.2,3.4,5.1c0.7-4.9,1.5-4.8,5.7-2.3c4.6,2.7,11.1,2.6,16.9,2.1c1.3-0.1,2.6-1.1,3.2,0.9\n                            c0.1,0.3,0.7,0.5,1.1,0.8c2.4-5.2,3.8-0.1,5.4,0.6c1.3,0.6,2.1,0.4,3.2-0.1c4.2-1.6,7.8-1.3,12.1,1.1c2.4,1.3,5.2,5.1,9.2,2.9\n                            c1-0.5,2.1,0.8,3,1.4c1.9,1.2,3.8,1.3,6.1,1c3.8-0.4,7.7-2.2,11.4,2c1.6,1.8,5.7,0.2,6.8-4.4c0.9,6.5,5.3,4.8,8.6,4.6\n                            c2.9-0.2,6-2.4,8.1,1.5c0.1,0.1,0.3,0.2,0.4,0.3C1010.5,188,1013.9,192.8,1017,193z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828081",
                  d:
                    "M967,198c2.6-2.3,5.1-2.7,8.9-2.8c4.6-0.1,8.2,0.9,12.2,2.4c2.6,1,0.7-2.1,1.7-3.4\n                            c1.2,1.5,2.2,4.8,4.5,1.4c3.8,3.3,8.4,0.8,12.4,1.7c3.2,0.7,6.2-0.1,9.2,0.7c3.7,1.6,7.3,3.7,11.6,1c1.9-1.2,3.8,0.6,5.5,1.5\n                            c3.1,1.6,5.7,2.4,9.1,0c4.2-2.9,19.4,1.4,21.7,5.5c0,0.7-0.1,1.4-0.4,2.1c-3.1,2.8-6.5,3.3-9.5,0.3c-1.2-1.3-2-0.6-3-0.4\n                            c-2,0.3-3.9,2.4-5.9,0.1c-0.2-0.3-0.7-0.3-0.9,0c-3.2,5.2-6.8,1.6-9.7,0c-3.8-2.2-6.5,0.9-9.4,1.6c-3.2,0.8-5,0.4-6.8-1.9\n                            c-3-2.6-6.3,0.8-9.5-0.7c-10.4-4.7-21.7,0.4-32.3-2.6c-6.5-1.9-13.7,1.5-19.8-2.7c-1.3-1-3-1.7-2.7-3.9\n                            C958.3,198.6,962.7,196.9,967,198z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#848182",
                  d:
                    "M954,198c1,1,2,2,3,3c-1.6,3.2-3.7,4.1-6.2,1.9c-2.8-2.4-5.4-4.4-8.9-1.3c-0.3,0.3-1.2,0.4-1.4,0.1\n                            c-5-6-12.6-2.2-18.5-5.2c-1.6-0.8-3.1-1.3-2-3.6l0,0c1.8,0.2,3-4.8,5.4-0.6c0.3,0.5,2,0,3.1-0.7c1.7-1.1,4-1.6,5.2,0.5\n                            c1.5,2.5,2.7,1.9,4.1,0.2c0.5-0.6,1.4-1.6,1.7-0.3c0.8,4.3,3.1-0.1,4.5,0.9c0.5,1.8,1.5,2.3,3,1\n                            C952.5,192.3,953.3,192.8,954,198z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828081",
                  d:
                    "M947,194c-0.6,1.2-1.5,2.3-2.9,1.8c-1.7-0.7-0.3-1.8-0.1-2.8C945,193.3,946,193.7,947,194z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7A7779",
                  d:
                    "M924,185c-0.1,0.9-0.1,2-1.3,2.2c-0.1,0-0.5-0.4-0.5-0.6C922.1,185.3,923,185.1,924,185L924,185z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#848182",
                  d:
                    "M900,191c-0.8-0.5-2.1-1.1-1.5-2.1c0.6-1.1,1.2-0.2,1.4,0.6C900,190,900,190.5,900,191z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#717173",
                  d:
                    "M613,205c-3.7,0.9-6.8-0.4-10-2c3.6-1.6,8-1.8,11.4-1.9c5.7-0.1,11.5-0.2,17.3-0.2\n                            c3.7,0,7.3-2.2,11.2-0.4c0.8,0.4,2.5-1.3,3.7-2.1c4.6-2.8,7.8-2.1,9.4,2.4c3.4-4.4,7.5-6.4,12.8-4c3,1.4,4.2-2.7,7.4-2.6\n                            c2.2,0,6.9,1.6,7.7-3.4c0-0.1,1.4-0.2,1.7,0.1c2,2.1,3.7,0.4,4.9-0.7c2.6-2.5,5.1-3,9-3c4.4,0,10.3,3.1,13.9-2.6\n                            c4.8,1.3,10.2-1.3,14.6,2.3c-1.4,3.8-6.2,3.6-8,7.1c-0.4,0.8-1.4-0.5-1.9-1c-4.1-3.8-8.5-1.1-12.6-0.4c-1.7,0.3-1.2,2.8-0.8,5.4\n                            c-3.2-3.5-7.3-0.9-10.6-3.4c-0.1,1.6-0.3,3.1-0.4,4.5c-1.3-2.7-6.4,2.1-6-3.5c-1.7,6.5-7.1,3.7-10.6,4.3\n                            c-2.5,0.5-5.3,2.8-8.3,0.5c-0.6-0.5-0.6,2.2-1.4,3.3c-1.5,2.2-2.8,2.4-3.8,0c-0.5-1.1-0.6-1.2-1.6-0.9\n                            c-10.6,3.4-21.6,3.2-32.5,3.1c-3.1,0-5.7,1.8-9,1.8C617.4,207.8,615.1,207.2,613,205z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#717072",
                  d:
                    "M782,174c-3.2,2.7-7,4.1-11,4.9c-1,0.2-2.2,0.2-2.8,0.8c-5.3,5.7-12.6,4.5-19.2,5.4\n                            c-1.3,0.2-2.5,0.3-3.7,1.1c-1.4,1-2.1,0.8-1.4-1.2c0.4-1.2-0.7-0.8-1.1-0.6c-4.6,2.7-9.8,2.2-14.8,2.6c2.2-6.5,3.5-7.4,9.5-5.9\n                            c4.9,1.2,4.9,1.2,8.3-3.4c0.2-0.2,0.6-0.6,0.7-0.5c3,1.3,6.1,2.4,9.5,1.2c0.4,1.3,1.6,1.1,1.5,0.3c-0.3-4.8,3-2.6,4.9-2.6\n                            c4.2,0,6.9-4.1,11-3.8C776.2,172.4,779.5,171.7,782,174z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6C6E",
                  d:
                    "M591,202c-0.3,0.8-0.8,1.6-1.7,1.4c-1.1-0.3-1.2-1.4-1.3-2.4C589,201.3,590,201.7,591,202z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#888687",
                  d:
                    "M1019,207c1.8,1.7,3.4,3.4,5.9,0.7c1.1-1.2,5.1,2.7,4.5-2.4c-0.1-1.3,1.1-1.3,1.6-0.7c1.5,2,4,2.2,6,3.2\n                            c2,1,4.5,3.8,5.9-1c0.5-1.6,1.9-1.2,3.4,0.5c1.6,1.8,2.7-0.9,4.4-0.7c1.4,0.2,3,1,4.3,1.6c2.5,1.3,5.3,0.9,7.9-0.4\n                            c1.6,0.9,3.2,1.7,5.1,1.8c2,0.1,3.5,0.9,4,3c0.4,1.9,1.7,2.7,3.4,3.2c1,0.3,1.9,0.8,1.9,2c-0.1,1.5-1.4,1.7-2.5,1.9\n                            c-4.6,0.8-9.3,0.2-13.7,1.8c-1,0.3-1.8,0.7-2.5,1.4c-3.3,1.2-6.6,2.1-9.6-0.8c-1.1-1.1-2.2-0.9-3.5,0c-3.8,2.5-8.1,4.2-12.7,4.8\n                            c-0.9,0.2-1.8,0.4-2.8,0.3c-2.8-1.7-5.1-0.6-7.4,1.1c-5.4,1.9-11.2-0.1-16.5,2c-11.8,1.5-23.6,0.8-35.4,1.7\n                            c-0.8,0-1.5-0.2-2.2-0.6c-0.3-3.9,1.2-5.1,5.7-5.4c2.6-0.1,5.6,1.6,7.9-1.2c0.3,0,0.7,0,1,0c2.8-0.3,5.5-0.5,8.3,0\n                            c4.5,0.8,8.8-0.7,13-2c5.6-1.8,11.6-1.9,17.7-4.5c-4.5-2.5-10.2-2.8-13.3-7.2c0.5-2.4,1.2-4.4,4.4-3.5\n                            C1015.1,208.3,1016.8,205.7,1019,207z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C8B8C",
                  d:
                    "M1009,211c4,1.3,6.7,5.1,11.8,4.6c2.6-0.3,2.2,4.1,1.9,7.6c-1.9-2.3-3.7-5.1-5.7-0.9\n                            c-0.6,1.3-2.2-0.3-3.2,0c-3.4,0.9-7.4,0.1-10,3.3c-0.2,0.2-0.3,0.5-0.4,0.8c-4.9-3-10.2,3.2-15.3-0.8c-0.7-0.5-3.4,1.3-5.1-0.5\n                            c0.7-2.7-1.5-5.9,1.7-8.2c1-0.7-0.5-0.8-0.9-0.9c-1.5-0.8-3.3-1.4-4.8-0.6c-3,1.7-5.7,1.7-8.7-0.1c-2-1.2-3.6-0.3-3.8,2.4\n                            c-2.4-2.1-4.3-4.5-6.7-5.6c-2.5-1.2-2.7-0.6-2.9-2.9c0.7,0.1,1.3,1.1,2,0c6.6-4.3,13.7-2.6,20.4-0.7c6.6,1.8,12.9,0.5,19.4,0\n                            c2.5,0,4.8,1.1,7.3,1.5c0.7,1.3,0.2,3.1,1.8,3.7c0.5,0.7,0.9-0.2,0.4,0.3c-0.1,0.1-0.2-0.1-0.4-0.3c-0.9-1-2.1-2-0.8-3.3\n                            C1007.8,209.4,1008.6,210.2,1009,211z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C8B8C",
                  d:
                    "M982,225c1.9,4.9-2.1,3-3.6,2.8c-4-0.4-8-1.5-10.4,3.2c-0.9,0.8-1-1.6-2.9-0.2\n                            c-3.9,2.8-9.2,1.5-13.9,2.3c-1.6,0.3-3.3-0.4-4.7,0.9c-0.4,0.3-0.9,0.4-1.4,0.5c-5-1.4-9.8,1.6-14.8,0.9\n                            c-1.8-0.2-3.6,0.5-5.3-0.5c0.7-1.2,0.3-4,2.8-2.9c5.9,2.4,11-1.5,16.6-1.6c5.5-0.2,11-2.3,16.5-3.4c1.8-0.3,3.5-0.2,4.7-2\n                            c0.8-1.2,2.9-1.7,3.4-0.7c1.3,2.5,2.5,0.8,3.5,0.2c1.5-0.9,2.7-2,4.3-0.4c0.7,0.7,1.5,0.5,2-0.4c0.6-1.1-0.7-3.7,1.7-3.1\n                            C982.6,221.1,981.9,223.4,982,225z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#848386",
                  d:
                    "M925,235c4.6-0.2,9.1,0.6,13.6-1.8c2.1-1.1,5.1-0.7,7.4,0.8c0.8,2.1,0.2,2.8-2,2c-3,0-6,0-9,0\n                            c-3.6-0.5-7.5,1.1-11-1C924.3,235,924.7,235,925,235z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9A989A",
                  d:
                    "M947,223c0.7-1.7-2.9-5.5,2.3-4.9c1.9,0.2,2.3,1,0.9,2.4c-1.6,1.7,1.6,2,0.2,3.7\n                            C949.3,224.8,948.4,222.5,947,223L947,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8C8B8C",
                  d:
                    "M921,235c-1.6,3-4.1,0.2-6,1C916.8,234.2,919,235.3,921,235z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9A989A",
                  d:
                    "M947,223c0,1.4-0.9,2.5-2,2.2c-1.6-0.4,0-1.5,0-2.2l0,0C945.7,223,946.3,223,947,223L947,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#888687",
                  d:
                    "M999,209c-1.2,0.8-2,3.2-4,1.1c-2.3-2.6-4.1,4.5-6.5,0.3c-4.4,2.6-8.5-3-12.9-0.5\n                            c-0.6,0.3-0.8,0.5-1.4-0.3c-1.9-2.6-4.6-2.9-7.5-1.9c-2.5,0.9-5,1.7-7.7,1.4c0.5-0.6,1.5-1.3,1.5-1.9c-0.1-1.2-1.2-0.5-1.9-0.5\n                            c-6.8-0.3-13.8,0.9-19.8-4c-1.9-1.5-5.2-1.4-7.2-0.2c-4,2.6-4.3-0.1-5.2-3.5c-2.3,3.5-4,7.1-8,1.8c-1.7-2.2-6.6-0.3-9.5-2.7\n                            c-0.4-0.3-1.2,0.1-1.5,0.9c-1.5,3.5-4.2,2.4-6.6,1.4c-0.9-0.4-1.7-1.6-2.5-0.5c-2.2,3.1-2.8-0.8-4.3-0.8c2.6-2,7.9,0.4,8.3-5.1\n                            c3.7,1.3,7.3-0.7,11-0.2c2.1,0.3,4.7,1.7,6.7-0.7c-0.2,3.4,2.7,2.3,4.3,2.6c3.5,0.6,6.8,3.3,10.7,0.4c1.1-0.8,3.8,1.7,4.6,3.7\n                            c0.7,1.9,1.8,1.4,2.6,0.8c3.8-2.5,5.7-2.4,8.8,1c2.3,2.5,4.2,2,6-0.5c4.7,1.5,9.3,3,14.4,0.6c1.5-0.7,3.9,1.7,6.3,2\n                            c5.4,0.8,10.6,1,16-0.2c2.6-0.6,5.5,0.1,8.2,0.7c4.8,1,9.5,3,14.5,1.3c1.4-0.5,2.1,0.6,2.7,1.7c-2.3,0.9-4.2,3-7.1,1.5\n                            c-2.4-1.2-0.6,3.1-2.9,2.5c-0.7-0.1-2.2-1.2-1.5,0.9c0.6,1.8,2.9,1.8,4.2,3.1c-4.1,0.6-5.3-0.6-5.8-5\n                            C1003.6,210.1,1001.8,206.2,999,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#636367",
                  d:
                    "M1020,238c-4,0.2-8.2,4.1-12-0.4c-2.1,2.6-4.9,0.5-7.5,1.3c-4.7,1.5-9.5,2.3-14.4,3.1\n                            c-11.5,2-23.1,0.6-34.7,1c-2.8,0.1-5.6,0-8.5,0c5.6-2.3,11.6-2.6,17.6-3.2c7.5-0.7,15.1,0.1,22.4-1.8c0.3-0.4,0.7-0.8,1.1-1.1\n                            c5.9-1.4,11.9-0.6,17.8-1.8c0.5,0,0.9,0,1.4,0.2c1.4,1.7,2.4-1.4,3.7-0.3l0,0c3.6-0.3,7.3,1,10.9-0.6c1.2-0.5,2.6,0.3,3.7,1\n                            C1023.3,237.6,1020.5,237.1,1020,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747376",
                  d:
                    "M984,238c-0.3,0-0.7,0-1,0c-3.4-2.1-7.5-0.2-11-2c0-0.3,0-0.7,0-1c0.8-3,3.4-2,5.3-2.1\n                            c7.1-0.5,14.2-1,21.3-1.1c2.2,0,4.8-2.6,6.3,1.2c0.2,1.1,0.1,2.2-0.8,3.1c-0.3,0-0.7,0-1,0c-5.9-0.4-11.7,1-17.6,0.7\n                            C984.7,236.6,984.4,237.4,984,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7E80",
                  d:
                    "M1004,233c-0.3-0.4-0.7-1.2-0.8-1.1c-10.2,2.7-20.9,0.7-31.2,3.1c-5.6-0.4-11.1,1.6-16.8,1.3\n                            c-1.7-0.1-3.5,0-5.2-0.3c-0.1-0.2-0.1-0.5-0.2-0.7c0.5-1.6,1.8-1.8,3.2-1.8c5.8,0.3,11.3-1.5,17-2.5c12-0.9,24-1.3,36-1\n                            c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c0,0.7,0,1.3,0,2C1005.3,233.6,1004.7,233.6,1004,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7E80",
                  d:
                    "M944,236c1.3,0,2-0.7,2-2l0,0c3-2.7,3.1,0.5,4,2l0,0C948,236.8,946,237.6,944,236z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7F81",
                  d:
                    "M743,197c-3-0.2-5.3,2.1-8.3,2.3c-1.6,0.1-1.2,1.6-0.7,2.7c-0.2,0.8-0.3,2.2-0.5,2.3\n                            c-5.5,0.8-9.8,5.2-16.1,4.2c-4.6-0.7-10-1-13.9,3.4c-0.6,0.7-2.7,0.2-4.2,0.2c-6.4-0.1-11.9,3.1-17.9,4.6\n                            c-5.7,1.4-11.9,1-17.7-0.2c-2.1-0.4-4-0.8-5.4,0.5c-2,1.7-5.3,1.7-6.2,1.1c-3.3-2.1-4.5,0.2-6.1,2c-1.3-1-2.8-1.9-2-4\n                            c2-1.7,4-3.3,6-5c2.9-1.3,5.9-2,9-1c2.8,2.2,5.5,3,8.2-0.1c0.3-0.4,0.9-1,1.2-0.8c5.9,3.7,11.2-2.9,17.6-0.7\n                            c6.2,2.2,12.8-1.2,18.5-4.2c6-3.1,12.8-5,18.9-5c5.6,0.1,9.5-3.1,14.5-3.5C739.8,195.6,742,193.5,743,197z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#79797C",
                  d:
                    "M743,197c-5.2-1.3-9.6,1.1-13.9,3.5c-1.9,1.1-3.1,2.3-4.5-0.4c-0.2-0.3-0.8-0.8-1-0.7\n                            c-5.9,2.2-12.3,2.7-18.1,5.5c-7.3,3.4-14.6,7.1-23.1,4.3c-2.5-0.9-5.1,0.1-7.5,1.8c-2.1,1.5-4.8,2.7-6-1.5\n                            c-2.7,5.4-6.7,5.4-10,0.6c7.1,0.1,13.4-2.8,19.7-5.4c2.2-0.9,4.3-1.8,6.2,0.7c1.2,1.7,2,0.7,2.9-0.5c0.9-1.2,1.9-2.2,2.9-3.4\n                            c2.2,0.6,0.7,2.7,1.9,4c2.2-2.3,4.5-4.6,8.4-3.3c3,1,4-2.8,6.6-3.4c1-0.2,1.7-2.1,2.9-1.2c6.4,4.7,12.1-0.9,18.1-1.2\n                            c1.9-0.1,3.4-2.5,3.5-5c0-0.8,0.6-1.2,1.3-1.2c1.2,0,1.3,0.6,0.8,1.6c-0.9,1.8,0.8,1.1,1.1,0.9c2.2-1.5,5.4,0.3,7.5-2.9\n                            c1.1-1.6,4.9,0.4,7.8-0.2c5.5-1.2,11.2-1.8,16.5-3.9c0.5-0.2,1.3,0.2,1.9,0.3c-0.7,0.7-1.3,1.3-2,2c-3,1.9-5.2,5.5-9.6,4.1\n                            c-1.1-0.3-1.9,0.1-1.6,1.6c0.4,2.1-0.8,2.1-2.4,1.6c-0.7-0.3-1.6-0.4-1.9,0.8c-0.6,2.2-3,3-4,1.1\n                            C745.7,193.6,744.5,196.5,743,197z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7F81",
                  d:
                    "M631,219c-1.7,0.3-3.3,0.7-5,1c-2.1,0.1-3-1-3-3c1.2-1,2.9-3.2,4.1-1.5c3.2,4.3,6,0.9,8.7-0.1\n                            c2.5-0.9,4.7-1.9,7.2-0.4c-0.4,2.5-1.6,4-4.3,3.5C636,217.9,633.6,220,631,219z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828385",
                  d:
                    "M631,219c2.8-1,5.4-2.9,8.8-1.4c1.6,0.7,1.9-1.9,3.2-2.6c0.3,0.3,0.7,0.7,1,1c0.7,1.3,1.3,2.7,2,4\n                            C641,220,635.8,221.8,631,219z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7F81",
                  d:
                    "M617,220c-3-1.9-5.9-2.4-9.3-0.5c-2.3,1.3-5.3,2.1-7.7-0.5c0.2-0.3,0.3-0.7,0.5-0.8\n                            c4.5-2.3,9.4-1.5,14.2-1.6C616,216.6,617,218.3,617,220z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828385",
                  d:
                    "M623,217c1,1,2,2,3,3c-2.8,2.8-4.7-0.6-7-1C619.8,217.2,621.3,216.9,623,217z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#9B9B9D",
                  d:
                    "M579,233c1.3,1.5,2.5,2.1,4.7,1.3c2.2-0.9,4.8-1.7,7.3-0.3c10.3,0.4,20.6-0.3,30.9,0.7\n                            c5.9,0.6,11.8-0.2,17.8-0.3c11.5-0.2,23,0.5,34.5-0.3c4-0.3,7.8,1.4,11.7,2.1c0.8,0.2,1.5,0.8,1.2,1.8c0,2-0.2,4,0.1,5.9\n                            c0.5,3.4-0.8,5.3-4,6.1c-0.6-0.3-1.1-0.7-1.2-1.5c-0.7-4.8-4-7.5-8.6-6.5c-3.1,0.7-6,1.8-9-0.4c-0.9-0.7-2.3-0.1-3.4,0.1\n                            c-6.3,1.3-12.5-0.5-18.6-1.3c-6.6-0.9-12.8,1.4-19.2,1.3c-2.6-0.1-5.2,0.6-7.9,0.3c-2.5-2.8-5.3,0.2-8.2-0.4\n                            c-7.7-1.5-15.9,0.7-23.6-1.5c-1.6-0.4-2.7,1.1-4,0C579.1,237.8,579.1,235.4,579,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A09FA2",
                  d:
                    "M615,242c2.2-1.6,4.8-1.1,7.2-1.5c8.1-1.1,16.5-3,24.5-1.2c6,1.3,11.4,0.9,17.1,0.1\n                            c0.4-0.1,1.2,0.1,1.3,0.4c2,4.1,4.8,2,7.3,0.9c1.5-0.6,2.7-0.4,4.2,0c5.1,1.2,7.8,3.7,6.4,9.3c-3.5,2-7.3,0.4-11.1,1.2\n                            c1.2,1.5,3,0.1,4.3,1.2c-1.8,1.2-4.7,1.4-4.2,4.6c-0.6,0.8-1.5,0.5-2.2,0.9l-0.4-0.1l-0.4,0.2c-3.9,1.6-7.9,0.5-11.9,0.2\n                            c-2.1-2.4-5.2-0.2-7.8-1.9c2-2.7,5.6-2.3,7.7-4.4c1.1-1.1,5.3-1.5,1.5-4.5c-1.5-1.1,4.2-1.9,0.4-3.1c-2.3-0.7-3.4,1.5-4.1,3.4\n                            c-0.3,0.7-0.8,1.1-1.5,1.1c-1-0.1-1.4-0.9-1.4-1.8c0.1-3.7-1.7-3.5-4.8-3.2c-4,0.3-8-1.1-12.2-0.1c-4.4,1.1-9.2-0.6-13.6-0.1\n                            C618.7,243.9,617,243.3,615,242z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#969698",
                  d:
                    "M687,238c-7.1-1.6-13.9-4.5-21.5-2.2c-3.1,0.9-6.7,1.2-10.1,0.2c-6.5-1.9-13.1-0.9-19.7-0.3\n                            c-9.2,0.8-18.4,0.2-27.5-0.5c-2.9-0.2-6.2-0.3-8.7,0.3c-3.4,0.8-5.7-0.5-8.4-1.4c0.2-1.1-0.5-2.7,1.9-2.5\n                            c7.9,0.9,15.8,2.3,23.6,0c0.7-0.2,1.2,0.1,1.8,0.3c4.5,1.7,9.2,1.5,13.9,1c2.6-0.3,5.4-2.4,7.9,0.4c3.1-3.4,5.5,3.9,9-0.7\n                            c0-0.2-2.3,0-2.2-1.5c2.2,0.1,4.3,0.5,6.2,0.7c2.8,0.3,6.5,3.2,8.9-1.1c0.5-0.9,1.9-0.8,2.7-0.1c2.2,1.7,4.2,4.4,7.2,1.2\n                            c5.8,4.1,10.9-1,16.4-1.1c2.5,0,6-1.5,7.6,2.3C691.4,231.7,689.3,235,687,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151318",
                  d:
                    "M669.8,257.9c0.7-0.3,1.5-0.6,2.2-0.9c3.3,0,6.7-0.1,10-0.1C678,258.8,673.9,258.1,669.8,257.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#35363A",
                  d:
                    "M602,260.9c2,0,4-0.1,6-0.1c2.7,0.1,5.3,0.2,8,0.2c-1.5,1.5-3.5,1-5.2,0.9c-5.1-0.5-10.2,0.2-14.9,1.5\n                            c-2.1,0.6-3.1,3.6-4.5-0.4c0-0.1-0.4-0.1-0.5,0c-2.8,3.6-5.5-0.5-8.2-0.2c0.1-0.2,0.2-0.5,0.3-0.8\n                            C589.2,259.7,595.6,260,602,260.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#151318",
                  d:
                    "M657.1,258.1c4-0.1,7.9-0.1,11.9-0.2c-3.8,3.7-8.2,0.3-12.2,1C656.6,258.5,656.7,258.2,657.1,258.1\n                            L657.1,258.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#A09FA2",
                  d:
                    "M657.1,258.1c-0.1,0.3-0.2,0.5-0.4,0.8c-4.3,0-8.5,0.1-12.8,0.1C648.3,256.9,652.8,258.4,657.1,258.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0E",
                  d:
                    "M624.4,264.3c0.2,0.2,0.8,0.5,0.8,0.8c0.2,1-0.7,0.8-1.3,0.8c-0.3,0-1,0.6-0.9-0.4\n                            C623.2,264.9,623.4,264.3,624.4,264.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#100D0E",
                  d:
                    "M649.2,260c0.9,0.1,2.5,0.1,2.5,0.3c0.2,1.2-0.9,0.5-1.5,0.7c-0.4,0.1-0.9-0.2-1.3-0.3\n                            C649,260.5,649.1,260.3,649.2,260z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#8B8C8E",
                  d:
                    "M759,210c1,2,3.2,3.5,2.7,6.2c-1.5,1.2-3.8-5-4.8,0.5c-0.1,0.5-1.3-0.5-2-0.8c-2.3-1.2-4.1-2.1-7,0.1\n                            c-1.8,1.4-5.5,0.7-8.4,1.8c-1,0.4-3-1.9-3.2,1.3c0,0.1-0.5,0.3-0.7,0.2c-3.8-1.3-4.5-1.2-8,1c-0.1,0.1-0.3,0.3-0.4,0.3\n                            c-7.3-2.4-13.1,5.5-20.8,2.6c-2.6-1-6.3-1.1-9.4,1.4c-2.3,1.9-5.6-2-8.5,0c-0.3,0.2-0.9-0.3-1.4-0.4c-1.6,5-6.6,3.3-9,3\n                            c-5.7-0.6-11.2,2.2-16.8,0.4c-3.1-1-5,3.2-8.4,1.6c-0.9-0.4-2.4,1.1-2.4-1.4c0-1.1-1.8-1.8-2.2-1.6c-3.3,2.2-7.7-0.5-10.7,2.5\n                            c-0.9,0.9-2.2,1.7-3.1,0.8c-2.3-2.5-5.6-1.7-7.4-1.1c-6.5,2.2-12.4-0.3-18.6-0.8c-3.4-0.3-6.8,1.1-10.4,0.8\n                            c-3.2-0.2-6.5-0.4-9.7-0.7c-2.8-0.2-5.7-2-7.6,1.7c0,0.1-1.2-0.4-1.8-0.6c0.1-4.5,2.7-6.9,7.6-5.8c4.7,1,9.1-0.2,13.7-0.1\n                            c5.2,0.1,10.5,0.2,15.7-0.1c0.9-0.1,2.2-1.9,2.7,0.3c0.2,0.9,0.4,2,1.2,1.1c2.9-3.5,5.8-1.3,8.8-0.4c1.8,0.6,3.2-0.2,4.7-0.7\n                            c3.3-1,6.6-3,10.1,0.6c1.3,1.4,4.3-0.5,6.7-0.5c3.5,0,7-0.7,10.3,1.1c2.3,1.2,4.3-0.8,5.3-1.8c3.7-3.6,4.9-0.5,6.6,2.1\n                            c1.8-0.8,1.3-3.9,3.6-3.5c1.1,0.2-0.4,2.3,1.6,2.9c0.5-1.8,2-2.3,3.8-3.1c5-2,10.1-3.7,15.3-5.1c2.5-0.7,5.3,1.5,8.2,0\n                            c5.9-3.1,12.8-1.5,18.9-3.8c5.2-2,10.8-1.3,16.2-1.4c2.9,0,2.6-1.6,2.5-3C747.8,210.2,753.5,209.7,759,210z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#919193",
                  d:
                    "M490.1,229.1c0.9-0.6,3.3,3,2.9-1.1c2,0.4,2.1,3.9,2.9,3.4c3.4-2.1,7.7,0.4,10.6-2.6\n                            c2.1-2.1,3.5-1.2,5.9-0.3c4.5,1.7,9.6,1.4,14.4,0c0.9-0.3,1.6-1.5,2.6-0.8c4.1,3,8.7-1.6,13.2,1.4c1.8,1.2,5.5-1.8,8.7-1.7\n                            c2.4,0.1,4.9-2.4,7.1,0.5c1.9-2,4.2-1.1,6.4-1l0,0c1,6.5,0.7,6.9-4,6v0c-5.1,0.1-9.8,2-15.1,1.7c-6.9-0.3-14.2,1.2-21.2,2.3\n                            c-2.4,0.4-4.8,0.3-6.7-0.1c-6.1-1.3-11.9,0.6-17.9,0.8c-2.7,0.1-5.8-1.6-8,1.6c-0.4,0.5-1.4-0.4-1.6-1.3\n                            c-0.2-1.3,0.4-2.7-0.4-3.9C490.1,232.4,490.1,230.8,490.1,229.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D7B7E",
                  d:
                    "M562,216c-3.7,0.7-7,1.3-11-0.1c-3.1-1-7.2-0.9-10.7,0.8c-1.2,0.6-2.8,1.4-3.8,1\n                            c-6.3-2.9-12.5-1.5-18.8,0.2c-2.4,0.6-5.1,1.6-6.7-2c-0.6-1.4-1.9-0.3-3,0.2c-5,2.3-10.3,2.1-15.6,2c-0.9,0-1.7-1.4-2.5-2.1\n                            c0.1-2.9-1.1-7.3,4.4-3c0.5,0.4,5.2-0.8,7.9-1.2c5.3-0.8,11.1,1.4,15.9-3c1.1-1,3.3,1.8,4.5,3.2c1.7,1.8,2.6,2.4,4.9,0.7\n                            c1.8-1.3,4.5-2.1,6.6,0.3c0.9,1,2.6,1.6,3.7,0.8c5-3.5,10.4-2.4,15.9-1.8c2.8,0.3,5.6-0.1,8.2-2.7C562,212,562,214,562,216z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#99999B",
                  d:
                    "M490.1,234.1c1.7,1,0.1,3.3,1.8,4.4c2-0.6,0.5-2.8,1.8-3.9c2.7,2.3,5.9,1.2,9,1.4\n                            c3.3,0.2,6.8-0.1,9.5-0.9c3.9-1.1,6.7,2.8,9.4,1.3c3.7-2.1,7.3-0.6,10.9-1.3c3.7-0.8,7.5-1,11.3-1.6c1.7-0.3,3.6-2.6,4.9,0.8\n                            c0.3,0.8,1.1-0.6,1.5-1.2c0.9-1.4,1.9-1.4,2.6,0c1,1.9,1.4,1.5,1.7-0.2c0.3-1.8,2.1-2.5,2.8-1.3c1.6,2.9,1.6,0.6,2.4-0.4\n                            c0.5-0.6,0.7-0.5,1.4,1.8c-1.1,0.7-1,2.5-3.6,2.1c-2.8-0.5-5.6,2-8.8,2.7c-2.4,0.5-4.7,1.7-7.4,1.3c-1.5-0.2-3-0.4-4.3,0.7\n                            c-2.2,1.8-4.2,1.5-6.2-0.4c-1.6-1.5-3.2-2.3-4.8,0.4c-1.6,2.7-2.6-0.7-4-0.7c-1.1,0-2.6-2.6-3-0.3c-1.2,6.5-6.1,2.6-8.9,3\n                            c-3.1,0.5-6.2-0.2-9.6,1c-3,1-7,0.4-10.2-1.6C490.1,238.7,490.1,236.4,490.1,234.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7D7B7E",
                  d:
                    "M565,215c-0.7,0.7-1.3,1.3-2,2c0-0.8,0-1.7,0.1-2.5c0.1-0.8,0.4-1.9,1.3-1.7\n                            C565.3,213,564.9,214.2,565,215z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#99999B",
                  d:
                    "M561,233c4.7,0.3,4.1-3.1,4-6c1.9,2.5,0.5,5.3,1,8c-2-0.4-3.3,0.8-4.8,2.5\n                            C561.1,235.7,561.1,234.4,561,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#747070",
                  d:
                    "M1052,182c-5.6,1.4-11.2,2.8-17,3c-0.6-0.1-1.5,0.1-1.9-0.3c-0.8-0.7,0-1.2,0.5-1.4\n                            c3.1-0.9,5.7-3.5,9.5-2.5c2.1,0.5,4.5,0.5,6.7-0.9C1051.5,178.9,1051.8,180.7,1052,182z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6B6C",
                  d:
                    "M1011.6,175.8c-0.9,2.5-2.3,2-3.7,2.2C1008.8,176.3,1010.1,176.8,1011.6,175.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6D6B6C",
                  d:
                    "M920.7,169c0.7,0.2,1.7-0.2,1.4,0.9c-0.1,0.3-0.7,0.7-1.1,0.8c-0.7,0.1-1.3-0.3-1.3-1\n                            C919.8,169.4,920.5,169.2,920.7,169z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C1BBBB",
                  d:
                    "M1928.9,401.2c-0.3,0.6-0.6,1.2-0.9,1.8c-1.4,0.2-2.3-0.3-2-1.8c0.3-2.1,1.8-1.2,3-1.1\n                            C1928.9,400.5,1928.9,400.9,1928.9,401.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#E2DEE0",
                  d:
                    "M1927.1,395.1c-0.2,2-1.8,1.7-3.1,2C1924.5,395.6,1925.6,395,1927.1,395.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524E4E",
                  d:
                    "M1889.5,385.9c-1.9-0.1-3.9,0.8-5.5-0.9C1885.9,385.2,1887.8,384.8,1889.5,385.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524E4E",
                  d:
                    "M1903.4,387.9c-1.8,0-3.7,0.7-5.3-0.8c0.6-0.1,1.3-0.1,1.9-0.2c0.7,0.1,1.3,0.1,2,0.2\n                            C1902.4,387.3,1902.9,387.6,1903.4,387.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524E4E",
                  d:
                    "M1910.3,388.8c-1.4,0.1-2.8,0.1-4.2,0.2c-0.3-0.3-0.7-0.6-1-1C1906.8,387.9,1908.6,387.8,1910.3,388.8z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5859",
                  d:
                    "M1066,238c1.3-1.8,2.7,0.4,4,0C1068.7,239.8,1067.3,238.5,1066,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#646264",
                  d:
                    "M1020,238c0.7-0.7,1.3-1.3,2-2c1.8-2.7,4.4-0.2,6.6-1.1c6.2-2.6,13.2-3.1,19.3-3.2\n                            c8.7-0.1,17.5-2,26.2-0.1c3.4-0.2,6.8-0.1,10.2-0.1c1.5,0,3-0.1,3.8,1.5c0.4,0.2,0.9,0.3,1.3,0.5c-0.4,0.2-0.9,0.3-1.3,0.5\n                            c-7.1-0.5-14.1,0-21.2,0.6c-4.2,0.4-8.3,1.4-12.7,1.1c-5.8-0.3-11.5-0.3-17.5,1.9C1031.8,239.5,1025.6,239.4,1020,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#B6B7B8",
                  d:
                    "M508.6,244.1c-1.1,0-2.1,0-3.5,0C506.5,242.5,507.5,243.1,508.6,244.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#BABBBF",
                  d:
                    "M602,260.9c-6.3,0.9-12.6,1.3-19,1.1c1.3-4.5,6.9-4,8.9-7.7c0.4-0.7,2.7-0.4,2.7,0.1\n                            C594.3,259.9,601,257.1,602,260.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#817E7D",
                  d:
                    "M1063,206c-0.2-2.7-3.1-3.2-4.4-3.2c-3.3,0-6.2-0.4-9.3-1.6c-2.8-1.1-5.8-1.2-8.5,1.6\n                            c-2.9,3-5.8-0.1-8.2-1.4c-2.6-1.4-4.3-1.8-7.1-0.3c-3.7,2-6.9-0.3-9.5-3.1c0.8,0,1.6-0.2,2-1c1.7-0.8,1.7-0.8,3.4,2.1\n                            c0.2-4.2,2.7-4.4,5-3c3.9,2.4,8.7,1.6,12.5,4c1.2-5.8,4-6.9,9.3-3.3c1.3,0.9,2.5,1.9,3.8,0.1c0.7-1,1.6-2.1,2.7-2\n                            c2.2,0,0.6,2.4,0.6,2.4c2.3-2.3,4.6,3.7,6.8,0c2.7,3.7,6.4,0.5,9.6,1.3c2.1,0.5,5.2,2.9,7.3-0.5c6.2,1.8,11.7,5.8,18.7,5.1\n                            c2.1-0.2,3.9-1.3,6.1-0.8c9.6,2,12.3,8.7,7.2,17.6c-2.1,1.4-3.7,2.3-6.7,1.2c-2.5-1-5.3,1.9-8.4,2.3c-3,0.4-5.8,1.5-8.9,0.6\n                            c-4.6-1.2-8.8,1.5-13.3,1.5c-3.5,0-7.1,0.2-10.6,0.3c-1.1-3.2,1.7-2.8,3.3-3.5c0.5-0.1,0.9-0.1,1.4-0.1c1.5,0.2,3,0.6,4.3-0.6\n                            c3.6-2.4,7.7-1.4,11.6-1.9c2.5-0.3,5-0.7,7.1-1.8c2-1.1,3.9-1.7,6.1-1.5c1.7,0.1,3.3-0.2,4.6-1.6c1-1,1.3-2.3,0.9-3.7\n                            c-0.4-1.5-1.7-1-2.7-1.4c-3.7-1.4-7.2,0.2-10.8,0.5c-2.3,0.2-4-0.5-6.1-1.4c-2.7-1.2-5.6-6-8.9-0.1c-1,1.9-3-0.8-4.2-2\n                            c-1.5-2-3.4-1.4-5.2-0.6C1063.8,206.4,1063.3,206.3,1063,206z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7E7A7A",
                  d:
                    "M1111,220c-0.1-1-0.6-2.5-0.2-2.8c4.5-3.8,1.3-7.2-0.6-10.4c-1.8-3.1-5.4-3.7-8.5-1.6\n                            c-1.5,1-3.4-3.3-4.6,0.4c-6.2-2.2-12.8-3.3-18.1-7.6c0-1.8,1.1-2.7,2.6-3.2c0.4-0.1,0.9,0,1.4,0c-2.3,5.6,4.9,1.7,5.1,5\n                            c0,0.8,1.1,1.3,2,0.9c7.4-3.8,14.5,1.4,22,0.7c3.5-0.3,7.2,2.9,9.6,5.1c3.3,3.1,2.6-4.1,4.7-1c0.8,1.2-2,3.9,2.6,3.8\n                            c6.4-0.2,6.5,0.5,6.9,5.5c-1.7-2.7-3.3-2.9-5.3-1.1c-1,0.8-2.6,3.2-4,0.2c-1,2.4-4.1,1.1-5.5,3.5\n                            C1118.7,221.2,1115,221.5,1111,220z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726F6F",
                  d:
                    "M1074,232c-6.3,0.3-12.7,1.2-19,0.9c-11.2-0.6-21.9,3.7-33,3.1c-3.3-1-6.7,0.2-10,0\n                            c-1.7-0.1-3.6,0.6-5-1c2.3-1.3,4.3-1.6,7.2-0.8c2.5,0.7,5.6-1.6,8.6-1c4.8,0.8,9.9-3.3,12.8-2.3c7.1,2.3,13.4-4,20.2-0.3\n                            c2,1,5.4-1,8.2-1.4c3.5-0.5,7-1,9.9,1.8c0,0,0,0,0,0c0.2,0.2,0.3,0.4,0.2,0.7C1074.1,231.9,1074.1,232,1074,232z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#838182",
                  d:
                    "M1067,223c-0.8,1.7-4,0.2-4,3c-6.7,1.5-13.5,1-20.2,1.4c-2.3,0.1-4.3,3.5-6.8,0.6c-2,0.6-3.7,0.6-4-2\n                            c5-1,9.9-2,13.8-5.7c0.6-0.6,1.6-1,2.2-0.2c2.7,3.4,6.5,2.7,10,2.9C1061,220.4,1064,220.4,1067,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#7F7D7F",
                  d:
                    "M1032,226c1,1.3,2.4,1.8,4,2c-0.8,1.2-2.3,1.5-3.5,1.5c-8.9,0.2-17.6,2.7-26.5,1.5c0-0.3,0-0.7,0-1\n                            c3.3-2.4,7.1-2,10.9-2c2,0,4.3,0.8,6.1-1c2.3,0.9,4.7-1.4,7,0C1030.7,226.7,1031.3,226.3,1032,226z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726F6F",
                  d:
                    "M1004,233c0.7,0,1.3,0,2,0c0.3,0.7,0.7,1.3,1,2c-1.1,0-1.5,2.2-3,1C1004,235,1004,234,1004,233z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6E6A69",
                  d:
                    "M1074,232c0-0.3,0-0.7,0-1c11-0.5,21.8-1.6,32.6-3.6c1.4-0.3,2.9,0.4,4.4,0.6c-0.3,0.7-0.7,1.3-1,2\n                            c-4.5,1.6-9.3,0.2-13.9,1.1c-2.7,0.5-6-1.1-8.1,1.9C1083.5,230.6,1078.6,233.1,1074,232z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#878484",
                  d:
                    "M1067,223c-3-0.8-6-1.9-9,0c0.1-1.3-0.2-2.7,1.8-2.9c5.4-0.4,10.7-0.9,16.1-1.4c0.2,0,0.4-0.4,1-1\n                            c-3.4-0.6-6.6-1-6.3-5.5c0.1-1.5-2.1-1.1-3.4-1.1c-2.2,0-4-0.3-4.2-3c0-0.7,0-1.3,0-2c0.3,0,0.7,0,1,0c2,0.1,4,0.1,6,0\n                            c1.3,0.6,1.2,2.9,3.3,2.5c1.2-1.6-1.3-2.1-0.9-3.6c1-0.8,1.5,0.9,2.4,0.7c1.6-0.4,6.3-0.3,6.7,0.5c2.4,4.4,6.8,3.8,9.9,2.6\n                            c3.2-1.3,6.3,1,9.4-0.9c0.7-0.4,2.8,1.7,3,3.4c0.2,2.1-0.1,5.1-2.2,5.5c-5.8,1-11.1,3.2-16.8,4.2c-4.2,0.8-8.7-0.1-12.8,2\n                            c-1.3,0.5-2.7-0.2-4,0C1067.7,223,1067.3,223,1067,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#757477",
                  d:
                    "M691.9,194.4c-0.1,0.6-0.3,1.2-0.9,0.8c-0.3-0.2-0.6-0.7-0.7-1.1c-0.1-0.5,0.4-0.9,0.9-0.6\n                            C691.6,193.6,691.7,194.1,691.9,194.4z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#848386",
                  d:
                    "M950,236c-1.6-0.1-1.6-3.4-4-2c0.2-1-0.2-3.1,1.4-2.5c4.6,1.6,8.8-1,13.3-0.5c1.4,0.1,3.1,0.6,4.1-1\n                            c2.3-3.4,2,1,3.1,1c0.7,0,1.3,0,2,0c-5.4,3-11.2,4.1-17.3,3.7C951.3,234.6,950.5,234.8,950,236z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#838182",
                  d:
                    "M1030,227c-2.3,0.5-4.7,1.8-7,0C1025.3,226.1,1027.7,222.3,1030,227z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#888687",
                  d:
                    "M999,209c0-2.5,0.7-3.9,3.4-2.1c1.3,0.9,2.4,2,3.6,3.1C1003.4,211.6,1001.3,209.6,999,209z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#726F6F",
                  d:
                    "M984,238c0.3-2.8,2.7-2.1,4.3-2.1c4.3-0.2,8.7-0.2,13-1.3c0.9-0.2,1.4,0.7,1.8,1.4\n                            c-5.4,1.1-10.8,1.7-16.3,1.2C985.9,237.1,984.9,237.7,984,238z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#828081",
                  d:
                    "M1070,206c-2,2.6-4,2.6-6,0C1066,203.2,1068,203.2,1070,206z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#838182",
                  d:
                    "M1068,223c1.3-1.8,2.7-0.5,4,0C1070.7,224.4,1069.3,224.4,1068,223z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#817E7D",
                  d:
                    "M1117.4,208.7c-0.2,3.4,2.2,2.8,3.8,3.5c0.6,0.2,0,1.5-0.5,2.1c-1.3,1.2-2.8,1-3.9-0.1\n                            c-0.9-0.9-2.9-1.5-1.8-3.4C1115.4,210.1,1116.1,209.7,1117.4,208.7z"
                }
              })
            ])
          ])
        ])
      ]
    ),
    _vm._v(" "),
    _c("canvas", { attrs: { id: "output-canvas" } })
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6bd97949", module.exports)
  }
}

/***/ }),

/***/ 246:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(247)
}
var normalizeComponent = __webpack_require__(17)
/* script */
var __vue_script__ = __webpack_require__(249)
/* template */
var __vue_template__ = __webpack_require__(250)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\assets\\js\\components\\Wheel2PngComponent.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0719be3c", Component.options)
  } else {
    hotAPI.reload("data-v-0719be3c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 247:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(248);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(35)("6f3268c5", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0719be3c\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Wheel2PngComponent.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0719be3c\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Wheel2PngComponent.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 248:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(34)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ 249:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    name: 'car-2-png-component',
    data: function data() {
        return {
            bodyBaseColor: '000000',
            diskFillColor: '000000',
            bodyColorRange: [],
            progress: 0,
            canvas: null,
            canvasContext: null
        };
    },
    mounted: function mounted() {
        var that = this;

        var colorInput = document.querySelector('input[name="value_16"]');
        colorInput.addEventListener('change', function () {
            if (colorInput.value != '') {
                that.progress = 0;
                that.diskFillColor = colorInput.value.replace('#', '');
            }
        });

        window.onload = function () {
            that.diskFillColor = colorInput.value.replace('#', '');
        };
    },
    computed: {
        isSelfReady: function isSelfReady() {
            return this.diskFillColor !== null;
        },
        carDiskColor: function carDiskColor() {
            var that = this;
            return that.diskFillColor;
        }
    },
    watch: {
        isSelfReady: function isSelfReady(val) {
            var that = this;
            if (val) {
                console.log('isSelfReady');
            }
        }
    },
    updated: function updated() {
        var that = this;
        that.$nextTick(function () {
            // Code that will run only after the
            // entire view has been re-rendered
            // Ждем пока перекрасится картинка
            console.log('Painting Done', that.progress);
            that.makePng();
        });
    },
    methods: {
        /**
         * Converts an RGB color value to HSL. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes r, g, and b are contained in the set [0, 255] and
         * returns h, s, and l in the set [0, 1].
         *
         * @param   Number  r       The red color value
         * @param   Number  g       The green color value
         * @param   Number  b       The blue color value
         * @return  Array           The HSL representation
         */
        rgbToHsl: function rgbToHsl(r, g, b) {
            r /= 255, g /= 255, b /= 255;
            var max = Math.max(r, g, b),
                min = Math.min(r, g, b);
            var h,
                s,
                l = (max + min) / 2;

            if (max == min) {
                h = s = 0; // achromatic
            } else {
                var d = max - min;
                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                switch (max) {
                    case r:
                        h = (g - b) / d + (g < b ? 6 : 0);
                        break;
                    case g:
                        h = (b - r) / d + 2;
                        break;
                    case b:
                        h = (r - g) / d + 4;
                        break;
                }
                h /= 6;
            }

            return [h, s, l];
        },
        /**
         * Converts an HSL color value to RGB. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes h, s, and l are contained in the set [0, 1] and
         * returns r, g, and b in the set [0, 255].
         *
         * @param   Number  h       The hue
         * @param   Number  s       The saturation
         * @param   Number  l       The lightness
         * @return  Array           The RGB representation
         */
        hslToRgb: function hslToRgb(h, s, l) {
            var r, g, b;

            if (s == 0) {
                r = g = b = l; // achromatic
            } else {
                var hue2rgb = function hue2rgb(p, q, t) {
                    if (t < 0) t += 1;
                    if (t > 1) t -= 1;
                    if (t < 1 / 6) return p + (q - p) * 6 * t;
                    if (t < 1 / 2) return q;
                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                    return p;
                };

                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                var p = 2 * l - q;
                r = hue2rgb(p, q, h + 1 / 3);
                g = hue2rgb(p, q, h);
                b = hue2rgb(p, q, h - 1 / 3);
            }

            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];
        },
        hexToRgbArr: function hexToRgbArr(hex) {
            var c;
            if (/([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
                c = hex.split('');
                if (c.length == 3) {
                    c = [c[0], c[0], c[1], c[1], c[2], c[2]];
                }

                //                    var cs = _.chunk(c, 2);
                //                    console.log('c', c);
                //                    return [parseInt(cs[0], 16), parseInt(cs[1], 16), parseInt(cs[2], 16)];
                c = '0x' + c.join('');
                return [c >> 16 & 255, c >> 8 & 255, c & 255];
            }
            throw new Error('Bad Hex ' + hex);
        },
        intToHex: function intToHex(num) {
            var hex = num.toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        },
        rgbToHex: function rgbToHex(r, g, b) {
            return "#" + this.intToHex(r) + this.intToHex(g) + this.intToHex(b);
        },
        setCacheColor: function setCacheColor(base, selected, rendered) {
            localStorage.setItem(base + '_' + selected, rendered);
            return rendered;
        },
        getCachedColor: function getCachedColor(base, selected) {
            var rendered = localStorage.getItem(base + '_' + selected);
            //console.log('rendered', rendered);
            return rendered !== null ? rendered : false;
        },
        diskColorRecalc: function diskColorRecalc(color) {
            var rendered = false;
            if (this.diskFillColor == null) {
                return color;
            }
            if (!(rendered = this.getCachedColor(color, this.diskFillColor))) {
                var currDiskColor = this.hexToRgbArr(color);
                var fillDiskColor = this.hexToRgbArr(this.diskFillColor);

                var curr_hsl = this.rgbToHsl(currDiskColor[0], currDiskColor[1], currDiskColor[2]);
                var fill_hsl = this.rgbToHsl(fillDiskColor[0], fillDiskColor[1], fillDiskColor[2]);

                if (fillDiskColor[0] == fillDiskColor[1] && fillDiskColor[0] == fillDiskColor[2]) {
                    var L = 0.2126 * (currDiskColor[0] + fillDiskColor[0]) / 2 + 0.7152 * (currDiskColor[1] + fillDiskColor[1]) / 2 + 0.0722 * (currDiskColor[2] + fillDiskColor[2]) / 2;
                    fill_hsl[2] = L / 180;
                } else {
                    fill_hsl[2] = curr_hsl[2] + 0.18;
                }

                var idx = this.hslToRgb(fill_hsl[0], fill_hsl[1], fill_hsl[2]);

                rendered = 'rgb(' + idx.join(',') + ')';

                this.setCacheColor(color, this.diskFillColor, rendered);
            }
            return rendered;
        },
        makePng: function makePng() {
            var that = this;
            var svg = '',
                wheelSvg = document.querySelector('#car-wheel'),
                wheelPolishedSvg = document.querySelector('#car-wheel-polish'),
                wheelContainer = document.querySelector('#wheel-container');
            if (wheelSvg) {
                if (typeof window.XMLSerializer != "undefined") {
                    var wheelXml = new XMLSerializer().serializeToString(wheelSvg);
                    var wheelPolishXml = new XMLSerializer().serializeToString(wheelPolishedSvg);
                } else if (typeof wheelSvg.xml != "undefined") {
                    var wheelXml = wheelSvg.xml;
                    var wheelPolishXml = wheelSvg.xml;
                }

                var wheel_canvas = document.createElement("canvas");
                var wheel_polished_canvas = document.createElement("canvas");
                wheel_canvas.setAttribute('id', 'output-wheel-canvas');
                wheel_polished_canvas.setAttribute('id', 'output-wheel-polished-canvas');
                var wheel_canvasContext = wheel_canvas.getContext("2d");
                var wheel_polished_canvasContext = wheel_polished_canvas.getContext("2d");
                wheel_canvas.setAttribute('width', 350);
                wheel_canvas.setAttribute('height', 350);
                wheelContainer.appendChild(wheel_canvas);
                wheel_polished_canvas.setAttribute('width', 350);
                wheel_polished_canvas.setAttribute('height', 350);
                wheelContainer.appendChild(wheel_polished_canvas);

                wheel_canvas.height = wheelSvg.getAttribute('height');
                wheel_canvas.width = wheelSvg.getAttribute('width');
                canvg(wheel_canvas, wheelXml);
                wheel_polished_canvas.height = wheelSvg.getAttribute('height');
                wheel_polished_canvas.width = wheelSvg.getAttribute('width');
                canvg(wheel_polished_canvas, wheelPolishXml);

                var wheel_canvasdata = wheel_canvas.toDataURL("image/png"); //.replace("image/png", "image/octet-stream");
                var wheel_polished_canvasdata = wheel_polished_canvas.toDataURL("image/png"); //.replace("image/png", "image/octet-stream");

                var wheel_render_img = document.querySelector('input[name="wheel_img"]');
                var wheel_polished_render_img = document.querySelector('input[name="wheel_polished_img"]');
                wheel_render_img.value = wheel_canvasdata;
                wheel_polished_render_img.value = wheel_polished_canvasdata;
                wheelContainer.removeChild(wheel_canvas);
                wheelContainer.removeChild(wheel_polished_canvas);
            }
        }
    }
});

/***/ }),

/***/ 250:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "car", attrs: { id: "wheel-container" } }, [
    _c(
      "svg",
      {
        attrs: {
          viewBox: "0 0 350 350",
          width: "350",
          height: "350",
          id: "car-wheel"
        }
      },
      [
        _c(
          "g",
          {
            staticClass: "car-wheel",
            attrs: {
              id: "car-wheel",
              height: "200",
              width: "200",
              transform: "translate(-225,-425)"
            }
          },
          [
            _c("g", { attrs: { id: "tire" } }, [
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M275.8,511c0.3-0.3,0.5-0.7,0.8-1c1.6-1.6,3.3-2.9,4.2-5c20.5-23.8,46.4-38.7,76.6-46.7\n                                    c0.8-0.2,1.6-0.1,2.5-0.2c-1.3,4.1-5.5,3.9-8.4,4.7c-6.6,1.9-12.4,5.5-18.9,7.3c-2.5,0.7-3.8,2.5-4,5.1\n                                    c-2,4.8-6.8,6.4-10.5,9.4c-2.5-1.5-0.8-2.4-0.1-3.2c-5.7,4-12.4,7.6-16.4,14.5c-0.8,1.4-2.5,3.6-4.3,2.2\n                                    c-1.1-0.8-0.9-1.1-1.9-0.1c-2.1,2.1-4.3,4.1-6.4,6.3c-1,1.1-2.4,2.1-2.4,3.7c0,4.4-3.1,7.2-5.2,10.5\n                                    c7.6-10.7,17.4-19.4,27.3-27.9c2.8-2.4,6-4.2,9.3-5.7c2.4-0.6,3.4-3.7,6.1-3.6c5.2,0.2,9.3-3.1,13.9-4.7\n                                    c5.6-2,11.3-3.6,17.1-5.1c1-0.3,2.1-0.1,2.7,0.9c0.7,1.3-0.3,2.2-1.1,3c-1.1,1.1-2.5,1.7-4,2c-4,0.7-6.9,2.4-7,7\n                                    c0,1.4-1,2.4-2.1,3.3c-2.7,1.6-5.3,3.3-7.4,5.4c3.1-1.5,6-3.8,9.4-4.9c1.8-0.8,3.8-1.1,5.5-2.2c10.5-3.8,21.2-6.7,32.4-6.9\n                                    c5.1-0.1,10.2-1.7,15.3-0.2c0.8,0.1,1.6,0.1,2.4,0.1c3.9-0.3,7.6,0.9,11.4,1.2c8.6,1.5,17.1,3.5,25.3,6.7\n                                    c11.5,4.3,22.8,9.1,32.7,16.6c9.5,7.2,17.9,15.3,25.4,24.5c9.1,11.2,16.5,23.3,21.1,37c2.1,6.4,4.7,12.8,5,19.7\n                                    c0.2,3.2,0.9,6.4,1.5,9.6c2.9,11.2,1.4,22.3-1.5,33.3c-1.8,7-2.9,14.2-5.4,21.2c-4.4,12.5-11.2,23.6-19.1,34\n                                    c-7.3,8.1-14.9,15.9-24,22.1c-5.9,4-11.9,7.8-18.6,10.3c-1.4,0.5-2.5,1.6-3.8,2.4c-8.7,4.6-18.4,6.2-27.8,8.4\n                                    c-4.1,1.1-8.2,1.1-12.4,1c-2.4,0-4.9-0.3-7.2,0.5c-1.6,0.4-3.2,0.4-4.8,0.2c-2-0.5-4-0.9-6-0.2c-4.7-0.7-9.5-0.1-14.1-1.8\n                                    c-1.7-0.7-3.4-0.8-5.2-0.8c-18.7-3.6-35.4-11.5-51-22.3c-0.6-0.4-1.2-0.9-1.7-1.4c-11.5-8.8-21.4-19.3-29.8-31\n                                    c-3-4.2-5.2-8.8-7.4-13.5c-8.5-15.7-12.9-32.5-14.2-50.2c1-9.9,0.5-19.9,2.5-29.7c1.8-9,5.2-17.5,9.1-25.7\n                                    c1.1-2.4,1.9-4.9,3.2-8.4c-4,4.3-6.8,8-7.6,12.7c-0.7,3.9-2.9,7-4.1,10.7c-4,12.5-4.3,25.4-4.8,38.3c0.2,5,0.1,10,1,14.9\n                                    c-0.3,2.1,0.4,3.9,1.1,5.8c0.2,0.4,0.3,0.9,0.4,1.3c0.3,1.8,0.2,3.6,1.2,5.2c0.7,6.4,4.5,12.1,4.7,18.7\n                                    c-0.5,1.6-0.5,3.3-1.2,4.9c-0.2,0.4-0.6,0.7-1.1,0.9c-0.7,0.1-1.5,0-1.8-0.6c-2.1-5.8-5.7-10.6-10.3-14.7\n                                    c-1.1-0.9-1.8-2.4-0.8-3.5c1.8-2.1,3.5-0.2,5.2,0.6c-0.1-2.1-0.1-4-3.3-3c-1.3,0.4-2.5-0.7-3.5-1.6c-0.8-0.8-1.1-1.7-0.7-2.7\n                                    c0.4-1,1.2-1.2,2-0.9c2.2,0.7,2.3-0.6,2.6-2.2c0.4-1.6,0.2-2.3-1.3-3.2c-4.6-2.7-4.5-3,0.5-5.8c-0.8-1.6-2.2-1.1-3.5-1.1\n                                    c-1.3,0-2.4-0.4-2.6-1.8c-0.2-1.3,0.5-2.4,1.7-2.7c4.2-1,3.8-2,0.7-4.6c-1.7-1.4-2.2-4.3-0.4-7.2c0.6-1,2.9-4.9-0.5-7\n                                    c-0.8-0.5-2.1-0.9-1.8-2.1c0.3-1.1,1.5-1.2,2.5-1.2c0.6,0,2.4,0.9,0.4-0.7c-0.7-0.5-0.8-1.6-0.2-2.3c2.4-2.8-0.4-1.4-1.2-1.4\n                                    c-1.3-0.1-2.2-0.7-2.6-2c-0.3-1.3-0.2-2.6,0.6-3.7c1.1-0.9,2.3-1,3.5-0.5c0.8,0.4,1.1,1,0.7,1.8c0.8,0,1.6-0.2,2.4-0.1\n                                    c-0.8-0.3-1.7-0.4-2.2-1.1c-0.5-1.7-1.9-1.9-3.3-2c-0.7-1.1-0.5-2.2,0-3.2c1.4-1.7,1.1-3.6,0.8-5.6c0-0.5,0.1-0.9,0.3-1.3\n                                    c2.9-1.6,4.1-3.8,3.4-7.2c-0.4-1.9-0.6-3.9-0.5-5.9c0-3.9,2.5-6.1,5.2-8.3c3.7-3,5-7.1,4.8-11.7c2.8-7,4.9-14.3,7.5-19.7\n                                    c-1.5,2.6-3.4,7-6.7,10.4c-1.9,1.5-1,3.9-1.9,5.8c-0.2,0.5-0.6,0.8-1.2,0.9c-2.7-1.7-2.8-4.3-2.5-7.1c0.2-0.8,0.5-1.5,0.9-2.2\n                                    c0.1-0.7-0.2-1.6,0.7-2C271.8,518.2,273.4,514.3,275.8,511z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M327.9,475.1c-1.3-3.4,0.5-4.9,3.5-6.1c9.5-3.6,19-7.3,28.5-11c7.6-2.6,15.5-3.5,23.4-4\n                                    c37.5-2.3,72.8,4.7,104.3,26.3c35.2,24.1,57,57.1,64.1,99.4c1.8,10.7,1.3,21.5,1,32.3c-1,0.4-1.7-0.2-2.4-0.9\n                                    c-1.2-2.2-2.6-4.2-4.3-6c-0.7-1-1.1-2.1-0.3-3.3c3.8-2.5,3.8-6.1,0-8.4c-1.7-1-3.7-1.6-4.5-3.6c-0.3-1.3-0.2-2.4,1.1-3.1\n                                    c1.5-0.3,3.5,1.6,4.4-0.8c0.7-1.8-0.7-3.1-1.9-4.3c-1.5-1.6-3.8-2.7-1.1-5.6c1.6-1.8-0.9-6.6-3.5-7.7c-1.2-0.5-2.6-0.7-3.5-1.8\n                                    c-0.8-0.9-1.4-2-1-3.2c0.4-1.1,1.6-0.9,2.6-0.9c1.1,0.1,2.5,0.8,2.9-1c0.3-1.2-0.4-2.3-1.2-3.1c-1.1-1.1-2.5-1.6-3.6-2.6\n                                    c-0.9-0.9-1.3-1.8-0.3-3c2.7-3.2,2.4-4.5-1.2-6.4c-2.5-1.3-5.4-1.8-7.2-4.2c0.9-4.2,4.5-1.2,6.5-2.4c-1.7-3.8-4.9-5.7-8.6-7\n                                    c-0.6-0.4-1-1-1.1-1.7c0.8-0.7,3-1.6,4.2-1.7c-3.4-4.4-6.6-8.8-13.1-8.3c-1.5-0.4-2.8-1-2.9-2.8c1.9-2.4,4.4-2.1,6.6-1.5\n                                    c-2.5-4.3-6.2-6.9-11.5-6.9c-2.6-1.7-5.2-3.5-6.3-6.6c0.5-2.3,1.9-1.9,3.4-1.1c1.4,0.7,2.5,2.1,4.5,2.7\n                                    c-3.6-3.3-6.7-6.6-11.9-4.9c-2.4,0.3-4.6,0-5.8-2.4c-0.1-1.1-0.1-2.3-1.2-3.1c-6.8-5-13.1-10.6-21.4-13.6\n                                    c-4.5-1.6-7.8-5.8-12.5-7.8c-6.8-3-13.3-6-20.9-5.8c-1.5,0-3-0.1-4-1.5c-0.6-3.1-3.2-2.3-5.2-2.7c-0.4-0.1-0.9-0.2-1.3-0.3\n                                    c-1.5-1.1-3.3-1-5.1-1c-0.5-0.1-0.9-0.2-1.4-0.3c-5.5-1-11-3-16.7-1.5c-0.5,0.1-1,0.2-1.5,0.3c-4-0.3-7.9-1.1-11.9-0.8\n                                    c-0.8,0-1.5,0-2.3,0c-7.3,0.7-14.7,0.4-21.5,3.6c-0.8,0.6-1.7,1-2.7,1.1c-3,0-6.1-1.3-8.9,0.7c-6.5,2.3-13,4.3-18.9,8.2\n                                    C332.5,474.2,330.5,475.9,327.9,475.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M272.9,535.1c0.6,5-1.2,8.9-5,12c-1.4-0.1-2.6,2.1-4.1,0.7c-1.1-1.1,0-2.5,0.3-3.7\n                                    c0.6-1.7,0.5-3.6,1.5-5.2c-2.5,4.7-4.4,12.2-4.4,17c0,0,0.2-0.3,0.3-0.4c0.4-0.4,0.8-0.5,1.3-0.3c0.1,1.9-0.3,4,0.4,5.7\n                                    c1.9,4.7-0.5,6.8-4.4,8.3c-3.4-1.1-2.4-3.8-2.6-6c-0.7,7-1.2,14,0.6,21c1.2,1.6,2.4,0,3.6,0c1.2,0,2.6,0.1,2.9,1.4\n                                    c0.3,1.8-1.5,0.4-2.1,1c-0.6,0.6-1.2,1.2-0.9,2.1c0.5,1.5,2.1,1,3.6,1.3c-1.8,2.9-4.4,0-6.3,1.7c1.4,0.5,2.7,1,4,1.5\n                                    c1.4,0.6,1.6,2.5,0.8,2.8c-3.3,1-3.2,2.2-0.8,4.1c-1.7,1.2-2.8,2.5-1.9,5c0.6,1.6,0.2,3.1,2.9,2.8c3.5-0.4-0.9,3.4,1.7,4.2\n                                    c0.2,0.1-1.2,0.8-2.2,0.8c-0.8-0.1-1.6,0.1-2.4,0.3c-1,0.2-2,0.7-1.5,2c0.4,1.1,1.3,0.5,2.1,0.4c1.1-0.2,2.4-0.5,3.4-0.1\n                                    c1.6,0.6,2,2.5,1.8,3.8c-0.3,2.3-1.8,0.9-2.9,0.6c-0.8-0.3-1.8,0.2-2.1,1c-0.5,1.5,1.1,1.6,1.9,1.6c3.2-0.1,4.7,1.4,3.8,4.4\n                                    c-1.5,4.8-1.7,4.8-5.8,3.3c1.5,3.9,2,4,8.2,2c-2.3,2.2-0.7,3.4,0,4.9c0.5,1,0.7,2.4-0.7,3c-1.6,0.7-1.2-1-1.7-1.7\n                                    c-1-1.4-2.5-1.1-4-1.5c0,0.9-0.1,1.7,0,1.8c5.6,1.9,5.5,9.3,11,11.2c1.1,0.4,0.5,1.7,0.1,2.7c-0.6,1.6-0.2,2.6,1.6,2.8\n                                    c1.9,2,1.3,4.6,1.6,7c0.4,2.8,0.5,5.5,2.3,7.9c1.5,2,0.8,3.7-1.5,4.6c-4.2-0.4-6.2-3.4-8.1-6.6c-2.1-3.6-4.4-7.1-8.5-8.8\n                                    c-0.5-0.2-0.9-0.4-1.3-0.7c-1-0.9-1.4-2-1.1-3.3c1.7-3.7,3.5-4,5.9-0.5c1.3,1.8,2.7,3.6,3.8,5.6c-3.6-8.4-9.2-15.8-12.6-24.3\n                                    c-0.7-1.6-1.8-1-2.7-1.5c-0.7-0.6-0.8-1.4-1.1-2.4c0.4,3.1,2.7,5.6,2.2,8.7c-0.3,0.9-0.6,1.9-2,1.6c-3.7-9.3-5.1-19.2-5.7-29.1\n                                    c-0.6-8.6,0-17.3,0-25.9c2.7,0.6,1.5,2.9,2,4.4c1.1-3.4-2.5-6.3-1.3-9.8c0.1-1.2,0.2-2.4,0.3-3.6c0.6-1.2,1.3,2.1,1.8-0.1\n                                    c0.7-3.1-0.9-6.2-0.1-9.2c0.3-1.6-0.6-3.5,0.9-4.9c3.4,0.5,1.3,2.8,1.5,4.5c1.3-3.9-0.3-7.8,0.6-11.6c-0.1-1.1,0.1-2.1,0.9-2.9\n                                    c2.4,0,1.5,1.4,1.5,2.6c0.6-3.5,0.1-7.3,1.4-10.7l0,0.1c4.4-3.2,4.1-8.7,6.1-13c0.3-1,1.2,1.4,1.7-0.4c0.9-2.8,1.3-6,4.4-7.5\n                                    c0,2.5,0.3,5,2,7c1.8,1.6-0.3,3.3,0.2,5c-0.2,0.6,0.2,0.3,0.2,0.1C270,535.2,270.6,534.1,272.9,535.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2726",
                  d:
                    "M440,744.3c-4.7,1.7-9.6,2.7-14.6,2.9c-20.5,0.7-40.9,1.7-61.2-2.1c-0.8-0.2-1.5-0.5-2.3-0.8\n                                    c-0.4-0.9-2.1-0.4-1.9-1.8c0.2-0.9,1.1-1.1,1.9-1.3c2.3-0.6,4,0.7,5.6,1.4c-1.9-1.5-1.1-2.8,0.6-4.1c4.6-1.1,8.8,1.5,13.3,1.6\n                                    c4.6,0.9,9.2,1.6,13.6-0.9c0.9-0.5,2.3-1,2.7,0c1.8,3.7,3.9,1.3,6.1,0.6c5.3-1.7,10.7-2.3,16.2-0.9c4.5,1.2,8.9-0.2,13.2-1\n                                    c3.7-0.7,7.5-1.4,11.2-2.4c1.5-0.4,3.4-0.8,4.2,0.6c1.2,2.1-1.5,2.5-2.3,3.7C444.6,741.8,442,742.7,440,744.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B3534",
                  d:
                    "M513.2,702.3c-7,8.2-15.7,14.5-24.3,20.8c-3.2,1.4-6,3.3-9,4.9c-3.8,3.3-8.4,5.2-13,7.1\n                                    c-0.4,0.4-0.8,0.4-1.2,0c1.7-6.8,7.4-9.3,13-11.7c1.7-0.7,3.5-1,4.7-2.5c1.3-1.6,2.1-3.9,5-2c1.1,0.7,1.5-1.4,2.3-2.1\n                                    c5.3-3.5,10.5-7.1,14.4-12.4c1.2-1.6,2.6-3.4,4.9-3.8c0.9,0.1,1.5,0.7,2.3,1C512.7,701.7,513,701.9,513.2,702.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302B29",
                  d:
                    "M251.8,642.2c0.9-0.4,1.1-1.2,1.1-2.1c1.5-2-1.6-4,0-6c1.8-0.6,2.7,0,3.6,1.9\n                                    c4.6,9.1,10.1,17.6,14.1,27c-2.7-1.3-5.5-4.4-9-10c-1,0.7-2,1.5-3,2.2c-2.6-0.7-2.2-3.2-3.1-4.9c-0.9-1.7-1.1-3.7-2.7-5\n                                    C251.9,644.4,251.7,643.3,251.8,642.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#363231",
                  d:
                    "M296.9,711.1c-0.3-0.3-0.7-0.7-1-1c-2.2-5.8-6.9-9.1-12.1-12c-1.5-1.2-2.9-2.4-3.8-4.2\n                                    c2.3-1.9-1-3.3-0.4-5.1c1.4-3.3,3.3-1.8,5-0.3c4.4,3.8,8,8.4,12.8,11.6c3.4,2.3,5.6,6,9.4,7.7c1.2,0.5,2.6,1.5,2.1,2.9\n                                    c-0.6,1.5-2.2,0.9-3.5,0.8c-1,0-2.2-2-3.1,0.2c-0.2,0.4-0.5,0.7-0.9,0.9C299.4,713.3,298.3,711.9,296.9,711.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3433",
                  d:
                    "M312.8,723.2c-0.4-0.2-0.7-0.5-1.1-0.7c-0.9-3.2-4.1-4.1-6.2-6.1c-1.3-1.3-3.7-1.7-3.7-4.2l0.1-0.1\n                                    c2.1-1.9,4.3-0.6,6,0.5c8.9,5.8,18.8,9.7,28.2,14.6c0.9,0.5,1.8,0.9,2.6,1.5c0.7,0.5,1.5,1.2,1.3,2c-0.2,1.1-1.4,1.3-2.4,1.5\n                                    c-2.1,0.4-4.3-0.7-6.4,0.3c-0.4,0.1-0.9,0.3-1.3,0.6c-0.6,0.2-0.9,0-1.2-0.6C324.4,727.7,318.7,725.2,312.8,723.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#423D3A",
                  d:
                    "M532.9,677.1c-5.3,9.4-12,17.7-19.7,25.2c-0.2-0.1-0.3-0.2-0.5-0.3c-1-2.3,0-4.4,0.5-6.5\n                                    c3-2.5,3.1-7.9,8.2-8.3c-0.6-4.1,3.1-6.3,4.5-9.5c0.5-1.3,1.3-2.3,2.5-2.9c1.3-0.6,2.6-0.3,4-0.2c0.4,0.1,0.8,0.3,1.1,0.7\n                                    C533.4,676,533.4,676.6,532.9,677.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#36312E",
                  d:
                    "M367.9,739.1c-1.1,1.2-0.4,2.5,0,3.8c-2.1-0.3-4-0.9-5.9-0.7c-2.7,0.3,0.2,1.3-0.1,2\n                                    c-4.9-0.6-9.5-2.1-14-4.1c-2.6-1.3-4.9-2.9-7.7-3.8c-1.5-0.5-3.4-1.5-1.8-3.8c5-1.2,9.3,1.7,13.8,2.8\n                                    C357.4,736.7,362.9,737,367.9,739.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3532",
                  d:
                    "M440,744.3c0.6-2.7,3.9-2.8,4.9-5.2c5.1-1.9,9.2-5.6,14.1-7.9c4.2-2,6-1,6.4,3.5\n                                    c-2.3,2.5-5.9,2.4-8.5,4.4C451.5,741.7,445.9,743.4,440,744.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282423",
                  d:
                    "M550.9,611.1c0.6,0.3,1.2,0.6,1.8,1c0.1,8.9-1.2,17.6-3.8,26.1c-2.8-0.1-1.9-2.8-2.8-4.2\n                                    c-0.4-1.1-1.3-1.9-2-2.8c-0.9-2-2.5-4.4,1.8-4c0.6,0.1,1.4,1.3,1.8-0.1c0.7-2.5,0.8-5.1-0.3-7.6c-0.1-0.4-0.1-0.9-0.1-1.4\n                                    c0.2-0.9,0.7-1.7,1.2-2.4C550.1,614.5,549.4,612.3,550.9,611.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4543",
                  d:
                    "M259.9,658.1c0.3,0,0.6,0,1,0c4,2.7,4.8,7.1,6,11.3c0.9,3.5,3,6.4,5.6,8.9c1.4,1.1,2.4,2.5,3.1,4.1\n                                    c0.4,0.8,0.8,1.5,1,2.4c-0.2,1.4,2.5,3.3-0.6,4.3c-5.6-6.7-10.5-13.9-14-22C261.3,664.1,259,661.5,259.9,658.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5454",
                  d:
                    "M283.8,698.2c7-0.3,8.8,6.8,13.6,9.7c0.8,0.5-1.2,1.3-1.4,2.2C291.2,706.8,287,703,283.8,698.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4A46",
                  d:
                    "M545.9,649.1c-0.9,4.6-2.8,8.9-5.1,13c-0.5,0.3-0.9,0.2-1.3-0.2c-1.5-2.8-1.2-5.8-0.8-8.8\n                                    c0.2-1.2,0.6-2.4,1.1-3.6c0.8-1.5,1-3.5,3.2-3.9c1.2,0.2,1.6,1,1.8,2.1c0,1.5-0.9,2.7-1.3,3.9\n                                    C544.4,651.2,543.8,648.7,545.9,649.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5757",
                  d:
                    "M301.9,712.2c2.9,2.1,5.7,4.2,8.6,6.3c1.5,1,2.5,2.2,1.2,4c-5.5-3.1-10.5-6.8-14.8-11.3\n                                    C298.6,711.5,300.2,711.8,301.9,712.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5555",
                  d:
                    "M312.8,723.2c6.6-0.7,10.8,3.9,15.7,6.9c0.4,0.2,0.2,1.5,0.2,2.3C323.1,729.9,317.7,727,312.8,723.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807A77",
                  d:
                    "M259.9,658.1c0.4,3,2.6,5.7,2,9c-4-6.9-6.6-14.4-9.1-21.9c4.2,2,3.3,7,5.9,9.9\n                                    C259,656.2,259.5,657.1,259.9,658.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#494341",
                  d:
                    "M337.9,733.1c2.2,4,8.3,2.3,10,7c-6.4-1.4-12.2-4.3-18-7.1c0-0.3,0-0.6,0-1\n                                    C332.7,731.4,335.4,731.7,337.9,733.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524D4A",
                  d:
                    "M539.9,662.1c0.3,0,0.6,0,0.9,0c-0.5,2.2-1.5,4.2-2.9,6c-2.2,1.6-2.2,5.1-5.3,6\n                                    c-2.1-5,0.8-8.6,3.4-12.3C537.2,660.1,538.6,661.3,539.9,662.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2B",
                  d:
                    "M545.9,649.1c-0.8,1.1-1.7,2.1-2.6,3.3c-0.8-1.8,0.8-2.9,0.6-4.4c1-1.1-0.1-2.5,0.3-3.7\n                                    c1.6-3.6,0.2-7.9,2.7-11.3c1.8,1.2,0,3.9,2,5.1C548.7,642,547.4,645.6,545.9,649.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373433",
                  d:
                    "M248.8,568.9c1.7,4.4,1.6,8.8,0.9,13.4c-2.7-0.3-1-3.3-2.6-4.1C247.1,575,247.6,571.8,248.8,568.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#585352",
                  d:
                    "M275.9,689.1c2.5-1.3-1.6-2.7,0-4c2.8-0.1,3.9,1.4,4,4c1.2,1.6,2.5,3.3,3.8,5c-1.4,1.1-2.6-2-3.8,0\n                                    C278.1,692.8,276.9,691,275.9,689.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3837",
                  d:
                    "M261.7,532.9c0.3,3.8-1.4,7.2-2.2,10.8c-0.5,2.2-3,0.8-3.9,2.2C256.9,541.3,259,537,261.7,532.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M246.7,581.7c1,4.5,4.6,8.8,1.3,14.1c-2.5-2.6,0.2-6.2-1.9-8.6C245.9,585.3,245.6,583.4,246.7,581.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3837",
                  d:
                    "M267.9,525.1c-1.3,2.7-2.6,5.5-3.9,8.2c-1.1,2.2-1.4-0.6-2.2-0.4c1.5-3.7,2.9-7.4,6.1-9.9\n                                    C267.9,523.7,267.9,524.4,267.9,525.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D3736",
                  d:
                    "M251.8,557c0.8,4,1.9,8.1-0.4,12.1c-1.3-1.4,0.4-4-1.8-5.1C250.1,561.6,250.4,559.1,251.8,557z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3837",
                  d:
                    "M255.7,545.9c-0.4,3.8,1.1,7.7-1.2,11.3c-1.1-0.8-0.3-2.6-1.7-3.2C253.1,551.1,254.1,548.4,255.7,545.9\n                                    z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4744",
                  d:
                    "M275.8,511c-1.5,4-3.2,7.9-7.3,10C270.5,517.3,272.8,513.9,275.8,511z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6A6461",
                  d:
                    "M533,674.2c1.4-2.2,2.2-4.9,5-6c-1.3,3.2-2.6,6.4-5,9c0-0.7-0.1-1.3-0.1-2\n                                    C532.5,674.7,532.6,674.4,533,674.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524C49",
                  d:
                    "M280.8,504.9c-0.1,2.8-1.9,4.1-4.2,5C277.5,507.9,279.1,506.3,280.8,504.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#272423",
                  d:
                    "M465.9,734.9c-0.3,0.1-0.6,0.1-1,0.2c-0.1-3.8-1.8-4.7-5.1-2.9c-4.8,2.7-9.2,6.3-15,7\n                                    c1-0.8,2-1.6,4.3-3.3c-6.9,1.5-12.5,2.9-18.1,3.7c-4.3,0.6-8.2,2-13.1,0.2c-4.1-1.5-9.6-0.9-14.2,1.5c-1.3,0.7-2.7,1.4-4.1,1.7\n                                    c-2.7,0.6-4.6,0.2-2.2-3.7c-5.2,3.7-10.3,3.8-15.7,1.9c2.5-1,5.1-0.8,7.7-0.4c-1.9-1.5-5,1.5-6.4-1.8c-0.1-0.5-0.1-0.9,0-1.4\n                                    c1.1-1.9,1.2-4.7,4.4-4.7c2.1,3.2,5.8,2.5,8.6,2.8c4.6,0.5,9.4,0.8,14.1-0.2c3.8-0.8,7.7-0.5,11.6-1.6c2.8-0.8,4.2-3.9,7.9-3.6\n                                    c-2-0.3-3.3,0.2-4.7,0.5c-1.6,0.4-3.3,1.2-4.1-1.1c-0.9-2.4,0.4-3.3,2.4-3.9c0.5-0.1,0.9-0.4,1.4-0.5\n                                    c6.6-1.8,13.2-3.6,19.7-5.6c2.7-0.8,5.2-1.8,7.4-3.5c0.6-0.9,0.8-2.3,2.1-2.6c11-3.3,19.6-10.1,28.3-17.3\n                                    c5.3-4.4,9.3-9.8,14.7-14c1.8,0.2,3.3-0.5,4.4-1.9c4.4-5.7,7.7-12.4,13.3-17.1c2.4-2,0.9-6.5,4.8-7.5c0.5,0.1,0.9,0.3,1.3,0.6\n                                    c1.3,1.3,1.9,3.2,1,4.5c-4,5.9-2.8,12.3-2.5,18.6c0,0.5-0.5,0.7-0.4,1.2c0-0.3,0.2-0.6,0.4-0.9c3.3,0,3.7,0.5,2.2,3.3\n                                    c-2.3,4.2-5.4,7.9-7.4,12.2c0.2,2.4-0.3,4.7-1.2,6.9c-1.2,0.9-1.8,0.6-1.8-0.9c-2.5-2.1-4.4-1.6-6.1,1.2\n                                    c-3.7,5.8-8.3,10.7-13.9,14.8c0.1,1.8-0.3,3.5-2,4.2c-2.3,0.9-1.4-2.2-3-2.6c-1.5,3.4-3.7,5-7.7,6\n                                    C473.1,726,469,730.2,465.9,734.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292524",
                  d:
                    "M383.9,737.1c0,0.3,0,0.7,0,1c-0.1,0.1-0.3,0.3-0.4,0.3c-6.4-2.6-13.3-3-19.9-4.9\n                                    c-5.1-1.5-9.8-4-14.7-5.8c-14.2-5.4-27.4-12.5-38.6-22.6c-9.8-8.8-20.5-17.1-26.4-29.5c-1.7,0.5-2.4,2.4-4.2,1.9\n                                    c-1.6-0.6-3.1-1.3-2.9-3.5c1.2-0.7,2.8-1.9,1.6-3c-4.8-4.6-3-10.5-3.6-16h0c1.2-1.5-0.2-3.5,1-5c0-1,0.2-2.1-0.2-2.9\n                                    c-2.8-5-3.7-10.6-4.8-16.1c-1.2-1.9,1.2-4.3-1-6c-0.8-1.9,0.5-4.6-2-6c-0.3-5-0.7-10-1-15c2.4-1.5,2.8,1.1,4,2\n                                    c1.9,7,1.3,14.5,3.6,21.4c3.1,9.1,4.7,18.8,10.4,26.8c0.4,0.5,0.6,1.2-0.1,1.7c2.9,6.7,6,13.2,10.9,18.7\n                                    c4.9,5.6,8.8,12.1,14.9,16.4c3.9,2.7,6.5,7.1,11.2,8.8c0.3,0.3,0.7,0.7,1,1c15.8,11.8,33.1,20.3,52.9,23c1.5-0.2,2.9,0.6,4.3,1\n                                    c6,1.5,6.5,2.4,4.1,8.2C383.7,734.6,384.6,735.9,383.9,737.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M522.9,594.1c-1.5-3.2-1.6-6.6-2-10c1.3-0.4,1.7,0.6,2.3,1.4c-0.4-11.3-2-22.3-9.3-31.4\n                                    c-3.4-4.3-4.6-9.5-7-14.2c-2.5-4.6-5.7-8.5-8.7-12.6c-0.9-1.2-1.9-2.3-2.5-3.7c-0.3-0.8-0.5-1.6,0.2-2.3c0.9-0.9,1.9-0.6,2.7,0\n                                    c2.4,2.2,5.4,3.6,8.2,5.5c-4.3-5.3-9.1-10.2-13.3-15.4c0.5,1.9,0.9,4,0.2,6.1c-0.2,0.4-0.4,0.8-0.7,1.2\n                                    c-1.4,1.1-2.3,0.4-3.3-0.7c-3.1-3.5-7-6.4-9.7-10.3c-3.4-4.8-9.2-5.7-13.9-8.3c-5.2-2.8-10-6.6-16-8c-2.5-0.6-4.3-2.6-3.5-5.7\n                                    c0.2-3.2,2-6.4,5.1-4.8c4.8,2.5,9.4,1.7,14.2,1.6c7.8,1.3,13,7.3,19.4,11c10.1,10.2,21,19.7,28.6,32.1\n                                    c2.9,2.9,2.4,6.6,2.6,10.2c0.1-1.2-1-2.5,0.4-3.4c1.1-0.7,1.8,0.4,2.4,1.1c1.6,1.9,2.7,4.2,4,6.3c2.9,4.9,4.1,10.5,6.8,15.5\n                                    c0.6,1.2,0.8,2.5,0,3.8c-1.6,0.8-2.4-0.4-3.3-1.3c-0.5-0.5-0.8-1.7-1.9-0.9c-0.3,0.2-0.4,0.5-0.5,0.8c-0.1,1.1,0.7,1.3,1.4,1.7\n                                    c4.6,2.3,4.6,2.8,0.8,5.2c1.8,0.1,3.8,0.8,4.1,2.7c0.3,1.8-1.1,2.8-3.2,2.8c-1.6,0-0.5,1.2-0.4,1.7c1.3,7,2.3,14.2,6.6,20.2\n                                    c0.7,0.9,1,2,0.3,2.7c-3,2.7-3.1,6.4-4,9.9c-0.4,1.4-0.9,3.2-2.9,2.7c-1.7-0.4-2.1-1.9-1.8-3.6c0.5-3.3,0-6.6,0-9.9\n                                    c0-0.6,0-1.5-0.9-1.5C523.5,592.4,523.6,593.7,522.9,594.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M522.9,594.1c-0.1-1.7-0.4-3.4,2.3-2.9c1.1,0.2,1.4,0.2,1.4,2.6c0.1,3.4,0,6.9-0.3,10.3\n                                    c-0.1,1.1-0.1,2.2,0.9,2.5c1.7,0.6,1.8-1.6,1.9-2.1c0.7-3.7,0.2-7.8,4.3-10.1c0.5-0.3,0.5-1.5-0.1-1.7\n                                    c-4.5-1.4-3.1-5.3-4.1-8.3c-1.5-4.6-3.2-9-3.7-13.9c-0.1-0.9-0.1-1.9-0.2-2.8c1.2-0.5,1.8,0.1,2.2,0.8c1,1.8,1.6,0.2,2.1-0.3\n                                    c1.2-1.4,0-1.5-1-1.7c-1-0.2-1.6-1.6-3.1-0.9c-1.4,0.6-1.7-0.6-1.7-1.6c0.1-1.9,1.2-0.8,2-0.6c1.1,0.3,2.1-0.2,2.5-1.1\n                                    c0.4-0.9-0.4-1.4-1.3-1.7c-6.1-1.9-6.1-1.9-0.7-7.1c0.7,2.3,1.1,4.6,3.5,5.5c4.3,1.6,5.1,5.5,5.5,9.3c0.2,1.9,0.3,3.9,0.2,5.8\n                                    c-0.7,0.8-0.1,0.8,0.5,0.9c1.9,1.7,2.1,4,1.8,6.3c-0.5,6.1,0.2,12.1,0.9,18.1c0.4,3.5-0.3,5.3-2.9,6.9\n                                    c-0.4,0.2-0.9,0.3-1.4,0.3c-3.3,1.8-3.6,4.9-0.1,6.2c4.3,1.6,3.5,4.1,2.5,7c-1.1,3.2-2.5,5.9-0.2,9.8c1.4,2.3-0.1,6.4-1.4,9.5\n                                    c-0.7,1.8-2.8,2.4-4.7,1.5c-2.1-1-1.1-2.3,0-3.6c0.9-1.1,0.2-2.6,0.7-3.2c-0.6,2-1.7,6.4-3.9,5.8c-3.3-1-1.1-5.1-1-7.9\n                                    c0.2-3.4,0.8-6.8,2-10.1c-2.6,6.4-1.5,13.5-4.3,19.9c-0.5,1.2-0.8,2.5-0.8,3.9c0.1,5.7-0.1,6.2-3.5,10.6\n                                    c-3.3,1.5-1.9,5.5-4.2,7.7c-5.9,5.4-9.8,12.4-14.6,18.6c-1.4,1.8-2.9,2.1-4.1-0.3c4.7-6.8,8.8-13.9,13.1-20.9\n                                    c3.8-6.2,6.2-13,7.6-19.6c1.8-8.3,5.2-16.3,5.4-25C523.2,609.2,524.9,601.6,522.9,594.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M342.9,487.1c0.1-0.1,0.2-0.3,0.2-0.4c0.8-7.4,5.1-11.1,12.3-11.9c0.4,0,0.8-0.5,1.1-0.9\n                                    c0.3-0.3,0.4-0.8,0.7-1.3c-2.7-1.4-5,0.7-7,1.2c-7.1,2-14,4.8-20.8,7.9c-2.1,0.9-3.7,0.9-5.6,0.5c-0.4-1,0.2-1.7,0.9-2\n                                    c8.4-4.1,15.3-11,24.4-13.9c0.8-0.3,1.6-0.5,2.4-0.3c0.4,0.3,0.6,0.7,0.7,1.2c-0.8,2.8-3.6,2.3-5,3.4c1.3,0.1,2.8-1.6,4.7-1.2\n                                    c3.1-0.4,6.2,1,9.2-0.5c1.4-0.7,2.5,0.1,3.4,1.3c1.1,1.6,2.6,3,4.4,5.1c-0.1-4.8,3.3-5.5,6.4-5.9c9.1-1.3,18.3-2.1,27.3-1.2\n                                    c13.5,1.4,27.1,3.5,39.8,8.9c3.2,1.4,7.7,2.2,3.5,7.3c-0.3,0.4,0.2,1.3,0.2,1.9c-1.4,2.7-3.1,1.4-4.9,0.5\n                                    c-1.2-0.7-0.8-2.9-2.6-3.2c-0.6,2,1.7,1.7,2.2,2.8c0.1,2.4-2.4,0.7-3,1.9c-6.7-2.9-13.7-4.4-20.8-5.9c-1.4-0.3-2.9-0.3-4.3-1.1\n                                    c-2.8-0.7-5.4-2.1-8.3-2.3c-1.3-0.6-3.2-1-3-2.8c0.3-2.2,2.3-1.3,3.7-1.4c6-0.4,11.7,1.3,17.5,2.7c1.7,0.4,3.5,0.5,4.3,0.7\n                                    c-6.8-0.8-14.2-3.9-22.2-3.5c-2.1,0.1-3.9,0.4-5.1,2.3c-0.4,0.3-0.8,0.6-1.3,0.8c-1.1,0.3-2.4,0.5-3.5,0.2\n                                    c-8.1-2.8-15.6,1-23.3,1.9c-7.9,0.9-15.3,4-23.6,4.7c-0.2-0.1,0.5,0.9,0.4,0.3c1.6,0,2.6,0.6,2.2,2.4c-1.3,1.6-3.6,0.7-5,2\n                                    C345,488.3,342.6,489.7,342.9,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M437.9,488.1c1-0.7,2-1.3,3-2c1.7-0.7,3.3,1.8,5,0c0.7-0.5,1.3-0.6,2,0c-1.4,3,1.3,4.1,2.9,4.5\n                                    c7.1,1.6,12.5,6.2,18.7,9.5c0.9,0.5,1.7,0.8,2.7,1.1c5.8,1.6,9.8,5.2,12.3,10.6c0.3,0.6,0.9,1.5,1.2,1.4\n                                    c3.5-0.4,4.2,2.2,5.1,4.6c0.4,1.1,1.3,0.5,2.1,0.3c0.6,0.4,1.5,0.7,1.7,0.1c0.2-0.5-0.5-0.1-0.7,0c-0.3,0.1-0.6,0.1-0.9-0.1\n                                    c-0.2-2.9,0.7-5.9-0.4-9.2c2.7,2.9,5.5,5.7,8.1,8.7c2,2.3,3.3,5.2,6.8,5.8c2,0.4-0.4,1.6,0,2.6c0.9,2.2-1.1,3.1-2.2,4.7\n                                    c-0.4-5.6-5.9-6-8.4-9.2c0.2,4.3,3.6,7.3,6.1,9.4c3.8,3.1,4.7,7.4,6.2,11c4.4,10.6,12.8,19.4,14.7,31.1\n                                    c0.2,1.4,0.3,3.1-0.2,4.4c-0.5,1.5-1.6,2.1,0.7,3.7c1.8,1.2,0.8,4.8,0.1,8.2c-1.4-2.2-2.4-3.7-3.4-5.3\n                                    c-1-8.3-3.6-16.2-6.7-23.9c-7.1-17.8-18.4-32.7-32.1-45.9C469.4,502.2,454.7,493.3,437.9,488.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2726",
                  d:
                    "M424.9,726.1c-0.6,1-1.7,0.8-2.6,1.1c-1.2,0.4-0.6,1.3-0.4,2c0.2,1,0.6,1.4,1.7,0.8\n                                    c2.6-1.7,5.5-0.6,8.3-0.9c-4,4.5-10.3,7.7-14.5,7.6c-7.9-0.3-15.9,3-23.7-0.4c-0.8-0.4-2.1-0.4-2.9-0.1c-3.2,1.2-3.3-1.1-3.8-3\n                                    c-1-6.1-1-6.1,7-7c1.7-1.9,3.3-0.7,5,0c3,1.3,6.4-0.2,9.4,0.8c-1.3-0.9-3.2,0.3-4.4-0.8c2.1-1.9,4.7-0.6,7-1\n                                    c4.3,2.1,8.6-0.1,12.9,0.2C424.2,725.5,424.6,725.8,424.9,726.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M270.9,606.1c-1.3-0.7-2.7-1.3-4-2c0.3-10.8,0.6-21.5,3.1-32.1c1-4.4,1.7-9,4.4-12.9\n                                    c2.3-3.3,1.5-7.6,3.9-11.1c2-3,5.1-5.1,6.7-9.8c2.6,5.4-0.3,9.1-1.9,12.2c-7.7,15.2-11.5,31.2-11.1,48.3\n                                    C272,601.3,271.5,603.7,270.9,606.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312E2E",
                  d:
                    "M317.9,485.1c-3.4,3.9-8.2,5.9-12,9.3c-9.2,8.1-17.7,16.7-25.2,26.4c-0.2,0.3-0.8,0.4-1.3,0.8\n                                    c-0.1-2.8,2.3-4.1,3-6.2c2.7-8.8,7.9-15.7,15.6-20.7c1,1-1.6,1.9,0.5,3.4c5.5-8.8,13.5-14.7,22.6-19.7c0.3,2.7-3.9,2.9-3.1,5.8\n                                    c0.3,0.2,0.5,0.4,0.3,0.7C318.1,485,318,485.1,317.9,485.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M350.9,487.1c-0.4-1.7-2.3-1.6-3.4-2.8c1.6-1.8,4-1.6,5.9-2.1c8-1.9,16.3-2.9,24-5.2\n                                    c7.6-2.3,14.4-0.9,21.5,0.1c0.9,1,0.8,2,0,3c-6.2-1.4-12.5-0.3-18.6,0.2C370.3,481.2,360.4,483.6,350.9,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#34302F",
                  d:
                    "M317.9,485.1c0-0.3,0-0.7,0-1c3.4-3,7.2-5.4,10-9c7.9-4.6,15.7-9.5,25-11c0.9-0.5,2-0.7,1.9,0.6\n                                    c-0.2,1.5-1.5,1.8-2.9,1.4c-10.2,3.9-18.5,11-28,16C321.3,482,320.5,485.3,317.9,485.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2D",
                  d:
                    "M375.9,725.1c-18.2-2.2-34.2-10-49.2-20.1c-1.5-1-2.9-2.2-3.8-3.9c5,2.9,10,5.8,15,8.6\n                                    c11.3,6.3,23.2,11,36,13.4c0.6,0.7,1.6,0.4,2.3,0.9C376.3,724.5,376.3,724.8,375.9,725.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2D",
                  d:
                    "M321.9,700.1c-2.4,1.9-3.1-0.8-4.2-1.8c-7.9-6.4-14.9-13.7-21.6-21.5c-5.1-5.9-7-13.4-12-19.1\n                                    c-0.2-0.2,0.5-1.1,0.8-1.6c3.9,5.9,7,12.3,11.3,18C303.7,683.9,312.7,692.1,321.9,700.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B2B",
                  d:
                    "M272.9,535.1c-1.8-0.3-2,2.1-3.6,2.3c-0.8-1.9,1.1-3.5,0.6-5.3c0-0.3,0-0.7,0-1c1.4-1.8-0.7-4.7,2-6\n                                    c3.5-4.5,5.2-10.2,10-13.7C277.7,518.9,276.4,527.4,272.9,535.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D292A",
                  d:
                    "M256.9,584.1c-4.3-2.5-2-7-2.5-10.3c-0.8-4.9,0.4-10.2,2.5-15.9c2.1,4-1,8.2,2.1,11.2v0\n                                    c1.2,2-0.4,4,0,6c-1.2,0.7-1,1.9-1,3c0.6,1.1-0.5,1.4-1,2C256.9,581.5,256.9,582.8,256.9,584.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B2B",
                  d:
                    "M262.9,555.1c-1.7,0.9-0.3,3.4-2.2,4.2c-1.7-8,1.3-18.9,7-24.3c-1.1,4.6-1.8,8.4-3.6,12.1\n                                    c1.2,1,2.5-2.1,3.7,0C265.9,549.6,262.4,551.1,262.9,555.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#343030",
                  d:
                    "M375.9,725.1c0-0.3,0-0.7,0-1c1-0.7,2-0.7,3,0c5,0.7,10,1.3,15,2c0.6,0.1,1.3,0.1,1.9,0.2\n                                    c-3.8,1.2-10.2-1.1-8.9,6.8c-1.7,0.8-1.1,3.4-3,4c-0.8-2.1-3.1-4.2,0.6-6.2c0.7-0.4,0.3-4-2.3-4.6\n                                    C380.1,725.7,378,725.5,375.9,725.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312E2F",
                  d:
                    "M424.9,726.1c-0.3,0-0.7,0-1,0c-0.6-0.7-0.6-1.3,0-2c9.6-1.9,18.9-4.6,28-8c-0.4,3.4-3.6,3.5-5.7,3.9\n                                    C438.9,721.4,432.2,724.8,424.9,726.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M342.9,487.1c1,0.7,2,1.3,3,2c-4,1.9-8,3.7-12,5.6c-0.2-0.4-0.4-0.7-0.6-1.1\n                                    C336.8,491.9,338.6,487.8,342.9,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M404.9,478.1c3.2-0.4,5.5,1.6,8,3c-4,0.2-7.9-1.6-12-1c-0.6-0.8-0.6-1.5,0-2.3\n                                    C402.3,477.5,403.6,477.4,404.9,478.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#343030",
                  d:
                    "M423.9,724.1c0,0.7,0,1.3,0,2c-3,0.5-6-0.2-9,0.8c-1.7,0.6-3.2,0-4-1.8\n                                    C415.3,725.3,419.6,725.1,423.9,724.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M267.9,619.1c5.5,0.4,1.8,3.8,2,6C268.4,623.4,268,621.3,267.9,619.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#343030",
                  d:
                    "M403.9,726.1c1.6,0,3.2,0,4.8,0c-3.3,0.5-6.6,2.1-9.8,0C400.6,726.1,402.2,726.1,403.9,726.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M266,582c-2.7,0-4.4,0-5.9,0C261.7,579.9,261.7,579.9,266,582z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M269.9,625.1c4.1,1.4,0.8,4,1,6C269.1,629.4,270.2,627.1,269.9,625.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M258.9,575.1c-3.5-2,0.9-4,0-6C260.4,571.1,260.4,573.1,258.9,575.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M256.9,580.1c0.3-0.7,0.7-1.3,1-2c1.7-0.3,3.5-0.9,3,2C259.6,580.1,258.2,580.1,256.9,580.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M271.9,525.1c-1.5,1.7-0.2,4.4-2,6C270.6,529.1,268.3,526.1,271.9,525.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M275.9,650.1c-0.2,1.7,0.7,3.6-1,5C275.1,653.4,274.2,651.5,275.9,650.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292524",
                  d:
                    "M378.9,724.1c-1,0-2,0-3,0c-0.8,0-1.6-0.2-2-1C375.6,723.4,377.5,722.5,378.9,724.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M265.1,572.1c0.1,0.8-0.3,1-0.8,0.9c-0.4-0.1-0.9-0.4-1-0.7c-0.2-0.5,0.2-0.9,0.8-0.8\n                                    C264.5,571.6,264.8,571.9,265.1,572.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M400.9,478.1c0,0.7,0,1.3,0,2c-0.7,0-1.3,0-2,0c0-1,0-2,0-3l0,0C400,476.6,400.5,477.2,400.9,478.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282423",
                  d:
                    "M519.9,656.1c0.1-1,0.5-2,0.4-2.9c-0.2-4.6,1.9-1.6,3.3-1c-3.6-11.8,3.9-22,3.9-34.5\n                                    c3.8,4.7,0.3,7.8,0.3,11c0,3.4-0.6,6.8-0.9,11c3-2.7,4.1-5.3,3.3-8.8c2.9,2.4,2.9,5.8,0.3,8.4c3.9,1,4.6,0.6,4.2-2.9\n                                    c-0.2-1.5,0.7-2.5,1-3.7c0.2-1,0.8-2.6,0.5-2.8c-5.7-3.4-0.8-7-0.3-10.5c0.3-2,3.2-4.4-2-4.8c-2.1-0.2-4.5-3.7-3.5-6.8\n                                    c0.5-1.7,2.1-3.7,4.4-1.4c-0.6,1.5-0.1,2.8-0.2,3c0.1-0.4-0.5-1.9,0.2-3c1.7-2,2.8-2.9,2.5-6.4c-0.5-5.7-1.5-11.9-0.3-17.8\n                                    c1.4,0.4,1.8,1.5,2.1,2.8c1.4,4,3.1,7.9,4.2,12.1c2.2,1,3.3,2.6,2.8,5.2c0.3,1,0.7,2,1,3c1.6,2.5,1.7,5.1,1,7.9\n                                    c-0.7,2-2.7,2-4.3,2.5c-0.7-0.2-1.2-0.6-1.4-1.2c-0.1-0.3-0.3-0.1-0.1,0.3c3.1,5.6,0.6,11.3,0.4,17c-0.1,2.1-0.1,3.9,1.6,5.4\n                                    c0.8,2.7,0.8,5.4,0.8,8.2c-0.1,1.1,0.2,2.3-1,3c-0.1-0.8-0.3-1.5-1-2c-2.7-1-3.2,1.6-4.5,2.8c-0.3,0.3-0.5,0.8-0.9,1.1\n                                    c0.6-0.2,0.8-0.9,1.4-1.1c1-0.3,1.5,0.3,1.9,1.1c-0.3,1-0.7,2-1,3c-6.5,5.9-6.8,14.1-8,22c-1,1.1-2-0.4-3.1-0.1\n                                    c-3-0.9-0.5-3.7-2.7-5.7c-0.1-0.1-0.2,0.8-0.6,1.2c-0.9,1.2-1.3,3.6-3.4,2.5c-1.9-1-1.7-3.3-0.7-4.8c1.7-2.6,2.3-5.8,5-7.8\n                                    c0.3-0.3,0.6-0.7,0.9-1.1c0.3-0.5,0.9-0.5,1.4-0.6c-0.7-0.4-1,0.2-1.4,0.6c-0.2,0.2-0.4,0.5-0.6,0.7c-1.8,1-2.9,0-3.6-1.3\n                                    C522.4,657.5,521.2,656.7,519.9,656.1L519.9,656.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2B",
                  d:
                    "M537.9,585.1c-0.3-1-0.7-2-1-3c0-2.5,0.3-5.1-2-7c-1.4-5.4,0.1-11.7-5-16c-3-9.3-6.4-18.3-12.5-26.5\n                                    c-1,2.7,1.4,4,1.7,6.2c-3.2-0.6-4.1-3.5-3.8-5.5c0.5-3.2-1.2-5-2.5-7.2c2-2.8,4-2.5,5.8,0.2c1,1.5,1.9,3.2,4.3,2.5\n                                    c1.1,0.1,1.5,0.8,1.4,1.8c0,2.3,1.6,2.8,3.4,3.2c1.2,0.7,1.8,1.9,2.4,3.1c0.5,1,1.6,2.2,0.6,3.1c-1.2,1.1-2.8,0.6-4.1-0.3\n                                    c-1.4-1.1-2.6-2.5-3.8-4.3c1.4,2.7,4.2,4,5,6.7c3.7,2.3,8.8,1.9,11.3,6.5c2.5,4.6,2.3,5-2.6,5.1c-0.2,1.7,1.2,1.9,2.2,2.2\n                                    c3.5,1.4,5.2,4.2,4,7.5c-1.2,3.3-3.9-0.7-6,0.3c0.2,2.7,1.9,3.2,4.3,3.5c2.3,0.3,6.2,8.7,5,10.5c-0.4,0.5-1.8,0.3-2.8,0.4\n                                    c0.9,2.4,3.8,2.7,4.8,5c0.9,2.1,1.3,4-0.5,5.4c-1.8,1.4-3.4,0.6-4.5-1.3c-2.4-0.9-2-3.5-3-5.1c0.1,1.6,2.1,3.6-0.3,5\n                                    C538.3,587.7,538.7,585.6,537.9,585.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B2A",
                  d:
                    "M484.9,494.1c-6.6-3.2-11.8-8.8-19-11c-5.6-1.6-11-3.6-15.4-7.6c-0.7-0.2,2-2.6-0.9-1.4\n                                    c-0.7,0.3-1.5,0.1-2.3,0c-9.1-2.4-18.4-4.1-27.2-7.5c-1.2-1.2-0.8-2.5-0.2-3.8c0.3-0.5,0.7-0.8,1.2-1.1\n                                    c1.3-0.5,2.6-0.6,3.8,0.4c0.3,0,0.7,0,1,0c0.5,0.7,2.1,0.4,1.9,1.2c-0.6,2.5,1.1,0.6,1.5,0.7c0.9,0.3,1.9,0.3,2.6,1.1\n                                    c0.4,0.3,0.8,0.8,1.2,0.8c10.6-0.9,19.5,3.9,28.5,8.3c1.8,0.9,4.1,1.1,4.9,4.1c0.8,2.7,4.4,1.3,6.6,2.5\n                                    c6.7,3.9,12.8,8.7,19.1,13.3c2.1,1.5,0.2,2-0.3,3C488.4,498.8,487.3,495,484.9,494.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373231",
                  d:
                    "M484.9,494.1c2.7,0.2,4.2,3.1,7,3c1.6,1.9,3.7,2.1,6,2c2.8-0.1,3,2.3,4,4c2,2,4,4,6,6\n                                    c2.2,1.2,4.2,2.6,5.6,4.7c0.7,1,1.4,2.1,0.4,3.1c-1,1.2-2.1,0.4-3-0.4c-2.1-1.8-4.6-3.2-5.7-4.6c1.8,1.9,4.9,3.8,7.6,6.1\n                                    c0.6,1.3,1.6,2,3,2c5.7,2.2,7.4,4.3,7,9c-2.1,2.3-2.5,2.5-4.6-1.2c-1.5-2.7-2.9-3.4-5.4-1.8\n                                    C505.6,513.7,494.2,504.8,484.9,494.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#34302F",
                  d:
                    "M351.9,470.1c-1.7,0.3-3.4,0.5-6,1c2.5-1.7,4.3-2.8,6-4c3-2.1,6.3-3.5,10-4c0.8,0,1.6-0.2,2-1\n                                    c7.2-2,14.8-2.1,22-4c0.7,0,1.3,0,2,0c1.1,3.5-1.9,3.7-3.8,4.2c-6.2,1.6-12.1,4.2-18.5,4.8\n                                    C361.1,468.4,356.5,469.3,351.9,470.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2E2C",
                  d:
                    "M420.9,462.1c0,0.3,0,0.7,0,1c-4.4,1.4-8.9,1.2-13.5,1.4c-4.1,0.1-8.2,0-12.3,0.1\n                                    c-4.3-0.9-8.7,2.4-13,0c-1-2.8,1.5-2.3,2.8-2.9c5.1-2.4,10.6-2.1,16-2.5c0.3,0,0.7,0,1,0c6.2-1.1,12,1.4,18,2l0,0\n                                    C420.2,461.5,420.8,461.5,420.9,462.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262320",
                  d:
                    "M512.9,518.1c-5.1-1.5-7.9-5.7-10.9-9.8c3.6,2.9,7.3,5.8,11.7,9.4c-0.7-4.6-4.5-5.7-5.8-8.6\n                                    c7.4-1.3,10.3,4.2,14.5,9.9C518.6,517.5,515.8,517.4,512.9,518.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M400.9,459.1c-4.5,1.9-9.5,1.7-14.2,2.9c-1.8,0.4-3.5,0.6-4.8,2.1c-5.7,6-8.1,6.3-17,2\n                                    c6.3-1.7,12.7-3.3,19-5c1.8-0.5,3.7-0.7,4-3C392.3,457.7,396.6,458.7,400.9,459.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262421",
                  d:
                    "M527.9,542.1c-3.4-2.3-5.7-5.5-7.6-9.1c3.7,1.6,5.6,5.8,10.2,6.5c-1.2-1.8-2.4-3.6-3.5-5.4\n                                    c-0.8-0.5-1.6-0.9-1-2c6,0.8,8.8,5,11.1,10.8C533.6,542.1,530.8,539.6,527.9,542.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#36312E",
                  d:
                    "M545.9,602.2c-1.5-1-0.6-3.8-3-4c-1.4-2.5-1.4-5.3-1-8c1.4,0.7,2.7,1.7,4.4,2.2\n                                    c3.1,0.8,5.2,7.8,3.2,10.1C548.3,603.8,547.1,602.5,545.9,602.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292422",
                  d:
                    "M522.9,529.1c-0.6-4.4-4.1-6.4-7-9c6.5,0,11.3,3.5,14.7,11c-1.9,1.1-3.9-2.6-5.7,0\n                                    c-0.3,0.5-0.7,0.5-1,0C523.9,530.3,523.7,529.6,522.9,529.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#25211E",
                  d:
                    "M501.9,503.1c-1.9-0.7-2.5-2.8-4-4c4.9-1.8,9.1,0.5,13.5,7.4c-2.5,0.2-4.4-0.8-6.1-2.4\n                                    C504.5,503.3,503.7,501.2,501.9,503.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M541.9,590.1c0.8,2.6,1.2,5.3,1,8c-0.5-0.2-1.3-0.3-1.3-0.5c-0.2-4.5-2.2-8.4-3.7-12.5\n                                    c0.6-0.2,1.8,2.7,1.9-0.1c0-2-1-4-1.8-6.9c3.3,2.9,3.1,6.5,4.9,9C541.7,587.9,541.9,589,541.9,590.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#433E3B",
                  d:
                    "M546.9,614.1c0-3,0-6,0-9c2.4,1.3,3.6,3.4,4,6c-1,1.6,2,4.7-2,5C547.3,616.4,546.6,615.7,546.9,614.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M385.9,458.1c-7,3-14.5,3.3-22,4c2.1-2.5,5.2-2,8-2.4C376.5,459,381.2,458.6,385.9,458.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M419.9,461.1c-6.2,1-11.9-2.1-18-2C408.2,457.1,414.1,458.8,419.9,461.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M361.9,463.1c-3.1,1.8-6.5,3.2-10,4c0-0.3,0-0.7,0-1c0.7-0.5,1.5-1,2.2-1.5c-0.4-0.2-0.8-0.3-1.2-0.5\n                                    C355.6,460.7,358.9,463.1,361.9,463.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M431.9,465.1c-0.3,0-0.6,0-1,0c-2.4,0.1-4.8,0.5-5-3c1.6,0,3.2,0,4.8,0\n                                    C433.3,462.3,432.5,463.7,431.9,465.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M420.9,462.1c-0.3-0.3-0.7-0.7-1-1c1.7-0.1,3.9-1.9,5,1C423.6,462.1,422.2,462.1,420.9,462.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373231",
                  d:
                    "M523.9,531.1c0.3,0,0.7,0,1,0c0.3,0.3,0.7,0.7,1,1c0.3,0.7,0.7,1.3,1,2\n                                    C524.5,534.6,524.3,532.8,523.9,531.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383331",
                  d:
                    "M494.2,493c-0.7-0.1-1.2-0.6-1.2-1.3c0-0.5,0.2-1.1,0.8-0.8c0.5,0.3,1.1,0.8,1.3,1.4\n                                    C495.4,492.9,494.7,493,494.2,493z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302B29",
                  d:
                    "M276.9,674.1c1,1,2,2,3,3c4.6,4.9,8.3,10.7,13.3,15.3c1,1,2.1,2.6,0.4,3.8c-1.5,1.1-2.2-0.7-3.1-1.5\n                                    c-4.8-4.4-9.1-9.5-15.6-11.6c-1-1.3-2-2.7-2.9-4c-2.2-2.9-4.1-6-6-9c-1.2-4.2-2.9-8.2-5-11.9c4.7,0.7,6.8,4.7,8.7,7.9\n                                    C271.5,669.5,273.6,672.2,276.9,674.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2A29",
                  d:
                    "M249.9,619.1c2.8-0.6,2.1-2.7,1.6-4.3c-0.8-2.6-0.8-5.2,0.3-8c1,8.5,6,15.8,7.3,25.3\n                                    c-3.6-2.7-6.4-4.8-9.2-7C250,623.1,248.5,621.1,249.9,619.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M248.9,611.2c-2.9-3.7-1.7-8-2.2-13.4C249.7,602.9,248.5,607.2,248.9,611.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F3B38",
                  d:
                    "M252.9,634.1c-0.1,2,2.3,4,0,6c-1-3.6-2.1-7.2-3.5-12.2C252.3,630.1,252.3,632.3,252.9,634.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#423E3D",
                  d:
                    "M249.9,619.1c-0.8,2,1.6,4,0,6c-1.6-3.4-2.2-7-1.9-11.2C249.6,615.6,249.9,617.3,249.9,619.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#24201F",
                  d:
                    "M274.9,683.2c3.7-2.4,5.3,1.3,7.3,2.9c3.8,2.9,7.2,6.4,11.3,9.3c-4.4-6.2-10.8-10.9-13.6-18.2\n                                    c2.5-0.5,1.9-3,2.5-5.4c3.9,4.7,7,9.2,9.6,13.6c3.7,6.3,9.9,9.5,14.7,14.4c12.4,12.7,27.8,20.8,44.2,27.6\n                                    c4.9,2,10.7,2.2,14.8,6.3c0.3,0.3,1.3,0.1,1.9,0c6-0.6,11.1,2,16.3,4.5c1.4,3.3,5.1,0.2,7.2,3c-3.3,0-6.2,0-9.2,0\n                                    c-4.9,0.7-9.2-2.1-14-2c-8.1,0.9-15.3-2.6-22.8-4.5c-2.4-0.6-4.6-1.8-7.2-1.5c-2.7,0.1-5.4-0.1-8-1.1c2.6-3.3,6,0,9.2-1.3\n                                    c-3.1-2.5-6.2-4.7-9.8-5.8c-7.8-2.4-14.5-7.1-21.4-11.2c-1.9-1.2-3.9-1.8-6.1-1.7c-0.5-1.1-2.2-0.9-2.3-2.7c3-1,5.4,1.9,8.6,1\n                                    c-5.3-0.5-7-5.6-11.1-8c-5-3-9.1-8.3-13.4-12.8c-1.2-1.2-2.3-2.6-3.8-0.4c-1.1-1.5-2.3-3-4-4\n                                    C275.6,684.5,275.2,683.8,274.9,683.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383331",
                  d:
                    "M490.9,717.1c4.5-6.3,10.9-11,14.6-18.1c1.2-2.3,4.5-1.2,5.4,2.1c-4.5,1.7-6.5,6.2-9.7,9.3\n                                    C498.1,713.4,494.7,715.5,490.9,717.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M526.9,660.1c-0.7,4.4-5.3,7.4-4.7,13.2c2.3-2.4,2.6-5.3,5.1-6.5c1.6,2.5,1.3,5.4,1.6,8.2\n                                    c-2,4.7-7.6,7.7-6,14.2c-3.1-2.7-4.3,0.1-5.4,1.7c-1.1,1.5-1.5,3.5-3.6,4.2c0.8-5,4.1-8.8,6.6-13c1.5-2.5,1-3-1.6-2.1\n                                    c-1.3-6.3-3.4-12.6,1.4-18.5c1.4-1.7,0.5-3.7-0.4-5.5c1.4,0,3.6-1.8,3.6,1.7C523.6,659.2,525.3,660.1,526.9,660.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2B",
                  d:
                    "M531.9,675.2c-0.8-5.2,0.5-10.3,1.4-15.4c0.6-3.2,2.2-6.6,6.5-6.7c0,3,0,6,0,9\n                                    c-3.5-0.9-4.2,2.1-5.3,4.1c-1.4,2.4-2,5.1-1.6,7.9c0,0.3-0.1,0.6-0.2,0.9C532.5,675.1,532.2,675.1,531.9,675.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M543.9,637.1c-3.5,0.2-3.4-2.3-2.9-4.3c1.4-4.8,0.6-9.8,1.3-14.7c0.4-2.7-3.2-4.4-1.8-7.5\n                                    c3.3-0.2,1.5,3.6,3.3,4.5c1.7,0.5,3.8,0.5,4,3l-0.1,0.1c-0.3,3.4,0.2,6.9-2,9.9c-0.6,0-1.5-0.3-1.7-0.1\n                                    c-0.8,1.2,0.4,2.1,0.7,3.1C546.2,633.4,546.6,635.5,543.9,637.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4B4643",
                  d:
                    "M545.9,628.1c-0.1-3.5,0.1-6.9,2-9.9c3.3,3.9,0.8,8,0.9,12.1C546.9,630.3,547,628.5,545.9,628.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484340",
                  d:
                    "M543.9,637.1c1.2-1.9,1.1-3.9,1-6c1.3,0,1.9,0.7,2.1,2c-0.1,4.1,0.3,8.3-2,12\n                                    C543.5,642.6,543.3,639.9,543.9,637.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#14100E",
                  d:
                    "M547.9,618.1c-1.1-1.4-3.5-0.9-4-3c0.3-2.6,1.7-1.6,3-1c0.7,0.7,1.3,1.4,2,2\n                                    C548.9,617,548.7,617.7,547.9,618.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#56514E",
                  d:
                    "M265.9,670.1c2.7,2.5,4.8,5.5,6,9C268.8,676.9,266.8,673.8,265.9,670.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2B",
                  d:
                    "M540.9,650.1c-2.7-1.8-2.6,1.7-4.6,2.9c0.6-3.2,1.4-5.3,3-7.2c1.5-1.7,2.6-1.8,3.6,0.3\n                                    C542.2,647.5,541.6,648.8,540.9,650.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M519,680c-0.2,2-0.2,3.6-2.6,3.7C516.1,681.7,517.6,681,519,680z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M364.9,466.1c2.6,0,5.1-0.1,7.5,1.5c1.5,1,4,1.4,4.5-1.6c0.6-3.7,3.9,0.2,5-1.9c4.3-0.3,8.7-0.7,13-1\n                                    c5.9,1.2,11.9,0.2,17.8,0.5c2.7,0.1,5.3,0.2,7.2,2.5c5.4,1.2,10.8,2.3,16.2,3.6c4,1,7.8,2.2,11.8,3.4c0.9,0.8,2.5,0.5,3,2\n                                    c5,2.7,10,5.3,15,8c-4.7,1-9,2.6-13.7-1c-3.1-2.4-4.3,1-4.3,4c-0.7,0-1.3,0-2,0c-3.3-2.6-1.8-4.1,2.1-5.1\n                                    c-7.8-4.7-15.9-6.9-23.8-8.4c-9-1.7-18.1-4.1-27.4-3.5c-7.9,0.5-15.9,0.2-23.7,2c-2,0.5-3.8,0.9-2.2,3.5\n                                    c0.7,1.2,0.3,1.9-0.8,2.3c-1.1,0.3-2.5,0.5-2.9-1c-0.4-1.6-0.9-2.9-2.5-3.4c-1.5-0.4-2.1-7-4.7-0.8c-2.3-2.4-5.6,0.1-8-1.6\n                                    C355.8,467.4,360.6,467.7,364.9,466.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2B",
                  d:
                    "M535.1,576.2c-0.4,0.5-0.6,1.3-1.1,1.4c-0.9,0.2-1-0.6-0.9-1.2c0.1-0.8,0.7-1,1.3-1.2\n                                    C535.5,575,534.6,575.9,535.1,576.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M400.9,478.1c-0.7-0.3-1.3-0.7-2-1c0.2-2.4,1.7-3.1,3.8-3c4.8,0.2,9.6-0.4,14.3,1\n                                    c3.8,1.1,7.6,2.4,11.7,2.1c1.7-0.1,2.8,0.8,4,2.9c-10.4-1.9-20-4.9-30-4.9c-0.7,2.5,1.9,1.7,2.2,3\n                                    C403.6,478.1,402.2,478.1,400.9,478.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M436.6,485.7c2.2-0.8-0.6-4.6,2.6-4.2c1.3,0.2,2.8,1.4,2.3,3.3C440.7,487.4,438.5,485.6,436.6,485.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M492.9,518.1c1.4-0.5,0.8-3.9,3.3-2.5c1.5,0.9,0.4,2.5-0.4,3.4C494.3,520.8,493.3,520.1,492.9,518.1\n                                    L492.9,518.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M526.7,660.3c0.6-2,1.1-3.4,2.8-2.6c0.9,0.4,2.7,1.8,0,2.4C528.9,660.2,527.8,659.6,526.7,660.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M534.8,606.2c0,1.6,0,3.2,0,4.8C534,609.3,533.4,607.7,534.8,606.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M540.9,605.2c0.3,0.7,0.5,1.1,0.5,1.4c0,0.2-0.3,0.6-0.6,0.7c-0.7,0.3-0.9-0.3-0.8-0.8\n                                    C540.1,606.2,540.5,605.8,540.9,605.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M419.9,466.1c-7.1-2.5-14.5-2.2-21.8-1.8c-1.4,0.1-2.6,0.4-3.2-1.2c8.7,0,17.3,0,26,0\n                                    C420.6,464.1,420.2,465.1,419.9,466.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M450.9,475.1c-1-0.7-2-1.3-3-2c1.4,0.2,2.8-0.5,4,0.5C452,473.7,451.3,474.6,450.9,475.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M391.9,465.1c-1.2,1.1-2.4,2.4-5.3,0.4C389.1,465.3,390.5,465.2,391.9,465.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M403.3,466.5c-1.2-0.2-2.3-0.4-4.1-0.7C401,464.9,402.2,464.9,403.3,466.5z"
                }
              })
            ]),
            _vm._v(" "),
            _c("g", { attrs: { id: "disk" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M402.8,655.1c-6.2-4.4-12.9-3.5-19.7-2c-7.5,4.3-12.7,11.1-18.5,17c-7.5,7.7-15.2,15.2-21.1,24.2\n                                            c-0.8,2.8-2.5,4.1-5.5,3.3c-2.9-0.8-2.4-3.1-2.2-5.2c0.1-0.5,0.2-0.9,0.3-1.4c0.2-0.4,0.4-0.8,0.8-1.2\n                                            c0.7-0.8,1.9,2.3,2.5-0.5c0.4-1.7,2.1-2.9,3.2-4.3c10.7-13.5,22.3-26.3,33.7-39.2c3.1-3.5,7.5-4,11.7-5\n                                            c3.6-0.7,7.3,0.1,10.9-0.8c1.3-0.2,2.5-0.2,3.4,1c0.8,0.7-1.3,1-0.4,1.4c4.3,1.4,7.1,4.7,9.8,8.1c5.7,6.2,10.3,13.5,16,19.7\n                                            c2.5,2.7,5.3,5.1,7.9,7.7c0.5,0.8,0.7,1.7,0.8,2.7c0.2,1,0.1,2.1,0.8,2.8c4.9,4.6,8.2,10.7,13.9,14.6c3.8,1.7,9.1,0.8,11.8-2\n                                            c1.3-1.4,1-3,0.5-4.6c-0.7-1.9-2-3.4-2.5-5.4c-1.5-4.5-4.5-8.1-6.9-12.1c-7.7-12.8-16.4-25-24.1-37.8\n                                            c-7.2-11.8-0.7-31,12-36.3c19.8-8.2,39.8-15.8,59.9-23.3c1.5-0.6,3.3-0.8,4.2-2.4c0.5-0.7,1.2-1,2.1-1.3\n                                            c5.8-1.6,6.5-2.6,5.5-7.2c-1.6-7.4-3.2-8.7-9.3-7.7c-11.6,2.3-22.7,6-33.9,9.8c-8.3,2.9-16.7,5.3-24.8,8.8\n                                            c-1.4,0.7-2.8,1.2-4.5,1.1c-2-0.5-3.9-0.1-5.9,0.4c-10.2,2.9-22-1.7-27.8-10.6c-1.4-2.1-2.3-4.4-4.1-6.2\n                                            c-2.6-5.2-0.8-11.1-2.4-16.5c-0.4-5.7,0.5-11.5-0.5-17.2c-0.2-0.6-0.3-1.1-0.4-1.7c0.1-10.7-1.9-21.4-1.3-32.1\n                                            c0.1-1.6,0.1-3.2,0.6-4.7c0.3-0.8,1-1.1,1.8-1.2c-1-0.5-1.3,0.7-2,0.9c-1.9,0.6-3.8,0.7-5.6-0.4c-0.9-0.1,1.7-2.6-1-1.5\n                                            c-0.9,0.4-1.8,0.6-2.8,0.6c-0.7,0,0.1,0.9-0.1,0.3c-0.1-0.2,0.1-0.3,0.4-0.3c1.2,0.1,2.7-0.7,3.4,1c-1.1,2-3.1,1.7-4.9,2\n                                            c-3.9,3.1-3,7.8-3.7,11.8c-1.8,10.5-1,21.2-1.1,31.8c0,3.6-2.2,7.2-0.1,10.7c0.3,0.7,0.5,1.4,0.6,2.2c0.2,1.9-2,3.7-0.6,5.7\n                                            c0.1,0.4,0.1,0.9,0.1,1.3c-1.5,2-0.2,3.8,0.5,5.6c0.4,1.7,0.4,3.4,0.2,5.1c-3.5,9.7-11,14.9-20.4,17.8\n                                            c-6,0.4-11.8-2-17.8-1.8c-10.2-0.8-19.5-5.2-29.6-6.6c-1-0.2-1.9-0.6-2.7-1.3c-3.1-3.4-8.1-2.6-11.6-5.4c0,0,0.8,1.3-0.2,1.8\n                                            c-1.2,0.8-2.5,0.5-3.9,0.4c-2.3-0.3-4.9-1.2-6.1,1.6c-1.3,2.9-2.4,6,0.6,8.7c0.4,0.3,0.6,0.8,0.8,1.2c0.2,0.4-0.4,1-0.3,1.1\n                                            c5.4,1.4,10.2,4.5,15.7,5.7c12.5,4.6,25.3,8.5,37.5,13.8c2.9,1.5,6.1,2.6,8.3,5.4c0.3,0.4,0.5,0.8,1.1,0.9\n                                            c5.1,0.8,6.6,3.1,4.3,7.7c-0.8,1.6,0.4,2.2,0.5,3.2c0.2,1.8,0.9,3.5,0.9,5.4c0,1.5-0.1,3.1,0.3,4.6c0.1,0.4,0.2,0.9,0.3,1.3\n                                            c0.1,0.7,0,1.3-0.2,2c-0.5,1.8-1.5,3.2-3,4.3c-2.3,2.1-3.9,4.7-5.7,7.2c-0.2,0.4-0.5,0.8-0.8,1.1\n                                            c-9.2,11.2-17.3,23.1-25.2,35.1c-0.5,0.8-1,1.7-1.9,2.2c-0.5,0.2-1,0.2-1.5,0.1c-4.1-1-3.5-3.7-2.3-6.5\n                                            c3-5.3,6.7-10.2,8.8-16l0,0c3.4-3,5.1-7.3,7.4-11c3.2-5,6.6-9.9,9.1-15.4c3.2-7.1,3.2-14-1.6-20.5c-0.3-0.3-0.6-0.6-1-0.9\n                                            c-3.7-2.9-8.3-4.3-12.3-6.7c-3.6-1.9-7.6-3-11.1-5C312,597,303.7,593,295,590c-2.7-0.5-5.3-1.1-8.1-0.4c-3,0.7-5.2-1.1-7-3.4\n                                            c-1.2-4.2,0.3-8.1,1.3-12c1.1-4.3,2.8-8.4,4-12.7c0.9-3.3,2.6-4.9,6.1-3.6c1.3,0.1,2.5,0.1,3.8,0.2c1-0.8,2-0.9,2.9,0\n                                            c1.8,1.7,3.7,3.2,6.3,3.8c15.4,3.3,30.9,6.9,46.6,8.6c13.2,1.4,19.5-3.3,21.1-16.6c2.3-18.3,4.6-36.6,5.7-55.1\n                                            c0.1-1,0-2.1,0.5-2.9c2.5-4.4,2.9-8.8-0.4-13.3c9.5-3.1,18.8-2.7,28-2.9c1.8-0.1,2.9,0.7,2.9,2.6c-0.2,4.6,1,9.2,0.3,13.9\n                                            c-1.3,8.6,0.2,17.3,1.1,25.9c1.3,11.4,2.3,22.8,4.7,34.1c1.5,7,7.6,11.8,14.8,11.7c6.7-0.2,13.1-2.3,19.5-3.9\n                                            c14.7-3.7,29.3-7.7,44-11.4c6-1.5,11.2-4.6,16.8-6.9c2.4-1,3.1-0.8,4.1,1.2c4.6,9.9,8,20.1,10,30.8c0.6,3.5-2.5,6.4-7.3,5.4\n                                            c-7.6-1.5-14.1,1.3-20.7,4.1c-14.3,6-28.5,12.2-42.4,18.8c-2.7,1.3-5.2,2.8-7.6,4.7c-8,6.4-10.1,14.6-5.3,23.7\n                                            c8.7,16.5,17.8,32.7,27.7,48.5c2,3.2,4.5,6.2,6.7,9.2c0.9,1.7,0.6,3.2-1,4.3c-7.4,5.2-14.9,10.5-23.3,14.1\n                                            c-1,0.4-1.9,0.5-2.7-0.3c-1.4-2.3-2.7-4.6-4.1-6.8c-1.1-3.8-3.9-6.4-6.4-9.3c-10.2-11.5-20.6-22.8-30.4-34.7\n                                            C405.9,657.7,404.5,656.3,402.8,655.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("AF5D5B"),
                    d:
                      "M402.8,655.1c5.4,1.1,7,6.3,10.2,9.7c7.8,8.1,15.3,16.7,22.4,25.4c3.3,4,8.1,7.1,8.5,13\n                                            c-13.1-15.1-26.1-30.1-39.2-45.2C404,657.1,402.9,656.4,402.8,655.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("AB5555"),
                    d:
                      "M343,694c2.9-6.3,8.1-10.8,12.6-15.8c6.8-7.5,14.2-14.4,21.3-21.5c1.8-1.8,3.5-3.5,6.3-3.6\n                                            c-12.2,11.2-23.4,23.3-34.4,35.5c-2.1,2.3-3.8,5.1-5.6,7.6C342.4,695.5,342.4,694.8,343,694z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B16260"),
                    d:
                      "M344.9,613.1c4.9,4.3,5.8,12.8,2.3,20.7c-3.7,8.2-9.2,15.4-13.6,23.2c-0.8,1.5-1.5,3.1-3.5,3\n                                            c4.5-7.5,8.9-15.1,13.7-22.5C348.8,629.5,349.5,621.5,344.9,613.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B46764"),
                    d:
                      "M339,701c-0.2,2.6-1.1,3.8-3.7,1.9c-6-4.4-12.2-8.6-17.7-13.6c-3.9-3.5-3.6-5.8,0.3-8.5\n                                            c0.7,0.4,0.8,1.1,0.8,1.8c-0.7,2.8,1.2,4.2,2.9,5.6c1.7,1.9,3.5,3.7,5.6,5.1c1,0.8,2,1.6,3.1,2.3c1.6,1.3,3.2,2.7,5.3,3.5\n                                            C336.8,699.6,338.1,699.9,339,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B56B68"),
                    d:
                      "M448,710c7.8-1.8,14.2-6.1,20.3-10.9c2.5-2,6.8-2.6,6.7-7.1c1.8,1.5,2,3,0,4.5\n                                            c-7.7,5.8-15.8,11.2-24.8,14.9C449,711.8,448,711.9,448,710z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A95252"),
                    d:
                      "M291.3,557.9c-1.9,0.2-4.1-0.1-4.9,2.5c-2.6,8.5-6.5,16.7-6.5,25.8c-2.2-2.3-0.9-5-0.5-7.4\n                                            c1.2-6.3,3.3-12.4,5.3-18.6C286.1,556.1,288,555.6,291.3,557.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9E3A40"),
                    d:
                      "M339,701c-1.4,0.1-2.7-0.3-4-1c-0.8-1.3-2.1-2.4-2-4.1c0.4-2.2,1.1-4.2,4-3.9\n                                            c0.7,1.5-1.9,3.8,0.8,4.6c2.2,0.7,4.2-0.2,5.2-2.6c0,0.7,0.1,1.5,0.2,2.2C343.1,699,340.4,699.4,339,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("BB7773"),
                    d:
                      "M295,590c9.3,1.8,17.3,6.6,26,10.1c0.3,0.3,0.4,0.5,0.3,0.8c-0.1,0.3-0.2,0.4-0.3,0.4\n                                            C312.2,597.6,303.3,594.5,295,590z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3E41"),
                    d:
                      "M318,683c0-0.7-0.1-1.5-0.1-2.2c0.7-1.3,1.3-2.6,2-3.9c0.7-0.3,1-1.6,2.2-0.9c-0.9,2.5-1.3,4.9,2,6\n                                            c0.7,2.1,0.2,3.7-2.1,4.5C320,685.9,317.1,686.6,318,683z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B36663"),
                    d:
                      "M322,676c-0.7,0.3-1.5,0.6-2.2,0.9c3.4-5.6,6.8-11.3,10.2-16.9C329.2,666.3,324.9,670.8,322,676z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B36764"),
                    d:
                      "M332,605c4,2.4,8.9,3.1,11.9,7.2c-4-2-8-4.1-11.9-6.1c-0.3-0.3-0.4-0.5-0.3-0.7\n                                            C331.8,605.1,331.9,605,332,605z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B46966"),
                    d:
                      "M332,605c0,0.4,0,0.7,0,1.1c-3.7-1.6-7.4-3.2-11.1-4.8c0-0.4,0-0.8,0.1-1.2\n                                            C324.6,601.7,328.3,603.4,332,605z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D2C34"),
                    d:
                      "M364,582c5.3-2.4,10.1-5.6,14.2-9.7c2.2-2.1,3.9-4.4,4.8-7.3c2.7-0.2,3.4,4.3,6.7,2.6\n                                            c0.3-2.6-0.1-4.9-3.5-5.6c-1.6-0.3-2.5-1.4-2.8-3c-0.8-1.6-0.7-3.3-0.5-4.9c0-0.3,0-0.7,0-1c-2-1.7,0.7-3.3,0-5\n                                            c0-0.7,0-1.3,0-2c-0.8-1.2-0.5-2,1-2.2c0.7,0.4,1.3,1,1.8,1.6c1,1.2,2.1,2.2,3.8,1.6c1.9-0.7,2-2.4,2.1-4\n                                            c0.1-3.8,0-7.5,0-11.3c0-1.6,0-3.2-0.1-4.9c0-2.6,0-5.2,0-7.8c0.2-1.5,0.2-3.1,1.4-4.2c0.7-0.2,1.2,0.1,1.6,0.6\n                                            c1.9,5.7,1.1,11.5,0.9,17.3c-0.5,12.5,1.3,24.8,1.2,37.2c0.5,1.7,0.4,3.3-0.6,4.8c-1.3,2-3.9,2.5-5.2,4.5\n                                            c-1,1.6-0.6,3.3-0.3,4.9c0,0.5,0,0.9-0.2,1.3c-3.4,2.9-7.7,4.5-10.8,7.8c-1.2,1.2-2.7,1-4.2,0.5c-3-1-5.5-0.3-7.7,1.9\n                                            c-1.4,1.4-2.8,2.2-4.2-0.1c-0.2-0.6-0.3-1.3-0.2-1.9c1.3-4.6,1.7-8.7-4.8-9.3c-0.7-0.1-0.8-0.9-0.6-1.6\n                                            C359.8,581.6,362,582,364,582z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("85252C"),
                    d:
                      "M358,583c2,2.6,7.5-1.3,7.8,3.9c0.1,3-1.1,6.1-1.8,9.1c-0.2,0.2-0.4,0.3-0.7,0.5\n                                            c-5.4,0.2-10.4-1.8-15.4-3.5c-9.2-3-18.5-5.4-28.3-4.7c-2.2,0.2-4.3-0.3-6.3-1.1c-0.5-0.2-0.9-0.4-1.3-0.7\n                                            c-0.7-3.7-2.5-6.6-6.3-8c-0.4-0.3-0.7-0.7-1-1.1c-0.4-4.5,0.9-5.8,5.1-5.3c2.1,0.2,3.9,2,6.2,0.9c10.2,1.3,19.9,5.2,30.1,7\n                                            C350.2,580.4,354.2,581.4,358,583z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A13F43"),
                    d:
                      "M506,574.9c1,1.9-0.6,1.8-1.6,2.1c-20.4,7.5-40.6,15.6-60.8,23.4c-11.1,4.3-13.8,12.8-15.6,22.8\n                                            c-1.1,6,1.4,11,4.6,15.8c9.2,14.2,18.3,28.4,27.5,42.6c0.9,1.4,1.8,2.8,2,4.5c-2.5,0.5-3.4-1.5-4.4-3.1\n                                            c-2.3-3.3-4.2-6.9-6.4-10.4c-4.6-5.5-7.2-12.4-12.1-17.8c-4.1-5.3-7.2-11.4-11.1-16.8c-7.8-13.5-2.2-31.8,11.7-38.7\n                                            c3.6-1.8,7-3.8,10.8-5.1c7.7-2.4,15-6.2,22.6-8.8c1.8-0.4,3.7-0.8,5.3-1.8c0.4-0.2,0.9-0.4,1.3-0.6c8-3.1,15.9-6.3,24.1-8.7\n                                            C504.7,574.2,505.4,574.4,506,574.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171D"),
                    d:
                      "M396,571c-1-0.8-0.9-2-1-3.2c-0.8-17.6-1.3-35.2-1-52.8c-2.5-7.2-1.6-14.6-0.5-21.9\n                                            c0.2-1.5,1.3-2.6,3-2.9c2.2-0.3,2.8,1.2,3.5,2.8c0.3,11.3,0.7,22.7,1,34c-2.8-0.7-0.9-2.9-1.4-3.8c0-1.1-1.1-0.3-0.5-0.5\n                                            c0.2-0.1,0.3,0,0.3,0.4c0.5,5.1,0.3,9.8-1.4,14.9c-2,6-0.5,12.8-0.6,19.3c-0.1,2,0.1,4,0,6C397.1,565.8,398.2,568.7,396,571z\n                                            "
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("5D1316"),
                    d:
                      "M396,563c0-6.8-0.1-13.6,0-20.4c0-3.3-0.6-6.6,2.4-9.7c1.4-1.4,0.5-5,0.6-7.7c0.1-1.7,0-3.5,0-6\n                                            c1.9,2.9-0.2,5.8,2,7.7l0,0c1,4.2,0.2,8.5,0.5,12.7c0.1,1.8-0.5,3.6,0.5,5.3c1.8,5.5,0.2,11.5,2,17c1.4,2,2.3,4.2,2.6,6.6\n                                            c-0.4,2.8-1,5.2-4.5,5.6c-3.8,0.4-5.5-1-5.7-4.9C396.4,567.2,397.1,565,396,563z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("631418"),
                    d:
                      "M402.1,641.9c-0.8-1-1.9-0.9-3-0.9c-4.4,1.2-9-0.2-13.4,1c-1-0.1-2,0.8-2.9,0\n                                            c-0.6-2.9,1.6-2.9,3.3-3.2c3-0.5,6-0.2,8.2-0.2c-4,1.6-6.6-2.1-9.8-4.3c-1.2-0.8-1-2-0.5-3.1c2.3-2.6,1.7-6.1,2.9-9.1\n                                            c0.7-0.4,1.4-0.2,2,0.2c0.4,0.3,0.7,0.7,0.9,1.1c0.7,3.2,4.9,4.8,4.2,8.7c0.3,0.6,0.8,1.5,1.4,1c0.9-0.7-0.4-1.3-0.6-2\n                                            c0.4-3.4,3.1-3.9,5.7-4.6c0.5,0,1,0,1.4,0.1c1.1,0.4,2.1,1.2,3.1,1.8c2.2,1.9,4.7,2.8,7.7,2.5c4.4,0.6,7,3,7,7.6\n                                            c-2,1.9-2.8-0.2-3.7-1.2c-1.6-2-2.6-1.5-4.3,0.1c-2.1,2.1-3,5.1-5.8,6.5C404.2,644,403,643.2,402.1,641.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("95373E"),
                    d:
                      "M360.1,625.2c0-0.7-0.1-1.3-0.1-2c0-3.1-3.1-5.9-0.2-9.5c0.8-1.1-0.5-4.7-3.3-6.3\n                                            c0.1,1.3,0.1,2.1,0.2,3.6c-3.4-3.5-6.5-6.4-10.6-7.9c0.4-0.9,1.2-1.3,2.2-1.5c1.2-0.1,2.2,0.4,3.3,0.7\n                                            c3.7,0.3,6.8-2.1,10.2-2.8c1.9-0.4,3.5-1.1,4.9,0.7c1.5,1.8,3.1,3.4,5.4,4.2c2.4,1,3.5,2.7,3.2,5.3c-0.2,1.2-0.7,2.7-2,2.4\n                                            c-4.6-1.1-6,3.1-8.9,4.9c-1.4,0.9-1.7,2.4-1.4,3.9c0.3,1.8,0.5,3.6,0.4,5.4c-0.3,1.5,0,3.3-2.2,3.6l-0.1-0.2\n                                            C359.9,628.5,361.1,626.6,360.1,625.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1519"),
                    d:
                      "M293.1,581.9c-4.4-3-5.3-8-2.3-12.5c1.2-1.8,2.8-1.4,4.4-1.4c2.3-0.1,4.4,1.4,6.8,0.9\n                                            c2.5-1,4.1,0.9,6,1.8c0.5,2.7-2,1.6-3,2.2c-1.6,0.9-3.6,0.4-5.5,1.7c2.3,1.3,4.8,1.6,6.5,3.4l0,0c1.3,1.2,3.6,1.5,3.3,4.2\n                                            c-0.3,1.8,1.8,2.5,2.8,3.8l0,0c0.5,0.7,2.2,0.3,1.9,1.7c-0.3,1.4-1.7,1.3-2.8,1.3c-1,0-2-0.3-3-0.6\n                                            C303.2,586,297.7,585,293.1,581.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("72161B"),
                    d:
                      "M337.1,690c-0.1,0.3-0.1,0.6-0.1,0.9c-0.4,0.4-0.8,0.4-1.2,0.1c-1.1-3.2,1.5-6.7-0.7-9.9\n                                            c0-2.5,2.2-3.6,3.2-5.4c4.5-6.3,10.2-11.8,14.1-18.6c0.5-0.9,1.3-1.5,2.4-1.7c0.5,0,0.9,0.1,1.4,0.3c3,3,2.7,5.9,0.2,9.1\n                                            c-1,1.3-2.9,2.5-1.8,4.7c-1.3,5.2-6.2,7.7-8.9,11.9c-0.9,1.3-2.3,2.3-3,3.8C340.8,686.8,339.9,689.4,337.1,690z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("882830"),
                    d:
                      "M361.1,630.1c1.4-1.1,0.8-2.7,1-4.1c0.9-1.9,2.3-1.1,3.7-0.7c3.7,1.1,7.2,2.8,10.8,4.3\n                                            c0.8,0.5,1.3,1.3,0.8,2.1c-3.7,6.1-8.1,11.7-14.4,15.5c-1.8-1.7-3-3.8-1.9-6.1c1.5-3.2,1-6.1-0.1-9.2\n                                            C361,631.4,361,630.7,361.1,630.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92222C"),
                    d:
                      "M384,544c-0.8,0.4-1,1.2-1,2c-2.1-0.9-2.3-2.8-1.9-4.6c1.8-7.9,0.7-15.8,0.9-23.7\n                                            c0.2-8.7,1.2-17.3,2.9-25.9c0.4-2.1,1.1-2.9,3.1-2.7c2,2.9,0.1,5.8-0.1,8.6c-0.2,2.4-1.6,5,0.6,7.2c-2.6,7-2.3,14.2-2,21.5\n                                            C385.5,532.2,386.6,538.4,384,544z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86262D"),
                    d:
                      "M440.9,577c1.4-0.3,2.7-0.6,4.1-1c1.7-0.9,3.5-1.9,5.5-1.5c2.6,6.5,3.9,7.1,11.1,5.3\n                                            c1.6-0.4,3.2-1.1,4.6,0.3c0.1,0.5,0,1-0.2,1.4c-5.3,3.6-11.8,4-17.6,6.4c-1.4,0.6-2.9,1.2-4.5,1.1c-6.1-2.9-7.3-6.4-3.7-11.6\n                                            C440.5,577.2,440.7,577.1,440.9,577z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92242D"),
                    d:
                      "M451,575c-2,0.3-4,0.7-6,1c0.6-1.4,1.8-1.8,3.1-2.2c17-5.5,33.7-11.7,51-16.3\n                                            c1.6-0.4,3.3-0.4,4.9-0.5c-1.9,2.3-1.9,2.3-6.1,1.9c0.8,1.3,2.6-0.1,3.3,1.3c-0.4,1.9-2.1,1.9-3.5,2.3\n                                            c-13.4,3.9-27,7.1-40.1,12.1C455.6,575.4,453.3,576.5,451,575z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1F27"),
                    d:
                      "M452,672c3.9,4.3,5.1,10.5,10,14c0.2,0.6,0.2,1.3,0.6,1.9c1.8,2.8,4.1,5.8,1.3,8.9\n                                            c-3.6,4-9.8,4.7-13.9,2.2c-4.3-5-8.4-10.1-13-14.8c-1-1-1.3-2.2-2-3.3c0-1,0-2,0-3c0.2-0.1,0.4-0.1,0.7-0.2\n                                            c4.6,2.1,6.6,6.7,9.9,10.1c1.9,2,3.6,4.3,5.5,6.3c2,2.1,7,2.6,8.6,0.7c2.1-2.4,0.6-4.6-0.8-6.7c-1.3-1.9-2.8-3.7-3.8-5.8\n                                            c-1.1-2.6-2.9-4.9-3.8-7.7C451.1,673.7,451.2,672.8,452,672z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("913239"),
                    d:
                      "M361,632c2.5,2,4.4,3.9,1.8,7.3c-1.8,2.3-0.2,5.1,0.2,7.7c0.3,0.4,0.4,0.8,0.3,1.2\n                                            c-2.4,2.7-4,6-7.3,7.7l-0.5,0l-0.5,0c-1.9-3.1-0.5-7.3-3.4-10.1c-0.2-0.7-0.2-1.3,0.4-1.9l0,0c2.1-2.6,4.1-5.3,6-8\n                                            C359,634.7,360,633.3,361,632z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A34345"),
                    d:
                      "M341.9,684.9c2.3-4.7,6.7-7.6,9.6-11.8c0.9-1.3,2.5-2.2,2.5-4.1c-0.7-1.4,0.7-1.9,1.2-2.7\n                                            c1.4-0.9,2.5-2.3,3.4-3.7c1.6-2.1,3.8-3.7,4.7-6.3c4.3-4.3,8.6-8.5,13.1-12.7c1.8-1.6,3.8-3.3,6.6-1.7\n                                            c0.7-0.3,1.4-0.5,2.1-0.8c0.5,0.6,1.6,0.2,2,1c-8.9,0.9-13.1,8.3-18.3,13.9c-8.9,9.7-17.2,20-25.7,30.1\n                                            C342.1,686.2,341.6,685.9,341.9,684.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71191F"),
                    d:
                      "M388,504c-3.5,0.9-2-2-1.9-3c0.4-4,1.3-8,1.9-12c1.7-0.3,3.6,0.7,4.9-1.1l0,0c2.3,0,4.7,0,7,0l0,0\n                                            c0,1.7,0,3.3-0.1,5c-1.1-0.8-1.9-2.6-3.7-1.8c-2,1-2.2,3.2-2.2,5.1c-0.2,6.2-0.1,12.5-0.1,18.7c-0.3,0-0.6,0-1-0.1\n                                            c-2.9-5.2-0.5-10.9-1.6-16.3C390.9,500.7,390.8,503.3,388,504z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8E1C26"),
                    d:
                      "M501,560c-0.9,0-1.9,0-3.1,0c1.6-2.5,4.6-1.2,6.1-3c4.4-2.1,7.6-1.5,8.9,3.8c0.5,1.9,1.5,3.7,1.9,5.6\n                                            c1,5.1-0.5,7-5.7,7.6c-1.1,0.1-2.3-0.1-3.2,0.9c-0.7,0-1.3,0.1-2,0.1c-0.5-1.1,0.1-1.9,0.7-2.7c0.9-1,2.2-1.4,3.2-2.2\n                                            c1.8-1.4,1.9-3.4,1.5-5.4c-0.4-2.1-2-2.9-3.9-3.2C504,561.1,502.3,561.4,501,560z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M352,644c0,0.7,0,1.3,0,2c-0.6,4.2-3.9,6.7-6.2,9.9c-4.5,6.3-8.5,13-13,19.3c-1.5,1.9-1.7,4.8-4.3,6\n                                            c-0.5-1-1.4-1.4-2.5-1.1C333.7,667.3,341.9,654.9,352,644z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1E27"),
                    d:
                      "M326,680c1.1-0.5,2.1-0.8,2,1c0,0.2,0.1,0.4,0.1,0.7c0.1,1.3,0,2.7,0.7,3.9c0.4,0.7,0.9,1.4,1.5,2.1\n                                            c1.4,1.9,4.1,1.8,5.7,3.3c0.3,0,0.6,0,1,0c0,0.3,0,0.7,0,1c-1.6,0.8-2.8,2-3,3.9c-1.3,1.2-2.6,0.9-4,0.1\n                                            c-1.4-0.1-2.4-0.8-3-2c-5-5.5-5.1-6-2-12C325,681.2,325.2,680.4,326,680z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A24547"),
                    d:
                      "M406,568.1c-1.2-1.8-2.1-3.8-1.9-6.1c1-0.5,1.5-0.4,2.1,0.9c6.1,12.4,16.5,16.9,30.2,13.5\n                                            c1.6-0.4,3.2-0.9,4.6,0.6c0,0,0.1,0.1,0.1,0.1c-1.8,2.8-5,2.9-7.8,3.7c-0.7,0.1-1.4,0.2-2.1,0c-2-0.6-4-0.6-6.1,0\n                                            c-0.7,0.2-1.4,0.2-2.1,0.1C415.9,578.3,410,574.5,406,568.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A64E57"),
                    d:
                      "M308,587.8c0.9,0.1,1.9,0.2,2.8,0.3c11.4,2.3,22.1,6.9,32.9,10.8c1.7,0.6,3.6,1.1,4.2,3.1\n                                            c-0.4,0.8-1.2,1-2,1.1c-12.7-4.7-25.3-9.4-38-14.1C307.7,588.6,307.7,588.2,308,587.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("812228"),
                    d:
                      "M384,559c0.4,0.5,0.8,1.4,1.2,1.4c6.3,0.1,6.1,4.4,5.9,8.9c-3.7,0.5-6.4-1-8.1-4.4c0-2,0-4,0-6\n                                            C383.3,558.6,383.7,558.6,384,559z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("781C22"),
                    d:
                      "M306,578c-2.5-0.7-5.1-1.3-7.6-2c-0.8-0.2-1.7-0.6-1.7-1.5c0-0.9,1-1.1,1.8-1.4\n                                            c3.1-1.2,6.6-0.3,9.5-2c2.3-1.4,4.1,0,6,0.9c0.4,0.8,1.2,1,2,1c-1.9,1.7-4,0.9-6,0.5C305.5,572.5,304.7,573.5,306,578z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1F27"),
                    d:
                      "M435,678c-3.8-1.1-5.7-4.3-8-7c-2.2-4.1-6.8-6.6-7.1-11.8c4.1-0.5,4.9,3.2,7,5.3\n                                            c2.4,3.2,4.4,6.8,7.3,9.7C435.2,675.1,436.3,676.4,435,678L435,678z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3942"),
                    d:
                      "M420,659c1.1,4.7,6,7.2,7,12c-6.2-6-11-13.1-16-20c0.2-0.1,0.4-0.3,0.6-0.4c4,1.3,5.7,4.9,8.3,7.7\n                                            C419.9,658.6,419.9,658.8,420,659z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A1474D"),
                    d:
                      "M358,583c-4.2,0-8.2-0.9-11.9-3c0.4-0.3,0.8-0.9,1.2-0.8c5.6,0.9,11.2,1.9,16.8,2.8\n                                            C362.1,583.2,360.1,583,358,583z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A03B44"),
                    d:
                      "M435,681c5.4,5.7,11.1,11.1,15,18c-5.7-4-9-10.3-14.2-14.8C434.9,683.4,435,682.1,435,681z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9D4047"),
                    d:
                      "M308,587.8c0,0.4,0,0.8,0,1.2c-5.6-1.1-10.6-4-15.8-6.1c-0.1,0-0.1-0.2-0.2-0.3\n                                            c0.4-0.2,0.8-0.4,1.2-0.6C298.2,583.6,303.6,584.5,308,587.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A14851"),
                    d:
                      "M314,572c-2-0.3-4-0.6-6-0.9c-2.4,0.4-3.8-1.9-6-2.2c-0.1-0.7-1.5-1.7-0.9-1.6\n                                            C305.7,568,310.4,568.6,314,572z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M325,682c-2.3,4.5-0.2,8.3,2,12c-2.6-0.9-4.4-2.8-5.9-5.1c-0.8-1.3-1.5-2.6,0.9-2.9\n                                            c1.4-1,1.1-2.8,2-4C324.3,682,324.7,682,325,682z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A5464E"),
                    d:
                      "M402.1,641.9c1.3,0.4,2.6,0.8,3.8,1.2c2.9,1.1,4,3.7,5.6,6c0.2,0.7,0,1.4-0.5,1.9l0,0\n                                            c-3.3-2.5-5.9-5.9-9.6-7.9C399.8,642.2,401.7,642.2,402.1,641.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171D"),
                    d:
                      "M402,545c-2.2-5.9-0.5-12-1-18C403.1,532.9,401.5,539,402,545z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9E3A40"),
                    d:
                      "M341.9,684.9c0.4,0.4,0.7,0.8,1.1,1.2c-1,1.4-2.2,2.7-3.1,4.3c-1.3,2.2-1.9,0.3-2.8-0.3\n                                            C338.7,688.3,340.3,686.6,341.9,684.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A65253"),
                    d:
                      "M387.1,642.1c-0.7-0.3-1.3-0.6-2-1c4.7,0,9.4-0.1,14-0.1C395.2,643.2,391,641.4,387.1,642.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M358,636c-1.1,3.4-3,6.1-6,8C353.3,640.8,355.2,638.1,358,636z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92222C"),
                    d:
                      "M384,559l-0.5,0l-0.5,0c-2.7-1.7-2.7-3.3,0-5C384.7,555.4,383.8,557.3,384,559z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A14852"),
                    d:
                      "M392.9,488c-1.6,0-3.3,0-6.3,0c4-1.4,6.5-2.4,9.6-1.8C395,486.9,394,487.4,392.9,488\n                                            C393,488,392.9,488,392.9,488z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92222C"),
                    d:
                      "M383,548c1.8,1.7-0.7,3.3,0,5C378.8,551.3,382.6,549.7,383,548z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("BD8080"),
                    d:
                      "M360.1,625.2c1.5,1.4,0.9,3.1,0.9,4.7C359.1,628.6,360.5,626.7,360.1,625.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F424C"),
                    d:
                      "M400,488c0.2-0.7,0.1-1.8,1.3-1c0.7,0.5,0.9,1.3,0.5,2.1C401.2,488.7,400.6,488.3,400,488\n                                            C400,488,400,488,400,488z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A74E4E"),
                    d:
                      "M322,686c-1.1,0.7-0.9,1.9-0.9,2.9c-1.9-1.5-5.3-2.2-3.1-5.9C318,685.8,321.1,684.3,322,686z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A74E4E"),
                    d:
                      "M330,696c1.3,0,2.7-0.1,4-0.1c0.3,1.4,0.7,2.7,1,4.1C333,699.1,331,698.1,330,696z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("963841"),
                    d:
                      "M384,544c-0.6-6,0.8-12,1-18c1.1-1.9,0.4-3.9,0.5-5.9c0.1-2.8,1.4-4.4,4-4.9c3.1-0.6,2.7,2.1,3.5,3.7\n                                            c0,2.7,0,5.3,0,8c-0.8,1.7-0.8,3.3,0,5c0,3.7-0.1,7.3,0,11c0.1,2.8,0.1,5.4-3.5,6C385.7,549.5,384.6,547,384,544z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4A0F13"),
                    d:
                      "M370.9,605.1c-2.5-0.3-3.6-2.3-4.9-4.1c-1.5-2.3,0.4-4.1,1-6c1.8-2.9,5.1-4.1,7.6-2.7\n                                            c3.1,1.6,4.3,0.4,6.1-1.5c2.6-2.8,6.3-4,9.4-5.9c2.2-1.5,2.5-1.2,3,2.1c-4.1,3.3-9.8,4.8-12.3,10c-1,1.8-1.4,3.7-2,5.6\n                                            c-0.2,0.4-0.3,0.9-0.6,1.3C376.4,607.8,373.5,605.4,370.9,605.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("903139"),
                    d:
                      "M393,519c-1.3-0.8-1-3.9-3.8-2.6c-2,0.9-3.2,2.1-3.2,4.4c0,1.7,0.7,3.7-1,5.1c0-3.1,0.3-6.3-0.1-9.4\n                                            c-0.5-4.6,0.9-8.7,3.1-12.6c1.7-2,2.2-4.3,2-6.8c-0.1-1.3,0.6-2.4,2-2.3c1.4,0.1,0.9,1.5,0.9,2.3c0.1,5.9,0,11.8,0.1,17.8\n                                            C393,516.3,393,517.7,393,519z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M393,587c-0.8-0.9-0.5-3.2-2.8-2.1c-0.1-0.3-0.2-0.6-0.2-0.9c-0.8-1.7-0.7-3.3,0-5\n                                            c0.4-2.9,3.3-2.8,5-4c4.9-1.7,8.1,0.4,8.1,5.4c0,2.8-0.8,5.5-2.6,7.7c-0.5,0.4-1,0.7-1.6,0.9\n                                            C396.7,589.1,394.1,590.2,393,587z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("651417"),
                    d:
                      "M400,587.9c0.4-1.4,0.8-2.8,1.2-4.2c1.9-6.1,0.2-8.6-6.2-8.7c0.8-1.2,1.2-2.5,1-4c0-2.7,0-5.4,0-8\n                                            c1.1,0.8,0.8,2,1,3.2c0.4,2.5-1.4,5.9,2.9,6.8c4.3,0.9,5.2-1.9,6-4.9c5.2,4.7,10.5,9.2,17,12c-0.6,2.7-2.6,1.9-4.1,1.5\n                                            c-2.2-0.6-4.2-1.9-6.2-3c-1.5-0.8-3-3.6-4.3-2.2c-1.6,1.8-5.2,2.8-4.2,6.4c0,0.5,0,1,0.2,1.5c2.2,4.8,2.2,4.8-3.2,4.6\n                                            C400.6,588.6,400.2,588.3,400,587.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("85252C"),
                    d:
                      "M367,595c-0.3,2-0.7,4-1,6c-4.1-1.9-7.7,0.5-10.6,2.3c-2.2,1.3-3,0.6-4.4-0.2c2.7-5.5,7.6-6.6,13-7\n                                            l0,0C365.5,597.1,366.1,595.6,367,595z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("1D0707"),
                    d:
                      "M382.9,584.6c-0.4,1.4-1,2.4-2.4,2c-1.4-0.4-3.1-0.9-3-2.7c0.1-1.7,1.6-2,3-1.8\n                                            C381.9,582.3,382.7,583.2,382.9,584.6z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("791E25"),
                    d:
                      "M390,579c0,1.7,0,3.3,0,5C388.5,582.3,388.5,580.7,390,579z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("903139"),
                    d:
                      "M393,532c-1.5-1.7-1.5-3.3,0-5C393,528.7,393,530.3,393,532z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70161D"),
                    d:
                      "M364,596c-0.1,0.3-0.2,0.9-0.2,0.9c-5.4-0.4-8.9,3.3-12.8,6.1c-1-0.3-2-0.7-3-1\n                                            c-11.2-4.7-22.6-8.6-34.1-12.3c-1.1-0.3-2-1.1-3-1.6c0.7-0.1,1.5-0.2,2.2-0.3c-0.4-0.6-0.7-1.2-1.1-1.8\n                                            c10.1,2,20.7,0.1,30.7,3.9C349.6,592.5,356.9,594,364,596z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8B2A32"),
                    d:
                      "M313.8,575.1c4.8,3.4,10.3,0.3,15.3,2.4c4.2,1.7,7,4.1,7.6,9C327.2,586.3,318.9,584.3,313.8,575.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70161D"),
                    d:
                      "M312,586c-2.3-0.9-6.3-0.5-3.9-5.1c0.2-0.5-1.4-1.9-2.1-2.9C310.3,578.9,313.2,580.9,312,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("591216"),
                    d:
                      "M444,588c1.3-0.3,2.7-0.7,4-1c2.3-0.8,4.8-1.1,7.1-1.9c2.1-0.8,2.8-0.4,3.7,1.6c1.2,2.7,2,4.7-2,5.7\n                                            c-2,0.5-3.9,1.7-5.9,2.6c-3.3,1.6-6.4,3.6-9.9,4.8c-7.6,2.6-11.1,8.5-13.3,15.6c-0.9,2.8-1.7,5.7-2.6,8.6\n                                            c-1.8,5.5,2.3,9.4,3.9,14c-1.8,2.4-3.1,5.2-6.3,6.1c-1.3-0.6-2.5-1.4-3.5-2.4c-0.6-0.8-1.1-1.6-0.2-2.6c-0.6-4-2.2-7.1-7-7\n                                            c-0.5-1.6-0.3-3.5,0.3-4.7c1.6-3.3,0.9-5.9-1.5-8.3c4.5-3.2,7.1-7.4,6.3-13.1c-0.3-0.6-0.5-1.3-0.2-2\n                                            c1.7-1.5,4.7,0.6,5.9-2.2c2-1.2,0.9-2.2-0.3-3.2c-0.1-2.4,2.1-2.9,3.4-4.1C431.9,591.9,437.6,589.1,444,588z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("74181F"),
                    d:
                      "M505,573c-0.3,0.7-0.7,1.3-1,2c-8.3,3.1-16.4,6.6-25,9c-4.6,0.2-9.1-0.4-13-3c0-0.3,0-0.7,0-1\n                                            c0.5-0.9,1.3-1.5,2.3-1.9c8.7-2.9,17.3-5.9,26-8.8C498.5,568,502,570.1,505,573z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("651416"),
                    d:
                      "M423,643c0.6-0.1,2.1,1,1.6-0.4c-1.8-4.7-0.3-5,3.6-3.4c0.7,0.3,0.8-0.8,0.9-1.4\n                                            c4.5,4.8,6.9,11,10.9,16.3c0.7,1,2.1,2,1.2,3.4c-0.8,1.3-2.1,0.1-3.1,0.2c-7.7,0.3-10.9-5.8-15-10.6\n                                            c-0.3-0.4-0.5-0.8-0.7-1.3C422.1,644.8,422.2,643.8,423,643z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("671419"),
                    d:
                      "M466,581c4.5,0.4,8.8,1.5,13,3c0,0,0,0,0,0c-1.6,0.8-3.4,1.1-5,2c-7.6,3.2-15.1,6.7-23,9\n                                            c2.3-2.2,5.4-3,7.9-4.3c-1.1-8.7-7-3.1-10.9-3.7C453.7,584.2,460,583.1,466,581z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7D1C23"),
                    d:
                      "M423,646c1,0.8,2.3,1.5,3,2.6c2.9,4.4,6,8.3,12.1,7.7c0.7-0.1,1.4,0.7,2.2,1.1c1-1.2-0.6-2.1-0.3-3.2\n                                            c5.2,5.1,7.6,12.2,12.1,17.9c0,1,0,2,0,3c-4.2-1.3-5.2-5.6-7.7-8.5c-1.7-2-2.8-4.3-5.8-1.8c-1.1,0.9-2.3,0.2-3.1-0.7\n                                            c-4.2-4.9-8.6-9.6-12.3-14.9C422.6,648.2,422,647.1,423,646z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("74181F"),
                    d:
                      "M474,586c1.3-1.6,3-2.1,5-2C477.7,585.5,476,586.1,474,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B57572"),
                    d:
                      "M426.2,629c0-1.4,0-2.7,0-4.5C427.4,626.2,427,627.5,426.2,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86262E"),
                    d:
                      "M423,646c2,5.4,6.8,8.8,9.9,13.3c1.3,1.9,3,3.4,4.8,5.5c2.7-5.6,4.7-3.5,7,0.2\n                                            c2.2,3.5,4.8,6.6,7.3,9.9c1.7,2.2,3.3,4.3,4,7c-3.1,4.8-4.8,4.9-8.5,0.7c-3.7-4.2-5.8-9.6-9.7-13.8\n                                            c-3.3-3.6-6.9-5.6-11.8-3.9c-2-2-3.4-4.6-6-6l0,0c-2.9-3.4-5.5-7.1-9.1-9.9c-2.3-1.5-3.3-4-5-6c1-1.5,1.8-3.1,2.9-4.4\n                                            c5.2-5.9,5.2-5.9,10.1,0.3c0,0.8,0.2,1.6,1,2C421.2,642.5,422.3,644.1,423,646L423,646z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("581116"),
                    d:
                      "M383,641.9c-2.7,0-4.7,1.3-6.5,3.1c-4.1,4-8.3,8-12.4,12c-0.7,0.7-2.2,1.7-2.1,0.5\n                                            c0.2-3.2-3.1-6.8,1-9.5c0-0.3,0-0.6,0-1c4.5-5,8.9-10,13.4-15c0.7-0.7,0.5-1.5-0.4-2c-1,0.3-1.5-0.4-1.9-1.2\n                                            c-0.6-2.2-0.6-4.4-0.1-6.6c0.4-1.1,1.1-1.8,2.3-2c0.5,0,1,0.1,1.4,0.3c0.7,0.7,0.4,1.5,0.3,2.3c-0.9,5,0.2,6.6,5.1,7.4\n                                            c0.7,0.1,1.3,0.2,1.8,0.7c-0.2,0.4-0.4,0.9-0.6,1.3c4.1,0.4,4.3,7.5,9.8,5.7c0.8-0.3,2-0.4,2.9,0.5\n                                            C392.3,639.8,387,638,383,641.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("480F13"),
                    d:
                      "M411,619c3.7,1.2,6.4,2.7,2.6,6.9c-1.5,1.7,1.4,4.7-1.6,6.1c-3.3,0.7-5.7-1-8-3\n                                            c-1.2-1.9-1.5-3.9-1-6.1c0.1-0.5,0.3-1,0.6-1.5C405.7,619.5,407.6,617.1,411,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4A0F13"),
                    d:
                      "M385,631c-3.5,1.9-5.9,0.2-7.9-2.5c-2.2-2.9-0.7-5.2,0.9-7.5c0.7-2.4,2.4-3.1,4.7-2.7\n                                            c1.9,0.7,3.7,1.5,4.3,3.7C387.2,625.2,388.2,628.6,385,631z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86252C"),
                    d:
                      "M387,622c-1.3-1-2.7-2-4-3c-5.6-2.9-7.3-8.5-5-16l0,0c0.4-0.3,0.8-0.5,1.3-0.5\n                                            c0.7,0.2,1.2,0.8,1.5,1.5c0.7,6.7,3.3,12.3,9,16.3c0.3,0.4,0.5,0.8,0.5,1.3c-0.1,0.8-0.6,1.2-1.4,1.4\n                                            C388.3,622.7,387.6,622.4,387,622z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("87272E"),
                    d:
                      "M389,623c0.3-0.3,0.7-0.7,1-1c0.8-0.7,1.7-0.9,2.8-0.8c2.1,0.5,4.2,0.8,6.3-0.2\n                                            c1.7-0.2,3.9-2.4,4.9,1l0,0c-1.7,1.3,1.2,4.4-2,5c-0.3,0-0.7,0-1,0C396.1,628.5,391.9,627.6,389,623L389,623z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M389,623c3.8,2,7.3,4.7,12,4c-2.2,1.1-4.9,1.3-6,4c-0.3,0.9-0.8,1.5-1.9,1.1\n                                            C393.4,628.2,387.8,627.2,389,623z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4C1014"),
                    d:
                      "M393,632c0.6-0.4,1.3-0.7,1.9-1.1c1.2,0.2,2.8-0.2,2.8,1.7c0,1.3-0.9,2-2.1,2.2\n                                            C393.4,635.3,392.9,633.9,393,632z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M402,627c1.9-1.2,0.1-3.8,2-5c0,2.3,0,4.7,0,7C403.1,628.6,402.4,628,402,627z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8F3037"),
                    d:
                      "M375,629c0.3,0.3,0.7,0.7,1,1c-4.1-0.4-7.5-2.7-11.2-3.9c-1-0.3-1.8-0.5-2.7-0.1\n                                            c-0.1-1.8,0.1-3.6-0.7-5.3c-0.9-2-0.1-3.5,1.8-4.4c1.6-0.8,2.9-1.4,3.2-3.6c0.3-1.9,2.5-1.5,4.1-1.7c1.2-0.2,3,1.8,3.5-1\n                                            c4.6,2.9,6,8,2.9,11c-0.8,0.1-1.5,0.2-2,1C374.2,624.3,374.2,626.7,375,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171B"),
                    d:
                      "M377,621c2.6-4.6-1.5-7.5-2.9-11c0.7-2.7-1.1-3.9-3.1-4.9c2.5-0.3,5.5,1.4,7.1-2.1\n                                            c-0.4,6,0.4,11.6,5,16c-2.1-0.5-3.4,1.1-5,2C377.7,621,377.3,621,377,621z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9B3E45"),
                    d:
                      "M332,675c5.8-10.3,12.6-19.8,20-29c1.1-0.5,3-0.6,2.6,0.7c-0.9,3.2,2,6.1,0.4,9.3\n                                            c-5.1,6.9-9.9,14-16,20C336.3,678.1,334.1,677.2,332,675z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("641418"),
                    d:
                      "M363,647.9c-2.5,3.1,0.5,6.3-0.3,9.4c0.5-0.1,0.9-0.3,1.4-0.4c-0.5,2.9-2.9,4.3-4.9,6.1\n                                            c-1.2,1.2-2.2,2.6-3.2,3.9c-0.7,0.7-1.3,1.4-2,2c-0.6,0-1.8,1.2-1.6-0.4c0.1-1,1-2,1.8-2.9c2.4-2.9,4.2-5.9,1.8-9.7\n                                            C358,653,359.9,649.9,363,647.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8E2F35"),
                    d:
                      "M332,675c2.5-0.7,4.5,1.9,7,1c0.3,2.5-3,2.7-3,5c-1.3,3.3-2.6,6.8-7,7c-0.3-0.7-0.7-1.3-1-2\n                                            c-0.7-1.7-0.7-3.3,0-5l0,0C329.3,679,330.7,677,332,675z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("82232A"),
                    d:
                      "M329,688c2.9-1.8,4.8-4.5,7-7c3.4,3.3,0.6,6.7,0,10C333.2,691.1,330.6,690.7,329,688z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("913139"),
                    d:
                      "M505,573c-10.5-6.6-19.1,2-28.5,3.8c-3.6,0.7-7,2.1-10.5,3.2c-1.9,0.5-4.1,0.5-5.7,1.5\n                                            c-4.7,2.9-7.3-1-10.2-3.2c-1.7-1.2,0.8-2.1,0.9-3.3c16.7-5,33.3-10,50-15c1.2,0,2.3,0,3.5,0c2.9,0.1,5.9,0.3,6.4,4\n                                            c0.5,3.8,0.5,7.5-4.6,8.4C505.9,572.5,505.5,572.8,505,573z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D24"),
                    d:
                      "M444,588c-5.7,3.1-11.7,5.3-18,7c-2.2-0.5-3.4-2.3-4.8-3.9c0.1-4.7,2.8-8.3,6.8-9.4\n                                            c1.7-0.5,3.7,0.1,5-1.6c2.7-1,5.3-2,8-3C437.6,584.5,439,583.4,444,588z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("903137"),
                    d:
                      "M426,665c3.2-3.4,6.3-2.5,9.5,0c5.4,4.2,8.1,10.4,11.8,15.8c2.6,3.8,5.1,5.3,8.6,1.3\n                                            c1.2,1.7,2.5,3.5,3.8,5.2c2.1,2.8,3.7,5.9,1.1,9c-1.8,2.2-8.9,0.8-11.1-1.6c-5-5.5-9.1-11.7-14.8-16.6\n                                            C432.8,673.1,428.1,670,426,665z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("72161B"),
                    d:
                      "M356,667c0.2-2,1.4-3.2,3.2-3.9C358.8,664.9,357.6,666.1,356,667z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M328,681c0,1.7,0,3.3,0,5C326.5,684.3,326.5,682.7,328,681z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71161B"),
                    d:
                      "M433,580c0.7,1.6,0.7,1.9-0.5,1.9c-5.2,0.1-8.4,3-10.7,7.3c-0.2,0.5,0.1,1.2,0.1,1.8\n                                            c-1.3,1.3-2.7,1.2-4.3,0.7c-0.9-0.2-0.8-1.7-2.6-1.3c-2.9,0.7-4.9-1-4.5-4.4c0.4-0.8,1.8-1.4,1.2-2.3\n                                            c-0.5-0.9-1.3,0.3-1.9,0.5c-1.3,0.1-2.5-0.5-3-1.3c-1.5-2.3-2.6,0-3.9,0.1c0.5-2.2-1.8-6,3.3-5.5c0.1,0,0.3-0.8,0.3-1.2\n                                            c-0.2-4.5,2.3-2.6,3.7-1.3c2.4,2.4,5.3,3.9,8.3,5.3c1.5,0.7,3.1,1.4,4.5-0.2c0.6,0,1.3,0,1.9,0c2,0,4-0.2,6-0.2\n                                            C431.6,579.9,432.3,580,433,580z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B67075"),
                    d:
                      "M430.9,579.9c-2,1-4,1.7-6,0.2C426.8,578.5,428.8,578.4,430.9,579.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1F27"),
                    d:
                      "M410.9,649.1c4.8,1.7,6.7,6,9.1,9.9c-3.6-2-5.2-6.2-9-8C411,650.4,410.9,649.7,410.9,649.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("791E25"),
                    d:
                      "M380,604c-0.3-0.3-0.7-0.7-1-1c-0.9-2.2,0.8-4,1-6c2.4-5.9,7.5-8.2,13-9.9c1.8,1.7,4,0.6,6,1\n                                            c0.4,1.2-0.2,1.9-1.1,2.6c-1.4,0.7-2.9,0.4-4.3,0.9c-4.6,1.5-8.8,3.5-10.4,8.8C382.7,601.7,382.5,604,380,604z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171B"),
                    d:
                      "M380,597c0.4,2.1-0.6,4-1,6c-0.3,0-0.7,0-1,0C378.1,600.8,378.6,598.7,380,597z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8C2C33"),
                    d:
                      "M398,590c0.3-0.6,0.7-1.3,1-1.9c0.3,0,0.6-0.1,1-0.1c0.3,0,0.7,0.1,1,0.1c1.7,0.8,3.4,1.1,5.2,0.8\n                                            c3.4-0.5,6.1,0.7,8.2,3.4c0.3,1,0,2-0.5,2.9c-3.2,3.9-3.2,3.9-7.2-0.2c-1.1-1-2.5-1.6-3.9-2.1c-0.8-0.3-1.5-0.7-2.2-1.2\n                                            C399.7,591.2,398.6,590.9,398,590z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D24"),
                    d:
                      "M414.1,593.1c-2.1-2.3-4.6-3.5-7.8-3.1c-2,0.2-3.9-0.3-5.3-1.9c1.3,0,2.5,0,4.2,0\n                                            c-0.7-1.9-3.9-2.6-2.2-5c1.2-0.7,0.9-2,1.3-3.6c2.1,1.6,3.9,3.1,5.7,4.5c0.9,0.4,1.4,0.9,1,1.9c1,6.5,5.3,2.8,8.3,1.9\n                                            c0.4,2.6-2,1.9-2.3,3.2C417,593.2,416.1,593.9,414.1,593.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M407,594c2,0.2,3,6.1,5.9,1c1.9,2.3,1.8,5.2,2.5,7.9c-2.1,3.6-1.4,8.3-4.7,11.4\n                                            c-0.9,0.1-1.4-1.3-2.5-0.9c0.6,0.5,1.4,0.3,2,0.8c0.4,1.2,0.3,3.5,2.5,1.4c1.3-1.2,1.7-2.8,2.1-4.4c0.5-2.3,1-4.6,3.1-6.1\n                                            c2.2,5.3-1.5,12.8-6.9,13.9c-2.9-0.3-4.8,1.6-7,3c-1.7-2.2-3.3,0.2-5,0c-0.3-0.1-0.5-0.2-0.8-0.3c-7-4.1-10.1-10.8-8.1-17.4\n                                            C392.5,596.5,397.7,593.3,407,594z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M414.9,603.1c-1.9-2.4-2.1-5.3-2-8.2c0.4-0.6,0.8-1.2,1.2-1.9c1.4-0.1,2.4-0.8,3-2c1.7,0,3.3,0,5,0\n                                            c1.7,0.9,3,2.3,4,4c0.3,2.3-3.3,1.7-3,4c0.2,1,0.2,2,0,3c1,2.4-0.1,3-2.2,2.8c-1.3-0.2-2.6-0.5-3.8-0.7\n                                            C415.8,604.7,415.1,604.5,414.9,603.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("93383D"),
                    d:
                      "M414.9,603.1c0.7,0.3,1.4,0.6,2.1,0.9c0.3,0.3,0.7,0.7,1,1c-0.4,2.8-1.8,5.2-2.3,8.1\n                                            c-0.5,3.3-2.7,5.7-6.9,4.6c0.4-1.2,0.9-2.4,1.3-3.6l0,0c2-2.5,1.9-5.8,2.8-8.7C413.3,604.2,413.3,603.1,414.9,603.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6D161B"),
                    d:
                      "M423,602c-1.3-1-1.3-2,0-3c1.2-0.4,3-1.8,3.4-0.2C427,600.8,424.9,601.7,423,602z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71171D"),
                    d:
                      "M423,646c-1.3-1.5-2.8-2.9-3-5c1,0.7,2,1.3,3,2C423,644,423,645,423,646z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("882830"),
                    d:
                      "M375,629c-1.6-2.3-1.6-4.7,0-7C375,624.3,375,626.7,375,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171B"),
                    d:
                      "M398,590c1.1,0,2.3-0.2,3,1c-2,1.8-4.6,1.9-6.9,2.4c-8.6,2-14.5,12.3-7.7,20.6\n                                            c0.5,0.6,0.9,1.4,1.3,2.1c0.8,1.6,3,2.6,2.3,5c-7.3-3.4-9.7-9.6-10-17c2.6-4.9,3.9-10.8,10.3-12.8\n                                            C392.9,590.4,395.4,590,398,590z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("511114"),
                    d:
                      "M390,621c-1-1.3-2-2.7-3-4c0.5-1.1,1.2-2,2.4-2.3c3.1,0.8,4.2,4,6.6,5.7c0.6,0.4-0.3,1.5-1,1.9\n                                            c-0.7,0.2-1.4,0.3-2.1-0.2c-1,0-2,0-2.9-0.1C390,621.7,390,621.4,390,621z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M393,622c0.7,0,1.3,0,2-0.1c1.3-0.9,2.7-1.1,4,0l0,0C397,623.5,395,623.5,393,622z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("1E0607"),
                    d:
                      "M373,614.4c-0.4,1.6-1.5,2.3-2.9,2.3c-1.5-0.1-2.6-1.1-2.6-2.5c-0.1-1.7,1.4-2,2.8-2\n                                            C371.8,612.1,372.7,612.9,373,614.4z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("380D0E"),
                    d:
                      "M411,585.9c-0.3-0.6-0.7-1.3-1-1.9c0.1-1.2-0.3-2.8,1.7-2.8c1.5,0,2.2,1.2,2.2,2.6\n                                            C414,585.9,412.6,586,411,585.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("170404"),
                    d:
                      "M389,615c0,1.3-0.8,1.9-2,2c-6.5-9.4-6.4-17,0.8-22.1c3.8-2.7,8.4-4,13.2-3.9\n                                            c0.6,0.4,1.3,0.7,1.9,1.1c1.1,1.9-0.1,2.2-1.6,2.4c-7.8,1.4-11.2,5.3-11.9,13.2C389.3,610.1,390,612.6,389,615z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("691517"),
                    d:
                      "M389,615c-1.9-5.7-1.4-11.1,1.8-16.1c1.9-3,4.7-5.1,8.7-4.9c1.4,0.1,3.2,0.4,3.4-1.9\n                                            c1.7,0,3,0.7,4.1,1.9c-0.7,0.9-1.6,1-2.7,1c-6.9,0.4-11.5,3.9-13.1,9.8c-1.5,5.4,0.9,11.3,6.6,15.2c0.8,0.5,1.1,1.2,1.2,2\n                                            c-1.3,0-2.7,0-4,0C394.9,618,391,617.3,389,615z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6D1518"),
                    d:
                      "M410,614c-1.3-0.1-2.3,3.4-3.8,0.5c-0.6-1.2,0.1-2.8,1.5-3.2C410.1,610.7,409.9,612.6,410,614\n                                            C410,614,410,614,410,614z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "none",
                    stroke: _vm.diskColorRecalc("831B2A"),
                    "stroke-width": "10",
                    "stroke-miterlimit": "10",
                    d:
                      "M523.5,599.7c2.2,29.7-8.4,54.8-26.2,76.9\n                                        c-15.8,19.6-36,33.1-60.4,40.2c-33,9.7-65.1,7.5-95.8-7.9c-19.9-9.9-35.7-24.6-47.8-43.4c-9.1-14.2-14.1-29.8-17.4-46.2\n                                        c-2-10.3-2.1-20.7-0.8-30.6c2.4-19.1,8.7-37.2,19.6-53.5c15.6-23.3,36.5-39.8,62.7-49.5c12.5-4.6,25.5-7.1,39.1-7.4\n                                        c20.8-0.4,40.7,2.9,59.5,11.9c14.1,6.8,26.6,16,37.2,27.7c11.9,13.2,20.7,28.2,26.1,45.1C523,575.2,524.6,587.6,523.5,599.7z"
                  }
                })
              ])
            ])
          ]
        )
      ]
    ),
    _vm._v(" "),
    _c(
      "svg",
      {
        attrs: {
          viewBox: "0 0 350 350",
          width: "350",
          height: "350",
          id: "car-wheel-polish"
        }
      },
      [
        _c(
          "g",
          {
            staticClass: "car-wheel",
            attrs: {
              id: "",
              height: "200",
              width: "200",
              transform: "translate(-225,-425)"
            }
          },
          [
            _c("g", { attrs: { id: "tire" } }, [
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M275.8,511c0.3-0.3,0.5-0.7,0.8-1c1.6-1.6,3.3-2.9,4.2-5c20.5-23.8,46.4-38.7,76.6-46.7\n                                    c0.8-0.2,1.6-0.1,2.5-0.2c-1.3,4.1-5.5,3.9-8.4,4.7c-6.6,1.9-12.4,5.5-18.9,7.3c-2.5,0.7-3.8,2.5-4,5.1\n                                    c-2,4.8-6.8,6.4-10.5,9.4c-2.5-1.5-0.8-2.4-0.1-3.2c-5.7,4-12.4,7.6-16.4,14.5c-0.8,1.4-2.5,3.6-4.3,2.2\n                                    c-1.1-0.8-0.9-1.1-1.9-0.1c-2.1,2.1-4.3,4.1-6.4,6.3c-1,1.1-2.4,2.1-2.4,3.7c0,4.4-3.1,7.2-5.2,10.5\n                                    c7.6-10.7,17.4-19.4,27.3-27.9c2.8-2.4,6-4.2,9.3-5.7c2.4-0.6,3.4-3.7,6.1-3.6c5.2,0.2,9.3-3.1,13.9-4.7\n                                    c5.6-2,11.3-3.6,17.1-5.1c1-0.3,2.1-0.1,2.7,0.9c0.7,1.3-0.3,2.2-1.1,3c-1.1,1.1-2.5,1.7-4,2c-4,0.7-6.9,2.4-7,7\n                                    c0,1.4-1,2.4-2.1,3.3c-2.7,1.6-5.3,3.3-7.4,5.4c3.1-1.5,6-3.8,9.4-4.9c1.8-0.8,3.8-1.1,5.5-2.2c10.5-3.8,21.2-6.7,32.4-6.9\n                                    c5.1-0.1,10.2-1.7,15.3-0.2c0.8,0.1,1.6,0.1,2.4,0.1c3.9-0.3,7.6,0.9,11.4,1.2c8.6,1.5,17.1,3.5,25.3,6.7\n                                    c11.5,4.3,22.8,9.1,32.7,16.6c9.5,7.2,17.9,15.3,25.4,24.5c9.1,11.2,16.5,23.3,21.1,37c2.1,6.4,4.7,12.8,5,19.7\n                                    c0.2,3.2,0.9,6.4,1.5,9.6c2.9,11.2,1.4,22.3-1.5,33.3c-1.8,7-2.9,14.2-5.4,21.2c-4.4,12.5-11.2,23.6-19.1,34\n                                    c-7.3,8.1-14.9,15.9-24,22.1c-5.9,4-11.9,7.8-18.6,10.3c-1.4,0.5-2.5,1.6-3.8,2.4c-8.7,4.6-18.4,6.2-27.8,8.4\n                                    c-4.1,1.1-8.2,1.1-12.4,1c-2.4,0-4.9-0.3-7.2,0.5c-1.6,0.4-3.2,0.4-4.8,0.2c-2-0.5-4-0.9-6-0.2c-4.7-0.7-9.5-0.1-14.1-1.8\n                                    c-1.7-0.7-3.4-0.8-5.2-0.8c-18.7-3.6-35.4-11.5-51-22.3c-0.6-0.4-1.2-0.9-1.7-1.4c-11.5-8.8-21.4-19.3-29.8-31\n                                    c-3-4.2-5.2-8.8-7.4-13.5c-8.5-15.7-12.9-32.5-14.2-50.2c1-9.9,0.5-19.9,2.5-29.7c1.8-9,5.2-17.5,9.1-25.7\n                                    c1.1-2.4,1.9-4.9,3.2-8.4c-4,4.3-6.8,8-7.6,12.7c-0.7,3.9-2.9,7-4.1,10.7c-4,12.5-4.3,25.4-4.8,38.3c0.2,5,0.1,10,1,14.9\n                                    c-0.3,2.1,0.4,3.9,1.1,5.8c0.2,0.4,0.3,0.9,0.4,1.3c0.3,1.8,0.2,3.6,1.2,5.2c0.7,6.4,4.5,12.1,4.7,18.7\n                                    c-0.5,1.6-0.5,3.3-1.2,4.9c-0.2,0.4-0.6,0.7-1.1,0.9c-0.7,0.1-1.5,0-1.8-0.6c-2.1-5.8-5.7-10.6-10.3-14.7\n                                    c-1.1-0.9-1.8-2.4-0.8-3.5c1.8-2.1,3.5-0.2,5.2,0.6c-0.1-2.1-0.1-4-3.3-3c-1.3,0.4-2.5-0.7-3.5-1.6c-0.8-0.8-1.1-1.7-0.7-2.7\n                                    c0.4-1,1.2-1.2,2-0.9c2.2,0.7,2.3-0.6,2.6-2.2c0.4-1.6,0.2-2.3-1.3-3.2c-4.6-2.7-4.5-3,0.5-5.8c-0.8-1.6-2.2-1.1-3.5-1.1\n                                    c-1.3,0-2.4-0.4-2.6-1.8c-0.2-1.3,0.5-2.4,1.7-2.7c4.2-1,3.8-2,0.7-4.6c-1.7-1.4-2.2-4.3-0.4-7.2c0.6-1,2.9-4.9-0.5-7\n                                    c-0.8-0.5-2.1-0.9-1.8-2.1c0.3-1.1,1.5-1.2,2.5-1.2c0.6,0,2.4,0.9,0.4-0.7c-0.7-0.5-0.8-1.6-0.2-2.3c2.4-2.8-0.4-1.4-1.2-1.4\n                                    c-1.3-0.1-2.2-0.7-2.6-2c-0.3-1.3-0.2-2.6,0.6-3.7c1.1-0.9,2.3-1,3.5-0.5c0.8,0.4,1.1,1,0.7,1.8c0.8,0,1.6-0.2,2.4-0.1\n                                    c-0.8-0.3-1.7-0.4-2.2-1.1c-0.5-1.7-1.9-1.9-3.3-2c-0.7-1.1-0.5-2.2,0-3.2c1.4-1.7,1.1-3.6,0.8-5.6c0-0.5,0.1-0.9,0.3-1.3\n                                    c2.9-1.6,4.1-3.8,3.4-7.2c-0.4-1.9-0.6-3.9-0.5-5.9c0-3.9,2.5-6.1,5.2-8.3c3.7-3,5-7.1,4.8-11.7c2.8-7,4.9-14.3,7.5-19.7\n                                    c-1.5,2.6-3.4,7-6.7,10.4c-1.9,1.5-1,3.9-1.9,5.8c-0.2,0.5-0.6,0.8-1.2,0.9c-2.7-1.7-2.8-4.3-2.5-7.1c0.2-0.8,0.5-1.5,0.9-2.2\n                                    c0.1-0.7-0.2-1.6,0.7-2C271.8,518.2,273.4,514.3,275.8,511z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#191514",
                  d:
                    "M327.9,475.1c-1.3-3.4,0.5-4.9,3.5-6.1c9.5-3.6,19-7.3,28.5-11c7.6-2.6,15.5-3.5,23.4-4\n                                    c37.5-2.3,72.8,4.7,104.3,26.3c35.2,24.1,57,57.1,64.1,99.4c1.8,10.7,1.3,21.5,1,32.3c-1,0.4-1.7-0.2-2.4-0.9\n                                    c-1.2-2.2-2.6-4.2-4.3-6c-0.7-1-1.1-2.1-0.3-3.3c3.8-2.5,3.8-6.1,0-8.4c-1.7-1-3.7-1.6-4.5-3.6c-0.3-1.3-0.2-2.4,1.1-3.1\n                                    c1.5-0.3,3.5,1.6,4.4-0.8c0.7-1.8-0.7-3.1-1.9-4.3c-1.5-1.6-3.8-2.7-1.1-5.6c1.6-1.8-0.9-6.6-3.5-7.7c-1.2-0.5-2.6-0.7-3.5-1.8\n                                    c-0.8-0.9-1.4-2-1-3.2c0.4-1.1,1.6-0.9,2.6-0.9c1.1,0.1,2.5,0.8,2.9-1c0.3-1.2-0.4-2.3-1.2-3.1c-1.1-1.1-2.5-1.6-3.6-2.6\n                                    c-0.9-0.9-1.3-1.8-0.3-3c2.7-3.2,2.4-4.5-1.2-6.4c-2.5-1.3-5.4-1.8-7.2-4.2c0.9-4.2,4.5-1.2,6.5-2.4c-1.7-3.8-4.9-5.7-8.6-7\n                                    c-0.6-0.4-1-1-1.1-1.7c0.8-0.7,3-1.6,4.2-1.7c-3.4-4.4-6.6-8.8-13.1-8.3c-1.5-0.4-2.8-1-2.9-2.8c1.9-2.4,4.4-2.1,6.6-1.5\n                                    c-2.5-4.3-6.2-6.9-11.5-6.9c-2.6-1.7-5.2-3.5-6.3-6.6c0.5-2.3,1.9-1.9,3.4-1.1c1.4,0.7,2.5,2.1,4.5,2.7\n                                    c-3.6-3.3-6.7-6.6-11.9-4.9c-2.4,0.3-4.6,0-5.8-2.4c-0.1-1.1-0.1-2.3-1.2-3.1c-6.8-5-13.1-10.6-21.4-13.6\n                                    c-4.5-1.6-7.8-5.8-12.5-7.8c-6.8-3-13.3-6-20.9-5.8c-1.5,0-3-0.1-4-1.5c-0.6-3.1-3.2-2.3-5.2-2.7c-0.4-0.1-0.9-0.2-1.3-0.3\n                                    c-1.5-1.1-3.3-1-5.1-1c-0.5-0.1-0.9-0.2-1.4-0.3c-5.5-1-11-3-16.7-1.5c-0.5,0.1-1,0.2-1.5,0.3c-4-0.3-7.9-1.1-11.9-0.8\n                                    c-0.8,0-1.5,0-2.3,0c-7.3,0.7-14.7,0.4-21.5,3.6c-0.8,0.6-1.7,1-2.7,1.1c-3,0-6.1-1.3-8.9,0.7c-6.5,2.3-13,4.3-18.9,8.2\n                                    C332.5,474.2,330.5,475.9,327.9,475.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M272.9,535.1c0.6,5-1.2,8.9-5,12c-1.4-0.1-2.6,2.1-4.1,0.7c-1.1-1.1,0-2.5,0.3-3.7\n                                    c0.6-1.7,0.5-3.6,1.5-5.2c-2.5,4.7-4.4,12.2-4.4,17c0,0,0.2-0.3,0.3-0.4c0.4-0.4,0.8-0.5,1.3-0.3c0.1,1.9-0.3,4,0.4,5.7\n                                    c1.9,4.7-0.5,6.8-4.4,8.3c-3.4-1.1-2.4-3.8-2.6-6c-0.7,7-1.2,14,0.6,21c1.2,1.6,2.4,0,3.6,0c1.2,0,2.6,0.1,2.9,1.4\n                                    c0.3,1.8-1.5,0.4-2.1,1c-0.6,0.6-1.2,1.2-0.9,2.1c0.5,1.5,2.1,1,3.6,1.3c-1.8,2.9-4.4,0-6.3,1.7c1.4,0.5,2.7,1,4,1.5\n                                    c1.4,0.6,1.6,2.5,0.8,2.8c-3.3,1-3.2,2.2-0.8,4.1c-1.7,1.2-2.8,2.5-1.9,5c0.6,1.6,0.2,3.1,2.9,2.8c3.5-0.4-0.9,3.4,1.7,4.2\n                                    c0.2,0.1-1.2,0.8-2.2,0.8c-0.8-0.1-1.6,0.1-2.4,0.3c-1,0.2-2,0.7-1.5,2c0.4,1.1,1.3,0.5,2.1,0.4c1.1-0.2,2.4-0.5,3.4-0.1\n                                    c1.6,0.6,2,2.5,1.8,3.8c-0.3,2.3-1.8,0.9-2.9,0.6c-0.8-0.3-1.8,0.2-2.1,1c-0.5,1.5,1.1,1.6,1.9,1.6c3.2-0.1,4.7,1.4,3.8,4.4\n                                    c-1.5,4.8-1.7,4.8-5.8,3.3c1.5,3.9,2,4,8.2,2c-2.3,2.2-0.7,3.4,0,4.9c0.5,1,0.7,2.4-0.7,3c-1.6,0.7-1.2-1-1.7-1.7\n                                    c-1-1.4-2.5-1.1-4-1.5c0,0.9-0.1,1.7,0,1.8c5.6,1.9,5.5,9.3,11,11.2c1.1,0.4,0.5,1.7,0.1,2.7c-0.6,1.6-0.2,2.6,1.6,2.8\n                                    c1.9,2,1.3,4.6,1.6,7c0.4,2.8,0.5,5.5,2.3,7.9c1.5,2,0.8,3.7-1.5,4.6c-4.2-0.4-6.2-3.4-8.1-6.6c-2.1-3.6-4.4-7.1-8.5-8.8\n                                    c-0.5-0.2-0.9-0.4-1.3-0.7c-1-0.9-1.4-2-1.1-3.3c1.7-3.7,3.5-4,5.9-0.5c1.3,1.8,2.7,3.6,3.8,5.6c-3.6-8.4-9.2-15.8-12.6-24.3\n                                    c-0.7-1.6-1.8-1-2.7-1.5c-0.7-0.6-0.8-1.4-1.1-2.4c0.4,3.1,2.7,5.6,2.2,8.7c-0.3,0.9-0.6,1.9-2,1.6c-3.7-9.3-5.1-19.2-5.7-29.1\n                                    c-0.6-8.6,0-17.3,0-25.9c2.7,0.6,1.5,2.9,2,4.4c1.1-3.4-2.5-6.3-1.3-9.8c0.1-1.2,0.2-2.4,0.3-3.6c0.6-1.2,1.3,2.1,1.8-0.1\n                                    c0.7-3.1-0.9-6.2-0.1-9.2c0.3-1.6-0.6-3.5,0.9-4.9c3.4,0.5,1.3,2.8,1.5,4.5c1.3-3.9-0.3-7.8,0.6-11.6c-0.1-1.1,0.1-2.1,0.9-2.9\n                                    c2.4,0,1.5,1.4,1.5,2.6c0.6-3.5,0.1-7.3,1.4-10.7l0,0.1c4.4-3.2,4.1-8.7,6.1-13c0.3-1,1.2,1.4,1.7-0.4c0.9-2.8,1.3-6,4.4-7.5\n                                    c0,2.5,0.3,5,2,7c1.8,1.6-0.3,3.3,0.2,5c-0.2,0.6,0.2,0.3,0.2,0.1C270,535.2,270.6,534.1,272.9,535.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2726",
                  d:
                    "M440,744.3c-4.7,1.7-9.6,2.7-14.6,2.9c-20.5,0.7-40.9,1.7-61.2-2.1c-0.8-0.2-1.5-0.5-2.3-0.8\n                                    c-0.4-0.9-2.1-0.4-1.9-1.8c0.2-0.9,1.1-1.1,1.9-1.3c2.3-0.6,4,0.7,5.6,1.4c-1.9-1.5-1.1-2.8,0.6-4.1c4.6-1.1,8.8,1.5,13.3,1.6\n                                    c4.6,0.9,9.2,1.6,13.6-0.9c0.9-0.5,2.3-1,2.7,0c1.8,3.7,3.9,1.3,6.1,0.6c5.3-1.7,10.7-2.3,16.2-0.9c4.5,1.2,8.9-0.2,13.2-1\n                                    c3.7-0.7,7.5-1.4,11.2-2.4c1.5-0.4,3.4-0.8,4.2,0.6c1.2,2.1-1.5,2.5-2.3,3.7C444.6,741.8,442,742.7,440,744.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3B3534",
                  d:
                    "M513.2,702.3c-7,8.2-15.7,14.5-24.3,20.8c-3.2,1.4-6,3.3-9,4.9c-3.8,3.3-8.4,5.2-13,7.1\n                                    c-0.4,0.4-0.8,0.4-1.2,0c1.7-6.8,7.4-9.3,13-11.7c1.7-0.7,3.5-1,4.7-2.5c1.3-1.6,2.1-3.9,5-2c1.1,0.7,1.5-1.4,2.3-2.1\n                                    c5.3-3.5,10.5-7.1,14.4-12.4c1.2-1.6,2.6-3.4,4.9-3.8c0.9,0.1,1.5,0.7,2.3,1C512.7,701.7,513,701.9,513.2,702.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302B29",
                  d:
                    "M251.8,642.2c0.9-0.4,1.1-1.2,1.1-2.1c1.5-2-1.6-4,0-6c1.8-0.6,2.7,0,3.6,1.9\n                                    c4.6,9.1,10.1,17.6,14.1,27c-2.7-1.3-5.5-4.4-9-10c-1,0.7-2,1.5-3,2.2c-2.6-0.7-2.2-3.2-3.1-4.9c-0.9-1.7-1.1-3.7-2.7-5\n                                    C251.9,644.4,251.7,643.3,251.8,642.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#363231",
                  d:
                    "M296.9,711.1c-0.3-0.3-0.7-0.7-1-1c-2.2-5.8-6.9-9.1-12.1-12c-1.5-1.2-2.9-2.4-3.8-4.2\n                                    c2.3-1.9-1-3.3-0.4-5.1c1.4-3.3,3.3-1.8,5-0.3c4.4,3.8,8,8.4,12.8,11.6c3.4,2.3,5.6,6,9.4,7.7c1.2,0.5,2.6,1.5,2.1,2.9\n                                    c-0.6,1.5-2.2,0.9-3.5,0.8c-1,0-2.2-2-3.1,0.2c-0.2,0.4-0.5,0.7-0.9,0.9C299.4,713.3,298.3,711.9,296.9,711.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3433",
                  d:
                    "M312.8,723.2c-0.4-0.2-0.7-0.5-1.1-0.7c-0.9-3.2-4.1-4.1-6.2-6.1c-1.3-1.3-3.7-1.7-3.7-4.2l0.1-0.1\n                                    c2.1-1.9,4.3-0.6,6,0.5c8.9,5.8,18.8,9.7,28.2,14.6c0.9,0.5,1.8,0.9,2.6,1.5c0.7,0.5,1.5,1.2,1.3,2c-0.2,1.1-1.4,1.3-2.4,1.5\n                                    c-2.1,0.4-4.3-0.7-6.4,0.3c-0.4,0.1-0.9,0.3-1.3,0.6c-0.6,0.2-0.9,0-1.2-0.6C324.4,727.7,318.7,725.2,312.8,723.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#423D3A",
                  d:
                    "M532.9,677.1c-5.3,9.4-12,17.7-19.7,25.2c-0.2-0.1-0.3-0.2-0.5-0.3c-1-2.3,0-4.4,0.5-6.5\n                                    c3-2.5,3.1-7.9,8.2-8.3c-0.6-4.1,3.1-6.3,4.5-9.5c0.5-1.3,1.3-2.3,2.5-2.9c1.3-0.6,2.6-0.3,4-0.2c0.4,0.1,0.8,0.3,1.1,0.7\n                                    C533.4,676,533.4,676.6,532.9,677.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#36312E",
                  d:
                    "M367.9,739.1c-1.1,1.2-0.4,2.5,0,3.8c-2.1-0.3-4-0.9-5.9-0.7c-2.7,0.3,0.2,1.3-0.1,2\n                                    c-4.9-0.6-9.5-2.1-14-4.1c-2.6-1.3-4.9-2.9-7.7-3.8c-1.5-0.5-3.4-1.5-1.8-3.8c5-1.2,9.3,1.7,13.8,2.8\n                                    C357.4,736.7,362.9,737,367.9,739.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3A3532",
                  d:
                    "M440,744.3c0.6-2.7,3.9-2.8,4.9-5.2c5.1-1.9,9.2-5.6,14.1-7.9c4.2-2,6-1,6.4,3.5\n                                    c-2.3,2.5-5.9,2.4-8.5,4.4C451.5,741.7,445.9,743.4,440,744.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282423",
                  d:
                    "M550.9,611.1c0.6,0.3,1.2,0.6,1.8,1c0.1,8.9-1.2,17.6-3.8,26.1c-2.8-0.1-1.9-2.8-2.8-4.2\n                                    c-0.4-1.1-1.3-1.9-2-2.8c-0.9-2-2.5-4.4,1.8-4c0.6,0.1,1.4,1.3,1.8-0.1c0.7-2.5,0.8-5.1-0.3-7.6c-0.1-0.4-0.1-0.9-0.1-1.4\n                                    c0.2-0.9,0.7-1.7,1.2-2.4C550.1,614.5,549.4,612.3,550.9,611.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4543",
                  d:
                    "M259.9,658.1c0.3,0,0.6,0,1,0c4,2.7,4.8,7.1,6,11.3c0.9,3.5,3,6.4,5.6,8.9c1.4,1.1,2.4,2.5,3.1,4.1\n                                    c0.4,0.8,0.8,1.5,1,2.4c-0.2,1.4,2.5,3.3-0.6,4.3c-5.6-6.7-10.5-13.9-14-22C261.3,664.1,259,661.5,259.9,658.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5A5454",
                  d:
                    "M283.8,698.2c7-0.3,8.8,6.8,13.6,9.7c0.8,0.5-1.2,1.3-1.4,2.2C291.2,706.8,287,703,283.8,698.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4F4A46",
                  d:
                    "M545.9,649.1c-0.9,4.6-2.8,8.9-5.1,13c-0.5,0.3-0.9,0.2-1.3-0.2c-1.5-2.8-1.2-5.8-0.8-8.8\n                                    c0.2-1.2,0.6-2.4,1.1-3.6c0.8-1.5,1-3.5,3.2-3.9c1.2,0.2,1.6,1,1.8,2.1c0,1.5-0.9,2.7-1.3,3.9\n                                    C544.4,651.2,543.8,648.7,545.9,649.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5D5757",
                  d:
                    "M301.9,712.2c2.9,2.1,5.7,4.2,8.6,6.3c1.5,1,2.5,2.2,1.2,4c-5.5-3.1-10.5-6.8-14.8-11.3\n                                    C298.6,711.5,300.2,711.8,301.9,712.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#5C5555",
                  d:
                    "M312.8,723.2c6.6-0.7,10.8,3.9,15.7,6.9c0.4,0.2,0.2,1.5,0.2,2.3C323.1,729.9,317.7,727,312.8,723.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#807A77",
                  d:
                    "M259.9,658.1c0.4,3,2.6,5.7,2,9c-4-6.9-6.6-14.4-9.1-21.9c4.2,2,3.3,7,5.9,9.9\n                                    C259,656.2,259.5,657.1,259.9,658.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#494341",
                  d:
                    "M337.9,733.1c2.2,4,8.3,2.3,10,7c-6.4-1.4-12.2-4.3-18-7.1c0-0.3,0-0.6,0-1\n                                    C332.7,731.4,335.4,731.7,337.9,733.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524D4A",
                  d:
                    "M539.9,662.1c0.3,0,0.6,0,0.9,0c-0.5,2.2-1.5,4.2-2.9,6c-2.2,1.6-2.2,5.1-5.3,6\n                                    c-2.1-5,0.8-8.6,3.4-12.3C537.2,660.1,538.6,661.3,539.9,662.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2B",
                  d:
                    "M545.9,649.1c-0.8,1.1-1.7,2.1-2.6,3.3c-0.8-1.8,0.8-2.9,0.6-4.4c1-1.1-0.1-2.5,0.3-3.7\n                                    c1.6-3.6,0.2-7.9,2.7-11.3c1.8,1.2,0,3.9,2,5.1C548.7,642,547.4,645.6,545.9,649.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373433",
                  d:
                    "M248.8,568.9c1.7,4.4,1.6,8.8,0.9,13.4c-2.7-0.3-1-3.3-2.6-4.1C247.1,575,247.6,571.8,248.8,568.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#585352",
                  d:
                    "M275.9,689.1c2.5-1.3-1.6-2.7,0-4c2.8-0.1,3.9,1.4,4,4c1.2,1.6,2.5,3.3,3.8,5c-1.4,1.1-2.6-2-3.8,0\n                                    C278.1,692.8,276.9,691,275.9,689.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3837",
                  d:
                    "M261.7,532.9c0.3,3.8-1.4,7.2-2.2,10.8c-0.5,2.2-3,0.8-3.9,2.2C256.9,541.3,259,537,261.7,532.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M246.7,581.7c1,4.5,4.6,8.8,1.3,14.1c-2.5-2.6,0.2-6.2-1.9-8.6C245.9,585.3,245.6,583.4,246.7,581.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3837",
                  d:
                    "M267.9,525.1c-1.3,2.7-2.6,5.5-3.9,8.2c-1.1,2.2-1.4-0.6-2.2-0.4c1.5-3.7,2.9-7.4,6.1-9.9\n                                    C267.9,523.7,267.9,524.4,267.9,525.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3D3736",
                  d:
                    "M251.8,557c0.8,4,1.9,8.1-0.4,12.1c-1.3-1.4,0.4-4-1.8-5.1C250.1,561.6,250.4,559.1,251.8,557z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3E3837",
                  d:
                    "M255.7,545.9c-0.4,3.8,1.1,7.7-1.2,11.3c-1.1-0.8-0.3-2.6-1.7-3.2C253.1,551.1,254.1,548.4,255.7,545.9\n                                    z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4C4744",
                  d:
                    "M275.8,511c-1.5,4-3.2,7.9-7.3,10C270.5,517.3,272.8,513.9,275.8,511z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#6A6461",
                  d:
                    "M533,674.2c1.4-2.2,2.2-4.9,5-6c-1.3,3.2-2.6,6.4-5,9c0-0.7-0.1-1.3-0.1-2\n                                    C532.5,674.7,532.6,674.4,533,674.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#524C49",
                  d:
                    "M280.8,504.9c-0.1,2.8-1.9,4.1-4.2,5C277.5,507.9,279.1,506.3,280.8,504.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#272423",
                  d:
                    "M465.9,734.9c-0.3,0.1-0.6,0.1-1,0.2c-0.1-3.8-1.8-4.7-5.1-2.9c-4.8,2.7-9.2,6.3-15,7\n                                    c1-0.8,2-1.6,4.3-3.3c-6.9,1.5-12.5,2.9-18.1,3.7c-4.3,0.6-8.2,2-13.1,0.2c-4.1-1.5-9.6-0.9-14.2,1.5c-1.3,0.7-2.7,1.4-4.1,1.7\n                                    c-2.7,0.6-4.6,0.2-2.2-3.7c-5.2,3.7-10.3,3.8-15.7,1.9c2.5-1,5.1-0.8,7.7-0.4c-1.9-1.5-5,1.5-6.4-1.8c-0.1-0.5-0.1-0.9,0-1.4\n                                    c1.1-1.9,1.2-4.7,4.4-4.7c2.1,3.2,5.8,2.5,8.6,2.8c4.6,0.5,9.4,0.8,14.1-0.2c3.8-0.8,7.7-0.5,11.6-1.6c2.8-0.8,4.2-3.9,7.9-3.6\n                                    c-2-0.3-3.3,0.2-4.7,0.5c-1.6,0.4-3.3,1.2-4.1-1.1c-0.9-2.4,0.4-3.3,2.4-3.9c0.5-0.1,0.9-0.4,1.4-0.5\n                                    c6.6-1.8,13.2-3.6,19.7-5.6c2.7-0.8,5.2-1.8,7.4-3.5c0.6-0.9,0.8-2.3,2.1-2.6c11-3.3,19.6-10.1,28.3-17.3\n                                    c5.3-4.4,9.3-9.8,14.7-14c1.8,0.2,3.3-0.5,4.4-1.9c4.4-5.7,7.7-12.4,13.3-17.1c2.4-2,0.9-6.5,4.8-7.5c0.5,0.1,0.9,0.3,1.3,0.6\n                                    c1.3,1.3,1.9,3.2,1,4.5c-4,5.9-2.8,12.3-2.5,18.6c0,0.5-0.5,0.7-0.4,1.2c0-0.3,0.2-0.6,0.4-0.9c3.3,0,3.7,0.5,2.2,3.3\n                                    c-2.3,4.2-5.4,7.9-7.4,12.2c0.2,2.4-0.3,4.7-1.2,6.9c-1.2,0.9-1.8,0.6-1.8-0.9c-2.5-2.1-4.4-1.6-6.1,1.2\n                                    c-3.7,5.8-8.3,10.7-13.9,14.8c0.1,1.8-0.3,3.5-2,4.2c-2.3,0.9-1.4-2.2-3-2.6c-1.5,3.4-3.7,5-7.7,6\n                                    C473.1,726,469,730.2,465.9,734.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292524",
                  d:
                    "M383.9,737.1c0,0.3,0,0.7,0,1c-0.1,0.1-0.3,0.3-0.4,0.3c-6.4-2.6-13.3-3-19.9-4.9\n                                    c-5.1-1.5-9.8-4-14.7-5.8c-14.2-5.4-27.4-12.5-38.6-22.6c-9.8-8.8-20.5-17.1-26.4-29.5c-1.7,0.5-2.4,2.4-4.2,1.9\n                                    c-1.6-0.6-3.1-1.3-2.9-3.5c1.2-0.7,2.8-1.9,1.6-3c-4.8-4.6-3-10.5-3.6-16h0c1.2-1.5-0.2-3.5,1-5c0-1,0.2-2.1-0.2-2.9\n                                    c-2.8-5-3.7-10.6-4.8-16.1c-1.2-1.9,1.2-4.3-1-6c-0.8-1.9,0.5-4.6-2-6c-0.3-5-0.7-10-1-15c2.4-1.5,2.8,1.1,4,2\n                                    c1.9,7,1.3,14.5,3.6,21.4c3.1,9.1,4.7,18.8,10.4,26.8c0.4,0.5,0.6,1.2-0.1,1.7c2.9,6.7,6,13.2,10.9,18.7\n                                    c4.9,5.6,8.8,12.1,14.9,16.4c3.9,2.7,6.5,7.1,11.2,8.8c0.3,0.3,0.7,0.7,1,1c15.8,11.8,33.1,20.3,52.9,23c1.5-0.2,2.9,0.6,4.3,1\n                                    c6,1.5,6.5,2.4,4.1,8.2C383.7,734.6,384.6,735.9,383.9,737.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M522.9,594.1c-1.5-3.2-1.6-6.6-2-10c1.3-0.4,1.7,0.6,2.3,1.4c-0.4-11.3-2-22.3-9.3-31.4\n                                    c-3.4-4.3-4.6-9.5-7-14.2c-2.5-4.6-5.7-8.5-8.7-12.6c-0.9-1.2-1.9-2.3-2.5-3.7c-0.3-0.8-0.5-1.6,0.2-2.3c0.9-0.9,1.9-0.6,2.7,0\n                                    c2.4,2.2,5.4,3.6,8.2,5.5c-4.3-5.3-9.1-10.2-13.3-15.4c0.5,1.9,0.9,4,0.2,6.1c-0.2,0.4-0.4,0.8-0.7,1.2\n                                    c-1.4,1.1-2.3,0.4-3.3-0.7c-3.1-3.5-7-6.4-9.7-10.3c-3.4-4.8-9.2-5.7-13.9-8.3c-5.2-2.8-10-6.6-16-8c-2.5-0.6-4.3-2.6-3.5-5.7\n                                    c0.2-3.2,2-6.4,5.1-4.8c4.8,2.5,9.4,1.7,14.2,1.6c7.8,1.3,13,7.3,19.4,11c10.1,10.2,21,19.7,28.6,32.1\n                                    c2.9,2.9,2.4,6.6,2.6,10.2c0.1-1.2-1-2.5,0.4-3.4c1.1-0.7,1.8,0.4,2.4,1.1c1.6,1.9,2.7,4.2,4,6.3c2.9,4.9,4.1,10.5,6.8,15.5\n                                    c0.6,1.2,0.8,2.5,0,3.8c-1.6,0.8-2.4-0.4-3.3-1.3c-0.5-0.5-0.8-1.7-1.9-0.9c-0.3,0.2-0.4,0.5-0.5,0.8c-0.1,1.1,0.7,1.3,1.4,1.7\n                                    c4.6,2.3,4.6,2.8,0.8,5.2c1.8,0.1,3.8,0.8,4.1,2.7c0.3,1.8-1.1,2.8-3.2,2.8c-1.6,0-0.5,1.2-0.4,1.7c1.3,7,2.3,14.2,6.6,20.2\n                                    c0.7,0.9,1,2,0.3,2.7c-3,2.7-3.1,6.4-4,9.9c-0.4,1.4-0.9,3.2-2.9,2.7c-1.7-0.4-2.1-1.9-1.8-3.6c0.5-3.3,0-6.6,0-9.9\n                                    c0-0.6,0-1.5-0.9-1.5C523.5,592.4,523.6,593.7,522.9,594.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M522.9,594.1c-0.1-1.7-0.4-3.4,2.3-2.9c1.1,0.2,1.4,0.2,1.4,2.6c0.1,3.4,0,6.9-0.3,10.3\n                                    c-0.1,1.1-0.1,2.2,0.9,2.5c1.7,0.6,1.8-1.6,1.9-2.1c0.7-3.7,0.2-7.8,4.3-10.1c0.5-0.3,0.5-1.5-0.1-1.7\n                                    c-4.5-1.4-3.1-5.3-4.1-8.3c-1.5-4.6-3.2-9-3.7-13.9c-0.1-0.9-0.1-1.9-0.2-2.8c1.2-0.5,1.8,0.1,2.2,0.8c1,1.8,1.6,0.2,2.1-0.3\n                                    c1.2-1.4,0-1.5-1-1.7c-1-0.2-1.6-1.6-3.1-0.9c-1.4,0.6-1.7-0.6-1.7-1.6c0.1-1.9,1.2-0.8,2-0.6c1.1,0.3,2.1-0.2,2.5-1.1\n                                    c0.4-0.9-0.4-1.4-1.3-1.7c-6.1-1.9-6.1-1.9-0.7-7.1c0.7,2.3,1.1,4.6,3.5,5.5c4.3,1.6,5.1,5.5,5.5,9.3c0.2,1.9,0.3,3.9,0.2,5.8\n                                    c-0.7,0.8-0.1,0.8,0.5,0.9c1.9,1.7,2.1,4,1.8,6.3c-0.5,6.1,0.2,12.1,0.9,18.1c0.4,3.5-0.3,5.3-2.9,6.9\n                                    c-0.4,0.2-0.9,0.3-1.4,0.3c-3.3,1.8-3.6,4.9-0.1,6.2c4.3,1.6,3.5,4.1,2.5,7c-1.1,3.2-2.5,5.9-0.2,9.8c1.4,2.3-0.1,6.4-1.4,9.5\n                                    c-0.7,1.8-2.8,2.4-4.7,1.5c-2.1-1-1.1-2.3,0-3.6c0.9-1.1,0.2-2.6,0.7-3.2c-0.6,2-1.7,6.4-3.9,5.8c-3.3-1-1.1-5.1-1-7.9\n                                    c0.2-3.4,0.8-6.8,2-10.1c-2.6,6.4-1.5,13.5-4.3,19.9c-0.5,1.2-0.8,2.5-0.8,3.9c0.1,5.7-0.1,6.2-3.5,10.6\n                                    c-3.3,1.5-1.9,5.5-4.2,7.7c-5.9,5.4-9.8,12.4-14.6,18.6c-1.4,1.8-2.9,2.1-4.1-0.3c4.7-6.8,8.8-13.9,13.1-20.9\n                                    c3.8-6.2,6.2-13,7.6-19.6c1.8-8.3,5.2-16.3,5.4-25C523.2,609.2,524.9,601.6,522.9,594.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M342.9,487.1c0.1-0.1,0.2-0.3,0.2-0.4c0.8-7.4,5.1-11.1,12.3-11.9c0.4,0,0.8-0.5,1.1-0.9\n                                    c0.3-0.3,0.4-0.8,0.7-1.3c-2.7-1.4-5,0.7-7,1.2c-7.1,2-14,4.8-20.8,7.9c-2.1,0.9-3.7,0.9-5.6,0.5c-0.4-1,0.2-1.7,0.9-2\n                                    c8.4-4.1,15.3-11,24.4-13.9c0.8-0.3,1.6-0.5,2.4-0.3c0.4,0.3,0.6,0.7,0.7,1.2c-0.8,2.8-3.6,2.3-5,3.4c1.3,0.1,2.8-1.6,4.7-1.2\n                                    c3.1-0.4,6.2,1,9.2-0.5c1.4-0.7,2.5,0.1,3.4,1.3c1.1,1.6,2.6,3,4.4,5.1c-0.1-4.8,3.3-5.5,6.4-5.9c9.1-1.3,18.3-2.1,27.3-1.2\n                                    c13.5,1.4,27.1,3.5,39.8,8.9c3.2,1.4,7.7,2.2,3.5,7.3c-0.3,0.4,0.2,1.3,0.2,1.9c-1.4,2.7-3.1,1.4-4.9,0.5\n                                    c-1.2-0.7-0.8-2.9-2.6-3.2c-0.6,2,1.7,1.7,2.2,2.8c0.1,2.4-2.4,0.7-3,1.9c-6.7-2.9-13.7-4.4-20.8-5.9c-1.4-0.3-2.9-0.3-4.3-1.1\n                                    c-2.8-0.7-5.4-2.1-8.3-2.3c-1.3-0.6-3.2-1-3-2.8c0.3-2.2,2.3-1.3,3.7-1.4c6-0.4,11.7,1.3,17.5,2.7c1.7,0.4,3.5,0.5,4.3,0.7\n                                    c-6.8-0.8-14.2-3.9-22.2-3.5c-2.1,0.1-3.9,0.4-5.1,2.3c-0.4,0.3-0.8,0.6-1.3,0.8c-1.1,0.3-2.4,0.5-3.5,0.2\n                                    c-8.1-2.8-15.6,1-23.3,1.9c-7.9,0.9-15.3,4-23.6,4.7c-0.2-0.1,0.5,0.9,0.4,0.3c1.6,0,2.6,0.6,2.2,2.4c-1.3,1.6-3.6,0.7-5,2\n                                    C345,488.3,342.6,489.7,342.9,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M437.9,488.1c1-0.7,2-1.3,3-2c1.7-0.7,3.3,1.8,5,0c0.7-0.5,1.3-0.6,2,0c-1.4,3,1.3,4.1,2.9,4.5\n                                    c7.1,1.6,12.5,6.2,18.7,9.5c0.9,0.5,1.7,0.8,2.7,1.1c5.8,1.6,9.8,5.2,12.3,10.6c0.3,0.6,0.9,1.5,1.2,1.4\n                                    c3.5-0.4,4.2,2.2,5.1,4.6c0.4,1.1,1.3,0.5,2.1,0.3c0.6,0.4,1.5,0.7,1.7,0.1c0.2-0.5-0.5-0.1-0.7,0c-0.3,0.1-0.6,0.1-0.9-0.1\n                                    c-0.2-2.9,0.7-5.9-0.4-9.2c2.7,2.9,5.5,5.7,8.1,8.7c2,2.3,3.3,5.2,6.8,5.8c2,0.4-0.4,1.6,0,2.6c0.9,2.2-1.1,3.1-2.2,4.7\n                                    c-0.4-5.6-5.9-6-8.4-9.2c0.2,4.3,3.6,7.3,6.1,9.4c3.8,3.1,4.7,7.4,6.2,11c4.4,10.6,12.8,19.4,14.7,31.1\n                                    c0.2,1.4,0.3,3.1-0.2,4.4c-0.5,1.5-1.6,2.1,0.7,3.7c1.8,1.2,0.8,4.8,0.1,8.2c-1.4-2.2-2.4-3.7-3.4-5.3\n                                    c-1-8.3-3.6-16.2-6.7-23.9c-7.1-17.8-18.4-32.7-32.1-45.9C469.4,502.2,454.7,493.3,437.9,488.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2726",
                  d:
                    "M424.9,726.1c-0.6,1-1.7,0.8-2.6,1.1c-1.2,0.4-0.6,1.3-0.4,2c0.2,1,0.6,1.4,1.7,0.8\n                                    c2.6-1.7,5.5-0.6,8.3-0.9c-4,4.5-10.3,7.7-14.5,7.6c-7.9-0.3-15.9,3-23.7-0.4c-0.8-0.4-2.1-0.4-2.9-0.1c-3.2,1.2-3.3-1.1-3.8-3\n                                    c-1-6.1-1-6.1,7-7c1.7-1.9,3.3-0.7,5,0c3,1.3,6.4-0.2,9.4,0.8c-1.3-0.9-3.2,0.3-4.4-0.8c2.1-1.9,4.7-0.6,7-1\n                                    c4.3,2.1,8.6-0.1,12.9,0.2C424.2,725.5,424.6,725.8,424.9,726.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M270.9,606.1c-1.3-0.7-2.7-1.3-4-2c0.3-10.8,0.6-21.5,3.1-32.1c1-4.4,1.7-9,4.4-12.9\n                                    c2.3-3.3,1.5-7.6,3.9-11.1c2-3,5.1-5.1,6.7-9.8c2.6,5.4-0.3,9.1-1.9,12.2c-7.7,15.2-11.5,31.2-11.1,48.3\n                                    C272,601.3,271.5,603.7,270.9,606.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312E2E",
                  d:
                    "M317.9,485.1c-3.4,3.9-8.2,5.9-12,9.3c-9.2,8.1-17.7,16.7-25.2,26.4c-0.2,0.3-0.8,0.4-1.3,0.8\n                                    c-0.1-2.8,2.3-4.1,3-6.2c2.7-8.8,7.9-15.7,15.6-20.7c1,1-1.6,1.9,0.5,3.4c5.5-8.8,13.5-14.7,22.6-19.7c0.3,2.7-3.9,2.9-3.1,5.8\n                                    c0.3,0.2,0.5,0.4,0.3,0.7C318.1,485,318,485.1,317.9,485.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M350.9,487.1c-0.4-1.7-2.3-1.6-3.4-2.8c1.6-1.8,4-1.6,5.9-2.1c8-1.9,16.3-2.9,24-5.2\n                                    c7.6-2.3,14.4-0.9,21.5,0.1c0.9,1,0.8,2,0,3c-6.2-1.4-12.5-0.3-18.6,0.2C370.3,481.2,360.4,483.6,350.9,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#34302F",
                  d:
                    "M317.9,485.1c0-0.3,0-0.7,0-1c3.4-3,7.2-5.4,10-9c7.9-4.6,15.7-9.5,25-11c0.9-0.5,2-0.7,1.9,0.6\n                                    c-0.2,1.5-1.5,1.8-2.9,1.4c-10.2,3.9-18.5,11-28,16C321.3,482,320.5,485.3,317.9,485.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2D",
                  d:
                    "M375.9,725.1c-18.2-2.2-34.2-10-49.2-20.1c-1.5-1-2.9-2.2-3.8-3.9c5,2.9,10,5.8,15,8.6\n                                    c11.3,6.3,23.2,11,36,13.4c0.6,0.7,1.6,0.4,2.3,0.9C376.3,724.5,376.3,724.8,375.9,725.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2D",
                  d:
                    "M321.9,700.1c-2.4,1.9-3.1-0.8-4.2-1.8c-7.9-6.4-14.9-13.7-21.6-21.5c-5.1-5.9-7-13.4-12-19.1\n                                    c-0.2-0.2,0.5-1.1,0.8-1.6c3.9,5.9,7,12.3,11.3,18C303.7,683.9,312.7,692.1,321.9,700.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B2B",
                  d:
                    "M272.9,535.1c-1.8-0.3-2,2.1-3.6,2.3c-0.8-1.9,1.1-3.5,0.6-5.3c0-0.3,0-0.7,0-1c1.4-1.8-0.7-4.7,2-6\n                                    c3.5-4.5,5.2-10.2,10-13.7C277.7,518.9,276.4,527.4,272.9,535.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D292A",
                  d:
                    "M256.9,584.1c-4.3-2.5-2-7-2.5-10.3c-0.8-4.9,0.4-10.2,2.5-15.9c2.1,4-1,8.2,2.1,11.2v0\n                                    c1.2,2-0.4,4,0,6c-1.2,0.7-1,1.9-1,3c0.6,1.1-0.5,1.4-1,2C256.9,581.5,256.9,582.8,256.9,584.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B2B",
                  d:
                    "M262.9,555.1c-1.7,0.9-0.3,3.4-2.2,4.2c-1.7-8,1.3-18.9,7-24.3c-1.1,4.6-1.8,8.4-3.6,12.1\n                                    c1.2,1,2.5-2.1,3.7,0C265.9,549.6,262.4,551.1,262.9,555.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#343030",
                  d:
                    "M375.9,725.1c0-0.3,0-0.7,0-1c1-0.7,2-0.7,3,0c5,0.7,10,1.3,15,2c0.6,0.1,1.3,0.1,1.9,0.2\n                                    c-3.8,1.2-10.2-1.1-8.9,6.8c-1.7,0.8-1.1,3.4-3,4c-0.8-2.1-3.1-4.2,0.6-6.2c0.7-0.4,0.3-4-2.3-4.6\n                                    C380.1,725.7,378,725.5,375.9,725.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312E2F",
                  d:
                    "M424.9,726.1c-0.3,0-0.7,0-1,0c-0.6-0.7-0.6-1.3,0-2c9.6-1.9,18.9-4.6,28-8c-0.4,3.4-3.6,3.5-5.7,3.9\n                                    C438.9,721.4,432.2,724.8,424.9,726.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M342.9,487.1c1,0.7,2,1.3,3,2c-4,1.9-8,3.7-12,5.6c-0.2-0.4-0.4-0.7-0.6-1.1\n                                    C336.8,491.9,338.6,487.8,342.9,487.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2D2928",
                  d:
                    "M404.9,478.1c3.2-0.4,5.5,1.6,8,3c-4,0.2-7.9-1.6-12-1c-0.6-0.8-0.6-1.5,0-2.3\n                                    C402.3,477.5,403.6,477.4,404.9,478.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#343030",
                  d:
                    "M423.9,724.1c0,0.7,0,1.3,0,2c-3,0.5-6-0.2-9,0.8c-1.7,0.6-3.2,0-4-1.8\n                                    C415.3,725.3,419.6,725.1,423.9,724.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M267.9,619.1c5.5,0.4,1.8,3.8,2,6C268.4,623.4,268,621.3,267.9,619.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#343030",
                  d:
                    "M403.9,726.1c1.6,0,3.2,0,4.8,0c-3.3,0.5-6.6,2.1-9.8,0C400.6,726.1,402.2,726.1,403.9,726.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M266,582c-2.7,0-4.4,0-5.9,0C261.7,579.9,261.7,579.9,266,582z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M269.9,625.1c4.1,1.4,0.8,4,1,6C269.1,629.4,270.2,627.1,269.9,625.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M258.9,575.1c-3.5-2,0.9-4,0-6C260.4,571.1,260.4,573.1,258.9,575.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M256.9,580.1c0.3-0.7,0.7-1.3,1-2c1.7-0.3,3.5-0.9,3,2C259.6,580.1,258.2,580.1,256.9,580.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M271.9,525.1c-1.5,1.7-0.2,4.4-2,6C270.6,529.1,268.3,526.1,271.9,525.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M275.9,650.1c-0.2,1.7,0.7,3.6-1,5C275.1,653.4,274.2,651.5,275.9,650.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292524",
                  d:
                    "M378.9,724.1c-1,0-2,0-3,0c-0.8,0-1.6-0.2-2-1C375.6,723.4,377.5,722.5,378.9,724.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262121",
                  d:
                    "M265.1,572.1c0.1,0.8-0.3,1-0.8,0.9c-0.4-0.1-0.9-0.4-1-0.7c-0.2-0.5,0.2-0.9,0.8-0.8\n                                    C264.5,571.6,264.8,571.9,265.1,572.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M400.9,478.1c0,0.7,0,1.3,0,2c-0.7,0-1.3,0-2,0c0-1,0-2,0-3l0,0C400,476.6,400.5,477.2,400.9,478.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#282423",
                  d:
                    "M519.9,656.1c0.1-1,0.5-2,0.4-2.9c-0.2-4.6,1.9-1.6,3.3-1c-3.6-11.8,3.9-22,3.9-34.5\n                                    c3.8,4.7,0.3,7.8,0.3,11c0,3.4-0.6,6.8-0.9,11c3-2.7,4.1-5.3,3.3-8.8c2.9,2.4,2.9,5.8,0.3,8.4c3.9,1,4.6,0.6,4.2-2.9\n                                    c-0.2-1.5,0.7-2.5,1-3.7c0.2-1,0.8-2.6,0.5-2.8c-5.7-3.4-0.8-7-0.3-10.5c0.3-2,3.2-4.4-2-4.8c-2.1-0.2-4.5-3.7-3.5-6.8\n                                    c0.5-1.7,2.1-3.7,4.4-1.4c-0.6,1.5-0.1,2.8-0.2,3c0.1-0.4-0.5-1.9,0.2-3c1.7-2,2.8-2.9,2.5-6.4c-0.5-5.7-1.5-11.9-0.3-17.8\n                                    c1.4,0.4,1.8,1.5,2.1,2.8c1.4,4,3.1,7.9,4.2,12.1c2.2,1,3.3,2.6,2.8,5.2c0.3,1,0.7,2,1,3c1.6,2.5,1.7,5.1,1,7.9\n                                    c-0.7,2-2.7,2-4.3,2.5c-0.7-0.2-1.2-0.6-1.4-1.2c-0.1-0.3-0.3-0.1-0.1,0.3c3.1,5.6,0.6,11.3,0.4,17c-0.1,2.1-0.1,3.9,1.6,5.4\n                                    c0.8,2.7,0.8,5.4,0.8,8.2c-0.1,1.1,0.2,2.3-1,3c-0.1-0.8-0.3-1.5-1-2c-2.7-1-3.2,1.6-4.5,2.8c-0.3,0.3-0.5,0.8-0.9,1.1\n                                    c0.6-0.2,0.8-0.9,1.4-1.1c1-0.3,1.5,0.3,1.9,1.1c-0.3,1-0.7,2-1,3c-6.5,5.9-6.8,14.1-8,22c-1,1.1-2-0.4-3.1-0.1\n                                    c-3-0.9-0.5-3.7-2.7-5.7c-0.1-0.1-0.2,0.8-0.6,1.2c-0.9,1.2-1.3,3.6-3.4,2.5c-1.9-1-1.7-3.3-0.7-4.8c1.7-2.6,2.3-5.8,5-7.8\n                                    c0.3-0.3,0.6-0.7,0.9-1.1c0.3-0.5,0.9-0.5,1.4-0.6c-0.7-0.4-1,0.2-1.4,0.6c-0.2,0.2-0.4,0.5-0.6,0.7c-1.8,1-2.9,0-3.6-1.3\n                                    C522.4,657.5,521.2,656.7,519.9,656.1L519.9,656.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2B",
                  d:
                    "M537.9,585.1c-0.3-1-0.7-2-1-3c0-2.5,0.3-5.1-2-7c-1.4-5.4,0.1-11.7-5-16c-3-9.3-6.4-18.3-12.5-26.5\n                                    c-1,2.7,1.4,4,1.7,6.2c-3.2-0.6-4.1-3.5-3.8-5.5c0.5-3.2-1.2-5-2.5-7.2c2-2.8,4-2.5,5.8,0.2c1,1.5,1.9,3.2,4.3,2.5\n                                    c1.1,0.1,1.5,0.8,1.4,1.8c0,2.3,1.6,2.8,3.4,3.2c1.2,0.7,1.8,1.9,2.4,3.1c0.5,1,1.6,2.2,0.6,3.1c-1.2,1.1-2.8,0.6-4.1-0.3\n                                    c-1.4-1.1-2.6-2.5-3.8-4.3c1.4,2.7,4.2,4,5,6.7c3.7,2.3,8.8,1.9,11.3,6.5c2.5,4.6,2.3,5-2.6,5.1c-0.2,1.7,1.2,1.9,2.2,2.2\n                                    c3.5,1.4,5.2,4.2,4,7.5c-1.2,3.3-3.9-0.7-6,0.3c0.2,2.7,1.9,3.2,4.3,3.5c2.3,0.3,6.2,8.7,5,10.5c-0.4,0.5-1.8,0.3-2.8,0.4\n                                    c0.9,2.4,3.8,2.7,4.8,5c0.9,2.1,1.3,4-0.5,5.4c-1.8,1.4-3.4,0.6-4.5-1.3c-2.4-0.9-2-3.5-3-5.1c0.1,1.6,2.1,3.6-0.3,5\n                                    C538.3,587.7,538.7,585.6,537.9,585.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2B2A",
                  d:
                    "M484.9,494.1c-6.6-3.2-11.8-8.8-19-11c-5.6-1.6-11-3.6-15.4-7.6c-0.7-0.2,2-2.6-0.9-1.4\n                                    c-0.7,0.3-1.5,0.1-2.3,0c-9.1-2.4-18.4-4.1-27.2-7.5c-1.2-1.2-0.8-2.5-0.2-3.8c0.3-0.5,0.7-0.8,1.2-1.1\n                                    c1.3-0.5,2.6-0.6,3.8,0.4c0.3,0,0.7,0,1,0c0.5,0.7,2.1,0.4,1.9,1.2c-0.6,2.5,1.1,0.6,1.5,0.7c0.9,0.3,1.9,0.3,2.6,1.1\n                                    c0.4,0.3,0.8,0.8,1.2,0.8c10.6-0.9,19.5,3.9,28.5,8.3c1.8,0.9,4.1,1.1,4.9,4.1c0.8,2.7,4.4,1.3,6.6,2.5\n                                    c6.7,3.9,12.8,8.7,19.1,13.3c2.1,1.5,0.2,2-0.3,3C488.4,498.8,487.3,495,484.9,494.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373231",
                  d:
                    "M484.9,494.1c2.7,0.2,4.2,3.1,7,3c1.6,1.9,3.7,2.1,6,2c2.8-0.1,3,2.3,4,4c2,2,4,4,6,6\n                                    c2.2,1.2,4.2,2.6,5.6,4.7c0.7,1,1.4,2.1,0.4,3.1c-1,1.2-2.1,0.4-3-0.4c-2.1-1.8-4.6-3.2-5.7-4.6c1.8,1.9,4.9,3.8,7.6,6.1\n                                    c0.6,1.3,1.6,2,3,2c5.7,2.2,7.4,4.3,7,9c-2.1,2.3-2.5,2.5-4.6-1.2c-1.5-2.7-2.9-3.4-5.4-1.8\n                                    C505.6,513.7,494.2,504.8,484.9,494.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#34302F",
                  d:
                    "M351.9,470.1c-1.7,0.3-3.4,0.5-6,1c2.5-1.7,4.3-2.8,6-4c3-2.1,6.3-3.5,10-4c0.8,0,1.6-0.2,2-1\n                                    c7.2-2,14.8-2.1,22-4c0.7,0,1.3,0,2,0c1.1,3.5-1.9,3.7-3.8,4.2c-6.2,1.6-12.1,4.2-18.5,4.8\n                                    C361.1,468.4,356.5,469.3,351.9,470.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2F2E2C",
                  d:
                    "M420.9,462.1c0,0.3,0,0.7,0,1c-4.4,1.4-8.9,1.2-13.5,1.4c-4.1,0.1-8.2,0-12.3,0.1\n                                    c-4.3-0.9-8.7,2.4-13,0c-1-2.8,1.5-2.3,2.8-2.9c5.1-2.4,10.6-2.1,16-2.5c0.3,0,0.7,0,1,0c6.2-1.1,12,1.4,18,2l0,0\n                                    C420.2,461.5,420.8,461.5,420.9,462.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262320",
                  d:
                    "M512.9,518.1c-5.1-1.5-7.9-5.7-10.9-9.8c3.6,2.9,7.3,5.8,11.7,9.4c-0.7-4.6-4.5-5.7-5.8-8.6\n                                    c7.4-1.3,10.3,4.2,14.5,9.9C518.6,517.5,515.8,517.4,512.9,518.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M400.9,459.1c-4.5,1.9-9.5,1.7-14.2,2.9c-1.8,0.4-3.5,0.6-4.8,2.1c-5.7,6-8.1,6.3-17,2\n                                    c6.3-1.7,12.7-3.3,19-5c1.8-0.5,3.7-0.7,4-3C392.3,457.7,396.6,458.7,400.9,459.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262421",
                  d:
                    "M527.9,542.1c-3.4-2.3-5.7-5.5-7.6-9.1c3.7,1.6,5.6,5.8,10.2,6.5c-1.2-1.8-2.4-3.6-3.5-5.4\n                                    c-0.8-0.5-1.6-0.9-1-2c6,0.8,8.8,5,11.1,10.8C533.6,542.1,530.8,539.6,527.9,542.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#36312E",
                  d:
                    "M545.9,602.2c-1.5-1-0.6-3.8-3-4c-1.4-2.5-1.4-5.3-1-8c1.4,0.7,2.7,1.7,4.4,2.2\n                                    c3.1,0.8,5.2,7.8,3.2,10.1C548.3,603.8,547.1,602.5,545.9,602.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#292422",
                  d:
                    "M522.9,529.1c-0.6-4.4-4.1-6.4-7-9c6.5,0,11.3,3.5,14.7,11c-1.9,1.1-3.9-2.6-5.7,0\n                                    c-0.3,0.5-0.7,0.5-1,0C523.9,530.3,523.7,529.6,522.9,529.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#25211E",
                  d:
                    "M501.9,503.1c-1.9-0.7-2.5-2.8-4-4c4.9-1.8,9.1,0.5,13.5,7.4c-2.5,0.2-4.4-0.8-6.1-2.4\n                                    C504.5,503.3,503.7,501.2,501.9,503.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M541.9,590.1c0.8,2.6,1.2,5.3,1,8c-0.5-0.2-1.3-0.3-1.3-0.5c-0.2-4.5-2.2-8.4-3.7-12.5\n                                    c0.6-0.2,1.8,2.7,1.9-0.1c0-2-1-4-1.8-6.9c3.3,2.9,3.1,6.5,4.9,9C541.7,587.9,541.9,589,541.9,590.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#433E3B",
                  d:
                    "M546.9,614.1c0-3,0-6,0-9c2.4,1.3,3.6,3.4,4,6c-1,1.6,2,4.7-2,5C547.3,616.4,546.6,615.7,546.9,614.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M385.9,458.1c-7,3-14.5,3.3-22,4c2.1-2.5,5.2-2,8-2.4C376.5,459,381.2,458.6,385.9,458.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M419.9,461.1c-6.2,1-11.9-2.1-18-2C408.2,457.1,414.1,458.8,419.9,461.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M361.9,463.1c-3.1,1.8-6.5,3.2-10,4c0-0.3,0-0.7,0-1c0.7-0.5,1.5-1,2.2-1.5c-0.4-0.2-0.8-0.3-1.2-0.5\n                                    C355.6,460.7,358.9,463.1,361.9,463.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M431.9,465.1c-0.3,0-0.6,0-1,0c-2.4,0.1-4.8,0.5-5-3c1.6,0,3.2,0,4.8,0\n                                    C433.3,462.3,432.5,463.7,431.9,465.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M420.9,462.1c-0.3-0.3-0.7-0.7-1-1c1.7-0.1,3.9-1.9,5,1C423.6,462.1,422.2,462.1,420.9,462.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#373231",
                  d:
                    "M523.9,531.1c0.3,0,0.7,0,1,0c0.3,0.3,0.7,0.7,1,1c0.3,0.7,0.7,1.3,1,2\n                                    C524.5,534.6,524.3,532.8,523.9,531.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383331",
                  d:
                    "M494.2,493c-0.7-0.1-1.2-0.6-1.2-1.3c0-0.5,0.2-1.1,0.8-0.8c0.5,0.3,1.1,0.8,1.3,1.4\n                                    C495.4,492.9,494.7,493,494.2,493z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#302B29",
                  d:
                    "M276.9,674.1c1,1,2,2,3,3c4.6,4.9,8.3,10.7,13.3,15.3c1,1,2.1,2.6,0.4,3.8c-1.5,1.1-2.2-0.7-3.1-1.5\n                                    c-4.8-4.4-9.1-9.5-15.6-11.6c-1-1.3-2-2.7-2.9-4c-2.2-2.9-4.1-6-6-9c-1.2-4.2-2.9-8.2-5-11.9c4.7,0.7,6.8,4.7,8.7,7.9\n                                    C271.5,669.5,273.6,672.2,276.9,674.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2E2A29",
                  d:
                    "M249.9,619.1c2.8-0.6,2.1-2.7,1.6-4.3c-0.8-2.6-0.8-5.2,0.3-8c1,8.5,6,15.8,7.3,25.3\n                                    c-3.6-2.7-6.4-4.8-9.2-7C250,623.1,248.5,621.1,249.9,619.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3C3736",
                  d:
                    "M248.9,611.2c-2.9-3.7-1.7-8-2.2-13.4C249.7,602.9,248.5,607.2,248.9,611.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#3F3B38",
                  d:
                    "M252.9,634.1c-0.1,2,2.3,4,0,6c-1-3.6-2.1-7.2-3.5-12.2C252.3,630.1,252.3,632.3,252.9,634.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#423E3D",
                  d:
                    "M249.9,619.1c-0.8,2,1.6,4,0,6c-1.6-3.4-2.2-7-1.9-11.2C249.6,615.6,249.9,617.3,249.9,619.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#24201F",
                  d:
                    "M274.9,683.2c3.7-2.4,5.3,1.3,7.3,2.9c3.8,2.9,7.2,6.4,11.3,9.3c-4.4-6.2-10.8-10.9-13.6-18.2\n                                    c2.5-0.5,1.9-3,2.5-5.4c3.9,4.7,7,9.2,9.6,13.6c3.7,6.3,9.9,9.5,14.7,14.4c12.4,12.7,27.8,20.8,44.2,27.6\n                                    c4.9,2,10.7,2.2,14.8,6.3c0.3,0.3,1.3,0.1,1.9,0c6-0.6,11.1,2,16.3,4.5c1.4,3.3,5.1,0.2,7.2,3c-3.3,0-6.2,0-9.2,0\n                                    c-4.9,0.7-9.2-2.1-14-2c-8.1,0.9-15.3-2.6-22.8-4.5c-2.4-0.6-4.6-1.8-7.2-1.5c-2.7,0.1-5.4-0.1-8-1.1c2.6-3.3,6,0,9.2-1.3\n                                    c-3.1-2.5-6.2-4.7-9.8-5.8c-7.8-2.4-14.5-7.1-21.4-11.2c-1.9-1.2-3.9-1.8-6.1-1.7c-0.5-1.1-2.2-0.9-2.3-2.7c3-1,5.4,1.9,8.6,1\n                                    c-5.3-0.5-7-5.6-11.1-8c-5-3-9.1-8.3-13.4-12.8c-1.2-1.2-2.3-2.6-3.8-0.4c-1.1-1.5-2.3-3-4-4\n                                    C275.6,684.5,275.2,683.8,274.9,683.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#383331",
                  d:
                    "M490.9,717.1c4.5-6.3,10.9-11,14.6-18.1c1.2-2.3,4.5-1.2,5.4,2.1c-4.5,1.7-6.5,6.2-9.7,9.3\n                                    C498.1,713.4,494.7,715.5,490.9,717.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M526.9,660.1c-0.7,4.4-5.3,7.4-4.7,13.2c2.3-2.4,2.6-5.3,5.1-6.5c1.6,2.5,1.3,5.4,1.6,8.2\n                                    c-2,4.7-7.6,7.7-6,14.2c-3.1-2.7-4.3,0.1-5.4,1.7c-1.1,1.5-1.5,3.5-3.6,4.2c0.8-5,4.1-8.8,6.6-13c1.5-2.5,1-3-1.6-2.1\n                                    c-1.3-6.3-3.4-12.6,1.4-18.5c1.4-1.7,0.5-3.7-0.4-5.5c1.4,0,3.6-1.8,3.6,1.7C523.6,659.2,525.3,660.1,526.9,660.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2B",
                  d:
                    "M531.9,675.2c-0.8-5.2,0.5-10.3,1.4-15.4c0.6-3.2,2.2-6.6,6.5-6.7c0,3,0,6,0,9\n                                    c-3.5-0.9-4.2,2.1-5.3,4.1c-1.4,2.4-2,5.1-1.6,7.9c0,0.3-0.1,0.6-0.2,0.9C532.5,675.1,532.2,675.1,531.9,675.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M543.9,637.1c-3.5,0.2-3.4-2.3-2.9-4.3c1.4-4.8,0.6-9.8,1.3-14.7c0.4-2.7-3.2-4.4-1.8-7.5\n                                    c3.3-0.2,1.5,3.6,3.3,4.5c1.7,0.5,3.8,0.5,4,3l-0.1,0.1c-0.3,3.4,0.2,6.9-2,9.9c-0.6,0-1.5-0.3-1.7-0.1\n                                    c-0.8,1.2,0.4,2.1,0.7,3.1C546.2,633.4,546.6,635.5,543.9,637.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#4B4643",
                  d:
                    "M545.9,628.1c-0.1-3.5,0.1-6.9,2-9.9c3.3,3.9,0.8,8,0.9,12.1C546.9,630.3,547,628.5,545.9,628.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#484340",
                  d:
                    "M543.9,637.1c1.2-1.9,1.1-3.9,1-6c1.3,0,1.9,0.7,2.1,2c-0.1,4.1,0.3,8.3-2,12\n                                    C543.5,642.6,543.3,639.9,543.9,637.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#14100E",
                  d:
                    "M547.9,618.1c-1.1-1.4-3.5-0.9-4-3c0.3-2.6,1.7-1.6,3-1c0.7,0.7,1.3,1.4,2,2\n                                    C548.9,617,548.7,617.7,547.9,618.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#56514E",
                  d:
                    "M265.9,670.1c2.7,2.5,4.8,5.5,6,9C268.8,676.9,266.8,673.8,265.9,670.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#332E2B",
                  d:
                    "M540.9,650.1c-2.7-1.8-2.6,1.7-4.6,2.9c0.6-3.2,1.4-5.3,3-7.2c1.5-1.7,2.6-1.8,3.6,0.3\n                                    C542.2,647.5,541.6,648.8,540.9,650.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M519,680c-0.2,2-0.2,3.6-2.6,3.7C516.1,681.7,517.6,681,519,680z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M364.9,466.1c2.6,0,5.1-0.1,7.5,1.5c1.5,1,4,1.4,4.5-1.6c0.6-3.7,3.9,0.2,5-1.9c4.3-0.3,8.7-0.7,13-1\n                                    c5.9,1.2,11.9,0.2,17.8,0.5c2.7,0.1,5.3,0.2,7.2,2.5c5.4,1.2,10.8,2.3,16.2,3.6c4,1,7.8,2.2,11.8,3.4c0.9,0.8,2.5,0.5,3,2\n                                    c5,2.7,10,5.3,15,8c-4.7,1-9,2.6-13.7-1c-3.1-2.4-4.3,1-4.3,4c-0.7,0-1.3,0-2,0c-3.3-2.6-1.8-4.1,2.1-5.1\n                                    c-7.8-4.7-15.9-6.9-23.8-8.4c-9-1.7-18.1-4.1-27.4-3.5c-7.9,0.5-15.9,0.2-23.7,2c-2,0.5-3.8,0.9-2.2,3.5\n                                    c0.7,1.2,0.3,1.9-0.8,2.3c-1.1,0.3-2.5,0.5-2.9-1c-0.4-1.6-0.9-2.9-2.5-3.4c-1.5-0.4-2.1-7-4.7-0.8c-2.3-2.4-5.6,0.1-8-1.6\n                                    C355.8,467.4,360.6,467.7,364.9,466.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#312D2B",
                  d:
                    "M535.1,576.2c-0.4,0.5-0.6,1.3-1.1,1.4c-0.9,0.2-1-0.6-0.9-1.2c0.1-0.8,0.7-1,1.3-1.2\n                                    C535.5,575,534.6,575.9,535.1,576.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M400.9,478.1c-0.7-0.3-1.3-0.7-2-1c0.2-2.4,1.7-3.1,3.8-3c4.8,0.2,9.6-0.4,14.3,1\n                                    c3.8,1.1,7.6,2.4,11.7,2.1c1.7-0.1,2.8,0.8,4,2.9c-10.4-1.9-20-4.9-30-4.9c-0.7,2.5,1.9,1.7,2.2,3\n                                    C403.6,478.1,402.2,478.1,400.9,478.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#221E1F",
                  d:
                    "M436.6,485.7c2.2-0.8-0.6-4.6,2.6-4.2c1.3,0.2,2.8,1.4,2.3,3.3C440.7,487.4,438.5,485.6,436.6,485.7z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M492.9,518.1c1.4-0.5,0.8-3.9,3.3-2.5c1.5,0.9,0.4,2.5-0.4,3.4C494.3,520.8,493.3,520.1,492.9,518.1\n                                    L492.9,518.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M526.7,660.3c0.6-2,1.1-3.4,2.8-2.6c0.9,0.4,2.7,1.8,0,2.4C528.9,660.2,527.8,659.6,526.7,660.3z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M534.8,606.2c0,1.6,0,3.2,0,4.8C534,609.3,533.4,607.7,534.8,606.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#2C2827",
                  d:
                    "M540.9,605.2c0.3,0.7,0.5,1.1,0.5,1.4c0,0.2-0.3,0.6-0.6,0.7c-0.7,0.3-0.9-0.3-0.8-0.8\n                                    C540.1,606.2,540.5,605.8,540.9,605.2z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M419.9,466.1c-7.1-2.5-14.5-2.2-21.8-1.8c-1.4,0.1-2.6,0.4-3.2-1.2c8.7,0,17.3,0,26,0\n                                    C420.6,464.1,420.2,465.1,419.9,466.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M450.9,475.1c-1-0.7-2-1.3-3-2c1.4,0.2,2.8-0.5,4,0.5C452,473.7,451.3,474.6,450.9,475.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M391.9,465.1c-1.2,1.1-2.4,2.4-5.3,0.4C389.1,465.3,390.5,465.2,391.9,465.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#262221",
                  d:
                    "M403.3,466.5c-1.2-0.2-2.3-0.4-4.1-0.7C401,464.9,402.2,464.9,403.3,466.5z"
                }
              })
            ]),
            _vm._v(" "),
            _c("g", { attrs: { id: "disk" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M402.8,655.1c-6.2-4.4-12.9-3.5-19.7-2c-7.5,4.3-12.7,11.1-18.5,17c-7.5,7.7-15.2,15.2-21.1,24.2\n                                            c-0.8,2.8-2.5,4.1-5.5,3.3c-2.9-0.8-2.4-3.1-2.2-5.2c0.1-0.5,0.2-0.9,0.3-1.4c0.2-0.4,0.4-0.8,0.8-1.2\n                                            c0.7-0.8,1.9,2.3,2.5-0.5c0.4-1.7,2.1-2.9,3.2-4.3c10.7-13.5,22.3-26.3,33.7-39.2c3.1-3.5,7.5-4,11.7-5\n                                            c3.6-0.7,7.3,0.1,10.9-0.8c1.3-0.2,2.5-0.2,3.4,1c0.8,0.7-1.3,1-0.4,1.4c4.3,1.4,7.1,4.7,9.8,8.1c5.7,6.2,10.3,13.5,16,19.7\n                                            c2.5,2.7,5.3,5.1,7.9,7.7c0.5,0.8,0.7,1.7,0.8,2.7c0.2,1,0.1,2.1,0.8,2.8c4.9,4.6,8.2,10.7,13.9,14.6c3.8,1.7,9.1,0.8,11.8-2\n                                            c1.3-1.4,1-3,0.5-4.6c-0.7-1.9-2-3.4-2.5-5.4c-1.5-4.5-4.5-8.1-6.9-12.1c-7.7-12.8-16.4-25-24.1-37.8\n                                            c-7.2-11.8-0.7-31,12-36.3c19.8-8.2,39.8-15.8,59.9-23.3c1.5-0.6,3.3-0.8,4.2-2.4c0.5-0.7,1.2-1,2.1-1.3\n                                            c5.8-1.6,6.5-2.6,5.5-7.2c-1.6-7.4-3.2-8.7-9.3-7.7c-11.6,2.3-22.7,6-33.9,9.8c-8.3,2.9-16.7,5.3-24.8,8.8\n                                            c-1.4,0.7-2.8,1.2-4.5,1.1c-2-0.5-3.9-0.1-5.9,0.4c-10.2,2.9-22-1.7-27.8-10.6c-1.4-2.1-2.3-4.4-4.1-6.2\n                                            c-2.6-5.2-0.8-11.1-2.4-16.5c-0.4-5.7,0.5-11.5-0.5-17.2c-0.2-0.6-0.3-1.1-0.4-1.7c0.1-10.7-1.9-21.4-1.3-32.1\n                                            c0.1-1.6,0.1-3.2,0.6-4.7c0.3-0.8,1-1.1,1.8-1.2c-1-0.5-1.3,0.7-2,0.9c-1.9,0.6-3.8,0.7-5.6-0.4c-0.9-0.1,1.7-2.6-1-1.5\n                                            c-0.9,0.4-1.8,0.6-2.8,0.6c-0.7,0,0.1,0.9-0.1,0.3c-0.1-0.2,0.1-0.3,0.4-0.3c1.2,0.1,2.7-0.7,3.4,1c-1.1,2-3.1,1.7-4.9,2\n                                            c-3.9,3.1-3,7.8-3.7,11.8c-1.8,10.5-1,21.2-1.1,31.8c0,3.6-2.2,7.2-0.1,10.7c0.3,0.7,0.5,1.4,0.6,2.2c0.2,1.9-2,3.7-0.6,5.7\n                                            c0.1,0.4,0.1,0.9,0.1,1.3c-1.5,2-0.2,3.8,0.5,5.6c0.4,1.7,0.4,3.4,0.2,5.1c-3.5,9.7-11,14.9-20.4,17.8\n                                            c-6,0.4-11.8-2-17.8-1.8c-10.2-0.8-19.5-5.2-29.6-6.6c-1-0.2-1.9-0.6-2.7-1.3c-3.1-3.4-8.1-2.6-11.6-5.4c0,0,0.8,1.3-0.2,1.8\n                                            c-1.2,0.8-2.5,0.5-3.9,0.4c-2.3-0.3-4.9-1.2-6.1,1.6c-1.3,2.9-2.4,6,0.6,8.7c0.4,0.3,0.6,0.8,0.8,1.2c0.2,0.4-0.4,1-0.3,1.1\n                                            c5.4,1.4,10.2,4.5,15.7,5.7c12.5,4.6,25.3,8.5,37.5,13.8c2.9,1.5,6.1,2.6,8.3,5.4c0.3,0.4,0.5,0.8,1.1,0.9\n                                            c5.1,0.8,6.6,3.1,4.3,7.7c-0.8,1.6,0.4,2.2,0.5,3.2c0.2,1.8,0.9,3.5,0.9,5.4c0,1.5-0.1,3.1,0.3,4.6c0.1,0.4,0.2,0.9,0.3,1.3\n                                            c0.1,0.7,0,1.3-0.2,2c-0.5,1.8-1.5,3.2-3,4.3c-2.3,2.1-3.9,4.7-5.7,7.2c-0.2,0.4-0.5,0.8-0.8,1.1\n                                            c-9.2,11.2-17.3,23.1-25.2,35.1c-0.5,0.8-1,1.7-1.9,2.2c-0.5,0.2-1,0.2-1.5,0.1c-4.1-1-3.5-3.7-2.3-6.5\n                                            c3-5.3,6.7-10.2,8.8-16l0,0c3.4-3,5.1-7.3,7.4-11c3.2-5,6.6-9.9,9.1-15.4c3.2-7.1,3.2-14-1.6-20.5c-0.3-0.3-0.6-0.6-1-0.9\n                                            c-3.7-2.9-8.3-4.3-12.3-6.7c-3.6-1.9-7.6-3-11.1-5C312,597,303.7,593,295,590c-2.7-0.5-5.3-1.1-8.1-0.4c-3,0.7-5.2-1.1-7-3.4\n                                            c-1.2-4.2,0.3-8.1,1.3-12c1.1-4.3,2.8-8.4,4-12.7c0.9-3.3,2.6-4.9,6.1-3.6c1.3,0.1,2.5,0.1,3.8,0.2c1-0.8,2-0.9,2.9,0\n                                            c1.8,1.7,3.7,3.2,6.3,3.8c15.4,3.3,30.9,6.9,46.6,8.6c13.2,1.4,19.5-3.3,21.1-16.6c2.3-18.3,4.6-36.6,5.7-55.1\n                                            c0.1-1,0-2.1,0.5-2.9c2.5-4.4,2.9-8.8-0.4-13.3c9.5-3.1,18.8-2.7,28-2.9c1.8-0.1,2.9,0.7,2.9,2.6c-0.2,4.6,1,9.2,0.3,13.9\n                                            c-1.3,8.6,0.2,17.3,1.1,25.9c1.3,11.4,2.3,22.8,4.7,34.1c1.5,7,7.6,11.8,14.8,11.7c6.7-0.2,13.1-2.3,19.5-3.9\n                                            c14.7-3.7,29.3-7.7,44-11.4c6-1.5,11.2-4.6,16.8-6.9c2.4-1,3.1-0.8,4.1,1.2c4.6,9.9,8,20.1,10,30.8c0.6,3.5-2.5,6.4-7.3,5.4\n                                            c-7.6-1.5-14.1,1.3-20.7,4.1c-14.3,6-28.5,12.2-42.4,18.8c-2.7,1.3-5.2,2.8-7.6,4.7c-8,6.4-10.1,14.6-5.3,23.7\n                                            c8.7,16.5,17.8,32.7,27.7,48.5c2,3.2,4.5,6.2,6.7,9.2c0.9,1.7,0.6,3.2-1,4.3c-7.4,5.2-14.9,10.5-23.3,14.1\n                                            c-1,0.4-1.9,0.5-2.7-0.3c-1.4-2.3-2.7-4.6-4.1-6.8c-1.1-3.8-3.9-6.4-6.4-9.3c-10.2-11.5-20.6-22.8-30.4-34.7\n                                            C405.9,657.7,404.5,656.3,402.8,655.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("AF5D5B"),
                    d:
                      "M402.8,655.1c5.4,1.1,7,6.3,10.2,9.7c7.8,8.1,15.3,16.7,22.4,25.4c3.3,4,8.1,7.1,8.5,13\n                                            c-13.1-15.1-26.1-30.1-39.2-45.2C404,657.1,402.9,656.4,402.8,655.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("AB5555"),
                    d:
                      "M343,694c2.9-6.3,8.1-10.8,12.6-15.8c6.8-7.5,14.2-14.4,21.3-21.5c1.8-1.8,3.5-3.5,6.3-3.6\n                                            c-12.2,11.2-23.4,23.3-34.4,35.5c-2.1,2.3-3.8,5.1-5.6,7.6C342.4,695.5,342.4,694.8,343,694z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B16260"),
                    d:
                      "M344.9,613.1c4.9,4.3,5.8,12.8,2.3,20.7c-3.7,8.2-9.2,15.4-13.6,23.2c-0.8,1.5-1.5,3.1-3.5,3\n                                            c4.5-7.5,8.9-15.1,13.7-22.5C348.8,629.5,349.5,621.5,344.9,613.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B46764"),
                    d:
                      "M339,701c-0.2,2.6-1.1,3.8-3.7,1.9c-6-4.4-12.2-8.6-17.7-13.6c-3.9-3.5-3.6-5.8,0.3-8.5\n                                            c0.7,0.4,0.8,1.1,0.8,1.8c-0.7,2.8,1.2,4.2,2.9,5.6c1.7,1.9,3.5,3.7,5.6,5.1c1,0.8,2,1.6,3.1,2.3c1.6,1.3,3.2,2.7,5.3,3.5\n                                            C336.8,699.6,338.1,699.9,339,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B56B68"),
                    d:
                      "M448,710c7.8-1.8,14.2-6.1,20.3-10.9c2.5-2,6.8-2.6,6.7-7.1c1.8,1.5,2,3,0,4.5\n                                            c-7.7,5.8-15.8,11.2-24.8,14.9C449,711.8,448,711.9,448,710z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A95252"),
                    d:
                      "M291.3,557.9c-1.9,0.2-4.1-0.1-4.9,2.5c-2.6,8.5-6.5,16.7-6.5,25.8c-2.2-2.3-0.9-5-0.5-7.4\n                                            c1.2-6.3,3.3-12.4,5.3-18.6C286.1,556.1,288,555.6,291.3,557.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9E3A40"),
                    d:
                      "M339,701c-1.4,0.1-2.7-0.3-4-1c-0.8-1.3-2.1-2.4-2-4.1c0.4-2.2,1.1-4.2,4-3.9\n                                            c0.7,1.5-1.9,3.8,0.8,4.6c2.2,0.7,4.2-0.2,5.2-2.6c0,0.7,0.1,1.5,0.2,2.2C343.1,699,340.4,699.4,339,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("BB7773"),
                    d:
                      "M295,590c9.3,1.8,17.3,6.6,26,10.1c0.3,0.3,0.4,0.5,0.3,0.8c-0.1,0.3-0.2,0.4-0.3,0.4\n                                            C312.2,597.6,303.3,594.5,295,590z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3E41"),
                    d:
                      "M318,683c0-0.7-0.1-1.5-0.1-2.2c0.7-1.3,1.3-2.6,2-3.9c0.7-0.3,1-1.6,2.2-0.9c-0.9,2.5-1.3,4.9,2,6\n                                            c0.7,2.1,0.2,3.7-2.1,4.5C320,685.9,317.1,686.6,318,683z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B36663"),
                    d:
                      "M322,676c-0.7,0.3-1.5,0.6-2.2,0.9c3.4-5.6,6.8-11.3,10.2-16.9C329.2,666.3,324.9,670.8,322,676z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B36764"),
                    d:
                      "M332,605c4,2.4,8.9,3.1,11.9,7.2c-4-2-8-4.1-11.9-6.1c-0.3-0.3-0.4-0.5-0.3-0.7\n                                            C331.8,605.1,331.9,605,332,605z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B46966"),
                    d:
                      "M332,605c0,0.4,0,0.7,0,1.1c-3.7-1.6-7.4-3.2-11.1-4.8c0-0.4,0-0.8,0.1-1.2\n                                            C324.6,601.7,328.3,603.4,332,605z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D2C34"),
                    d:
                      "M364,582c5.3-2.4,10.1-5.6,14.2-9.7c2.2-2.1,3.9-4.4,4.8-7.3c2.7-0.2,3.4,4.3,6.7,2.6\n                                            c0.3-2.6-0.1-4.9-3.5-5.6c-1.6-0.3-2.5-1.4-2.8-3c-0.8-1.6-0.7-3.3-0.5-4.9c0-0.3,0-0.7,0-1c-2-1.7,0.7-3.3,0-5\n                                            c0-0.7,0-1.3,0-2c-0.8-1.2-0.5-2,1-2.2c0.7,0.4,1.3,1,1.8,1.6c1,1.2,2.1,2.2,3.8,1.6c1.9-0.7,2-2.4,2.1-4\n                                            c0.1-3.8,0-7.5,0-11.3c0-1.6,0-3.2-0.1-4.9c0-2.6,0-5.2,0-7.8c0.2-1.5,0.2-3.1,1.4-4.2c0.7-0.2,1.2,0.1,1.6,0.6\n                                            c1.9,5.7,1.1,11.5,0.9,17.3c-0.5,12.5,1.3,24.8,1.2,37.2c0.5,1.7,0.4,3.3-0.6,4.8c-1.3,2-3.9,2.5-5.2,4.5\n                                            c-1,1.6-0.6,3.3-0.3,4.9c0,0.5,0,0.9-0.2,1.3c-3.4,2.9-7.7,4.5-10.8,7.8c-1.2,1.2-2.7,1-4.2,0.5c-3-1-5.5-0.3-7.7,1.9\n                                            c-1.4,1.4-2.8,2.2-4.2-0.1c-0.2-0.6-0.3-1.3-0.2-1.9c1.3-4.6,1.7-8.7-4.8-9.3c-0.7-0.1-0.8-0.9-0.6-1.6\n                                            C359.8,581.6,362,582,364,582z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("85252C"),
                    d:
                      "M358,583c2,2.6,7.5-1.3,7.8,3.9c0.1,3-1.1,6.1-1.8,9.1c-0.2,0.2-0.4,0.3-0.7,0.5\n                                            c-5.4,0.2-10.4-1.8-15.4-3.5c-9.2-3-18.5-5.4-28.3-4.7c-2.2,0.2-4.3-0.3-6.3-1.1c-0.5-0.2-0.9-0.4-1.3-0.7\n                                            c-0.7-3.7-2.5-6.6-6.3-8c-0.4-0.3-0.7-0.7-1-1.1c-0.4-4.5,0.9-5.8,5.1-5.3c2.1,0.2,3.9,2,6.2,0.9c10.2,1.3,19.9,5.2,30.1,7\n                                            C350.2,580.4,354.2,581.4,358,583z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A13F43"),
                    d:
                      "M506,574.9c1,1.9-0.6,1.8-1.6,2.1c-20.4,7.5-40.6,15.6-60.8,23.4c-11.1,4.3-13.8,12.8-15.6,22.8\n                                            c-1.1,6,1.4,11,4.6,15.8c9.2,14.2,18.3,28.4,27.5,42.6c0.9,1.4,1.8,2.8,2,4.5c-2.5,0.5-3.4-1.5-4.4-3.1\n                                            c-2.3-3.3-4.2-6.9-6.4-10.4c-4.6-5.5-7.2-12.4-12.1-17.8c-4.1-5.3-7.2-11.4-11.1-16.8c-7.8-13.5-2.2-31.8,11.7-38.7\n                                            c3.6-1.8,7-3.8,10.8-5.1c7.7-2.4,15-6.2,22.6-8.8c1.8-0.4,3.7-0.8,5.3-1.8c0.4-0.2,0.9-0.4,1.3-0.6c8-3.1,15.9-6.3,24.1-8.7\n                                            C504.7,574.2,505.4,574.4,506,574.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171D"),
                    d:
                      "M396,571c-1-0.8-0.9-2-1-3.2c-0.8-17.6-1.3-35.2-1-52.8c-2.5-7.2-1.6-14.6-0.5-21.9\n                                            c0.2-1.5,1.3-2.6,3-2.9c2.2-0.3,2.8,1.2,3.5,2.8c0.3,11.3,0.7,22.7,1,34c-2.8-0.7-0.9-2.9-1.4-3.8c0-1.1-1.1-0.3-0.5-0.5\n                                            c0.2-0.1,0.3,0,0.3,0.4c0.5,5.1,0.3,9.8-1.4,14.9c-2,6-0.5,12.8-0.6,19.3c-0.1,2,0.1,4,0,6C397.1,565.8,398.2,568.7,396,571z\n                                            "
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("5D1316"),
                    d:
                      "M396,563c0-6.8-0.1-13.6,0-20.4c0-3.3-0.6-6.6,2.4-9.7c1.4-1.4,0.5-5,0.6-7.7c0.1-1.7,0-3.5,0-6\n                                            c1.9,2.9-0.2,5.8,2,7.7l0,0c1,4.2,0.2,8.5,0.5,12.7c0.1,1.8-0.5,3.6,0.5,5.3c1.8,5.5,0.2,11.5,2,17c1.4,2,2.3,4.2,2.6,6.6\n                                            c-0.4,2.8-1,5.2-4.5,5.6c-3.8,0.4-5.5-1-5.7-4.9C396.4,567.2,397.1,565,396,563z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("631418"),
                    d:
                      "M402.1,641.9c-0.8-1-1.9-0.9-3-0.9c-4.4,1.2-9-0.2-13.4,1c-1-0.1-2,0.8-2.9,0\n                                            c-0.6-2.9,1.6-2.9,3.3-3.2c3-0.5,6-0.2,8.2-0.2c-4,1.6-6.6-2.1-9.8-4.3c-1.2-0.8-1-2-0.5-3.1c2.3-2.6,1.7-6.1,2.9-9.1\n                                            c0.7-0.4,1.4-0.2,2,0.2c0.4,0.3,0.7,0.7,0.9,1.1c0.7,3.2,4.9,4.8,4.2,8.7c0.3,0.6,0.8,1.5,1.4,1c0.9-0.7-0.4-1.3-0.6-2\n                                            c0.4-3.4,3.1-3.9,5.7-4.6c0.5,0,1,0,1.4,0.1c1.1,0.4,2.1,1.2,3.1,1.8c2.2,1.9,4.7,2.8,7.7,2.5c4.4,0.6,7,3,7,7.6\n                                            c-2,1.9-2.8-0.2-3.7-1.2c-1.6-2-2.6-1.5-4.3,0.1c-2.1,2.1-3,5.1-5.8,6.5C404.2,644,403,643.2,402.1,641.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("95373E"),
                    d:
                      "M360.1,625.2c0-0.7-0.1-1.3-0.1-2c0-3.1-3.1-5.9-0.2-9.5c0.8-1.1-0.5-4.7-3.3-6.3\n                                            c0.1,1.3,0.1,2.1,0.2,3.6c-3.4-3.5-6.5-6.4-10.6-7.9c0.4-0.9,1.2-1.3,2.2-1.5c1.2-0.1,2.2,0.4,3.3,0.7\n                                            c3.7,0.3,6.8-2.1,10.2-2.8c1.9-0.4,3.5-1.1,4.9,0.7c1.5,1.8,3.1,3.4,5.4,4.2c2.4,1,3.5,2.7,3.2,5.3c-0.2,1.2-0.7,2.7-2,2.4\n                                            c-4.6-1.1-6,3.1-8.9,4.9c-1.4,0.9-1.7,2.4-1.4,3.9c0.3,1.8,0.5,3.6,0.4,5.4c-0.3,1.5,0,3.3-2.2,3.6l-0.1-0.2\n                                            C359.9,628.5,361.1,626.6,360.1,625.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1519"),
                    d:
                      "M293.1,581.9c-4.4-3-5.3-8-2.3-12.5c1.2-1.8,2.8-1.4,4.4-1.4c2.3-0.1,4.4,1.4,6.8,0.9\n                                            c2.5-1,4.1,0.9,6,1.8c0.5,2.7-2,1.6-3,2.2c-1.6,0.9-3.6,0.4-5.5,1.7c2.3,1.3,4.8,1.6,6.5,3.4l0,0c1.3,1.2,3.6,1.5,3.3,4.2\n                                            c-0.3,1.8,1.8,2.5,2.8,3.8l0,0c0.5,0.7,2.2,0.3,1.9,1.7c-0.3,1.4-1.7,1.3-2.8,1.3c-1,0-2-0.3-3-0.6\n                                            C303.2,586,297.7,585,293.1,581.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("72161B"),
                    d:
                      "M337.1,690c-0.1,0.3-0.1,0.6-0.1,0.9c-0.4,0.4-0.8,0.4-1.2,0.1c-1.1-3.2,1.5-6.7-0.7-9.9\n                                            c0-2.5,2.2-3.6,3.2-5.4c4.5-6.3,10.2-11.8,14.1-18.6c0.5-0.9,1.3-1.5,2.4-1.7c0.5,0,0.9,0.1,1.4,0.3c3,3,2.7,5.9,0.2,9.1\n                                            c-1,1.3-2.9,2.5-1.8,4.7c-1.3,5.2-6.2,7.7-8.9,11.9c-0.9,1.3-2.3,2.3-3,3.8C340.8,686.8,339.9,689.4,337.1,690z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("882830"),
                    d:
                      "M361.1,630.1c1.4-1.1,0.8-2.7,1-4.1c0.9-1.9,2.3-1.1,3.7-0.7c3.7,1.1,7.2,2.8,10.8,4.3\n                                            c0.8,0.5,1.3,1.3,0.8,2.1c-3.7,6.1-8.1,11.7-14.4,15.5c-1.8-1.7-3-3.8-1.9-6.1c1.5-3.2,1-6.1-0.1-9.2\n                                            C361,631.4,361,630.7,361.1,630.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92222C"),
                    d:
                      "M384,544c-0.8,0.4-1,1.2-1,2c-2.1-0.9-2.3-2.8-1.9-4.6c1.8-7.9,0.7-15.8,0.9-23.7\n                                            c0.2-8.7,1.2-17.3,2.9-25.9c0.4-2.1,1.1-2.9,3.1-2.7c2,2.9,0.1,5.8-0.1,8.6c-0.2,2.4-1.6,5,0.6,7.2c-2.6,7-2.3,14.2-2,21.5\n                                            C385.5,532.2,386.6,538.4,384,544z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86262D"),
                    d:
                      "M440.9,577c1.4-0.3,2.7-0.6,4.1-1c1.7-0.9,3.5-1.9,5.5-1.5c2.6,6.5,3.9,7.1,11.1,5.3\n                                            c1.6-0.4,3.2-1.1,4.6,0.3c0.1,0.5,0,1-0.2,1.4c-5.3,3.6-11.8,4-17.6,6.4c-1.4,0.6-2.9,1.2-4.5,1.1c-6.1-2.9-7.3-6.4-3.7-11.6\n                                            C440.5,577.2,440.7,577.1,440.9,577z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92242D"),
                    d:
                      "M451,575c-2,0.3-4,0.7-6,1c0.6-1.4,1.8-1.8,3.1-2.2c17-5.5,33.7-11.7,51-16.3\n                                            c1.6-0.4,3.3-0.4,4.9-0.5c-1.9,2.3-1.9,2.3-6.1,1.9c0.8,1.3,2.6-0.1,3.3,1.3c-0.4,1.9-2.1,1.9-3.5,2.3\n                                            c-13.4,3.9-27,7.1-40.1,12.1C455.6,575.4,453.3,576.5,451,575z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1F27"),
                    d:
                      "M452,672c3.9,4.3,5.1,10.5,10,14c0.2,0.6,0.2,1.3,0.6,1.9c1.8,2.8,4.1,5.8,1.3,8.9\n                                            c-3.6,4-9.8,4.7-13.9,2.2c-4.3-5-8.4-10.1-13-14.8c-1-1-1.3-2.2-2-3.3c0-1,0-2,0-3c0.2-0.1,0.4-0.1,0.7-0.2\n                                            c4.6,2.1,6.6,6.7,9.9,10.1c1.9,2,3.6,4.3,5.5,6.3c2,2.1,7,2.6,8.6,0.7c2.1-2.4,0.6-4.6-0.8-6.7c-1.3-1.9-2.8-3.7-3.8-5.8\n                                            c-1.1-2.6-2.9-4.9-3.8-7.7C451.1,673.7,451.2,672.8,452,672z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("913239"),
                    d:
                      "M361,632c2.5,2,4.4,3.9,1.8,7.3c-1.8,2.3-0.2,5.1,0.2,7.7c0.3,0.4,0.4,0.8,0.3,1.2\n                                            c-2.4,2.7-4,6-7.3,7.7l-0.5,0l-0.5,0c-1.9-3.1-0.5-7.3-3.4-10.1c-0.2-0.7-0.2-1.3,0.4-1.9l0,0c2.1-2.6,4.1-5.3,6-8\n                                            C359,634.7,360,633.3,361,632z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A34345"),
                    d:
                      "M341.9,684.9c2.3-4.7,6.7-7.6,9.6-11.8c0.9-1.3,2.5-2.2,2.5-4.1c-0.7-1.4,0.7-1.9,1.2-2.7\n                                            c1.4-0.9,2.5-2.3,3.4-3.7c1.6-2.1,3.8-3.7,4.7-6.3c4.3-4.3,8.6-8.5,13.1-12.7c1.8-1.6,3.8-3.3,6.6-1.7\n                                            c0.7-0.3,1.4-0.5,2.1-0.8c0.5,0.6,1.6,0.2,2,1c-8.9,0.9-13.1,8.3-18.3,13.9c-8.9,9.7-17.2,20-25.7,30.1\n                                            C342.1,686.2,341.6,685.9,341.9,684.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71191F"),
                    d:
                      "M388,504c-3.5,0.9-2-2-1.9-3c0.4-4,1.3-8,1.9-12c1.7-0.3,3.6,0.7,4.9-1.1l0,0c2.3,0,4.7,0,7,0l0,0\n                                            c0,1.7,0,3.3-0.1,5c-1.1-0.8-1.9-2.6-3.7-1.8c-2,1-2.2,3.2-2.2,5.1c-0.2,6.2-0.1,12.5-0.1,18.7c-0.3,0-0.6,0-1-0.1\n                                            c-2.9-5.2-0.5-10.9-1.6-16.3C390.9,500.7,390.8,503.3,388,504z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8E1C26"),
                    d:
                      "M501,560c-0.9,0-1.9,0-3.1,0c1.6-2.5,4.6-1.2,6.1-3c4.4-2.1,7.6-1.5,8.9,3.8c0.5,1.9,1.5,3.7,1.9,5.6\n                                            c1,5.1-0.5,7-5.7,7.6c-1.1,0.1-2.3-0.1-3.2,0.9c-0.7,0-1.3,0.1-2,0.1c-0.5-1.1,0.1-1.9,0.7-2.7c0.9-1,2.2-1.4,3.2-2.2\n                                            c1.8-1.4,1.9-3.4,1.5-5.4c-0.4-2.1-2-2.9-3.9-3.2C504,561.1,502.3,561.4,501,560z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M352,644c0,0.7,0,1.3,0,2c-0.6,4.2-3.9,6.7-6.2,9.9c-4.5,6.3-8.5,13-13,19.3c-1.5,1.9-1.7,4.8-4.3,6\n                                            c-0.5-1-1.4-1.4-2.5-1.1C333.7,667.3,341.9,654.9,352,644z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1E27"),
                    d:
                      "M326,680c1.1-0.5,2.1-0.8,2,1c0,0.2,0.1,0.4,0.1,0.7c0.1,1.3,0,2.7,0.7,3.9c0.4,0.7,0.9,1.4,1.5,2.1\n                                            c1.4,1.9,4.1,1.8,5.7,3.3c0.3,0,0.6,0,1,0c0,0.3,0,0.7,0,1c-1.6,0.8-2.8,2-3,3.9c-1.3,1.2-2.6,0.9-4,0.1\n                                            c-1.4-0.1-2.4-0.8-3-2c-5-5.5-5.1-6-2-12C325,681.2,325.2,680.4,326,680z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A24547"),
                    d:
                      "M406,568.1c-1.2-1.8-2.1-3.8-1.9-6.1c1-0.5,1.5-0.4,2.1,0.9c6.1,12.4,16.5,16.9,30.2,13.5\n                                            c1.6-0.4,3.2-0.9,4.6,0.6c0,0,0.1,0.1,0.1,0.1c-1.8,2.8-5,2.9-7.8,3.7c-0.7,0.1-1.4,0.2-2.1,0c-2-0.6-4-0.6-6.1,0\n                                            c-0.7,0.2-1.4,0.2-2.1,0.1C415.9,578.3,410,574.5,406,568.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A64E57"),
                    d:
                      "M308,587.8c0.9,0.1,1.9,0.2,2.8,0.3c11.4,2.3,22.1,6.9,32.9,10.8c1.7,0.6,3.6,1.1,4.2,3.1\n                                            c-0.4,0.8-1.2,1-2,1.1c-12.7-4.7-25.3-9.4-38-14.1C307.7,588.6,307.7,588.2,308,587.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("812228"),
                    d:
                      "M384,559c0.4,0.5,0.8,1.4,1.2,1.4c6.3,0.1,6.1,4.4,5.9,8.9c-3.7,0.5-6.4-1-8.1-4.4c0-2,0-4,0-6\n                                            C383.3,558.6,383.7,558.6,384,559z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("781C22"),
                    d:
                      "M306,578c-2.5-0.7-5.1-1.3-7.6-2c-0.8-0.2-1.7-0.6-1.7-1.5c0-0.9,1-1.1,1.8-1.4\n                                            c3.1-1.2,6.6-0.3,9.5-2c2.3-1.4,4.1,0,6,0.9c0.4,0.8,1.2,1,2,1c-1.9,1.7-4,0.9-6,0.5C305.5,572.5,304.7,573.5,306,578z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1F27"),
                    d:
                      "M435,678c-3.8-1.1-5.7-4.3-8-7c-2.2-4.1-6.8-6.6-7.1-11.8c4.1-0.5,4.9,3.2,7,5.3\n                                            c2.4,3.2,4.4,6.8,7.3,9.7C435.2,675.1,436.3,676.4,435,678L435,678z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3942"),
                    d:
                      "M420,659c1.1,4.7,6,7.2,7,12c-6.2-6-11-13.1-16-20c0.2-0.1,0.4-0.3,0.6-0.4c4,1.3,5.7,4.9,8.3,7.7\n                                            C419.9,658.6,419.9,658.8,420,659z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A1474D"),
                    d:
                      "M358,583c-4.2,0-8.2-0.9-11.9-3c0.4-0.3,0.8-0.9,1.2-0.8c5.6,0.9,11.2,1.9,16.8,2.8\n                                            C362.1,583.2,360.1,583,358,583z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A03B44"),
                    d:
                      "M435,681c5.4,5.7,11.1,11.1,15,18c-5.7-4-9-10.3-14.2-14.8C434.9,683.4,435,682.1,435,681z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9D4047"),
                    d:
                      "M308,587.8c0,0.4,0,0.8,0,1.2c-5.6-1.1-10.6-4-15.8-6.1c-0.1,0-0.1-0.2-0.2-0.3\n                                            c0.4-0.2,0.8-0.4,1.2-0.6C298.2,583.6,303.6,584.5,308,587.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A14851"),
                    d:
                      "M314,572c-2-0.3-4-0.6-6-0.9c-2.4,0.4-3.8-1.9-6-2.2c-0.1-0.7-1.5-1.7-0.9-1.6\n                                            C305.7,568,310.4,568.6,314,572z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M325,682c-2.3,4.5-0.2,8.3,2,12c-2.6-0.9-4.4-2.8-5.9-5.1c-0.8-1.3-1.5-2.6,0.9-2.9\n                                            c1.4-1,1.1-2.8,2-4C324.3,682,324.7,682,325,682z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A5464E"),
                    d:
                      "M402.1,641.9c1.3,0.4,2.6,0.8,3.8,1.2c2.9,1.1,4,3.7,5.6,6c0.2,0.7,0,1.4-0.5,1.9l0,0\n                                            c-3.3-2.5-5.9-5.9-9.6-7.9C399.8,642.2,401.7,642.2,402.1,641.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171D"),
                    d:
                      "M402,545c-2.2-5.9-0.5-12-1-18C403.1,532.9,401.5,539,402,545z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9E3A40"),
                    d:
                      "M341.9,684.9c0.4,0.4,0.7,0.8,1.1,1.2c-1,1.4-2.2,2.7-3.1,4.3c-1.3,2.2-1.9,0.3-2.8-0.3\n                                            C338.7,688.3,340.3,686.6,341.9,684.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A65253"),
                    d:
                      "M387.1,642.1c-0.7-0.3-1.3-0.6-2-1c4.7,0,9.4-0.1,14-0.1C395.2,643.2,391,641.4,387.1,642.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M358,636c-1.1,3.4-3,6.1-6,8C353.3,640.8,355.2,638.1,358,636z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92222C"),
                    d:
                      "M384,559l-0.5,0l-0.5,0c-2.7-1.7-2.7-3.3,0-5C384.7,555.4,383.8,557.3,384,559z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A14852"),
                    d:
                      "M392.9,488c-1.6,0-3.3,0-6.3,0c4-1.4,6.5-2.4,9.6-1.8C395,486.9,394,487.4,392.9,488\n                                            C393,488,392.9,488,392.9,488z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92222C"),
                    d:
                      "M383,548c1.8,1.7-0.7,3.3,0,5C378.8,551.3,382.6,549.7,383,548z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("BD8080"),
                    d:
                      "M360.1,625.2c1.5,1.4,0.9,3.1,0.9,4.7C359.1,628.6,360.5,626.7,360.1,625.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F424C"),
                    d:
                      "M400,488c0.2-0.7,0.1-1.8,1.3-1c0.7,0.5,0.9,1.3,0.5,2.1C401.2,488.7,400.6,488.3,400,488\n                                            C400,488,400,488,400,488z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A74E4E"),
                    d:
                      "M322,686c-1.1,0.7-0.9,1.9-0.9,2.9c-1.9-1.5-5.3-2.2-3.1-5.9C318,685.8,321.1,684.3,322,686z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A74E4E"),
                    d:
                      "M330,696c1.3,0,2.7-0.1,4-0.1c0.3,1.4,0.7,2.7,1,4.1C333,699.1,331,698.1,330,696z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("963841"),
                    d:
                      "M384,544c-0.6-6,0.8-12,1-18c1.1-1.9,0.4-3.9,0.5-5.9c0.1-2.8,1.4-4.4,4-4.9c3.1-0.6,2.7,2.1,3.5,3.7\n                                            c0,2.7,0,5.3,0,8c-0.8,1.7-0.8,3.3,0,5c0,3.7-0.1,7.3,0,11c0.1,2.8,0.1,5.4-3.5,6C385.7,549.5,384.6,547,384,544z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4A0F13"),
                    d:
                      "M370.9,605.1c-2.5-0.3-3.6-2.3-4.9-4.1c-1.5-2.3,0.4-4.1,1-6c1.8-2.9,5.1-4.1,7.6-2.7\n                                            c3.1,1.6,4.3,0.4,6.1-1.5c2.6-2.8,6.3-4,9.4-5.9c2.2-1.5,2.5-1.2,3,2.1c-4.1,3.3-9.8,4.8-12.3,10c-1,1.8-1.4,3.7-2,5.6\n                                            c-0.2,0.4-0.3,0.9-0.6,1.3C376.4,607.8,373.5,605.4,370.9,605.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("903139"),
                    d:
                      "M393,519c-1.3-0.8-1-3.9-3.8-2.6c-2,0.9-3.2,2.1-3.2,4.4c0,1.7,0.7,3.7-1,5.1c0-3.1,0.3-6.3-0.1-9.4\n                                            c-0.5-4.6,0.9-8.7,3.1-12.6c1.7-2,2.2-4.3,2-6.8c-0.1-1.3,0.6-2.4,2-2.3c1.4,0.1,0.9,1.5,0.9,2.3c0.1,5.9,0,11.8,0.1,17.8\n                                            C393,516.3,393,517.7,393,519z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M393,587c-0.8-0.9-0.5-3.2-2.8-2.1c-0.1-0.3-0.2-0.6-0.2-0.9c-0.8-1.7-0.7-3.3,0-5\n                                            c0.4-2.9,3.3-2.8,5-4c4.9-1.7,8.1,0.4,8.1,5.4c0,2.8-0.8,5.5-2.6,7.7c-0.5,0.4-1,0.7-1.6,0.9\n                                            C396.7,589.1,394.1,590.2,393,587z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("651417"),
                    d:
                      "M400,587.9c0.4-1.4,0.8-2.8,1.2-4.2c1.9-6.1,0.2-8.6-6.2-8.7c0.8-1.2,1.2-2.5,1-4c0-2.7,0-5.4,0-8\n                                            c1.1,0.8,0.8,2,1,3.2c0.4,2.5-1.4,5.9,2.9,6.8c4.3,0.9,5.2-1.9,6-4.9c5.2,4.7,10.5,9.2,17,12c-0.6,2.7-2.6,1.9-4.1,1.5\n                                            c-2.2-0.6-4.2-1.9-6.2-3c-1.5-0.8-3-3.6-4.3-2.2c-1.6,1.8-5.2,2.8-4.2,6.4c0,0.5,0,1,0.2,1.5c2.2,4.8,2.2,4.8-3.2,4.6\n                                            C400.6,588.6,400.2,588.3,400,587.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("85252C"),
                    d:
                      "M367,595c-0.3,2-0.7,4-1,6c-4.1-1.9-7.7,0.5-10.6,2.3c-2.2,1.3-3,0.6-4.4-0.2c2.7-5.5,7.6-6.6,13-7\n                                            l0,0C365.5,597.1,366.1,595.6,367,595z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("1D0707"),
                    d:
                      "M382.9,584.6c-0.4,1.4-1,2.4-2.4,2c-1.4-0.4-3.1-0.9-3-2.7c0.1-1.7,1.6-2,3-1.8\n                                            C381.9,582.3,382.7,583.2,382.9,584.6z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("791E25"),
                    d:
                      "M390,579c0,1.7,0,3.3,0,5C388.5,582.3,388.5,580.7,390,579z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("903139"),
                    d:
                      "M393,532c-1.5-1.7-1.5-3.3,0-5C393,528.7,393,530.3,393,532z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70161D"),
                    d:
                      "M364,596c-0.1,0.3-0.2,0.9-0.2,0.9c-5.4-0.4-8.9,3.3-12.8,6.1c-1-0.3-2-0.7-3-1\n                                            c-11.2-4.7-22.6-8.6-34.1-12.3c-1.1-0.3-2-1.1-3-1.6c0.7-0.1,1.5-0.2,2.2-0.3c-0.4-0.6-0.7-1.2-1.1-1.8\n                                            c10.1,2,20.7,0.1,30.7,3.9C349.6,592.5,356.9,594,364,596z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8B2A32"),
                    d:
                      "M313.8,575.1c4.8,3.4,10.3,0.3,15.3,2.4c4.2,1.7,7,4.1,7.6,9C327.2,586.3,318.9,584.3,313.8,575.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70161D"),
                    d:
                      "M312,586c-2.3-0.9-6.3-0.5-3.9-5.1c0.2-0.5-1.4-1.9-2.1-2.9C310.3,578.9,313.2,580.9,312,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("591216"),
                    d:
                      "M444,588c1.3-0.3,2.7-0.7,4-1c2.3-0.8,4.8-1.1,7.1-1.9c2.1-0.8,2.8-0.4,3.7,1.6c1.2,2.7,2,4.7-2,5.7\n                                            c-2,0.5-3.9,1.7-5.9,2.6c-3.3,1.6-6.4,3.6-9.9,4.8c-7.6,2.6-11.1,8.5-13.3,15.6c-0.9,2.8-1.7,5.7-2.6,8.6\n                                            c-1.8,5.5,2.3,9.4,3.9,14c-1.8,2.4-3.1,5.2-6.3,6.1c-1.3-0.6-2.5-1.4-3.5-2.4c-0.6-0.8-1.1-1.6-0.2-2.6c-0.6-4-2.2-7.1-7-7\n                                            c-0.5-1.6-0.3-3.5,0.3-4.7c1.6-3.3,0.9-5.9-1.5-8.3c4.5-3.2,7.1-7.4,6.3-13.1c-0.3-0.6-0.5-1.3-0.2-2\n                                            c1.7-1.5,4.7,0.6,5.9-2.2c2-1.2,0.9-2.2-0.3-3.2c-0.1-2.4,2.1-2.9,3.4-4.1C431.9,591.9,437.6,589.1,444,588z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("74181F"),
                    d:
                      "M505,573c-0.3,0.7-0.7,1.3-1,2c-8.3,3.1-16.4,6.6-25,9c-4.6,0.2-9.1-0.4-13-3c0-0.3,0-0.7,0-1\n                                            c0.5-0.9,1.3-1.5,2.3-1.9c8.7-2.9,17.3-5.9,26-8.8C498.5,568,502,570.1,505,573z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("651416"),
                    d:
                      "M423,643c0.6-0.1,2.1,1,1.6-0.4c-1.8-4.7-0.3-5,3.6-3.4c0.7,0.3,0.8-0.8,0.9-1.4\n                                            c4.5,4.8,6.9,11,10.9,16.3c0.7,1,2.1,2,1.2,3.4c-0.8,1.3-2.1,0.1-3.1,0.2c-7.7,0.3-10.9-5.8-15-10.6\n                                            c-0.3-0.4-0.5-0.8-0.7-1.3C422.1,644.8,422.2,643.8,423,643z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("671419"),
                    d:
                      "M466,581c4.5,0.4,8.8,1.5,13,3c0,0,0,0,0,0c-1.6,0.8-3.4,1.1-5,2c-7.6,3.2-15.1,6.7-23,9\n                                            c2.3-2.2,5.4-3,7.9-4.3c-1.1-8.7-7-3.1-10.9-3.7C453.7,584.2,460,583.1,466,581z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7D1C23"),
                    d:
                      "M423,646c1,0.8,2.3,1.5,3,2.6c2.9,4.4,6,8.3,12.1,7.7c0.7-0.1,1.4,0.7,2.2,1.1c1-1.2-0.6-2.1-0.3-3.2\n                                            c5.2,5.1,7.6,12.2,12.1,17.9c0,1,0,2,0,3c-4.2-1.3-5.2-5.6-7.7-8.5c-1.7-2-2.8-4.3-5.8-1.8c-1.1,0.9-2.3,0.2-3.1-0.7\n                                            c-4.2-4.9-8.6-9.6-12.3-14.9C422.6,648.2,422,647.1,423,646z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("74181F"),
                    d:
                      "M474,586c1.3-1.6,3-2.1,5-2C477.7,585.5,476,586.1,474,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B57572"),
                    d:
                      "M426.2,629c0-1.4,0-2.7,0-4.5C427.4,626.2,427,627.5,426.2,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86262E"),
                    d:
                      "M423,646c2,5.4,6.8,8.8,9.9,13.3c1.3,1.9,3,3.4,4.8,5.5c2.7-5.6,4.7-3.5,7,0.2\n                                            c2.2,3.5,4.8,6.6,7.3,9.9c1.7,2.2,3.3,4.3,4,7c-3.1,4.8-4.8,4.9-8.5,0.7c-3.7-4.2-5.8-9.6-9.7-13.8\n                                            c-3.3-3.6-6.9-5.6-11.8-3.9c-2-2-3.4-4.6-6-6l0,0c-2.9-3.4-5.5-7.1-9.1-9.9c-2.3-1.5-3.3-4-5-6c1-1.5,1.8-3.1,2.9-4.4\n                                            c5.2-5.9,5.2-5.9,10.1,0.3c0,0.8,0.2,1.6,1,2C421.2,642.5,422.3,644.1,423,646L423,646z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("581116"),
                    d:
                      "M383,641.9c-2.7,0-4.7,1.3-6.5,3.1c-4.1,4-8.3,8-12.4,12c-0.7,0.7-2.2,1.7-2.1,0.5\n                                            c0.2-3.2-3.1-6.8,1-9.5c0-0.3,0-0.6,0-1c4.5-5,8.9-10,13.4-15c0.7-0.7,0.5-1.5-0.4-2c-1,0.3-1.5-0.4-1.9-1.2\n                                            c-0.6-2.2-0.6-4.4-0.1-6.6c0.4-1.1,1.1-1.8,2.3-2c0.5,0,1,0.1,1.4,0.3c0.7,0.7,0.4,1.5,0.3,2.3c-0.9,5,0.2,6.6,5.1,7.4\n                                            c0.7,0.1,1.3,0.2,1.8,0.7c-0.2,0.4-0.4,0.9-0.6,1.3c4.1,0.4,4.3,7.5,9.8,5.7c0.8-0.3,2-0.4,2.9,0.5\n                                            C392.3,639.8,387,638,383,641.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("480F13"),
                    d:
                      "M411,619c3.7,1.2,6.4,2.7,2.6,6.9c-1.5,1.7,1.4,4.7-1.6,6.1c-3.3,0.7-5.7-1-8-3\n                                            c-1.2-1.9-1.5-3.9-1-6.1c0.1-0.5,0.3-1,0.6-1.5C405.7,619.5,407.6,617.1,411,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4A0F13"),
                    d:
                      "M385,631c-3.5,1.9-5.9,0.2-7.9-2.5c-2.2-2.9-0.7-5.2,0.9-7.5c0.7-2.4,2.4-3.1,4.7-2.7\n                                            c1.9,0.7,3.7,1.5,4.3,3.7C387.2,625.2,388.2,628.6,385,631z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86252C"),
                    d:
                      "M387,622c-1.3-1-2.7-2-4-3c-5.6-2.9-7.3-8.5-5-16l0,0c0.4-0.3,0.8-0.5,1.3-0.5\n                                            c0.7,0.2,1.2,0.8,1.5,1.5c0.7,6.7,3.3,12.3,9,16.3c0.3,0.4,0.5,0.8,0.5,1.3c-0.1,0.8-0.6,1.2-1.4,1.4\n                                            C388.3,622.7,387.6,622.4,387,622z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("87272E"),
                    d:
                      "M389,623c0.3-0.3,0.7-0.7,1-1c0.8-0.7,1.7-0.9,2.8-0.8c2.1,0.5,4.2,0.8,6.3-0.2\n                                            c1.7-0.2,3.9-2.4,4.9,1l0,0c-1.7,1.3,1.2,4.4-2,5c-0.3,0-0.7,0-1,0C396.1,628.5,391.9,627.6,389,623L389,623z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M389,623c3.8,2,7.3,4.7,12,4c-2.2,1.1-4.9,1.3-6,4c-0.3,0.9-0.8,1.5-1.9,1.1\n                                            C393.4,628.2,387.8,627.2,389,623z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4C1014"),
                    d:
                      "M393,632c0.6-0.4,1.3-0.7,1.9-1.1c1.2,0.2,2.8-0.2,2.8,1.7c0,1.3-0.9,2-2.1,2.2\n                                            C393.4,635.3,392.9,633.9,393,632z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M402,627c1.9-1.2,0.1-3.8,2-5c0,2.3,0,4.7,0,7C403.1,628.6,402.4,628,402,627z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8F3037"),
                    d:
                      "M375,629c0.3,0.3,0.7,0.7,1,1c-4.1-0.4-7.5-2.7-11.2-3.9c-1-0.3-1.8-0.5-2.7-0.1\n                                            c-0.1-1.8,0.1-3.6-0.7-5.3c-0.9-2-0.1-3.5,1.8-4.4c1.6-0.8,2.9-1.4,3.2-3.6c0.3-1.9,2.5-1.5,4.1-1.7c1.2-0.2,3,1.8,3.5-1\n                                            c4.6,2.9,6,8,2.9,11c-0.8,0.1-1.5,0.2-2,1C374.2,624.3,374.2,626.7,375,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171B"),
                    d:
                      "M377,621c2.6-4.6-1.5-7.5-2.9-11c0.7-2.7-1.1-3.9-3.1-4.9c2.5-0.3,5.5,1.4,7.1-2.1\n                                            c-0.4,6,0.4,11.6,5,16c-2.1-0.5-3.4,1.1-5,2C377.7,621,377.3,621,377,621z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9B3E45"),
                    d:
                      "M332,675c5.8-10.3,12.6-19.8,20-29c1.1-0.5,3-0.6,2.6,0.7c-0.9,3.2,2,6.1,0.4,9.3\n                                            c-5.1,6.9-9.9,14-16,20C336.3,678.1,334.1,677.2,332,675z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("641418"),
                    d:
                      "M363,647.9c-2.5,3.1,0.5,6.3-0.3,9.4c0.5-0.1,0.9-0.3,1.4-0.4c-0.5,2.9-2.9,4.3-4.9,6.1\n                                            c-1.2,1.2-2.2,2.6-3.2,3.9c-0.7,0.7-1.3,1.4-2,2c-0.6,0-1.8,1.2-1.6-0.4c0.1-1,1-2,1.8-2.9c2.4-2.9,4.2-5.9,1.8-9.7\n                                            C358,653,359.9,649.9,363,647.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8E2F35"),
                    d:
                      "M332,675c2.5-0.7,4.5,1.9,7,1c0.3,2.5-3,2.7-3,5c-1.3,3.3-2.6,6.8-7,7c-0.3-0.7-0.7-1.3-1-2\n                                            c-0.7-1.7-0.7-3.3,0-5l0,0C329.3,679,330.7,677,332,675z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("82232A"),
                    d:
                      "M329,688c2.9-1.8,4.8-4.5,7-7c3.4,3.3,0.6,6.7,0,10C333.2,691.1,330.6,690.7,329,688z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("913139"),
                    d:
                      "M505,573c-10.5-6.6-19.1,2-28.5,3.8c-3.6,0.7-7,2.1-10.5,3.2c-1.9,0.5-4.1,0.5-5.7,1.5\n                                            c-4.7,2.9-7.3-1-10.2-3.2c-1.7-1.2,0.8-2.1,0.9-3.3c16.7-5,33.3-10,50-15c1.2,0,2.3,0,3.5,0c2.9,0.1,5.9,0.3,6.4,4\n                                            c0.5,3.8,0.5,7.5-4.6,8.4C505.9,572.5,505.5,572.8,505,573z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D24"),
                    d:
                      "M444,588c-5.7,3.1-11.7,5.3-18,7c-2.2-0.5-3.4-2.3-4.8-3.9c0.1-4.7,2.8-8.3,6.8-9.4\n                                            c1.7-0.5,3.7,0.1,5-1.6c2.7-1,5.3-2,8-3C437.6,584.5,439,583.4,444,588z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("903137"),
                    d:
                      "M426,665c3.2-3.4,6.3-2.5,9.5,0c5.4,4.2,8.1,10.4,11.8,15.8c2.6,3.8,5.1,5.3,8.6,1.3\n                                            c1.2,1.7,2.5,3.5,3.8,5.2c2.1,2.8,3.7,5.9,1.1,9c-1.8,2.2-8.9,0.8-11.1-1.6c-5-5.5-9.1-11.7-14.8-16.6\n                                            C432.8,673.1,428.1,670,426,665z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("72161B"),
                    d:
                      "M356,667c0.2-2,1.4-3.2,3.2-3.9C358.8,664.9,357.6,666.1,356,667z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("92262E"),
                    d:
                      "M328,681c0,1.7,0,3.3,0,5C326.5,684.3,326.5,682.7,328,681z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71161B"),
                    d:
                      "M433,580c0.7,1.6,0.7,1.9-0.5,1.9c-5.2,0.1-8.4,3-10.7,7.3c-0.2,0.5,0.1,1.2,0.1,1.8\n                                            c-1.3,1.3-2.7,1.2-4.3,0.7c-0.9-0.2-0.8-1.7-2.6-1.3c-2.9,0.7-4.9-1-4.5-4.4c0.4-0.8,1.8-1.4,1.2-2.3\n                                            c-0.5-0.9-1.3,0.3-1.9,0.5c-1.3,0.1-2.5-0.5-3-1.3c-1.5-2.3-2.6,0-3.9,0.1c0.5-2.2-1.8-6,3.3-5.5c0.1,0,0.3-0.8,0.3-1.2\n                                            c-0.2-4.5,2.3-2.6,3.7-1.3c2.4,2.4,5.3,3.9,8.3,5.3c1.5,0.7,3.1,1.4,4.5-0.2c0.6,0,1.3,0,1.9,0c2,0,4-0.2,6-0.2\n                                            C431.6,579.9,432.3,580,433,580z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("B67075"),
                    d:
                      "M430.9,579.9c-2,1-4,1.7-6,0.2C426.8,578.5,428.8,578.4,430.9,579.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D1F27"),
                    d:
                      "M410.9,649.1c4.8,1.7,6.7,6,9.1,9.9c-3.6-2-5.2-6.2-9-8C411,650.4,410.9,649.7,410.9,649.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("791E25"),
                    d:
                      "M380,604c-0.3-0.3-0.7-0.7-1-1c-0.9-2.2,0.8-4,1-6c2.4-5.9,7.5-8.2,13-9.9c1.8,1.7,4,0.6,6,1\n                                            c0.4,1.2-0.2,1.9-1.1,2.6c-1.4,0.7-2.9,0.4-4.3,0.9c-4.6,1.5-8.8,3.5-10.4,8.8C382.7,601.7,382.5,604,380,604z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171B"),
                    d:
                      "M380,597c0.4,2.1-0.6,4-1,6c-0.3,0-0.7,0-1,0C378.1,600.8,378.6,598.7,380,597z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8C2C33"),
                    d:
                      "M398,590c0.3-0.6,0.7-1.3,1-1.9c0.3,0,0.6-0.1,1-0.1c0.3,0,0.7,0.1,1,0.1c1.7,0.8,3.4,1.1,5.2,0.8\n                                            c3.4-0.5,6.1,0.7,8.2,3.4c0.3,1,0,2-0.5,2.9c-3.2,3.9-3.2,3.9-7.2-0.2c-1.1-1-2.5-1.6-3.9-2.1c-0.8-0.3-1.5-0.7-2.2-1.2\n                                            C399.7,591.2,398.6,590.9,398,590z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D24"),
                    d:
                      "M414.1,593.1c-2.1-2.3-4.6-3.5-7.8-3.1c-2,0.2-3.9-0.3-5.3-1.9c1.3,0,2.5,0,4.2,0\n                                            c-0.7-1.9-3.9-2.6-2.2-5c1.2-0.7,0.9-2,1.3-3.6c2.1,1.6,3.9,3.1,5.7,4.5c0.9,0.4,1.4,0.9,1,1.9c1,6.5,5.3,2.8,8.3,1.9\n                                            c0.4,2.6-2,1.9-2.3,3.2C417,593.2,416.1,593.9,414.1,593.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M407,594c2,0.2,3,6.1,5.9,1c1.9,2.3,1.8,5.2,2.5,7.9c-2.1,3.6-1.4,8.3-4.7,11.4\n                                            c-0.9,0.1-1.4-1.3-2.5-0.9c0.6,0.5,1.4,0.3,2,0.8c0.4,1.2,0.3,3.5,2.5,1.4c1.3-1.2,1.7-2.8,2.1-4.4c0.5-2.3,1-4.6,3.1-6.1\n                                            c2.2,5.3-1.5,12.8-6.9,13.9c-2.9-0.3-4.8,1.6-7,3c-1.7-2.2-3.3,0.2-5,0c-0.3-0.1-0.5-0.2-0.8-0.3c-7-4.1-10.1-10.8-8.1-17.4\n                                            C392.5,596.5,397.7,593.3,407,594z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M414.9,603.1c-1.9-2.4-2.1-5.3-2-8.2c0.4-0.6,0.8-1.2,1.2-1.9c1.4-0.1,2.4-0.8,3-2c1.7,0,3.3,0,5,0\n                                            c1.7,0.9,3,2.3,4,4c0.3,2.3-3.3,1.7-3,4c0.2,1,0.2,2,0,3c1,2.4-0.1,3-2.2,2.8c-1.3-0.2-2.6-0.5-3.8-0.7\n                                            C415.8,604.7,415.1,604.5,414.9,603.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("93383D"),
                    d:
                      "M414.9,603.1c0.7,0.3,1.4,0.6,2.1,0.9c0.3,0.3,0.7,0.7,1,1c-0.4,2.8-1.8,5.2-2.3,8.1\n                                            c-0.5,3.3-2.7,5.7-6.9,4.6c0.4-1.2,0.9-2.4,1.3-3.6l0,0c2-2.5,1.9-5.8,2.8-8.7C413.3,604.2,413.3,603.1,414.9,603.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6D161B"),
                    d:
                      "M423,602c-1.3-1-1.3-2,0-3c1.2-0.4,3-1.8,3.4-0.2C427,600.8,424.9,601.7,423,602z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71171D"),
                    d:
                      "M423,646c-1.3-1.5-2.8-2.9-3-5c1,0.7,2,1.3,3,2C423,644,423,645,423,646z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("882830"),
                    d:
                      "M375,629c-1.6-2.3-1.6-4.7,0-7C375,624.3,375,626.7,375,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("70171B"),
                    d:
                      "M398,590c1.1,0,2.3-0.2,3,1c-2,1.8-4.6,1.9-6.9,2.4c-8.6,2-14.5,12.3-7.7,20.6\n                                            c0.5,0.6,0.9,1.4,1.3,2.1c0.8,1.6,3,2.6,2.3,5c-7.3-3.4-9.7-9.6-10-17c2.6-4.9,3.9-10.8,10.3-12.8\n                                            C392.9,590.4,395.4,590,398,590z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("511114"),
                    d:
                      "M390,621c-1-1.3-2-2.7-3-4c0.5-1.1,1.2-2,2.4-2.3c3.1,0.8,4.2,4,6.6,5.7c0.6,0.4-0.3,1.5-1,1.9\n                                            c-0.7,0.2-1.4,0.3-2.1-0.2c-1,0-2,0-2.9-0.1C390,621.7,390,621.4,390,621z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M393,622c0.7,0,1.3,0,2-0.1c1.3-0.9,2.7-1.1,4,0l0,0C397,623.5,395,623.5,393,622z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("1E0607"),
                    d:
                      "M373,614.4c-0.4,1.6-1.5,2.3-2.9,2.3c-1.5-0.1-2.6-1.1-2.6-2.5c-0.1-1.7,1.4-2,2.8-2\n                                            C371.8,612.1,372.7,612.9,373,614.4z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("380D0E"),
                    d:
                      "M411,585.9c-0.3-0.6-0.7-1.3-1-1.9c0.1-1.2-0.3-2.8,1.7-2.8c1.5,0,2.2,1.2,2.2,2.6\n                                            C414,585.9,412.6,586,411,585.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("170404"),
                    d:
                      "M389,615c0,1.3-0.8,1.9-2,2c-6.5-9.4-6.4-17,0.8-22.1c3.8-2.7,8.4-4,13.2-3.9\n                                            c0.6,0.4,1.3,0.7,1.9,1.1c1.1,1.9-0.1,2.2-1.6,2.4c-7.8,1.4-11.2,5.3-11.9,13.2C389.3,610.1,390,612.6,389,615z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("691517"),
                    d:
                      "M389,615c-1.9-5.7-1.4-11.1,1.8-16.1c1.9-3,4.7-5.1,8.7-4.9c1.4,0.1,3.2,0.4,3.4-1.9\n                                            c1.7,0,3,0.7,4.1,1.9c-0.7,0.9-1.6,1-2.7,1c-6.9,0.4-11.5,3.9-13.1,9.8c-1.5,5.4,0.9,11.3,6.6,15.2c0.8,0.5,1.1,1.2,1.2,2\n                                            c-1.3,0-2.7,0-4,0C394.9,618,391,617.3,389,615z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6D1518"),
                    d:
                      "M410,614c-1.3-0.1-2.3,3.4-3.8,0.5c-0.6-1.2,0.1-2.8,1.5-3.2C410.1,610.7,409.9,612.6,410,614\n                                            C410,614,410,614,410,614z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "none",
                    stroke: _vm.diskColorRecalc("831B2A"),
                    "stroke-width": "10",
                    "stroke-miterlimit": "10",
                    d:
                      "M523.5,599.7c2.2,29.7-8.4,54.8-26.2,76.9\n                                        c-15.8,19.6-36,33.1-60.4,40.2c-33,9.7-65.1,7.5-95.8-7.9c-19.9-9.9-35.7-24.6-47.8-43.4c-9.1-14.2-14.1-29.8-17.4-46.2\n                                        c-2-10.3-2.1-20.7-0.8-30.6c2.4-19.1,8.7-37.2,19.6-53.5c15.6-23.3,36.5-39.8,62.7-49.5c12.5-4.6,25.5-7.1,39.1-7.4\n                                        c20.8-0.4,40.7,2.9,59.5,11.9c14.1,6.8,26.6,16,37.2,27.7c11.9,13.2,20.7,28.2,26.1,45.1C523,575.2,524.6,587.6,523.5,599.7z"
                  }
                })
              ])
            ]),
            _vm._v(" "),
            _c("g", { attrs: { id: "polish" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: "#D6D7D8",
                    d:
                      "M523.7,573.9c0.8,2.6,2.1,5.3,1,8.1c-0.5,1.2-1.7,0.3-2.6,0.1c-2.4-0.5-0.3-4.8-6.3,0.8\n                                        c-1.7-1.3-3.4,0.3-5.2,0.8c-16.1,5.2-31.5,12.3-47.1,18.9c-4.9,2.1-9.7,4.4-14.5,6.6c-9.1,4.1-12.8,15.2-8.2,24.1\n                                        c9,17.2,19.2,33.7,28.2,50.9c1.4,2.8,2.6,6.7,6.9,6.8c1.4,2.8,3.1,5.3,6.8,6.1c-1.7,3-4.7,4.1-6.7,6.1c-1.3,1.3-2.7,1-3.6-0.7\n                                        c-1-1.8-2-3.4-4.4-3.6c-4.2-6.3-8.1-12.9-11.8-19.5c-7.3-13.1-15.2-26-23.7-38.4c-6.1-9-6.4-17.2-2.7-26.6\n                                        c0.6-1.5,1.2-3.1,1.8-4.6c2.3-7.4,9-9.6,15-11.9c19.9-7.8,40.1-14.9,60.4-21.9c2.5-0.9,5-1.9,7.3-3.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#C8CBCC",
                    d:
                      "M455.2,705.2c-1.7,1.9-1.4,4.1-0.1,6c2.3,3.6-0.5,4.4-2.8,5.1c-3.5,1.1-1.8-2-2.4-3.3\n                                        c-0.9-2-0.6-4.9-4-4.7c-1-3.8-3.9-6.6-6.3-9.4c-12.2-14.2-23.5-29.1-35.5-43.5c-4.6-5.6-16.6-6.2-22.6-0.7\n                                        c-7,6.4-13.8,13-20.1,20.1c-6.4,7.2-13.4,13.9-19,21.7c-0.6,0.8-1.3,1.5-1.3,2.6c-5.9,4.3-8.2,6.9-10.4-0.5\n                                        c8.1-9.5,17.8-22.1,25.8-31.6c6.8-8,14-15.6,21.5-22.9c1.1-1.1,2.5-1.6,4-2c6.2-1.7,12.6-1.3,18.9-0.9\n                                        c4.7,0.3,8.3,3.2,11.2,6.8c8.6,11,16.8,22.2,24.9,33.6C442.6,689.7,449.1,697.3,455.2,705.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#BBBFC1",
                    d:
                      "M399.5,481.5c1.1-1.2,8.5-1,8.4,2.3c-0.1,2.2-0.1,4.3,1,6.3c-2.8,6.3-1,12.8-0.5,19.1\n                                        c0.7,10.2,2.1,20.3,3.7,30.4c0.8,5.1,1.4,10.1,2.2,15.2c0.6,3.8,3.2,6.5,5.2,9.4c0.3,1.3,0.3,2.6,0.3,4c0,2.3-2.1,5,0.7,6.9\n                                        c3.2,2.2,6.7,3.8,10.8,2.7c6.7-1.8,13.5-3.5,20.1-5.8c16.2-5.7,32.8-9.8,49.4-14.2c3-0.8,10.5-3.3,13.4-0.9\n                                        c0.1,1.8-5.1,3.9-6.9,4.2c-21,3.2-40.9,10.5-61.1,16.5c-1.9,0.6-3.9,1-5.7,1.7c-13.1,5.2-23.6,0.7-32.8-8.8\n                                        c-2.7-2.8-4.2-6-4.5-9.8c-1.3-15.6-2.9-31.1-3.2-46.7"
                  }
                }),
                _vm._v(" "),
                _c("path", { attrs: { fill: "#CED1D5", d: "M288.3,559" } }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#CED1D5",
                    d:
                      "M288.3,555.8c4.8,4.1,19.7,6.9,25.3,8c12.2,2.4,24.5,4.7,36.7,6.8c7.8,1.3,14-0.7,19.3-6.3\n                                        c1.9-2,3.2-4.4,3.2-7.1c0-14.8,3.1-29.4,4.1-44.1c0.2-2.6,0.7-4.8,3.7-4.9c3.5-0.1,3.3,2.6,3.3,5c0.1,16-1.7,31.9-1,47.9\n                                        c0.1,2.7-1.1,5.2-2,7.7c-6.4,10.7-17.6,15.6-29.7,12.4c-16.4-4.4-33.1-7.9-49.5-12.7c-2.9-0.8-14.5-2.5-17.4-3.1"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#D7D9DA",
                    d:
                      "M509.9,558c-10.9,0.1-20.9,4.5-31.3,7c-16.1,3.9-31.5,10.1-47.5,14.1c-5.4,1.4-9.1-2-13.2-4.1\n                                        c-0.8-0.4-1-1.5-0.6-2.2c1.4-2.5,0.9-5.3,1.8-7.9c1.3-0.6,2.3,0,3.2,0.7c4.8,3.7,9.9,3.6,15.5,2c19.2-5.4,38.6-10,57.9-14.8\n                                        c2.2-0.6,5.3,0.1,6.5-2.8c3.6-0.9,7.5,0.1,10.8-3.6c1.1-1.2,2.5,2.6,3.2,4.5c0.5,1.4,2,3.5-0.9,3.8\n                                        C512.8,555.1,511.8,557.3,509.9,558z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#E1E1E1",
                    d:
                      "M322.1,688.9c-5-0.2-9.5,0.9-8.5-3.5c2.6,0.8,5.5-4.9,6.2-6.4c7.7-16.4,17.7-31.5,27.1-47\n                                        c5.4-8.8,2.4-18.3-7-22.7c-2-0.9-4.7-1-5.1-4.1c3.8-2.6,8.5-2,12.7-3.5c6.5,0.3,11.6,8.4,13.6,17.8c1.7,8.1-1.4,14.1-6.2,20.1\n                                        c-8.3,10.4-16.5,20.8-23,32.5C328.7,677.8,325.6,683.5,322.1,688.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#AFAEB2",
                    d:
                      "M385,522.1c0,4.6,0.3,9.3-1,13.9c-1.1,7.2-0.2,14.5-0.5,21.7c-0.1,2.8,0.4,5.6-0.4,8.3\n                                        c-0.6,1.4-1.3,2.8-1.9,4.2c-0.7-0.2-1.1-0.6-1.2-1.3c1.3-2.9,2-6.1,1.9-9.2c-0.3-14.9,0.3-29.8,1.1-44.7c0.1-1,0-2,0-3\n                                        c0-1.6-0.1-3.2-2.3-3c-1.8,0.1-2.7,1.3-2.6,3c0.3,6.2-1.6,12.1-2,18.2c-0.6,9.4-2,18.8-2.2,28.2c-0.2,7.7-12.3,14.9-21.5,13.2\n                                        c-16.9-3-33.9-5.9-50.8-9c-13.3-3.9-15.7-4.5-15.7-7.5c17.9,4.4,47.3,11,65.4,14.4c10.6,2,21.1-6.4,21-17.5\n                                        c-0.2-17.1,3.5-34,5.2-51c0.5-5.1,2.8-10.3,0.1-15.5c-0.5-1,0.2-1.7,1.1-1.7c1.5,0,3.3-2,4.4,0.3c1.2,2.3,2.6-4.5,5-3.3"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#CCCCCE",
                    d:
                      "M278.7,576.3c17,7.3,45.9,16.3,63.2,22.8c2.2,0.8,5.3,0.7,6.2,4c-4.3,1-8.6,1.9-12.9,2.9\n                                        c-1.1,1.2-2.2,0.4-3.2-0.1c-11.8-6.1-42-16.6-53.9-22.6"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#ACABAC",
                    d:
                      "M455.2,705.8c-3.9-1.6-5.7-5.4-8-8.5c-11.9-15.7-23.7-31.5-35.5-47.3c-3.6-4.7-8-6.8-14.2-7.7\n                                        c-14.5-2.2-23.1,5.8-31.1,15.5c-9.6,11.8-20.3,22.8-28.8,35.4c-1.1,1.6-4.5,5.4-6.9,5.3c2.4-4.8,7.2-9.7,10-13.3\n                                        c10.8-13.9,21.9-27.6,34.7-39.8c3.1-3,6.9-3.9,10.8-4.4c11.7-1.5,21.7-0.5,29.8,10.6"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#AEACAF",
                    d:
                      "M358.3,632.4c5.8-8.8-0.3-26-10.4-29.4c-6.8-3.9-14.3-6.3-21.7-8.5c-11.1-3.3-21.7-8.3-32.7-11.7\n                                        c-12.9-3.8-14.2-4.8-14.9-6.5c0.7-0.6,1.8-1.1,13.3,3.2c17.9,8.1,36.8,13.4,55.1,20.3c10.3,3.9,13.8,11.7,15.1,21.4\n                                        c1,7.6-1.7,13.9-6.5,19.6c-12,14.3-24.9,34-34.6,50.7c-0.7,1.6-0.8-1.1-2.2-1.3"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#A9A7A8",
                    d:
                      "M475.9,691c-0.1,1.6-0.9,2.3-2.2,1.2c-1.5-1.3-3-2.8-3.9-4.5c-4.5-8.3-9.3-16.4-13.6-24.8\n                                        c-5.2-10.2-11.2-19.9-16.8-29.9c-4.1-7.1-0.5-20.4,6.9-23.7c21.1-9.4,42-19.1,63.8-26.6c1.9-0.7,9.1-4.3,10.5-0.9\n                                        c-8.5,1.2-21,6.9-28.9,10c-14.6,5.7-29,11.8-43,18.7c-7.9,3.9-11.4,13.9-7.2,21.6c9.6,17.7,19.4,35.3,29.2,52.9\n                                        C472,687.5,473.7,689.5,475.9,691z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#A9A7A9",
                    d:
                      "M510.8,547.6c1.4,1.6-7.6,4.6-9.8,5.2c-3.7,1-7.4,1.8-11.1,2.7c-17.8,4.5-35.7,8.7-53.3,13.6\n                                        c-7,2-12.2-0.5-17.5-4.2c-5.5-4.8-6.1-11.5-7-18c-1.7-12.6-3.3-25.2-4.8-37.9c-0.6-4.6-0.1-9.3-1-13.9\n                                        c-0.4-1.7-0.1-4.5,2.7-5.2c-0.6,21.2,3.2,42,6.2,62.9c1.4,10,10.3,16.4,20.2,13.9C457.5,561.2,488.7,554.1,510.8,547.6z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#A8A6A9",
                    d:
                      "M337.4,704.2c-2-2.9,4.6-9.3,5.8-10.7c11.5-13.3,23.5-26.2,36.2-38.4c3.2-3,6.7-4.9,11.4-5.3\n                                        c8.9-0.7,14,4.4,18.9,10.5c11.6,14.7,23.4,29.2,35,43.9c0.9,1.1,4.3,5.2,2.2,5.4c-12.1-14.8-25.3-31-37.4-45.7\n                                        c-2.3-2.8-4.6-5.7-7.1-8.3c-4.6-5-15.1-5-20.5,0.1c-13.2,12.4-25.4,25.8-37.2,39.6C343.7,696.6,338.7,702.9,337.4,704.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#AAA5A7",
                    d:
                      "M279.6,586.6c0.9-5.2,11.7-0.3,13.7,0.8c7.9,4.2,16.1,7.7,24.4,11c5.9,2.3,11.1,5.9,17.2,7.6\n                                        c2.1,1,4.1,2.1,6.2,3.1c9.1,4.4,12,13.9,6.9,22.7c-7.4,12.8-16,24.8-22.6,38c-1.8,3.6-3.4,7.2-5.3,10.7\n                                        c-0.8,1.5-3.9,6.7-6.4,4c3.6-2.6,6.7-9.3,8.6-13c7.1-13.8,15.7-26.6,23.6-39.9c4.8-8.1,2-17.3-6.6-21.2\n                                        c-14.8-6.7-29.7-13.2-44.6-20C292.2,589.3,282.2,586.9,279.6,586.6z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#AAA8AA",
                    d:
                      "M432.1,610.2c-1.1,3.8-2.2,7.6-3.3,11.4c-1.3,4.4-1.6,8.8,0.9,13c4.1,6.6,8,13.4,12.4,19.9\n                                        c9.2,13.7,16.9,28.2,25.6,42.2c0.4,0.6,0.2,1.6,0.3,2.4c-1.2,0-2.2,0.1-2.9-1.3c-10.5-20.2-22.9-39.3-35.1-58.5\n                                        c-6.7-10.6-3.5-20.3,1.2-30.2C432,608.9,432.6,609.1,432.1,610.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#ACABAD",
                    d:
                      "M286.3,563.8c13.4,4.3,43.3,10.3,56.8,14.2c1,0.3,1.9,0.5,2.8,0.9c15.7,5.3,21.8,3.3,34.1-9.9\n                                        c0.4,0.4,0.8,0.9,1.2,1.3c-6.1,9.8-17.6,15-28.6,12.3c-16.9-4-49.9-11.8-66.7-16.4"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#ABA7AC",
                    d:
                      "M520.7,570.6c-0.4,2.6-9.1,4.9-10.9,5.6c-20.5,7.3-41,14.4-61.4,22c-6.4,2.4-13.3,4.7-16.3,12\n                                        c-0.3-0.4-0.7-0.8-1-1.1c1.2-4.1,3.9-6.8,7.8-8.6c13.6-6.2,27.7-11.1,41.8-16.3"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#CED1D5",
                    d:
                      "M383.1,566c0-8.6,0-17.2,0-25.9c0-1.4-0.4-3,1-4.2c0,8.4,0,16.9,0,25.3\n                                        C384,562.9,384.4,564.7,383.1,566z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "none",
                    stroke: "#BBBFC1",
                    "stroke-width": "10",
                    "stroke-miterlimit": "10",
                    d:
                      "M524,599.9c2.2,29.7-8.4,54.8-26.2,76.9\n                                        c-15.8,19.6-36,33.1-60.4,40.2c-33,9.7-65.1,7.5-95.8-7.9c-19.9-9.9-35.7-24.6-47.8-43.4c-9.1-14.2-14.1-29.8-17.4-46.2\n                                        c-2-10.3-2.1-20.7-0.8-30.6c2.4-19.1,8.7-37.2,19.6-53.5c15.6-23.3,36.5-39.8,62.7-49.5c12.5-4.6,25.5-7.1,39.1-7.4\n                                        c20.8-0.4,40.7,2.9,59.5,11.9c14.1,6.8,26.6,16,37.2,27.7c11.9,13.2,20.7,28.2,26.1,45.1C523.5,575.4,525.1,587.8,524,599.9z"
                  }
                })
              ])
            ])
          ]
        )
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0719be3c", module.exports)
  }
}

/***/ }),

/***/ 33:
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ 34:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ 35:
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(48)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ 4:
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 44:
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ 46:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(47);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),

/***/ 47:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(33)))

/***/ }),

/***/ 48:
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),

/***/ 50:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);




__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */].Store({
    state: {
        isReady: false,
        isInProgress: true,
        app: {
            car: {
                bodyColor: null,
                diskColor: null,
                diskSize: null,
                isPolished: false,
                isMounted: false,
                isLights: false,
                isMove: false,
                moveDirection: 'IN'
            }
        },
        data: {
            values: {
                carColorList: [],
                diskColorList: [],
                diskSizeList: []
            },
            moveDuration: 4
        },
        calcFunction: undefined
    },
    getters: {
        isReady: function isReady(state) {
            return state.isReady;
        },
        defaults: function defaults(state) {
            return state.data.defaults;
        },
        values: function values(state) {
            return state.data.values;
        },
        car: function car(state) {
            return state.app.car;
        },
        moveDuration: function moveDuration(state) {
            return parseInt(state.data.moveDuration);
        },
        calcFunction: function calcFunction(state) {
            return state.calcFunction;
        }
    },
    mutations: {
        setReady: function setReady(state) {
            state.isReady = true;
        },
        setValues: function setValues(state, val) {
            state.data.values = val;
            state.app.car.bodyColor = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.carColorList);
            state.app.car.diskColor = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.diskColorList);
            state.app.car.diskSize = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.diskSizeList);
        },
        setCalcFunction: function setCalcFunction(state, f) {
            if (typeof f === 'function') {
                state.calcFunction = f;
            }
        },
        setMoveDuration: function setMoveDuration(state, val) {
            state.data.moveDuration = parseInt(val);
        },

        // Цвет автомобиля
        setCarColor: function setCarColor(state, val) {
            state.app.car.bodyColor = val;
        },

        // Цвет диска
        setDiskColor: function setDiskColor(state, val) {
            state.app.car.diskColor = val;
        },

        // Размер диска
        setDiskSize: function setDiskSize(state, val) {
            state.app.car.diskSize = val;
        },

        // Алмазная полировка
        setDiskPolished: function setDiskPolished(state, val) {
            state.app.car.isPolished = val;
        },

        // Шиномонтаж
        setDiskMounted: function setDiskMounted(state, val) {
            state.app.car.isMounted = val;
        },

        // Включить фары
        switchOnLigt: function switchOnLigt(state) {
            state.app.car.isLights = true;
        },

        // Выключить фары
        switchOffLigt: function switchOffLigt(state) {
            state.app.car.isLights = false;
        },

        // Автомобиль приезжает
        moveInCar: function moveInCar(state) {
            state.app.car.moveDirection = 'IN';
            state.app.car.isMove = true;
        },

        // Автомобиль уезжает
        moveOutCar: function moveOutCar(state) {
            state.app.car.moveDirection = 'OUT';
            state.app.car.isMove = true;
        },

        // Автомобиль останавливается
        stopMovingCar: function stopMovingCar(state) {
            state.app.car.isMove = false;
        }
    }
}));

/***/ }),

/***/ 51:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Store */
/* unused harmony export install */
/* unused harmony export mapState */
/* unused harmony export mapMutations */
/* unused harmony export mapGetters */
/* unused harmony export mapActions */
/* unused harmony export createNamespacedHelpers */
/**
 * vuex v3.0.1
 * (c) 2017 Evan You
 * @license MIT
 */
var applyMixin = function (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
};

var devtoolHook =
  typeof window !== 'undefined' &&
  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */


/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  this._children = Object.create(null);
  this._rawModule = rawModule;
  var rawState = rawModule.state;
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors$1 = { namespaced: { configurable: true } };

prototypeAccessors$1.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors$1 );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if (true) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

function update (path, targetModule, newModule) {
  if (true) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if (true) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if (true) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "Store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  var state = options.state; if ( state === void 0 ) state = {};
  if (typeof state === 'function') {
    state = state() || {};
  }

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  if (Vue.config.devtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors = { state: { configurable: true } };

prototypeAccessors.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors.state.set = function (v) {
  if (true) {
    assert(false, "Use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });
  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    "development" !== 'production' &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });

  return entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload)
};

Store.prototype.subscribe = function subscribe (fn) {
  return genericSubscribe(fn, this._subscribers)
};

Store.prototype.subscribeAction = function subscribeAction (fn) {
  return genericSubscribe(fn, this._actionSubscribers)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if (true) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors );

function genericSubscribe (fn, subs) {
  if (subs.indexOf(fn) < 0) {
    subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    computed[key] = function () { return fn(store); };
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  var gettersProxy = {};

  var splitPos = namespace.length;
  Object.keys(store.getters).forEach(function (type) {
    // skip if the target getter is not match this namespace
    if (type.slice(0, splitPos) !== namespace) { return }

    // extract local getter type
    var localType = type.slice(splitPos);

    // Add a port to the getters proxy.
    // Define as getter property because
    // we do not want to evaluate the getters in this time.
    Object.defineProperty(gettersProxy, localType, {
      get: function () { return store.getters[type]; },
      enumerable: true
    });
  });

  return gettersProxy
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload, cb) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload, cb);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if (true) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if (true) {
      assert(store._committing, "Do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.length
    ? path.reduce(function (state, key) { return state[key]; }, state)
    : state
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if (true) {
    assert(typeof type === 'string', ("Expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if (true) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if ("development" !== 'production' && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

function normalizeMap (map) {
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if ("development" !== 'production' && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index_esm = {
  Store: Store,
  install: install,
  version: '3.0.1',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};


/* harmony default export */ __webpack_exports__["a"] = (index_esm);


/***/ })

/******/ });