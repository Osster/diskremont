/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 235);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(25);
var isBuffer = __webpack_require__(53);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(0);
var normalizeHeaderName = __webpack_require__(55);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(27);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(27);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(26)))

/***/ }),

/***/ 19:
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 233:
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(234);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ 234:
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ 235:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(236);


/***/ }),

/***/ 236:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__store_store__ = __webpack_require__(74);
window._ = __webpack_require__(9);

window.Vue = __webpack_require__(31);

/**
 * We'll load the axios HTTP library which allows us to easily issue requests
 * to our Laravel back-end. This library automatically handles sending the
 * CSRF token as a header based on the value of the "XSRF" token cookie.
 */

window.axios = __webpack_require__(51);

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

/**
 * Next we will register the CSRF Token as a common header with Axios so that
 * all outgoing HTTP requests automatically have it attached. This is just
 * a simple convenience so we don't have to attach every token manually.
 */

var token = document.head.querySelector('meta[name="csrf-token"]');

if (token) {
    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;
} else {
    console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');
}

/**
 * Next, we will create a fresh Vue application instance and attach it to
 * the page. Then, you may begin adding components to this application
 * or customize the JavaScript scaffolding to fit your unique needs.
 */

Vue.component('car-to-png-component', __webpack_require__(237));
Vue.component('wheel-to-png-component', __webpack_require__(242));
Vue.component('disk-gallery-upload-component', __webpack_require__(247));



var isCarExists = document.querySelector('#car-to-png'),
    isLeftWheelExists = document.querySelector('#wheel-to-png'),
    isDiskGalleryUploadExists = document.querySelector('#disk-gallery-upload');

if (isCarExists) {
    var app = new Vue({
        el: '#car-to-png',
        store: __WEBPACK_IMPORTED_MODULE_0__store_store__["a" /* default */],
        template: '    <div id="car-to-png-app-body">\n' + '        <car-to-png-component/>\n' + '    </div>'
    });
}

if (isLeftWheelExists) {
    var app_left_wheel = new Vue({
        el: '#wheel-to-png',
        store: __WEBPACK_IMPORTED_MODULE_0__store_store__["a" /* default */],
        template: '    <div id="car-to-png-app-body">\n' + '        <wheel-to-png-component/>\n' + '    </div>'
    });
}

if (isDiskGalleryUploadExists) {
    var app_disk_gallery_upload = new Vue({
        el: '#disk-gallery-upload',
        store: __WEBPACK_IMPORTED_MODULE_0__store_store__["a" /* default */],
        template: '<disk-gallery-upload-component/>'
    });
}

/***/ }),

/***/ 237:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(238)
}
var normalizeComponent = __webpack_require__(19)
/* script */
var __vue_script__ = __webpack_require__(240)
/* template */
var __vue_template__ = __webpack_require__(241)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\assets\\js\\components\\Car2PngComponent.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6bd97949", Component.options)
  } else {
    hotAPI.reload("data-v-6bd97949", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 238:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(239);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(41)("8732fc0e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6bd97949\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Car2PngComponent.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6bd97949\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Car2PngComponent.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 239:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(32)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ 240:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    name: 'car-2-png-component',
    data: function data() {
        return {
            bodyBaseColor: '000000',
            bodyFillColor: '000000',
            bodyColorRange: [],
            progress: 0,
            canvas: null,
            canvasContext: null
        };
    },
    mounted: function mounted() {
        var that = this;

        var colorInput = document.querySelector('input[name="value_16"]');
        colorInput.addEventListener('change', function () {
            if (colorInput.value != '') {
                that.progress = 0;
                that.bodyFillColor = colorInput.value.replace('#', '');
            }
        });

        window.onload = function () {
            that.bodyFillColor = colorInput.value.replace('#', '');
        };
    },
    computed: {
        isSelfReady: function isSelfReady() {
            return this.bodyFillColor !== null;
        },
        carBodyColor: function carBodyColor() {
            var that = this;
            return that.bodyFillColor;
        }
    },
    watch: {
        isSelfReady: function isSelfReady(val) {
            var that = this;
            if (val) {
                console.log('isSelfReady');
            }
        },
        carBodyColor: function carBodyColor(val) {
            var that = this;
            console.log('carBodyColor changed', val);
            if (typeof val !== 'undefined') {}
        }
    },
    updated: function updated() {
        var that = this;
        that.$nextTick(function () {
            // Code that will run only after the
            // entire view has been re-rendered
            // Ждем пока перекрасится картинка
            console.log('Painting Done', that.progress);
            that.makePng();
        });
    },
    methods: {
        /**
         * Converts an RGB color value to HSL. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes r, g, and b are contained in the set [0, 255] and
         * returns h, s, and l in the set [0, 1].
         *
         * @param   Number  r       The red color value
         * @param   Number  g       The green color value
         * @param   Number  b       The blue color value
         * @return  Array           The HSL representation
         */
        rgbToHsl: function rgbToHsl(r, g, b) {
            r /= 255, g /= 255, b /= 255;
            var max = Math.max(r, g, b),
                min = Math.min(r, g, b);
            var h,
                s,
                l = (max + min) / 2;

            if (max == min) {
                h = s = 0; // achromatic
            } else {
                var d = max - min;
                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                switch (max) {
                    case r:
                        h = (g - b) / d + (g < b ? 6 : 0);
                        break;
                    case g:
                        h = (b - r) / d + 2;
                        break;
                    case b:
                        h = (r - g) / d + 4;
                        break;
                }
                h /= 6;
            }

            return [h, s, l];
        },
        /**
         * Converts an HSL color value to RGB. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes h, s, and l are contained in the set [0, 1] and
         * returns r, g, and b in the set [0, 255].
         *
         * @param   Number  h       The hue
         * @param   Number  s       The saturation
         * @param   Number  l       The lightness
         * @return  Array           The RGB representation
         */
        hslToRgb: function hslToRgb(h, s, l) {
            var r, g, b;

            if (s == 0) {
                r = g = b = l; // achromatic
            } else {
                var hue2rgb = function hue2rgb(p, q, t) {
                    if (t < 0) t += 1;
                    if (t > 1) t -= 1;
                    if (t < 1 / 6) return p + (q - p) * 6 * t;
                    if (t < 1 / 2) return q;
                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                    return p;
                };

                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                var p = 2 * l - q;
                r = hue2rgb(p, q, h + 1 / 3);
                g = hue2rgb(p, q, h);
                b = hue2rgb(p, q, h - 1 / 3);
            }

            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];
        },
        hexToRgbArr: function hexToRgbArr(hex) {
            var c;
            if (/([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
                c = hex.split('');
                if (c.length == 3) {
                    c = [c[0], c[0], c[1], c[1], c[2], c[2]];
                }

                //                    var cs = _.chunk(c, 2);
                //                    console.log('c', c);
                //                    return [parseInt(cs[0], 16), parseInt(cs[1], 16), parseInt(cs[2], 16)];
                c = '0x' + c.join('');
                return [c >> 16 & 255, c >> 8 & 255, c & 255];
            }
            throw new Error('Bad Hex ' + hex);
        },
        intToHex: function intToHex(num) {
            var hex = num.toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        },
        rgbToHex: function rgbToHex(r, g, b) {
            return "#" + this.intToHex(r) + this.intToHex(g) + this.intToHex(b);
        },
        setCacheColor: function setCacheColor(base, selected, rendered) {
            localStorage.setItem(base + '_' + selected, rendered);
            return rendered;
        },
        getCachedColor: function getCachedColor(base, selected) {
            var rendered = localStorage.getItem(base + '_' + selected);
            //console.log('rendered', rendered);
            return rendered !== null ? rendered : false;
        },
        bodyColorRecalc: function bodyColorRecalc(color) {
            var that = this;
            var rendered = false;
            if (this.bodyFillColor == null) {
                return color;
            }
            if (!(rendered = this.getCachedColor(color, this.bodyFillColor))) {
                if (__WEBPACK_IMPORTED_MODULE_0_lodash___default.a.indexOf(this.bodyColorRange, color) < 0) {
                    var sortIndex = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.sortedIndex(this.bodyColorRange, color);
                    var leftPart = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.take(this.bodyColorRange, sortIndex);
                    var rightPart = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.slice(this.bodyColorRange, sortIndex, this.bodyColorRange.length);
                    leftPart.push(color);
                    this.bodyColorRange = __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.union(leftPart, rightPart);
                }

                var currBodyColor = this.hexToRgbArr(color);
                var fillBodyColor = this.hexToRgbArr(this.bodyFillColor);

                var curr_hsl = this.rgbToHsl(currBodyColor[0], currBodyColor[1], currBodyColor[2]);
                var fill_hsl = this.rgbToHsl(fillBodyColor[0], fillBodyColor[1], fillBodyColor[2]);

                if (fillBodyColor[0] == fillBodyColor[1] && fillBodyColor[0] == fillBodyColor[2]) {
                    var L = 0.2126 * (currBodyColor[0] + fillBodyColor[0]) / 2 + 0.7152 * (currBodyColor[1] + fillBodyColor[1]) / 2 + 0.0722 * (currBodyColor[2] + fillBodyColor[2]) / 2;
                    fill_hsl[2] = L / 180;
                } else {
                    fill_hsl[2] = curr_hsl[2] + 0.18;
                }

                var idx = this.hslToRgb(fill_hsl[0], fill_hsl[1], fill_hsl[2]);

                rendered = 'rgb(' + idx.join(',') + ')'; //this.rgbToHex(idx[0], idx[1], idx[2]);

                this.setCacheColor(color, this.bodyFillColor, rendered);
            }
            return rendered;
        },
        makePng: function makePng() {
            var that = this;
            var svg = '',
                carSvg = document.querySelector('#car-svg'),
                carContainer = document.querySelector('#car-container');
            if (carSvg) {
                if (typeof window.XMLSerializer != "undefined") {
                    var xml = new XMLSerializer().serializeToString(carSvg);
                } else if (typeof carSvg.xml != "undefined") {
                    var xml = carSvg.xml;
                }

                that.canvas = document.createElement("canvas");
                that.canvas.setAttribute('id', 'output-canvas');
                that.canvasContext = that.canvas.getContext("2d");
                that.canvas.setAttribute('width', 2244);
                that.canvas.setAttribute('height', 827);
                carContainer.appendChild(that.canvas);

                that.canvas.height = carSvg.getAttribute('height');
                that.canvas.width = carSvg.getAttribute('width');
                canvg(that.canvas, xml);

                var canvasdata = that.canvas.toDataURL("image/png"); //.replace("image/png", "image/octet-stream");

                var body_render_img = document.querySelector('input[name="body_render_img"]');
                body_render_img.value = canvasdata;
                that.canvas.parentNode.removeChild(that.canvas);

                //                    var image = document.querySelector('#b64');
                //                    if (!image) {
                //                        image = new Image;
                //                        image.setAttribute('id', 'b64');
                //                        image.setAttribute('width', 2244);
                //                        image.setAttribute('height', 827);
                //                        image.setAttribute('crossOrigin', 'anonymous'); // This enables CORS
                //                        image.onload = function () {
                //
                //                            that.canvasContext.drawImage(image, 0, 0, 2244, 827);
                //
                //                            console.log('image', image);
                //


                //                            var a = document.createElement("a");
                //                            var i = new Image;
                //                            i.setAttribute('src', canvasdata);
                //                            a.appendChild(i);
                //                            a.download = "export_" + Date.now() + ".png";
                //                            a.href = canvasdata;
                //                            carSvg.parentNode.appendChild(a);
                //                            that.canvas.parentNode.removeChild(that.canvas);
                //                        };
                //                        //carSvg.parentNode.appendChild(image);
                //                    }
                //
                //                    image.setAttribute('src', b64);
                //                    that.canvasContext.drawImage(image, 0, 0, 2244, 827);
            }
        }
    }
});

/***/ }),

/***/ 241:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "car", attrs: { id: "car-container" } }, [
    _c(
      "svg",
      {
        staticStyle: { "max-width": "100%" },
        attrs: {
          viewBox: "0 0 2244 827",
          width: "2244",
          height: "827",
          id: "car-svg"
        }
      },
      [
        _c("g", { attrs: { id: "allcar" } }, [
          _c("g", { attrs: { id: "rear-light" } }, [
            _c("path", {
              attrs: {
                fill: "#673D42",
                d:
                  "M187,356c-12,5.3-24.1,10.5-36.1,15.8c-5,1.1-9.3,4.9-14.9,4c-2.1-0.7-4.3-0.3-6.4-0.3       c-1.6,0-2.6-0.9-1.6-2.5c0.5-0.8,1.7-0.4,2.5-0.7c-1,0.2-2,0.1-3,0.3c-0.7,0.1-1.3-0.3-1.7-0.8c-0.2-0.5,0-1,0.4-1.3       c8-2.2,16.1-4.3,23.9-7.2c0.9-0.3,1.9-0.7,2.8-1c0.5-0.1,1-0.2,1.4-0.2c3.2,0.5,3.6,1.9,0.8,3.4c-4.3,2.5-9.1,3.9-13.4,5.4       c10.9-3.1,20.8-9.5,31.6-13.7c3-0.6,5.7-1.6,7.8-4c2-1.3,3.9-3,6.5-2.7c1,0.4,1.5,1.2,1.7,2.2c0,0.8-0.3,1.4-0.9,1.8       C188.3,355.2,186.6,354.5,187,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4D282B",
                d:
                  "M121.1,348c-1.8-11.7-1-22.7,7.8-31.9c1.7-1.8,3-3.9,4.2-6.1c1.3-2.6,3.2-3.6,6-2.9       c0.3,0.8-0.4,1.2-0.8,1.7c1,0.3,2.3,0.2,2.6,1.2c0.5,1.6-1.2,1.7-2.1,2.2c-1.7,1-3.6,1.7-5.4,3.6c2.3,0.6,4.3,0.8,6.2,1.5       c12.5-0.2,24.9,2.1,37.4,1.1c2-0.1,4-0.1,5.8,1c0.5,0.5,0.6,1,0.3,1.6c-5.3,2.1-11.1,1.3-16.6,2.1c-4.7,0.6-9.6,0-14.4-0.2       c-6.2-2.8-12.6-2-19.1-0.7c-2.4,0.4-4.5,1.6-6,3.3c-2.7,3,2.9,2.9,2.3,5.3c-2.5,2.7-3.6,6.2-5.7,9.2c-2-0.8-0.5-2.6-1.1-3.5       c-0.4,3.5,2.2,7.4-0.1,11.2C122,348.2,121.6,348.3,121.1,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#65182C",
                d:
                  "M238,335c-9.6,6.9-20.9,9.8-32,13c-1.2-2.7,1.2-3.4,2.7-4.3c2-1.2,4-2.2,5.3-4.2c0.8-1,1.6-1.8,2.9-2       c5.9-1.5,10.5-5.4,15.7-8.3c1.7-1,3.2-2.3,5.4-2.2c0.7,0.1,1.4,0.3,2,0.7C242.8,331.9,242.8,331.9,238,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#761831",
                d:
                  "M238,335c-0.1-2.5,3-1.7,3.7-3.9c-2.4,0-4-0.7-1.7-3.2c-0.7-1.7,0.7-2.5,1.5-3.5       c0.7-0.6,1.5-1.1,2.3-1.5c3-1.3,5.5-3.2,7.4-5.9c1-1.1,2-2.2,3.7-1.1c2.7,3.3,1.3,9.9-2.7,12.5C247.9,331.3,242.9,333,238,335z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#571F24",
                d:
                  "M213,307c12.2-0.4,24.2,0.8,36.2,2.7c1.6,0.2,2.2,1.2,2.8,2.4c0.9,1.5,0.3,2.5-1.2,2       c-6.4-2.1-13.2-2.1-19.7-3.2c-14.1-0.7-28.2-0.1-42.2-0.4c-5.1-0.1-10.2,1.2-15.3,0c-1.6-2.4,0.7-2.5,1.9-3.3       c12.1-0.2,24.2-0.6,36.2,0.3C212.1,307.5,212.5,307.2,213,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#321013",
                d:
                  "M244.3,308.5c-1.5,1.6-34.7-0.6-36.4-0.6c-10.9,0.1-21.9,0.1-32.8,0.1c-1.2,0.6-2.5,1.2-3.7,1.1       c-11.8-0.5-23.5,2-35.3-0.2c1-0.6-1.5-3-0.5-3.6C144.5,304,242,304,244.3,308.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F444C",
                d:
                  "M232,310c6.5,0.6,13.3,0.1,19.4,3.3c0.2-0.4,0.4-0.8,0.6-1.2c1,1.3,2,2.6,3,3.9c-1.4,0.1-2.4,0.8-3,2.1       c-1.7,0.5-2-1.5-3.2-1.8c-0.4-0.2-0.8-0.4-1.2-0.6c-0.8-0.4-1.6-0.7-2.5-1c-1.8-0.6-3.7-0.3-5.6-0.3c-0.8,0-1.6,0-2.4,0       c-3.9,0-7.9,0-11.8,0c-1.4,0-2.9-0.1-4.2-0.9c-1.9-2.3-2.3-4.1,1.7-3.9C225.9,309.7,229,309,232,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#55222A",
                d:
                  "M215,340c-1.2,2.2-3,3.5-5.4,4.5c-1.5,0.6-3.4,1.4-3.6,3.5c-6,1.3-11.4,4.3-16.8,7.1       c-1.2,0.5-1.3-0.2-1.2-1.1c0.3-0.3,0.7-0.7,1-1c3.2-4.2,8.4-5.2,12.5-8c2.6-1.7,5.4-3.4,8.3-4.6       C211.4,339.7,213.2,338.6,215,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#47282B",
                d:
                  "M136,375c3.6,0.3,6.6-1.7,10-2.4c1.6-0.4,3.1-2.1,5-0.7c-6.5,6.6-14.6,6.2-22.9,5       C130.2,374,133.3,375.3,136,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#571F24",
                d:
                  "M211.4,306.9c-14.4,0-28.8,0.1-43.2,0.1c-0.8,0-1.5-0.5-2.3-0.8c14,0,28,0,42.1,0       C209.2,306.2,210.3,306.7,211.4,306.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#673D42",
                d:
                  "M121.1,348c0.3,0,0.6,0,0.9,0c1.4,1.1,1.4,2.8,2,4.2c1.2,5.4,1.7,10.9,2.8,16.3c0.1,0.8,0,1.6-0.6,2.3       L126,371c-0.3,0.5-0.7,0.5-1,0C122.4,363.6,121.6,355.8,121.1,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#775556",
                d:
                  "M125,371c0.3,0,0.7,0,1,0c1.3,1.8,3.4,0.5,5,1.3c-0.3,1.4-2.2,0.2-2.4,2.1c2.4,0.7,5.3-1.7,7.4,0.7       c-2.4,1.7-5.5,0.1-7.9,1.8C124.7,376.1,126,373,125,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5F3239",
                d:
                  "M188,354c0.4,0.4,0.8,0.7,1.2,1.1c-0.7,0.3-1.4,0.6-2.2,0.9c-0.4-0.2-0.8-0.3-1.3-0.5       C186.5,355,187.3,354.5,188,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#280D10",
                d:
                  "M151,322c10.7-0.3,21.3-0.7,32-1c1.8-1.3,4.4-1.7,4.8,0.5c0.5,2.8-3,2.7-5,3.9c0.6,0.9,1.9,1.8,1.9,3.3       c-0.4,3.3-3.4,4.9-4.8,7.5c-0.9,1-1.7,2.1-2.3,3.3c-3.3,5.3-6.6,10.6-10.3,15.5c-0.9,1.1-0.4,2.6-1.3,3.7       c-3.5,2.6-7.8,3.2-11.9,4.2c-0.3,0-0.6,0-1,0c-1,0.6-2,0.7-2.1-0.7c-0.1-1.2,0.8-2.2,1.6-2.9c5.8-5.2,10.1-11.6,14.4-18       c0.3-0.4,0.6-0.7,0.9-1c1.4-1.3,2.8-2.7,2.1-4.9c0.3-0.8,0.8-1.4,1.3-2.1c2.9-3.9,2.9-3.9-2-5.2c-1.3-0.4-2.8-0.7-2.6-2.5       c0.2-1.6,1.5-2.1,2.9-2.1c2.5-0.1,4.9,0.1,6.9-0.6c-10.2,1.3-20.8,2.3-31.5,1.4c-1.5-0.1-3-0.1-4.2-1.3c0-2,1.2-2.6,2.9-2.3       C146.2,321.2,148.7,320.8,151,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F252A",
                d:
                  "M154,363c3.7-2.5,8.1-3.2,12-5c1.5-1.9,3.7-2.4,5.6-3.6c0.4-0.2,0.8-0.4,1.3-0.6       c5.1-2.2,10.4-4.2,15.3-7c2.7-1.5,5.5-3.2,8.8-2.1c-0.9,5.1-5.6,4.7-9,6.2c-2,1-4,2-6,3c-2.6,1.6-5.3,2.6-8,4       c-11.1,5.3-22,10.9-33.8,14.2c-0.2-0.4-0.3-0.8-0.5-1.1c4.2-1.7,8.5-3.4,12.7-5.2c1.1-0.4,2.1-1,3.1-1.6       c0.6-0.3,1.3-0.7,0.1-1.1C155,362.9,154.5,363,154,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B1A1E",
                d:
                  "M168,341c-3.5,7.2-8.4,13.4-14.3,18.8c-1.6,1.5-1.5,1.6-0.7,3.2c-0.4,0.8-1.2,1-2,1       c-3.1,1-2.3-1.3-2.4-2.8c0.8-2.6,3.3-4,5-6.5c-2.4-0.9-4.8-0.2-7-0.7c-1.4-0.4-2.7-1-2.6-2.5c0.1-1.3,1.6-1.6,2.8-1.6       c3.5-0.1,6.9-0.5,10.3-1.3c3.1-0.8,4.5-3.5,6.6-5.5C164.9,341.9,165.6,339.7,168,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5F3239",
                d:
                  "M188,351c2.2-3.2,6.9-2.6,9-6c0.3-1,1.1-1.6,2-1.9c5-1.2,9.2-4.2,13.4-7c1.2-0.7,2.5-0.8,3.7-1.5       c1.3-0.8,2.9-1.8,3.7,0.2c0.9,2.2-0.7,3.2-2.8,3.2c-0.7,0.7-1.3,1.3-2,2c-8.6,2.3-15.4,8.3-23.3,11.9c-0.9,0.4-1.8,0.8-2.7,1.2       C188.7,352.3,188.3,351.7,188,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#401B1C",
                d:
                  "M149,362c0.9,0.5,0.3,2.5,2.1,2c-8.1,3.1-16.1,6.5-24.9,6.8c0-0.6-0.1-1.2-0.1-1.9       c-0.6-3.7,0.8-5.3,4.5-4.7c4.4,2.6,8.5,0.7,12.6-1C145,362.6,146.6,360.5,149,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5F3239",
                d: "M174,358c2.1-2.4,4.9-3.6,8-4C180,356.6,177.2,357.8,174,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#78444A",
                d:
                  "M183,320c-14,0.9-27.9-1-41.9-1.1c-1.2,0-2.3,0.1-3.1-1c0.5-1,1.3-1.6,2.2-2.2c2.4-1.4,5-2.1,7.7-2.2       c14.2-0.7,28.4-2.2,42.6-2.9c4.8-0.2,9.6-0.7,14.3,0.3c2.4,1.3,1.2,2.3-0.4,2.9c-2.3,0.8-4.8,1.3-7.2,1.3       c-3.6,0.1-7.1,0.9-10.5,2c-0.4,1.4,2.7,1.5,0.9,3.2C186.1,320.4,184.5,320.9,183,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D1018",
                d:
                  "M183,320c1.7-0.2,3.3-0.4,5-0.5c1.3-1.8,3.3-1.7,5.2-1.9c2.7,0,5.3,0.3,7.9-0.6c2.4-0.5,5-0.2,7.3-1.1       c4.8-0.9,9.8,0.4,14.5-1c5.2-0.5,10.4-0.3,15.5-1c1.4,0,2.8,0,4.2,0c0.8,0,1.6,0.1,2.3,0.7c0.2,3.6-2.4,4.6-5.1,4.5       c-3.7-0.2-7.3,0.4-10.9,0.1c-2.3-0.2-4.2,0.4-5.8,2.2c-1.9,1-4.1,0.9-6.1,1.3c-0.8,0.1-1.5,0.1-2.3-0.2c-1.4-4.5-4.7-2.2-7.4-2       c0.3,0,0.7-0.1,1,0c1.6,0.4,4.2-2.5,4.7,0.1c0.6,3-2.8,2.6-4.7,2.7c-8.4,0.7-16.5,2.9-24.4,5.6c-0.5-2.5-2.6-2.6-5.1-2.6       c2.4-3,6-2.4,8.5-4.6c-1.4-1.4-3.1-0.6-4.5-0.9C183,320.7,183,320.4,183,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C1C1D",
                d:
                  "M140,317c-0.5,0.8-1.2,1-2,1c-2-0.7-4.1-0.7-6.2,0c0.9-4.4,2-5.4,8.3-7.4c-1.2-1.1-2.8-0.1-4.1-0.7       c-0.1-0.1-0.2-0.3-0.2-0.4c0-0.1,0.1-0.3,0.2-0.4c13-0.8,26-1.3,39-1c-0.7,0.7-1.3,1.3-2,2c-0.8,0.9-1.8,0.9-2.9,0.9       c-9.4-0.6-18.9-2.4-27.5,3.4C141.5,315,140.1,315.4,140,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#371516",
                d:
                  "M151,322c-3.3,1.2-7-2.4-10,1c-0.5,1.5-1.8,2.1-3.1,2c-5-0.4-6.6,2.3-6.5,6.7c-0.3,0.4-0.8,0.6-1.2,0.7       c-0.8-0.1-1.4-0.5-1.1-1.4c-6.3-4.2-6.3-4.2,0.3-8.8C133.5,319.4,146.7,319.2,151,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6B2D32",
                d:
                  "M129,331c0.3,0.3,0.6,0.7,1,1c2.7,3.7-0.1,6.6-1.4,9.8c-1.9,1.6-3.4,1.2-4.6-1c0-0.3-0.1-0.5-0.1-0.8       C123.4,335.8,125.1,332.7,129,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#270D0F",
                d:
                  "M123,352.1c-1.2-1.1-0.7-2.7-1-4c0-4.6,0-9.3,0-14.7c1.8,2.6,0,5.1,2,6.7c0,0,0,0,0,0       c1.2,2.4,1.6,5,1.7,7.7C125.8,349.7,125.7,351.8,123,352.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A282E",
                d:
                  "M217,338c1-0.9,3.3-1.4,2-3.2c-1.5-2.1-1.3,1.5-2.7,1.3c-1-0.2-2.2,0.6-3.3,0.9       c-0.6-0.6-0.7-1.3-0.4-2.1c5.8-4.8,12.4-8.5,19.2-11.6c3,0.7,5.3-0.8,7.7-2.4c3-2,5.9-4.5,9.8-5c1.7,5-3.2,5.6-5.3,8       c-0.7,0.4-1.3,0.7-2,1.1c-1.4,0.8-2.6,2-4,2.9c-5.9,2-10.5,6.1-15.9,8.9C220.5,337.7,219.1,339.6,217,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#772C3C",
                d:
                  "M238,328c0.9-1.6,2-2.9,4-2.9c-0.7,1-1.3,2-2,2.9C239.3,328,238.7,328,238,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#772C3C",
                d:
                  "M244,324c1.3-2.9,5.6-3.9,5-8c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3c2.3-0.3,1.8,2.3,3.1,3       C250.1,321.1,247.3,322.9,244,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#643336",
                d:
                  "M170,310c1,0,2,0,3,0c18.4-2.1,36.9-0.5,55.3-1c1.3,0,2.7-0.3,3.7,0.9c-2.7,0-5.6,0.4-8.2-0.1       c-2.9-0.5-2.5,1.5-2.8,3c-1.9,2-4.4,1.4-6.7,1.2c-2.6-1.3-5.8,0.2-8.2-2c-16.1,0.1-32.2,0.8-48.2,2.7       c-3.6,0.4-7.2,0.1-10.8,0.2c-0.2-1.6,1-2.1,2.1-2.3C156,311.2,162.8,309.4,170,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#431E20",
                d:
                  "M248.9,315c0,0.3,0.1,0.6,0,0.9c-4.3,2.8-8.5,5.6-12.8,8.4c-1.5,1-2.9,0.3-4.2-0.4c1.7-3.5,2-3.7,3.8-4       c-2.4,1.2-6.8-0.7-10.6,1.5c-0.8,0.1-1.5,0-2.1-0.6c0.2-2,1.3-3.1,3.3-2.9c4.5,0.3,9-0.7,13.6,0.1c2.3,0.4,3.8-1.3,5.1-3.1       c1-0.9,2-0.7,3.1-0.1C248.4,315,248.6,315,248.9,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9868B",
                d:
                  "M239,314.9c-5.2,0.9-10.5,1.2-15.8,1.2c-2.8,0.7-5.6,0.2-8.4,0.3c-1.3,0.1-2.6-0.3-2.7-1.7       c-0.1-1.8,1.5-1.3,2.6-1.3c3.3,0,6.7,0,10,0c4.5-0.3,9,0.7,13.4-0.6c0.7,0,1.3,0,2,0C240.7,314.1,239.6,314.4,239,314.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#AA666A",
                d:
                  "M224.9,313.9c-4,0-8,0-12,0c3.2,3.1,6.9,1.5,10.3,2.3c-4.9,1.5-10,0.6-15,0.9c-2.4,0.6-4.7,0.5-7.2-0.5       c4.3-1.6,7.8-5.3,13.1-3.7c2.3,0,4.6,0,6.9-0.1c1.4,0.1,2.8,0.2,4.1,0.2c0.3,0.3,0.3,0.4,0.2,0.6       C225.1,313.8,225,313.9,224.9,313.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BD878C",
                d:
                  "M224.9,313.9c0.1-0.3,0.1-0.5,0.2-0.8c4.3-0.1,8.6-0.1,12.9-0.2C233.8,315.2,229.3,313.5,224.9,313.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BD878C",
                d:
                  "M239,314.9c0.3-0.7,0.7-1.3,1-2c2,0.2,4.1-0.8,5.8,0.9c-0.7,1.2-2.2,0.3-3,1       C241.5,314.9,240.3,314.9,239,314.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A282E",
                d:
                  "M242.8,314.9c1-0.3,2-0.7,3-1c0.7,0.4,1.5,0.7,2.2,1.1c-1,0-2.1,0.1-3.1,0.1       C244.2,315,243.5,314.9,242.8,314.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#532225",
                d:
                  "M123,352.1c3.7-3.7-0.2-8.1,1-12c1.2,1,2.1,2.4,4,2c1.7,2,1.1,5.1,3.5,6.8c0.3,0.5,0.5,1,0.6,1.5       c0.2,4.7,0.9,9.5-0.5,14.1c-0.2,0.2-0.4,0.4-0.6,0.6c-3.1-0.4-4.7,1-5,4C123.8,363.6,123.7,357.8,123,352.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0B0506",
                d:
                  "M131,332c-0.5-7.1-0.5-7.1,7.2-8.1c1-0.1,1.9-0.6,2.8-0.9c12.7,0,25.3,1,38.9-1.3       c-3.4,2.7-6.4,2.2-9.3,2.3c-1.3,0-3,0.1-3,1.8c0,1.7,1.7,1,2.8,1.2c2,0.4,5.1-1.1,5.9,1c0.7,2-2.3,3.7-3.4,5.6       c-0.7,1.3-1.9,2.3-2.8,3.4c0.5,1.9-1.2,2.7-2,4c0,0,0,0,0,0c-4.2,2-5.6,7.1-10,9c-1.4-1.3-3.1-1.3-4.6-0.5       c-3.4,1.9-7.2,0.5-10.7,1.3c-1.6,0.3-2.7-1-3.4-2.5c-1.1-2.6-1.5-5.2-5-6.6c-2-0.8,0.3-3.3,1.9-4.5c5.9-2.5,12-0.4,17.1-0.6       c-4.3-0.7-9.6,0-14.7-1.3c-2.2-1.2-4.8-1.6-7.1-2.7C131.3,332.4,131.2,332.2,131,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5F1125",
                d:
                  "M177,339c0-1.4,0.7-2.4,2-3c0.9-0.1,2,0.8,2.6-0.4c4.2-7.8,13.4-12.2,21.7-10.3c0.5,0.1,1,0.1,1.5,0.2       c1.6-0.1,3.2-1.8,4.9-0.2c1.3,0.5,1.5,3,3.9,1.8c1.1-0.6,2.3,0.8,2.8,2.2c-0.5,2.6-2.6,3-4.7,3.2c-1.4-0.7-2.9-0.2-4.3-0.2       c-0.6-0.3-0.8-1-1.2-1.5c-4.4,4-11.4,2-15.1,6.6c2.6-0.9,5.2-1.3,5.7,2.9c-3.3,4.7-8.3,6.6-13.5,8.3c-2-0.8-4.1-1.1-6-2       c-0.3-0.2-0.5-0.5-0.5-0.8C177,343.4,178.8,341.3,177,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#691A2C",
                d:
                  "M205,327c-8.2-2.4-15.1,0-21.1,5.6c-0.8,0.7-2.2,1.5-1.4,2.8c1,1.4,0.2,1.4-0.8,1.8       c-1.4,0.5-2.6,0.8-2.8-1.2c0.9-2.9,3.5-4.6,5-7c7.5-5.9,16.8-5.6,25.5-7c1-0.2,2.4,0.5,3.1-1.4c-3,0-5.8,1-9.2-0.1       c3-0.8,5.5-0.4,7.9-1.3c2.3-0.8,3.6,0.3,3.7,2.8c-0.3,2.8-2.6,2.3-4.2,2.2C208.1,323.9,206.3,324.8,205,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#551522",
                d:
                  "M177,339c0.6,3.6,2.2-1,3.3,1.5c-0.1,1.6-2.6,3.1-3.3,5.5c0.3,2.3-2.1,3.9-1.7,6.2       c-0.3,1.9-2.4,1.7-3.3,2.8l0,0c-2-0.1-4,3.6-6,0C169.7,349.7,173.3,344.3,177,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D1018",
                d:
                  "M166,355c2,2.3,4-0.7,6,0c-1.7,1.7-3.7,2.6-6,3C165.7,357,164.4,356,166,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B1A1E",
                d:
                  "M168,341c-0.1-1.7,1.4-2.6,2-4C171.5,338.5,171,339.4,168,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D1018",
                d:
                  "M172,355c0.4-1.6,2.2-1.8,3-3c1.8-2.9,4.5-4.2,7.9-4.1c4.5-2.5,9.3-4.4,13.1-7.9       c3.7-3.1,8.2-4.9,12.4-7.4c0.8-0.5,1.6-0.8,2.6-0.7c1.6-1.1,4.1-0.7,5.1-2.9c2.1-3.8,6.5-4.4,9.5-6.9c1.5-1.3-1-0.5-0.5-1.2       c3.8-4.2,8.6-0.8,14-2.6c-3.1,2.4-5,4-7,5.6c-6.3,3.7-12.7,7.4-19,11c-3.6,4.6-8.9,6.7-14,9c-0.7,0.3-1.3,0.7-2,1       c-7.3,1.3-13,6.2-19.9,8.5C175.4,354,173.9,355.2,172,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#240D0E",
                d:
                  "M136,338c-0.3,1.3-3.9,3.5,1,3.3c0.9,0,2,2.1,2.6,3.4c0.8,1.6-0.4,4.6,2.3,4.9       c3.3,0.5,6.8,1.2,10.1-0.6c2.1-1.2,4.5-2.6,6,1c-4.4,0.4-8.7,1.4-13.2,1.5c3.4,2.7,7.6,0.6,11.8,1.9c-2.7,3.1-5.2,5.8-7.7,8.6       c-3.3,1.5-6.4,3.3-9.9,4.3c-2.7,0.8-6,2.6-8.1-1.3c0,0,0,0,0,0c0.9-5.3,0.8-10.7,0-16l0,0c-1.3-2-1.9-4.2-1.9-6.5       C129,337.9,131.4,336.3,136,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F252A",
                d:
                  "M199,344c4.7-3,9.3-6,14-9c0,0.7,0,1.3,0,2C208.7,340,204.6,343.5,199,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B5A5F",
                d:
                  "M214.1,312.9c-4.7-1.2-7.3,4.7-12.1,3.9c2.1,0.1,4.1,0.2,6.2,0.3c-2.2,1.4-4.7,0.7-7.1,1       c-2.6,1.1-5.5-0.3-8.1,0.8c-1.7,0.2-3.3,0.4-5,0.6c-0.9-1.2-3.6,0.6-3.5-2.4c0.1-2.9,2.2-1,3.3-1.5c5.8-2.5,12.5-0.8,18.3-3.6       C208.7,312.4,211.6,311.2,214.1,312.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#220B0C",
                d:
                  "M170,310c-7.6,1.8-15.6,2.1-23,5c-2.5,0.1-4.7,1.1-7,2c-2.3-0.3-1.2-1.3-0.4-2.1       c2.6-2.6,6.1-4.5,9.5-5.2C156,308.5,163,308.1,170,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#691A2C",
                d:
                  "M225,321c1.1-0.1,2.3-0.1,4.2-0.2c-4.3,3.7-8.7,6-13.1,8.3c-0.9,0.6-2.4-3.9-3.1,0.4       c-0.1,0.4-2.2-2.6-3.9-3.4c2-2.6,6.1-1.1,8-4c1.8-1.8,4-0.6,6-1C223.7,321,224.3,321,225,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#772036",
                d:
                  "M217,322c-1.1,4.5-5.2,2.9-8,4c-1.9-2.1-2.4,1.8-4,1c0.4-2.8,2.1-3.9,4.8-4c1.7-0.1,3.7,0.7,5.2-1       C215.7,322,216.3,322,217,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#78444A",
                d:
                  "M193,318.9c2.6-1.7,5.4-0.7,8.1-0.8C198.5,319.7,195.7,318.8,193,318.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#451E1F",
                d:
                  "M136,338c-5.8,0.1-6.4,0.9-5.3,6.6c0.3,1.4,0.2,2.9,0.3,4.4c-3.9-1.1-2.9-4.3-3-7c0-3.5,2.9-6.3,2-10       c0.4,0,0.7,0,1.1,0c0,0,0,0,0,0c2.2,1.2,4.7,1.2,7,2c5.6,0.8,11.3,1.7,16.9,2.5C148.6,337.1,142.2,336.8,136,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5F3239",
                d:
                  "M224.9,332.1c-1,1.4-1.7,3.1-3.7,2.3c-0.7-0.2-0.7-1-0.5-1.7C221.8,330.2,223.6,333,224.9,332.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#401B1C",
                d: "M131,349c1.6,5.3,1.6,10.7,0,16C131,359.7,131,354.3,131,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#371516",
                d: "M138,334c-2.5,0-5.1,0.3-7-2C133.6,331.9,136,332.3,138,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#521021",
                d:
                  "M209,333c-3.9,3.2-8.1,5.6-13,7c-0.9-3.5-3.7-2.2-6.8-2.1c3.2-2.9,5.1-5.8,9.7-5.4       c2.8,0.3,5.6-1.3,7.1-4.2c1.7,0.7,0.4,3,2,3.7C208.6,332.1,208.9,332.5,209,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#692032",
                d:
                  "M183,348c-2.6,1.4-5.3,2.7-7.9,4.1c-2.2-3,1.2-4,2-6C179.1,346.2,181.7,345.2,183,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#691A2C",
                d:
                  "M209,333c-0.3-0.3-0.7-0.7-1-1c1-1.5,2-3.2,3,0C210.6,332.8,209.8,333,209,333z"
              }
            })
          ]),
          _vm._v(" "),
          _c("g", { attrs: { id: "body" } }, [
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1875,644c-9.5-0.4-18.9,0.9-28.4-1c-7.3-1.4-7.9-2.4-10-9.4c-2.7-9-1.8-18.2-2.2-27.2       c-0.5-11.4-2-22.3-4.6-33.4c-1.1-4.7-3.1-8-6.4-11.3c-42.4-42.2-84.7-84.5-126.9-126.9c-3.4-3.4-6.9-5.6-11.8-4.9       c-3,0.4-5.3-0.3-5.7-3.9c1.8-2,4-1,6.1-0.6c29.8,5.8,56.6,18,80.7,36.4c1.9,1.4,3.4,3.3,5.5,4.5c3.1,2.5,5.7,5.5,8.6,8.2       c13.4,13,24.4,27.9,33.3,44.2c3.2,5.8,5.4,12.1,8.5,17.9c0.2,0.5,0.4,0.9,0.6,1.4c2.6,6.4,5.1,12.9,6.9,19.6       c6.2,22,9.4,44.4,10.2,67.2c-0.1,13.7-0.1,13.7,13.6,13.7c2.5,0,5-0.2,7.5,0.3c4,0.8,8,1.4,12,1.7c1.1,0,2.2,0.2,3.1,0.8       C1876.9,642.7,1875.9,643.3,1875,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1183,660.1c-9.6,3.2-19.6,2-29.4,2.1c-16.8,0.3-33.7-1.4-50.4,0.2c-10.8,1-21.6-0.1-32.1,1.5       c-9.4,1.5-18.9,3-28.1,1.7c-26.7-3.6-53.6-2.7-80.2-1.2c-27.6,1.5-55.2-0.3-82.6,1.9c-13.1,1-26.2,1.1-39.2,1.6       c-5.3,0.2-10.6,0.1-15.8-1.7c-1.5-0.5-3.4-0.6-4.9-0.3c-11.2,2.4-22.7,2-34,3.5c-6.1,0.8-12.3,0.4-18.4,0.4       c-6.8,0-13.7,0.2-20.5,0c-12.1-0.4-24-2.7-36.2-2.1c-5.2,0.2-10.1,1.9-15.2,2.2c-8.6,0.5-16.6-3.3-25-3.4       c-10.3-0.1-18.2-5.6-26.6-10.1c-12.2-6.4-25.1-8.8-38.5-9.1c-1.8,0-3.7,0.4-4.9-1.6c3.6-2.5,7.7-1,11.6-1.3       c1.8-0.2,3.6,0,5.5,0c7.1,0.1,13.6,2.5,20,5.1c4.4,1.8,8.9,3.6,13.1,5.8c10.8,5.5,22.1,7.6,34.2,7.3c19.5-0.6,39,0.3,58.5-0.3       c11.1-0.3,22.3,1.1,33.3,0c13.5-1.3,26.9-0.5,40.4-0.8c8.3-0.2,16.6,1.5,24.9,1c3-0.2,6-0.4,8.7-1.7       c14.6-0.8,29.2-0.2,43.8-0.4c4-0.1,8,0,11.9,0c39.1,0,78.2,0,117.3,0c4.4,0,8.6-0.9,12.8-1.7c15.7-0.7,31.4-0.1,47-0.3       c30.5,0,60.9,0,91.4,0C1178,658.6,1180.8,657.9,1183,660.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M525.2,520.8c-1.6-0.3-2.7-1.5-3.4-2.7c-4.1-6.5-9.2-12-15.1-17c-9.1-7.8-15.7-18.5-26.6-24.3       c-7.7-4.1-14.1-10.2-22.5-13.4c-6-2.3-11.4-6.3-17.7-8.6c-18.1-6.7-36.6-10.8-55.9-8.6c-8.1,0.9-16.2,3-24.2,5       c-16.1,3.9-30.9,11-45.5,18c-13.2,6.3-24.9,15.7-33.8,27.3c-5.2,6.8-11.2,13.1-15.1,20.8c-2.9,5.7-4.6,12-7.2,17.9       c-3.3,7.3-4.7,15.4-9.6,22.2c-1.9,2.7-2.6,7.1-1.5,10.6c1.3,4.3,0.1,7.8-1.9,11.4c-1.3,2.3-1.7,4.8-1.2,7.2       c1.8,8.1,0.8,16.1-0.5,25c-1.2-3.8,0.2-7.1-1.4-10.9c-1.8,4.3-2.8,8.1-1.9,11.9c0.8,3.3,0.7,6.6,0.8,9.9c0,6.4-2.4,9.2-8.8,9.4       c-5.7,0.2-11.3,0.1-17,0c-1,0-3.1,0.8-2.1-1.8c0.3-0.9-0.3-1.2-1.1-1.1c-5.3,0.6-10.7-1.2-16,1.8c-8.1,4.6-16.4,9.5-26.4,8.2       c-1.5-0.2-3.1,0.2-4.1-1.3c-4.9-7-12.1-10.5-19.3-14.7c-4.6-2.7-8.3-7.6-13.2-10.7c-3.2-2.1-6.3-4.2-10.1-5.2       c-0.8-0.2-1.7-0.5-2.2-1c-7.5-8.4-17.4-14.1-24.8-22.7c-1.2-1.3-2.1-2.6-1.9-4.4c5.4,1.3,8.2,6.1,12.3,9.3       c3.8,2.9,7.1,6.4,11.2,8.9c14.6,11.3,30,21.5,45.3,31.6c1.9,1.3,3.8,2.7,6.1,3.3c7.5,2.7,14.6,1.8,21.4-2.2       c4.8-2.7,10-4.2,15.4-5.2c7.9-0.3,15.8,0,23.6-0.2c2.3,0,4.6,0.3,6.5-1.5c1.8-1.9,1.6-4.2,1.6-6.5c0.2-8.6-0.3-17.1,0.3-25.7       c2.1-10.8,3.4-21.8,6.3-32.5c1.9-6.7,4.1-13.2,6.5-19.7c6.4-15.8,14.8-30.4,25.7-43.5c7.4-8.9,16.3-16,25.4-23       c2-1.5,4.1-2.8,5.9-4.5c2.7-1.6,5.7-2.6,8.7-3.6c5-1.3,9.2-4.3,13.9-6.4c0.4-0.2,0.9-0.4,1.3-0.6c7-2.8,14-5.3,21-8.2       c3.8-1.7,7.9-2.7,12-3.8c5.6-0.6,11.3-0.2,16.7-2c15.1-1.1,30.1-0.3,44.7,3.8c6.5,2.2,13.2,4,19.7,6.2c3.6,1.2,7,2.8,10.1,5       c2.9,2.1,5.9,4,9.4,4.8c8.4,3.6,15.4,9.4,22.5,14.9c1.4,1.1,2.8,2.3,4.5,3.1c0.4,0.2,0.8,0.5,1.2,0.7       c10.1,7.4,17.2,17.6,25,27.1c1.6,2.5,3.5,4.7,5.1,7.2C524.4,517.4,526.2,518.7,525.2,520.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1638.9,423.8c-2.7,3.3-6.7,3.7-10.3,4c-7.4,0.6-14.8,1.8-22.3,1.2c-3.8-0.3-7.6,0.4-10.5,3.5       c-0.5,0.6-1.5,1.3-2.1,1.2c-6.1-1.3-11,3.4-16.9,3.3c-3.6,0-6.3,2.9-9.3,4.6c-8.1,4.9-17.7,6.7-25,12.9       c-10,8.6-21.5,15.7-30.6,25.3c-7,7.4-14.1,15.3-18.9,24.1c-5.3,9.6-11.8,18.6-15.6,29.2c-3.7,10.5-7.2,21-9.8,31.7       c-5.3,22.2-6.9,44.9-5.4,67.7c0.4,6.7,1.6,13.4,1.9,20.2c0.2,5.5-2.4,8.6-7,10.2c-4.2,1.5-8.5,2.8-13.1,2.8       c-30.8,0-61.6,0-92.5,0c-2.3,0-4.6,0-6.8-1.7c6.5-1.3,13,1.1,19.1-2.3c-1.7,0-3.4,0-5.1,0c-33.9,0-67.9,0.1-101.8-0.1       c-8.2-0.1-16.6,1.1-24.8-0.9c-0.8-0.2-1.5-0.6-2.2-1c1-1.1,2.3-1.3,3.6-1.4c1.2-0.1,2.3-0.1,3.5-0.1       c18.3,0.7,36.6-1.6,54.8-0.9c15.6,0.6,31.2,0.8,46.9,0.8c9.9,0,19.8,0,29.8,0c1.9,0,3.8,0,5.7,0c13.7,0,27.4,0,41.1,0       c0.9,0,1.9,0,2.8,0c11.1,0.2,22.2-0.2,33.2,0.2c8.1,1.7,10.5-1.4,8.5-11c-0.2-0.8-0.3-1.6-0.4-2.4c-0.1-3.8,0-7.5-0.1-11.3       c0-2.7,0-5.3,0-8c0-5.8,0.1-11.7,0-17.5c-0.5-19,3.2-37.3,8-55.6c0.1-0.5,0.2-1.1,0.3-1.6c2.1-5,3.1-10.3,5.2-15.3       c2.1-5.2,4.6-10.2,6.7-15.4c1.5-1.8,2.6-3.7,3.1-6c0.3-0.9,0.7-1.7,1.3-2.4c3.1-3.1,4.6-7.3,7.2-10.8       c3.5-4.7,6.6-9.6,10.2-14.1c13.5-16,29.2-29.6,47.2-40.2c16-9.4,33.4-15.6,51.3-20.4c10.8-1.7,21.5-4.7,32.7-4.2       C1634.9,422.7,1637.1,422.3,1638.9,423.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C6535D"),
                d:
                  "M243.1,307.7c-1.1,0.2-2.2,0.3-3.1-0.6c-0.4-1.5-3.1,0.2-2.8-1.8c0.2-1.2,1.8-1.3,2.8-1.7       c8.6-3,17.4-1.6,26.2-1.9c9.9-0.3,19.9,0.7,29.6-2.7c3.4-1.2,7.3-0.2,10.9,0.4c3.9,0.7,7.6,0.6,11.3-0.6       c7.5-0.7,15.1-0.2,22.6-0.4c7.7,1,15.5-1,23.3,1.1c1.3,0.4,4.5-2.3,7.2-1.8c5.7,1.2,11.6,0.5,17.4,1.3       c8.4,1.2,16.9-0.2,25.3,0.2c0.9,0,1.7,0.1,2.4,0.6c0.5,0.9,0.4,1.8-0.3,2.5c-6.9,1.9-14.1,1.8-21.2,1.9       c-14.3,0.3-28.5-0.1-42.8,1.1c-14.7,1.3-29.5,1.2-44.2,2c-3.5,0.2-6.9,1.3-10.4,1c-15-0.2-30,0.7-44.8,2.7       c-0.5,0.2-1,0.3-1.5,0.4c-1.9-0.1-2.6-2-4.1-2.6C245.6,308.4,244.5,307.6,243.1,307.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1031,112c4-0.4,8,0.5,11.8,1.5c10.3,2.9,21,3.4,31.1,7.8c6.8,2.9,14.8,4.1,22.4,5.6       c8,1.6,15.3,5.3,23.5,6.4c4.7,0.6,7.6,5.5,12.4,6.9c7.8,2.2,14.9,6.1,22.7,8.5c7.5,2.3,14.2,7,21.7,9.4       c9.9,3.2,18.7,8.8,28.5,12.5c9.5,3.6,19,8.4,25.9,16.5c-2.7,1.4-4.6-0.8-6.7-1.7c-2.2-1-4.2-2.6-6.5-3.5       c-6.3-2.6-12.4-5.8-18.5-8.9c-10.2-5.9-21.2-9.9-31.9-14.5c-2-0.8-4-1.5-5.9-2.6c-11.8-5.9-24.5-10-36.5-15.4       c-2-0.9-4.1-1.3-6.3-1.2c-2.9,0-5.5-1.1-8.1-2.1c-11-4-22.1-7.7-33.5-10.4c-8.6-3.6-18.1-4.1-26.6-7.9       c-4.6-1.9-9.3-3.3-14.2-3.9C1034.2,114.9,1031.5,115.2,1031,112z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("571122"),
                d:
                  "M191.8,349.9c4.3-2.4,8.5-4.7,12.8-7.1c0.8-0.4,1.3,0,1.6,0.7c-0.1,1.9-1.7,2.6-2.9,3.6       c-1.2,2.8,1.8,3.9,2.5,6c1,2.4,3,4.5,2.7,7.4c-3.5,3.5-8.5,2.9-12.7,4.5c-5.6,2.1-11.5,2.9-17.2,4.7c-1.2,0.4-2.3,0.7-3.5,1.1       c-1.4,0.4-2.7,0.9-4.1,1.4c-7.1,2.5-14.5,4.1-21.3,7.4c-2.5,1.3-4.7,1.6-6.1-1.6c-0.6-1.3-1.9-1.8-3.1-2.4       c-0.4-0.3-0.6-0.7-0.7-1.2c4.2-3.1,9.5-3.3,14.1-5.4c5-2.4,10.2-4.4,15.2-6.9C176.9,358.6,184.8,355,191.8,349.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M257,252c12.6-8.3,27.1-12.7,40.4-19.8c9.7-5.1,19.5-10.4,30-14.1c8.2-2.9,15.8-7.7,23.9-10.9       c11.2-4.4,21.2-11.2,32.9-14.9c8.7-2.7,17.1-7,25.5-10.7c10.9-4.8,21.9-9.3,32.9-13.6c13-5,26.1-9.4,39.1-14.3       c8.5-3.2,17.2-5.7,25.8-8.5c1.1-0.3,2.3-0.2,3.5-0.4c0,0.3,0.1,0.5,0.1,0.8c-0.8,1.5-2.3,1.9-3.7,2.3       c-23.3,7.5-46.3,15.8-68.9,25c-13.9,5-27.5,11-41,17c-9.5,3.5-18.6,8.1-27.8,12.3c-12.3,5.1-24.2,11-36.3,16.6       c-11.2,5.5-22.9,10-34,15.9c-10.9,5.5-22.2,10.4-33,16.1c-2.1,0.8-4.1,2.1-6.4,2.2C258.8,253.1,257.7,252.9,257,252z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4A19F"),
                d:
                  "M1716.9,282.1c10,1.3,20,2.7,30,3.8c24.9,2.9,49.8,6,74.6,9.7c4.2,0.6,8.6,0.7,12.7,2.2       c-0.6,0.8-1.4,1.1-2.3,1.3c-10.2-0.4-20.2-2.3-30.4-3.4c-6.9-0.7-13.5-3-20.6-2.4c-14.4-1.6-28.8-3.8-43.2-5.5       c-11-1.4-22.1-1.8-33-3.5c-7.6-1.2-15.2-0.4-22.8-1.3c-6.2-1.1-12.5-1.8-18.7-2.3c-15-1.2-30-3.3-45-4.5       c-8.6-0.7-17.3,0-25.8-1.7c-1.7-0.4-4.2,0.4-4.3-2.7c5.3-0.6,10.6-0.6,15.9,0.4l-0.1,0c5,1.4,10.1-0.5,15.1,1       c0.6,0,1.2,0,1.7,0c4.4,1.3,8.9-0.5,13.3,1c0.3,0.1,0.5,0.1,0.8,0c3.3,1.3,6.9-0.4,10.2,1c0.3,0.1,0.5,0.2,0.8,0       c3,1.2,6.2-0.4,9.2,1c0.6,0,1.2,0,1.8,0.1c6.7,0.7,13.5,0.9,20.2,2l-0.1,0c8.8,0.7,17.5,1.6,26.3,2.5c1.3,0.1,2.6-0.4,3.8,0.6       l-0.1,0C1710.2,282.4,1713.8,280.6,1716.9,282.1L1716.9,282.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F6F3F4"),
                d:
                  "M1875,644c0.3-0.6,0.7-1.2,1-1.8c2.1-2.2,4.7-1.4,7.2-1.2c2.1,0.5,4,1.3,6,2.1       c4.6,1.1,8.8,3.8,13.7,3.7c0.8,0.1,1.5,0.2,2.3,0.5c3,1.8,6.4,1.2,9.6,1.8c3.9,1.1,7.7,1.9,11.6,0c1.1-0.3,2.1-0.4,3.2-0.4       c5.5,0.2,10.8-1.4,16.1-2.3c9.8-1.7,19.8-0.7,29.4-3.4c17-3.3,34.3-3.9,51.4-6.3c7.1,0.8,13.7-1.4,20.4-3.5       c1.7-0.4,3.3-0.5,4.9,0.4c1.1,1.6-0.3,1.9-1.3,2.4c-2.3,1.2-5,1.1-7.5,2.1c-6.7,2.1-13.8,1.3-20.5,3.1       c-10.2,2.8-20.7,2.4-31,3.9c-13.3,1.9-26.6,2.5-39.9,4.4c-9,1.3-17.9,3.1-26.8,4.4c-3.2,0.5-6.6,0.3-9.9-0.6       c-9-2.6-18.5-3.9-27.2-7.8c-2.8-1.3-5.7-1.7-8.8-1.4C1877.7,644,1876.3,644,1875,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24F56"),
                d:
                  "M1339,659.8c-18.3,1-36.5-0.8-54.8-0.7c-18.1,0.1-36.2,0.6-54.3,0.9c-15.7,0-31.3,0.1-47,0.1       c-27.8,0-55.7,0-83.5,0c-5.2,0-10.3-0.1-15.5-0.2c0.9-3.3,3.7-2.2,5.8-2.3c12.3-0.1,24.5-0.1,36.8-0.1c2.1,0,4.3,0.2,6.4-0.4       c4.4-0.4,8.8-0.9,13.2-0.3c1.9,0.6,3.9,0.9,5.9,0.3c0.8-0.1,1.6-0.1,2.3,0c2.8,0.8,5.4,0.1,8.1-0.6       c38.5-0.5,77.1-0.4,115.6-0.2c12.8,0.1,25.6,0.1,38.4,0c7.8,0.1,15.6-0.8,23.4,0.5C1342.7,659,1340.3,659.2,1339,659.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1EAEA"),
                d:
                  "M1240,192c2.1,1.8,4.1,3.6,7,4c2.1,0.8,4.3,1.5,6,3c6.8,4.9,14.2,8.7,22,12c1.5,1.2,3.5,1.8,5,3       c8.6,6,17.9,10.8,27,16c2.7,0.8,4.9,2.3,7,4c9.2,5.6,18.4,11.2,28,16c1.3,0.8,2.9,0.9,4,2l0,0c1.5,1.3,3.5,1.8,5,3       c2.3,2.3,5.2,3.6,8,5c4.3,1.4,8,4,12,6l0,0c12.8,5.9,26.2,9.5,40.3,10.9c1.3,0.1,2.6,0.2,3.8,1.1c3.7,0,7.3,0,11,0       c2.4,1.4,5.1,0.7,7.7,1.1c2.1,0.3,5-0.3,5,3.4c-3.7,1.6-7.5,0.8-11.2,0.6c-6.6-0.9-13.1-2.4-19.8-1.2       c-6.1-0.5-11.4-3.8-17.3-4.9c-8-2.2-15.8-4.9-23.1-8.7c-0.4-0.2-0.9-0.4-1.3-0.7c-2.4-2.2-5.2-3.7-8.3-4.5       c-0.9-0.3-1.8-0.7-2.5-1.4c-8.7-6.3-18.3-11.2-27.6-16.5c-5.7-3.3-11.2-7.1-17.5-9.2c-1.4-0.5-2.6-1.3-3.8-2.2       c-8-6.3-17.3-10.4-25.9-15.6c-12.2-7.4-24.8-14-37.3-20.8c-1.7-0.9-3.6-1.8-4.5-3.8c-0.1-0.5-0.1-1,0.2-1.5       C1239.1,191.6,1239.5,191.6,1240,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("944D57"),
                d:
                  "M1638.9,423.8c-11.3-0.7-22.4,1.2-33.5,3.3c-2.1,0.4-4.2,1.1-6.4,0.8c-0.7-0.6-2.6-0.1-1.9-2.1       c1.2-1.3,2.9-1.5,4.5-1.9c14.3-3,28.8-4.6,43.5-4.5c5.1,0.2,10.1-0.3,15.2,0.3c2.2,0.7,4.4,0.8,6.6,0.8       c6.6,1.3,13.3,1.5,19.8,3c0.5,0.1,1,0.3,1.5,0.4c1.6,0.7,3.4,0.7,5.1,1.1c4.1,1.1,8.2,2,12.2,3.4c4.5,1.4,9.2,2.4,13.5,4.4       c13,5.4,25.7,11.2,37.3,19.4c2.6,1.8,5.1,3.6,7.3,5.9c1.1,1.5,3.4,2.6,2.2,5.1c-9.7-6.8-19.4-13.3-29.8-18.9       c-16.9-9.1-35.1-14.1-53.6-18.3c-1.1-0.3-2.3,0-3.5,0c-0.6-0.1-1.1-0.1-1.7-0.2c-2.4-0.8-4.9-0.3-7.4-0.4       c-7.9-0.4-15.9,1-23.7-1.8C1644.1,422.9,1641.3,423.1,1638.9,423.8L1638.9,423.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("58171F"),
                d:
                  "M777.2,102.1c2.6-0.1,5.2-0.2,7.8-0.2c3.4-0.9,7,0.3,10.4-0.7c1.2-0.1,2.4-0.1,3.6-0.2       c5.8-1.2,11.7,0.4,17.5-0.8c5.2-0.1,10.3-0.2,15.5-0.2c9.4-0.8,18.8-0.3,28.3-0.3c11.9,0,23.8-0.5,35.7,0.3       c4.5,0.1,9,0.2,13.5,0.3c1.7,1.2,4.2-0.7,5.6,1.5c-2.2,2.8-5.4,1.5-8.1,1.8c-1.8,0.2-3.6,0.1-5.3,0.1       c-23.9,0-47.9-0.5-71.8,0.2c-12.4,0.3-24.9,0.6-37.2,1.8c-4.5,0.2-9.1-0.6-13.6,0.6c-3,0.5-6,0.3-9.1,0.4       c-10.2,0.9-20.3,2.2-30.5,2.1c-2-0.4-4.3,0.3-5.6-1.9c1-2.1,3.2-0.3,4.5-1.4c1.2-0.1,2.4-0.2,3.6-0.2c2.4-0.9,4.9,0.3,7.3-0.8       c1.9-0.1,3.8-0.2,5.7-0.2c2.7-0.9,5.6,0.3,8.3-0.8c0.9-0.1,1.8-0.1,2.7-0.2C769.7,101.8,773.6,103.2,777.2,102.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B44C56"),
                d:
                  "M317,300c-4,2.5-8,1.1-12.1,0.2c-5.5-1.1-10.8,0.9-16.2,1.9c-9.7,1.9-19.4,0.9-29.1,1       c-7.3,0-14.5,0.2-21.9,2.5c1.3,0.3,2.4,0.6,3.4,0.8c-0.1,0.1-0.1,0.4-0.2,0.4c-0.3,0.2-0.6,0.2-0.9,0.3       c-4.3-0.3-8.7,0.3-12.9-1.1c-1.1-1.2-2.6-0.9-4-1.1c-1.2-0.2-2.6-0.4-1.8-2.3c1.2-0.9,2.6-1,4-1c10.6-2,21.2,0.3,30.6-0.1       c-3.7-0.3-8.7,0.2-13.6-0.5c-2.1-0.3-4.1-0.3-3.9-3.2c0.3-0.9,0.9-1.3,1.8-1.5c1.8-0.1,3.7-0.3,5.6-0.2       c9.8,0.7,19.6,0.3,29.3,0.4c11.6,0.1,23.2,0.8,34.8,1C312.2,297.6,315.7,296.2,317,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1439,281.8c-2.4-1.6-5-2-7.8-1.9c-2,0.1-3.8-0.3-5.2-2c7.4-1.4,14.3,3.4,21.5,1.9       c8.5-1.8,17.1,0.8,25.6-0.8c2.1-0.4,4.1-1,6.1-1.9c3.7-1.5,7.4-2.6,11.5-1.9c5,0.9,9.9,0.4,15-1.2c6.3-1.9,13-2.2,19.6-2.2       c3.1,0,6,0.1,9-1.7c3.2-1.9,7-1.8,10.6-0.3c0.2,1.1-0.5,1.7-1.3,1.6c-4-0.4-7.2,2-10.7,3.1c-0.7,0.2-1.5,0.4-2.2,0.5       c-2.1,0.2-4.1,1-6.3,0.5c-5.3-0.2-10.6,1-15.6,2c-7.3,1.4-14.5,1.3-21.8,1.6c-3.2,0.1-6.7-0.7-8.9,3c-0.7,1.2-2.8,0.9-4.3,0.9       c-5,0.1-10,0-15,0c-2.6,0-5.2,0-7.8,0c-3-0.1-5.9,0-8.9-0.1C1441,283.2,1439.8,283,1439,281.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("622830"),
                d:
                  "M146,305.8c-3,0-6,0-8.9,0c-1.4-2,0.3-3.4,1.3-4.7c2.1-2.5,3.8-5.2,5.7-7.8c1.3-2,3-3.6,4.7-5.3       c0.8-0.7,1.6-1.3,2.6-1.3c9.4,0,18-3.7,27-5.8c4.7-1.1,9.1-3.9,14.2-2.5c-0.3,2.7-0.2,2.8-3.4,3.8c-8.9,3-17.8,6.2-26.6,9.4       c-3.2,1.1-6.2,2.4-7.8,5.6c-1.7,2.7-4.5,4.1-6.7,6.3C147.2,304.2,146.5,304.9,146,305.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1EDEE"),
                d:
                  "M257,252c1,0,2.1,0,3.1,0c-1,3.6-4.7,3.7-7.2,5.3c-1.7,1.1-3.6,1.7-5.4,2.4c-1.5,0.6-3,1.4-4.5,2.1       c-7.3,2.9-14.8,5.4-22,8.5c-0.4,0.2-0.9,0.4-1.4,0.5c-1.5,0.3-2.9,0.7-4.4,1.2c-8.8,1.4-17.4,4.2-26.3,5.3       c-8.6-1-16.1,3-24.1,4.9c-4.5,1.1-9.1,2.1-13.5-0.4c-0.4-0.4-0.6-0.9-0.6-1.5c0.2-0.5,0.5-0.9,1.1-1.2c2.5-0.7,5.1-1.3,7.6-2.2       c6.4-2,13.2-1.7,19.7-3.1c0.7,0,1.3,0,2,0c6.8-0.5,13.5-2,20-4l0,0c6.7-1.1,13.4-2.3,20-4c0.3,0,0.7,0,1,0       c3.8-0.9,7.3-2.9,11-4l0,0c3-0.9,6.1-1.6,9-3c3.7-1.7,7.3-3.3,11-5C254.1,252.9,255.7,252.8,257,252L257,252z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C2125"),
                d:
                  "M546,135c1.3-0.4,3,0.8,4-0.9c11.9-4,24.3-5.5,36.4-8.6c3.2-0.8,6.6-0.7,9.8-1.3l-0.1,0.1       c3.6-1.2,7.4-1.4,11.1-2.1l-0.1,0c6-1.7,12.2-2.5,18.3-3.7c0.5-0.1,1-0.1,1.6,0c1.2,0.5,2.5,0.9,2.1,2.7       c-1,0.9-2.2,1.3-3.4,1.7c-1,0.3-2.1,0.5-3.1,0.5c-16.5,3.2-33,5.7-49.3,9.5c-8.2,1.6-16.3,4.3-24.7,5.1       c-1.2-0.1-2.2-0.3-2.8-1.5C545.5,136,545.6,135.5,546,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69393C"),
                d:
                  "M145,294c-2.3,4.2-6.4,7.1-8,11.8c-0.6,0-1.3,0.1-1.9,0.1c-4.9-11.3,2.2-21.9,15.2-22.5       c7.3-0.3,14.5-1.5,21.5-3.4c2.4-0.4,4.7-0.3,6.2,2c-8.9,2.5-17.4,6.5-27,5.8c-0.7,0-1.4,0.8-2.1,1.3c-2,1.5-4.6-0.2-6.6,1.3       c-1.4,1.1-2.8,2.3-2.8,4.3C141.5,294.9,142.9,292.2,145,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M179,274c-4,2.5-8.5,1.6-12.9,2.2c-2.4,0.3-4.8,1.2-7.1,1.8c-2.3,0.8-4.8,0.8-7,2c-0.3,0-0.7,0-1,0       c-1.6,1.7-3.9,1.9-5.7,3c-6.8,2.4-10.5,6.8-10.2,14.4c0.1,3.3-1.8,6.3-2.1,9.6c-0.7,1.2-1.5,2.4-3.1,1.6       c-1.3-0.6-1.1-2.2-0.8-3.1c2.6-6.1,2.2-13.2,5.1-19c2.9-5.7,8.8-10.1,15.2-10.1C159.4,276.4,169.1,273.3,179,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M93,575c-4.4-9.1-3.8-19.3-6.1-28.9c-2-8.2-1-16,2.3-23.6c1.1-2.4,1.1-4.8-0.2-7.2       c-0.9-1.7-1.2-3.4-1.1-5.3c0.3-0.1,0.5-0.1,0.8-0.2c0.9,0.2,1.5,0.7,2,1.4c2.8,4.6,3,9.2,0.6,14.1c-2.6,5.4-2.8,11.1-1.2,16.9       c1.3,4.9,2.7,9.9,3.8,14.9c0.3,1.1,0.4,2.3,0.4,3.5C93.8,565.4,95.9,570.4,93,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DBD1D1"),
                d:
                  "M133,307c-1.6-1.4-0.9-2.9-0.3-4.5c0.8-2.3,2.1-4.8,1.9-7c-0.6-7.9,4.1-11.1,10.4-13.5       c2-0.5,3.9-1.2,6-1c6.9,2.5,13.4,0.1,19.9-1.9c5.9-1.9,11.9-4,18.3-3c-3.1,4.4-8.3,3-12.5,4.3c-1.5,0.5-3.3-0.3-4.9,0.5       c-7.2,1.6-14.4,3.8-21.7,3.9c-9.8,0.2-13.7,3.5-14,13.3c-0.1,2.6-1.7,5.1-1,7.8C134.4,306.3,133.7,306.7,133,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5E1E1"),
                d:
                  "M93,456c0-0.7,0-1.3,0.1-2c5.1-9.4,7.4-20.2,15.6-27.9c3.1-3,4.7-7.6,7.5-11.1l0,0       c1.5-1.9,3-3.9,4.4-5.9c1.3-0.7,1.8-3,3.9-2c1.2,2.2-0.2,3.8-1.3,5.4c-1.8,2.6-3.7,5-5.3,7.6c-3,5.3-7.6,9.4-11.1,14.4       c-2.7,6.4-4.9,13-8.7,18.8c-1.5,2.1-2.5,4.5-3.3,6.9c-2.3,3.4-2.5,8-6.6,10.3c-0.5,0-1-0.2-1.4-0.5       C86.3,464.2,90.8,460.7,93,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("612631"),
                d:
                  "M206,344c-0.5-0.4-0.9-0.8-1.4-1.2c7.5-4.6,15-9.1,22.5-13.7c2.8-1.7,5.8-3.3,7.9-6       c2.2-1.5,3.7-3.7,6.2-4.8c1.4-0.7,2.2-1.9,3.1-3.1c0.3-0.3,0.7-0.5,1.1-0.6c1.2,0.1,2.2,0.5,2.9,1.5c0.5,2.9-2.3,3.5-3.6,5.2       c-0.4,1.3-2.8,0.2-2.5,2.2c-0.2,0.7-0.7,1-1.3,1.3c-1.7,0.4-3.2,1.4-4.4,2.7c-1.1,1.1-2.2,2.2-3.5,3c-1.2,0.5-2.5,0.7-3.5,1.7       c-6.1,4.8-13,8.3-19.9,11.8C208.4,344.7,207.2,345.2,206,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("783339"),
                d:
                  "M968,104l0.3,0.2l0.3-0.2c10.6,1,21.2,2,31.7,3.4c5.7,2.5,12.2,0.6,17.8,3.4c1.3,0.8,3.4,0.6,3.7,2.6       c0.2,1.1-1.1,1.3-2,1.6c-7.6,0.1-14.9-2.1-22.3-3.2c-1.8-0.2-3.5-0.6-5.3-0.6c-1.2,0-2.3-0.1-3.4-0.4c-6.9-1.3-13.9-2-20.9-2.5       c-1.8-0.1-3.7,0-5-1.6c-0.2-1.2,0.6-1.2,1.4-1.2c-0.5-0.7-1.2,0.1-1.7-0.1c-1.1-0.3-2.3-0.4-1.1-2       C963.6,103.7,965.9,103,968,104z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D2326"),
                d:
                  "M629,120.9c-0.7-0.6-1.4-1.2-2.1-1.8c3.4-3.1,8-1.9,11.9-3.1c4-0.6,8-1.3,12-1.9c1.1-0.2,2.2,0,3.1,0.7       c2.1,0.6,4-0.6,6-1c1.8-0.8,3.8,0,5.5-0.8l0.2,0.1l0.2-0.2c2.3-1.4,4.9,0.2,7.2-1c0.6-0.1,1.2-0.1,1.8-0.2       c2-0.9,4.3,0.2,6.3-0.8c0.3,0.2,0.5,0.2,0.7-0.1c1.3-0.8,2.6-0.4,4-0.3c1.6,0.9,4.1-0.6,5.2,1.9c-0.7,1.4-2,1.6-3.3,1.8       c-18.3,2-36.4,5.2-54.6,7.3C631.7,121.8,630.2,122.2,629,120.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M589.2,645.9c-1,0-2,0.2-3,0.1c-6.3-0.3-12.4,0-18.1,3.3c-3.1,1.8-4.5,0.7-5.4-3.4       c-1.8-8.2-1.8-16.6-3.5-24.9c-0.5-2.4-0.1-4.9-0.1-7.4c0.6,0,1.1,0.2,1.4,0.7c2.2,7.2,2.1,14.7,3.4,22c1.1,6,1.3,6.2,7.8,6.3       c4.8,0.2,9.6-0.4,14.4,0.4C587.7,643.5,589,644.1,589.2,645.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M116,415c-2.8,5.4-5.2,11-9.8,15.3c-2.5,2.3-3.8,5.5-5,8.5c-2.1,5.5-4.9,10.5-8.2,15.2       c-0.4-4.7,0.6-8.9,4.5-12c1.8-1.5,1.5-3.6,1.5-5.5c0-5.2,1.2-9.5,7.4-10.6c3.6-0.6,3.5-5,5.9-7       C113.7,417.8,114.2,415.8,116,415z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("985056"),
                d:
                  "M525.2,520.8c-0.8-1.6-1.6-3.2-2.3-4.8c1.7-1.3,2.7,0,3.7,1.1c2.5,2.9,4.5,6.1,6.6,9.3       c2.9,5.1,5.8,10.1,8.5,15.3c0.6,2.2,1,4.4,2.9,6c0.6,0.8,1,1.6,1.3,2.5c1,6.6,5.1,12.4,5.6,19.1c-0.1,0.5-0.5,0.9-1,1       c-0.5,0.1-1-0.1-1.4-0.5c-1.1-0.8-0.6-2-0.9-3c-3.8-10.8-10.1-20.5-13.9-31.2l0.1,0.1C531,531,527.7,526.1,525.2,520.8       L525.2,520.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("38181B"),
                d:
                  "M170,363c-9.7,4.8-19.6,9.1-30,12c-4.4,2.9-8.9,3-13.5,0.7c-0.5-0.4-0.6-0.9-0.4-1.4       c3.4-0.6,6.8-1.3,10.2-1.7c11.2-1.4,21-7.2,31.5-10.6C169,361.4,170,361.2,170,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0C7C7"),
                d:
                  "M93,575c0-5,0.1-10.1,0.1-15.1c3.4,1.7,2.7,5.4,3.4,8.1c1.6,6.7,5.1,12,9.7,16.9       c1.1,1.2,2.2,2.4,3.4,3.5c2.3,3.3,6.9,4.8,7.4,9.5c-4.3-1.5-7.1-5.1-10.5-7.9c-4.3-3.6-8.4-7.4-12.6-11       C92.6,577.9,93.3,576.3,93,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68282C"),
                d:
                  "M961,104.1c1,1.5,2.9,0.4,4.1,1.3c-0.5,0.9-1.5,0.5-2.2,0.7c-1.4,1.4-3.1,1.1-4.9,0.9       c-2.2-0.7-4.4-0.6-6.7-0.5c-8.6-0.4-17.2-1.1-25.8-1.4c-2.3-0.8-4.7-0.6-7-0.7c-3.9,0-7.9,0.1-11.8-0.1       c-1.8-0.1-4.1,0.4-4.8-2.2c4.3-0.8,8.9,1,13.1-1c4-0.8,8-1,11.9,0.1l-0.1-0.1c4.3,1.1,8.8-0.3,13.1,0.8       c1.5,0.1,3.1,0.2,4.6,0.2C950,103,955.7,101.9,961,104.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A2025"),
                d:
                  "M691.3,112.1c-1.7-0.4-3.7,0.5-5.3-1c0.8-1.1,2.3-0.2,3.2-1c0.9-0.1,1.9-0.1,2.8-0.2       c2-0.9,4.3,0.2,6.3-0.8c0.3,0.2,0.5,0.2,0.7-0.1c2.6-1.3,5.5,0.3,8.1-0.9c1-0.1,1.9-0.1,2.9-0.2c2.3-1,4.9,0.3,7.2-0.8       c0.6,0,1.2-0.1,1.8-0.1c2.4-1,5.1,0.2,7.5-0.8c1.5-0.1,3-0.2,4.5-0.3c1-0.4,2.1-0.7,3,0.3c1.5,1.5,3.5,0.6,5.2,1       c-0.9,2.7-3.3,2.1-5.3,2.3c-5.5,0.7-11,0.9-16.5,1.8c-5.8,0.1-11.4,1.1-17.1,1.8C697.3,113.4,694.1,114.2,691.3,112.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1638.9,423.9c0.4-0.2,0.9-0.7,1.3-0.7c12.4,0.5,24.9-0.4,37.1,2.7c-8.2,0.6-16.3,2.3-24.5,2.1       c-2.2-0.1-4.1,0.1-5.6-2.7C1645.6,422.4,1641.7,424.6,1638.9,423.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M93,456c-0.4,5.3-5,8.9-5.9,14c1.2,3.8-1,7.2-1.3,10.8c-0.6,5-0.8,10,0.2,15c0.4,2.2,0.7,4.4-0.3,6.6       c-0.2,0.2-0.4,0.4-0.6,0.6c-0.5-0.7-1.3-1.3-1.3-2c-0.5-12.1-2.6-24.2,1.9-36C87,461.2,89.6,458.3,93,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1604,272.1c-5.3,0-10.7-0.1-16-0.1c-1.7,1.6-3.7,1.1-5.6,0.9c-5.9-0.6-11.9-0.8-17.8,0.2       c-3.6-0.1-7.1,1.3-10.7,0.3c-1.2-1.2-3.8-0.9-3.9-3.3c8.6-0.4,17.2,0.3,25.8-0.8C1585.2,268,1594.6,270.7,1604,272.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M121,410c-1.7,1.6-2.7,4-5,5c4.9-10.4,4.9-21.7,6-32.7c0.2-1.8-0.1-3.6-0.9-5.3c-1.2-2.3,0.7-1.9,1.9-2       c2.6,3.7,2.1,8.2,2,12C124.8,394.7,126,403,121,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4515C"),
                d:
                  "M221,303c1.3,2.4,5.4-0.8,6,3c-2.7-0.1-5.4-0.1-8.1-0.2c-2-0.6-3.9-0.6-5.9,0c-7.7-0.3-15.4-0.7-23.1-1       c-2-0.9-4.2,0.3-6.2-0.9c-0.1-0.6,0.1-1.1,0.6-1.5c0.5-0.3,1-0.5,1.6-0.7c6.4-0.6,12.8-0.2,19.2-0.2       C210.4,302.1,215.9,300,221,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1415,278c-15.5-0.8-30.3-4.3-44-12c1.4-0.1,2.6,0.4,3.8,0.9c10.9,4.2,21.9,8,33.8,8.2       C1410.9,275.1,1413.6,275.5,1415,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2D9D9"),
                d:
                  "M1018,112.1c-5.5-2.5-11.8-1.1-17.2-3.9c0.6-0.8,1.3-0.7,2.1-0.4c2,0.1,4,0.2,6.1,0.3       c3.6,0.9,7.4,1.2,11,1.9c0.7,0,1.3,0,2,0.1c2.6,0.9,5.4,1.2,8,1.9c0.3,0,0.7,0.1,1,0c4.6,2.8,10.3,1.8,15.1,4       c1.6,0.7,3.6,0.6,4.9,2.1c-2.1,1.7-4.3,1.1-6.6,0.5c-5.5-1.4-10.9-2.9-16.5-3.4C1024.3,114.9,1021.6,112.1,1018,112.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EEEBEB"),
                d:
                  "M116,347c0-2,0-4,0-6c0.7-1.1,1.5-2.2,3-1c0.6,2.7,1.3,5.5,1.9,8.2c-0.6,5.9-0.8,11.8,0.1,17.7       c0,0.7,0,1.3,0,2c-2.3,0.4-2.5-1.3-3.1-2.9c-0.7-2,0.2-4.2-0.9-6.1c0-0.3,0-0.7,0-1C115.7,354.4,117.4,350.6,116,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M596.2,124.1c-15.4,3.3-30.8,6.6-46.1,10c8.6-4.2,17.9-5.9,27.3-7.1       C583.6,126.1,589.5,122.8,596.2,124.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("816463"),
                d:
                  "M126.1,374.3c0.1,0.2,0.2,0.4,0.2,0.6c0.4,0.7,1.2,1,1.5,1.8c1,2.7,0.1,5.7,1.1,8.4       c0.3,1.1,0.4,2.1,0.4,3.2c-0.1,3,0.3,6.1-0.3,9.1c-0.3,1.1-0.7,2.1-1.1,3.2c-0.6,1.1-0.6,2.5-1.3,3.5c-0.8,1.2-1.6,1.5-2.4,0       c-0.7-8.8,0.8-17.7-0.2-26.5c-0.1-1.3,0-2.7,1.4-3.4C125.7,374.1,125.9,374.1,126.1,374.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M549,570c0.3-0.2,0.6-0.2,0.9,0c2.9,3.1,3,7.2,4.2,10.9c2.5,8.2,3.8,16.7,5.7,25c0.5,2.1,0.9,4.2-0.9,6       c-2-7.4-4.6-14.8-5.7-22.3C552.3,583,547.8,577.1,549,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F575C"),
                d:
                  "M558.9,612c-0.9-11.4-4.2-22.3-6.9-33.4c-0.7-2.9-1.4-5.7-2.1-8.6c0.4,0,0.7,0,1.1,0       c4.2,2.3,3.5,7,5.1,10.5c0.9,7.9,3.3,15.4,4.8,23.2c0.7,3.5,1.6,7.1-0.9,10.4c-0.2-0.2-0.5-0.4-0.8-0.5       C559.1,613.1,559,612.6,558.9,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M896,99.8c-21.3,0-42.6,0-64,0c1.1-1.1,2.5-0.8,3.8-0.8c18.8,0,37.6,0,56.4,0       C893.5,99,894.9,98.7,896,99.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8515C"),
                d:
                  "M589.2,645.9c-0.8-0.6-1.7-1.1-2.5-1.7c1.2-1.5,2.9-1.6,4.5-1.5c8.9,0.1,17.7-0.3,26.6,0.2       c1.3,0.6,3.7,0.8,1.2,3c-6,0.1-12,0.1-18,0.2C597.1,645.9,593.2,645.9,589.2,645.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3F2F2"),
                d:
                  "M125.4,374.2c-0.1,10.3-0.2,20.5-0.4,30.8c0.3,0.3,0.4,0.6,0.3,1c-0.3,0.5-0.7,0.9-1.3,1       c-1,1-2,2-3.1,3c3.8-11.5,2.4-23.3,2-35C123.8,374.7,124.6,374.4,125.4,374.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("451920"),
                d:
                  "M170,363c-0.5-0.9-1.3-1-2.2-1.1c8-4,16-8,24-12c1.1,0.8,1,1.4-0.3,2.1       C184.4,355.6,177.2,359.3,170,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M534.2,535.8c5.7,9.9,10.7,20.2,13.9,31.2c-4.5-5.2-4.7-12.6-9-17.9       C535.9,545.2,534.9,540.6,534.2,535.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1EEEF"),
                d:
                  "M651.1,115.3c-4,1-8,1.7-12,1.8c-0.1-0.2-0.2-0.4-0.3-0.6c0.1-3.4,2.6-4.5,5.3-5.5c1.7,0,3.3,0,5,0       C651.2,111.7,652.1,113,651.1,115.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1002.9,107.7c-0.7,0.1-1.4,0.3-2.1,0.4c-10.7-1.5-21.5-1.6-32.1-4.1       C980.3,103.5,991.6,105.5,1002.9,107.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DCD8D8"),
                d:
                  "M1549.9,270c0.9,1.5,3.2,0.3,3.9,2.1c-3.6,2.3-7.6,2.5-11.6,2.2c-2.7-0.5-5.4,1-8.1,0.4       c-0.5-0.2-0.9-0.5-1.1-1c3.6-2.6,7.8-3.1,12-3.7C1546.7,270,1548.3,270,1549.9,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3D9D9"),
                d:
                  "M1239,192c0,0.4,0,0.8-0.1,1.2c-0.7,0.5-1.6,0.6-2.4,0.2c-6.7-3-13.3-6-19.4-10.2       c-0.8-0.6-1.6-1.2-1.2-2.4c0.8-0.3,1.5-0.4,2.2,0.1c4.7,1.3,8.1,5.2,12.9,6.2c1.6,1,2.8,2.7,5,2.9       C1236.9,190.8,1238.6,190.5,1239,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0EDED"),
                d:
                  "M639.1,117.1c-4,0.7-8.1,1.4-12.1,2.1l0.1-0.4c-0.8-1.1-1.6-2.3-1.1-3.8c1.3-2.8,3.8-1.9,6-2       c1.7,2.2,4.4,2.8,6.9,3.7L639.1,117.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M626,115c0.4,1.3,2.3,2.1,1.1,3.8c-6.6,1.6-13.3,2.7-20,3.3c3.8-1.8,7.7-3.5,11.9-3.5       C622.2,118.6,624.3,117.5,626,115z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0D5D6"),
                d:
                  "M241.7,318.9c-2.6,0.8-3.7,4-6.7,4.3c0.2-1.6,1.5-2.6,2.7-3.4c3.7-2.7,5.2-6.6,6.2-10.8       c0.7,0,1.4,0.2,2,0.5c2.9,2.3,1.5,4-0.9,5.5l-0.1,0.1C243.7,316.2,243.7,318.4,241.7,318.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M638.8,116.7c-3.2,0.4-6.5,1.1-6.9-3.7c4.5,2.1,7.9-2.2,12-2C641.9,112.5,640.1,114.4,638.8,116.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M221,266c-6.4,2.9-13,4.5-20,4C207.4,267.2,214.2,266.6,221,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1707,281.1c-10.1-0.3-20.1-1.3-30.1-3C1687,278.2,1697.1,278.6,1707,281.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1341.9,664.5c-6.6,1.4-13.3,0-20,1.5c0-0.5,0-1-0.1-1.5C1328.6,664.5,1335.3,664.5,1341.9,664.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M580.7,649.6c5.5-2,10.9-1.7,17,0C591.5,649.6,586.1,649.6,580.7,649.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M201,270c-6.2,3.5-13,4.6-20,4C187.6,272.3,194.2,270.6,201,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F3C42"),
                d:
                  "M146,305.8c-0.9-1.4-0.4-2.3,1-2.8c4.9-1.3,9.9,0,14.8-0.2c1,0,2,0.2,2.9,0.7c0.5,0.4,0.6,0.8,0.3,1.3       C158.7,305.3,152.3,304.5,146,305.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M525.1,520.8c3.7,4.6,6.7,9.7,9.1,15C530.3,531.4,526.1,527.1,525.1,520.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M961,104.1c-5.4-0.9-11.1-0.5-16.4-2c7.9-0.3,15.7,0,23.4,1.9C965.7,104.1,963.3,104.1,961,104.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M511,145c6.4-3,13-5,20-6c0,0.3,0.1,0.5,0.1,0.8c-3.9,3.8-9.4,3.2-13.9,5.4c-2,0.5-4,1.6-6,0.1L511,145       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80444C"),
                d:
                  "M165,304.8c0-0.3,0-0.6,0-0.8c6.3-2.3,12.7-2.2,19,0c2,0.3,4.1-0.7,5.9,0.9       C181.6,304.8,173.3,304.8,165,304.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1677,278.1c-6.8,0.1-13.6-0.5-20.2-2C1663.6,275.9,1670.4,275.9,1677,278.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M117,359c2.1,2.6,0.3,7,4,9c-0.5,1-1.1,2.3-2.3,2.2c-1.2-0.1-0.9-1.6-1.2-2.4       C116.5,364.9,117.2,361.9,117,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M120.1,321.5c0.4,3-0.6,5.3-3.6,7C115.2,324.7,118.7,323.6,120.1,321.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M546,135c-0.1,0.2-0.1,0.5-0.1,0.7c-4.4,3.3-9.3,4.5-14.7,3.5c0,0-0.2-0.3-0.2-0.3       C535.6,136.2,540.9,135.8,546,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1371,266c-4.6-0.9-8.1-3.7-12-6C1364,260,1367.5,263,1371,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CAC0C0"),
                d:
                  "M121,365.9c-1.7-5.9-1.5-11.8-0.1-17.7C120.9,354.1,120.9,360,121,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M816.5,100.1c-5.8,1.3-11.7,0.9-17.5,0.8C804.8,98.9,810.7,100.5,816.5,100.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M927,101.2c-4,0-8-0.1-11.9-0.1c-1.8-0.3-3.6-0.6-5.5-1C915.3,100.6,921.3,98.6,927,101.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M233,262c-3.3,2.2-6.9,3.9-11,4C225.6,264.4,228.8,261.7,233,262z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1619,273c-5-0.3-10.1,0.6-15.1-1C1608.9,272.5,1614.1,270.8,1619,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M651.1,115.3c-0.6-1.5-0.6-3.2-2.1-4.3c2.5,0.2,5.1,0.3,5,3.9C653,115,652.1,115.1,651.1,115.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1634,274.1c-4.4-0.2-8.9,0.6-13.3-1C1625.2,273.5,1629.7,271.9,1634,274.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M940,101.9c-4.4,0-8.8,0.5-13.1-0.8C931.2,101.4,935.7,100,940,101.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M607.1,122.1c-3.6,1.3-7.3,1.9-11.1,2.1C599.5,122.1,603.3,121.8,607.1,122.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M119,340c-1,0.3-2,0.7-3,1c0-1.7,0-3.4,0-5.9C118.2,336.7,118.7,338.3,119,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1020,110c-3.8,0.1-7.5-0.4-11-1.9C1012.8,107.9,1016.5,108.3,1020,110z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M116,347c2.1,3.5,0.5,7.4,1,11C114.9,354.5,116.5,350.6,116,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M242,259c-2.6,2.3-5.7,2.9-9,3C235.7,260.2,238.8,259.3,242,259z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M777.2,102.1c-3.7,1.2-7.5,0.9-11.2,0.8C769.6,101.1,773.5,102.3,777.2,102.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1314,234c-2.7-0.8-4.9-2.3-7-4C1310.4,229.5,1312.4,231.3,1314,234z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1717,282.1c-3.4-0.2-6.8,0.5-10-1.1C1710.3,281.5,1713.8,279.9,1717,282.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1030,112c-2.8,0-5.6-0.1-8-1.9C1024.8,109.9,1027.6,110.1,1030,112z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1645,275c-3.4-0.2-6.9,0.5-10.2-1C1638.2,274.4,1641.8,272.9,1645,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M795.4,101.1c-3.4,1.2-6.9,0.9-10.4,0.7C788.4,100.1,791.9,101.3,795.4,101.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M88,510c-2.7-1.6-3-4.2-3-7c0,0,0,0,0,0C88.2,504.4,88.9,506.8,88,510L88,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1253,199c-2.3-0.5-4.3-1.4-6-3C1249.6,195.7,1251.8,196.4,1253,199z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1655,276c-3.1-0.1-6.2,0.5-9.2-1C1648.9,275.4,1652.1,274,1655,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1137.1,664.8c1.9-1,3.1-1.1,4.2,0.6C1139.9,666.2,1138.7,666.4,1137.1,664.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M707.1,108c-2.6,1.2-5.4,1-8.1,0.9C701.5,107,704.4,108.4,707.1,108z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M763.3,103.1c-2.7,1.2-5.5,0.9-8.3,0.8C757.7,102.2,760.5,103.3,763.3,103.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1280,214c-2-0.4-3.9-1-5-3C1277.1,211.3,1278.9,212,1280,214z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M726.5,106.1c-2.4,1.2-4.9,0.9-7.5,0.8C721.3,105.1,724,106.3,726.5,106.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M673.2,112.1c-2.3,1.3-4.8,0.9-7.2,1C668.2,111,670.8,112.4,673.2,112.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M689.2,110.1c-1.1,0.3-2.1,0.7-3.2,1c-1.3,0-2.7-0.1-4-0.1C684.2,109.1,686.8,110.3,689.2,110.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M717.2,107.1c-2.3,1.1-4.7,0.9-7.2,0.8C712.3,106.2,714.8,107.3,717.2,107.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d: "M1351,255c-2-0.4-3.9-1-5-3C1348.1,252.3,1350,253,1351,255z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1246.3,664.6c-3.1,0.5-4.6,0.7-6.7-0.1C1241.7,663.8,1243.3,663.9,1246.3,664.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M734,106.1c-1-0.1-2-0.2-3-0.3c2.3-1.6,4.9-0.6,7.3-0.7C736.9,105.5,735.5,105.8,734,106.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M749.3,104.1c-2.3,1.2-4.8,0.9-7.3,0.8C744.3,103.2,746.9,104.3,749.3,104.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B44C56"),
                d:
                  "M244.8,309.9c-0.3-0.3-0.7-0.7-1-1c-0.3-0.4-0.5-0.8-0.8-1.2c1.4-1,2.7-1,4,0.1       C246.8,309,245.7,309.4,244.8,309.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C3C47"),
                d:
                  "M213,305.8c2-1.3,3.9-1.3,5.9,0C217,305.8,215,305.8,213,305.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M698.3,109.1c-2,1.1-4.1,0.9-6.3,0.8C693.9,108.3,696.2,109.2,698.3,109.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M681.3,111.1c-2,1.2-4.1,0.9-6.3,0.8C676.9,110.3,679.2,111.2,681.3,111.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M665.5,113.1c-1.7,1.2-3.6,0.9-5.5,0.8C661.7,112.3,663.7,113.2,665.5,113.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M257,252c-1,1.3-2.4,1.8-4,2C253.8,252.2,255.3,251.9,257,252z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1346,252c-1.6-0.2-3-0.7-4-2C1343.7,249.9,1345.3,250.2,1346,252z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1239,192c-1-0.7-2-1.3-3-2c1.7-0.1,3.3,0.1,4.1,2C1239.7,192,1239.3,192,1239,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FEFDFD"),
                d:
                  "M1255.5,664.6c-1.7,0.4-2.7,0.8-3.6-0.2C1253,663.8,1254,663.8,1255.5,664.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3E0DC"),
                d:
                  "M2080,433c2.5,7.5,4,15.2,5,23c-2,0.5-0.9,1.8-0.6,2.8c0.7,2.5,0.6,4.6-2.2,5.7       c-3.5-0.2-4.5-3.1-6.1-5.4c-0.8-1.1-1.8-2-2.4-3.2c0.3-4.7-4.8-6.2-6-9.9c-0.7-3.9-0.6-8.1-5.6-10c-1.7-0.7-2.4-3.4-3.1-5.5       c-0.8-5,0.4-5.8,7.1-5c0.7,0.1-0.3-0.7,0-0.1c0.1,0.2-0.1,0.3-0.4,0.2c-1.3-0.4-2.6-0.3-3.9-0.5c-2.5-0.6-3-1.9-1.2-3.8       c0.4-0.5,1.2-0.5,1.6-1c-0.8-0.2-1.5,0.7-2.1,0.4c-1.4-0.9-2.6-0.7-3.8,0.3c-0.7,0.2-1.4,0.1-2-0.2c-0.8-0.4-0.2-2.6-2.1-1.5       c-1.8,0-3.1-0.6-3.5-2.5c0.5-3.2-2.6-2.3-3.9-3.4c-1.3-1-4.4-0.3-3.5-3.5c1.2-0.7,2.4-0.6,3.6-0.4c8.2,2.9,16.5,5.2,24.7,7.9       c3.5,1.6,5.7,4.6,7.9,7.5c1.1,1.8,1.6,3.8,1.7,6C2079.6,431.3,2079.3,432.3,2080,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B29695"),
                d:
                  "M1976.9,331c1.9,1.1,3.9,1.7,6.1,2c3,1.2,6,2.5,9,3.7c1,0.4,2.8,0.6,1.6,2.6c-1.3,0.8-2.6,0.5-3.9,0       c-12.2-5.1-24.9-8.5-37.5-12.2c-7.9-4.1-16.7-4.9-25-7.4c-3.1-1-6.3-1.8-9.5-2.7c-1.6-0.4-3.8-0.6-3.9-3.1       c0.8-0.4,1.6-0.4,2.3,0c12.9,2.4,25.5,6.5,38.1,9.8c5.6,1.5,11.1,3.5,16.7,5.2C1972.7,330.2,1975,330.2,1976.9,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3A19F"),
                d:
                  "M2093,523c0,0.3,0,0.6,0,0.9c-0.7,5-0.8,10.1-1.7,15.1c-1.1,5.9-3.5,11.2-6,16.6       c-2.4,5.2-3.8,10.8-5.3,16.4c-0.3,2.1-0.2,4.2,0.7,6.2c-0.6,0.8-1.3,1.3-2.3,1.1c-1.4-0.7-1.9-2.1-2.7-3.2       c-1.1-2-0.5-3.9,0.4-5.8c3.8-12.3,8-24.5,12.1-36.8c1-3,1.8-6,1.4-9.3c0.3-4.1-1-8.3,1.2-12.1c3-0.1,2,2.3,2.2,3.7       C2093.3,518.2,2091.7,520.6,2093,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBE9E5"),
                d:
                  "M2082,464c3.4-2.1,0.9-5,0.9-7.5c0-3.8,1.8,1.1,2.1-0.6c2.7,10.5,5.1,21.1,6,32       c-1.4,3.7-2.8,1.8-4.3,0.1c0.1-2.4-1.7-4.5-1-7.1c0.4-1.6-2.6-1.4-2.4-3.2c0-2.3-0.7-4.4-1.6-6.5       C2080.8,468.9,2079.5,466.3,2082,464z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("967775"),
                d:
                  "M2090,590c0.4,0.6,0.8,1.2,1.2,1.8c0.8,3.4,2,6.8,3.9,9.6c3.4,5.1,3.7,9.7,0.1,14.6       c-1,0.7-1.8,0.5-2.5-0.5c0.3-4,0.6-7.8-2.5-11.2c-2.5-2.7-5.1-4.1-8.8-3.1c-2.2,0.6-4.5,1.2-6.8-0.1c-1.3-1.1-1.7-2.5-1.2-4.1       c0.4-1,1.2-1.6,2.2-2c3.5-0.4,6.8-2.3,10.6-1.4C2089,594.5,2088.5,591,2090,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B59F9D"),
                d:
                  "M1916.2,313.9c-0.7,0.1-1.5,0.1-2.2,0.2c-2.1,1.9-4.4,0.8-6.6,0.3c-9.4-2.1-18.8-4.5-28.4-5.4       c-2.2-0.6-4.4-1.4-6.6-2.1c-1.6-0.7-3.4-0.7-5.1-1c-0.5-0.1-1-0.2-1.5-0.4c-10.2-0.6-19.8-4.1-29.9-5.1       c-1.5-0.1-3.5-0.1-3.8-2.4c0.8-0.1,1.5-0.1,2.3-0.2c16.8,2.2,33.4,5.4,50,8.7C1894.9,308.8,1905.8,310.2,1916.2,313.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B89E9C"),
                d:
                  "M2046.1,361.8c2-0.2,2.9,2.1,4.9,2.2c2.2,1.5,4.6,2.8,7.1,3.9l-0.1,0c1.5,1.4,3.4,2,5.1,3       c9.1,5.1,17.8,11,25.9,17.6c1.7,1.4,3.3,2.9,3,5.4c-2.2,0.7-3.1-1.4-4.6-2.1c-0.5-0.4-1-0.9-1.4-1.4c-1.6-2.4-4-3.9-6.8-4.8       c-5.9-3.7-11.4-8.1-17.7-11.2c-3.8-3.5-8.8-5.1-12.8-8.2C2047.4,365.2,2045.2,364.4,2046.1,361.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("816765"),
                d:
                  "M2076,596c-0.7,0.3-1.3,0.7-2,1c-1.6-1.6-0.9-3.4-0.3-5.1c0.9-2,1.6-4.1,2.3-6.3c1-2.2,1.1-4.8,3-6.6       c0.6-0.3,1.2-0.6,1.8-0.8c3,3.3,6.5,6.3,8.4,10.5c0.3,1.1,0.8,2.5-1.1,2.5c-1.8,0-3.6,0.7-5.4,0.7       C2079.5,591.8,2077.4,593.3,2076,596z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0918F"),
                d:
                  "M2010.1,343.9c11.8,4.1,22.7,10.1,33.9,15.3c0.5,0.2,0.7,1.1,1,1.6c-0.2,0.2-0.3,0.4-0.5,0.6       c-0.7,0.4-1.4,0.5-2.2,0.5c-8.3-2.9-15.9-7.4-24-10.8c-4.4-1.8-8.7-4-13.4-5.4c-1.9-1.7-6-0.7-5.7-4.9       C2003.2,340.5,2006.4,343.1,2010.1,343.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2087.1,487.9c1.3,0.1,2.5,2.5,3.9,0.1c-0.1,4.5,0.9,8.7,1.8,13.1c1.4,7.3,1.7,14.6,0.2,21.9       c-2.1-3.5,0.3-7.7-1.9-11.1c-2.6-3.2-1.9-7.2-3-10.8c-0.2-4.3-2.9-8.2-1.6-12.7C2086.7,488.3,2086.9,488.1,2087.1,487.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2080,572c0.4-6,1.7-11.9,4.6-17.2c4.9-8.8,6.9-18.3,7.4-28.1c0.1-1,0-2,0.9-2.8       c1.1,13.5-3.9,25.5-8.7,37.6C2082.8,565,2081.4,568.5,2080,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86716D"),
                d:
                  "M2076,596c-0.3-3.4,1-4.7,4.6-5.2c2.8-0.4,6.3,0.8,8.5-2.1c0.3,0.4,0.6,0.9,0.9,1.3       c0.1,3.9,0,7.1-5.7,4.7C2081.8,593.6,2079,596.7,2076,596z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F6F4F4"),
                d:
                  "M2043,638c2.6-2.2,6.3-1.9,9-3.8c0.9-1.4,2.5-1.4,4-1.7c7.2-1.6,14.5-3.3,21.5-5.6       c2.6,0.3,4.7-2.9,7.5-0.9c-0.8,1.9-2.6,2.5-4.3,3c-10.6,2.9-21.2,5.8-31.8,8.6C2047,638,2045,637.8,2043,638z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8A1A0"),
                d:
                  "M2094.9,615.8c2.3-5,2.6-9.5-1.2-14.3c-2-2.5-3-6.1-2.5-9.8c2.3,3.8,4.8,7.5,6.8,11.4       c2.4,4.6,1.5,8.9-2,12.7C2095.5,616.4,2095.2,616.3,2094.9,615.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BCA8A5"),
                d:
                  "M2010.1,343.9c-4,0.1-7.3-2.5-11.1-2.9c-0.2,0-0.4,0-0.6,0c-1.4-0.4-2.7-0.8-4-1.6       c-0.1-0.2-0.3-0.3-0.4-0.5c-3.2-2.8-7.9-2.9-11-6C1992.6,335.3,2001.3,339.6,2010.1,343.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6C7C6"),
                d:
                  "M2094.9,615.8c0.4,0,0.7,0.1,1.1,0.1c-2.9,4.2-6.6,7.4-11,10c-2.6-0.4-4.3,2.6-7,2       c-0.5-1.5,0.8-1.9,1.6-2.7c0.7-0.5,1.5-1,2.4-1.3c3.1-1.7,5.5-4.2,8.1-6.4c0.7-0.9,1-2,1.8-2.8c0.5-0.2,0.8,0,1,0.5       C2093.4,616,2094.1,616.1,2094.9,615.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("965A5A"),
                d:
                  "M2087.1,403.2c-0.7,0.6-1.5,1.1-2.2,1.7c-0.9,0.3-1.3-0.3-1.6-1c-0.3-0.9-0.2-1.8,0.4-2.7       c2-1.4,2.5-3.4,2.5-5.7c-0.1-1,0-1.9,0.7-2.7c0.4-0.3,0.9-0.4,1.4-0.4C2093,396.1,2092.8,397.9,2087.1,403.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("986A69"),
                d:
                  "M2046.1,361.8c2.1,3.8,6.1,5.1,9.5,7.2c2.4,1.4,5,2.5,6.5,5c-2.3,1.6-4-0.9-6.1-1       c-1.4-0.5-2.7-1.2-3.8-2.2c-1.5-1.7-3.6-2.8-5.4-4.2c-1.6-1.3-3.6-2.7-1.8-5.3c0,0,0-0.4,0-0.4       C2045.4,361.2,2045.8,361.5,2046.1,361.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD7D7E"),
                d:
                  "M2084,403.9c0.3,0.3,0.6,0.7,0.9,1c-2.5,3.7-6.6,6.1-8.8,10.1c-1.2-0.7-1.6-1.7-1.4-3       c1.7-3,5.3-4.8,5.8-8.6C2081.8,402.9,2082.9,403.1,2084,403.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7C4C2"),
                d:
                  "M2078.9,431.1c-0.7-2-1.3-4.1-2-6.1c-1-1.8-2.4-3.5-2.2-5.8c0.4-0.4,0.8-0.4,1.2-0.1c1.6,1.1,2,3.3,4,4       c1.3,1.3,1.3,2.9,0.9,4.6C2080.4,428.9,2079.7,430,2078.9,431.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA8582"),
                d:
                  "M2087.1,403.2c0.4-2,2.4-3,3.1-5c0.9-2.7-0.1-4.1-2.2-5.2c-0.6-0.6-0.6-1.3-0.1-1.9       c1.4,1,2.7,2,4.1,2.9C2093.4,398.7,2091.1,401.4,2087.1,403.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3E0DC"),
                d:
                  "M2080,428c0-1.7,0-3.3,0-5c4.9,2.1,4.9,2.4,0.8,6.8C2080.2,429.4,2079.4,429,2080,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("896764"),
                d:
                  "M2076,419c-0.3-0.1-0.6-0.1-0.9-0.1c-0.4-0.2-0.6-0.5-0.9-0.9c-0.4-0.7-0.9-1.3-1.7-1.4       c-1-0.3-2.1-0.6-2.7-1.5c-0.2-1,0.2-1.8,0.8-2.5c0.7-0.7,1.5-1.2,2.5-1.3c0.7,0,1.4,0.2,1.9,0.8c0.4,1,0.7,2,1.1,3       C2076.1,416.3,2076,417.7,2076,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BBA3A1"),
                d:
                  "M2058.1,367.9c-3.2,0.2-5.2-1.8-7.1-3.9C2053.8,364.5,2056.2,365.7,2058.1,367.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BBA3A1"),
                d:
                  "M2063.2,370.9c-2.2-0.2-4.1-0.8-5.1-3C2060.1,368.3,2061.9,369.2,2063.2,370.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BCA8A5"),
                d:
                  "M1976.9,331c-2.2,0.1-4.4-0.1-5.9-2.1C1973.2,329.1,1975.2,329.5,1976.9,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2AFAE"),
                d:
                  "M2080,428c0.3,0.6,0.6,1.2,0.8,1.8c-1,0.9-0.8,2-0.8,3.1c-0.8-0.4-0.9-1.2-1.1-1.9       C2079,430,2078.7,428.8,2080,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F4A"),
                d:
                  "M1820.8,537.3c-3.2-6.4-6.1-12.8-9.5-19.1c-7.4-13.6-16.3-26.1-27.1-37.3c-1.8-1.9-3.5-4-5.2-6       c0.9-1.9,2.2-1.2,3.6-0.6c4.8,3,7.5,7.9,11.1,12c2.4,2.8,4.3,5.9,6.6,8.7c2.6,3.1,4.4,6.8,7,9.9c0.5,0.5,0.9,1,1.3,1.5       c0.9,1,1.8,2,2.2,3.3c0.5,2.6,2.2,4.6,3.7,6.8c0.3,0.4,0.5,0.8,0.7,1.2c1.5,3.8,4.2,7.1,5.7,10.9c0.3,0.9,0.7,1.8,1,2.7       C1822.4,533.5,1823.8,535.8,1820.8,537.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA2A38"),
                d:
                  "M1820.8,537.3c1.8-2.1-0.1-4.2,0.2-6.3c-0.5-1.2,0.6-1.8,1.2-1.4c3.6,2.6,6.6,0.1,9.8-1       c4.1-1.4,5.1-6.1,8.9-7.8c-0.2-0.3-0.3-0.6-0.3-0.9c0-1,1.5-1.6,0.3-3.1c-1-1.2,0.1-2.3,1.7-2.4c0.7,0.1,1.3,0.5,1.9,0.9       c1.4,1.3,2.5,2.8,3.2,4.7c0.2,0.7,0.1,1.4-0.1,2.1c-1.9,5.1-6.9,7.3-10.5,10.7c-2.2,2.1-4.8,4-7.2,5.9       c-1.6,1.2-2.4,3.5-4.8,3.5c-1.5-1.3-2.4-3.1-3.9-4.4C1820.8,537.7,1820.7,537.6,1820.8,537.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942835"),
                d:
                  "M1782,475c-1-0.5-2-0.7-2.9,0c-2.8-2.6-5.5-5.2-8.3-7.8c0.1-0.2,0.1-0.4,0.2-0.7       c5.3-1.9,10.8-2.7,16.4-3.3c3.1,0,6.3-0.4,9.4,0.6c1,0.3,2.1,0.5,2.3,1.6c0.1,1.1-0.7,1.9-1.7,2.2c-3.6,1.3-5.9,5.7-10.6,4.4       c-0.9-0.3-1.5,1.1-2.2,1.9C1783.9,474.7,1783,475,1782,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D464F"),
                d:
                  "M1838.2,625c-1.1-23-4.4-45.7-10.3-67.9c0.2-0.1,0.4-0.2,0.7-0.3c3.1,1,2.7,4.4,4.2,6.5       c0.7,2.3,0.3,5,2,7c0.3,0.7,0.5,1.5,0.6,2.3c1.8,14.8,3.9,29.6,5.7,44.4c-0.3,1.6-0.8,3.1-0.8,4.7c-0.1,1-0.2,2.1-0.8,3       C1839.2,625.2,1838.7,625.3,1838.2,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F4A54"),
                d:
                  "M1838.2,625c0.3,0,0.6,0,0.8,0c2,3,1.5,7.2,4.3,9.9c2.4,3.3,5.8,1.2,8.7,1.7c5.6,0.6,11.4-1.3,16.9,1       c0.7,0.8,0.7,1.7,0.1,2.6c-2.8,0.4-5.6,0.5-8.4-0.1c-5.1,0-10.2-0.1-15.3,0c-4.6,0-7.1-2-7.1-6.7       C1838.3,630.6,1838.2,627.8,1838.2,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D464F"),
                d:
                  "M1821,537.9c2.8-0.1,3.6,1.8,4,4.1c2,1.6,2.7,3.9,3.7,6.1c0.5,1.9,0.8,3.8,1.1,5.7       c0,1.3-0.3,2.5-1.6,3.1c0,0-0.4,0.2-0.4,0.2C1825.6,550.7,1823.3,544.3,1821,537.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("954953"),
                d:
                  "M1765.9,463.4c-0.2-2-2.2-2.7-2.9-4.4c4.2-1.1,5.9,2.9,8.9,4.3c0.3,0.3,0.5,0.7,0.5,1.2       c-0.4,0.7-1.7,1.1-1,2.3c-0.2,0.2-0.4,0.3-0.6,0.4C1768.7,466.5,1767.3,465,1765.9,463.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("955557"),
                d:
                  "M1860.6,640.1c2.8,0,5.6-0.1,8.4-0.1c1.2-1,2.5-1.1,3.8-0.4c0.6,0.7,0.7,1.4,0.2,2.2       C1868.8,641.8,1864.7,641.3,1860.6,640.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C3E3F"),
                d:
                  "M1873,641.8c0-0.6,0-1.2-0.1-1.8c3.9-1.6,7.7-0.2,11.6,0.1c0.7,0.1,1.7,0.6,1.3,1.6       c-0.4,1-1.3,0.7-2.1,0.5c-2.6,0-5.2,0-7.8-0.1C1875,642.1,1874,641.9,1873,641.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46063"),
                d:
                  "M851.2,662.2c-2,1.7-4.3,1.5-6.7,1.5c-17.6-0.1-35.3-0.5-52.9-0.4c-37.3,0.2-74.6,0.4-111.9,1       c-10.9,0.2-20.6-3-29.9-8.1c2.8-2.1,5.3-0.6,7.9,0.6c5,2.3,10.1,4.2,15.8,4c28.5-0.1,57-0.3,85.6-0.1c26.6,0.3,53.1,0,79.7,0.1       c3,0,6-0.1,9,0.1C849,660.8,850.3,661,851.2,662.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D5358"),
                d:
                  "M1037.3,660.2c-3,1.3-6.1,1.4-9.3,1.4c-39.5,0.3-79.1,0.5-118.6,0.6c-0.8,0-1.6-0.2-2.5-0.2       c-2.2-1-4.6-0.4-6.9-0.4c-17.3-0.1-34.6,0-51.9,0c-6.4-0.2-12.8,0.4-19.2-0.4c0.3-2.9,2.7-2.4,4.5-2.6c4.2-0.4,8.5,0.2,12.7,0       c41.6-0.1,83.2-0.3,124.8-0.1c19.8,0.3,39.5,0,59.3,0.2C1032.7,658.6,1035.3,658,1037.3,660.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89444B"),
                d:
                  "M1037.3,660.2c-22.1-0.1-44.2-0.2-66.3-0.2c0-2.5,1.8-2.9,3.7-3.2c2-0.3,4-0.2,6-0.1       c39.1,0.1,78.1-0.4,117.2,0c10,0.1,20-0.1,30,0c2.1,0,4.4-0.4,6.1,1.4c-1.5,1.6-3.4,1-5.1,1c-13.2,0.1-26.4,0-39.6,0.1       c-1.7,0-3.7-0.7-5.2,0.9C1068.5,660,1052.9,660.1,1037.3,660.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE424C"),
                d:
                  "M672,662c-5.1-0.1-10-1.6-14.5-3.9c-2.6-1.3-4.9-2.4-7.8-2c-7.8-2.7-14.8-7.2-23-8.8       c-2.6-0.5-5.2-1-7.7-1.5c0.2-0.6,1.1-1.2,0-1.8c-0.3-1.7,1-2.1,2.1-2.7c1.9-0.6,3.9-0.7,5.7-1.5c1.8-0.8,4.1-0.9,4.9,0.8       c1.8,4.1,5,4.2,8.5,4.4c0.8,0,1.6,0.4,2.3,0.9c0.8,0.8,1.5,2.2,2.6,2.2c7.2-0.1,11.9,6,18.6,7.2c1.9,1.5,4.6,1.3,6.2,3.4       C670.5,659.8,672.4,660.2,672,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("83454A"),
                d:
                  "M848,661c18.1,0,36.2,0,54.3,0c1.6,0,3.4-0.5,4.7,0.9c-18.6,0.1-37.2,0.1-55.8,0.2       c-1.1-0.2-2.2-0.3-3.2-0.5c-0.3-0.2-0.4-0.3-0.3-0.5C847.8,661.1,847.9,661,848,661z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D343F"),
                d:
                  "M237,624c-0.3,2.8-2.6,2.1-4.2,2.1c-9.2,0.1-18.5,0-27.7-0.1c-2-1.8-4.9,0-6.9-1.7       c-1.3-6.2-2-6.5-8.2-2.9c-1.5,0.9-8.7-2-9-3.6c-0.1-1,0.7-1.4,1.4-1.8c3.6-1.9,7.9-2.8,9.2-7.5c0.4-1.4,1.9-0.8,3-0.4       c4.5,1.6,8.2,1.1,11.2-3.3c1.7-2.5,4.2-2.5,7.5-2c4.9,0.8,8.3,3.3,11.1,6.8c2.1,2.6,3.7-2.5,5.6,0c0.3,0.4,0.5,0.9,0.6,1.4       c0.1,1.6,1.1,2.8,1.7,4.1c2.2,4.4,1.5,5.9-3.2,5.9c-5.1,0.1-10.2,0.4-15.2-0.7c5.7,1.1,11.5,0.6,17.3,0.7c2.3,0,3.2-1,3.3-3.3       c0-1.7-0.6-4.5,2.9-3.2C238.3,617.7,238.3,620.9,237,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("865359"),
                d:
                  "M308,468.1c0,1.1-0.7,1.7-1.6,2.3c-18.3,11.9-32.7,27.6-44,46.1c-4.1,6.7-7,14.2-10.5,21.4       c-1.8-0.7-2-2.2-2.1-3.8c0-0.5,0.1-1,0.2-1.5c3.1-7.1,6.4-14,10.9-20.4c5.8-8.3,11.4-16.8,18.4-24.2c4.4-4.8,9.5-8.9,14.1-13.4       c0.7-0.6,1.5-1.2,2.2-1.7c2.3-1.8,4.6-3.6,7-5.2c1.6-1.1,3.3-2.3,5.4-1C308.4,467.3,308.4,467.7,308,468.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E424C"),
                d:
                  "M308,468.1c0-0.4,0-0.8-0.1-1.2c-1.2-3,1.4-3.7,3.1-4.7c9.9-6.1,20.4-10.9,31.5-14.5       c2.2-0.6,4.4-0.9,6.5-1.8c4.5-1.2,9-2.5,13.7-2.5c1,0.6,1.7,1.3,1.2,2.6c-3.7,1.2-7.4,2.5-11.1,3.7c-7.7,1.8-14.7,5.4-22.1,8       l0,0c-4.7,2.4-9.5,4.6-14.1,7.1C313.8,465.6,311.3,468,308,468.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("874349"),
                d:
                  "M251,534c-0.1,1.5,0.3,2.8,1,4c-6.1,16.9-9.9,34.4-12.8,52.2c-0.2-0.1-0.4-0.3-0.6-0.4       c-0.9-1.7-2-3.4-2.1-5.4c0-5.7,2.2-11.2,2.3-16.9c1.4-4.5,3.2-8.9,3.6-13.7c2.2-5.2,4.1-10.5,5.5-16       C248.7,536.3,248.5,534.1,251,534z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82595E"),
                d:
                  "M117.1,598c-2.1-3.5-6.2-5.3-8.1-9c0.4-0.3,0.8-0.5,1.3-0.5c4,1.6,6.6,5,9.8,7.5       c10.3,8.2,20.7,16.1,31.8,23.2c3.4,2.2,6.5,4.6,9.7,7c2.1,2.4,6.5,2.5,6.5,6.9c-11.7-6.5-22.5-14.4-33.5-22       C128.5,607,122.9,602.4,117.1,598z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("864248"),
                d:
                  "M168,633.1c-1.4-3.1-5-3.6-7-6.1c0.2-0.8,0.6-1.3,1.4-1.5c0.5-0.1,1-0.1,1.4,0c1.9,0.6,3.6,1.8,5.4,2.6       c6.9,3.4,13.6,3.7,20.3-0.7c2.4-1.6,5.1-2.3,7.8-3.3c0.2-0.1,0.5-0.1,0.7-0.2c2.3,0.7,5.6-1.7,7,2.1       c-6.1,1.4-11.9,3.5-17.5,6.6C181.3,636.2,174.6,635.9,168,633.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D8285"),
                d:
                  "M492.1,481.8c-5.1-1.8-8.5-6.1-12.7-9.1c-4.6-3.2-9.3-6.1-14.2-8.9c-3-1.7-6.3-3-9.2-4.9       c-9.1-5.1-19.5-7-29.1-10.9c1.6-1.7,3.6-1.2,5.5-0.8c5.2,1,10,3.2,15.1,4.5c2,0.6,3.8,1.5,5.6,2.4       c12.8,6.2,25.1,13.2,36.3,22.1C490.7,478,493.3,479,492.1,481.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("682B34"),
                d:
                  "M448,453c-5.2-1.5-10.5-3-15.7-4.5c-1.8-0.5-3.5-1-5.4-0.5c-15-3.8-30.3-4.6-45.7-4       c-3.2,0.3-6.5,1-9.4-1.2c0.8-2.7,3.3-2.2,5.2-2.3c2.4-0.1,4.8,0,7.2,0.3c4.6,1.2,9.2,0.9,13.9,0.4c0.5-0.2,1-0.3,1.6-0.4       c14.3,0.8,28.5,2.7,42,7.8c0.5,0.1,1,0.3,1.5,0.5C444.8,450.4,447.9,449.8,448,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952C39"),
                d:
                  "M532,527c-3.2-3.5-4-9-9.2-11c-1.9-2.2-3.8-4.3-4.9-6.9c2.5-0.5-0.3-2.5,1-3.3c3.2-1.3,4.6,1.6,6.7,2.9       c3.4,2,5.7,5,7,8.7c0.5,1.5,0.7,3.3,2.6,4c2.3,1.9,2.2,3.8-0.2,5.6C534.1,527.3,533.1,527.4,532,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("832C39"),
                d:
                  "M519,506c-0.4,1,3,3.3-1.1,3.1c-4.2-3.7-7.4-8.4-10.8-12.8c-4.2-5.3-9.7-9.3-14.1-14.3       c-0.5-1.5,0.6-1.4,1.6-1.6c0.7,0.1,1.3,0.5,1.8,0.9c2.1,1.9,4.2,3.8,6.3,5.7c0.3,0.3,0.6,0.6,0.9,0.9c0.9,1.1,1.6,2.4,2.9,3.1       c1.9,1.1,4.4-0.8,6.1,1.2C513.9,497.2,517.5,501.1,519,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("874349"),
                d:
                  "M237,624c0-3.3,0-6.7,0-10c-0.6-0.6-0.8-1.2-0.8-2c0.4-2.2,0.8-4.3-0.1-6.5c-0.3-1.3-0.2-2.7,0.1-4       c0.7-2.2,0.3-4.5,0.5-6.8c0.2-1.8-0.4-4.1,2.2-4.8c0,0,0.3,0.2,0.3,0.2c-0.1,9.5-0.2,19-0.3,28.5       C238.9,620.6,238.9,622.7,237,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F4A52"),
                d:
                  "M372,443c3.1,0.4,6.1,0.8,9.2,1.2c-5.5,2.2-11.4,1.9-17.2,2c-0.3-0.7-0.7-1.4-1-2       C365.8,441.9,368.7,440.9,372,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3DDDF"),
                d:
                  "M330.9,457.8c7-3.6,14.1-7.1,22.1-8C345.7,452.8,338.6,456.2,330.9,457.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3DDDF"),
                d:
                  "M316.8,464.9c4.4-3,8.7-6.1,14.1-7.1C326.7,461.2,322,463.4,316.8,464.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4DEE0"),
                d:
                  "M456,459c3.6,0.7,6.5,2.6,9.2,4.9C461.6,463.2,458.4,461.8,456,459z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F222D"),
                d:
                  "M495,481c-0.8,0-1.6,0.1-2,1c-0.3-0.1-0.6-0.1-0.9-0.2c0.1-2.4-2.6-2.9-3.2-4.8       c1.9-1.4,3.1,0.2,4.5,1.1C494.2,479,495.5,479.5,495,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9555A"),
                d:
                  "M1597.1,427c0.8,0,1.5,0.2,1.9,1.1c-14.8,4.6-29.4,9.6-43.2,16.7c-18.6,9.6-34.2,23-48.5,38.1       c-1.7,1.8-3.4,3.6-5.2,5.4c-0.8-0.2-1.3-0.6-1.6-1.3c-0.6-2.4,1.1-3.7,2.5-5.1c3-3.1,6.1-6.1,9.1-9.2c1.3-1.2,2.6-2.5,3.8-3.8       c0.3-0.3,0.6-0.6,1-0.9c1.9-1.6,4-2.8,5.6-4.7c4.2-4.3,9.4-7.3,14-11.1c3-2.2,6.4-3.9,9.4-6.1c10.8-6.7,22.6-11.5,34.5-15.7       c0.7-0.3,1.3-0.4,2-0.6c1.6-0.2,3-0.9,4.5-1.6c0.6-0.3,1.3-0.4,2-0.6c2.1-0.4,4.1-1,6.1-1.4       C1595.9,426.3,1596.6,426.4,1597.1,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3946"),
                d:
                  "M1485,512.9c-0.3,0.7-0.7,1.4-1,2c-1.4,1.7-1.9,3.9-3.1,5.8c-2,5.2-3.9,10.4-6.7,15.3       c-3,4.7-3.8,10.1-5.1,15.3c0.2,0.2,0.1,0.4-0.1,0.6c-0.7,1.4-1.1,3-3.1,3.1c-0.8,0.1-1.6,0.1-2.4-0.1c-3.1-1.2-2.9-3.7-2.2-6.1       c0.8-2.6,1.8-5.2,4-7.1c2.3-1.1,2.5-3.2,2.5-5.5c0-3.5-0.1-6.9,1.2-10.3c1.3-3.4,2.4-6.5,6.9-6.7c2.3-0.1,2.5-2.4,3.1-4.1       c0.3-1,0.7-1.9,1.3-2.7c0.9-1.1,2.1-1.5,3.5-1.2C1484.5,511.5,1485.1,511.9,1485,512.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63C4B"),
                d:
                  "M1460.9,646c0.1,0.6,0.1,1.2,0.2,1.9c0.7,1.4,0.4,2.9,0.4,4.3c-0.1,5.6-0.8,6.4-6.9,7.9       c-6.1-1.3-12.2-0.5-18.3-0.5c-6.1,0-12.2-0.6-18.3,0.4c-0.7,0-1.3,0-2,0c-2.7-0.9-5.4-0.2-8.1-0.5c-1-0.1-2.6,0.2-1.6-1.8       c6.6-2.2,13.4-0.6,20-1.1c3.4-0.3,6.9,0.4,10.2-1.1c5.4-1.4,10.9-0.6,16.4-0.7c3.6-0.1,4.7-1.1,3.6-4.8       c-1.8-5.9-0.5-12.2-2.2-18.3c-0.6-2.2,1.1-4.4,2.2-6.5c1.6-2,0.7-4.7,2-6.8c0.4-0.5,0.9-0.6,1.4-0.4c1.1,2.7,0.3,5.5,0.5,8.3       c0,2.6,0,5.2,0,7.7C1460.7,638,1460,642,1460.9,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F5055"),
                d:
                  "M1460,626c-0.4-2.7,0.9-5.6-1-8c-1.9-2.3-0.2-4.8-0.4-7.3c0.1-2.7,0-5.4,0-8.1       c-1-15.9,3.2-31.1,6.2-46.4c0.2-0.8,0.7-1.5,1.2-2.1c1.6,0.2,2-1.4,3-2c-2.9,12.8-5.9,25.6-7.3,38.6       c-1.2,11.8-0.7,23.6-0.9,35.4C1460.6,626.4,1460.3,626.5,1460,626z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963342"),
                d:
                  "M1406,658c3,2.5,7-0.5,10,1.9c-14,0-28,0-42,0c-0.3-0.4-0.5-0.9-0.5-1.5c0.5-2.5-0.4-5.3,1.4-7.6       c1-0.2,1.5,0.4,1.9,1.2c2.5,6,2.5,6,8.9,5.1c1-0.2,2-0.2,3-0.1c2.1,0.6,4.2,0.7,6.3,0.1c0.7-0.1,1.4-0.1,2.1,0       c2.5,0.7,5.1,0.5,7.6,0.3C1405.2,657.5,1405.6,657.7,1406,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A85258"),
                d:
                  "M1501,487c0.4,0.4,0.8,0.8,1.2,1.3c-3.4,4.6-6.7,9.2-10.1,13.9c-0.2-0.1-0.4-0.2-0.6-0.3       c-1.9-2.5,0.4-4.3,1.1-6.3C1495.3,492.7,1496.1,487.8,1501,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A434A"),
                d:
                  "M1339,659.8c0.7-0.6,1.3-1.2,2-1.8c3.4-1.9,7-0.6,10.6-0.8c4.2,0.9,8.5,0.2,12.7,0.5       c1.8,0.1,4.1-0.5,4.7,2.2C1359,659.9,1349,659.9,1339,659.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963342"),
                d:
                  "M1418,659.9c0.7-0.9,1.7-1,2.7-0.9c11.4,0.4,22.9-0.8,34.3,0.6c-0.5,1.2-1.3,0.8-2.1,0.5       C1441.2,660.1,1429.6,660,1418,659.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A85258"),
                d:
                  "M1485,512.9c-0.3-0.3-0.7-0.6-1-0.9c-1.2-1.4-0.3-2.6,0.4-3.9c1.2-1.4,1.6-3.2,2.8-4.6       c1.2-1.4,2.3-3,4.5-1.8c0.1,0.1,0.3,0.2,0.4,0.3C1489.8,505.8,1488.4,510,1485,512.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24F56"),
                d:
                  "M1369,659.9c-3.9-1.9-8-0.4-11.9-0.9c-2-0.3-4.3,0.8-6-1c2.2-2,4.9-1.6,7.5-1.5       c5,0.2,10.1-0.9,15.1,0.9c0.6,0.4,0.8,0.9,0.6,1.6c0,0.3-0.1,0.6,0,0.9C1372.3,659.9,1370.7,659.9,1369,659.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC7376"),
                d:
                  "M1452.8,660.1c0.7-0.2,1.4-0.3,2.1-0.5c6.7-1.5,5.9-6.9,6.1-11.8c0.9,1.7,0.9,3.5,0.9,5.3       C1462,659.5,1459.4,661.5,1452.8,660.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("885151"),
                d:
                  "M1469.1,551.4c0.5-5.5,0.6-11.2,5.1-15.3C1472.5,541.1,1470.8,546.2,1469.1,551.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2D36"),
                d:
                  "M1460.9,646c-1.9-3.9-0.5-8-0.9-12c0.3-0.5,0.6-0.4,0.9,0C1460.9,638,1460.9,642,1460.9,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6B6B"),
                d:
                  "M1480.9,520.8c0.2-2.4,0.9-4.5,3.1-5.8C1483.6,517.2,1482.7,519.2,1480.9,520.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F5353"),
                d:
                  "M1460.9,634c-0.3,0-0.6,0-0.9,0c0-2.7,0-5.3,0-8c0.3,0,0.6,0,0.9,0       C1460.9,628.7,1460.9,631.4,1460.9,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3424E"),
                d:
                  "M317,300c-6.2-2.3-12.6-1-18.9-1.4c-11.3-0.8-22.7-1.1-34.1-0.9c-4.7,0.1-9.5-0.4-14.2,0.2       c-1.7,0.2-3.3-0.1-4.8-0.9c-1.1-2.8,0.9-3.4,2.8-4.1c4.6-1.6,9.3-1.6,14.1-1.3c-2.7-0.2-5.5,0-8.3-0.2c-1.2-0.1-2.5-0.5-2.4-2       c0.1-1.2,1.3-1.3,2.3-1.4c1.7-0.1,3.2-0.7,4.3-2.1c2.9-2,6.2-1.2,9.4-1.3c5.6,0.3,11.3-0.7,16.9,0.5c2.8,1.3,5.6,1.8,8.7,1.2       c2.2-0.5,4.3,0.1,6.4,0.7c1.6,0.5,3.4,1.2,1.7,3.5c-8.4-0.3-16.9-0.5-22.3-0.4c8.3-0.6,19.6,0.4,30.9,0.7       c13.1,0.4,26.1,1.2,39.2,2.6c5.1,0.5,10.2,0.7,15.4,0.5c1.7,0.4,3.5,0.6,5.2,1.1c1.6,0.4,3.6,0.9,2.5,3.5       c-10.2,0.8-20.5,0.8-30.7,1.6C333,300,325,300,317,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE868C"),
                d:
                  "M297,307c21.3-1.7,42.8-1.7,64.1-3.2c10.5-0.8,20.9-0.6,31.4-0.8c7.8-0.2,15.6-1.6,23.4-0.9       c2.1,1.6,3.3,3.6,1.8,6.3c-6.4,1-12.9,1.9-19.4,0.1c-1.5-1-3.1-1-4.8-1c-22-0.2-43.9,0-65.9,1.1c-0.8,0-1.6,0.3-2.4,0.5       c-9.2-0.6-18.5,1.9-27.8-0.5C296.8,308.2,296.7,307.6,297,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871C33"),
                d:
                  "M250.2,310.6c0.2,0.1,0.5,0.3,0.7,0.4c3.3,2.1,7,1.5,10.7,1.6c4.5,0.1,9-0.2,13.4,0.2       c3.5,1.3,7.2,0.4,10.7,1.1c3.3,1.3,6.9,0.1,10.3,1.2c2,1.2,1,2.3-0.3,2.8c-6.9,2.7-12.4,7.3-17.5,12.5       c-0.4,0.2-0.9,0.3-1.4,0.4c-2.5-0.1-2.9-1.8-3.8-3.8c-1.1-2.5-1.5-7.1-6.6-4.2c-1,0.6-2.6-0.4-3.7-1c-2.6-1.6-5.2-2.8-8.4-2.5       c-2.5,0.2-3.1-3-5.3-3.5C248.7,313.9,248.4,312,250.2,310.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1D20"),
                d:
                  "M417.5,307.9c-0.6-2-1.1-3.9-1.7-5.9c0-0.7,0-1.4,0-2c-0.3-0.4-0.4-0.8-0.4-1.3c0.5-2,1.1-4,1.6-6       c1.4-2.9,3.2-5.7,3.6-9c0.2-1.4,0.6-2.8,1.3-4c0.9-1.9,1.4-4,1.7-6.1c0.1-0.7,0.2-1.5,0.4-2.2c0.6-2,0.6-4.1,0.9-6.2       c1.6-9.6,2.9-19.2,4.7-28.8c0.4-2.2,0.1-5.1,3.5-5.5c1.7,2.4,1.2,5.1,0.8,7.7c-1.9,8.5-2.6,17.1-4,25.7c-0.7,2-0.7,4.1-1.1,6.1       c-0.5,1.6-0.7,3.4-0.9,5.1c-0.1,0.5-0.2,0.9-0.3,1.4c-0.5,1.3-0.7,2.7-1.1,4.1c-0.9,2.7-2.1,5.2-3,7.9       c-1.3,2.7-2.3,5.5-3.3,8.2c-0.2,1-0.4,2.1-0.6,3.1c-0.1,0.6-0.3,1.1-0.5,1.7c-0.1,1,0.2,1.9,0.5,2.8c0.2,0.8,0.5,1.6,0.6,2.4       c0,0.5,0,0.9-0.1,1.3c-0.7,1-0.5,3.1-2.7,2.1C417.1,309.8,417.1,308.9,417.5,307.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4651"),
                d:
                  "M416.2,299.1c0,0.3-0.1,0.6-0.3,0.9c-10.1,0.9-20.2,1.4-30.4,0.3c-5.7-0.6-11.7-2.1-17.3-1.1       c-9.2,1.6-18.2-0.1-27.3,0.7c0.7-0.9,1.7-1,2.7-1c9.5,0.5,18.8-1.7,28.3-1c0.4-0.4,0.9-0.7,1.4-1c2.5-0.7,5.1-0.2,7.7-0.5       c11,0,22,0.9,33-0.3C415.8,296.4,416.9,297.1,416.2,299.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8828B"),
                d:
                  "M275,314c-6.4,0.1-12.8,0.3-19.2,0.1c-1.8-0.1-5.1,0.8-4.8-3.1c0.2-1.8,1.4-1.9,2.9-2       c14.4-0.6,28.7-2.5,43.2-2c0,0.3,0,0.7,0,1c-1.6,1.7-3.8,1.3-5.8,1.4c-3.4,0-6.7-0.4-10,0.5c-1.4,0.3-2.7,0.4-4.1,0.4       c-6-0.6-12.1,1-18.2,0.4c4.6,1.7,9.6,0.3,14.4,1.1c0.5,0.1,1,0.4,1.5,0.7C275.2,313,275.3,313.5,275,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A333B"),
                d:
                  "M250.2,310.6c-0.1,2.1-0.2,4.2-0.2,6.4c-1,0.5-1.5-0.4-2-0.9c-1-0.4-2-0.7-3-1.1       c-0.1-1.7,3.3-3.5-0.2-5.1c0-1.4,0.8-2.1,2.2-2.1C248.6,308.2,249.8,309,250.2,310.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2D31"),
                d:
                  "M1215.7,181.1c7.4,4.6,15.3,8.5,23.2,12c13.6,8.6,28.3,15.3,41.9,23.8c8.7,5.4,18.3,9.3,26.2,16.1       c-1.1,2.5-2.5,1-3.8,0.3c-20.3-12.1-40.7-23.9-61.6-35c-3.7-2-6.8-5.6-11.6-5c-0.8,0-1.3-0.4-1.8-1c-2.3-2.7-5.6-4.1-8.6-5.8       c-5.3-3-11-5.4-16.2-8.6c-1.7-1-3.7-1.5-5.7-1.3c-4.6-0.6-8.3-3.4-12.3-5.4c-4.7-2.2-9.3-4.6-14.1-6.5       c-1.4-0.8-2.9-1.5-4.3-2.2c-1.4-0.7-2.9-1.5-4.4-2c-4.7-1.6-8.8-4.4-13.5-5.9c-3.2-1.4-6.5-2.7-9.8-4c-1.5-0.6-3-1.4-4.5-2       c-3.5-1.3-7.1-2.6-10.6-4c-1.7-0.8-3.5-1.5-5.3-2.1c-4.4-1.6-8.7-3.4-13.2-4.7c-9.4-3.5-19.1-5.8-28.5-9.2       c-1.2-0.6-2.6-0.8-3.2-2.3c0.9-1.7,2.3-1,3.6-0.8c11.5,1.9,22.3,6.4,33.3,10c2.7,0.9,5.2,2.2,8.1,2.3       c14,4.8,27.6,10.7,41.2,16.5c11.3,5.2,22.9,9.7,34.1,15.1c1.9,0.9,3.8,2,5.8,2.9C1205.1,175.5,1210.7,177.8,1215.7,181.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("883D41"),
                d:
                  "M1077.4,125.8c-1.1,0.3-2.5-0.1-3.4,1.1c-3.2,1.3-6.2-0.1-9.2-0.9c-3.7-0.9-7.3-2.1-11-2.9       c-6.1-1.6-12.3-2.9-18.5-4.2c-2.7-0.8-5.5-1.1-8.3-1.7c-0.8-0.1-1.5-0.3-2.3-0.5c-1.6-0.9-4.3,0-4.9-2.8c0.3-0.1,0.7,0,0.9-0.2       c0.5-0.5,0.1-0.7-0.3-0.8c-0.9-0.1-1.9-0.1-2.5-1c8.5,0.8,16.8,3,25.2,4.9c2.6,0.6,5.1,1.5,7.8,1.2       C1059.6,121.3,1069,121.8,1077.4,125.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4DBDC"),
                d:
                  "M1159.9,155.1c-13.7-5.6-27.4-11.3-41.1-16.9c5.7-0.7,10.1,2.9,15,4.8c9.6,3.7,19.3,7.1,28.4,12       C1161.4,155.6,1160.6,155.5,1159.9,155.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1D6D7"),
                d:
                  "M1159.9,155.1c0.7,0,1.5-0.1,2.2-0.1c11.2,4.8,22.5,9.6,33.7,14.5c1.5,0.7,2.8,1.7,4.2,2.5       c0.5,0.4,0.4,0.8-0.1,1.2C1186.6,167.2,1173.2,161.1,1159.9,155.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4DBDC"),
                d:
                  "M1199.9,173.2c0-0.4,0.1-0.8,0.1-1.2c6,3,12.1,6,18.1,8.9c-0.8,0.1-1.6,0.1-2.4,0.2       C1210,179.3,1205,176.2,1199.9,173.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D122A"),
                d:
                  "M178,369c9-3.4,18.4-5.6,27.8-7.5c1.2-0.2,1.8-0.6,2.2-1.5c4.2,1.7,4.6,6.5,7.4,9.3       c0.9,1,1.8,2,2.3,3.3c0.6,1.6,1.2,3.2,2.3,4.5c0.3,0.3,0.5,0.7,0.7,1.1c0.7,1.5,1.5,3,2.6,4.3c0.3,0.4,0.5,0.7,0.7,1.1       c0.9,2.3,3.2,4.1,2.6,7c-1.3,3.6-4.8,3.7-7.6,4.9c-5,2.2-10.4,3.2-14.1,6.1c8.3-1,17.1-4.5,26.5-3.9c2.9,2.2,5.2,4.8,4.6,8.9       c-6.2,2.2-12.9,2.6-19.3,3.1c-7.6,0.6-15,2.2-22.4,3.6c-3.3,0.6-6.5,1-9.8,0.4c-0.8-0.4-1.1-1.1-1-2c0.1-1,0.8-1.7,1-2.7       c0.9-4.4-0.2-5.8-4.2-5.6c-0.6-0.5-1.2-1-1.7-1.6c0.2,0.9,1.2,0.9,1.6,1.5c3.9,3,4.6,6.6,2.1,10.8c-0.4,0.3-0.8,0.5-1.3,0.5       c-2.1-0.2-4.1-0.6-6,0.7c-2.5,1-5,2.3-7.8,1.3c-2-2.6-0.5-3.9,1.9-4.7c2.4-0.8,4.9-0.9,7.4-0.8c-3.7-0.3-5.1-2.5-4.3-5.8       c0.5-2.1-0.3-2.1-1.7-3c-2.1-1.2-8.3,0.3-4.6-5.8c0.5-0.8-1.4-1-2.2-1.5c-1.3-1-2.9-2.1-1.8-4c1.1-1.8,2.6-0.9,3.9-0.2       c1.2,0.6,2.7,0.8,3.5,1.8c2.8,3.8,4.8,1.5,6.8-0.7c0.1-0.1,0.2,0.2,0.3-0.1c-1.1-0.1-1.4,0.8-1.8,1.4c-0.5,0.7-0.9,1.5-1.9,1.2       c-1.3-0.4-1.2-1.6-0.8-2.5c1.8-4.5,0.5-8.1-2.9-11.4c-1.2-1.2,1.1-7.1,2.8-7.2C174.9,373.2,176.4,371,178,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M177,392c-0.8,0.8-1.5,1.9-2.4,2.4c-1.5,0.9-3.2,4.5-4.9-0.3c-0.6-1.6-3.8-2.2-5.9-3.2       c-0.3-0.1-1,0.1-1.2,0.4c-0.2,0.3-0.1,1.1,0.1,1.3c0.7,0.7,1.6,1.7,2.3,1.6c1.8-0.2,2.7,0.1,3.2,2c0.7,2.6-2.4,1.1-2.7,3.1       c3.1,0.8,5.8,3,10.4,1.6c-1.9,2.9-3.9,4.8-2.5,7.6c1.6,2.9,5.3-0.6,7,2.5c-3.1,1.7-6.5,0.5-9.7,1.4c-2,0.5-4.1,0.7-3.7,3.5       c-3,4.2-8.1,5.2-12,8c-1.5,1.1-3.3,1.5-5.1,0.3c-0.9-1.6-1.3-3.3-2.4-4.8c-1.4-1.8,0.8-6.4,2.5-5.8c3,1.1,7.5-3.5,9.2,2.5       c-1.4-5.1-5.9-6-9.9-7.9c-1.6,8.3-3.8,16.2-14.4,16.9c-2-2.9-1.4-5.4,0.8-8.1c2.5-3,5.3-6,5.1-10.4c0-0.7-0.1,0.2-0.1-0.5       c0.1-1.6,1.3-1.7,2.5-1.8c-2.6-1.6-0.4-3.1,0.2-4.5c0.8-1.7,1.6-3.3,2.5-4.9c1-1.6,2.6-2.6,4-3.7c2.7-2.2,1.2-4.5,0.2-6.7       c-0.5-1-1.4-1.8-1.7-3c-0.2-1,0-2,0.7-2.8c6.7-4.5,14.7-5.3,22-8c1.6,0.8,2.9,0.3,4-1c0.7-1.1,1.9-0.9,3-1       c-0.9,4.7-1.8,5.3-7.4,5.5c-0.7,1.9,1.7,1.1,2,2.5c-1,0.7-3.6-0.1-3.2,2.2c0.3,1.5,1.4,2.6,3.3,2.1c0.4-0.1,1.1,0.5,1.6,0.8       c-2.2,2.5,1.7,5.6-0.9,8.3c-0.6,0.6-1.1,2-0.5,3.2c2.3-0.3,1-3.9,3.5-3.8C176.7,389.8,176.8,391.2,177,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631128"),
                d:
                  "M206,344c8.4-3.1,16-7.5,23-13c2.8-0.9,4.2,2.9,7.3,1.9c1.1-0.4,0.6,1.9-0.2,2.6       c-2.1,2.2-4.9,3.3-8.1,3.6c0.5,1.4,3.5,2,1.8,3.7c-2.2,2.2-4.1-0.2-6-1.5c1.9,3,5.6,3.8,7.8,6.6c0.9,1.1,3.3,1.9,5.8-0.1       c3-2.4,5.8-0.1,7.7,2.8c-0.1,0.5-0.3,0.9-0.6,1.3c-0.4,0.4-0.8,0.6-1.2,0.8c-5,1.2-9.9,2.9-15,4c-6.2,0.6-11.8,3-17.4,5.4       c-2.4-2.6-4-5.7-5.5-8.9c-1.3-2.4-3.7-4.2-3.7-7.3C203.6,346.2,204.6,344.6,206,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("65262D"),
                d:
                  "M149,379c0,1,0,2,0,3c1.2,3.3-1.4,6-3.1,6.4c-3.6,0.8-3.7,3-4.2,5.5c-2.9,3.5-3.4,3.5-4.9-0.4       c-0.9-2.3-2.2-4.3-3.4-6.5c-0.4-1.1-0.3-2.2-0.4-3.4c-0.2-3.9,0.5-7.2,5.6-7.1c1.1,0,1.7-0.8,2.4-1.5c2.3-0.8,3.9,2.1,3.9,2.4       C145.1,381.2,147.5,378.9,149,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D3033"),
                d:
                  "M141,375c-0.1,1.3,0,3.1-1.8,2.9c-5.7-0.5-5.1,3.1-4.8,6.7c0.1,0.8-0.3,1.6-0.4,2.4       c-2.3,1.1-3.8-0.1-5.2-1.8c-1.4-2.1-0.5-4.5-1-6.6c-0.4-0.8-0.1-1.8-0.8-2.5c-0.2-0.4-0.4-0.8-0.7-1.1c4.5,2,9.1,0.7,13.7,0.1       C140.3,375,140.7,375,141,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983652"),
                d:
                  "M205.9,353c1.7,3,3.4,5.9,5.2,8.9c2.9,2,5.1,4.3,3.9,8.2c-3.2-2.8-4.3-7-7-10.2       c-1.1-2.3-2.2-4.6-3.3-6.9C205.1,352.6,205.5,352.6,205.9,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("904758"),
                d:
                  "M205.9,353c-0.4,0-0.8,0-1.2,0.1c-1.2-2.2-4.8-3.4-2.9-6.9C203.2,348.4,204.6,350.7,205.9,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D122A"),
                d:
                  "M175,370c1.5,1.5,0.3,1.8-0.9,2.1c-1.3,0.4-2.8,1.5-3.1-1.1C172.2,370.3,173.5,369.8,175,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C4850"),
                d:
                  "M333,217.9c11.7-6.2,23.8-11.5,36.1-16.6c6.3-0.6,11-5.3,16.9-6.8c1.6-0.4,2.9-1.8,4.7-1.1       c1.7,1.3,2.3,2.1-0.2,3.5c-2.3,1.3-5,2.4-6.2,5.2c-0.4,0.3-0.8,0.5-1.2,0.6c-4.1-1.7-6.7,0.6-9.3,3.3c-0.3,0.3-0.7,0.5-1.2,0.7       c-1.9,0.5-4,0.5-5.7,1.9c-0.6,0.3-1.3,0.5-2,0.6c-3.8-0.1-6.7,2.6-10.1,3.7c-1.7,0.4-3.5,0.2-4.9,1.3c-0.4,0.2-0.8,0.4-1.2,0.6       c-1.5,0.4-2.7,1.3-4,2c-0.8,0.3-1.7,0.6-2.6,0.8c-2.8,1.5-5.9,2.2-9.1,1.7c-0.3-0.3-0.4-0.5-0.3-0.8       C332.8,218.1,332.9,217.9,333,217.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("683436"),
                d:
                  "M511.2,145.3c1.9-0.4,3.9-0.8,5.8-1.2c1,0.6,2.7-0.3,3.2,1.4c-4.3,3.6-10,3.5-14.9,5.7       c-14.8,4.2-29.1,9.9-43.5,15c-4.1,1.6-8.4,2.7-12.4,4.5c-1.3,0.5-2.7,0.9-4,1.5c-2.1,0.7-4,1.8-6.3,1.5       c-0.7-0.3-1.3-0.7-1.1-1.6c15.6-7,31.7-12.6,47.8-18.2C494.3,151,502.7,148.1,511.2,145.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("764849"),
                d:
                  "M438,172.1c0.3,0.3,0.7,0.7,1,1c0.1,2-1.5,2.5-2.8,2.9c-9.1,3.2-17.6,7.8-26.8,10.9       c-2.2,0.4-4.2,1.3-6.3,2.2c-2.1,0-4.2,3.3-6.2-0.1C410.4,182.8,424,176.8,438,172.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E5257"),
                d:
                  "M265.9,250c10.7-6,21.7-11.3,33.1-16c0.1,0.2,0.2,0.5,0.3,0.7c-0.3,1.8-1.3,3.1-2.8,4.2       c-7.1,4.6-15.6,6.4-22.6,11.3c-2,1.4-4.4,1.4-6.7,0.8C266.6,250.7,266.2,250.4,265.9,250z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95595C"),
                d:
                  "M333,217.9c0,0.4,0,0.7,0,1.1c-0.5,3.8-4.3,3.4-6.4,5.2c-0.4,0.3-0.8,0.5-1.2,0.7       c-4.1,2.2-8.7,3.1-12.5,5.8c-3.7,2.1-7,5-11.7,4.4c-0.8-0.1-1.5-0.4-2.1-1c0,0-0.1-0.3-0.1-0.3       C309.9,227.8,321.4,222.8,333,217.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("885155"),
                d:
                  "M397,189c2.4,2,3.9-1.5,6.1-0.9c2.2,1.7,0.6,2.5-0.8,3c-3.6,1.4-7.2,3-11.3,2.9       c-5.6,1.1-10.8,3.4-15.7,6.4c-2.1,1.3-3.9,2.3-6.3,0.9C378,196.4,387.4,192.5,397,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5154"),
                d:
                  "M265.9,250c0.4,0.1,0.7,0.1,1.1,0.2c0.4,1.3-0.1,2.6-1,3.1c-5.2,3.2-10,7.4-16.7,7.6       c-1-0.3-1.9-0.8-2.4-1.8c4.4-2.3,8.8-4.6,13.2-6.9C262,251.4,264,250.7,265.9,250z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("947474"),
                d:
                  "M1564,272c8-2.2,16-0.6,24,0c4.4,1.5,9,1.8,13.6,2c17.6,0.7,35,2.3,52.5,4.6c7.8,1.1,15.8,1.8,23.7,2.4       c1.5,0.1,3-0.4,4.2,0.9c0.3,0.6,0.2,1.1-0.3,1.5c-7,2.4-13.8-0.3-20.7-0.6c-17.1-0.6-33.9-4.4-51.1-4.3c-5.4,0-11-0.6-16.3-1.4       c-16.8-2.3-33.5-0.1-50.1,1.6c-2,0.2-3.7,1.4-5.7,1.6c-5.5,1.2-10.9,2.9-16.6,2.9c-1.9,0-4.1,0.3-5.3-1.8       c1.1-2.4,3.5-1.5,5.3-2.1c0.5-0.1,0.9-0.1,1.4-0.2c3.2-0.2,6.4-0.8,9.4-2.1c0.5-0.2,1-0.3,1.4-0.5c9.2-2.8,19-1.9,28.3-4.2       C1562.5,272.4,1563.4,272.7,1564,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("987876"),
                d:
                  "M1682,283c0-0.3,0-0.7,0-1c15.3-0.6,30.3,2.6,45.5,3.7c8.8,0.7,17.4,2.2,26.1,3.1       c9.2,0.9,18.3,2.2,27.4,3.3c0.2,0.5,0.1,0.9-0.2,1.3c-0.9,0.8-2.1,1.1-3.3,1.3c-0.5,0-1,0-1.5-0.1c-2-0.3-4-0.2-6-0.1       c-11.3-1.4-22.6-3.1-34-4c-9.7-0.8-19.3-2.7-29.1-3c-1.5,0-3-0.3-4.3-0.9c-2.9-1.8-6.2-0.9-9.3-1.1c-1.1,0-2.1-0.1-3.2-0.3       c-2.2-0.8-4.6-0.7-6.9-1.2C1682.8,283.7,1682.3,283.4,1682,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A78C8B"),
                d:
                  "M1781,293c0-0.3,0-0.7,0-1c9.5-0.4,18.6,2.6,27.9,3.5c7.7,0.7,15.4,1.7,23,2.6c10.3,2,20.6,4,30.9,5.9       c1.4,0.3,3-0.4,4.2,1c-1.3,1.5-3.2,1.3-4.9,1.4c-3.2,0.1-6.3,0-9.3-1.3c-10.6-2.8-21.5-4.1-32.3-5.6c-7.7-1-15.4-2.9-23.2-2.3       c-0.5,0-1-0.1-1.6-0.3c-0.7-0.2-1.4-0.6-2-0.9c-1.7-1-3.6-0.7-5.4-0.9c-0.5-0.1-0.9-0.2-1.4-0.3c-1.7-0.7-3.7-0.3-5.4-1.2       C1781.3,293.3,1781.2,293.2,1781,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CEBDBE"),
                d:
                  "M2027,637.9c-9.3,1.1-18.6,2.4-27.9,3.6c-8,1-16.1,1.3-24.1,2.5c-6,0.7-12.1,2.1-18.1,0.1       c1.4-3.8,4.9-3.3,7.7-3.4c4.3-0.2,8.4-0.4,12.5-1.8c7.5-0.5,14.9-2.3,22.4-2.4c4.7,0.1,9.5-0.3,14.2,0.3       c1.5,0.2,1.2-0.7,1.5-1.4c0.5-0.3,0.9-0.6,1.5-0.7c5.3,0,10.5-0.9,15.7-2c2.7-0.6,5.6-0.7,8.3,0.7c1,2.7-1.5,2.2-2.6,2.7       C2034.5,637.7,2030.5,636.4,2027,637.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DFD3D4"),
                d:
                  "M1957,644c6,0,12,0,18,0c-1.3,1.7-3.5,1.4-5.1,1.4c-13.8,0.5-27.3,3.2-40.9,4.6       c0.3-2.7,2.7-2.4,4.4-2.9c2.6-0.8,5.3-1.3,7.9-2.1c3.5-1,7.1-1.3,10.6-2C1953.7,642.6,1955.5,642.5,1957,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD424F"),
                d:
                  "M1883.8,642.2c0.8-0.4,2.5-1.1,0-1.1c-3.6-0.1-7.2-0.4-10.8-1.1c-1.3,0-2.6,0-3.9,0c0-0.7,0-1.3,0-2       c-0.6-0.7-0.7-1.4-0.5-2.3c3.7-3.8,6.9,0,10.3,0.8c1.4,2.5,3.7,2.3,6,2.2c5.1-0.2,10.1,0.5,14.5,3.4c-1.5,3.6-4.7,1.7-7.1,2.3       c-1.1,0.1-2.2,0.5-3.1-0.4C1887.2,643.4,1885.5,642.8,1883.8,642.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5C6C6"),
                d:
                  "M1941,646c-3.7,2.3-8.3,1.6-12,4c-1,0-2,0-2.9,0.1c-3.7,1.3-7.4,0.6-11.1,0c-3.4-0.4-7.1,0.9-10-2       c2-2.1,4.6-1.3,7-1.5c6.4-0.4,12.9,1,19.1-1.6C1934.4,644.8,1937.9,643.7,1941,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0C0C1"),
                d:
                  "M2080,626.2c-0.7,0.6-1.3,1.2-2,1.8c-8.5,2.8-17.1,5.1-26,6.2c-1.6,0-3.2,0-4.7,0       c-0.6,0.3-1,0.3-1.5-0.2c0.3-3,2.6-3.1,4.7-3.2c2.9-0.1,5.6-0.6,8.2-1.6c5.7-0.7,11.4-1.6,16.8-3.8c0.8-0.3,1.6-0.4,2.4-0.3       C2078.8,625.1,2079.5,625.4,2080,626.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB8687"),
                d:
                  "M1931.2,646.3c-6.1,2.9-12.6,1.6-18.9,1.8c-2.5,0.1-4.9,0-7.4,0c-0.6,0-1.3-0.1-1.9-0.1       c-3.3-1-3.3-1-2.4-2.7c6.2-1.4,12.5-0.3,18.7-0.7c1.7-0.1,3.4,0,5.1,0c1.9,0.2,3.8-0.1,5.7,0.6       C1930.6,645.4,1931,645.8,1931.2,646.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3C4C5"),
                d:
                  "M2045.7,633.8c0.5,0.1,1.1,0.2,1.6,0.4c-6.5,2.7-13.1,4.4-20.3,3.8c2.7-2.1,5.9-1.8,9-2       c1.8-0.1,3.6-0.6,5-1.9C2042.5,632.6,2044,632.7,2045.7,633.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D5C6C6"),
                d:
                  "M1900,646.1c1,0.6,2.1,1.3,3.1,1.9c-5.2,0.4-9.5-2.4-14.1-4c1,0,2.1,0,3.1,0c1.7-0.8,3.2,0.4,4.9,0.3       C1898.1,644.6,1899.2,645,1900,646.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DFD3D4"),
                d:
                  "M1914.9,650.1c3.7,0,7.4,0,11.1,0C1922.3,652.8,1918.6,651.5,1914.9,650.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63946"),
                d:
                  "M1134,658c-12,0-24,0-36,0c-0.7-0.8-0.6-1.6,0.1-2.3c1-0.7,2.1-1,3.3-0.9c8.9,0.6,17.8-0.8,26.8-0.9       c7,0,14.2-1.1,21.3-1.2c5,0,10.1-0.6,15.1,0.5c5.7,2.2,11.4,2.2,17.1-0.1c1.8-0.6,3.6-0.6,5.5-0.6c28.3-0.1,56.6-0.1,84.9,0.2       c1.5,0,3,0,4.5,0.4c5.4,1.7,11.1,1.3,16.6,1.5c5.1,0.2,10.2-0.3,15.3,0.4c2.6,1.1,5.6,0.2,8.2,1.6c0.5,0.4,0.6,0.9,0.3,1.5       c-52,0-104,0-156,0.1c-2.3,0.7-4.6,0.7-7,0c-0.7,0-1.3,0-2,0c-1.7,0.7-3.3,0.8-5,0C1142.7,658,1138.3,658,1134,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53B49"),
                d:
                  "M1317,657.9c0-0.3,0-0.6,0-1c-3-0.9-6.4-0.7-8.2-4c0-0.9,0.6-1.4,1.3-1.7c1.9-0.5,3.8,0.2,5.7-0.5       c17.9-0.7,35.8-0.3,53.7-0.2c1,0,2,0.2,2.9,0.7c2.4,1.9,1.6,4.4,1.4,6.8c-7.6,0-15.2,0-22.8,0c-3.3,1.3-6.7,0.2-10,0       C1333,658,1325,658,1317,657.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89444B"),
                d:
                  "M1154,658c2.3,0,4.6,0,7,0C1158.7,659.5,1156.3,659.5,1154,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89444B"),
                d:
                  "M1147,658c1.7,0,3.3,0,5,0C1150.3,659.5,1148.6,659.4,1147,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2629"),
                d:
                  "M1230,192.8c1.8-2.7,3.6-0.4,4.9,0.3c12.7,7,25.5,14,38,21.3c11,6.4,22.3,12.1,32.8,19.3       c0.2,0.1,0.8-0.4,1.2-0.6c1,0.6,2,1.3,3,1.9c15.2,8.8,30.8,17,45.9,26c0.7,0.4,1.3,0.7,2,1.1c2.6,1.8,5.9,2.4,8.1,4.8       c0.3,0,0.6,0,0.9,0.1c3,1.8,6.1,3.2,9.2,4.8c1.8,0.9,2.9,1.8,0.8,3.6c-0.7,0.4-1.4,0.5-2.2,0.5c-0.8,0-1.7-0.1-2.4-0.5       c-8.7-5.3-18.6-8.2-26.8-14.3c-1.2-1.4-2.5-2.5-4.3-3.1c-0.9-0.3-1.7-0.8-2.4-1.4c-21.1-13.3-43-25.2-64.5-37.9       c-13.2-7.3-26.2-15-39.6-22.1C1233,195.8,1230.9,195,1230,192.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("812C33"),
                d:
                  "M1374.9,275c0.8,0,1.5-0.1,2.3-0.1c1.6-1.4,3.3-1.9,5.4-0.9c2.4,1.1,5,1.2,7.5,1.9       c5.9,0.8,11.4,3.2,17.1,5c-1,1.3-2.4,1.3-3.9,1.4c-8.8-0.4-17.4-2-26.1-3.3c-0.5,0-1-0.1-1.4-0.3       C1374.1,277.8,1374.5,276.4,1374.9,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F6A6B"),
                d:
                  "M1355.9,261c-7.9-2.8-14.7-7.6-22-11.5c-7.1-3.8-14.3-7.5-21.2-11.8c-1.2-0.7-2.2-1.5-2.8-2.7       c1-0.3,1.9-0.2,2.9,0.3c14,8.1,28,16.1,42,24.2C1355.3,259.8,1355.6,260.5,1355.9,261z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F4852"),
                d:
                  "M1403,281.1c1.4-0.1,2.8-0.1,4.2-0.2c6.8-1.8,13.4-0.2,20,1c-0.9,1.3-2.4,1.7-3.8,2       c-5.2-0.6-10.4-0.5-15.6-0.6C1405.9,283.3,1403.6,283.8,1403,281.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("965F61"),
                d:
                  "M1390.1,276c-2.6,0.6-5-0.2-7.2-1.2c-2.1-0.9-3.8-0.3-5.7,0.1c0.8-2.3-1.2-2.2-2.3-3       c-2.6-1.7-6-2.1-7.9-4.9C1374.7,270,1382.4,273,1390.1,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A2434"),
                d:
                  "M1424.1,282.8c1-0.3,2.1-0.6,3.1-0.9c3.9,0,7.9,0,11.8,0c1,0.1,1.9,0.2,2.9,0.3       c-0.9,2.9-3.4,1.9-5.3,2.2C1432.4,283.8,1427.9,285.8,1424.1,282.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F6A6B"),
                d:
                  "M1366,267c-2.8-1.5-6-2.2-8.1-4.8C1361.2,262.8,1364.3,263.8,1366,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791526"),
                d:
                  "M1771.3,466.8c-1.2-1.1-1.2-1.8,0.6-1.9c1.9-1.2,4-1.5,6.1-1.6c6.4-1.6,13-2,17.5-3.6       c-4.5,1.1-11,2.1-17.4,3.4c-2.1,0-4.1,1-6.2,0.7c-3.6-0.5-5.4-4.4-9-5c-12.6-10.7-27.4-17.6-42.4-24c-0.6-0.3-1.1-0.6-1.7-1       c-0.4-0.7,2.7-0.5,0.5-1.6c-1.6-0.8-3.7-1.5-3.4-3.7c0.3-2.2,2.5-2.9,4.4-3.6c6.7-2.6,13.5-3.3,20.5-1.3       c2.5,0.7,5.3,0.3,7.9,0.7c3.5-0.5,7-0.5,9.7,2.2c2.2,2.2,4.3,0,6.5,0.2c1.2,0.1,2.4,0.5,3.4,1.2c2.5,1.7,4.4,3.5,0.5,5.8       c-1.7,1-2.2,2.6-1.6,4.3c1.3,4.1-0.6,5.7-4.4,6.3c-1.8,0.3-3.7,0-5.3,0.8c3.6,0.2,7-1.3,10.5-1.9c2.7-0.4,5.8-1.3,7.1,2.5       c0.5,1.4,1.2,0.8,1.9,0.5c1-0.5,0.9-1.1,0.2-1.9c-2.8-3.2-0.5-5.9,0.8-8.8c6.9,0.6,13,3.4,18.9,6.9c0.3,0.2,0.4,0.2,0.4-0.1       c0-0.9,0.5-1.6,1.3-1.9c0.5-0.1,0.9,0,1.4,0.1c1.2,0.9,0.4,2.4,0.9,3.6c-0.1-2.2,1.6-2.2,3.1-2.4c1,0,1.9,0.1,2.8,0.4       c0.7,0.3,1.3,0.6,2,0.9c3.8,1.9,8.9,1.1,11.5,5.6c-2.4,4-7.2,6.5-10.9,4.8c-2.7-1.3-4.8-1-7.2,0.4c-4.9-1.4-6.7-6.5-10.5-8.5       c4.6,3.1,7.4,9.1,13.7,10.6c0.9,0,1.8,0.1,2.5,0.6c0.4,1.3-0.5,2.6,0.4,3.8c3.3,2.4,5.2,6.3,8.8,8.3c0.3,0.8-0.1,1.4-0.6,2       c-2.2,2.1-4.5,3.9-7.6,4.3c-3.4,0.7-7,3-10.1-0.8c-0.3-0.4-0.5-0.8-0.7-1.3c-0.2-1.5,0.3-2.9,0.8-4.3c0.7-2,2.6-2.9,4.3-4.9       c-5.8,0.9-11-1.4-16.3,0.2C1781.9,465.5,1776.6,466.3,1771.3,466.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1583,430.8c-0.7,0.1-1.3,0.1-2,0.2c-1.4-0.9-2.7-1.9-4.3-2.5c-3.3-1.3-6.1-2.9-2.7-6.6       c-1.2-2.2-5.5,2.1-4.8-2.9c0.1-0.9-0.6-0.2-0.8-0.1c-2.1,0.6-4.5,0.4-6.1,1.9c-4.5,4.5-10.5,4.9-16.3,5.7c-2,0.3-2.9,0.4-3,2.7       c-0.2,2.3-2.6,2.9-4.5,3.2c-1.9,0.3-2.4-1.4-2.9-2.8c-0.5-1.5-1.3-2.7-2.9-3.2c-2.9-1.5-1.9-3-0.1-4.6       c7.2-3.2,14.9-4.8,22.6-6.4c1.3,0.9,2.6,1.9,4.9,1.9c-1.9-0.7-3.7-0.2-4.3-2.1c4.4-3.4,10.2-2.7,14.9-5.1       c3.7-0.7,7.2-2.2,10.8-3.1c1.8-0.5,3.5-0.1,5.4,0.1c0.5,0.3,0-1-0.1-0.4c0,0.3-0.1,0.2-0.5,0.1c-1.3-0.4-2.2-1.1-1.6-2.5       c0.6-1.4,1.9-1,3-0.5c1,0.5,1.9,1.3,2.9,1.8c0.5,0.6,0.8-0.7,0.5-0.1c-0.1,0.1-0.2-0.1-0.4-0.2c-1.5-0.7-1.6-1.9-1.2-3.3       c0.5-0.9,1.3-1.8,2.3-1.7c7.8,0.4,14.7-3.4,22.3-3.9c3.6-0.2,4.7,2.1,5.7,4.5c1.3,2.9-1.1,3.7-3.2,4.5c1.1,0.1,2.1-0.6,3.1-1.1       c4.6-2.4,4.6-2.5,7,2.5c0.1,0.2-0.7,0.9,0.6,0.7c4.3-0.6,8.5-0.9,11.5-4.6c2.1-2.6,5.2-2.5,7.1-0.6c2.1,2.2,1.6,4.9-2.1,6       c-0.4,0.1,0.8,0.7,1,1.1c0.4,0.2,0,0.9,0.5,1c0.4,0,0.4-0.7,0.8-0.9c0.2,0,0.3-0.1,0.5-0.1c0.2,0,0.3,0.1,0.5,0.1       c-1.3-2.6,0.1-4.1,2.3-4.8c1.3-0.5,1.6-0.6,0.7-1.8c-0.7-0.9-0.5-1.9,0.6-2.4c1.2-0.5,2.3-0.1,3,1.1c1.2,2.2,1.9,4.6,1.7,7.2       c-0.3,1-1.9,1.8-1.4,2.4c4,4.4-0.4,4.7-2.5,6c1.2,0.1,2.9-0.3,2.6,2.1c-2.2,2-4.6,1-6.9,0.3c-2.4-4.8-4-5.6-10-5       c-4.3,0.4-8.6-0.1-12.8,0.1c-1.1,0.6-1.5,2-2.7,2.3c0.1,0-0.2-0.1-0.2-0.1s0.1,0,0.2,0c1.4-0.3,1.6-2.2,3.1-2.3       c4.4,1.4,8.7,0.2,13.1,0.2c3,0,7.3-1.7,7.7,3.9c0.1,0.8-0.1,1.4-0.6,2c-15.6,0.1-31,2.1-46.2,5.2c-0.6,0.1-1.1,0.6-1.7,0.9       c-0.7,0-1.3,0.1-2,0.1c-2.5,1.3-4.7-0.8-7.1-0.7c-1.3,0.1-1-1.3-0.9-2.3c0.1-1.3,1.2-2.3,1-3.8c-1.8-1-3.4-0.5-5.1,0.2       c-0.4,0.3-0.8,0.5-1.2,0.7c-0.8,0.6-1.8,0.8-2.3,2.1c1.5,1.2,4.4,0,5.2,2.7C1585.2,428,1584.5,429.6,1583,430.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1827"),
                d:
                  "M1654,419c-1-1.5-2.7-0.7-4.1-1.2c0.4-1.4,1.7-1.4,2.6-2c1.3-0.9,3.8-1.1,0.7-3.4       c-1.7-1.2,0.2-2.8,1.9-3.4c1.2-0.4,2.3-1.1,3.2-2c1.9-0.8,3.5-1,2.7,1.9c-0.4,1.4-1,2.8-3.6,3.8c5.3,0.6,9.8-0.4,14.2,0.4       c0.6,0.1,0.3-0.8,0.3-0.2c0,0.1-0.2,0-0.5,0c-3.2-0.3-3.4-2.5-2.7-4.7c0.9-2.8,2.7-0.8,4-0.2c2,0.8,3.9,0.8,5.8,0       c1.8-0.8,4.4-0.1,3.9,1.4c-1.3,3.9,2.3,3.9,3.4,5.6c-0.4-4.3,1.7-7.1,5.5-8.9c1.8-0.9,3.4-0.7,3.3,1.9c0,4.5,1-0.6,1.3,0.1       c3-1.5,4.8,2,7.5,1.7c-3-0.9-3.6-3.4-2.7-5.6c1.1-2.7,4.4-2.5,6.8-2.6c1.6-0.1,3.2,0.6,4.8-0.3c3.1-0.6,5.7,1.1,8.6,1.8       c1.2,0.4,2.3,0.8,3.4,1.4c0.6,0.4,1.1,1,1.5,1.6c0.6,1.8,1.7,2.6,3.6,2.8c1.7,0.2,3.3,0.7,3.5,2.8c0,0.3,0,0.7-0.1,1       c-1.1,2.8-3.7,5.4-1.9,8.8c-1.6,0.9-3.3,0.8-5,0.3c-5.2-2.2-9.7-0.9-13.8,2.6c-1.3,1.1-2.5,2.9-4.3,0.3c0.5,1,1.1,1.5,1.6,2.1       c-0.1,2.9-2.9,1.8-4.2,3c-4-1.3-8.1-2.6-12.1-3.9c-1.3-1.9-3.5,0.4-5-1l-0.1,0c-3-2.9-6.8-1.8-10.3-2.1       c-5.6-0.5-10.4-3.9-16.2-3.5c-2.1-0.2-4.1,0.8-6.2,0.5C1654.8,419.7,1654.3,419.4,1654,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781922"),
                d:
                  "M1705,429.9c0.5-2,3-1.5,3.9-2.9c4.9-3.2,10.2-5.4,16-6c2,0,4,0,6,0c1.4-1.4,3-1.2,4.7-0.9       c2.9,1.4,6,1.8,9.3,1.5c1.9,0.1,3.8-0.1,5.5,0.8c1.8,2.2-0.6,2.6-1.5,3.6c-5.8-0.1-11.5-2-17.3-2.1c-4.6-0.1-8.5,1.8-12.5,3.2       c-0.7,0.2-2.5,0.4-2.4,2c0.1,1.7,1.9,1.1,2.5,1.8c1.4,1.5,3.8,0.7,5.8,2.1c-2.2,1.6-4.3,0.8-6.1,1.1       C1714.3,432.7,1709.7,431.3,1705,429.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1823"),
                d:
                  "M1654,419c0.3,0,0.7,0,1,0c2.2,1.1,4.2,0.3,6-1c3.5-0.2,6.8,0.4,10,2.2c3.4,1.8,7.2,1.9,11.1,1.8       c2.4-0.1,5.1-0.4,5.9,3c-7-1-14-2-21-3.1c-1.9-1.1-4.2,0.2-6.1-0.9c-5.3-0.1-10.6-0.1-15.9-0.2c0-0.6,0-1.3,0-1.9       c0.7-0.6,1.3-0.6,2,0C1649.3,419.5,1651.7,420.8,1654,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1688,425c1.5,1.1,4-3.1,5,1C1691.3,425.8,1689.4,426.6,1688,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1660.9,421.1c2,0.2,4.3-0.8,6.1,0.9C1664.9,421.8,1662.7,422.6,1660.9,421.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF4654"),
                d:
                  "M901.9,102.1c5.6,1.8,11.4,0.2,17,1.1c-0.9,3-3.4,3-5.7,2.6c-3.7-0.6-7.3-0.4-10.9-0.4       c-24.3,0-48.5,0-72.8,0c-1.4,0-2.8,0.2-4.2,0.3c-4.5,0-9.3-1.4-13.5,1.4c-7.2,0.8-14.4,0.3-21.6,0.4       c-8.1-0.4-16.2,0.5-24.8,0.4c1.4-3.1,3.3-1.8,4.5-2.5c3-0.1,6-0.2,9-0.3c4.3-1.2,8.7,0.3,13-0.8       C828.5,101.3,865.2,101.8,901.9,102.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF444E"),
                d:
                  "M769.9,105.3c-1,0.4-1.9,0.8-2.9,1.2c7.7-1.1,15.4-0.3,23.1-0.5c0.7,4-2.4,2.9-4.4,3.3       c-9.4,2-19,1.9-28.4,3.3c-0.8,0.2-1.7,0.2-2.5-0.1c-4.6-2-9.4-1.2-14.2-0.7c-3.3,0.3-6.4,1.4-9.8,0c-1.6-0.6-3.2,0.1-4.8,0.7       c-3.1,1.1-6.2,1.3-8.9-1c-0.4-0.5-0.4-1-0.1-1.5c5.7-0.7,11.3-1.3,17-2c1.8-0.2,3.6,0.3,5.2-0.9       C749.4,106.5,759.7,105.9,769.9,105.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF444E"),
                d:
                  "M791.9,104.1c-4.2,1.9-8.7,0.4-13,0.8C783.2,103.4,787.6,104.3,791.9,104.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983E49"),
                d:
                  "M249,260c6.9-1.6,13.1-4.5,18-9.9c3.2,0.1,5.9-1,8.8-2.6c6.8-3.8,13.8-7.2,21.2-9.5       c0.1,0.2,0.3,0.4,0.4,0.6c0.2,0.8,0,1.4-0.5,2c-4.9,3-9.5,6.5-15.4,7.7c-4.2,0.8-6.1,5-9.7,6.6c-6.7,3-13,6.5-18.4,11.4       c-1.9,1.7-3.9,2.9-6.6,3.1c-3.4,0.3-6,2.5-7.2,5.4c-1.2,3.1-3,4.4-6.1,4.7c-1.7,0.2-3,1.2-3.6,3.2c7.7,3.2,15.6,3.1,23.6,2.1       c1.9,0,3.7,0.1,4.6,2.2c-0.3,4.9-4.6,0.4-6.2,2.7c3.7,2.6,8.2,0.3,12.1,2c-5.3-0.2-10.3,0.6-15.3,2.2c-1.9,0.6-3.5,0.8-3.7,3.1       c-1.3-0.3-2.6,1.8-4,0.1c-4.4-3.3-0.8-3.8,3-5c-7.1-0.2-13,0.3-18.6-1.4c-1.1-1-2.2-1-3.8-1c-4.7-0.1-9.9,1-13.8-3.2       c-1.5-1.6-4.2,0.7-5.8-1.4c-0.2-0.4-0.2-0.9,0.1-1.3c1.5-1,3.4-1.2,4.7-2.6c6.3-2.4,10.5-7.8,16.1-11.2       c7.6-2.3,14.6-6.4,22.1-9C246.4,260.6,247.5,259.4,249,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F3A43"),
                d:
                  "M225,290c5.8-0.2,11.5,1.6,17.3,0.2c1.2-0.3,2.9,0.4,3.1,1.8c0.3,1.8-1.4,2.1-2.7,2       c-3.4-0.5-2.5,1.3-1.7,3.1c-0.7,0-1.3,0-2,0c-6,2.2-12.2,1.1-18.4,1.4c-11.1-0.8-22.2,0.6-33.3,0.1c-2-0.1-4,0.1-5.9-0.5       c-3.6-3.2,0.5-3.7,1.9-4.5c2.7-1.6,6.1-0.3,9-1.3c4.3-3.1,9.3-1.6,14-2C212.5,289.7,218.8,289.7,225,290z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F454E"),
                d:
                  "M221,297c5.5-0.6,11.1,1.3,16.5-1.1c0.3-0.1,1,0.7,1.5,1.1c1,5.4,5.8,3,8.7,3.7       c3.5,0.8,7.4,0.2,11.2,0.7c-11.3,0.7-22.7,0.1-33.9,1.5c0-2.6-2-1.5-3.2-1.6c-6.6-0.7-13.3,0.7-19.9-0.6       c-2.1-2.1-1.4-2.9,1.3-3.2c4-0.5,8,0.4,11.9,0C217.1,297.3,219.1,298,221,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993844"),
                d:
                  "M203,300c8.5,0,16.9,0,25.6,0c-0.6,2.7-3,1.4-3.6,3c-1.3,0-2.7,0-4,0c-5.3,0-10.7,0-16,0       C204.1,302.1,201.5,302.4,203,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EFEAEA"),
                d:
                  "M1458.8,282.1c5.5,0,11-0.1,16.4-0.2c0.3,0,4.3,1.8,1.6-1.7c-0.3-0.3,1.1-0.9,1.9-1.2       c2.2-0.9,4.5-1.2,6.8-0.9c10.3,1.1,20.4-1.7,30.6-2.1c3-0.1,5.6-3.5,8.9-1.2c-0.4,1.7-1.7,2.2-3.1,2.6       c-10.5,2.1-20.6,5.9-31.5,6c-4,0-8,0.2-11.8,1.4c-1.1,0.3-2.2,0.4-3.3,0.5c-0.5,0-1.1,0.1-1.6,0.1c-1.3,0-2.7,0-4,0       c-3.4-0.9-7-0.5-10.4-1.7C1458.8,283.2,1458.7,282.7,1458.8,282.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE9A99"),
                d:
                  "M1564,272c-4,2.9-9,3-13.6,3.5c-6.2,0.7-12.3,1.6-18.4,2.5c-0.2-1.3-3.9-1.8-1-3.9       c0.7-0.1,1.3-0.2,2-0.3c0,0,0.1,0.5,0.1,0.5c3.2,1.2,6-0.8,9-1.2c4,1.2,7.8-1.4,11.8-0.8C1557.3,273.8,1560.6,270.9,1564,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A1434F"),
                d:
                  "M1458.6,282.8c3.8,0.4,7.5,0.8,11.3,1.1c0.3,1.4,4.1-0.6,2.6,2.6c-7.5,0.5-14.9,0.1-22.3-0.7       c-4.3-0.5-8.7,0.5-12.8-1.2c-0.6-0.4-0.7-0.9-0.4-1.5c1.7-0.3,3.5,0.5,5-0.9c3.1,0,6.2,0.1,9.3,0.1       C1453.7,282.9,1456.2,282.1,1458.6,282.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BCACAB"),
                d:
                  "M1531,274.1c-1.8,1.9,2.8,2.1,1,3.9c0,0,0,0,0,0c-0.9,0.8-2.1,0.4-3.1,0.5c-2.3-0.8-5.6,1.2-6.9-2.5       c1-0.4,2-0.8,3-1.3C1527,274.5,1529,274.3,1531,274.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1458.6,282.8c-2.5,0.1-5,0.6-7.4-0.5c2.5,0,5-0.1,7.6-0.1C1458.9,282.4,1458.8,282.6,1458.6,282.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("53101D"),
                d:
                  "M223,271c-5.1,4.1-9.5,9-16,11.1c-1.4,1.3-3.4,1.2-5,1.9l0,0c-4.5,2.9-9.7,3.8-14.7,5.3       c-3.6,1.1-7.3,2-10.9,3c-6,1.3-11.6,3.6-17.6,4.7c-1.6,0.3-3.1,1.2-4.7,0c0.7-3.6,3.5-5,6.6-6.1c10-3.4,20-6.9,30-10.3       c0.9-0.3,1.6-1.1,2.4-1.6c2.7-3.7,7.3-3.2,11-4.6c3.6-1.4,7.5-2.2,11.3-2.8c1.5-0.8,3.3-0.6,4.6-1.7l-0.1,0       C221,269.7,222.7,268.5,223,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("823C44"),
                d:
                  "M154,297c7.3-2,14.7-4,22-6c3.1,0.9,6-0.8,9.1-0.4c2.7,0.4,5.6,0.3,7.9,2.3c-1.8,1.8-4,0.9-6,0.9       c-2.6,0-4.6,0.8-6,3.1c0.1,2.1-1.6,1.7-2.8,1.9c-6.1,0.7-12.3-0.1-18,1.7c6.6,0.3,13.6-0.7,20.6-0.3c1.9,0.1,4.2-0.3,4.2,2.8       c-0.3,0-0.7,0-1,0c-5.4,1.1-10.8,0.2-16.2,0.5c-1.9,0.1-3.9-0.5-5.8,0.5c-5,0.1-10.1,0-15-1C149.3,301,151.7,299,154,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("794C4F"),
                d:
                  "M215.9,271.9c-7.6,2.4-15.3,4.7-22.9,7.1c-5.3-0.4-9.9,2.5-15,3c-2.1-0.4-4.1-0.8-6.2-1.1       c5.4-2.8,11.8-2.3,17.3-4.8c8.9-1.8,17.8-3.5,26.8-5.3C216.4,271.1,216.4,271.5,215.9,271.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("562F31"),
                d:
                  "M145,294c-0.9,0.3-1.9,0.5-2.8,1c-1.4,0.7-2.6,3-4.2,1.6c-1.8-1.6,0.4-3.3,1.1-4.7       c2.2-4.3,6-3.8,9.8-2.8C147.6,290.7,146.3,292.4,145,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("683337"),
                d:
                  "M223,271c-0.7-1.3-2.1-0.8-3.1-1.1c7.4-3.6,15.1-6.4,23-8.9c1.2-0.1,2.8-1.4,3.1,1.1       c-4.9,0.6-8.9,3.5-13.2,5.4C229.5,268.8,226.3,270.2,223,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("835455"),
                d:
                  "M245.9,262c-0.7-1.3-2.1-0.8-3.1-1.1c1.2-1,2.5-1.7,4.1-1.9c0.8,0.1,1.6,0.2,2.1,1       C248,260.6,246.9,261.3,245.9,262z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F5F3F4"),
                d: "M152,280c1.9-2.3,4.5-2,7-2C157,279.7,154.5,280.1,152,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F5F3F4"),
                d:
                  "M151,281c-1.9,1-3.9,1.1-6,1c1.7-1.4,3.8-1.9,6-2C151,280.3,151,280.7,151,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("683337"),
                d:
                  "M215.9,271.9c0-0.4,0-0.8,0-1.1c1.2-0.8,2.6-1,4-1C219.1,271.5,217.2,271.1,215.9,271.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8434E"),
                d:
                  "M505,150c5-1.7,10-3.3,15-5c1.5-2.5,4.4-2.2,6.6-2.8c7.1-2,14-4.8,21.5-5.1c8.3-1.7,16.5-3.5,24.8-5.2       c0.2,0.2,0.3,0.4,0.5,0.5c-0.3,3.7-3.2,4.6-5.9,4.7c-3.2,0.1-6.1,2.5-9.5,0.8c-0.8-0.4-1.2,1.2-1.9,1.7c-2.8,2.1-6.2,3.1-9.1,5       c-0.4,0.2-0.9,0.4-1.4,0.5c-6.1-1-11.4,1.2-17.1,3.2c-6.2,2.3-13.1,2.9-19.7,4.4C506.9,152.9,505,152.8,505,150z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A94851"),
                d:
                  "M717,110c0,0.3,0,0.7,0,1c0.1,1.6-1.2,2-2.3,2.1c-5.3,0.6-10.5,1.6-15.6,2.6       c-8.1,1.5-16.5,0.8-24.5,3.2c-4.9,1.5-10.2,0.8-15.3,1.6c-7.5,1.2-15,2.7-22.6,2.9c-3.6-0.2-7.4,1-10.8-1.4       c0.7-1.1,1.9-0.8,3-1.1c20.3-2.7,40.6-5.4,60.9-8.2c0.5-0.1,0.9-0.4,1.3-0.6C699.8,111.4,708.4,110.7,717,110z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A54853"),
                d:
                  "M572.9,131.9c12.5-3.9,25.6-5,38.3-7.8c3.9-0.8,7.8-1.3,11.7-1.9c-1.2,3.6-3.6,5.5-7.5,5.1       c-2.1-0.2-3.7,1.1-5.5,1.8c-7.7,0-14.9,2.2-22.3,3.9c-4.7,1.1-9.8,1.7-14.5-0.8L572.9,131.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE434D"),
                d:
                  "M611,128c0.2-1.4,1-2.2,2.3-1.9c4,0.7,7.1-0.9,9.6-3.8c1-0.1,2.1-0.1,3.1-0.2c3.7,0,7.3,0,11,0       c1,1.3,1.3,2.7,0.7,4.2c-3.3,2.6-7.3,2.7-11.2,3.1c-3.8,0.3-7.6,0.2-11.5,0.1C613.6,129.3,612.1,129.3,611,128z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("62292C"),
                d:
                  "M548.1,137.1c-9.4,2.6-18.7,5.3-28.1,7.9c-1.1-0.1-2.3,0.2-3-1c4.7-1.6,9.5-3.2,14.2-4.8       c4.9-1.2,9.8-2.4,14.7-3.5C546.3,136.7,547.2,137,548.1,137.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A6F6E"),
                d:
                  "M106,586.1c-7.5-5.8-10.2-14.1-11.9-22.9c-0.2-1.1,0-2.3-0.9-3.2c-0.1-1-0.1-1.9-0.2-2.9       c-0.6-5.6-1.6-11.1-3-16.5c-1-4.3-0.4-8.6,0.9-12.8c1.3-4,1.9-8.1,1.7-12.2c0.3-0.6,0.8-0.8,1.5-0.7c3.1,3.5,2.4,7.7,2,11.8       c-1.9,9.9-1.7,19.6,2.2,29c0.3,2.1,0,4.3,0.7,6.4c0.8,3.4,0,6.9,0.8,10.2c0.9,3.1,3.2,5.3,4.8,8       C105.6,582,107.5,583.7,106,586.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3DFDF"),
                d:
                  "M93,515c0.5,5.4,0.2,10.6-1.5,15.8c-1.1,3.4-0.8,6.9,0,10.4c1.2,5.2,1.9,10.5,1.4,15.8       c-2.6-10.1-7.9-20.2-3.3-30.7c2.4-5.4,2.6-10,0.1-15.1c0.2-0.2,0.3-0.3,0.5-0.5c1-0.1,1.7,0.4,2.3,1.2       C93,512.9,93.7,513.8,93,515z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3DFDF"),
                d:
                  "M88,510c-1-2.3-2-4.6-3-7c0-2.3-0.1-4.6-0.1-6.8c-0.5-5.4-0.7-10.8,0.1-16.3c0.1-3.4,1.1-6.7,2.1-9.9       c0.4,0,0.8,0.1,1.3,0.1c1.9,2.5,0.4,5.1,0.1,7.7c-1.1,10.3-2.7,20.7,2,30.6c0.4,0.8,0.2,1.6-0.2,2.4c-0.2,0.1-0.3,0.3-0.5,0.4       C89.2,510.8,88.6,510.4,88,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("644848"),
                d:
                  "M90.3,510.8c-6.4-11.2-4.2-23-2.9-34.8c0.2-2,0.6-3.9,0.9-5.9c1.9-3.4,3.8-6.8,5.7-10.2       c1-1.7,1.5-3.7,2.7-5.3c2.2-3.2,3.6-7,6-10.1c1.1-0.7,2.2-1.3,2.9,0.5c-0.9,5-4,9.1-5.6,13.9c-8.3,6.7-8.6,16.4-9.3,25.7       c-0.7,8.5-1.1,17.2,2.1,25.5c0.1,0.9-0.1,1.6-0.8,2.2C91.3,511.8,90.8,511.3,90.3,510.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A6261"),
                d:
                  "M103,445c-2,3.3-4.1,6.7-6.1,10c-0.5-0.7-0.5-1.3,0-2c3.7-6,6-12.7,8.8-19.1c0.5-0.4,0.9-0.4,1.4,0       C108.4,438.5,105.4,441.6,103,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("816463"),
                d:
                  "M124,407c0.3-0.4,0.6-0.8,0.9-1.1c1.4,1.2,1.2,2.8,1,4.4c-0.2,1-0.7,1.9-1.2,2.7       c-1.4,1.9-2.6,4-4.3,5.6c-0.9,0.8-1.8,1.6-3.1,1.6c-0.2-0.1-0.4-0.3-0.6-0.4C118.3,415.1,123.4,412.3,124,407z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("816463"),
                d:
                  "M107,434c-0.4,0-0.8-0.1-1.3-0.1c3.7-4.7,7.4-9.4,11.1-14.1c0.1,0.1,0.3,0.2,0.4,0.4       C116.8,427,112.1,430.6,107,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9AEAD"),
                d:
                  "M96.9,453c0,0.7,0,1.3,0,2c-1,1.6-2,3.3-3,4.9C93.9,457.1,95.2,455,96.9,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A122C"),
                d:
                  "M245,351c-1.5-1-2.9-2.1-4.5-2.8c-0.6-0.3-2-0.8-2.4,0.5c-0.2,0.6,1.4,0.9,1,2.4       c-3.4-1.8-7.8,0.5-10.8-4.1c-1.6-2.5-5.4-3.7-6.7-7c3-0.3,4.7,3.3,8,2.5c-1.9-0.8-2.9-2.3-3.8-4.3c4.2,0.1,7.8-1.1,10.7-4.7       c-4.4,4-5-1.7-7.5-2.4c1-1.5,2.6-0.9,4-1c1.1-1,2.8-0.3,4-1.1c2.8-0.4,1.6-4.1,4-4.8c0.3-0.3,0.7-0.7,1-1       c1.1-0.9,3-0.8,2.9,0.2c-0.4,4,2.5,5.1,4.9,6.8c1.1,0.8,2.1,2,1.5,3.4c-0.7,1.8-2.3,1.6-3.7,1c0.5,2.9,8.8-1.3,5.4,5.6       c0.5,0.3,1.3,0.5,1.8,0.2c5.1-3.2,8.1,1.9,12,3.1c2.5,0.8,1.4,3.2-0.6,4.6c-6.3,1.8-12.6,3.6-19.1,4.1       C246.2,352,245.5,351.7,245,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("71132F"),
                d:
                  "M266,347c0.4-0.6,1.4-1.5,1.2-1.9c-1.2-3.4-5.3-0.3-6.1-2c-1.2-2.5-1.4-4.2-4.5-1.8       c-2.5,1.9-4.8-0.5-7.3-0.8c0.9-2.3,3.6-0.7,4.1-3.4c-4,1.4-6.2-2.5-10-2.3c1.6-2.5,3.4-1.6,5.1-1.1c0.8,0.2,1.8,0.5,2-0.6       c0.1-0.5-0.3-1.4-0.7-1.7c-3.1-2-7.2-3.2-6.3-8.3c-0.5,0-1,0-1.5-0.1c-0.5-1.8,1.3-1.4,2-2c2.6-0.4,5.1,0.6,8-0.2       c2.8-0.8,5.6,2,8.7,2.3c1.6,0.1,3.2,2.4,3,3.5c-0.5,2.7,1.7,3.2,2.7,4.6c1,1.5,2.3,1.9,3.7,0.5c1.8-1.7,3.5-1.4,5.2,0.1       c1.6,4.4-2,7.4-3.2,11c-0.5,1.6-1.1,3.4-1.7,5.1c-0.3,0.4-0.7,0.6-1.2,0.7C267.9,348.4,266.8,348,266,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D152F"),
                d:
                  "M275,332c-1.5,0.1-3.2-1.9-4.4,1.1c-0.5,1.3-3.3,2.7-4.3,0.1c-1.1-2.8-3.6-3.1-5.6-4       c0.2-1.9,2.9,0.4,2.6-1.9c-2.4,0.5-0.9-4.7-4.2-2.9c-0.6,0.3-1.1,1.4-2,0.3c-3.3-4.4-6.8-2.9-10.7-0.6c-0.7-1,0.7-4-2.4-3.2       c0.6-2.2,3.7-2.4,4-4.9c0.7,0.3,1.3,0.6,2,0.9c0.4-0.3,0.7-0.7,1.1-1c3,4.1,9.4,0.2,12.1,5c0.9-1.9,4,3.2,4.3-1.3       c0-0.7,1.7-0.8,2.1,0c1.3,2.9,6.1,3.5,4.8,8.1c-0.5,1.6,1.2,2.1,2.6,2.3C277.3,331.6,276.6,332.3,275,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("71132F"),
                d:
                  "M241,324c-0.7,2.4-0.6,5.4-4,6c-0.8-0.8-0.7-2-1-3C237,325,238.6,323.8,241,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631128"),
                d:
                  "M236,327c2.7,0.2,0.6,2,1,3c-1.3,1.8-2.7-0.4-4,0C233.7,328.7,234.6,327.6,236,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A333B"),
                d:
                  "M241.7,318.9c0.9-1.4,1.5-3.1,3.2-3.8C244.6,317,244.3,318.9,241.7,318.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB434C"),
                d:
                  "M989.1,109.9c1,0.1,2,0.1,2.9,0.2c4.6,2.2,9.4,2.9,14.5,3.1c1.8,0.1,5.3-1.2,4.7,3       c-3.5,3.9-7.7,0.8-11.6,1.3c-4,0.3-7.9,0-11.7-1.3c-4.6-1.5-9.4-1.4-14.2-1.7c-1.9-1.3-4.1-0.8-6.2-1.3       c-0.9-0.2-2.2-0.4-2.2-1.5c-0.1-1.6,1.4-1.6,2.4-1.8c1.8-0.3,3.6-0.2,5.3-0.7c3.4,0,6.7-0.4,10,1.2       C984.7,111.1,987,110.7,989.1,109.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE4851"),
                d:
                  "M989.1,109.9c-1.3,3.8-5,2.6-6.6,1.7c-3.2-1.8-6.3-1.5-9.5-1.6c-4.6,0.4-9.1,1.3-13.7,1.2       c-2.7-0.5-3.7-2.1-2.9-4.8c0.4-0.6,0.9-0.8,1.5-0.5c1.6,0,3.3,0.1,4.9,0.1c7.5,1.9,15.3,1.6,22.9,3       C986.9,109.2,988.1,108.9,989.1,109.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE4851"),
                d:
                  "M1011,116c-0.6-3-3.1-2-4.8-1.9c-4.5,0.1-8.8-0.2-12.9-2.2c-0.9-0.4-1.2-1-1.3-1.9       c7,1.1,14.1,1.9,21.1,3.3c2.3,0.4,4.6,0.5,6.9,0.8c1.3,1.7,3.8,0.2,5.2,1.9c-0.9,1.2-2.3,1.2-3.6,1.3c-3.3,0.1-6.6-0.4-9.9-0.8       C1011.4,116.3,1011.2,116.2,1011,116z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3D4D"),
                d:
                  "M559.9,614.2c1.1-8.6-2.3-16.6-3.8-24.9c-0.6-3.1-1.3-6.1-1.1-9.3c-0.6-1.3-1.1-3.4,0.2-3.7       c2.1-0.5,1.8,2,2.5,3.2c-0.2,6.6,3.4,12.1,5.5,18.1c0.4,7.9,3.5,15.6,1.6,23.6c-0.4,1.8,0.8,3.5,1.5,5.2       c1.1,2.5,1.5,5.1,0.2,7.7c-1,1.1-1.3,3.1-3.4,3C562,629.4,561,621.8,559.9,614.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB4955"),
                d:
                  "M621,642c-0.7,0.7-1.4,1.3-2,2c-10.7,0.1-21.5,0.1-32.2,0.2c-5.2,0-10.5,0-15.7-0.1       c-0.6-0.7-0.6-1.4-0.3-2.2c0.6-0.6,1.2-0.8,2-1c11.7,0,23.3-2.1,34.9-1.4C612.1,639.8,616.8,639.9,621,642z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B8515C"),
                d:
                  "M571,642c0,0.7,0,1.4,0,2.1c-6.4,0-7.5-1-8-7c0.7-1,1.3-2,2-3c1.5,1.3,1.2,3.5,2.4,5       c0.4,0.5,0.7,0.9,1.2,1.3C569.4,640.9,570.4,641.1,571,642z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2313D"),
                d:
                  "M532,527c0.7-0.3,1.3-0.7,2-1c0.6,0.8,1.8,1,2.3,1.9c1.6,2.8,3.1,2.5,5.4,0.6c2-1.6,4.2-3.9,7.4-2.4       c0.6,0.3,0.1-0.5,0.1-0.6c-0.1-1.5,0.3-2.6,1.8-3.2c1.3-0.3,2.4,0.2,3.4,1c7,8.4,12,18.1,17.6,27.4c0.4,0.7,0.5,1.6,0.3,2.4       c-1,1.3-2.3,2.3-3.5,0.4c-2.5-4.1-7-6.3-9.5-10.6c-1.2-2.1-5.3-1.6-7.7-3.3c4.5,6,4.4,11.8-0.1,19.1c-2.9,0.5-3.5-1.2-3.4-3.6       c0.1-1.4,2.6-3.2-0.7-4.1c-0.9-0.2-1.6-0.7-2.5-0.9c-0.8-0.4-1-1.2-1-2c-1-2,0.1-5.1-3-6C537.4,537.4,535,532,532,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63344"),
                d:
                  "M545,550c0.7-1,1.3-1.1,2,0c0.4,1.5,2,2.4,2,4c-0.1,2.1-0.2,4.3,3,4c0.1,0.1,0.3,0.3,0.3,0.3       c-0.8,5.5,3.1,9.3,5,13.9c0.3,2.6,1.8,5.2-0.3,7.7c-1.3-0.6-0.6-2.1-1.4-3.1c-1,0.9-0.3,2.1-0.5,3.1c-1.3-3.3-2.7-6.7-4-10       C549.2,563.3,545.3,557.2,545,550z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63344"),
                d:
                  "M540.9,542c6.4-0.8,3.3,3.3,3,6C540.6,547.2,541.2,544.4,540.9,542z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81595B"),
                d:
                  "M106,586.1c-0.5-3.4-2.8-5.8-4.7-8.3c-1.1-1.4-2.1-2.9-2.3-4.7c0-0.3,0-0.5,0-0.8c0-2.1-0.1-4.3,0-6.4       c0.1-1.1-0.1-2.6,1.4-2.7c1.4,0,1.5,1.5,1.7,2.6c0.3,1.1,0.3,2.3,0.6,3.4c0.5,5.6,5.1,9.5,6.4,14.7c0,1.8,2.2,3.1,0.9,5.1       c-0.4,0-0.7,0-1.1,0C108,588,107,587,106,586.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9434C"),
                d:
                  "M957,106.1c0.2,1.5-0.6,3.6,2,3.9c0.5,0.7,2.3,0.4,1.8,1.8c-0.4,1.3-2,1.4-3,1       c-3.3-1.4-6.8-1.4-10.3-1.3c-18.6,0.5-37.1-2.9-55.7-2.2c-2.6,0.1-2.7-1.2-2.2-3.1c2.8-2.1,6.1-1.2,9.1-1.2       c8.4,0.1,16.9,0.2,25.3-0.1c0.5,0,0.8-0.4,0.9-0.9c9-0.3,17.9,0.8,26.9,1.2C953.4,106.2,955.5,104.7,957,106.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0454B"),
                d:
                  "M925,103.9c0.6,0.5,1.3,1,2.7,2.1c-13.1,0-25.4,0-37.7,0c-1.5,1.3-3.3,1.5-5.1,1.5       c-11.2-0.3-22.5,0.7-33.7,0c-6.4-0.1-12.7,0-19.1,0c-0.9,0-1.8,0-2.6-0.2c-1.4-0.6-3.9-0.8-1.5-3.2c26.8,0,53.7,0,80.5-0.1       c3.5,0,7.2,2.2,10.4-0.7C920.9,103.2,923.1,102.5,925,103.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("783339"),
                d:
                  "M957,106.1c-1.7-0.4-3.6,0.4-5.1-1c2.1,0.1,4.3-0.8,6.1,0.8C957.7,106,957.3,106.1,957,106.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5E1E1"),
                d:
                  "M84.9,479.9c0,5.4,0,10.8-0.1,16.3C83.5,490.7,83.4,485.3,84.9,479.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92414A"),
                d:
                  "M185,303c-3.9-2.6-8.2-1.9-12.3-1.3c-5,0.7-9.9-0.3-14.9-0.4c6.4-4.5,13.6-2.9,20.5-3.5       c1-0.1,1.9,0.3,2.6-0.7c13.3,0,26.7,0,40,0c-4.7,2.1-9.7,0.5-14.5,1c-1.5,0.2-3.3-0.3-4.3,0.4c-1.6,1,0,1.3,0.9,1.6       c-0.2,1.6,1.4,2,2,3C198.3,303,191.7,303,185,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92414A"),
                d:
                  "M162,304c5.2-2.1,10.7-0.5,16-1c2-0.2,4,0,5.9,0c0,0.3,0,0.6,0,1c-6.3,0-12.7,0-19,0       C164,304,163,304,162,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("703D41"),
                d:
                  "M128,378c2.3,1.9-0.3,5.1,2,7c2.1,4.4,3.6,9.2,7.5,12.6c0.7,0.6,1,1.2,0.9,2.1       c-0.3,1.9-7.1,9.9-8.9,10.3c-0.9,0.2-1.5-0.5-1.9-1.3c0.1-2.9,0.5-5.9-0.5-8.8c0.1-0.8,0.2-1.6,1-2c1-3.3,0.9-6.7,0-10       c0-1,0-2,0-3C127.3,382.7,127.2,380.4,128,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D605F"),
                d:
                  "M127,400c3,2.7,2.1,5.9,1,9c-0.5,1.4-1.2,2.5-3,2c0-1.7,0-3.4-0.1-5.1c-0.1-0.3-0.1-0.6,0.1-0.9       C126.9,403.8,125.1,401.2,127,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D605F"),
                d: "M128,388c1.5,3.3,2.2,6.7,0,10C128,394.6,128,391.3,128,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D605F"),
                d:
                  "M128,378c0,2.3,0,4.6,0,7c-2-2.8-0.6-6-1-9C127.9,376.4,128,377.2,128,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B7A7B"),
                d:
                  "M1542,273c-2.9,1.4-5.6,3.7-9,1.2C1536.1,274.3,1538.9,272.1,1542,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("33221C"),
                d:
                  "M2070,417.9c-7.6-1.2-14.5-4.5-21.8-6.7c-1.1-0.3-2.7,0.2-3.5-1.2c-2.4-1.4-5.3-0.4-7.8-1.2       c-7.2-2.3-14.3-4.8-21.2-7.8c-0.6-0.5-1.1-1.1-1.2-1.9c0.2-1.2,1-1.7,2.1-2c0.8-0.1,1.5,0,2.3,0.2c1.6,0.6,3.1,1.4,4.9,1.5       c5.5,1.6,11.2,2.6,16.6,4.3c1.6,0.5,3.1,1.4,4.7,2.1c1.7,0.9,3.4,1.6,5.4,1.5c6.8,1.1,13,3.7,18.6,7.8       C2069.7,415.6,2071.1,416.4,2070,417.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5D8D3"),
                d:
                  "M2049,416c0.8,1.8,2.3,2.1,4,2c0.8,0.4,0.5,1.4,1,2c0.7,0,1.3,0,2,0c1.6,1.5,1.2,3.6,1.3,5.4       c0.1,2.1,0.6,3.7,2.7,4.6c1.5,2.8,2.4,5.5,6.2,7c3.2,1.3,2.4,5.7,1.8,9c-0.2,0.1-0.4,0.3-0.6,0.4c-0.5,0.1-0.9,0-1.3-0.1       c-1.7-1.2-2.2-3.4-3.9-4.6c-1.6-1.6-2.7-3.6-4.1-5.4c-3.6-4.3-6.2-9.2-8.2-14.4c-2.4-2.3-5.5-2.9-8.5-3.8       c-4.7-2.8-10.6-3.5-14.7-7.7c0.3-1.3,1.2-2.1,2.2-2.9c0.9-0.4,1.8-0.5,2.8-0.1c1.7,1.4,3.7,1.4,5.7,1.8       c0.4,0.2,0.8,0.4,1.2,0.7C2040.9,414,2045.5,414,2049,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2060,430c-2.7,0.6-3.8-0.8-3.9-3.2c-0.1-2.2-0.1-4.5-0.1-6.7c2.3-3.1,5.7-0.9,8.5-1.6       c0.2,0,0.8,0.9,0.7,1c-0.6,0.8-1.2,1.6-2,2.1c-0.9,0.6-3.1-0.7-2.7,1.6c0.3,1.4,2.1,0.5,3,1c1.8,0.9,3.5,0.3,6-0.1       c-2.3,2.6-4.8,1.9-6.9,2C2059.9,426.1,2058.4,427.1,2060,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2082,464c-0.9,2.7-0.1,5.2,1.1,7.5c1.1,2.1,1.3,4.2,1,6.4c-0.2,0.1-0.4,0.2-0.7,0.3       c-1-0.4-1.4-1.3-1.8-2.1c-1.4-5.6-5.7-10-6.4-15.8c0.2-1.1,0.8-1.8,1.8-2.2C2078.5,460.2,2079.6,462.6,2082,464z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2049,416c-4.8,0.1-9.1-0.8-11-6c1-0.9,2-0.9,3,0c3,1.3,6.1,2.6,9.1,3.9c0.7,0.3,1.9,0.4,1.2,1.5       C2050.9,415.9,2049.8,415.8,2049,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3ECE9"),
                d:
                  "M2070,417.9c-0.3-1-0.6-1.9-0.9-2.9c0.2-0.3,0.5-0.3,0.9-0.2c1,0.4,2,0.8,3,1.3c1.2,0,1.4,1.2,2.1,1.8       c0,0.3,0,0.7,0.1,1c0.6,2,1.2,4.1,1.8,6.1C2074.6,422.6,2072.3,420.3,2070,417.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5D8D3"),
                d:
                  "M2068,446c2.1,3.3,8.7,3.8,6,10c-0.2,0.1-0.5,0.1-0.7,0.2C2070.9,453.1,2067,450.9,2068,446L2068,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7DDD6"),
                d:
                  "M2041,410c-1,0-2,0-3,0c0,0,0,0,0,0c-0.6-0.8-2.7-0.2-2.1-2.2c0.5-0.2,0.9-0.2,1.3,0.1       c2.9-0.7,5.2,0.7,7.4,2.1C2043.5,410,2042.2,410,2041,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5D8D3"),
                d:
                  "M2077,458c-0.3,0.7-0.7,1.4-1,2c-2.5-0.4-2.9-1.9-2-4c0,0,0.1-0.1,0.1-0.1       C2075.6,455.8,2076,457.4,2077,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2054,420c-0.8-0.4-1-1.2-1-2c0.7-0.2,1.9-0.8,2-0.6C2055.9,418.6,2054,419,2054,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A58584"),
                d:
                  "M1878.1,307.9c10.3,0.1,20.1,3.2,30.1,5.3c2,0.4,3.9,0.8,5.8,0.8c7.6,3.3,15.7,4.8,23.7,6.9       c5.2,1.4,10.6,2.2,15.3,5.1c-0.9,0.9-2,1.1-3.1,1.1c-18.5-5.7-37.5-9.6-56.3-14.3c-3.5-0.9-7.2-1.1-10.8-2       c-1.7-0.4-3.7-0.4-4.9-2.1C1878,308.5,1878,308.2,1878.1,307.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("966868"),
                d:
                  "M1950,326c1,0,2,0,3,0.1c14,3.3,27.3,8.8,41,12.9c0,0,0,0,0,0c1.6,0.9,3.4,1.1,5,2c0,0,0,0,0,0       c1.2,2.6,4.6,1.7,6.1,3.9c0.4,0.4,0.4,0.9,0,1.3c-1.5,0.8-2.9,0.1-4.3-0.5c-6.2-2.8-12.3-5.9-19.1-7c-1-0.1-1.9-0.5-2.7-1.1       c-5.9-3.4-12.7-4.5-19.1-6.3c-3.5-1-7.1-1.5-10-3.9C1949.6,326.9,1949.6,326.5,1950,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B17C7B"),
                d:
                  "M2089.1,500.9c1.4,3.6,1.6,7.3,2,11c0,4.4-0.1,8.7-0.1,13.1c-5.4,10.1-6.9,21.5-10.4,32.2       c-1.4,4.5-3.3,9-3.6,13.8c-0.8,1.7-1.9,3.3,0,5c1.1,3.3-0.4,6.6,0,9.9c-0.3,2.1-1,4.1-2,6c-3-0.8-2.1-3.3-2.3-5.3       c-0.9-11.6,1.8-22.8,4.3-34c2.2-10,3.5-20.2,5.5-30.3c1-5.2,1.9-10.3,2.3-15.6C2085.6,504.5,2088.2,503.3,2089.1,500.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA8E8B"),
                d:
                  "M2077,571c-1.9-3.3,0.5-6.1,1.3-9c2.2-8.1,4.2-16.2,5.9-24.5c0.9-4.7,3.6-8.9,6.8-12.6       c0.6,6.9-3.3,12.6-5.1,18.9C2083.3,553,2080,562,2077,571z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA8E8B"),
                d:
                  "M2076.9,586c-2.1-3.3-0.6-6.6,0-9.9c0.7,1,1.3,2,2,3C2078.9,581.5,2078,583.7,2076.9,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DBD7"),
                d:
                  "M2084.1,477.9c4.8,2.2,2.2,6.6,3,10c0,0-0.4,0.3-0.4,0.3c-3.4-1.7-2.7-5.2-3.6-8c0-0.8,0.2-1.5,0.8-2.1       L2084.1,477.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE6C6D"),
                d:
                  "M2086,506c-1.1,18.2-5.6,35.9-9.2,53.6c-1.8,9.2-3.1,18.3-2.8,27.6c0,1.6-0.6,3.4,0.9,4.7       c-0.8,1.6-1.2,3.3-0.9,5c-0.2,1.5,0.3,2.7,0.9,4c-0.2,0.8-0.7,1.4-1.6,1.6c-0.8,0.1-1.5-0.2-2-0.9c-0.8-1.6-0.5-3.2-0.3-4.9       c0.2-1.3,0.7-3.1-0.1-3.9c-4.9-5.2-0.6-11-1.1-16.4c-0.5-5.6,0.4-11.3,2.2-16.7c2-5.8,2.9-11.9,4.2-17.9c1-4.6-1.5-9.4-1-14.3       c0.2-2.2,0.2-4.3,1.4-6.2c1-1.6,1.6-3.4,1.4-5.2c-0.5-4.5,0.2-8.9,0.7-13.3c0.3-2.8,0.8-5.7-2.3-8.3c-2.4-2-3.9-5.3-5.9-8       c-1-2.1-1.7-4.3-0.1-6.4c2.4-1.2,3.1,1,4.1,2.2c2.1,2.3,4.2,4.4,7.6,4.6c1.3,1.4,1.3,3,1,4.7c-0.6,4.1-0.5,8.2-1.2,12.2       c0.6-1.8-1.2-4.7,2.6-5C2088.1,500.7,2087,503.4,2086,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C6A6A"),
                d:
                  "M2074,601.8c0.3-0.3,0.6-0.6,0.9-0.9c1.5-0.1,3,0,4.4-0.3c10.6-2.2,16.6,4.3,13.5,14.6       c-0.3,0-0.6,0-0.9,0.1c-2.1,0.2-3.2-1.5-4.6-2.6C2082.9,609.2,2078.8,605.1,2074,601.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A58584"),
                d:
                  "M1861.9,305c1.7,0,3.4,0,5.1-0.1c0,0,0,0,0,0c1.5,1.2,3.5-0.2,5,1c2.2,0.1,4.2,0.6,6,1.9       c0,0-0.1,0.1-0.1,0.1C1872.8,310.1,1864.7,308.6,1861.9,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A78C8B"),
                d:
                  "M1872,306c-1.7-0.2-3.6,0.7-5-1C1868.7,305.2,1870.6,304.4,1872,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A6765"),
                d:
                  "M2087.9,391.1c0,0.6,0.1,1.3,0.1,1.9c-0.3,0-0.7,0-1,0c-0.9,0.8-1.8,0.4-2.6-0.2c-3-3.6-6.9-6-11-8       c-3.7-2.5-7.6-4.7-11.6-6.8c-2.4-1.3-5.6-2.3-5.9-6c2.5-0.7,3.8,2.1,6.1,2c6.8,2.3,12.1,7.2,17.9,11c2.5,1.4,4.8,3.2,6.9,5.1       C2087.3,390.4,2087.6,390.7,2087.9,391.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA8582"),
                d:
                  "M2087,390.1c-2.9-0.9-5-2.9-6.9-5.1C2083.2,385.5,2085.4,387.3,2087,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("986A69"),
                d:
                  "M2005,346c0-0.4,0-0.7,0.1-1.1c9.5,1.9,17.5,7.3,26.3,10.8c4,1.6,7.8,3.6,11.7,5.4       c0.4,0.4,0.5,0.9,0.3,1.5c-0.6,1.1-1.5,1.3-2.6,1.3c-10.6-5.8-22-9.8-32.8-15C2006.7,348.3,2004.9,348.1,2005,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A6765"),
                d:
                  "M2043,362c0-0.3,0-0.6,0-1c0.7,0.1,1.3,0.1,2,0.2c-0.2,2.7,1.7,3.8,3.6,5.2c1.5,1.1,3.6,1.6,4.4,3.6       c-4.7,1.1-7.7-1.2-9.8-5.1C2042.9,364,2043.6,363,2043,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A87070"),
                d:
                  "M2082,491c1-1.3,0-2.7,0-4c-1.5-1.7-0.9-3.4-0.3-5.2c0.5-0.9,0.9-2,2.3-1.7c0.9,2.7,1.9,5.4,2.8,8.1       c0.8,4.2,1.6,8.5,2.3,12.7c0.5,2.6-1.3,3.9-3.1,5.1c0-2.5,0.6-5.2-2-7C2081.9,496.7,2083.1,493.6,2082,491z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0918F"),
                d:
                  "M1999,341c-1.9,0-3.7-0.5-5-2C1996,338.9,1997.7,339.4,1999,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBB6B4"),
                d:
                  "M2074,601.8c6.5,1.3,9.7,7.2,14.7,10.5c1.2,0.8,2.2,2,3.3,3c0,1.2-0.1,2.3-1.4,2.8       c-1.6,1.1-3.3,1.2-5.1,0.7c-5.4-3.4-8.9-8.9-13.9-12.9c-0.4-0.3-0.7-0.6-1-1c-0.4-1.4,0-2.4,1.4-3       C2072.7,601.9,2073.3,601.9,2074,601.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9555D"),
                d:
                  "M2085,617.9c1.9,0.1,3.7,0.1,5.6,0.2c-2.4,2.8-4.8,5.6-8.5,6.8c-1.2-0.7-2.7,0.5-3.8-0.5       c-0.4-0.3-0.5-0.7-0.4-1.2c1.7-2.4,4.5-2.7,7-3.5c0.1,0,0.4,0.1,0.5,0c0.3-0.5-0.3-0.5-0.5-0.7       C2084.7,618.6,2084.8,618.3,2085,617.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5655"),
                d:
                  "M2078,624c1.4,0.2,3-0.5,4,0.9c-0.7,0.4-1.3,0.8-2,1.2c-0.7,0-1.4-0.1-2-0.1       C2077.4,625.3,2077.5,624.7,2078,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E4E50"),
                d:
                  "M2044,364c1.4,4.4,5.4,4.9,9,6c1,0.7,2,1.3,3,2c2.8,3.1,6.3,5.1,10.1,6.8c2.8,1.3,5.3,3.4,7.9,5.1       c3.5,2.9,7.3,5.3,11,8c0.4,0.8,1.2,1,2,1c0,1,0,2,0,3c-2.3,0.8-3.7-0.9-5.4-1.8c-7.1-3.7-13.1-9.2-20.4-12.4       c-5.1-3.2-10.9-5.4-15.3-9.7c-1.9-1.9-5.5-0.8-6.3-4C2040.3,366,2041.4,364.1,2044,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F4447"),
                d:
                  "M2061,381c3.9-0.4,6.1,2.8,9,4.4c5.8,3.4,11.4,7,17,10.5c0.6,2.8,0,4.7-3.2,5.2       c-0.1-0.2-0.1-0.4-0.2-0.6c-0.1-0.4,0.4-1,0.1-1c-4.2-0.3-7.6-2.9-10.3-5.3c-3.1-2.7-7.1-3.3-10-5.9       C2061.5,386.5,2060.8,383.8,2061,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBABAA"),
                d:
                  "M2084,403.9c-1.3,0.1-2.6,0.2-3.9,0.3c-2.6-0.4-3.8-2.1-4.6-4.3c0.2-0.8,0.7-1.3,1.4-1.6       c2.6,0.1,4.9,1.1,6.9,2.8c0,0-0.1,0.1-0.1,0.1C2083.9,402.1,2083.9,403,2084,403.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B27072"),
                d:
                  "M2075.9,400.2c1.8,0.9,3.1,2.4,4.2,4.1c0.3,0.7,1.9,1,1.1,1.8c-2.1,2-3.3,4.9-6.2,6c-0.6,0-1.3,0-1.9,0       c-0.4-0.6-0.3-1.4,0.2-1.8c3.3-2.6,3.6-5.5,1.3-8.9c-0.2-0.4,0-0.9,0.2-1.4C2075.2,399.7,2075.6,399.8,2075.9,400.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871B27"),
                d:
                  "M2069.9,414.9c-0.3,0.2-0.6,0.2-0.9,0.2c-6.3-2.4-12-6.4-19-7c-1.5-1.2-3.5-1.1-5-2       c-1.6-0.2-3-0.8-4.1-1.9c0.3-0.4,0.7-0.8,1.2-1c3.4-0.1,6.2-2.3,9.6-2.4c0.5,0,1.1,0,1.6,0.1c1.6,0.4,3,1,3,3       c-0.6,1-1.7,0.4-2.6,0.8c5.6-1.2,9.8,2.2,14.3,4.5c1.3,1,3.2,1.5,3.1,3.7C2070.7,413.6,2070.3,414.2,2069.9,414.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972D38"),
                d:
                  "M2071,412.9c-1-1-2-1.9-3.1-2.9c1.9-2.8,5.1-5.6,0.6-8.8c-1-2.1-3.3-3.7-2.5-6.5       c4.3-0.4,7.3,1.4,8.9,5.4c3.6,6.4,3.6,6.4-1.9,11.9C2072.4,412.3,2071.7,412.6,2071,412.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4B403B"),
                d:
                  "M2075,417.9c-1.2,0-1.6-1-2.1-1.8C2074.8,414.9,2074.8,414.9,2075,417.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61B2B"),
                d:
                  "M1843,515c-1.5,0.2-2.4,0.8-1.2,2.2c1.3,1.5-0.5,1.9-0.8,2.8c-3.2,4.6-6.8,0.2-10.4,0.4       c1.2,1.2,3.8,1.5,2.9,3.9c-0.7,1.9-2.4,2.8-4.2,3.1c-2.9,0.5-5.9,1.3-8.5-1.2c-0.2-4.5-5-5.1-6.8-8.3c0-0.3,0-0.6-0.1-1       c0-1.2,0-2.4,0.9-3.3c3.4-0.2,3.4-0.2,5.2,2.4c0.8-2.1,0.1-3.9-1-5.6c-1.1-1.7-1.6-3.7,0.5-4.7c2.1-1,4.1-0.3,4.6,2.2       c1,5.2,4.5,4.8,8.2,4c0.3-0.1,0.3-0.1,0.3-0.3c-0.4-3.5,0.6-4.6,4-3.8c1.1,0.3,2,1.2,3.2,1.3       C1842.3,510.3,1843.2,512.3,1843,515z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1A26"),
                d:
                  "M1839,510c-0.4,0.6-1.2,1.1-1.6,0.3c-1.2-2.2-3.2-0.7-4.8-1.2c-0.5,2.2,1.5,2.5,3.6,4.2       c-3.4-0.8-5.7,0.4-8,0.6c-3.2,0.3-4.4-2.2-5.1-4.8c-0.3-1.1,0.2-2.8-2-2.7c-0.8,0-1.7-0.3-2,0.7c-0.4,1.2,0.1,2.1,1.2,3       c2.6,2.2,1.2,4.6,0.6,7.5c-2-2.1-3.2-4.2-6-3.7c-3,0.4-3.3-2.7-5-4c-0.7-1-1.4-2-2-3c2-3.5,5.1-5.9,8.7-7.6       c0.5-0.1,0.9-0.1,1.4-0.1c4,0,7.6,0.8,10.1,4.4c1,1.4,2.7,1.8,4.4,1.4c2.1-0.3,4.3-0.4,6.4,0c0.4,0.1,0.9,0.4,1.2,0.7       C1841.3,507.6,1839.5,508.6,1839,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA222F"),
                d:
                  "M1821,526c3.2,1.3,6.4,0.9,9.5-0.1c1-0.3,2.8-1,2.2-2.8c-0.8-2.5-2.3,0.2-3.5-0.1c0-4.2,1-6.5,5.3-3       c2.1,1.7,4.3,1.1,6.5,0c0.4,0.5,0.8,1,1.1,1.5c-5,3.3-8.3,8.6-14.5,10.7c-3.2,1.1-4.3-2.5-6.7-1.3c-0.8-0.5-1-1.2-0.9-2.1       C1820.7,528.1,1819.9,526.7,1821,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2636"),
                d:
                  "M1782,475c0.4-0.8,1.2-1,2-1c2.9,0,5.3,2.1,8.3,2c2.4,0.8,5,1.1,7,2.9c0.6,2.1-0.6,2.7-2.4,2.9       c-1.3,0-2.5-0.8-3.9-0.2c-1,1.7,1.6,3.2,0.5,4.9c-0.2,0.2-0.3,0.3-0.5,0.5C1789.1,483.3,1786.4,478.3,1782,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1817,500c-3.2,2.1-5.4,5.5-9,7c-0.3-0.3-0.7-0.7-1-1c-0.5-0.6-0.6-1.3-0.4-2c0.7-1.7,3.2-2.3,2.5-4.9       c-0.8-3.4,1.9-4.6,4.3-4.4C1816.2,494.8,1818.3,496.5,1817,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A11F31"),
                d:
                  "M1821,526c-0.1,1.1,0.2,2.2-1,3c-2-3.7-4-7.3-6-11c2.8,0.8,4.7,3.2,7.4,4.2       C1824.4,523.4,1820,524.6,1821,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2636"),
                d:
                  "M1800,495c-3.7-1.5-4.6-5.4-7-8c0,0,0.1-0.1,0.1-0.1c2.2-2.6,3.6,0.2,5.3,0.8c1.2,2,2,4.2,2,6.6       C1800.2,494.6,1800.1,494.8,1800,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2636"),
                d:
                  "M1807,504c0,0.7,0,1.3,0,2c-3.1-3.2-5.6-6.8-7-11c0,0,0.1-0.1,0.1-0.1       C1804.6,496.2,1806.4,499.7,1807,504z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A11F31"),
                d:
                  "M1810,510c2.9-0.2,2.8,3.3,5,4c0,1.1,0.2,2.3-1,3C1811.8,515.1,1809.9,513.1,1810,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902936"),
                d:
                  "M1828,548c-1.6-1.7-2.6-3.7-3-6c1.3-1.3,2.7-2.7,4-4c4.9-1,7.8-5.9,12.9-6.5c1-0.1,1.7-1.9,2.2-3.4       c0.6-1.6,2-3.4,4.3-3.5c3.7,3.1,4.6,7.4,5.2,11.9c-2.1,3.2-5.4,1.5-8.1,1.9c-1.3,0.2-8.6,3.9-8.9,5.2       C1835.5,548.5,1832.2,549.1,1828,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831725"),
                d:
                  "M1847,520.1c-1-1.3-2-2.7-3-4c-1.1-3.5-2.8-6.6-4-10v0c-3.7-4.9-8.1-9.3-9.3-15.7c0.2-0.5,0.5-0.8,1-1       c4.8-0.1,4.8-0.1,5.3,3c1.3-1.8-1.2-4.9,1.7-5.6c2.3-0.5,2.2,1.9,2.7,3.4c0.9,2.8,3,5.1,4.1,7.8c0.7,4.6-0.1,9.9,5.6,12.3       c1.4,0.6,0.4,2.8,2.2,3.1c0.1,1-0.6,1.6-1.2,2.2c-0.7,0.8-1.5,1.5-2.5,1.9C1848.2,517.9,1848.2,519.5,1847,520.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92202F"),
                d:
                  "M1848,525c-2.6,1.7-2.2,5.8-5,6.9c-4.7,1.9-8.3,6.4-14,6.1c5.8-5.5,13-9.5,17.9-16       c0.2,0.1,0.4,0.2,0.5,0.3C1848,523.1,1848.7,523.9,1848,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931928"),
                d:
                  "M1840,506c2.5,2.9,4.4,6,4,10c-0.3-0.3-0.7-0.7-1-1c-1.7-1.4-1.2-4.5-4-5       C1836.9,508.1,1840.8,507.6,1840,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1847,520.1c0.2-1.3,0.2-2.8,2-3.1c1,0.4,1.6,1.2,1.6,2.4c-0.6,1.7-0.9,3.7-3.5,2.6c0,0-0.2,0-0.2,0       C1846.9,521.3,1846.9,520.7,1847,520.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1C2C"),
                d:
                  "M1792,477c-3.1,0.1-5.9-0.6-8-3c0-3.2,1.3-4.9,4.6-3.3c1.1,0.5,2.1,0.8,2.6,0c1.6-2.8,4.4-3.6,7.8-4.8       c-4.3-1.9-8.3-1.1-11.9-1.9c3.4-2,7.1-2.1,10.7-1c2.6,0.8,6.2-3,7.5,0.4c0.9,2.4-4.1,2.4-5,5.1c-0.1,0.2-0.1,0.3-0.2,0.4       c-1.3,1.1-2.8,2.1-1,4c0,0.3,0,0.7,0,1c1.2,2.5-0.7,2.6-2.3,2.8C1795.2,477.1,1793.6,476.5,1792,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33845"),
                d:
                  "M1842,635c-2.5-2.9-3.1-6.3-3-10c0-1,0-2,0-3c0.6-1.5,0.6-3.3,1.7-4.6c0.6-3.3-0.5-6.4-0.7-9.6       c-0.1-1.9-0.6-3.9,0.5-5.6c0.9-0.7,3,0,2.9-2c-0.3-3.5,0.5-7.2,1.5-10.1c1.7-5.2-1.7-9.4-0.9-14.3c0.7-4.5,3.4-5.9,6.3-6.1       c2.4-0.1,4.7-0.7,7-1.1c5.8-1,5.7-1.3,7.2,4.8c0.4,2.1-0.1,4.3,1.2,6.2c0.4,0.5,0.7,1.1,0.9,1.7c0.5,1.4,0.4,3.1,1.2,4.4       c0.4,0.6,0.7,1.2,0.9,1.9c0.4,1.4,0.4,2.9-0.4,4.2c-3.7,0.6-6.6-2.6-10.6-2c-0.6,1,0.4,2.6-0.4,4c-0.2,0.3,0.7-0.3,1.1-0.1       c0.5,0.1,0.8,0.3,1.1,0.7c1.6,2.7,2.2,4.6-1.4,6.7c-3.7,2.1-7.1,5.2-6.2,10.7c0.5,2.6,0.5,5.8-3.1,6.9       c-0.3,1.1-2.8-2.6-2.3,1.3c0.5,3.6,0.3,7.5-0.5,11.3c-0.4,1.8-0.7,3.6-2.9,4.1C1842.8,635.5,1842.4,635.3,1842,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3B48"),
                d:
                  "M1841,602c0.3,3.7,0.8,7.3,0.9,11c0.1,1.7,0.7,3.6-0.9,5c-0.3,0.4-0.7,0.4-1,0       c-1.5-10.6-3-21.2-4.4-31.8c-0.6-4.7-1.1-9.5-1.6-14.2c0.5-0.4,1-0.5,1.6-0.3c1.1,0.7,1.3,1.9,1.6,3c1.1,4.2,2.1,8.4,4.3,12.4       C1843.6,591.4,1843.5,597.1,1841,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91333F"),
                d:
                  "M1835,572c-0.3,0-0.7,0-1,0c0-0.7,0-1.3,0-2c-1.4-2.1,0.6-5.2-2-7c-2.9-1-1.2-4.9-3.8-6.1       c0.3-1,0.5-1.9,0.8-2.9c1.1-2.9,1.7-6.6,6.3-4c1.5,2.8,1.3,5.7,0.5,8.6c-0.7,2.4,3.8,1.4,2.7,4.4c-0.6,1.6,0,3.6-0.4,5.4       C1837.7,570.1,1836.5,571.2,1835,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3B48"),
                d:
                  "M1832,563c3.3,2.1,3.3,2.1,2,7C1830.3,568.5,1832.7,565.3,1832,563z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A7424F"),
                d:
                  "M1840,618c0.3,0,0.7,0,1,0c-0.6,1.3-1.3,2.6-1.9,4C1839.1,620.6,1838.6,619.1,1840,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53E4F"),
                d:
                  "M1869,636c0,0.7,0,1.3,0,2c-6,0-12,0-18,0c-0.5-0.9-3.3-0.3-1.6-2.5c4.7-1.2,9.5-1.1,14.3-1.7       C1865.6,633.5,1867.6,634.3,1869,636z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A7424F"),
                d:
                  "M1849,636c0.7,0.7,1.3,1.3,2,2c-2.1,0-4.2-0.1-6.3,0c-2.2,0.1-2.8-1.1-2.7-3c0.3,0,0.7,0,1,0       c1.6,0.7,2.1-1,3.3-1.4C1848.1,633.2,1849.9,633.1,1849,636z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972E3B"),
                d:
                  "M1835,550c-3.9-1.5-3.4,3.6-6,4c-1.2-1.8-1-3.9-1-6c0.6-0.5,1.5-1.6,1.8-1.5c4.5,2.1,5.4,0,5.4-4       c0-1.8,1.9-2.3,3.3-2.4c3.8-0.2,5.9-0.9,1.3-5.3c4.7,4,9,2,13.2,2.2c3.6,3.1,4.5,7.2,4.8,11.6c-0.3,1.2-0.6,2.4-1.5,3.4       c-1.6-1.7-2.2,1.9-3.8,0.7c-1.6-1.2-1.2-3.6-2.7-4.6c-2.2-1.4-4.7-2.7-6.8,0.6c-0.8,1.3-1.5,3.4-3.7,2.5c-1.7-0.7-1-2.6-0.9-4       C1837,547.8,1836.3,549.3,1835,550z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2439"),
                d:
                  "M1772,464c1.9-1.2,4-1.1,6-1c0.3,0.2,0.3,0.5,0.2,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c-2,0.3-4,0.7-6,1       C1772,464.7,1772,464.3,1772,464z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3404D"),
                d:
                  "M672,662c-1-0.7-2-1.3-3-2c4.4-2.3,9.4-2.3,13.9-2.4c9.8-0.2,19.8,0.4,29.6,0.3       c6.7-0.1,13.7-1,20.6-1.3c3.1-0.2,6.3,0,9.4,0c5.7,0.1,11.4-0.2,17.1,0.3c1.8,0.2,3.6,0,5,1.4c0.3,0.4,0.5,0.9,0.5,1.5       c-1.6,2.1-4.4,0.5-6.2,2.1C730,661.9,701,661.9,672,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3B43"),
                d:
                  "M759.1,661.9c1.3-2.6,3.8-1.6,5.9-1.8c5.5-0.2,10.8-1.6,16.3-0.9c6.3,1.1,12.7,0.3,19,0.5       c7.5-0.1,15.1,0,22.6,0c2.1,0,4.3-0.3,6,1.5c6.3,0,12.7,0,19,0c0,0.2,0,0.5,0,0.7C818.3,661.8,788.7,661.8,759.1,661.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3845"),
                d:
                  "M1098,656c0,0.7,0,1.3,0,2c-40.3,0-80.5,0-120.8,0.1c-2.2,0-4.8-0.9-6.2,1.9c-41.7,0-83.3,0-125,0.1       c-0.4-1.2-4.4,0.7-2.4-2.7c0.6-0.3,1.5-0.3,1.8-0.8c3.9-6.3,9.6-3.7,15-3.3c11.4,0.9,22.6,5.7,34.3,1.7c2.4-0.8,5-0.4,7.4-0.4       c11.6-0.1,23.4,1.3,34.9-0.5c10.3-1.6,20.7-2.6,30.7-1.2c17.4,2.6,34.8,0.9,52.2,1.7c3.2,0.1,6.3-0.2,9.5,0       c3,0.2,5.6-0.7,7.5-3.1c6.7-2.1,13.5-0.6,20.2-1c2-0.1,4,0.1,6,0.1c1.7,0,3.4,0,5.1,0.5c5.7,2.7,11.7,3.5,17.9,3.6       c1.9,0,3.9-0.1,5.8,0.2c1.6,0.5,3.2,0.3,4.8,0.4C1097.3,655.4,1097.7,655.7,1098,656z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3404D"),
                d:
                  "M843,658c1,0.7,2,1.3,3.1,2c-5.7,0.6-11.5-1.1-17.1,1c-9.7,0-19.3,0-29,0c-6.3-1.4-12.7,0.3-19-0.9       c-3.8,0.3-7.6,0.7-11.3,0.9c-1.6,0.1-3.4,0.6-4.7-1c0,0,0,0,0,0c0.8-3.5,3.6-3.4,6.2-3.4c8.5-0.1,17.1-1.2,25.6,0       c8.4-0.1,16.8-0.1,25.2,0c2.9,0,5.2-0.7,6.1-3.8c0.8-1.4,2.1-1.7,3.4-1C835.4,653.7,839.9,654.6,843,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3E49"),
                d:
                  "M621,642c-16-2.2-32,0.1-48,0c-1.8-2.8-0.7-4.3,2.2-5.1c1-0.2,2-0.4,3-0.2c8.6,1.8,17.1-1.1,25.7-0.1       c3.1,0.4,5.4-0.1,5.2-4c0-0.6,0.4-1.2,0.7-1.9c0.8-2.2,1.7-4.2,4.6-4.4c2.3-0.2,2.3-2.4,2.8-4.1c0.7-2.3,1.7-3.6,4.1-1.1       c2.1,2.2,5.6,2.1,8,4c10.3,5.3,21.6,6,32.7,7.5c10.3,0.2,20.6-0.4,30.9,0.3c2.6,0.9,5.3,0.6,7.9,0.6       c31.1,0.1,62.1-0.1,93.2,0.1c0.6,0,1.2,0.1,1.7,0.2c1.6,0.4,3,1.3,4.4,2.1c1.9,1.1,4.1,1.9,5.5,3.7c1.9,2.5,0.8,5.1,0.2,7.6       c-0.2,0.6-0.6,1.6-1.1,1.5c-5.2-0.8-9.7,3.3-15,2.2c-1.1-0.2-2.1-0.5-3-1.4c-4.8-4.9-12.5-5.7-17.3,0.8       c-2.8,1.7-5.5,4.5-8.8,0.8c-1.1-1.3-1.1,0.2-1.5,0.7c-1.6,1.7-3.4,1.5-5.3,0.4c-0.5-1.7-0.6-3.7-3.2-3.7       c-1.3,0-2.2-0.7-2.7-1.9c-0.8-2.2-2.3-2.9-4.6-2.8c-2,0.1-3.4-0.7-2.3-3.2c-2,1.8-0.7,3.8-0.5,5.6c0.3,3-1.3,4.6-3.7,3.1       c-5.3-3.4-11.4-1-16.9-2.9c-1-0.4-1.9,0.3-2.6,1c-1.6,1.6-3.3,1.3-5,0.4c-2.9-1.6-6-1-9.1-1.3c-5.2-0.4-9.9,1.1-14.8,1.5       c-2.8,0.2-5.8,1-8.9,0.8c-3.4-0.2-6.8,1-9.8,3.2c-1.2,0.9-2.8,1.3-4.2,0.3c-1.6-1.1-0.2-2.4-0.1-4c-1.9,1.6-3.2,2.4-5.9,0.6       c-4.4-2.8-9.9-2.8-15.1-2.7c-0.8,0-1.6,0.4-2.3-0.3c-2.9-0.4-7.4,1.5-8.5-0.9c-2.8-6.2-7-3.4-11-3.1C622,642,621.5,642,621,642       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3B46"),
                d:
                  "M642,646c3.5-2.7,7.5-1.3,10.8-0.3c3.1,1,8.2-2.4,8.7,3.8c2.5-0.1,2-5,5.1-2.8c2.2,1.6,0.8,3.3-1.6,4.1       c2.1,1.7,3.1,0.7,4.4-0.2c4.1-2.7,8.5-4.2,13.5-2.9c1.1,0.3,2,0,1.6-1.5c-0.2-0.7-1.9-1.7,0.1-2.1c1-0.2,1.8,0.5,1.9,1.8       c0.2,2,1.1,1.3,2.6,1.1c3.8-0.5,7.2-5.3,11.6-1.1c0.6,0.6,2.7-2.3,4.5-0.5c1.8-2.2,3.2-0.2,5,0.2c2.3,0.6,5.7,4.6,7.3-1.1       c0.1-0.2,0.7-0.5,0.8-0.4c3,2.9,6.9,1.4,10.3,1.5c3.5,0.2,6.1,1.9,9.1,2.8c3.3,1,1.4-2,1.2-3.1c-0.7-5.2,0.8-6.8,5.4-5.5       c-0.1,1.8-2.6,0.4-2.9,2.3c0.3,0.2,0.7,0.7,1,0.6c3.1-0.8,5.8-0.6,6.4,3.2c0.4,2.3,2.2,1.3,3.1,1.4c3.6,0.4,3.8,2,2,4.6       c-1.7,1.7-4,1.3-6,1.2c-3.4-0.1-5.2,1.3-5,4.8c-3.3,0-6.7,0-10,0c-5.5-2.1-11.1-1.1-16.7-0.8c-10.3,0.6-20.5-0.1-30.7,0.2       c-7.2,0.2-14.5,0.4-21.6-1.4c-4.2-0.9-8.8-0.5-11.5-5.1c-1.1-1.9-3.7-1-5.6-0.9C643.9,650.2,642.3,649,642,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F47"),
                d:
                  "M664,656c1.1-0.9,2.2-2.8,3.7-1.7c4.3,3.1,9,1.6,13.5,1.7c15.6,0.2,31.3,0,46.9,0.1       c1.8,0,4.2-1.1,4.9,2c-4.5,0-9.2-1-13.4,0.2c-10.9,3-21.8-0.5-32.6,0.6c-5.9,0.6-11.9,2.2-18,1.2c-0.1-1.8-1.3-2-2.8-2       C664.9,658,664.1,657.4,664,656z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("97323E"),
                d:
                  "M237,612c0,0.7,0,1.3,0,2c-0.8,0.4-1.7,0.9-1.4,1.8c2,6.3-1.7,6.4-6.3,6.2c-5.7-0.2-11.5,0.3-17.2-2       c5.5,0,10.9,0,16.4,0c1.4,0,3.2,0.7,4-1c0.8-1.6-1.1-2.2-1.6-3.3c-0.8-1.8-2.9-3.4-1-5.7c0.7,0.1,0.1,0.6,0.3,0       c0.1-0.3-0.1-0.4-0.3,0c-2.5-1.7-2.7,6.4-5.6,1.4c-1.4-2.4-4.4-3-5.3-5.7c-0.6-1.9-1.4-1.2-2.5-0.3c-1,0.8-2.3,0.9-3.1-0.2       c-3.1-4.2-5.3-1.4-7.2,1c-3.4,4.3-9.1,5.5-13.6,2.3c-0.3,6.9-6.9,6.2-10.5,9.1c1.3,0.4,2.5,1,3.7,1.9c1.5,1.1,2.9,2.1,5-0.5       c1.9-2.4,6.1-1.9,8.5-0.3c2,1.3-1.7,3.2-1.3,5.2c0,0,0,0,0,0c-4.2,1.5-8.3,3.1-12.4,4.6c-1.3,0.5-2.6,0.6-3.9,0.5       c-1.2-0.1-2.5-0.3-2.9-1.5c-0.6-1.7,0.8-2.3,2.2-3.3c-3.8,0-7.3,0.2-10.6-1.4c-3.9-3.5-4.4-5.8-1.4-9.7c2-2.5,1.9-5.5,3-8.2       c1.5-3.5,4.1-4.4,6.6-3.2c2.4,1.1,4,0.3,4.8-0.9c2.4-3.6,4.7,0.2,7-0.3c2.4-0.6-0.5-6.2,4.3-4.8c0.5,0.1,1.3,0.1,1.4-0.2       c0.8-4.8,7.4-4.7,8-9.6c3.8,0,6-2.7,8.1-5.3c1-1.3,2-2.7,3.5-3.5c3.2-1.8,4.3-1,5,2.7c0.6,3.4,3,7-4,7.7       c7.1,4.1,10.1,9.6,9.2,16.9c-0.2,0.1-0.5,0.3-0.7,0.5c0.2-0.2,0.5-0.3,0.7-0.5c1.4-0.7,2.8-1.1,3.9,0.5       c0.8,1.1,1.8,2.1,3.3,1.4c1.4-0.7,1.1-2.2,1.2-3.5c0.2-1.5-0.3-2.9-0.1-4.4c0.2-1.2,0.8-2.4,2-2.4c1.8,0,1.1,1.7,1.1,2.7       c0,1.1,0.4,2.3-0.4,3.3c0,1.3,0,2.7,0,4C238.5,608,236.6,610,237,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M294,475c-0.3,2.5-2.7,3.3-4.2,4.6c-11.1,9.5-19.6,21.3-27.8,33.2c-3.1-0.4-6.7,2.1-9.3-1.5       c1.3-3.8,5.7-4.8,7.6-8.9c-8.7-2.1-17.9-0.6-26.1-4.1c-0.4-3.1-0.5-6.1,2.7-8.1c3.1-1.9,4.4-4.3,3.5-8.4       c-1-4.4,2.2-1.8,4.1-1.9c-0.3-5.4-4.7-4.3-8.2-4.8c-0.4,0.1-0.9,0.1-1.3,0c-0.8-0.4-1.5-1-1.5-1.9c-0.1-3,2.2-2.8,4.2-2.9       c-3.1-1.1-2.9-2.7-0.6-4.5c3.7,0.2,6,2.9,8.4,5.1c0.8,0.7,1.5,0.2,2.1,0.7c0.8,0.6,1.6,1.2,2.2,2c0.1,0.3,0.3,0.5,0.6,0.6       c-0.3-0.2-0.5-0.4-0.6-0.8c0.3-1.3,1.2-2.6,0-3.9c-0.2-0.4-0.3-0.8-0.2-1.3c0-0.1-0.2-0.2-0.2-0.2c-0.2,0.8,0.4,1.4,0.7,2.1       c-0.1,1.3-0.6,2.2-2.2,1.7c-4.6-3.5-10.3-5.8-12.6-11.1c-0.2-0.6,1.3,5.3,1.3,5.3c-4.6-0.4-9.5,0.7-13.2-3.2       c0-0.5,0.2-0.9,0.5-1.3c0.6-0.4,1.2-0.7,1.8-0.6c3,0.1,4.8-0.4,2.4-3.8c-0.7-1-1.2-2.2-0.5-3.3c2-2.8,1.2-4.1-1.9-5.2       c-2.6-1-0.6-3-0.1-4.6c-1.6-0.6-4.8,0.4-4.5-0.3c1.6-3.3,0.5-6.3,0.2-9.4c-0.1-0.8,1.7-2.5,3.4-2.1c-0.1,0,0.3,0,0.3,0       s-0.2-0.3-0.2-0.3c-0.5-0.3-1-0.2-1.4,0c-1.8,1-3.6,2.7-5.8,0.8c-1.1-1-1-2.6,0.1-5.8c-2.6-1.3-6.4,1.3-8.3-2.5       c4.5-3.4,10.1-2.4,15.1-3.4c5.9-1.2,12.3-1,17.6-4.6c4.4,0.9,5,5.2,7.2,8c5.9,9.9,11.4,20.1,18,29.7       c7.5,5.9,15.2,11.6,22.9,17.4C291.9,472.6,293.5,473.2,294,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M342.9,448.9c-11,3.6-21.4,8.5-31.3,14.4c-1.5,0.9-3.5,1.5-3.6,3.7c-5.1,0.5-7.8,5-12,7.1       c-3,0.9-4.5-1.7-6.4-3c-2.8-2-6.1-3.5-8.1-6.5c-2.4-4.1-2.7-8.1-0.8-12.6c1.4-3.4,1.2-7.1-0.3-10.7c0-2.9,1.2-3.6,3.6-2.1       c0.9,2.6,4.4,3.3,4.5,5.7c-1.5-3.4,0.6-5,4.3-6.3c2.9-1,5.5-3.1,4.1-7c1.1-3.4,4.5-3.9,6.9-5.7c9.5-5.3,19.7-9,29.9-12.6       c0.7-0.2,1.4-0.2,2.2-0.2c1.3,0.2,2.7,0,3.9-0.5c3.4-1.4,4.1,1.8,5,3.4c1.2,2.1-1.3,2.5-2.7,3.2c-0.9,0.4-1.6,1.1-2.4,1.3       c1.4,0,3.1-2.3,4.6-0.1c1,1.5,1.3,3.5,0.8,5.3c-0.7,2.4-2.9,2.1-4.6,1.7c-4.1-1-5.9,0.9-6.8,4.5c-0.6,2.4-1.4,4.1-4.3,4.6       c-1.9,0.3-1.9,2.9-2.6,4.6c0.8-1.6,1.7-3,3.2-4c2-1.3,4.2-0.8,3.8,1.6c-0.8,6.4,3.3,7.4,7.9,8.3       C342.5,447.4,343.2,447.8,342.9,448.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("561220"),
                d:
                  "M253,511c2.1,1.8,4.6,0.8,6.9,0.8c1,0,1.9-0.5,2.1,1c-3.7,6.7-7.4,13.4-11.1,20.2       c-0.6,0.5-1.3,0.8-2,0.9c-4.3-4.8-11.2-4.4-16.2-7.9c-0.6-0.5,2.7-2.6-0.8-1.9c-1.1,0.2-2.3-0.2-3-1.4c1.3-2.4,3.8-1.5,5.6-2.2       c0.8-0.4,1.3-1.2,1.7-2c0.2-0.4,0.6-0.7,0.9-1c4-0.5,7.7-1.2,9.6-5.5c0.8-1.9,3.2-1.3,5-1.4C252.2,510.5,252.6,510.7,253,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80273D"),
                d:
                  "M282,464c4.3,3.8,8.9,7.3,14,10.1c-0.5,0.7-1.2,0.9-2,0.9c-9.6-5.8-18.3-12.9-27-20       c-0.5-0.6-0.6-1.3-0.2-2C272.8,455.3,277.7,459.3,282,464z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731D28"),
                d:
                  "M249,533c0.6,0,1.2,0,1.9-0.1c0,0.3,0.1,0.7,0.1,1c-0.7,1.3-1.3,2.7-2,4c-0.9,0.8-1.3,1.8-1.5,3       c-0.3,1.5-1.5,1.6-2.6,1.6c-1.3,0.1-2.4-0.5-2.6-1.8c-0.3-2.5-2.1-4.4-2.4-6.9C242.6,531.3,246.1,534.6,249,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621125"),
                d:
                  "M372,443c-3,0.4-6,0.7-9,1.1c-4.7,1-9.3,2-14,3c-0.9,0.4-1.5-0.4-1.1-0.8c3.4-3.5,4.2-8.4,7-12.2       c0.5-0.6,1.1-1.5,2-0.9c1,0.7,0.7,1.7,0.3,2.7c-1.1,1.2-0.8,2.2,0.5,3.1c-0.8-0.6-1.3-1.3-1-2.4c2.2-1.6,0.2-4.7,2.2-6.3       c0.1-0.4,0.3-0.8,0.4-1.3c-0.1-3.7-1.4-7.2,1.2-10.9c2-2.9-2.8-3.3-3.5-5.5c1.3-2.1,3.4-1.2,5.1-1.4c-1.9-0.3-3.1-1.2-2.3-3.4       c0.9-1.2,2.1-1.7,3.5-1.9c14.7-3,29.5-1.9,44.2-1.2c1.7,0.2,3.4,0,5,0.8c0.5,0.3,0.7,0.7,0.8,1.3c-0.3,0.6-0.8,1.2-1.5,1.2       c-7.9,0.4-15.8,2-23.8,0.7c-0.7-0.3-0.1,0.8-0.1,0.2c0-0.1,0.2-0.2,0.5-0.1c2.6,1.3,5.3,0.4,7.9,0.4c4,0,5.6,2.3,6.4,5.7       c1.2,5.2-2.8,14.1-8,17c-1.9,1-3.2,2.1-4.2,3.9c-1.1,2.1-2.9,2.5-5.1,1.8c-1-0.3-1.7,0.4-1.8,1.3c-0.1,1.2,1,1.1,1.8,1.1       c3.2,0.1,6.3-0.1,9.5,0.1c1.6,0.1,3.8-0.5,4.2,2.1l0,0.1c-4.6,0.6-9.3,0.8-13.9,0C380.7,442.5,376.2,440.9,372,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M357,436c0-0.5,0.1-1-0.1-1.5c-0.3-1.2-0.8-0.7-1.1,0c-0.5,1-1.1,2-1.6,3.1c-1.4,3.4-2.9,6.6-5.2,9.4       c-1.8,1.3-4,1.3-6.1,1.9c-1.7-1.9-4.6,0.2-6-1.3c-2-2.1-7.1-3-4-7.9c0.4-0.6,0.2-1.7-0.7-2.2c-0.9-0.5-1.5,0.3-2.1,0.9       c-0.5,0.5-0.9,1-1.4,1.5c-1.3,1.3-0.4,5.2-3,4.1c-2-0.9,0.1-3.9,0.9-5.7c0.7-1.5,0-5,4.2-3.1c2,0.9,2.3-3.7,2.3-4.4       c-0.1-4.7,3-5.2,5.9-4.6c6.1,1.3,5.5-1.9,4.3-6c-2.2,0.4-4,2.7-6.5,1.4c1.7-2.7,4.9-3.1,7.3-4.5c-1.6-4.3-5.3-2.7-8.2-3.2       c0.4-1.2,1.3-1.9,2.5-2.3c6.3-2,12.8-3.2,19.3-4.5c0.8-0.2,1.6,0.2,2.2,0.9c0.1,2.6,3,1.7,4.2,3.6c-2.1,0.2-4.1,0.3-6.5,0.5       c1.5,1.3,4.5,0.1,4.3,3c-0.1,1.6,0.4,3-1.4,4.6c-1.6,1.4-0.8,4.4-0.3,6.6c0.3,1.3,1.1,2.5-0.5,3.4c-0.4-0.3-0.7-0.5-1-0.5       c0.3,0.1,0.6,0.2,0.9,0.3c0.6,0.2,0,0.9,0.3,0.3c0.1-0.1,0-0.2-0.2-0.2C359,432,359,434.5,357,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M237,602c-0.2-1.7,0.5-3.5-0.7-5.6c-2.3,3,0.6,6.2-0.9,8.8c-0.5,0.9,0.8,3-1.6,2.8       c-1.5-0.1-4,0.9-4.4-1.1c-0.7-3.3-2.8-1.7-4.4-1.9l0,0c0.7-7-2.7-13.4-8.6-15.9c-0.9-0.4-2.2-0.1-1.9-1.6       c0.2-1.1,1.3-1.4,2.4-1.4c3.8-0.1,5.9-1,2.2-4.6c-2-2,0.5-2.7,1.4-4.8c-7.2,1.6-9.1,8-14.2,11.8c-0.7-0.1-0.3-2.8-2.3-2.4       c-0.1-0.2-0.2-0.4-0.3-0.6c-0.1-4.1,0.4-8.3-1.7-12.1c-1.2-2.2,0.6-3.6,2.2-3.3c5.9,1.1,5.5-2.9,5.6-6.5c0-1.2,0.1-2.3,0.8-3.3       c1.7-1.5,4.8-0.4,5.9-3.6c0.6-1.7,2.8-0.4,3.4,1c0.9,2.2,2.1,3.4,4.6,3.8c3,0.5,0.9,4.8,2.5,5.1c1.6,0.3,3.6-1.6,5.5,0       c1.3,1,1.1,2.3,0.6,3.6c-1.8,4.3-3.6,8.6-0.8,13.3c0.8,1.3-0.3,2.5-1.7,3.1c-3.1,1.4-1.5,2.6,0.3,4c-0.5-0.8-0.3,0.2,0.2-0.2       c-2.8-2.2-1.3-3.1,1-4.3c1.6-0.8,2.5-4.3,4.8-0.9c1.6,1.3,2.3,2.9,1.9,4.9C236.5,593.7,239.6,598.3,237,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2E3B"),
                d:
                  "M237,585c-1-0.2-2.5-1.7-2.8,0.2c-0.4,2.5-2.6,1.9-4,2.7c1.4,1.5,3.8,1.4,4.2,3.5       c0.1,0.3-0.5,1-0.8,1.1c-2.2,0.3-3.5-1.6-5-2.7c-0.9-0.6-1.4-1.8-2.1-2.7c0.7-1.8,2.3-0.8,3.4-1.3c1.2-0.5,2.5-1.5,1.5-2.5       c-4.4-4.4-1-8.6,0-12.9c0.3-1.1,2.3-1.9,0.6-3.3c-1.4-1.1-2.7-1-3.9,0.3c-0.8,0.9-1.8,2-3,1.3c-1.8-1.1,1.1-2.1,0.5-2.7       c-1.2-1.1,1-5-3.2-3.8c-2.2,0.6-3.2-1-2.9-3.3c0.2-1.4-0.8-2.4-2-2.3c-1.2,0.1-1.2,1.2-0.9,2.3c0.6,2.8-0.5,2.9-2.6,1.6       c-0.8-0.5-1.9-0.4-2.9-0.6c-0.3-0.4-0.5-0.8-0.5-1.2c0.1-2,0.4-4,0.3-6c0.5-0.9,1.2-1.4,2-1.9c3.5-1.7,6.9-4.7,10.2,0.3       c0.6,0.9,2.5,0.5,3.3-0.2c3.3-2.8,4.1-0.4,5.7,2c2.7,4.1,6.3,7.8,4.1,13.5c0.1,0.4,0,0.2,0.3-0.2c0.7-1.4,0.2-4.2,2.1-4.1       c3.1,0.2,0.1,3.4,1.6,4.8C239.9,573.1,238.5,579.1,237,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2B37"),
                d:
                  "M240,567c-1.6-0.9-0.5-2.8-1.5-4.2c-1,1.8-1.8,3.5-1.3,5.5c0.4,1.6-0.6,1.7-1.7,1.5       c-1.3-0.2-1.8-1.2-1.2-2.2c3.4-5.4,0.6-9.2-3-13c-1-1.1-1.4-2.8-2.6-5.1c-0.2,5.4-4.4,2.2-6.2,4.2c-0.1,0.1-1-0.2-1.2-0.5       c-3.2-4-3.2-4-8.4-1.2c-1.3-2.7,1-4.6,1.6-6.9c3.3-3.3,6.2-7.6,11.9-3.4c0.6,0.4,3.8-1.5,5.6-2.6c2.8-1.7,4.7-1.3,6.3,2       c1.9,4.2,3.9,8.3,4.7,12.8C244.1,558.8,241.3,562.7,240,567z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80262F"),
                d:
                  "M243,554c-2.7-0.6-0.8-4.5-3.6-5c2.3-3.7-2.9-5-2.6-8.3c0.2-1.8-1.6-1.8-3-1.3       c-0.3,0.1-0.5,0.5-0.8,0.6c-2.9,0.8-4.8,4.1-9,1.4c-3.1-2-5.9,2.6-9.1,3.7c-0.2-0.2-0.3-0.4-0.5-0.6c0.4-5.2,2.5-9.8,5.8-13.9       c6.7,0.4,13.5,0.7,19.7,3.5c1.3,1.4,3.3,2.2,3.1,4.7c-0.1,1.1-0.6,2.9,1.6,2.9c1.5,0,2.5-0.5,2.5-2.3c0-1,1-1.2,1.8-1.3       C247.4,543.5,246.4,549.2,243,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4046"),
                d:
                  "M110,589c-0.1-1.9-2.7-2.8-2-5c4.9-2.8,8.4,0.8,11.6,3.1c4.5,3.3,9.4,6.3,13.6,10c1,0.7,2,1.4,2.4,2.7       c-0.5,2.8,0.5,4.5,3,6c4,2.4,7.6,5.4,10.6,9c2.7,3.3,7.2,4.1,10,7.3c1.1,1.2,2.9,1.8,2.8,3.8c-0.3,0.3-0.6,0.7-1,1       C143.4,615.2,125.8,603.3,110,589z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B313B"),
                d:
                  "M170,622c4.6,1.9,10.1-0.3,15.1,2.8c-2,1.4-4.9-0.6-5.6,2.9c6.8,1.6,12.1-4.6,18.5-3.7       c-5.4,5.9-17.9,8.4-25.4,6.3c-3.6-1-6.5-2.7-9.6-4.3c-0.7-2.4-1.7-4.4-4.5-5.1c-2.9-0.7-2.9-3.1-2.1-5.5       c0.3-0.4,0.6-0.7,1.1-0.8C162.3,615.9,166.4,618.6,170,622z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82353E"),
                d:
                  "M157,615c0,2.6-0.5,5,3.7,5.2c3.5,0.2,3.4,3.1,2.4,5.8c-0.3,0-0.7,0-1,0c-3.5-2.7-6.6-5.9-10.7-7.7       c-3.4-1.5-4.4-5.5-7.7-7.2c-2.4-1.2-4.1-3.8-6.5-4.8c-3.4-1.5-3.9-3.4-2.1-6.3c1.6-0.6,2.4,0.6,3.4,1.5c0.8,1.1,2,1.6,3.2,2.1       c4.7,2.7,8.7,6.3,13.4,8.8C156,612.9,156.8,613.8,157,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60121F"),
                d:
                  "M493,479c-1.4-0.5-2.3-2.2-4.1-2c-11.4-8.4-23.5-15.5-36.1-21.9c-0.1-0.7,1.6-0.9,0.9-1       c-3.8-0.9-6.8-3.6-10.7-4l0,0c-1-0.9-2.4-1.1-3.6-1.6c-1.2-0.5-2.9-0.6-2.7-2.4c0.2-2.1,2.1-2.5,3.7-2.5       c2.1-0.1,4.3-0.1,6.4,0.6c2.4,0.8,4.6,0.6,6.6-0.8c3.5-2.4,5.7-1.4,6.4,1.7c-0.4-0.9-1.7-2.9,0-4.8c1.6-1.8,2.8,0.4,4.1,0.6       c2.3,0.2,5-0.1,7.2-0.9c2.4-0.8-0.1-3.3,0.6-4.9c0.5-0.6,1.2-0.8,2-0.7c1.3,0.2,2.1,1.2,2.8,2.2c0.4,0.6,0.7,1.2,0.8,2       c0.1,1-1,2.8,0.6,3c4.4,0.4,3.2,1.7,1.7,4.5c-1.1,2-3.7,4.8-0.3,7.9c-0.8-1.2-1.9-1.7-1.4-2.8c1.7-3.7,5.7-4,8.9-5.3       c2-0.8,4.6,0,6,2.5c1.7,2.9,2.2,5.4-0.4,6.7c1-1.2,2.9,0.9,4.8,1.1c-0.2-2.5-2.7-3.4-2.6-5.6c0.2-0.4,0.6-0.8,1-0.9       c0.7-0.2,1.4-0.1,2.1,0.2c1.3,0.7,2,2,2.9,3c5.1,5.2,9.5,11.1,14.5,16.4c0.4,0.6,0.6,1.3,0.8,2c0.1,0.5,0.2,1,0.2,1.5       c-0.4,7.7-0.8,7.9-7.3,4c-1-0.6-1.7-1.6-3.1-1.3c-3.8,0.9-4.7-1.2-4.5-4.4c0.2-0.6-0.9,0.4-0.2,0.2c0.3-0.1,0.4,0.2,0.1,0.5       c-2.1,2-2.3,3.8-0.6,6.5c1,1.6-1.2,1.8-2.5,1.7C496.5,479.4,494.9,478.1,493,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M443,450c5.4,0.1,10,2.6,14.5,5.5c-1.5-0.1-3.1-0.3-4.6-0.4c-1.9,0-3.2-1.4-4.8-2       C446.9,451,444.3,451.6,443,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M472,435c0.4,1.4,2,2.1,1.7,3.9c-0.3,1.9,0.2,3.6-2.9,2.6c-2.4-0.7-5.2-0.7-6.3,1c-2.4,2.1-1.6-7-4.3,0       c-0.5,1.4,1.2,3.4,0.5,5.7c-0.9-1.4-1.9-2.6-2.4-3.9c-0.5-1.4-1-2.1-2.3-0.9c-4.3,4.2-9.4,1.8-14,1.3c-2-0.2-2.9,0.9-4.6,0.6       c0.9,3.3,4.9,2,5.7,4.8c-7.3-1.8-14.6-4-22-5.4c-7.3-1.3-14.7-1.8-22-2.6c-5-2.1-10.1-0.4-15.2-1c-1.1-0.1-2.5,0.5-3.2-0.8       c-0.5-0.9,0.4-2,1-1.9c2.1,0.3,1-4.2,3.7-2.5c4.6,3,3.9-1.9,5.3-3.5c0.4-0.4-0.8-1.8,1.1-1.9c3.8-0.1,9.2-5.8,9-9.4       c-0.1-0.9,0.3-1.4,0.6-2.2c1.7-4.4-0.5-8-5-8.7c-2.1-0.3-4,1.1-5.8,0.3c-1.6-0.7-2.9-1.8-4.8-2.1c9.2-0.4,18.3-0.9,27.5-1.3       c4.7-2.4,9.3-1.7,13.8,0.7c0.2,3.6-2.7,3.3-4.6,3.3c-3.1,0-6.3-0.2-9.4-0.8c-1.4-0.3-3.2-0.6-3.3,1c-0.1,3.7-2.2,6.7-3.1,10       c-0.4,1.3-1.1,3.1,0.6,4c1.3,0.7,2.6-0.3,3.7-1c5.3-3.6,5.3-3.6,10.3,0.6c0.7-1.2,0.3-3.1,2-3.5c4.8-1.1,9.7-3.7,14.3,0       c3.4,2.7,7,2.2,10.8,1.8c2.8-0.3,5.5-0.7,5.9,3.3c0.2,2,1.4,1.9,2.8,1.5c0.8-0.2,1.4-0.8,2.1-1.3c1.4-0.9,3.2-2,4.6-0.8       c1.4,1.2,1.1,3.5,0.9,5.2c-0.5,2.6-2.7,0.9-4.1,1c-0.5,0.1-1,0.2-1.5,0.2c-0.7,0.1,0,1-0.1,0.3c0-0.1,0.1-0.1,0.3-0.2       c1.6-0.8,3-0.1,4.2,0.7c1.6,1,2.6,1.7,4.5,0.1C469.2,431.9,471.1,433,472,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F4A52"),
                d:
                  "M385.1,442c4.6,0,9.3,0,13.9,0C394.3,443.5,389.7,443.5,385.1,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912531"),
                d:
                  "M519,506c-3.8-3.9-6.4-8.5-7-14c0.1-2.2,1.9-2.1,3.2-2.2c3.3-0.4,6.6-1.1,9.9-1.3       c0.5-0.1,1-0.1,1.5-0.1c1.5,0.2,3,0.5,4.4,1.1c6,6.2,11.3,12.9,15.5,20.5c0.6,1,1,2.1,0.6,3.3c-0.8,1.2-1.8,1.7-3.2,1.1       c-1.6-1.6-1.3-4.1-2.8-5.7c-6.3-1.9-8.5-8.7-14.1-12c-1.1,2.8-1.4,5.4,0.4,7.3c3.6,4,0.5,4.9-2.4,6       C522.9,508.8,522,505.8,519,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992431"),
                d:
                  "M525,510c2.3-1.6,4.5-3.2,0.8-5.7c-0.5-0.4-0.7-1.5-0.7-2.3c0-2.6-1-5.8,1.7-7.2       c0.8-0.4,3.7,2.2,4.8,3.9c1.4,2.2,4.1,3.1,4.8,6.1c0.5,2.3,5.1-0.3,5.7,3.2c0.8,1.9,1,3.2-1.2,4.8c-3.1,2.2-4.1,6.4-6.8,9.2       c-2.7-1.2-2.3-4.2-3.5-6.3C529.1,513.2,527.6,511.1,525,510z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2B39"),
                d:
                  "M534,522c0.4-1,1.3-2,0.2-3.2c-0.9-1.1-0.8-1.8,0.8-1.6c0.3,0,0.6,0.1,1,0.2c-0.1-4.5,5.6-5.1,5.9-9.3       c2,1.6,2.1,3.7,2,6c1.3,1.1,2.8,2.1,3.1,4c0.4,2,1.7,1.3,2.9,0.8c0.5-0.1,0.9,0,1.2,0.3c0.4,1.3,0.2,2.6-0.3,3.9       c-2,1.9-0.6,3.9-0.2,7c-3.4-5.8-6.7-2.6-8.6-0.3c-3.5,4-5,2.5-6.7-1.2c-0.4-0.8-1.4-1.4-1.4-2.5c1.1-0.1,1.9-0.5,1.9-1.8       C536,522.9,535.4,522.1,534,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671420"),
                d:
                  "M527,489c-0.3,0-0.7,0-1,0c-4.3-0.6-8-2.7-11.8-4.4c-5.3-2.3-5.8-2.2-8.2,2.3c-1,0.5-1.7,1.6-3,1.1l0,0       c-1.9-2.5-4.4-4.3-7-6c-0.3-0.3-0.7-0.7-1-1c-0.7-0.7-1.3-1.4-2-2c2.1-5.1,4.6,1.5,6.9-0.6c-1.1-2-2.4-4.3-3.7-6.6       c1.9-1.3,2.4,1.1,4,0.7c1.3-1.2-1.2-3.6,1.6-4.7c0.1,1.3,0.2,2.5,0.2,3.6c-0.1,1.6,1.2,3.3,2,2.9c5.1-2.5,6.6,3.5,10.7,3.5       c-1-2.1,0.8-4.4,0.3-6.9c0.2-0.1,0.4-0.2,0.5-0.2c6,4.6,11.2,9.8,14,17.1C528.9,488.8,528.2,489.4,527,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751826"),
                d:
                  "M505,486c0.3-0.1,0.9-0.2,0.9-0.2c0.1-6.1,3.7-3.9,6.9-3c4.2,1.1,7.5,4.7,12.3,4.1       c0.2,0,0.6,1.4,0.9,2.1c-4.4,2.2-9.5,1-14,2.9c-2,0.4-4,1.4-6,0C505.3,490.1,504.5,488.1,505,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F222D"),
                d: "M496,482c3,1.2,6.2,2.2,7,6C499.9,486.9,498,484.4,496,482z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F222D"),
                d:
                  "M505,486c0.8,1.9,2,3.8,1,6c-1.6-0.9-2.9-2-3-4C503.7,487.3,504.3,486.7,505,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d: "M237,612c-1.6-2,0.8-4,0-6C238.8,608,237.9,610,237,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1533,426c3.2-1.4,3,1.5,3.8,3c0.5,0.9-0.2,3.4,2,2.2c0.8-0.4,4.3,0.2,2.6-3.1c-1-1.8,2-3.4,2-3.3       c4.1,2.9,8.3-4.1,12.6,1c-1.6-4.2,7.3-8.1,14.9-7.6c0.3,1.1-2.1,0.7-1.3,2.2c0.6,0.6,1.2,0.1,1.8-0.1c1.3-0.4,3-2.2,3.9-0.5       c0.6,1,1,3-1.1,4.6c-2.3,1.7,1,1.8,1.7,2.6c1.5,1.6,5.5,0.1,5.1,4.1c-6.2,2.6-12.4,5.2-18.5,8c-5.5,2.5-11,5.3-16.4,8       c-2.2-0.8-3.3,0.6-4.8,1.9c-1.8,1.6-4,2.7-6.2,3.8c-0.7,0.1-1.4,0-2-0.4c-0.8-4.5,1.6-7.3,5-9.7c-1.7-0.9-3.7-2.1-0.2-5.5       c-6.7,2.5-12.9,1.7-18.8,3.4c0.8,2.4,1.9,1.5,2.7,1.5c2.8-0.2,3.5,1.8,3.4,3.8c0,2.5-2.2,2.4-3.7,1.9       c-5.2-1.5-8.4,0.7-11.4,4.7c-3.4,4.5-8.5,6.5-13.9,7.8c-2.6,0.6-4-1.5-3.2-4.4c0.7-2.5,2.8-3.6,4.6-5c0.1,0,0-0.2,0.1-0.3       c-0.3,0-0.6-0.1-1-0.3c-1.5-1.4-1.4-2.8,0.2-4c1.1-0.9,2.4-1.6,3.2-2.8c4.7-3.4,8.5-8.1,14.2-10.1c1.3-0.4,0.7-1.8,1.8-2.4       c2.1-1.1,3.7-3.6,6.5-1.7c2.5,1.1,5.3,0.6,7.9,1.2c2.8,0.6,1.9-2.2,2.3-3.8C1532.8,426.4,1532.9,426.2,1533,426z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1E2B"),
                d:
                  "M1533,452c0.7,0,1.3,0,2,0c0.5,0.6,1.6,0.2,2,1c-4.7,3.7-9.3,7.3-14,11c-2,1.6-4.7,2.5-6,5l0,0       c-1.7,0.6-3.5,1-5.3,0.7c-3-3.1-2.9-4.1,0.7-5.2c1.9-0.5,1.9-0.5,3.7-2.5c-2.8-0.5-6.1,3-8.3-1.2c2.9-3.3,7-3.9,10.9-5.2       C1523.3,454.1,1528,452.4,1533,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3A"),
                d:
                  "M1501,487c-3.6,2.2-4.6,6.6-7.9,9c-1.3,1.1-2.8,1.3-4.4,0.7c-2.1-1.4-0.8-2.8,0-4.2       c1.3-2.3,3-4.3,3.8-6.8c1-2.4,1-5.6,5.4-4.4c2,0.5,2.6-3.1,4.8-3.8c2.1-0.7,4.3-1.1,5.6-3.3c0.3-0.4,0.6-0.7,1-0.9       c1.2-0.6,2.5-1.4,3.8-0.3c-3,3.2-6.1,6.4-9.1,9.6C1502.7,483.9,1501,484.9,1501,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1582.1,420.1c1.4-2.8,3.9-1.7,5.9-1.5c1.7,0.2,4.2,1,1.2,3.2c-1.5,1.1-0.5,2.7-1.4,4.1       c3-2.4,4.7,1.8,7.3,1.1c-1.8,1.3-4.1,1.3-6.1,1.8c-0.7-0.5-1.4-0.9-1.8,0.3c-1.2,1.1-2.5,1.7-4.2,1.7c1-3.4,2.4-6.9-3.8-5.6       c-2.3,0.5-2.2-1.2-1.4-2.8C1578.7,420.7,1580.7,421,1582.1,420.1c1.3,0.8,1.5,1.8,1.1,3c0.9-0.6,0.6-1.4,0.3-2       C1583.2,420.5,1582.5,420.4,1582.1,420.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1828"),
                d:
                  "M1537,453c-0.8,0-1.6-0.2-2-1c2.5-2.5,5.8-4,8.2-6.7c2.8-3.1,2,0.9,2.9,1.7       C1543.5,449.8,1540,451.1,1537,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02833"),
                d:
                  "M1513,473c-1.3,0.3-2.7,0.7-4,1c-0.3-0.4-0.5-0.8-0.6-1.3c0.2-2.2,1.5-3.3,3.6-3.7c1.7-0.1,3.3-1.4,5,0       C1516.1,470.8,1514.7,472,1513,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02833"),
                d:
                  "M1517,469c0.3-3.7,3.1-4.4,6-5C1521.7,466.5,1519.1,467.4,1517,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1587.2,429.1c-1.1-0.9-0.5-1.5,0.4-1.7c1.1-0.3,1.3,0.6,1.4,1.5C1588.4,428.9,1587.8,429,1587.2,429.1       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1480,514.9c-0.9,2.9,0.1,7.5-5.8,5.6c-1.3-0.4-2.4,1.7-3.2,3.2c-2.2,4.6-2.2,9.5-2,14.4       c0.1,2.2-0.1,4.1-3,3.8c-1.9-1.1-3.2-2.8-4.7-4.4c-2.1,3.2-2.1,7.2-3.1,11c-1.4,5.3-3,6.5-8.3,6c-2.1-0.2-2.9-1.3-3.6-2.9       c-1.2-2.7-2.6-2.1-4.6-0.7c-4.6,3.4-4.4,8.7-5.7,13.3c-0.6,1.9-0.8,3.8-2.4,5.3c-0.5,0.5-1.1,0.9-1.7,1.2       c-3.8,1.7-7.7,1.9-11.7,0.8c-1.2-0.3-3.1-0.4-3.1-2c0-1.7,1.9-1.5,3.1-1.7c0.5-0.1,1,0,1.4-0.5c-2.4-1.4-4.8-0.5-7.2-0.1       c-1.1,0.2-2.4,0.4-2.9-1.2c-0.4-1.6,0.5-2.6,1.9-2.9c2-0.5,4-1.1,5.6-0.6c-3.8,1.1-6-1.9-7.9-4.8c-1.5-2.2-2.6-4.5-5.8-4.8       c-1.9-0.2-1.8-1.9-1.2-4.5c-2.4,3.3-4,5.9-7.5,5.7c-3.1-0.7-4.8-2.4-4.5-5.8c0.7-2.1,2.6-2.5,4.3-3.3       c7.3-3.5,14.9-5.9,22.4-8.9c18.5-6.9,36.7-14.6,55.3-21.1C1475.9,514.4,1478.1,512.3,1480,514.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63945"),
                d:
                  "M1480,514.9c-5.5,0.3-10.5,2.5-15.3,4.5c-15,6.3-30.4,11.9-45.7,17.5c-2.9-1.8-6.9-1.5-8.9-5       c-0.7-1.2-2-0.4-3.1,0c-5.3,1.8-10.1,1-14.6-2.4c-1.1-2.2,0-4.9-1.6-7.1c-1.7-3.3-0.8-6.1,1.6-8.6c0.4-0.3,0.9-0.5,1.4-0.6       c6.5,2.3,6.8,2.6,4.4,7.7c3.5-1.2,4.2-8.8,9.8-4.4c1.6,1.2,3.5,3,0.8,5.3c5.9-3.3,12.5-0.8,18.7-2.3c1.3-0.3,2.2,0.4,3,1.3       c3.4,3.9,9.6,4.2,13.8,0.8c2.6-2.1,4.8-4.5,6.9-7.2c4.6-5.9,4.6-5.9,9.8-0.4c1.5-5.7,3.8-6.6,8.9-6.1c3,0.3,5.9,1.1,8.8,1.5       c1.8,0.4,1.7,2,2.2,3.3C1480.6,513.7,1480.3,514.3,1480,514.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1433,569c2.5-3,1.7-7,3-10.4c1-2.8,1.6-5.7,3.9-7.8c4.6-4.2,4.9-4.2,8,1.2c1.4,2.5,4.1,0.2,6,1.6       c0.7,0.5,3.4-2.6,2.9-4.4c-0.9-3.6,3.9-6.3,1-10.2c-0.7-0.9,2.9-0.5,3.5-2.7c0.2-0.8,0.7,0.9,1.2,1.2c1.5,1.2,3.5,2.1,3.5,4.5       c-1.3,2.4-2.8,4.7-3.7,7.3c-0.5,1.6-1.3,4.1,1.7,4.7c1.2,1.6,0.4,2.9-0.5,4.2c-2.9,0.1-3.6,1.6-3.3,4.4c0.3,2.8,0,5.7,1.7,8.2       c-1.3,10.5-3.1,20.9-2.9,31.5c0,1.9-1.1,3.1-3,3.4c-2.6-0.1-2.8-1.9-2.6-3.9c0.4-5.6-0.5-11-0.9-16.5c-0.2-3.2,1.3-6.2,1.3-9.4       c0-5-0.7-5.3-5.7-5.1C1443,570.9,1437.4,574.1,1433,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43E4E"),
                d:
                  "M1463,558c0.3-1.3,0.7-2.7,1-4c0.7,0,1.3,0,2,0c-0.1,8.2-2.7,15.9-4.2,23.9c-1.6,8.4-1.9,16.8-1.9,25.2       c-0.8,2.9-0.6,5.9-0.1,8.8c-0.3,2-0.6,4.1-0.8,6.1c0,0-0.1,0.1-0.1,0.1c-1.4,1-2.8,1.2-4-0.2c1.1-2.2,0.9-4.7,1.4-7       c0.5-2.1-1.7-1.2-2-2.3c-0.5-1.3-0.4-2.5,0.6-3.5c2.4-0.2,2.9-1.7,3-3.8c0.5-6.9,1-13.9,1.6-20.8c0.3-3.5,2-6.8,1.3-10.5       C1460.1,565.7,1461,561.8,1463,558z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3844"),
                d:
                  "M1481,513c-0.7-1-1.3-2-2-3c-0.7-1.4-2.6-2.9-0.6-4.3c2.4-1.7,4.7-0.7,6.4,1.6c0.1,0.2,0.2,0.4,0.3,0.7       c-0.3,1.3-0.7,2.6-1,4C1482.9,512,1481.7,511.8,1481,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3542"),
                d:
                  "M1458,625c-1.5,3.5-3.9,6.6-1.3,11c1.2,2.1,0.2,5.5,0.3,8.3c0,1.5-0.2,3.1,0.2,4.4       c2.3,7.3,2.3,7.3-5.3,7.3c-5,0-10,0-14.9,0c-0.6-0.8-0.6-1.6,0.1-2.3c4.2-1.4,8.5-0.2,12.3-0.7c-15,0-30.4,1.1-45.8,0.2       c-0.5-0.1-1-0.3-1.4-0.6c-0.5-0.5-0.9-1-0.8-1.7c0.1-4.2-0.8-5.4-5.2-6.4c-1.8-0.4-3.5-0.9-5.3-1.4c-1.4-0.4-2.5-1.1-2.3-2.8       c0.2-1.5,1.4-1.6,2.5-1.9c4.1-0.9,8.2-0.7,12.4-0.4c4.2-0.8,8.5-1,12.6-1.9c1.7-1.3,3.8-0.8,5.8-1.1c0-1.5-1.6-1.5-2.1-2.4       c-2.2-1.8-4.7-1-7.1-1.1c-8-0.3-16.1,1-23.9-2c-1.9-0.8-3.7-1.4-4.5-3.5c-0.5-1.4-0.9-2.8-0.1-4.2c3.9-2.7,8.3-0.3,12.4-1.2       c16,0.8,32,1.9,48,2c3,0,6,0.2,8.9-0.5C1455.9,621.5,1457.8,622,1458,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64550"),
                d:
                  "M1458,625c-1.3-2.5-3.3-1.1-5.2-1.1c-7.9,0.2-16,0.9-23.8-0.2c-8.2-1.1-16.5,0.2-24.7-1.2       c-2.7-0.5-5.5-0.3-8.3-0.5c-1.4-0.9-2.9-0.4-4.3-0.5c-1.5-0.1-3.2,0.2-3.2-2c0-1.8,1.4-2.9,2.9-2.9c4.2,0.1,8.5-1.4,12.7,0.2       c0.9,0.3,1.8,0.9,2.8,0.5c-0.5,0.1-1,0.1-1.3-0.2c-0.7-0.6-0.2-1.2,0.3-1.6c1.1-0.8,2.5-0.8,3.8-0.9c3.3-0.1,6.6,0.1,9.9-0.2       c10.5-0.6,21,1.2,31.5,1.1c1.2,0,2.3,0.2,3.3,0.8c0.2,0.2,0.5,0.4,0.7,0.6c1,1.5,2.6,0.8,4,1       C1458.6,620.3,1459.9,622.9,1458,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93647"),
                d:
                  "M1402,652c0.3,0,0.7,0,1,0c0.3,0.1,0.4,0.3,0.4,0.6c0.2,0.6,0.9,0.1,1.2,0.5c5.1,3.4,10.5,1.8,15.7,0.8       c5.7-1.1,11.2-1.7,16.8,0.1c0,0.7,0,1.3,0,2c-0.5,2.8-2.7,2-4.3,2c-8.9,0.1-17.8,0-26.7,0c0,0-0.5,0-0.5,0l-0.5,0       c-2.7,0.7-5.4,0.7-8,0c-0.7,0-1.3,0-2,0c-2,0.8-4,0.8-6,0c-1,0-2,0-3,0c-0.2-0.1-0.4-0.3-0.7-0.4c-0.5-4.1,3-4,5.4-4.6       c2.5-0.6,5.2-0.3,7.5-1.8C1399.6,650.9,1400.9,651,1402,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1459.9,611.9c-1.4-2.9-1.4-5.9,0.1-8.8C1459.9,606,1459.9,608.9,1459.9,611.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93D4C"),
                d:
                  "M1417,637c-4.1,2.1-8.9,0.1-13,2c-6.8-1.2-13.5-0.4-20.1,0.7c-3.5,0.6-4,3.4-3.1,6.1       c0.9,2.6,0.4,4.4-1.3,6.2c-0.3,1.7,1.6,2.2,2,3.5c-0.1,2.4,1.9,1,2.8,1.5c0.6,0.2,1.2,0.5,1.8,0.9c0,0,0,0,0,0       c-2.5,2-5.4,0.8-8,0.9c-1.8,0.1-1.8-1.4-2-2.8c-0.1-1.7,0.6-3.6-0.9-5.1c-1.8-4.7-3.2-9.4-1-14.4c4.1-1.8,8.5-0.9,12.8-1.1       c6-0.3,12-0.2,17.9,0C1408.8,636.2,1413.2,634.3,1417,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E161F"),
                d:
                  "M1374.1,637.2c0.3,4.6,0.7,9.2,1,13.8c-0.5,2.6,1,5.6-1,8c-0.1-0.3-0.2-0.7-0.3-1c-0.3-2-0.6-4-0.9-6       c-2-4.2-1.9-8.8-2.3-13.3c0.1-1.4,0-2.8,0.6-4.1c0.2-0.5,0.6-0.9,1.1-1.1c0.5-0.1,1.1-0.1,1.6,0.1c0.4,0.3,0.7,0.8,0.8,1.3       C1374.8,635.8,1374.6,636.5,1374.1,637.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93D4C"),
                d:
                  "M1397,658c2.7,0,5.4,0,8,0C1402.3,659.5,1399.7,659.5,1397,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93D4C"),
                d: "M1389,658c2,0,4,0,6,0C1393,659.5,1391,659.5,1389,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3844"),
                d:
                  "M1488,496c1.7,0,3.3,0,5,0c0.1,2-2.2,3.6-1.3,5.8c-4,0.2-3.9,4.8-6.7,6.2c0,0,0,0,0,0       c-1-1.1-1.2-2.5-1.3-3.9C1483.9,500.7,1483.6,497.1,1488,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B54754"),
                d:
                  "M285,286c-6,0-12,0-18,0c-2-2.2-1.7-3.6,1.4-3.9c2.2-0.2,4.3-0.4,6.3-1.3c0.3-0.3,0.7-0.6,1-0.8       c2.8-1,5.1-3.1,8.1-3.6c1-1.1,0.9,3.1,3,0.3c2.2-2.8,12.1-2.2,15.1,0c0.9,2.8,2.9,3.8,5.7,3.7c2.1-0.1,4.3,0.1,6.5,0       c12.8-0.4,25.3,1.5,37.8,3.7c5.6,1,11.2,0,16.9,0.5c4.2-1.6,7.6,0.5,11,2.3c1.8,1,2.5,2.2,0.4,3.7c-2.4,1-4.9,0.8-7.4,0.7       c-22.7-0.7-45.4-2.4-68.2-3.4C298.2,287.8,291.4,287.7,285,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6404D"),
                d:
                  "M285,286c18.8,0.7,37.7,1,56.5,2.1c13.1,0.8,26.3,2,39.5,1.8c0.2,0.1,0.4,0.3,0.6,0.4       c1.2,1.8,3.2,2.1,5,2.8c1.4,0.6,2.4,1.5,0.3,2.7c-7.6-0.2-15.1-0.1-22.6-1.7c-20.3-0.1-40.5-2.8-60.7-3.2c-1,0-2-0.1-2.7-1       c-2-3.3-5.2-2.7-8.1-2.4C290,287.9,287.2,288.5,285,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB4956"),
                d:
                  "M301,290c21.4,0.2,42.6,3,64,3c0.5,1.1-0.2,1.5-1,2c-10.9,0.7-21.7-0.9-32.5-1.9       c-5.9-0.5-11.9-0.6-17.8-0.9c-11.7-0.6-23.4-1.8-35.2-1.2c-2.7,0.1-5.1-0.6-7.5-1.7C281,289.4,291,288.4,301,290z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF4551"),
                d:
                  "M364,295c0.3-0.7,0.7-1.3,1-2c1.5,0.8,3.1,1.1,4.8,1c6.1-0.6,12.1,0.8,18.2,1c8.8-1.2,17.5-0.4,26,2       c-5.6,2.5-11.6,1.2-17.3,1.4c-5.1,0.1-10.5,0-15.7-0.4c-2.7-0.8-5.3-0.8-8,0c-0.3,0-0.7,0-1,0C370.3,294.4,366.2,297.2,364,295       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6404D"),
                d:
                  "M275,281c-1.4,1.9-3.2,2.9-5.6,2.2c-2.9-0.9-2.8,0.8-2.4,2.8c-3,0.4-6.2-1-9,1c-1.5-0.9-3.2-1.1-5-1       c-1-1.3-3.6-0.9-3.5-3.4c0.1-0.4,0.4-0.8,0.8-1c1.2-0.5,2.5,0.7,3.6-0.4c3.4-1.1,6.8-2,10.5-0.6c1.7,0.6,3.9,0.5,5.7-0.6       C272,278.9,273.6,279.5,275,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0999D"),
                d:
                  "M325,308c5.1-2.4,10.8-1.4,16-1.6c17.7-0.8,35.4-0.4,53.1-0.3c1.7,0,4.2-1.1,4.9,1.9       c-1.7,1.8-4,1.4-6.1,1.4c-7.3,0.1-14.6,0-21.9,0c-2.2,0-4.3,0.2-6.2,1.4c-13.2,0.5-26.3,1.7-39.5-0.3       C324.4,309.8,324.4,309,325,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0999F"),
                d:
                  "M325,308c0,0.7,0,1.3,0,2c-7.2,2.8-14.7,3.8-22.3,3.7c-4.6-0.1-9.3-0.2-14-0.3       c-1.4-0.1-2.9,0.3-4.3,0.5c-3.2-0.1-6.4,0.8-9.4-0.9c-0.3,0-0.7,0-1,0c-2-2.9-2-2.9,3-4c1.3,0,2.7,0,4,0c3.2-1.3,6.8,0.4,10-1       c2,0,4,0,6,0C306.3,308,315.7,308,325,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E39A9D"),
                d:
                  "M365,310c0.5-2.8,2.7-1.9,4.3-2c9.9-0.1,19.8,0,29.7-0.1c5.5-0.6,11.1,1.4,16.5-1.1       c0.4-0.2,1.4,0.7,2.1,1.1c0.3,1,0.6,2,0.8,3c-0.1,0.2-0.1,0.5-0.2,0.7c-1.2,1.8-2.4,3.5-4.8,1.5c-5.8,0.3-11.5-0.3-17-2.3       c-1.9-0.7-3.6,0.3-5.4,0.4c-7.5,0.2-14.9,0.1-22.4,0.1C367.3,311.3,365.9,311.1,365,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M275,332c0.7-0.7,1.3-1.3,2-2c0.3,0,0.6,0,1,0c0.9-0.3,1.3,0.2,1.6,0.9c-1.1,5.6-4.6,10.4-5.8,16       c-1.1,2.4-0.2,5.9-3.5,7.3c-2.2-2-1.8-4-0.3-6.2c-1.9-4.6,2.5-7.2,3.5-10.9C273.9,335.4,275.2,333.9,275,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63161F"),
                d:
                  "M279,331c-0.3-0.3-0.7-0.7-1-1c4.5-7.2,11.8-10.5,19-14c0.2-0.8,0.6-1.3,1.3-1.6       c0.9-0.3,1.9-0.3,2.8-0.1c1.1,0.4,2.3,0.7,3.1,1.7c-0.8,3.3-4.5,1.6-6.1,3.6c-0.6,0.4-1.2,0.7-1.9,0.9       c-3.9,0.5-7.1,2.4-9.6,5.3C283.8,327.1,282.6,330.8,279,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8F97"),
                d:
                  "M275,313c3.3,0,6.7,0,10,0c1.5,0.1,3-0.2,4.5,0.4c0.5,0.3,0.8,0.7,0.7,1.3c-1.3,1.4-2.8,0.9-4.3,0.4       c-3.6-0.3-7.3,0.3-10.9-1.1C275,313.7,275,313.3,275,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0939C"),
                d:
                  "M285.8,315.1c1.4-0.3,3.1,0.4,4.2-1.1c2.4-2.1,3.9-2.1,5.7,0c0.7,0.8,2.2-0.1,2.6,1.2       c-0.5,0.3-0.9,0.6-1.4,0.8C293.2,315.7,289.4,316.6,285.8,315.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D64E5A"),
                d:
                  "M427,276c0.1-1.7-0.3-3.6,0.9-5.1c10.7,3.7,21.8,2.5,32.7,2.7c7.6-0.7,15.2,0.3,22.7,1.2       c8.5,1.1,17-0.3,25.5,1.2c3.8,0.7,7.7,2.3,11.7,1.5c3.8-1.1,7.6,0.5,11,1.2c4.1,0.8,8.2,0.9,12.2,1.4c8.5,1,17.1,0.6,25.7,0.7       c6.9,5.8,15.3,2.9,23,4.2c3.1,0.9,6.4,1.6,9.4,2.8c1.7,0.7,3.9,1.2,3.4,4c-3.7,3.3-8.2,1.4-12.4,2c2.8,1.3,5.8,0.7,8.7,1       c1.6,0.2,3.7,0,3.7,2.3c0,1.9-2,1.8-3.4,2.1c-7,1.6-14.3,2.1-21.2,4.1c-1.4,0.4-2.9,0.3-4.3-0.4c1.7,0.9,3.4,0.4,5.1,0.5       c1.3,0.1,2.4,0.6,1.3,2.2c-1.2,1-2.6,1.2-4.2,1c-10.6-1.2-21.3-2.1-31.9-3.8c-2.2-1.7-4.6-1.4-7.1-1c-1.2,0.2-2.5-0.2-2.8-1.5       c-0.3-1.5,0.9-2,2-2.4c2.4-0.8,4.8-1.1,7.4-0.9c2.6,0.3,5-0.3,7.2-1.6c1.6-0.9,2.5-2.3,2-4.1c-0.5-1.9-2.2-2.1-3.6-1.8       c-4,0.9-7.3-0.6-10.9-2.1c-4.9-2-10.4-1.7-15.7-2.1c-3.7-0.3-7.7,0.9-10.5-3c-0.6-0.9-1.8,0.4-2.8,0.3       c-3.4,1.7-7.1,0.5-10.6,0.9c-2.9,0.3-5.8,0.3-8.3-1.2c-2.4-1.5-4.4-0.9-6.5,0.4c-2.2,0.6-4.4,0.2-6.4-0.4       c-2.7-1-1.6-2.1-0.6-2.6c-1.9,2.4-5.2,0.8-8.4,0.7c-13.1-0.4-26.3-0.7-39.4-2.3C430,278,428,278,427,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d:
                  "M418.2,302c0.2-0.4,0.4-0.8,0.6-1.1c0.5-0.4,1-0.6,1.6-0.9c6.5-0.8,13-0.3,19.4-0.3       c13.6-0.1,27.3-0.4,40.9,0.1c17.6,0.6,35.1,2.5,52.6,4.4c10.2,1.1,20.5,1.7,30.8,1.6c0.6,0,1.1,0.1,1.7,0.3       c10.3,2,20.8,2.8,31.2,4.1c4.3,0.7,8.6,1,12.8,1.9c5.9,0.8,11.9,1.4,17.8,1.8c0.5,0.1,1.1,0.2,1.6,0.3c2.6,1.2,6.4-0.3,7.8,3.5       c-2.3,2.7-5.4,1.3-8.1,1.7c-11.8-0.6-23.5-2.1-35.2-3c-17.4-1.3-34.7-3.2-52-5.4c-20.4-2.5-41-3.5-61.4-5.2       c-18.2-1.5-36.4-3-54.7-1.8C422.9,304.2,420.3,304.3,418.2,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84551"),
                d:
                  "M427,276c5.6,1.2,11.3,2.4,17.1,2c5.1-0.4,10.2,0.9,15.3,0.9c4.2,0,9.1-0.9,12.7-0.1       c3.5,0.8,6.9-1.8,10.1,0.4c-0.4,1.5-2.4,0.2-2.6,1.9c2.5,0.3,5,0.6,7.5,0.9c1.2-1,3-1.7,4.1-0.9c5.7,4,12.5,1.4,18.6,3.2       c2.4,0.7,4.9,0.5,6.6,2.8c5,6.6,2.7,11-6.7,12.5c-3.1-0.6-6.2-0.4-9.4,0.3c-4.2,1-8.5,1-12.9,0.7c-7.3-0.6-14.6-0.4-21.9-0.1       c-1.5,0.1-3.3,0.8-4.7-0.8c0-0.2,0-0.4,0.1-0.5c6.3-2.6,12.1-6,19.6-5.7c4.9,0.2,10.7,0.4,15.8-3.9       c-13.6-4.5-26.9-6.2-40.5-6.4c-5.6,0.5-11.2-0.8-16.8-0.2c-4.1,0.4-7.7-2.3-11.7-3.2c-1.4-0.3-0.7-1.9-0.3-3       C426.9,276.6,426.9,276.3,427,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8489"),
                d:
                  "M418.2,302c4.2,1.1,8.4,0.2,12.6,0.2c8.2,0,16.4,0.9,24.6,1c5.6,0.1,11.1,0.4,16.7,0.8       c16.2,1,32.3,3.2,48.4,3.7c12.2,0.4,24.4,1.9,36.3,3.5c14.5,1.9,29.1,2.2,43.5,4.6c9.4,1.5,19.1,1.6,28.7,2.3       c2.1,1,5,0.5,6.2,3.2c-0.1,0.9-0.7,1.3-1.5,1.5c-0.8,0.1-1.6,0-2.4-0.3c-5.2-2.2-10.8-1-16.2-1.8c-5.8-0.9-11.9-0.8-17.8-1.2       c-9.1,0-18-1.6-27-2.5c-25.7-4-51.5-6.5-77.4-7.5c-12.9-0.2-25.8-0.9-38.6-1.9c-7.6-0.6-15.2-0.2-22.8-0.1       c-4.4,0-8.6,0-12.4-2.5C418.6,304.1,417.7,303.3,418.2,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56D77"),
                d:
                  "M432.9,238.7c0-2.6,0.1-5.1,0.1-7.7c-0.6-0.6-0.6-1.3-0.4-2c0.8-1.1,1.8-1.5,3.1-1.5       c2.6,0.9,3.9,3.6,6.6,4.3c0.3,0.3,0.6,0.7,0.8,1.1c3.7,6,9.9,9.4,14.6,14.4c1.9,2.2,5.6,3,5.6,6.8c-2.9,3.3-4.9-0.6-7.3-1       c-1.1-0.2-1-3.5-2.6-1.3c-1.3,1.7-4.7,2-3.5,5.6c1.3,3.8,2.9,6.9,7.3,7.7c1.6,0.3,3.7,0.8,2.4,3.5c-8.3,0.1-16.5,0.3-24.6-2.1       c-1.4-2.7,1.2-5.3,0.4-8c0.1-0.7-0.7,0.1,0,0c0.2,0,0.2,0.1,0.2,0.4c-0.1,0.8,0.2,1.8-0.8,2.1c-1,0.3-1.4-0.7-1.6-1.5       c-0.6-2.4,0.3-4.5,0.8-6.8c0.8-3.1,3.1-6.4-1.1-9.2C431.9,242.8,432.3,240.3,432.9,238.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94B57"),
                d:
                  "M423.1,280c-0.7,1.2-1.3,2.4-1.2,3.8c-1.3,0.3-1.6-0.7-2.1-1.5c-3.5-2.5-7.8-2.2-11.8-2.8       c-1.1-0.2-2.3,0.2-3.4-0.1c-13.7-2.4-27.5-3.1-41.3-4.2c-4-0.6-8.1-1.7-11.9,0.7c-0.9,0.6-2,0.8-2.7-0.1c-2.4-3-5.1-1.3-8-0.9       c-6.3,0.8-13.2,3.2-18.3-3.5c-1.4-1.8-3.3-1-5.1-0.8c-0.5,0-0.9-0.1-1.3-0.4c-0.9-1.2-0.2-2.4,0.2-3.9c-1.5,1.5-3,1.8-4.7,1.2       c-0.4-0.2-0.7-0.6-0.9-1c0.5-1.8,1.1-3.5,2.2-5c3.5-2,6.8-0.9,9.9,0.8c5.9,3.1,12.5,2.2,18.7,3.2c2.4,0.6,5,0.5,7.4,1       c7.3,1.4,14.7,2.5,22.1,3.2c2,0.2,4,0,6-0.3c0.5-0.1,0.9-0.1,1.4,0c3.5,1.3,7.1,2.8,11,1.8c1.5-0.4,2.9-0.3,4.3,0.1       c1.3,0.4,2.4-0.5,3.6-0.8c2.2,1.3,4.5,2.1,7,1.2c0.4-0.2,0.9-0.2,1.3-0.2c3.9,1.4,7.6,3,11.7,3.6       C420.2,275.7,422.5,276.9,423.1,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424C"),
                d:
                  "M456,282c14.5-0.2,28.5,2.7,42.7,6.6c-2.2,3.2-4.8,5-8.8,5.5c-7.4,0.9-15.3-0.2-22.2,3.1       c-2.3,1.1-4.3,1.8-6.8,1.8c-1.7,1.9-3.8,0.9-5.8,0.8c-4.7-0.2-9.5,0-14.2,0.6c-7,0.3-14-0.7-21,0.5c-0.4,0-0.8-0.1-1.2-0.1       c0.1-1.2,0.2-2.5,0.3-3.7c3.3-1.5,6.9-1,10.3-1.5c8.9,0,17.7-0.2,26.5,0c4-2.8,9.5-2.1,13.4-5.7c-3.5-3.8-8-4.6-12.6-5.1       c-0.5-0.2-0.8-0.5-1.2-0.8C455.4,283.3,455.4,282.6,456,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63D48"),
                d:
                  "M458,297c-10,0-20,0-30,0c0.2-2.6,2.3-1.9,3.8-2c4.7-0.2,9.4,0.1,14,0.3c0.7-0.4-0.4-0.9,0-0.4       c0.2,0.3,0.1,0.5-0.3,0.4c-6.3-0.7-12.6-0.2-18.8-0.9c-3.8-0.4-5-2.1-3.7-5.6c0.3-3,1.7-5.5,3-8.1c3.2,3.6,7.6,2.1,11.2,1.9       c6.5-0.5,12.6,1,18.9,1.3l0,0c0.8,0.7,1.8,0.7,2.8,0.9c2.3,0.4,4.3,1.5,4.5,3.8c0.3,2.4-2.3,2.4-3.8,3.2       c-1.4,0.8-2.8,1.6-4.3,2.4c-0.6-0.1,0.2,0.9,0,0.2c-0.1-0.2,0.1-0.2,0.5-0.2C457.5,294.3,459,294.5,458,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23E49"),
                d:
                  "M421,282c0,0.8,0.1,1.5,0.9,1.9c-0.3,3.5-1.9,6.3-3.9,9.1c-5.3,1.6-10.7,0.3-16.1,0.1       c-5.9-0.2-11.7-1.4-17.7-1.3c-1.5,0-2.5-0.6-3.2-1.9c0,0,0,0,0,0c-3.1-3-6.4-5.1-11-4c-1.1-1.2-3.3-1.8-2.2-4.2       c5.4-1.7,10.7-3.7,15.9,0.5c1.2,1,3.2,0.8,4.8,0.6c3.8-0.4,7.6-0.1,11.3,0.9c4.5,1.1,9-0.8,13.7,0.6c1.9,0.6,3.1-3.8,6.1-3.1       C420.2,281.4,420.6,281.7,421,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF6A75"),
                d:
                  "M433.1,228.7c0,0.8-0.1,1.6-0.1,2.4c-3.3,7.8-3.4,16.2-5,24.3c-0.7,3.5-1.3,7.1-2,10.6       c-1.7,4.2-2.8,1-4-0.3c-3-5-3.5-10.4-1.6-15.7c1.3-3.7,5.1-6.5,3.3-11.2c-0.2-0.6,0.6-1.3,1.2-1.3c2.4-0.4,2.5-2.1,2.7-4       c0.3-3.1,1.4-5.8,4.1-7.6c0.5-0.2,1-0.1,1.4,0.1C433.8,226.9,433.9,227.8,433.1,228.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13540"),
                d:
                  "M381,290c1.9,1.5,3.9-0.1,5.6,0.2c10.4,1.7,21,1.2,31.4,2.8c-0.1,2.2-0.7,4.2-1.8,6.1       c-0.2-1.2-0.8-2.1-2.2-2.1c-8.7,0-17.4-0.7-26-2C386,292.8,380.7,295.3,381,290z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6C76"),
                d:
                  "M432.9,238.7c0.5,1.6-1,3.6,2.6,4.3c2.1,0.4,1.3,5.1,0.4,7.9c-1,3-2.4,5.7-1.8,9.1       c1.6-0.6,0.2-2.2,1.6-3.1c0.3,3.2,0.9,6.2-0.8,9.1c-0.7,0.9-1.6,1.1-2.6,1.4c-2.2,0.7-4.8,1.9-3.4-2.5       C429.7,256.1,430.7,247.3,432.9,238.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M425,272c-0.1,0.7-0.2,1.3-0.2,2c-0.4,0.9-1.1,1.6-1.9,1c-5.1-3.5-11.1-2.5-16.7-3.5       c-4.6-3.5-10.5-1-15.3-3.3c-1-0.5-2.2-0.7-3-1.7c-0.2-0.4-0.3-0.9-0.3-1.4c2-3.8,5.4-3.8,9-3.2c4.3,0.7,7.9,3.2,12.1,4.2       c0.4,0.1,0.8,0.2,1.3,0.3c1.3,0.8,2.6,1.1,4,0.4c2.2-0.7,4.5-1.6,6.8-0.3c1.1-0.2-0.6,2.6,1.9,1.6       C424.1,267.6,424.3,270.6,425,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9B9F"),
                d:
                  "M419.2,305c0.6-0.3,1.4-1,1.8-0.8c6.7,4,14.1,1.9,21,1.8c10.1-0.1,20.2,1.1,30.3,1.2       c6.9,0.1,13.9,0.7,20.8,0.8c0.2,1.6-1.1,1.8-2.2,2.2c-3.9,0.6-7.9-0.4-11.7,0.8c-3.3,0.1-6.6,1.7-10,0.2       c-1.3-2.1-3.4-1.6-5.4-1.7c-12.2-0.2-24.3,0-36.5-0.1c-2.7,0-5.4,0-7.3-2.4C418.9,306.6,419.1,305.8,419.2,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5965"),
                d:
                  "M428.9,264.9c-0.3,4,2,0.8,3.1,1.1c2.9,2.8,6.4,3.7,10.4,3.8c4.4,0.1,8.9-0.6,13.2,0.7       c1.1,0.8,2.4,1,3.6,1.4c1.4,0.5,3,1,1.8,3c-9,0-18.1,0.2-27.1-1c-2.5-0.3-4.6-0.9-6-3.2C428.1,268.9,427.7,266.7,428.9,264.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E59DA0"),
                d:
                  "M419.9,307c4.3,1.5,8.9,0.9,13.3,1c11.4,0.1,22.9,0,34.3,0c2.8,0,4,0.5,1.4,3c-0.2,0.2-0.4,0.4-0.6,0.6       c-2.2,1.1-4.5,0.7-6.8,0.5c-13-1.1-26-1-39,0.3c-3-0.1-2.6-2.4-2.7-4.4C419.9,307.7,419.9,307.4,419.9,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE424D"),
                d:
                  "M456,284c-2.5,1.3-4.4,1.7-7.6,0.4c-6-2.4-12.6,0-19-0.2c-2.9-0.1-3.8-0.6-3.5-3.3c0.1-1.4-0.2-2.9,1-4       c0.2,0.8,0.4,2.2,0.5,2.2c5.1-0.5,9.3,3.5,14.9,2.5c4.2-0.7,9.1,0,13.7,0.5C456,282.7,456,283.3,456,284z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3525E"),
                d:
                  "M406,271c5.9-0.2,12-1.3,17,3.3c0.3,0.3,1.2-0.1,1.8-0.2c-0.3,2.1-0.6,4.2-1.7,6       c-2.2-2.6-5.1-3.2-8.4-4.1c-3.2-0.9-7.5-0.2-9.7-3.9C404.8,271.2,404.9,270.6,406,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A83642"),
                d:
                  "M422.9,288.9c0.1,6.9,6.1,4.3,9.2,4.8c4.8,0.8,9.8,0.6,14.6,2.3c-4.5,0-9.1-0.1-13.6,0       c-1.7,0-3.7-0.7-5.1,1c-2.9-0.1-5.8,1-8.8,0.1C420.6,294.4,420.9,291.3,422.9,288.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F252A"),
                d:
                  "M419.9,308c0.7,1.3,1.4,2.7,2,4c2.4,1.7,2.4,4.6,3.7,6.8c0.3,1,0.4,1.9,0.1,2.9       c-0.3,0.7-0.7,1.3-1.5,1.5c-0.8,0-1.4-0.3-2-0.7c-1.5-1.6-2-3.7-3.2-5.5c-0.6-2-2.4-3.8-1.1-6.1c0,0,0.4,0,0.4,0       C418.9,310,419.4,309,419.9,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M425,272c-1.6-1.5-3.5-2.7-4-5c-0.4-1.7,1.6-1.1,2-2c1,0.2,1,3.7,3,1C426,268.1,426.1,270.1,425,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3424E"),
                d: "M373,298c2.7-1.5,5.3-1.5,8,0C378.3,298,375.7,298,373,298z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8F97"),
                d:
                  "M277,309c-0.6,1.6-5.4,0.1-3,4c-5.7-0.6-11.8,1.7-17.2-2.6C263.7,309.4,270.3,308.7,277,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8F97"),
                d: "M291,308c-3.2,2-6.7,0.5-10,1C284.2,307,287.7,308.4,291,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0434E"),
                d:
                  "M1021,116c1.4,0,2.7,0,4.1-0.1c0.6,0,1.3,0.1,1.9,0.1c0.4,0.6-1.1,1.7,1,2.1c2.5,0.5,4.8-1.5,7.1-0.2       c6.5,0.5,12.7,2.2,18.9,4.1c4.7,3.2,10.4,3.8,15.7,4.9c2.4,0.5,4.9,0.3,7.3,1.1c9.9,2.4,19.5,5.5,29,9.1c0.3,0.4,0.3,0.8,0,1.2       c-1.7,1.1-3.5,0.8-5.1,0c-2.4-1.2-0.7,1.6-1.7,1.7c-1.8,1.3-3.1-0.1-4.5-0.8c-2.1-1-4.2-0.6-6.4-0.3c-5.3-2.2-11-3.5-16.2-5.9       c-3.4-1.6-7.1-1.8-10.6-2.4c-6.6-1.1-12.9-3.1-19.2-4.8c-7.2-2-14.7-2.4-22.1-2.7c-0.8,0-1.9,0.4-2.4-0.1       c-4.4-3.5-9.7-2.7-14.7-3.5c-1.1-0.2-2.4-0.1-3.4-0.8c-0.9-0.6-1.4-1.4-0.6-2.5c4-0.4,8,2.1,12,0c0,0,0,0,0,0       C1014.3,116.5,1017.7,117.4,1021,116z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73E4A"),
                d:
                  "M1230,192.8c15,8.4,30,16.8,45,25.2c-0.7,1.2-1.9,1.6-3.2,1.7c-6.5-0.7-11.6-4.5-16.7-7.9       c-1.4-0.9-2.5-2.1-4.2-2.6c-0.4-0.2-0.9-0.3-1.3-0.6c-2.7-1.2-5.5-2.1-7.5-4.8c-2-2.6-6-2.3-8.8-3.9c-3.4-3.1-7.1-5.6-11.5-6.9       c-0.5-0.1-0.9-0.3-1.3-0.5c-5.4-2.2-10-6-15.7-7.6c-8.8-4.6-17.3-9.9-27.1-12.4c-2-0.5-3.4-2-4.9-3.3c-1.4-1-2.9-1.8-4.5-2.6       c-0.4-0.3-0.6-0.6-0.6-1.1c0.4-1.3,1.5-1.4,2.7-1.5c0.2,0,0.4,0,0.7-0.1c7.8,2.2,14.6,6.8,21.9,10c1.6,0.7,3.3,1.4,5,2.1       c10.9,4.2,21.2,9.5,31.1,15.8C1229.3,192.2,1229.7,192.5,1230,192.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2629"),
                d:
                  "M1229,191.9c-10.4-5.3-20.7-10.5-31.1-15.8c2.2-1.8,4.1,0,5.8,0.9c7.8,4,15.4,8.3,23.2,12.5       C1227.9,190,1229,190.5,1229,191.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2454E"),
                d:
                  "M1077,128c-7.7,1.2-14.8-2-22.2-3.1c-2.4-0.4-1.2-1.8-0.8-2.9c6.7,1.6,13.4,3.3,20.1,4.9       C1075.1,127.1,1076.3,126.9,1077,128z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2414D"),
                d:
                  "M1106,138c0-0.3,0-0.6,0-0.9c4.5,1.1,8.9,2.6,13.1,4.9c-0.1,0.2-0.2,0.4-0.3,0.7       c-2.2,3.5-4.9,1.5-7.5,0.7c-2.3-0.2-4.4-1.1-5.7-3.2C1105.4,139.4,1105.4,138.7,1106,138z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F4D"),
                d:
                  "M1124.1,144c3.9,0.7,7.4,2.3,11,4c-0.1,0.2-0.2,0.4-0.3,0.7c-4.2,3.4-11.1,0.6-12-4.7       C1123.3,143.6,1123.7,143.6,1124.1,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23B4B"),
                d:
                  "M1149,154c5.2,0.9,9.3,4,14,6c-0.2,0.2-0.3,0.3-0.5,0.5c-1.8,0.9-3.7,0.7-5.6,0.3       c-0.4-0.2-0.8-0.4-1.2-0.7c-1.1-1.2-2.7-0.9-4.1-1.2c-2.3-0.6-3.9-1.7-3.1-4.5C1148.7,154.3,1148.9,154.1,1149,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F4D"),
                d:
                  "M1139.1,149.9c3.6,0.7,6.9,2,9.9,4.1c0,0-0.1,0.1-0.1,0.1c-2.6,2.3-5.4,0-8.1,0.3       c-0.5,0-0.9-0.1-1.3-0.3c-0.8-1.2-4.7-1.6-1.1-4C1138.6,150,1138.9,149.9,1139.1,149.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73E4A"),
                d:
                  "M1163,160c1.5,0.2,2.9,0.8,4,2c-0.1,0.2-0.2,0.4-0.3,0.7c-1.5,1.3-3.2,0.9-4.6,0.1       c-2.9-1.7-0.1-1.9,0.8-2.6L1163,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B2414D"),
                d:
                  "M1124.1,144c-0.4,0-0.8,0-1.1,0.1c-2.2,1.2-4.1,1.7-4-2c0,0,0.1-0.1,0.1-0.1       C1121,142,1122.7,142.5,1124.1,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73E4A"),
                d:
                  "M1167,162c1.6,0.2,2.9,0.8,4,2c0,0-0.1,0.1-0.1,0.1c-1.7,0.2-4.3,2-4-2L1167,162z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33F4D"),
                d:
                  "M1135.1,147.9c1.6,0.2,2.9,0.8,4,2c0,0-0.1,0.1-0.1,0.1c-2.1,0.8-3.8,0.9-4-2L1135.1,147.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB434C"),
                d:
                  "M1035,118c-3.4,0.2-6.7,3.4-10.3-0.2c-0.2-1.3,2-0.5,2.2-1.7C1029.7,116.5,1032.5,116.6,1035,118z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("77142E"),
                d:
                  "M215,370.1c-0.3-3.2-2.6-5.5-3.9-8.2c4.7-4.5,10.8-5.2,16.9-5.9c1.1,2.1,2.4,1.3,4.2,0.8       c4.5-1.2,8.6-0.2,6.2,5.8c-0.6,1.5,0.7,2,0.8,3.1c-0.3,0.8-1.6,1.5-1.3,1.8c1,0.8,0.5-0.6,0.8-0.9c0.2-0.3,0.2-0.6,0.5-0.8       c3.6-1.7,5.4,1.2,6.6,3.4c0.9,1.7,0.1,4.2-3.3,4.7c4.2,1.3,4.2,5.7,6.7,8.3c0,1.9-1.7,2.1-2.8,2.9c-5.5,2.2-11.4,3.5-16.7,6.3       c-0.2,0.1-0.5,0.1-0.7,0.2c-0.5,0-0.9-0.1-1.3-0.4c-1.4-2.8-2.7-5.6-4.7-8.1l0,0c-1.2-1.6-1.7-3.5-3-5l0,0       c-1.2-1.6-1.8-3.6-3-5.1C216.3,372,215.7,371,215,370.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1024"),
                d:
                  "M150,424c2.3,0.3,4-0.8,5.8-1.8c3.7-2.1,7.1-4.8,11.2-6.2c2.8-0.3,5.4-0.9,8-2c2-0.8,4-0.8,6,0       c0.3,0,0.7,0,1,0c0.6-0.5,0.9-1.6,2-1c10-0.3,19.5-4,29.4-4.5c7.6-0.4,15-2.2,22.6-2.5c1.2-0.4,1.9,0.4,2.6,1.2       c0.9,1.4,1.3,2.9,0.6,4.6c-1.3,2.4-3.7,2.7-6,3.1c-13.6,2.2-27.2,4.3-40.9,6.2c-5.6-0.3-10.9,1.1-16.2,2.4       c-7.5,1.9-15.6,1.5-22.7,5.1C151.3,427.9,148.5,427.6,150,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601125"),
                d:
                  "M231,397.9c-9.4,1.1-18.5,4.2-28.9,4.4c6.8-5.4,14-6.9,20.8-9.3c1.4-0.5,2.5-1.7,3.1-3.1       c1.1-0.5,1.4,0.5,2,1.1l0,0c1.4,1.1,2.1,2.6,3,4c0.2,0.4,0.4,0.8,0.6,1.2C231.7,396.8,231.6,397.5,231,397.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M184,413c-0.7,0.3-1.3,0.7-2,1c1.7-4.1-0.5-7.5-2-11c1.9,1.1,2.7-2.8,4.2-1.1c2,2.2,3,4.9,0.9,7.9       C184.5,410.7,184.4,411.9,184,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F4B"),
                d:
                  "M231,397.9c0-0.7,0-1.3-0.1-2c3-0.3,3.3,2.6,4.8,4.1c0.9,1.5,2,2.9,2.7,4.6c0.2,0.7,0.2,1.3,0,1.9       c-0.2,0.2-0.3,0.3-0.5,0.5c-0.6-0.4-1.2-0.7-1.8-1.1C234.6,403.2,233.2,400.3,231,397.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95304B"),
                d:
                  "M228,391c-0.7-0.4-1.3-0.8-2-1.1c-0.3-2.6-3.1-4.1-3-6.9C226.1,384.8,227.1,387.9,228,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M180.1,403.5c-2.9-0.3-3-2.2-3.7-3.7C178.3,400.2,179.7,401,180.1,403.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95304B"),
                d: "M220,378c2,1.1,2.8,2.9,3,5C221,381.9,220.2,380.1,220,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M174.6,398.4c-0.5,0.3-1.1,0.8-1.8,1c-0.7,0.2-1.4-0.4-1.1-1c0.3-0.6,1.3-0.9,2-1.1       C174.3,397.1,174.6,397.5,174.6,398.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C364E"),
                d:
                  "M217,372.9c2,1.1,2.7,3,3,5.1C218,376.9,217.2,375.1,217,372.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d: "M181,414c-2,0-4,0-6,0C177,412.5,179,412.5,181,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M177,392c1,0.5,1.9,1.1,2.5,2.9C177.6,394.5,177.1,393.5,177,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C202B"),
                d:
                  "M141,394c0-1.5,0-3,0-4.5c0-1.2,0.1-2.5,1.9-2c2.2,0.5,4.4,1.5,2.8-2.6c-0.7-1.7,4.5,0.8,3.3-2.9       c3,1.3,1.3,6.2,6,6.5c-4.7,3.8-8.6,7.3-11,12.3c-1.4,2.8-1.2,3.7,2.4,3.6c-2.7,0.7-5.2,0.1-4.6,4.4c0.4,2.7-2,7.1-4.4,8.6       c-3.8,2.3-2.3,4.9-2.4,7.6c0.7,1.6,0.2,3-0.9,4.2c-0.5,0.2-1,0.1-1.5-0.1c-4-1.8-6.4-4.5-4.9-9.2c0.1-1.8,0.3-3.6,1.5-5.1       C131.8,407.1,138.4,401.7,141,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631126"),
                d:
                  "M134,429c-0.2-1.5,0.3-2.8,1-4c2.4-0.9,3.9-4.3,7.3-2.8c0.3,0.1,1.5-0.8,1.4-1.1       c-0.8-4.5,5.8-7,3.3-12.1c-0.7-1.3,3.1-1.2,2.3-3.5c4.5,3.2,8.7,6.2,13.1,9.4c-1.6,1.1-3,3.4-4.9,3.1c-2-0.3,0.2-3-1.1-4.6       c-1.4,1.7-2.7,4.9-5.2,1c-0.6-0.9-2.1,0-2.1,1.1c0,1.3-2.9,2.6-0.5,3.6c2.8,1.2,1.7,3,1.4,4.9c-0.6,2.6,2.5,2.3,3,4       c-1.4,2.3,2,3.8,1.1,6c-1.9,1.7-4.1,1.2-6.2,1c-1.8-0.7-3.5-0.6-5,0.5c-0.7,0.2-1.4,0.1-2-0.2c-1.6-1.1-2-2.9-2.5-4.6       c-0.3,1,0,2.1-0.4,3.1c-0.5,1.2-1.3,1.9-2.6,1.7c-1.3-0.2-1.4-1.2-1.2-2.2C134.2,431.9,133.2,430.4,134,429z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631126"),
                d:
                  "M153.3,406.1c-2-6.6-1.8-7.4,2-9.5C154.7,400,154,403,153.3,406.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152F"),
                d:
                  "M239,366c-0.7-1.4-2.5-0.6-3.7-2c2.4-1.3,3.8-3.5,2.3-5.7c-0.6-0.8-4.1-2.6-5.9,0.7       c-1,1.9-2.2-0.5-3.3-0.6c-2.3-0.3-0.3-1.6-0.4-2.4c5.3-1.5,10.4-3.8,16-4c0.2,0.2,0.2,0.5,0.3,0.7c0.1-0.3,0-0.5-0.3-0.7       c0.3-0.3,0.7-0.7,1-1c0.7,0,1.3,0,2,0c0.5,3.1,3.6,3.2,5.5,4.7c1.6,2.5,1.9,5.3,1.1,8.1c-1,3.3-0.4,5.8,2.3,7.9       c0.8,0.6,2.1,1.4,1.7,2.2c-1.4,3.1,1,3.4,2.7,4.4c-2.8,4.1-6.9,4.2-11.3,3.6c-1.4,0-3.2,0-3.1-1.6c0.1-3.2-1.2-5-4.4-5.5       c-1.5-0.3-1.7-1.6-1.3-2.7c0.6-1.4,1.5-0.6,2.4-0.1c0.6,0.3,1.8,1.3,1.6-0.2c-0.2-1.4,2.4-2.4,0.5-3.3       C242.9,367.6,241.7,365.1,239,366L239,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C3237"),
                d:
                  "M141,394c0.3,2.8-0.4,5-2.5,7.2c-3,3.2-5.8,6.9-6.5,11.5c-0.2,1.3-0.6,2.2-2.1,2.3       c-2.2,0.1-5.3,2.8-5.9-2c0-0.8,0.1-1.6,0.9-2c1-0.7,2-1.3,3-2c3-0.8,4.9-3.1,6.4-5.5c1-1.5,2.3-2.7,3.2-4.1       c-5.1-3.5-7-8.6-7.6-14.4c0.9,1.5,2.6,1.4,4,2c2.9,1.3,3.2,4.3,4.4,6.7C139,394.8,139.7,394.9,141,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93E4A"),
                d:
                  "M275,281c-3-1.3-5.5,1.5-8.4,1c-4.5-0.7-9.1-0.4-13.6,0c-1-0.8-2-1.2-3,0l0,0c-1.3,0.9-3.2,0.9-2.9-0.6       c0.4-2.8-0.3-6.2,1.7-8.4c2-2.1,2.8-4.7,4.3-7c4.6-3.3,7-10,14.2-9.1c0.2-4.5,5.1-2.2,6.9-4.8c2.8-4,7.3-5.3,12.1-6.4       c3.8-0.9,6.4-5,10.7-5.7c0.9-0.9,1.7-2,3-2.5c0.4-0.1,0.9-0.2,1.3-0.2c2.7-0.3,4.9-1.2,6.7-3.4c1.5-2,3.9-2.7,6.4-3.1       c3.5-3,8-4.2,11.6-6.8l0,0c3.8-2.3,8.4-2.7,12.3-4.8c1.6-0.8,2.7-1.8,3.7-3.1c1,0,2,0,3,0c1.1-1.1,3-0.7,4-2l0,0       c1.4-1.2,3.5-1,5-2c3.7-1.3,6.6-4.7,11-4c2.1,1.2,1.8,2.9,1,4.7c-0.7,1.8-2.2,2.4-4,2c-3.1-0.7-4.5,1-5.2,3.7       c-0.6,0.4-1.3,0.6-2,0.7c-7.9,2-15.3,5.2-21.4,10.8c-1.5,1.4-3.4,1.2-5.1,1c-2.3-0.2-2.8,1.2-3,2.9c-0.3,0.3-0.7,0.6-1.1,0.7       c-1.7,0.2-3.4-0.7-5,0.5c-4,2.2-7.5,5.6-12.2,6.5c-3.5,0.9-7,2-10.3,3.1c-4.2,1.4-8.1,4.2-12.1,6.4       c-6.7,3.6-12.6,8.5-18.6,13.1c-2.2,1.6-2.5,3.5-2.1,6.1c0.4,2.7,2.2,2.4,4,2.6C271.7,273.5,275.3,277.8,275,281L275,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5404B"),
                d:
                  "M357,218c-0.2-0.9-2-1.1-1.1-2.3c1.2-1.6,3.2-2.6,4.9-2.6c4.6-0.1,5.1-0.4,4.2-5c0.7,0,1.3,0,2,0       c2.2-0.1,4.2-0.9,6-2l0,0c3.1-2,7.3-1.1,10-4c0.3,0,0.7,0,1,0c5.2-2.6,10.1-5.6,15.2-8.4c4.2-2.3,8.9-3.7,13.8-2       c1.8,3-0.4,4-2.5,5.1c-2.4,1.2-5.4,1.7-6.6,4.6c-0.6,0.8-1.3,1.4-2.4,1.2c-0.9-1.4-1.8-1.6-2.7,0.1c-5,3.3-11.3,4.1-15.9,8.1       c-0.7,0.7-1.3,1.5-2.2,2c-6.9-0.6-12.3,3.8-18.6,5.4C360.4,218.5,358.7,219.5,357,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA404C"),
                d:
                  "M413,192c-7.4-0.3-13.7,2.4-19.6,6.5c-2.8,2-5.7,3.9-9.4,3.4c-1.4-5,4.2-3.4,5.8-5.9       c0.4-0.6,1.9-0.6,1.2-2.1c3.3-2.4,7.4-2.6,11-3.9c1.4-0.5,1.4-1,1-2c1.9-0.9,3.6-2.2,5.9-2c1.5,0.9,3.3,1.3,4.8,2.3       c1.4,1,4,1.2,2.8,4.1C415.3,193.1,414.1,193,413,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D444D"),
                d:
                  "M342,216c-0.4,4.1-4.4,5.2-6.9,6c-2.8,0.9-5.9,2.4-9.1,2c1.2-3.2,5.5-2.1,7-5       C335.8,217.3,339.6,218.7,342,216z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA404B"),
                d:
                  "M383,202c-1.7,5.4-6.2,3.7-10,4C376.3,200.4,378.5,199.6,383,202z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93E4A"),
                d: "M373,206c-1.9,1.1-2.5,5.8-6,2C368,204.4,371,206.7,373,206z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D444D"),
                d:
                  "M349,214c-0.3,2.7-2.4,1.8-4,2C345.8,214.2,347.3,213.9,349,214z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D444D"),
                d: "M354,212c-1.3,1.6-3,2.1-5,2C350,211.7,352.1,212,354,212z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3D49"),
                d:
                  "M417,192c-0.5-2.1-3-1.5-4-3c3.3-3.2,7.9-2.9,11.9-4.3c7.8-2.8,15.2-6.5,20.1-13.7       c1.2-0.7,2.5-1.1,3.9-1.1c4.1-1.2,8.6-1.1,12.1-4.2c2-0.7,2.9,0.6,3.7,2.1c0.2,0.4,0.4,0.9,0.4,1.4c0.1,2.2,2,5.4-0.2,6.3       c-2.7,1.2-6.3,3.2-9.4-0.2c-2.9-1.5-5.7-3.2-6.9,2c-0.4,1.8-1.7,3.6-2.5,5.4c-1,2-2.3,3.2-4.7,2.5c-1.9-0.5-3.9-0.3-5.3,0.8       c-5.4,4.5-12.3,4.3-18.5,6.2C417.4,192.3,417.2,192.1,417,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("923F49"),
                d:
                  "M445,171c2.4,5.6-3.8,5.1-5.7,7.5c-1.8,2.4-5.8,3.1-8.1,5.3c-3.3,2.9-7.5,1.7-11.1,3.3       c-2.1,0.9-4.6,1.7-7.1,1.9c-1.2-1.1-3.8-0.4-4-3c8.4-3.5,16.9-7.1,25.3-10.6c1.6-0.7,3.5-0.9,4.8-2.4       C441,172.4,443,171.7,445,171z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0454E"),
                d:
                  "M464,168c-1-0.6-1.4-2.1-2.9-2c-0.3-0.2-0.5-0.4-0.4-0.6c0.1-0.2,0.2-0.3,0.3-0.3c14.6-5.2,29-11,44-15       c0.8,1.8,2.3,2,4,2c0.3,2-1.1,2.9-2.5,2.9c-7.6,0-13.8,4.3-20.8,6.3c-5.9,0.6-11.4,2.6-16.6,5.3C467.5,167.3,466,168.7,464,168       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B444C"),
                d:
                  "M461,165.1c0,0.3,0,0.6,0,0.9c-2.8,5.2-7.7,3.9-12.2,3.9C452.5,167.2,457.1,167,461,165.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983E49"),
                d:
                  "M301,238c-0.3,0-0.7,0-1,0c-1,0.7-2,0.8-3,0c0,0,0,0,0,0c-0.1-1.7,1.3-2.6,2.1-3.8       c0.6,0,1.3-0.1,1.9-0.1C302,235.4,302.1,236.7,301,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3D47"),
                d:
                  "M301,238c0-1.3,0-2.6,0-3.9c4.8,1,7.7-3.6,12-4.1c2.1-0.7,2.8-0.2,2,2c-2.9,0.1-5.2,0.9-6.8,3.7       C306.7,238.4,303.8,238.5,301,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D444D"),
                d:
                  "M315,232c0-1.3-0.7-2-2-2c3.5-3.7,8.4-4.5,13-6c-0.1,2.3-2.5,3-3.7,3.3       C319.3,228.1,317.3,230.2,315,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5F60"),
                d:
                  "M1861.9,305c5,2.8,10.6,2.3,16,3c3.4,1.8,7.3,1.9,11,2.7c20.5,4.3,41,9,61,15.3c0,0.3,0,0.7,0,1       c-0.8,0.9-1.8,0.9-2.8,0.8c-0.5-0.1-1-0.2-1.5-0.3c-7.5-1.9-15.1-3.9-22.7-5.6c-1.8-0.4-3.6-0.5-5.4-0.4       c-2.3,0-4.7,0.2-6.9-0.7c-8.7-3.5-17.9-4.5-27.2-5.6c-9.5-3.1-19.4-4.5-29.3-5.8c-2.2-0.3-3.9-1.7-6.1-2       c-12.8-2.6-25.8-3.2-38.7-5.2c-3.3-0.5-7,0-10.2-0.8c-11.9-2.7-24.2-2-36-5.1c-4-1.1-7.9-0.3-11.9-0.5       c-14.8-0.7-29.3-3.7-44.1-4.4c-11.2-0.5-22.2-3.3-33.4-3.7c-8.1-0.3-16.3,1-24.3-0.3c-4-0.6-8.3-0.1-12.2-1.8       c-2.8-1.3-2.1,1.8-3.1,2.7c-1.4,1.2-3.3,1.5-4.4,3.1c-2.1,3.1-4.3,2.6-6.2-0.3c0.7-1.8,2-3.2-1.6-3.8c-8.8-1.5-17.2,0-25.7,1.8       c-2.5,0.6-4.9,0.7-7.3-0.1c-0.5-0.2-0.9-0.4-1.3-0.7c-1.6-0.9-4.8-0.2-4.5-2.8c0.3-2.2,3.3-1.6,5.2-2c1-0.2,2-0.3,2.2-0.3       c-11.7,1-24.2,0.9-36.7,0.3c-5.1-0.2-10-2.4-15.2-2.4c-0.9,0-1.9-0.6-1.8-1.9c10.1-2.5,20.4-3.5,30.7-4.1       c7.1-0.4,14.4-0.5,21.6,0.5c5.2,0.7,10.6,0.6,15.9,1c10.5,0.7,21.2,0.7,31.6,2.5c11.7,2,23.6,1.8,35.3,3.9       c3.2,0.6,6.6,0.2,10,0.2c0.3,0,0.7,0,1,0c2.3,0.5,4.6,1.2,7,1c1,0,2,0,3,0c3.2,1.4,6.8-0.4,10,1c0.6,0.3,1.1,0.9,1.7,0.9       c12.7,0.3,25.3,2.5,37.9,3.8c9.5,1,18.9,2.2,28.4,3.3c1.8,1.3,4.2-0.3,6,1v0c3.4,0.3,6.9-0.5,10.3,0.5c0.5,0,1.1,0.1,1.6,0.2       c2,0.6,4.3,0,6.1,1.3c0.3,0,0.6,0,1,0.1c19.1,1.8,38.1,5,57,7.9C1855.9,305,1858.9,305.1,1861.9,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("925D5F"),
                d:
                  "M1537,279c0.2,0.2,0.5,0.6,0.7,0.6c7.6-0.5,14.8,2.3,22.4,2.6c12,0.4,24.1-1.2,36.3,1.1       c-4.1,0.6-8.3,1.3-12.5,1.9c0.6,2.9,5-1.2,5,2.7c-5.1,2.9-10.6,0.8-15.9,1.4c-16.1,0.6-31.9-3.4-48-2       c-12.1,0.4-24-1.7-36.1-1.1c-1.2,0.1-2.3-0.1-3.4-0.6c-0.6-0.3-0.9-0.8-0.8-1.5c1.9-2,4.3-1.1,6.5-1.2c5.5-0.1,10.7-1.4,15.9-3       c3-0.1,6.1-1.5,8.8,1c2.5,1.9,5.5,1.1,8.1,0.8C1528.5,281.4,1532.7,280,1537,279z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE9A99"),
                d:
                  "M1516,281c-3,0-6-0.1-9-0.1c1.3-2.8,3.8-1.6,5.9-1.9c1.9-0.2,3.9,0,5.9-0.1c1.3-0.1,2.5,0,3.3,1.1       C1520.3,281.7,1518,280.7,1516,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE9A99"),
                d:
                  "M1528.9,277.9c1,0,2.1,0,3.1,0.1c-2.7,1.9-5.8,2.4-9,2c0-2.9,2.6-1.5,3.8-2.3       C1527.5,277.5,1528.3,277.4,1528.9,277.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BCACAB"),
                d:
                  "M1527,278c-0.9,1.6-3.2,0.3-4,2c-0.3,0-0.6,0-0.9,0c-1,0-2.1-0.1-3.1-0.1       C1520.8,275.5,1524.2,277.9,1527,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1788,295c-3.7-0.5-7.5,1.1-11-1c1.2-0.7,2.5-1.2,4-1c0,0,0,0,0,0c1.8,1.3,4.2-0.2,6,1c0.3,0,0.7,0,1,0       c0.3,0.2,0.4,0.4,0.3,0.7C1788.2,294.9,1788.1,295,1788,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("947474"),
                d:
                  "M1703,285c-3.3-0.5-6.8,1-10-1C1696.3,284.5,1699.8,283,1703,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("947474"),
                d:
                  "M1690,284c-2.6,1.7-4.8,0-7-1C1685.4,283.1,1687.8,282.6,1690,284z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1777,294c-2-0.3-4.2,0.8-6-1C1773,293.3,1775.2,292.2,1777,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1853,304c-8.8,0.2-17.3-2.2-26-3.2c-7.8-0.9-15.5-3.2-23.5-2.9c-2.7,0.1-5.2-0.6-7.5-1.9       c13.1-0.4,25.9,2.2,38.7,4.4C1840.8,301.5,1847.3,301.1,1853,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("956E6E"),
                d:
                  "M1795,296c-2-0.3-4.3,0.8-6-1c1.7-0.8,3.3-0.7,5,0C1794.4,295.3,1794.7,295.6,1795,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("987876"),
                d:
                  "M1794,295c-1.7,0-3.4,0-5,0c-0.3,0-0.7,0-1,0c0-0.3,0-0.7,0-1C1790,294.3,1792.2,293.2,1794,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("987876"),
                d:
                  "M1787,294c-2-0.3-4.3,0.8-6-1C1783,293.3,1785.2,292.2,1787,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB8687"),
                d:
                  "M1941,646c-3.3,0.1-6.5,0.2-9.8,0.2c-0.1-0.2-0.3-0.3-0.4-0.5c-0.1-0.6,0.2-1.1,0.7-1.5       c2.7-1.5,5.7-1.7,8.6-2.1c10-1.3,19.8-3.8,30-3.6c2.3,0.2,4.9-0.5,6.9,1.4c-3.1,1.9-6.5,2-10,2c-3.5,0-6.9,0.1-10,1.9       C1951.5,643.8,1946.4,645.6,1941,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5052"),
                d:
                  "M2045.7,633.8c-1.6,0.1-3.1,0.2-4.7,0.3c-8.5-1.1-16.5,3.1-25,2c-0.7-0.5-1.6-1-1-2.1       c2.5-2.3,5.7-1.4,8.6-1.7c11.1-1.3,22.2-3.3,33.5-3.5c0.9,0.2,1.8,0.5,2.3,1.4c-2.7,1.6-5.7,1.7-8.7,1.9       C2048.8,632.2,2047,632.2,2045.7,633.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("823E40"),
                d:
                  "M2015,634.9c0.4,0.4,0.7,0.8,1.1,1.2c0,0-0.4,0.1-0.4,0.1l-0.4-0.1c-4.9,1.9-10.3,0.3-15.3,1.9       c-7.7,0.7-15.3,1.3-23,2c-2.3,0-4.7-0.1-7-0.1c1.6-3.5,4.1-0.4,5.9-1.3c-0.6-0.9-2.8,0.8-3.2-1.2c0.2-0.6,0.5-1,1.1-1.2       c6.4-1.1,12.8-0.5,19.2-1.4c4.7-0.7,9.5-0.1,14.3-0.9C2009.8,633.3,2012.7,633,2015,634.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5052"),
                d:
                  "M2000,638c4.9-1.9,10.1-2.3,15.3-1.9c0.1,0.6,1.6,1.6-0.6,1.6C2009.8,637.7,2004.9,637.9,2000,638z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3948"),
                d:
                  "M1849,636c-0.3-1.9-1.3-2.6-2.9-1.1c-1.1,1.1-2,1.5-3.1,0.1c3.2-1.5,2.5-5,2.2-6.9       c-0.6-3.5,2.6-7.6-1.1-10.7c1.7-1.2,3.2,0.8,4.9,0.6c2,3,0.4,6.4,1,9.2c0.2-10-2.3-10.1,10.7-10.8c9.2-0.5,14.6,5.2,20.7,10.1       c1.3,1,2.6,2,4,2.8c1.5,1.5,0.3,2.7-0.4,4c-1.7,1.7-3.3,3.5-6,3.6c-2,0.2-3.8-0.3-5.6-1.3c-1.5-0.8-3-1.3-4.4,0.3       C1862.3,633.8,1855.7,637,1849,636z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA4853"),
                d:
                  "M1879,637c1.7-1.3,3.3-2.7,5-4c3.2,0.8,6.3,2.4,9.8,1.6c4.1,0,8.2-0.3,12.3,0.4       c6.7,1.4,13.4,0.3,20.2,0.6c2.1,0.1,4.3-0.3,6.3,0.9c1.5,2.4-0.4,3.2-2,3.1c-9.7-0.3-19.3,1.4-28.8,3c-1,0.2-2,0.1-2.8-0.6       c-6.4-1.4-12.9-2.3-19.5-2.2C1876.6,639.9,1878.1,638.1,1879,637z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3E47"),
                d:
                  "M1899,642c10.4-2.2,20.8-4.9,31.7-3.3c1.1,0.2,1.8-0.6,2.3-1.6c0.5-0.4,1-0.6,1.6-0.6       c4.6,0.2,9.2,0.1,13.7,0.1c1.9,0,4-0.3,5.6,1.2c-0.2,3-2.7,2.6-4.3,2.5c-12.2-0.6-23.9,2.3-35.7,4.6       c-5.7,0.2-11.5-0.1-17.2,0.2c-1.6-0.4-3.1-0.8-4.7-1.2C1893.9,641.8,1897.1,644.3,1899,642z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9555D"),
                d:
                  "M2078,624c0,0.7,0,1.4,0,2c-0.5,0-1,0-1.5,0c-6.4,1.3-12.5,3.7-19.2,3.4c-1-0.1-1.6-0.5-1.3-1.6       C2063.1,625.3,2070.2,622.9,2078,624L2078,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87484B"),
                d:
                  "M2057.1,629c6.7,0.3,12.7-3.4,19.4-3c-5.3,2.8-11.1,3.9-17.1,4.1c-0.8-0.1-1.6-0.1-2.3-0.2       c-0.4-0.2-0.5-0.4-0.4-0.6C2056.8,629.1,2056.9,629,2057.1,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1D23"),
                d:
                  "M1914,644c10.2-3.1,20.6-5.2,31.4-5.1c2.9,0,5.9,0.7,8.7-0.9c1.1-1.4,2.7-1.4,4.3-1.5       c4.8,0.5,9.9-1.2,14.5,1.2c1.3,0.4,2.9-0.4,4.1,0.7c-2.3,1.1-5-0.5-7.1,1.3c-13.1,0.4-25.9,3.5-38.9,5.2       c-1.9,1.2-4.2-0.3-6.1,0.9c-1.7,0-3.3,0-5,0.1c-1.3-1-2.8-0.3-4.2-0.5C1914.9,645.4,1913.7,645.5,1914,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F2A33"),
                d:
                  "M1914,644c1.5,2.1,4.5-0.1,6,2c-6.7,0-13.4,0-20.1,0c-1.1-0.2-2.4,0.2-3.2-1       C1902.4,642.7,1908.3,644.6,1914,644z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F2A33"),
                d:
                  "M1925,646c1.8-1.7,4-0.8,6.1-0.9c0,0.3-0.1,0.5-0.3,0.7C1928.9,645.8,1926.9,645.9,1925,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53742"),
                d:
                  "M1165,654c-5.3,0-10.7,0-16,0c-5.3-2-10.8-0.9-16.2-0.8c-7.2,0.2-14.5,0.2-21.7-0.2       c-1.9-0.8-2.4-2.3-1.7-4c0.8-2.1,2.3-1.3,3.7-0.6c0.6,0.3,1.4,0.6,1.9,0.1c4.5-4.5,10.3-3.8,15.7-3.9       c7.4-0.1,14.8-0.9,22.1,1.8c2.8,1.1,6,0.1,8.8-0.2c3.5-0.4,0.9-3.9,1.9-5.8c1.6-1.7,3-0.5,4.3,0.3c6.1,3.5,8,3.4,13.1-0.8       c1.3-1.1,2.7-1.1,4.1-0.2c0.4,2.1,1.4,3.9,3.9,3.6c3.1-0.4,5.8,2.9,9,1c5,2,10.3,2.2,15.5,3.2c2.4,1.6,5.1,1,7.7,1.1       c6.1,0.2,12.2-0.2,18.3,0.2c2.7,0.9,5.3,1.6,8.1,0.5c0.9,0,1.7,0.2,2.4,0.6c6.3,1.6,12.7,0.4,19.1,0.7c1.8,0.1,3.6-0.1,5.4,0.2       c1.6,0.3,3.4,0.8,2.4,3.2c-32,0-64,0-96,0C1175.7,653.1,1170.3,653.1,1165,654z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93745"),
                d:
                  "M1277,654c-0.5-2.8-2.7-2-4.3-2c-6.4-0.1-12.9,0-19.3-0.1c-1.7,0-3.9,0.8-4.3-2c1.7-1.8,4-1.4,6-1.4       c8.2,0,16.4-0.1,24.6,0c5.3-0.1,10.6,0.3,15.8-1.1c0.3-0.7,0.7-1.3,1.3-1.8c4-2,6.9,1.1,9.6,2.8c1,0.6,3.8,1,3.6,3.5       c-0.3,0.3-0.7,0.7-1,1c0.7,1,0.9,2-0.1,3c-9.6,0-19.2-0.1-28.8,0C1278.6,655.9,1277.6,655.3,1277,654z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3743"),
                d:
                  "M1110,652c11.4,0,22.8,0,34.2,0c1.7,0,4.2-1.1,4.8,2c-6.2,0.6-12.6-1.4-18.6,1.8       c-2.5,1.4-5.6-0.2-8.3-0.3c-8.1-0.2-16.1,1.3-24.1,0.5c-0.3,0-0.7,0-1,0c-0.9-1.4-0.2-2.4,1.1-2.5c1.7-0.2,2.4-1.7,3.7-2.3       C1104.6,650.4,1107.4,650.1,1110,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3742"),
                d:
                  "M1165,654c0.2-1.4,1-2,2.3-2c3.8,0,7.6,0,11.3,0c1.4,0,2.2,0.6,2.3,2c-0.2,1.4-1,2-2.3,2       c-3.8,0-7.6,0-11.4,0C1166,656,1165.2,655.4,1165,654z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB4251"),
                d:
                  "M1309,656c0-1,0-2,0.1-3c2.7,1.3,5.3,2.7,8,4C1314.3,656.6,1311.4,658,1309,656z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3948"),
                d:
                  "M1372,638c0,4.7,1.5,9.2,0.9,14c-19.6,0-39.2,0-58.9,0c-4.7-1-8.3-4.1-11.5-7.1       c-5.7-5.4-12.7-4.6-19.4-5.5c-1.6-1.1-6-0.2-3-4.3c4.5-0.9,9-0.4,13.4-0.4c11.8-0.1,23.6,0,35.5,0c12.6,0,25.2,1.4,37.9,1.2       C1368.8,636.2,1370.5,636.7,1372,638z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB333F"),
                d:
                  "M1284,639c3.1-2.6,6,0.8,9.1,0.2c5.3-1,10.5,2.9,12.2,5.5c2.5,3.6,6.7,4,8.7,7.3c-1.3,1-2.7-0.5-4,0       c-4.3-2.1-7.8-6-13-6C1291.1,646.6,1287.6,642.8,1284,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3F4C"),
                d:
                  "M1272,219c1-0.3,2-0.7,3-1c21.4,12.4,42.8,24.8,64.1,37.3c0.3,0.1,0.4,0.5,0.6,0.8       c-1.2,1.3-2.8,1.2-4.3,1.1c-4-2.4-9.3-2.2-12.2-6.5c-4.6-3.2-9.2-6.3-14.1-9c-3.5-0.6-6.2-2.7-9-4.7c-0.4-0.2-0.8-0.5-1.2-0.7       c-8.1-3.2-14.5-9.4-22.7-12.3C1274.3,223.2,1271.7,222,1272,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3404D"),
                d:
                  "M1335,256c1.6,0,3.2,0,4.8,0c0.7,0.4,1.5,0.7,2.2,1.1c0.9,1.5,2.8,1.8,4,2.9c9.2,5.9,19.2,10.2,28.9,15       c0.7,0.9,0.6,1.9,0.3,3c0.2,2.2-1.1,3-3,3.4c-3.7-0.8-5.6-5.2-9.9-4.9c-5.6-5.7-13-8.8-19.5-13       C1339.8,261.6,1336.5,259.7,1335,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3F4C"),
                d:
                  "M1346,260c-1.8-0.3-3.6-0.6-4-2.9C1343.5,257.9,1345.3,258.2,1346,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M1437,283.1c0,0.3,0.1,0.6,0,0.9c0.1,0.3,0.2,0.5,0.3,0.8c-0.3,0.5-0.8,0.8-1.4,0.9       c-5-0.4-10-0.3-15-0.2c-13.6-0.2-27.1-1.2-40.7-1.8c-1.8-0.1-3.7-0.3-5-1.8c-1.1-1.6,0.2-2.6,0.9-3.8c1.6-0.3,3-0.9,4.8-0.2       c7.1,2.6,14.7,2.3,22.1,3.3c2.8,1.7,5.8,0.8,8.7,0.8c4.1,0.1,8.3,0.2,12.3,0.9C1428.4,282.9,1432.7,283,1437,283.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851F24"),
                d:
                  "M1376.1,278c-0.4,1-0.8,1.9-1.2,2.9c0,1.4-0.9,2.4-1.4,3.6c-1.5,2.7-3.4,5.2-5,7.9       c-2.5,3.3-4.3,7.1-7.5,9.8c-0.8,0.1-1.3-0.3-1.7-1.1c-0.2-0.7-0.2-1.4,0-2.1c2.6-4.8,5.6-9.4,8.7-14c0.9-1,1.7-2,2.4-3.1       c0.5-0.5,1-0.8,1.7-0.7c1-1.1,2-2.1,3-3.2C1375.5,278,1375.8,278,1376.1,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831725"),
                d:
                  "M1816,470c0.3-0.3,0.7-0.7,1-1c2.6-4.2,6.4-6.8,11.1-8.2c1.6,1.1,2.2,2.9,3.3,4.3       c2.2,2.9,6.2,3.1,8.6,0.5c1.1-1.1,0.7-3.9,2.9-3.5c2.7,0.5,5.7-0.6,8.2,1.3c0.8,0.6,2.7,3.1,3.3-0.6c0.2-1.3,1.6-1,2.5-0.4       c3.8,2.6,7.3,0.2,10.9-0.5c1.8-0.4,1.8-2.2,2.6-3.4c0.5-0.6,1.1-1,1.9-0.3c1.1,2.2-0.3,4.5,0.1,6.7c-0.2,0.6-0.3,1.2-1.2,1.2       c-0.5,0-0.9-0.5-1.4-0.1c0.5-0.1,0.9,0.2,1.4,0.2c0.5,0,0.8-0.3,1.1-0.7c0.5-2.3-0.6-5.1,2-6.9c3.7,0.4,2.7,3.1,2.7,5.3       c-0.3,2.1-0.8,4.1-2,6.1c-1.8,3-3.9,3.9-7,2.4c-2.2,0-4.1-1.5-6.3-0.9c-0.4,0.1-0.9,0.2-1.3,0.2c-2.7,0.3-4.7,2.3-7.4,2.7       c-0.2,0-0.6-0.3-0.7,0.1c-0.7,3.7-0.7,3.8-4.8,2.3c-0.3,0.2-0.3,0.5-0.3,0.9c-0.8,6.3-0.8,6.7-7.8,6.8       c-4.3,0.1-6.2,2.9-8.5,5.5l0,0c-3.4,0.1-3.8-3.4-5.2-5.2C1822.1,480.3,1818.2,475.6,1816,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931928"),
                d:
                  "M1816,470c3.3,4,6.2,8.3,9.2,12.5c1.7,2.5,3.5,5.3,5.8,7.5c1.9,6,7.3,10,9,16c-2.7,0-5.3,0-8,0       c-2.2-3.5-2.3-7.9-5.4-11c-1.5-1.5-2.4-4.1-5-3.4c-2.8,0.7-2.6,3.5-2.8,5.7c-0.1,1,0,2-0.8,2.7l-0.5,0c0,0-0.5,0-0.5,0       c-1.8-4.9-3.7-5.8-6.6-3c-0.5,0.5-1.1,0.9-0.6,1.5c3.8,4.3-1.4,4-2.9,5.5c-2.1-3.2-3.7-6.7-7-9c-1-2.2-2-4.4-2-7       c-1.6-2.1-1.5-4.6-2-7c1.4,0,2.9,0.1,3-1.9c3.6-1.2,6.8-3.2,10-5C1812,473.9,1813.7,471.4,1816,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1628"),
                d:
                  "M1778,436c-0.9,1.7,1.1,4.1-1.2,5.6c-0.5,0.3-0.4,1.6,0.3,1.6c1.9,0.1,3.4,0.3,2.6,2.8       c-0.7,2.4-2.8,1.8-4.6,2.1c-0.5,0.1-1,0.2-2,0.4c2.2-3.3,0.9-4.6-2.2-4.3c-2.5,0.2-5.2,0.2-7.5,1.4c-3.1,1.7-5.9,0.9-9.9-0.9       c3.7-0.6,6.3-1.3,9.1-1.2c2.4,0.1,5-0.6,3.4-4.5c-1.1-2.7-1-5.1,2.7-6.5c4.2-1.6-0.8-2.2-0.8-3.5c-0.4-2.3-5.6-1.5-3.7-5.4       c6.8,1.1,12.5,4.6,17.7,8.9C1782.9,436.2,1779.6,435.1,1778,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1321"),
                d:
                  "M1828,461c-3.7,2.7-7.3,5.3-11,8c-2.1-0.2-3.9-0.1-4.6-3.1c-0.5-1.8-2.8-3.5-5.2-4       c-0.1,0-0.2-0.2-0.3-0.3c0.4-0.2,0.7-0.4,1.1-0.7c0.5-2.7,2.8-3.6,4.7-4.9c5.7-3.4,10.9-7.5,17.2-9.8c1.4,0,2.6,0.5,3.5,1.6       c0.9,1.1,1.2,2.3-0.5,2.6c-2.2,0.4-3.6,1.8-4.6,3.5c-0.4,0.6-2.1-0.4-1.1,1c0.4,0.6-1.1,2.7,1.5,1.9c0.9-0.3,1.6,0.9,1.8,2       C1830,460.1,1829.7,461.3,1828,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92192A"),
                d:
                  "M1764.1,423.7c-0.1,2.8,4.1,2.4,3.9,5.3c-1-0.3-2-0.7-3-1c-3.1-1.7-6.4-2.4-9.8-3       c-1.6-0.3-3.3-0.3-4.2-2c-2,0-4,0-6,0c-2.9-1-6.3-0.1-9-2c-1.7,0-3.3,0-5,0c-4.7-3.6-0.2-6.1,1-9c2.2-0.7,2.2-0.7,3.3,2.8       c1.8-3,4.3-2.9,6.8-1.4c2.2,1.3,0,2-0.7,3c2.5,0.7,3.9-1.5,5.9-2.1C1753.5,416.3,1760,417.9,1764.1,423.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151E"),
                d:
                  "M1813,457c-1.7,1.3-3.3,2.6-5,4c-0.9-1.3-2-2.7,0-4c-0.8-2.3-2.2-0.3-3.3-0.5c-1.4-0.8-3.2-1.2-2.7-3.5       c2.3-0.8,4.3-1.6,7.1-0.5c3.9,1.4,7.6-1.1,10.9-3.5c1-2.5,3.9-3.1,5.4-5.1c1.6-1.7,3.4-2.8,5.8-2.8c1.4,0.2,2.4,0.8,2.4,2.4       c-0.1,0.8-0.6,1.3-1.2,1.8C1825.3,448.1,1819,452.4,1813,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86192C"),
                d:
                  "M1778,436c-0.7-0.6-1.4-1.5,0.3-1.2c1.8,0.3,2.9-0.1,3.7-1.6c0.3-0.3,0.7-0.5,1.2-0.5       c4,1,7.5,3.2,11.4,4.5c0.8,0.3,1.6,0.7,2.4,1.1c0.8,0.4,1.6,0.8,2.2,1.5c0.2,0.4,0.2,0.8-0.1,1.2c-1,4.8-6,1.5-6,1.4       C1789.1,437.5,1782.6,439,1778,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3746"),
                d:
                  "M1831,442c-2.1,0.3-3.9,1.1-5.2,2.9c-5.9-0.6-12,0.6-17.9-0.9c-0.4-0.3-0.7-0.6-1.1-0.9       c2.7-4.8,7.8-3.5,11.9-4.2c3.7-0.7,7.5-0.2,11.3-0.1c0.9,0,1.7,0.3,2.4,0.7C1834.3,441.6,1831.5,441.1,1831,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B94350"),
                d:
                  "M1831,440c-8.1,0.2-16.4-0.9-24.1,3.1c-1,0-1.9-0.1-2.9-0.1c-1.3-0.8-3-0.6-4.1-1.9       c-0.3-0.1-0.6-0.1-0.9-0.1c-0.1-0.3-0.1-0.6-0.2-0.9c0.5-0.7,1.3-1,2.2-1.2c6.7,0.7,12.8-3.3,19.6-2.3c1.9,0.3,4,0,5.9,0.4       C1828.2,437.9,1830.7,437.3,1831,440z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D2B3C"),
                d:
                  "M1808,444c4.5-0.2,9.1-0.1,13.6-0.6c2-0.2,3.1,0.2,4.3,1.5c-1.5,2.1-3.7,3-5.9,4.1       C1816.7,445.7,1811.8,446.2,1808,444z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811724"),
                d:
                  "M1809,474c-3,2.3-5.2,6.2-10,5c-2.5-0.1-4.7-1.1-7-2c1.4-1.3,3-1.6,4.8-1.2c1.4,0.3,2.1-0.5,2.2-1.8       C1802.3,476.4,1805.7,474.1,1809,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1628"),
                d:
                  "M1751,423c2.8,1.5,6,0.8,8.9,1.6c1.9,0.5,4.1,1.2,5.1,3.4c-3.4,1.6-6.2,1.8-9-1.6       c-1.3-1.6-4.5-1.4-7-0.4C1749.7,425,1750.3,424,1751,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("83162E"),
                d:
                  "M1802,453c0.7,1.3,1.7,2.3,3,3c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3       c-5.8-0.7-7.7-6.6-12-9.3c-1.7-1.1-3.8-2.6-4.3-5.6C1794.2,444.9,1796.7,450.7,1802,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871C2F"),
                d:
                  "M1778,464c0-0.3,0-0.7,0-1c6.6-1.4,13.3-2.8,19.9-4.2C1791.6,461.9,1784.7,462.5,1778,464z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86192C"),
                d:
                  "M1800,441.1c1.6,0.1,3,0.7,4.1,1.9c-0.7,0.2-1.9,0.1-2.2,0.5c-0.4,0.8,2.6,1.4,0.7,2.2       c-1.5,0.7-2.5-1.1-2.6-2.7C1800,442.4,1800,441.7,1800,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811724"),
                d:
                  "M1799,473c-1-0.7-2.8-0.7-2.5-2.4c0.3-1.8,2.1-1.6,3.5-1.6C1799.7,470.3,1799.3,471.7,1799,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1321"),
                d:
                  "M1805,457c0-0.3,0-0.7,0-1c1.3-0.5,3.3-3.1,3,1C1807,457,1806,457,1805,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1626"),
                d:
                  "M1522,430c-0.4-0.2-1-0.8-1.2-0.7c-4.1,2.2-8.3,4.8-11.3,7.9c-2.7,2.8-6.9,3.1-8.6,6.7       c-2.4-0.4-4.5,0.1-6,2.2c-1.4,2-3.4,3.1-5.5,4.2c-3.7,1.8-7.2,3.5-8.6,8.1c-0.7,2.4-3.3,3.8-6,1.7c-0.9-0.7-1.8-0.7-2.7,0       c-2.1,1.5-3.6,1.5-4.2-1.5c-0.5-2.5-2.4-2.4-4.3-2c-2.3,0.4-3.8-0.5-4.6-2.7c-1.6-4.4-3.7-5.6-7.9-3.5       c-2.7,1.3-5.3-0.5-7.9,0.8c-0.6,0.3-2-1-1.2-2.7c-0.9,1.5,1.2,4.3-2.2,4c-2.4-0.2-3.6-1.5-2.8-4.1c0.2-0.7,0.5-2.1-0.5-2.1       c-4,0.2-6.3-3.2-9.7-4.2c-1-0.3-2.7,0.7-3-0.8c-0.3-1.5,0.8-2.8,2.3-3.1c-5,4-10.9,7-16.7,10.1c-1.7,0.9-2.8,2.2-3.3,4.1       c-0.4,1.6-0.2,3.4-2.1,4.3c-5.2,0.5-10.1-0.6-14.8-2.7c-2.3-2.6-1.8-5.9-1.8-9c0-4.4-0.6-8.9,0.4-13.3c1.4-3.2,3.9-2.3,6.4-1.9       c22.4,3.4,44.7,7.3,67,11.2c3.8,0.7,7.1-0.1,10.7-1.4c10.9-4,22.3-6.6,33.4-10.2c5.1-1.6,10.1-3.4,15.2-4.8       c2.5-0.2,4.8-1.2,7.1-1.9c1.7-0.5,3.5-1.3,5.1,0.1c-1.4,1-1.4,2,0,3v0c-0.3,0.4-0.7,0.6-1.2,0.8c-0.9,0.3-1.8,0.3-2.8,0.4       C1526.1,426.5,1524.7,429.9,1522,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671320"),
                d:
                  "M1533,423c-4,1-8,2-12,3c-0.6-1.6,0.4-2.9,0.8-4.3c0.8-2.7,1.1-4.8-3-4.6c-2.9,0.1-3.2-2.7-2.9-4.8       c0.5-3.7-1.4-3.4-3.8-2.7c0,0-0.2,0-0.5,0.2c-2.2,1.3-5.8,3.2-6.7,1.4c-1.2-2.5-4-2-4.7-4.3c-0.4-1.5-1.7-2.1-2.6-1.3       c-2.5,2.2-5.8-1.7-8.1,1.3c-0.4,0.5-1.3-0.1-1.7-0.6c-2.8-3.8-6.1-3.4-10.3-2.3c-2.5,0.6-5.9-0.3-8.5-1.8       c-0.9-2.2-3-1.5-4.7-1.7c1.6,0.2,3.6-0.4,4.6,1.5c-0.7,3.1-3,2-4.7,1.5c-2.9-0.9-5.1-1.1-7.5,1.6c-1.6,1.8-4.6,1.7-5.8-1.1       c-1.9-4.3-5-6-8.5-3.4c-2.6,1.9-4.7,2.2-7.7,1.2c-3.3-1.1-6.8-0.4-9.9,1.8c-2.6,1.8-3.2,1.2-3.6-3.4c-0.9,3.3-2.6,3.7-5,3.7       c-4.5,0-9.1,2.1-13.5-0.5c-0.9-0.5-1.8,0.4-2.5,1.1c-3.9,3.4-5.6,3-8.5-2c3.1-2.6,7-2.7,10.7-3.3c3.9-0.6,7.9-1.1,11.7-2.1       c9.6-2.1,19.2-4.3,29-5.6c0.5-0.1,1-0.1,1.5-0.1c1.7,0.3,3.3,0.5,5,0.9c1.4,0.6,2.8-0.1,4.1,0.2c2.3,0.5,4.7,0.1,7,0.6       c12.2,1.9,24.5,3.1,36.8,4.5c5.2,0.6,10.5,1.3,15.8,1.4c3.1,0.9,6.4,0.9,9.5,2c7.2,2.5,14.9,3.1,22.2,4.7       c5.1,1.1,11,0,16.5,1.4c2.4-3.3,5.6-2.6,8.7-1.7c1.6,0.5,2.9,1.7,3.1,3.5c0.2,1.6-1.6,1.4-2.4,2.1c-4.5,3.3-10.3,2.3-15,5l0,0       C1548.5,418.9,1540.3,419.6,1533,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1658,408c-0.6,1.6-1.6,1.8-3,1c-1.7-2.4-0.4-6.5-4.3-7.7c0.7,1.6,2.2,2.9,1.8,4.9       c-2.9-0.5-2.6-0.5-3.2,2.9c-0.3,1.7-2.2,0.6-3.4,0.9c-0.3,0.5-0.7,0.5-1,0c-1.7,0-2.9-1-3.5-2.4c-0.5-1-0.1-1.9,1.3-2       c1.1-0.1,1.7,3.6,3.1,0.4c0.4-1,0.5-3.1-0.3-3.1c-1.7,0-3.7-1.9-5.1-0.1c-3.1,3.9-6.4,6.7-11.8,4.9c-0.8-0.3-1.1,0.5-1,1.3       c0.2,0.9,0.2,1.8-1,1.6c-0.9-0.2-1.2-1.1-0.8-2c0.5-1.2,0-2.3-0.6-3.3c-1.2-2.2-0.9-0.8-2.9-0.4c-2.5,0.6-5.3,3.7-8.3,0.8       c0.5-1.3,1.9-0.9,2.8-1.5c1.2-0.7,3.7-0.6,2.4-2.6c-1.1-1.7-1.6-5.3-5-4c-2.8,1.1-5.7,1.4-8.4,1.2c-3.7-0.3-5.5,4.2-7.7,3.6       c-2.8-0.9-5.2-1.3-8-0.4c-2.3,0.1-2.1-1.7-2.4-3.1c1.5-3.3,5-2.4,7.5-3.6c0.6-0.3,1.3-0.6,1.9-0.9c0.9-0.3,1.8-0.4,2.8-0.5       c1.6,0,3.3,0,4.9-0.6c0.5-0.2,1-0.3,1.4-0.4c2.6-0.3,5.2-0.2,7.7-1c5.5-0.3,11-0.4,16.4-1.3c6.1,0,12.2,0,18.3,0       c8.2,0,16.5,0.3,24.5,2.2c0.7,0.3,1.4,0.8,1.8,1.5c0.2,0.4,0.4,0.9,0.4,1.3c-0.5,2.1,2,3.7,1.1,5.9c-0.1,0.5-0.3,0.9-0.6,1.2       c-0.9,0.9-2,2.1-3.4,1.5c-4.5-1.8-9.3-1-14-1.7c-1-0.2-2.2-0.3-2.6-1.2c-1.5-3.1-4.4-2.4-6.9-2.5       C1655.1,399.3,1655.7,399.8,1658,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72151D"),
                d:
                  "M1571,411c3-2.8,0.4-3.8-1.6-4.9c-1-0.5-2.4,0.5-5.9,1.7c-3.4,1.1-6.9-0.6-10.3-1       c-1.6-0.2-2.9-0.9-4.6,0.3c-2.6,1.8-5.3-0.4-7.8-1.2c-5.8-1.9-12.2-1.3-17.9-3.9c3.3-2.4,7-1.1,10.6-1.3       c8.6,1.2,17.4,1.7,26,2.8c3.7,0.5,7.2-0.5,10.8-0.8c4.8-0.2,8,3,11.6,5.3C1578.4,409.3,1575,411.1,1571,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841820"),
                d:
                  "M1582,408c-4.1-0.1-6.8-4.1-11-4c-0.4-1.3,0.3-2.1,1.3-2.7c5.1-1.5,10.1-4,15.6-2.3c0.7,1,1.4,2,2.1,3       c-1.1,2.5,4.1,3,1.4,5.9c-1.2-2-3.5-2.7-5.8-3.6c-0.4,2.3,2.5,1.8,2.3,3.7C1586,408,1584,408,1582,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1647,419c-0.7,0-1.3,0-2,0c-0.7-2-1.6-3.7-4.2-3c-4,1.1-8.3-0.5-12.3,1.5c-1.9,1-2.7-2-4.5-2.5       c2.1-1.2,4.3-1.8,6.9-1.3c3.9,0.8,7.9-1,12,0.1C1645.9,414.7,1647.6,415.7,1647,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1556,416c1,0,2-0.2,2.9,0c1.3,0.3,2.7-1.8,3.8,0.2c0.3,0.6-0.1,1.3-0.8,1.5c-1.5,0.4-3,1.8-4.5,0.1       C1556.9,417.3,1556.5,416.6,1556,416C1556,416,1556,416,1556,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1621,417c-0.9,0.2-2,1.6-2.8-0.1c-0.1-0.3,0-1.1,0.3-1.3C1620,414.8,1620.4,416.1,1621,417L1621,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1645,410c0.3,0,0.7,0,1,0c-0.1,1.1,0.3,2.3-1.1,2.8c-0.3,0.1-0.8-0.2-1.2-0.4       C1644.2,411.6,1644.6,410.8,1645,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182A"),
                d:
                  "M1621,417c1-0.6,1.4-2.2,3-2C1623.6,416.5,1623.6,418.8,1621,417L1621,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1675.4,396.2c-0.7-0.9-1.1-1.5-1.4-2.1c2.5-2.5,5.4-0.8,8-0.4c9.3,1.3,18.6,2.9,27.5,6.2       c1,0.5,1.9,1.1,2.5,2.2c-0.4,1-1,1.5-2.2,1.5c-1.5,0-4-3.8-4.7,1c-0.1,0.7-1.9-1.7-3.8-0.9c1.1,2-1.4,6,4.4,5.3       c-2.3,1.8-4,1.7-6,1.2c-1-0.2-3.6-5.1-3.8,0.6c-0.8-0.2-1.6-0.3-2.3-0.6c-2.4-1,1.1-2.5-0.4-3.8c-6,1.2-6.6,6.3-7.9,11.3       c-0.6-1.7,0.1-4.5-3.1-3c-0.9,0.4-2.1,0.5-2.7-0.5c-0.9-1.4,0.4-2,1.3-2.7c0.8-0.7,1.3-1.5,0.4-2.5c-0.7-0.8-1.4-0.6-2.2-0.1       c-3.4,2.3-6.5,1.1-9.4-1.4c-0.1,3.7-0.1,3.7,6.7,5.1c-0.4,2.1-2,1.2-3.1,1.3c-5.3,0.4-10.7-0.8-15.8,1.4       c-0.3,0.1-1.1-0.2-1.1-0.4c-0.4-1.2-0.4-2.8,0.8-3.1c2.2-0.4,2.7-2.3,2.9-3.5c0.3-2.5-1.2-0.1-1.9-0.4       c-0.5-1.2-2.4-1.1-2.5-2.9c-0.1-4.8-3-5.8-7-4.8c-1.4,0.3-2.4,0.4-2.4-1.3c0-1.7,1-1.7,2.3-1.4c3,0.8,6.5-0.3,8.8,3.4       c0.6,1,5.5,1.4,8,1.1c2-0.3,4.8-0.6,5.5,0.1c2.2,2.4,3.5-0.3,5.5-0.2c1.9,0.1,0.7-3.1,2.2-2.6c-0.2,0-0.8,0.4-1,1.3       c-0.2,0.8-0.4,1.6-1.2,1.3c-1.4-1.5-0.2-4.4-3.4-4.5C1672.1,397.5,1672.2,396.9,1675.4,396.2c1.9,0.9,3.8,0.8,6.3,0.2       C1679.1,396.9,1677,397.1,1675.4,396.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC6D73"),
                d:
                  "M1725,406.2c-0.4-0.3-0.8-0.7-1.2-1c0-1-0.8-1.3-1.5-1.7c-2.2-1.1-5.9,0.4-6.3-3.7       c4.5-1.4,8.8,0.5,13.2,1.3c5,0.9,10.2,1.4,15,3.6c2.2,2.4,5.2,3.7,8,5.3c1.2,0.7,3.1,1.3,0.7,2.9c-1.7,0.7-3.5,0.5-5.3,0.5       c-6.5-0.2-11.4-5-17.5-6.3c-1.2-0.3-2.3-1.3-3.7-0.6C1725.9,406.5,1725.4,406.4,1725,406.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A24"),
                d:
                  "M1725,406.2c0.3-0.1,0.7-0.1,1-0.2c7.6,1,14.1,4.9,20.9,8.1c0.2,0.1,0.2,0.6,0.1,0.9       c-1.1,3.1-4.8,2-6.5,4.4c-1-2.5-2-4.5,1.9-5c-2.4,0.1-5.4-3-6,1.6c-0.2,1.2-1.1,1.1-1.9,0.7c-1.1-0.5-1.7-1.5-1.4-2.8       c0.2-1,1.8-2.9-1.2-1.9c-0.3-2.4-2.2-2.1-3.7-2C1725.3,410.3,1724.8,408.6,1725,406.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90182D"),
                d:
                  "M1725,421c-5.1,2.6-10.4,4.7-16,6c-0.9-0.4-1.8-0.7-2.7-1.1c-1.4-0.6-1.6-1.9-1-2.8       c0.9-1.5,2.5-0.5,2.8,0.2c1.6,3,2.3,0.7,3.4-0.3C1715.3,419.9,1722,418,1725,421z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E96F7D"),
                d:
                  "M1716,400c1.9,3,5.7,0.9,8,3c-0.8,1-2,1-3,1.1c-3.2,0.3-5.7-2.5-9-2.1c-0.7-0.2-1.7,0.1-2-0.9       c-0.1-2.2,1.6-2,2.9-2.3C1714,398.8,1715.2,399,1716,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1661,418c-1.5,3.5-3.8,2.1-6,1C1657,418.7,1659,418.3,1661,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7982"),
                d:
                  "M1721,404.1c0.7-1.3,1.9-1.1,3-1.1c0.2,0.7,1,1.5-0.2,2.1C1722.9,404.8,1721.9,404.5,1721,404.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1628"),
                d:
                  "M1736,421c3,0.7,6.2,0.5,9,2C1741.9,422.8,1738.5,423.9,1736,421z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7434C"),
                d:
                  "M828,104c-0.5,1.1-0.7,2,1,2c-0.3,3.4-2.8,5.4-7.2,4.8c-10.2-1.2-20.3-0.1-30.4,0.7       c-10.2,0.8-20.4,2.1-30.6,2.1c-1.5,0-3.5,1-3.8-1.7c3-2.7,6.9-1.9,10.1-1.8c7.2,0.2,13.9-2.7,21.1-2.3c1.2,0.1,1.7-0.8,1.9-1.9       c7.7,0,15.3,0,23,0c3.8-2.7,8-0.3,12-1C826,104.7,827,104.3,828,104z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0454B"),
                d:
                  "M825,105c-3.9,2-8.1-0.4-12,1c0.2-1.3,0.9-2,2.3-2C818.5,104.2,821.9,103.6,825,105z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C2454F"),
                d:
                  "M757,112c8.2-0.4,16.6,1.7,24.5-1.6c2.8-1.1,5,0.7,7.8,0.1c6.9-1.6,14.2-1.6,21.2-1.2       c3,0.2,5.8-3.1,7.8-1.1c2.9,2.8,5.4,0.7,8,0.7c1.8,0,2.6-1.2,2.8-2.9c0.7,0,1.3,0,2,0c1.1,1.4,2.5,1.2,4,1.1       c5.3-0.6,10.8,0.8,16-1.1c13,0,26,0,39,0c0.2,0.9-0.3,2.6,1,2.4c13.3-1.4,26.5,0,39.7,1.5c5.7,0.6,11.5,0.1,17.2,0.1       c3.4,0,7-0.7,10,1.7c0.4,0.3,1.9,1.1,2-0.6c0-0.4-0.6-0.7-0.9-1.1c4.7,0,9.3,0,14,0c-2,2.1-4.8,0.1-7,1.4c2.3,2,6.4-1.6,8,2.6       c-1.3,2.7-3.8,2.4-5.9,1.9c-4.5-1.1-9-0.8-13.5-1.3c-0.4,0-0.9,0-1.3-0.1c-1.4-1.1-2.7-0.3-4.1,0.3c-1.3,0.3-2.5,0.1-3.7-0.4       c-4.9-2.5-10.2-0.4-15.2-0.9c-10-1-20.1-0.6-30.1-0.3c-3.1,0.1-5.5-1.7-8.7-1.7c-6.3,0-12.6,1.3-18.7,1.1       c-6.3-0.1-12.7,0.5-19.1-0.3c-7.1-0.9-14.1,1.3-21.3,1.3c-8.3-0.1-16.6-0.5-24.9,0.6c-1.5,0.2-2.9,0.5-4.4,0.8       c-8.9,0.8-17.8,0.6-26.7,1c-2,0.1-3.9,0.4-5.8,1c-6.8,0.6-13.7,0.4-20.5,0.2c-4.1-1.2-8.1,1.1-12.2,0.2c-1.6-0.4-3.3,0-4.7-1       c-1-1.4-0.5-2.5,0.8-3.3c1.3-0.8,2.7-1.4,4.2-1.3c5.6,0.4,11.3-0.5,16.9,0.2C755.7,112,756.3,112,757,112z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5434C"),
                d:
                  "M755,112c-5,0.7-9.9,2.4-15.3,0.4c-1.9-0.7-5.7,0-6.7,3.6c-0.3,0.3-0.7,0.8-1.2,0.9       c-9.3,0.2-18.4,2.9-27.8,2.2c-2.8-1.2-5.5-1.5-8.6-0.4c-3.9,1.4-8.3,1.1-12.3,0.8c-5.9-0.5-10.5,3.6-16.3,3.3       c-2.4-0.1-4.9,0.5-7.4,0.4c-2.1,0-4,0.4-5.4,2.1c-3.2,1.4-6.7,1.4-10.1,1.9c-2.4,0-4.9,0.6-6.9-1.2c0-1.3,0-2.7,0-4       c8.2-1.1,16.6-1.4,24.7-3.7c0.3-0.1,0.7-0.2,1-0.2c8.5,1.1,16.8-1.5,25.1-2.6c7.2-0.9,14.8,0,21.7-3.2c2.4-1.1,5.4,0.7,7.6-1.4       c3.5,0.9,7,2.1,10.2-0.8c0.4-0.4,1.4-0.4,1.9-0.2c7.4,2.8,14.7-1.2,22.1-0.1C752.7,110.2,754.7,109.6,755,112z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3E4A"),
                d:
                  "M253,266c-0.1,2.7,0.3,5-2.7,7.1c-2.6,1.7-0.8,5.9-2.2,8.8c0.6,0.1,1.3,0.1,1.9,0.2       c-0.3,2.3,3.3,1.7,3,4c-5.2-0.4-10.6,3.1-15.7-0.5c-2.7,3.1-4.7-3-7.5-0.5c-0.8,0.7-1.4-0.8-1.3-1.4c0.2-1.2-1.1-2.7,0.6-3.5       c0.7-0.4,1.4-1.2,2.1-1.2c5.3,0.2,6.6-4.3,9.2-7.4c1.6-2,4-4.1,6.8-3.3C250.1,269,250.5,265,253,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924048"),
                d:
                  "M193,293c-5.6-0.6-11.2-1.9-16.9-0.4c-0.5,0.1-0.2-1-0.1-1.6c8.6-2.4,17.3-4.7,25.9-7.1       c2.6,2.4,4.8,0.5,8-1.4c-2.1,4.3,0.1,5.3,2.8,5.3c3.4,0.1,6.7,1.9,10.2-0.6c1.6-1.1,3.1,0.3,2.1,2.7c-5,1.9-10.4,1.5-15.5,1.4       c-4.4-0.1-8.8,1.9-13.2,0C195,290.8,195.2,294.5,193,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924048"),
                d:
                  "M202,284c1.4-1.2,3.2-1.6,5-1.9C205.9,284.3,203.9,284,202,284z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3D47"),
                d:
                  "M297,238c1,0,2,0,3,0c-0.6,1.3-1.6,2-3,2C297,239.3,297,238.7,297,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924048"),
                d:
                  "M205.6,293.8c-2.8,1.5-4.4,2.3-6.4,0.3C201,292.4,202.7,292.9,205.6,293.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDB9B7"),
                d:
                  "M1527,278c-2.8,0-5.8-0.6-8,1.9c-4,0.5-8.1-1-12,1c-7.1,2.7-14.5,2.9-22,3.3c-2.4,1.4-4.8,1.7-7.1-0.4       c0.6-0.3,1.2-0.8,1.8-0.8c12-0.5,23.7-3.2,35.5-4.9c2.5-0.4,4.2-2.7,6.8-2.1c1.9,2.2,5-0.3,6.9,1.9       C1528.3,278,1527.7,278,1527,278z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984549"),
                d:
                  "M1477.9,283.9c2.4,0.1,4.7,0.2,7.1,0.4c0,0.3,0,0.5,0,0.8c-0.2,0.5-0.6,0.9-0.7,1.4       c0.3,1,1.4,1.7,0.9,2.9c-0.4,0.6-1,1-1.8,1.1c-2.2-1.1-5.6-0.1-6.5-3.5c1-0.8,2-0.8,3-0.1c-1.1-1.7-4.4,0.4-4.8-2.7       C1476,284.1,1477,284,1477.9,283.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E2025"),
                d:
                  "M1475,284.2c1.4,1.4,4,0.3,5.1,2.4c-0.9,0.9-2.1,0.3-3.2,0.6c-1.3,0.5-2.3-0.1-3.2-1       c-0.2-0.7-0.3-1.4,0.3-2C1474.4,284,1474.7,284,1475,284.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984549"),
                d:
                  "M1474,284.1c0,0.6,0,1.2,0,1.8c-0.4,0.3-0.7,0.3-1,0c-1-0.7-2-1.3-3.1-2       C1471.3,284,1472.7,284,1474,284.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1473,285.9c0.3,0,0.7,0,1,0c1,0.4,1.9,0.8,2.9,1.2c2.2,1.5,5.3,0.6,7,3c0.6,0.6,0.6,1.3,0.2,2       c-2.7,1.9-4.9,0.5-7.2-1.1c-0.9-0.6-2.4-2.5-3.1-0.7c-1.5,3.6-3.5,2.4-6,1.4c-3-1.2-6.2-0.3-9.3-0.5c-1.8-0.1-3.6,0.1-5.4-0.4       c-1.1-1.5-2.4-2.3-4.4-2.3c-2.9,0-5.9,0.2-8.7-0.9c-1.1-0.8-2.3-1.4-3.1-2.6c0-0.3,0-0.7,0-1C1449,284.6,1461,285.2,1473,285.9       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434D"),
                d:
                  "M637,126c2.7,0,5.3,0,8,0c1.1,2.1-0.4,2.7-1.9,3c-4.7,0.8-9.3,3.3-14,2.9c-5.3-0.4-9.8,2.2-14.6,3.2       c-4.7,1-9.7,0.3-14,2.1c-5.8,2.4-11.7,3.1-17.8,3.2c-1.9,0-2.9,1.5-4.4,2.2c-8.6,2.3-17.1,4.6-25.9,6.1c-3.6,0.6-7,3.4-11,3.8       c-1.2,0.1-2.3,0.5-3.3-0.2c-0.5-0.6-0.6-1.3-0.5-2c0.7-5,3.7-6.2,8.3-5.1c1.6,0.4-0.9-0.9,0.2-1.2c0.3,0,0.7,0,1,0       c3.8-1.7,8.3-1,11.9-3.2c6.3-3.8,13.3-3.8,20.4-4.5c5.9-0.7,11.5-4.1,17.8-3.8c4.8-6.1,12.3-1.5,17.9-4.5       C622.4,128,629.8,128.5,637,126z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3414B"),
                d:
                  "M546,144c0.7,0.6,1.4,1.1,2.2,1.8c-1.3,0-2.5-0.2-3.5,0.1c-1.8,0.5-6.1-2.1-4.7,3.3       c0,0.1-1.4,0.6-2.1,0.9c-5.9,2.1-11.7,4.5-18,5.5c-5.6,0.9-10.7,3.6-16.3,4.7c-6.4,1.2-12.4,3.2-18.2,6.2       c-1,0.5-2.2,0.7-3.4,0.4c-3-3.6-2.7-4.2,2.9-6.8c3-1.1,5.9-2.3,8.9-3.5c3.4-1.4,6.9-3.2,11-2.5c1.7,0.3,3.3-0.1,4.1-2       c0.6-0.6,1.2-1.7,1.7-1.6c5.6,0.9,10.2-3,15.8-2.7c2.5,0.1,5.2-2.4,7.9-3.6C538.2,142.4,542.1,143.9,546,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3414B"),
                d:
                  "M615,128c-2.6,1.4-5,3.6-8.4,2.8c-2.3-0.5-5.4-3.2-5.9,2c-0.1,1.2-1.5,1.2-2.5,1.1       c-10.5-0.8-19.8,6.1-30.5,4.2c-3.2-0.5-5.6,3.3-9.2,4.4c-4,1.2-7.7,1.1-11.5,1.4c3-3.7,8.3-4.2,11.3-7.8c3.1,2.7,6-0.7,9.1-0.3       c2.6,0.4,4.6-1.3,5.7-3.8c8.8,0.3,17.3-0.6,25.7-3.7c3.6-1.3,8.1-0.3,12.3-0.4C612.3,128,613.7,128,615,128z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E4145"),
                d:
                  "M97,556c-4-8.5-3.9-17.4-3-26.4c0.1-1,0.2-2,1-2.7c0.2,0.1,0.4,0.2,0.5,0.3c1.1,1.1,2.1,0.4,3.1-0.3       c0.4-0.2,0.8-0.2,1.3-0.1c1.4,1.1,1.7,2.7,2.2,4.3c-0.4,6.6,4.4,10.9,7.1,16.1c0.9,1.8,1.9,3.5,2.8,5.3c0.7,1.6,0.2,2.9-1,4.1       c-1.4,1.3-2.8,0.7-4.1-0.1c-1.7-1.1-2.9-2.7-4.3-4.5c-0.2,2.9,1.1,7-4.3,5.8C97.7,557.3,97.5,556.5,97,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4E2527"),
                d:
                  "M91.8,512.3c0-0.8,0.1-1.5,0.1-2.3c-2.3-7-2.6-14.2-2.4-21.5c0.1-3.4,0.4-7.2,5-8       c1.7,0.7,3,1.9,3.7,3.7c-3.1,6.6-2.9,13.7-2.4,20.7c0.2,2.8,2.9,3.8,5.3,4.7c0.7,0.2,1.3,0.6,1.8,1.1c0.8,2.3-1.4,3.1-2.2,4.7       c-1.5,1.3-0.4,4.9-4,4.3c-1.9-0.9-1.7-3.2-2.8-4.5l-0.5-0.1c0,0-0.5,0-0.5,0C92.6,514.1,92.2,513.2,91.8,512.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E4145"),
                d:
                  "M93.9,515.1c1,1.3,2,2.6,3.1,4c1.8,1.1,3.2,2.6,3.5,4.9c-0.1,1.2-0.5,2.3-1.4,3.1L99,527       c-1.3,1-2.6,1.1-3.9,0c0,0-0.1-0.1-0.1-0.1C95.3,522.9,95,519,93.9,515.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81595B"),
                d:
                  "M99,573c-2.1-3.5-0.5-7.3-1-11c0.3,0,0.6,0,0.9,0C100,565.6,99.6,569.3,99,573L99,573z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81595B"),
                d:
                  "M97,556c0.3,0.3,0.7,0.7,1,1c0.9,1.7,1.6,3.3,0,5c0,0,0,0,0,0C96.2,560.2,97.3,558,97,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("643035"),
                d:
                  "M124.1,413c1.4-0.6,2.4,5.5,4,0.2c0.1-0.4,0.4-0.3,1.9,1.8c-0.9,1.5-1.1,3.2-1,5       c-3.7,1.6-5.8,4.5-7.1,8.3c-1.8,5.3-6.6,9.1-7.6,14.8c-1.8,1.4-3.7,2.7-4.7,4.8c-2.2,2.5-3.6,5.4-5.1,8.2c-1,1.8-2,3.5-4.5,1.9       c-1.6-3.3,1.8-5.1,2.5-7.8c0.5-1.8,1.7-3.5,2.5-5.2c1.3-6.3,5.1-11.4,8.5-16.5c2.3-3.4,3.7-7.4,6.5-10.5       C121.3,416.3,122,414.1,124.1,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("552E31"),
                d:
                  "M100,458c2.1,0.3,2.7-1,3.5-2.6c1.4-3.1,2.8-6.2,5.5-8.4c2,2.4,0.9,4.7-0.3,6.9       c-3.8,7.1-5.9,15.1-11.4,21.3c-1.5,1.6-0.6,4.3-2.3,5.9c-6.1,3.5-5.2,9.2-4.6,14.8c0.5,4.7,1,9.4,1.6,14.2       c-2.7-3.1-2.6-7-2.9-10.7c-0.9-8.9,0.4-17.9,1.4-26.7C91.1,466.8,93.9,461,100,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A4648"),
                d:
                  "M120,418c-3.9,9.6-9.9,18.1-15,27c-0.7-1.1-1.3-0.1-2,0c1.3-3.7,2.7-7.3,4-11c3.5-4.6,8.4-8,10.2-13.8       C118.2,419.5,119.1,418.7,120,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871835"),
                d:
                  "M252,356c-1.7-1.7-7.7,1.1-5-5c6.3-1.3,12.7-2.7,19-4c1.1,0,2.3-0.2,3,1c0.8,1.1,0.3,2.3,0.4,3.5       c-4.6,0.4-8.7,3.3-13.6,2.8C254.3,354.1,252.9,354.6,252,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F1423"),
                d:
                  "M269,352c0-1.3,0.1-2.6,0.1-4c0.3,0,0.6,0,0.9,0c0.3,2-0.8,4.3,1,6c2.2,0.3,1.2,1.9,1.3,3       c0.3,5.5,1.2,10.8,4,15.6c0.1,0.5,0.1,1-0.1,1.4c-0.7,0.8-1.5,1.3-2.6,1.3c-2.6-1.3-2.7-4.3-3.9-6.5c-1-4.2-2-8.5-1.9-12.9       C267.6,354.5,268,353.1,269,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4953"),
                d:
                  "M954,114c4-1.1,8-0.6,11.8,0.2c2.8,0.6,5.5,1.3,8.2-0.2c5-2.2,9.9-0.3,14.5,0.9       c3.6,0.9,6.9,1.4,10.5,1.1c0.2,1.4,1,1.9,2.4,2c5.6,0.4,11.3-0.2,16.3,3.8c1.2,0.9,4.1,0.1,6.1,0c11.7-0.3,22.4,4.4,33.6,6.4       c9.2,1.6,18,4.6,26.8,7.6c1.8,0.6,2.6,3.2,4.9,2.2c0.8,0.9,0.9,1.8,0.4,2.9c-1.3,1.5-3.2,1.7-5,1.9c-2.8,0.3-4.9-0.3-3.1-4       c-3,0.4-18-2.4-20.5-3.7c-3.6-1.9-7.7-1.6-11.5-2.6c-6.3-1.6-12.8-3.3-19.5-3c-1.3,0.1-2.8,0-3.9-0.6c-5-2.9-10.3-4.3-16.1-3.8       c-0.6,0.1,0.1,0.2-0.5-0.1c-2.4-1.2-4-3.4-7.5-2.1c-2.8,1-6.2,0.7-9.3,1.2c-0.7,0.1-1.3,0-2,0c-7.1-0.3-13.6-4.1-20.9-3       c-2.3,0.3-4.3-1.5-6.6-2.1c-2-0.7-4.1-1.1-6.2-1.8C955.4,116.7,953.7,116.3,954,114z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB434C"),
                d:
                  "M1021,116c0.1,0.7,1,1.8,0.9,1.7c-3.5-1.6-7.8,1.5-10.9-1.8C1014.3,114.6,1017.7,116.5,1021,116z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53844"),
                d:
                  "M567,640c-2-1.6-2.1-3.8-2-6c2-2.7,1-5.3-0.4-7.8c-1.5-2.8-1.9-5.5-1-8.6c0.8-2.9,0.7-5.9-0.2-8.8       c-1.2-3.8-1.7-7.7-1.4-11.8c0.3-2.2,0.8-4.4,3.6-4.5c3.4-0.1,2.3,3,3.2,5c3.1-1.6,4-3.7,2.5-6.8c-3.1-6.6-3-7,3.6-9.1       c1.4-0.4,1.7-1.4,2.1-2.5c0.8-2.3,1.6-3.5,4.1-1.2c1.1,1,2.3-2,4.1-1.5c0.5,0.1,0.9,0.3,1.3,0.6c0.8,0.9,1.6,2.2,1,3.1       c-1.1,1.7,0.8,1.3,1.1,1.9c1.8,2.6,1.6,6.4,4.1,8.4c4.1,3.2,5.7,9,11.1,10.9c1.7,0.9,3.1,2.2,3.6,4.1c0.7,0.6-1.5,2.2,0.8,2.2       c0.4,0,0.8,0,1.2,0.2c0.7,0.6,1.1,1.4,0.9,2.3c-0.4,1.1-2,2-0.5,3.5c1.8-0.4,0.1-2.6,1.6-3.1c3.2,0.5,5.2,2.3,5.9,5.5       c-6.2,3.9-8.4,3.8-13-0.7c-3.2-3.1-10.9-2.8-13.8,0.7c-0.7,0.9-1,2.1-2.4,2.3c-2.3-1-5-0.8-7.1-3c-2.1-2.1-6.4,0.4-6.7,3.6       c-0.4,4.9,0.8,10-0.8,14.8c-0.5,0.6-1.2,0.8-2,0.6c-0.5-0.2-0.8-0.5-1.1-0.9c-1.3-3.4-0.3-6.9-0.4-9.5c0.2,2.9-2,6.4-1.2,10.2       C568.7,636.3,568.6,638.4,567,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03641"),
                d:
                  "M586.1,576.9c-2.9,0-3.8,2.5-4.9,5.1c-1.4-1.8,0.1-4.1-2.5-4.7c-0.5,3.9-1.9,5.7-6.8,5.7       c-3.2,0-1.2,4.7,0.2,6.8c2,2.8,1.2,5.3-0.4,7.5c-0.8,1-2.3,2.9-4.1,2.1c-1.7-0.8-1.2-2.5-0.5-3.9c0.4-0.9,0.3-1.6-0.6-2.1       c-0.9-0.5-1.7,0-2.3,0.5c-0.9,0.9-1.6,2-2.3,3c-2.1-3.9-3.9-7.9-5.2-12.2c-0.6-1.8,0.2-3.2,0.2-4.8c0.5-2.8-0.9-5.3-1-8       c0.5-3.6,4.5-6,3-10.3c-0.4-1,1.3-1.2,2.2-0.8c4,1.9,8,0.9,11.9-0.2c3.6,4.1,6,9.5,11.6,11.7       C586,573.6,587.2,574.9,586.1,576.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C13B49"),
                d:
                  "M571,634c0.7,0,1.3,0,2,0c6.1,1,6.3,0.8,5.7-5.1c-0.5-5.1,2.6-10.1,7.2-11.3c2.1,2.6,6.1,3.7,5.9,7.9       c0,1.2,0.6,0.7,1.2,0.7c4.3,0.1,9,0.7,13-0.1c4.5-0.9,4,1.8,5.1,3.9c0.8,2.3-3.6,5.6,1.3,8c-6.5,0-13.1,0-19.6,0       c-2.1,0-4.3-0.5-6.1,1.2c-1.3,1.2-2.5,0.3-4-0.5c-4.9-2.5-9.1-1-9.7,3.2c-0.7,0-1.3,0-2,0c-1.1-0.1-2.3,0.2-3-1       C569.3,638.8,569.4,636.1,571,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03C45"),
                d:
                  "M571,634c-0.1,2.7,0.9,5.9-3,7c-0.3-0.3-0.7-0.7-1-1c-0.4-2.1,0.7-4,1-6C569,633.1,570,633.2,571,634       L571,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8303D"),
                d:
                  "M573,561c-4.1,3.2-8.4,3-13.4,0.3c3.6,5.4-1.5,7.4-3.6,10.7c-0.2-0.6-0.3-1.3-0.8-1.7       c-3.5-3.5-4.6-7.5-3.3-12.3c0.1-2.1-0.2-4.2,0.6-6.3c2.2-5.7,1.1-8.8-4.4-12.6c2.7-2.1,4.8-0.8,6.9,0.8       c1.7,1.2,3.8,2.9,3.8-2.8c0.7,8.8,8.4,10.9,11.3,16.7c0,0.1,1.1-0.4,1.8-0.7c1.4,0.4,1.8,1.5,2,2.7       C574.3,557.6,573.2,559.2,573,561z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681414"),
                d:
                  "M573.1,555.8c-0.4-0.9-0.7-1.9-1.1-2.8c-5.6-9.9-11.6-19.6-18-29c-1.2-1.6-2.6-3-3-5l0,0       c-2.3-1.4-3.7-3.3-4-6c-4.1-8.5-10.8-15.3-16-23c-0.1-0.2-0.3-0.4-0.4-0.6c0.1-0.5,0.4-0.8,0.9-1c0.7-0.2,1.4-0.1,2,0.3       c3.1,2.4,4.9,5.9,7.4,8.9c3.7,5.3,7.9,10.1,11,15.9c4,5.4,6.8,11.6,10.9,17c2.9,5.1,6.1,10,9.1,15.1c6,9.7,11.4,19.7,17.8,29.1       c1.9,3.9,5.6,6.8,6.3,11.4c-0.1,1-0.5,1.9-1.6,2.3c-3-0.3-3.5-3-4.8-4.9c-1.1-2.2-2.1-4.5-3.5-6.6c0,0,0,0,0,0       c-0.2-1.5-0.9-2.9-2-3.9C579.1,568.1,575.8,562.1,573.1,555.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8303D"),
                d:
                  "M549,554c-0.7-1.3-4-1.3-2-4c1.3,0.2,3.1-0.6,3.8,1.3C551.3,552.8,550.7,553.8,549,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942A34"),
                d:
                  "M551,519c1.3,1.5,2.8,2.9,3,5c-1-0.3-2-0.7-3-1C550,521.7,551,520.3,551,519z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F4148"),
                d:
                  "M133,598c-4.4-3.1-8.7-6.1-13.1-9.2c-3.6-2.6-7.1-5.3-11.9-4.8c-1.5-2.7-1.9-5.8-4.4-8.1       c-1.6-1.5-1.9-3.7-1.6-5.9c3.4-0.5,8.4,2.5,10.3,6c2.3-1.3,4.9-2,5.7-5.5c0.5-2.3,2.6-0.2,3.9,0.7c-3.7-3-3.5-8.5-7.4-11.6       c-1.1-0.9-0.8-2.8-0.1-4.3c1.9-1.9,3.4,1.5,5.2,0.4c4.5,3.9,7.3,9,10,14.1c0.7,1.8,1.9,3.4,1.9,5.3c-0.5,1.5,0.1,2.7,0.7,4.2       C135.1,585.4,134.6,591.7,133,598z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("774147"),
                d:
                  "M115,555c0.1,2.6-0.7,5.5,3.2,6.2c0.8,0.1,1.7,0.9,1.5,1.7c-1.1,3.6,1.4,5.4,3.4,7.6       c0.8,0.8,2.7,1.8,1,3.1c-1.5,1.1-2.7,0-3.2-1.8c-0.2-0.6-0.7-1-2-2.6c1.4,8.4-5.7,5.9-8.8,9.5c0.9-3.2-3.4-7.3-8.1-8.7       c-2-1.6-0.2-4.2-1.6-6.1c-1.4,2.9,0.8,6.3-1.4,9c-0.6-3.6,1.1-7.5-1-10.9c0-1.7,0-3.3,0-5c2.9,1.1,3.7-0.5,3.4-2.9       c-0.2-1.5-0.8-2.9,0.1-4.7c1.7,2,3.2,3.9,5,5.6c1,1,2.3,2.3,3.8,0.9c1-1,0.9-2,0.1-3.5c-2.1-3.8-4-7.8-6.8-11.2       c-2.4-3-1.9-6.7-2.6-10.1c1.2-0.4,2.1,0.2,2.5,1.1c3.2,6.8,8.1,12.6,11.4,19.2C115.5,552.5,116.1,553.7,115,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7434C"),
                d:
                  "M851,106c-0.1,1.1-0.6,1.9-1.8,1.9c-5.3-0.1-10.7-0.3-16,0.7c-1.6,0.3-2.1-1.2-2.2-2.6       C837.7,106,844.3,106,851,106z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBDDD9"),
                d:
                  "M2037.3,407.9c-0.4,0-0.8,0.1-1.3,0.1c-1.3,1.1-2.7,1-4,0c-1,0-2,0-3,0c-1.1,1-2.5,1.3-3.9,1.8       c-0.7,0.1-1.4,0.1-2.1-0.1c-2.7-0.9-5.4-1.7-7.9-2.9c-0.8-0.4-1.7-0.8-2.5-1.2c-5.8-2.2-11.3-5.3-16.8-8.1       c-2.2-1.5-1.7-3.2-0.3-4.9c0.5-0.2,0.9-0.3,1.5-0.3c4.2,1.7,8.4,3.5,13.1,3.7c1,0,1.9,0.5,2.2,1.6c-0.9,2.4-3.3,0.1-4.4,1.1       c2.8-0.4,5.4,0.7,8.1,1.5C2023.2,402.5,2030.4,404.8,2037.3,407.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901D28"),
                d:
                  "M2042,403.9c-0.4,0.1-0.8,0.1-1.2,0.2c-5.9-1.4-11.8-2.8-17.8-4.2c-1.1-1.2-2.8-1.3-4.2-1.8       c-0.6-0.1-1.2-0.1-1.8-0.2c-1.1-1.3-2.9-0.6-4.2-1.5c-0.8-0.6-1.3-1.3-1.4-2.3c-0.2-3.4,2.2-4.9,4.9-5.1c2-0.1,4.8,0.5,4.8,3.7       c0,1.9,1.6,1.4,2.5,1.5c2.1,0.3,4.3-0.3,6.4,0.7c0.4,0.2,0.8,0.4,1.1,0.7c0.4,0.6,0.5,1.2,0.4,1.8c-0.2,0.8-0.1,1.4,0.8,1.6       c3.7-0.3,6.6,1.8,9.9,2.8C2042.6,402.7,2042.6,403.4,2042,403.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E3B35"),
                d:
                  "M2013,396c1.6,0.2,3.6-0.6,4.1,1.9c-0.7,0.3-1.4,0.7-2.1,1c-1.3,0.6-2.1,0-2.8-1       c-5.4-1.7-11.4-1.6-16.2-5.2c1-2.5,2.8-1.2,4.4-1.1c2,0.8,4.2,1.1,6.3,1.3c0.5,0.1,0.9,0.2,1.4,0.4       C2009.7,394.3,2011.4,395,2013,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F8F0E6"),
                d:
                  "M2012.1,397.9c0.9,0.3,1.9,0.7,2.8,1c0.3,0.4,0.7,0.8,1,1.2c-3.3,1.1-5.9-1.2-8.9-1.9       C2008.8,398.1,2010.5,398,2012.1,397.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("552924"),
                d: "M2045,406c1.9,0,4-0.3,5,2C2048,408.1,2046.3,407.6,2045,406z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E3B35"),
                d:
                  "M2018.9,398.1c1.6,0,3.6-0.8,4.2,1.8C2021.4,399.9,2020.1,399.2,2018.9,398.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("602127"),
                d:
                  "M2050.9,421c1.8,5.5,4.9,10.3,8.2,14.9c0.5,0.9,0.5,1.9,0.4,2.9c-0.4,1.2-1.4,2.1-2.3,2.9       c-2.5,1.9-4.2,4.7-7.4,5.6c-1.3,0.3-2.7,0.9-3.6-0.5c-0.7-1.3,0.5-2.2,1.3-2.9c1.9-1.5,3.2-3.3,3.5-5.8c2.4-2.9-0.1-3.3-2-4       c-0.1-0.9,1.5-1.8-0.5-2.9c-1.9-1.1-4.5-2.3-4.7-5.2c1-1.4,3.1-1,4.1-2.3c0.7-0.7,0.8-1.5,0.9-2.4       C2049.4,420.5,2050,420.2,2050.9,421z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DAA7A1"),
                d:
                  "M2063,441.1c2.4,0.8,2.3,3.6,4,5c0.2,2.6,2.4,5.4-1.1,7.4c-3.3,0.3-6.2,2.2-9.4,2.6       c-2.5,0.3-4.9,0.3-7.2-0.9c-3.8-1.4-8.4-0.7-11.4-4.1c-0.1-1.5,1-2.1,2.1-2.7c0.5-0.2,0.9-0.3,1.4-0.4c1.2-0.1,2.5,0,3.6,0.4       c6,3.2,10.8,2.3,15.8-2.2C2062.5,444.6,2060.5,442,2063,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D1B8B4"),
                d:
                  "M2066,453c2.1-2.1-0.8-4.8,0.9-7c0.3,0,0.7,0,1,0c0.9,4,4.1,6.6,6,10c0.2,1.6,0.8,3,2,4       c2.3,5.4,4.6,10.7,6.9,16.1c-0.8,1.4,0.2,3.5-1.9,4.3c-2.5,0.3-2.8-1.2-2.2-3.1c0.4-1.2,1.4-2.3,0.8-3.7c0.1-0.6-1-0.3-0.3-0.3       c0.2,0,0.2,0.2,0.3,0.4c0.2,1.2,0.3,2.4-1.4,2.4c-1.5-1.3-1.2-3.3-1.9-4.9c-1.5-3.4-2.7-6.9-5.5-9.6       C2070.3,458.1,2065.4,457.1,2066,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B1E22"),
                d:
                  "M2023,409c0.6,0,1.1,0.1,1.7,0.1c0.8,0.3,1.7,0,2.3,0.9c5,2.4,10,4.7,15,7.1c0.3,0.9-0.2,1.2-0.9,1.5       c-2.2,0-4.3,0.1-6.1,1.7c-4.6-0.7-8.1-5-13.3-3.9c-3.3-1.4-1.9-4.2-1.9-6.5C2020.3,407.7,2021.7,408.5,2023,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC6362"),
                d:
                  "M2063,441.1c1.5,6.2-3.3,7.6-7.3,9.6c-3.9,2-7.6,2.1-10.7-1.6c0.2-0.2,0.3-0.3,0.5-0.5       c8.4-0.1,10-1.3,13.4-9.7c0.1-1,0.2-2,0.2-3C2060.4,437.7,2061.7,439.4,2063,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D4048"),
                d:
                  "M2041,418c0.3-0.3,0.6-0.6,0.9-0.9c3.4,0.3,6.2,2,8.9,3.9c-0.8,0.1-1.5,0.1-1.9,1       c-3.3-1.1-6.9-0.1-10.1-1.8C2038.4,418.3,2040.4,418.8,2041,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2032,408c1.3,0,2.7,0,4,0c0.7,0.7,1.3,1.3,2,2C2036,409.3,2033,411.6,2032,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2DBD5"),
                d:
                  "M2026.9,410c-0.9,0-1.7-0.1-2.3-0.9c1.4-0.7,2.8-1.3,4.4-1.2C2029,409.4,2028.2,410,2026.9,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B99493"),
                d:
                  "M2080.9,480c0.7-1.3,1.3-2.6,2-3.9c0.4,0.6,0.7,1.3,1.1,1.9c0,0.7,0,1.3,0,2c-0.8,0.4-1,1.2-1.1,2       c-0.7,0.5-1.3,0.6-2.1,0.1C2080.4,481.4,2080.4,480.7,2080.9,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D5455"),
                d:
                  "M2005,346c8.3,3.7,16.6,7.5,25,11.1c3.9,1.7,7.6,3.7,11.1,6c0.8,2-0.4,2.8-2,3.4       c-7.6-1.4-13.8-5.9-20.6-9c-6-2.8-12.1-5.3-18.5-7.1c-1.9-0.5-4.1-0.7-3.9-3.5c0.1-0.5,0.3-1,0.6-1.4c1.3-1.3,2.7-1.4,4.2-0.5       C2002.3,345.3,2003.7,345.7,2005,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5B5C"),
                d:
                  "M1947,327c1,0,2,0,3,0c9,2.7,17.9,5.4,26.9,7.9c1.4,0.4,2.5,0.7,3.1,2.1c-2.6,2.1-5.2,0.2-7.7,0       c-6.4-1.7-12.5-3.9-18.9-5.6C1950.9,330.7,1947.6,330.7,1947,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D5455"),
                d:
                  "M1972,336c2.7,0.3,5.3,0.7,8,1c0.4,0.8,1.2,1,2,1c4.8,1,9,3.5,13.6,5.2c1.2,0.5,2.6,1,1.4,2.8l0,0       c-1.7,1.5-3.9,1.7-5.5,0.7c-3.1-1.9-6.9-2.2-9.8-4.4c-2.5-3.2-6.7-2.3-9.8-4.2C1971.4,337.4,1971.5,336.7,1972,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5B5C"),
                d:
                  "M1997,346c-2.8-3.8-7.7-3.6-11.1-6.1c-1.2-0.9-2.9-0.5-3.9-1.9c3.1-1.3,5.3,1.4,8,2c4,0.9,7.6,2.6,11,5       C1999.6,344.8,1998.3,345.3,1997,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("885554"),
                d:
                  "M2088.5,506.7c0.8,1.2,0.3,2.5-0.6,2.6c-1.6,0.2-0.6-0.9-0.3-1.5C2087.8,507.3,2088.2,507,2088.5,506.7       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A95E62"),
                d:
                  "M2072,601.9c-0.4,1-0.7,2-1.1,3.1c-0.7,0.6-1.4,0.6-2.1,0.2c-0.7-0.8-1-1.7-1.2-2.7       c-0.2-2.5-0.5-4.8-2.2-7.1c-1.6-2.2-0.8-5.8-0.7-8.6c0.4-7.2,2.2-14.3,3.2-21.4c1.1-7.3,3.9-14.3,3.8-21.7c0-3.8-0.8-7-4.2-9.5       c-3.7-2.7-3.4-9.1,0.1-11.8c4-3,5.4-6,5.3-11.1c0-2.6-0.6-5.1,1.9-7.3c1.7-1.4,0.2-3.4-0.8-4.9c-2.8-4-3.8-8.3-3-13.1       c2.9,1.8,4.1,5.1,6.3,7.5c4.2,4.5,3,9.3,1.8,14.5c-0.9,4,2,8.6-0.4,12.1c-2.6,3.8-1.8,7.7-2.1,11.6c0,0.5-0.4,1-0.3,1.4       c3.6,10.2-1.7,19.2-3.7,28.7c-1.2,5.8-1.9,11.8-1.7,17.8c0.1,2.6,0.6,5.3-1.5,7.6c-0.9,1-0.1,1.1,1,1.8       c2.2,1.5,2.8,4.6,2.1,7.4C2072.1,598.3,2072,600.1,2072,601.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4575C"),
                d:
                  "M2071,486c1.5,5.1,1.5,10.6,5.6,14.8c1,1,1.5,3.8-1.5,5.3c-2.5,1.2-0.3,4.2-0.9,6.3       c-0.3,1,0.8,2.7,0.3,3.3c-3,3.4-3.9,7.5-3.7,12.3c-2.6-1.6-1.1-3.6-2.1-5c-3.6,6.7-3.4,6.5,2.1,12.1c2.5,2.6,3.4,6.8,2.3,10       c-1.5,4.5-0.5,9.6-3.7,13.5c-0.2,0.2-0.3,0.7-0.2,0.9c2.7,7.2-3.3,13-3,20c0.1,4.7,1.3,9.6-0.3,14.3c-0.1,0.3,0,0.8,0.1,0.9       c3.1,1.6,2.8,4.6,3.1,7.3c-0.7,0.5-1.5,0.6-2.3,0.3c-5.1-4.6-7.1-12.7-4.7-18.7c1-2.4,0.4-4.9,0.9-7.3c0.9-2,1.6-4,0.5-6.2       c-0.1-0.5-0.1-0.9-0.1-1.4c2.8-9.4,4.3-19,4.7-28.8c0.1-1.7-0.8-2.3-1.9-3.2c-1.7-1.3-3.4-2.7-4.4-4.7       c-0.7-1.3-1.6-2.9-0.2-4.1c2.5-2.2,2.3-5.7,3.8-7.7c3-4,2.2-8.5,3.6-12.6c0.7-1.9,0.4-3.8-0.2-5.8c-1-3.7-2.5-7.5-0.6-11.5       c1-2-0.2-3.9-1-5.7c-0.4-1.9-0.2-3.7,1.5-4.9c0.8-0.3,1.6-0.3,2.2,0.3C2070.2,482.1,2071.1,484,2071,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C08786"),
                d:
                  "M2071,480.1c-0.6-0.1-1.2-0.1-1.8-0.2c-0.3-0.4-0.3-0.8,0.1-1.2c4.8-1.8,7.9,2.3,11.8,3.3       c0.6,0,1.2,0,1.9,0c-0.7,1.6-1,3.2-0.9,5c-1.4,0.9-2.3,2.1-4.3,0C2075.4,484.7,2073.6,481.9,2071,480.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A36262"),
                d:
                  "M2082,491c1.5,2.5,2,5.2,2,8c-2.4,2.6-0.1,5.5-0.7,8.3C2080.7,502,2081.9,496.5,2082,491z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("965A5A"),
                d:
                  "M2085,392c-4.4-1.6-8.2-4.1-11-8C2078.2,386,2082.3,387.9,2085,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("481518"),
                d:
                  "M2038.9,365.9c1.2-0.5,2-1.5,2.3-2.8c0.6-0.4,1.2-0.7,1.8-1.1c0.8,0.4,0.9,1.1,1,1.9       c-1.3,1.4-2.6,2.7-3.9,4.1c-2,4-6,5.5-9.6,7.3c-0.5,0.1-0.9,0.2-1.4,0.2c-0.5-0.1-0.9-0.4-1.2-0.7c-0.3-1.7,0.8-2.5,1.9-3.5       C2032.8,369.4,2035.3,366.8,2038.9,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC787B"),
                d:
                  "M2069.1,605.1c0.6,0,1.2-0.1,1.9-0.1c0.4,0.1,0.8,0.2,1.2,0.3c0.3,1-0.1,1.8-0.4,2.7       c-0.2,0.5-0.3,0.9-0.5,1.3c-1,1.9-1.1,4.1-2.5,5.8c-1.1,1.3-2.2,2.6-4.1,2.3c-2.2-0.4-2.8-2-2.6-4c0.1-0.7,0.5-1.4,1-1.9       C2065.5,609.8,2067.1,607.3,2069.1,605.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992F39"),
                d:
                  "M2071.1,607.1c0.4-0.6,0.7-1.2,1.1-1.8c5,3.5,8.6,8.4,12.9,12.7c0,0.3,0,0.6,0,1       c-0.9,1.1-2.1,1.2-3.4,0.9C2077.7,615.9,2075.1,610.9,2071.1,607.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851727"),
                d:
                  "M2081,619c1.3,0,2.7-0.1,4-0.1c0.5,0.1,1,0,1.4,0.2c1.3,0.6,0.3,0.7-0.2,1c-2.7,1.5-5.9,1.6-8.3,3.8       c-7.3,1.4-14.6,2.8-21.9,4.1c-3.1,2.3-6.9,1.1-10.3,1.9c-1,0-2.1-0.2-3,0.1c-4.7,1.5-8.1-0.1-10.9-3.9c-0.4-0.5-0.4-2.4-1.9-1       c-0.4,0.3-0.8,0.8-0.8,1.2c0.2,1.2,1.3,0.5,2,0.7c0.8,0.3,1.6,0.4,1.8,1.8c-4.6,1.3-9.5,0-13.2,0.6c3.3,0,7.5-0.1,11.8,0.1       c1.1,0,2,0.4,1.2,1.8c-1.2,0.4-2.5,0.7-3.7,0.6c-3.2-0.1-6.3,0.1-9.4,0.7c-0.5,0.1-1,0.2-1.5,0.2c-2.3,0.1-3.9-0.5-4.1-3.1       c-0.1-2.1,1-3.3,2.7-4.4c2.4-1.5,3.4,0.4,4.5,2.1c0.5,0.2,0.4-1.2,0.2-0.6c-0.1,0.3-0.3,0.3-0.5,0c-0.7-1.3-1.8-2.2-3.1-3       c-1.6-1.1-3.4-2.9-1.8-4.9c1.5-1.9,3.6-1.6,5.3,0.3c-0.5-1.4-2.4-1.7-2.7-3.3c0.9-4,3.2-5.2,6.8-3c5.4,3.3,11.7,2.6,17.6,3.8       c3.1,0.6,5-1.6,7.5-2.2c4.3-1,7.4,2.9,11.4,1.8c1.5,0.4,2.4,1.5,3.3,2.6c0.2,1.4-1.2,2.3-1,3.9       C2070.4,623.8,2075.4,620.2,2081,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B3E43"),
                d:
                  "M2030,375c3.4-2.3,6.7-4.6,10.1-6.9c7.6,3.3,14.1,8.4,20.9,12.9c2.2,2.6,1.8,6.7,6.3,8.4       c2.2,0.8,3.1-0.5,4.6-0.3c0.5,5.3,0.9,5.5,6.8,3.3c-2.1,3.6-2.1,5.6,2.7,5c2.2-0.3,2.8,1.7,2.5,3.7c-2.5,0.2-4.3-1.8-6.6-2.3       c-5.9-2.1-11.3-5.2-16.9-7.8c-4.9-2.3-9.7-4.8-14.6-7.2c-3.8-2-7.6-3.9-11.6-5.5C2032.5,377.6,2030.9,376.7,2030,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E89096"),
                d:
                  "M2046.2,382.9c10.7,4.7,21.2,9.7,31.1,15.9c-0.5,0.5-0.9,0.9-1.4,1.4c0,0-0.5-0.1-0.5-0.1s-0.5,0-0.5,0       c-2.7-2.2-5.5-4.3-8.9-5.2c-7.8-2.4-14.8-6.2-21.3-11.1C2044.9,383,2045.2,382.4,2046.2,382.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2042,403.9c0-0.6,0-1.3,0-1.9c-0.4-2.6-2.7-2.3-4.4-2.8c-1.8-0.5-3.6-0.8-2.9-3.4       c0.2-0.4,0.4-0.8,0.7-1.1c0.7-0.8,1.4-1.6,1.8-2.6c0.1-0.4,0.3-0.8,0.5-1.2c0.3-3.3,3.4-3,5.3-4.2c0.5-0.1,0.9-0.1,1.3,0.1       c1.3,2.7,3.6,2.8,6.1,2.7c2.2,1,5.2,1.6,2.9,5.1c0.9,0.4,1.5,1,1.6,2c0,0.5-0.1,1.4-0.2,1.4c-4-0.7-0.5,3.5-2.7,4       C2048.5,401.7,2045.7,405.2,2042,403.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1D2D"),
                d:
                  "M2052,402c-0.4-2.4,0.3-4.3,2-6c5.6-2.5,10-1,15,5c5.2,3.1,4.9,5.5-1,9c-5.1-1.4-9.4-5.2-15.4-4.8       c1.2-1.8,2.4-1,3.4-1.3c0.9-1.7,3.3-2.3,3.4-5c-2.7,0-4.3,2.1-6.4,3C2052.7,402,2052.3,402,2052,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2053,402c-0.1-2.3,2.6-2,3.4-3.9c0.7-1.7,3.3-0.6,4.2,0.1c1,0.8,0.8,2.8-0.7,3.8       c-1.2,0.8-2.2,2.1-3.9,2C2055.4,402.6,2054.4,402,2053,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93252F"),
                d:
                  "M2069,401c-4.6-3-9.1-6-15-5c-1.5-1.9-0.7-5.3-4-6c-2.5,0.4-3.7-1.5-5.2-2.8c-0.8-0.9-1.7-1.8-1-3.2       c0.4-0.3,0.8-0.4,1.3-0.2c7,3.7,14.4,6.7,20.9,11.1C2067,396.9,2068.9,398.5,2069,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1818,500c0-2.4-1.2-4.7,0.5-7.4c1.5-2.4,4.9-4,6.7-1.5c3.3,4.4,7.4,8.6,6.8,14.9       c-2.6,1.8-3.9-0.5-5.2-1.8c-2.1-2.2-3.7-4.9-7.4-2.9C1819.2,501.3,1818.5,500.4,1818,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1C26"),
                d:
                  "M1796,481c2,2,2,4.5,2,7c-1.9,0.9-3-2.2-5-1.1c-0.1-0.8-0.1-1.7-0.5-2.3c-0.9-1.3-2.5-3.1-1.7-3.9       C1792.1,479.4,1794.3,479.5,1796,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1857,549c-0.3-4.3-2.7-8-4-12c-1.4-4.1-2-8.6-5-12c-0.3-1-0.6-2-0.9-3c1.9-0.1,2.2-1.7,2.9-3       c3.4-2,6.8-0.4,10,0.5c7.9,2.4,15.9,4.3,23.8,6.5c4.8,2,10.2,2.1,14.8,4.6c1.4,1.1,2.9,1.9,4.7,1.6c1.4,0.2,2.7,0.6,3.9,1       c1.4,0.6,2.6,1.5,3.6,2.6c1,1.1,4,1,2.7,3.2c-1.3,2.3-3.7,3.3-6.2,0.7c-0.2,2.5-0.1,4.6,0.6,6.7c0.7,2.4-0.1,5.1-1.7,5.8       c-4.2,1.7-3.3,5.4-4.1,8.4c-0.9,3.4-7.5,8.4-10.9,8.2c-1-0.1-2.5-0.3-2.6-1.2c-0.1-5.4-6.1-3.9-6.9-3.6c-4.5,1.5-4.2-1.6-4.7-4       c-0.2-0.9-0.4-1.9,0.2-3.4c-1.5,2.2-3.2,3.4-4.9,4.5c-5,2.8-5.2,2.7-5.6-3.8c1.7-3.5-3.3-5.7-1.9-9.2c0.3-0.7-0.7-0.5-1-0.4       c-1.1,0.4-1.3,1.3-0.9,2.4c1.2,3.1-0.3,4.6-3.1,5.3C1857,554.1,1857.1,551.5,1857,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1627"),
                d:
                  "M1845,498c-2.8-1.5-3-4.9-5-7c0.5-0.6,0.9-1.6,1.8-1.6c3.4-0.1,6-0.9,6.8-4.9c0.4-1.8,2.7-2.3,4.4-2.8       c0.9-0.2,2-0.5,2.7,0.5c0.6,0.8,0,1.6-0.5,2.2c-1.9,2.1-1.2,3.2,1.3,3.7c6.7,1.3,13.6,0.1,20.3,1.4c1.3,0.3,1.6-1,1.7-2       c0.3-2.1,1.8-3.9,3.5-3.6c4.1,0.6,5.8-2.2,8.1-4.5c2.7-2.8,5.7-5.2,10-3.4c0.5,2.4-1.2,3.6-2.7,4.9c-5,4.7-10.8,8.3-15.6,13.2       c-1,1-3.1,1.5-2.5,3.2c0.5,1.5,2.6,1.3,4,1.5c11.1,2.3,22.1,4.6,33.1,7.3c1,0.2,1.9,0.6,2.8,0.9c1.9,1.1,4.6,0,6,2.5       c-1.6,3.4-4.7,4.6-7.4,3c-0.6-0.4-1.2-0.8-0.6-1.5c0.4-0.6,1.1-0.6,1.3-0.5c-2.5,1-5.7,0.3-8.6,1.7c-3,1.5-6.1-0.3-9.2,0.2       c-2.3,0.4-3.7,2-5.7,2.9c-4.8,2.2-9.5,4.5-15,4.4c-1.6,0-4.5,0.1-2.9,3.4c-1.5,1.2-3,0.7-4.6,0c-2.9-1.1-5.8-2.3-9-2.5       c-1.9-0.1-3.9-0.6-4.1-3.2c-1.6,2.2-3.5,0.9-5.4,0.4c-1.6-0.4-2.5-1.5-3.1-2.9c0.4-0.8,1.2-1,2-1c-4-5.6-0.5-11.8-1.3-17.7       c-0.1-1.1,0.4-2.3-0.5-3.2C1848.1,493.5,1850.2,500.3,1845,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1900,476c-4.6,0.2-8.1,2.2-10.5,6.2c-1.1,1.8-3.5,2.2-6.4,2.3c-1.4,0-3.6,0.5-3,3.2       c0.6,2.5-1.9,3.6-3,3.3c-6.1-2.1-12.4-0.4-18.6-1.2c-3-0.4-5.7-0.8-6.8-4.2c1.1-1,3.2-0.9,3.6-3.3c-3.2,0.9-6.7,0.8-6.4,5.6       c0.2,2.5-2.2,2.1-3.7,2.4c-1.7,0.4-3.6-0.6-5.2,0.7c-0.1-1.2,0.3-2.6-0.9-3.6c-2,1.7-0.4,3.9-1.4,5.6c-1.4-2.9-4.2-2.6-6.7-3       c0.2-1.5-0.7-3.2,2-3.7c2.4-0.4,3.8-2,2.7-5.2c1.8,2.4,3.4,3.6,5.9,1.3c2.4-2.3,2.3,0.6,3.1,2.1c1-3.3,1.8-6.2,1.1-9.3       c2.5-0.5,4,3.2,6.6,1.2c0.3-2.2-2.2-0.8-2.8-2.6c4.4,1,6.9-4.1,11.4-2.8c-0.3,1-0.9,1.7-1.3,1.8c1.3-1.2,3.5-0.8,5.5-0.8       c1.8,0,4-0.4,4.3,2.1c0.4,2.8-2.2,2.5-3.7,3c3.1-0.1,5.9-0.2,8.3-3.5c1.9-2.7,6.2-0.3,9.2-2c0.6-0.3,1.2,0.8,1,1.8       c-1.9,1.9-1.5,3.7,0.4,5.4c0.9-1.8-2.3-2.8-0.9-4.7c2.5-2,5.5-3.2,7.8-5.7c1.8-2,5.3,0.4,8.2-1.4c2.2-1.4,4.8-2.7,7.1-4.2       c0.4-0.2,0.9-0.2,1.3-0.2c1.7,1.8,0.8-0.8,1.5-0.9c0.4-0.3,0.8-0.4,1.2-0.5c1.8-0.1,3,1.1,4,2.3c0.7,2.8-1.9,3.2-3.2,4.6       c-0.3,0.3-0.7,0.6-1,0.8c-2.2,1.6-4.1,3.5-5.9,5.5C1903.4,475.2,1902.2,477.3,1900,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1845,498c4.2,0.6,1.4-4.8,4.5-5.4c0.8-0.2,0.5-2.9,2.5-2.2c1.6,0.6,1.2,2.4,0.9,3.5       c-1,4.7,2.4,10.1-2,14.3c0.5,0.4,1,0.7,1.3,1.1c1,1.4,2.7,2.8,0.7,4.6c-2.8-2.3-5.5-4.6-8.2-6.9c-0.7-0.6-0.7-1.4-0.5-2.3       c0.5-2.7,0.3-3-1.8-3.7C1842.7,499.6,1845.3,500,1845,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81162C"),
                d:
                  "M1851,515c2.6,1.3,4.9,4.2,8.4,1.9c3.3,4.7,9.6,1.7,13.4,5.3c1.2,1.2,2.8,0.8,4.3,0.8       c3,0.4,6,0.6,9,0.5c0.7,0.3,1.3,0.8,1.8,1.5c0.8,4.4-2.1,2.2-3.8,2c-6.7-0.8-13.1-3.1-19.6-4.8c-4.7-1.3-9.4-2.9-14.4-3.2       c-0.3-0.7-0.7-1.3-1-2C1850,516.6,1850.6,516,1851,515z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73A47"),
                d:
                  "M1886,630c-5.3,0.3-7.1-4.8-10.8-6.9c-3.8-2.1-6.8-5.9-12-5.2c-3.8,0.5-8.4-1.5-11.1,0.8       c-2.7,2.2-0.6,6.9-1,10.5c-0.1,1.1,0.2,2.4-2,3.1c0-5,0-9.6,0-14.3c3.6-2.4,1.5-6,2-9c0.3-1.6,0-3.3,0.1-4.9       c0.1-1.5,0.7-2.4,1.8-0.6c0.7,1.2,1.5,0.9,1.7,0.1c0.6-2.8,2.8-3.3,4.8-4.5c2.3-1.4-1.6-3.2-0.4-5.1c0.6-0.5,1.2-0.6,1.9-0.4       c0.4,0.2,0.7,0.6,1,0.9c0.4,0.4,0.6,1.5,1.3,1c0.8-0.6,0.9-1.9-0.1-2.5c-1.5-0.8-2.8,0.2-4,1c-1.2,0.5-2.3,1.3-4.1,0.7       c2.5-1.4,2.6-3.2,1-5.3c-0.9-1.2-0.3-2.9,1-2c3.5,2.3,8.4,1,11.1,4.7c0.6,0.3,0.1-0.4,0.5,0.1c4.4,6.2,12.3,8.7,16.4,15.2       c1.6,2.5,3.1,5.1,1.8,8.3c-0.7,1.9-0.4,3.9-0.1,5.9c0.1,0.5,0,0.9,0,1.4c-0.8,1.9-2.4,3.8-0.3,5.8c0,0.2,0.1,0.4,0.1,0.7       C1886.2,629.6,1886.1,629.8,1886,630z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96313C"),
                d:
                  "M1866,581c-0.3-0.3-0.7-0.7-1-1c-0.7-1.2-0.8-2.3,0.3-3.3c2.5-0.8,4,0.1,5.2,2.5       c2.4,5,7.3,7.6,11.2,11.1c2.3,2.1,3-1.6,4.7-0.9c3.5,1.8,7.4,2.2,11.1,2.9c0.4,2,4.2,3.8,5.5,2.3c1.2-1.3,3.8-1.6,3.1-4.9       c-0.4-1.9,2.3-4.3,5-2.7c3,1.7,3.8,0,4.7-2.2c0.2-0.4,0.4-0.8,0.5-1.2c0.4-1.6-1-2.7-1.2-4.1c-0.2-2,0.3-4,2.7-3.6       c4.4,0.9,6.7-1.6,8.9-4.6c0.6-0.8,1-1.7,2.3-1.5c3.1,1.4,7,1.8,6.6,6.7c-4.8,8.1-11.9,14.2-17.8,21.3c-0.4,0.5-0.8,1.1-1.3,1.6       c-0.9,1-1.6,2.1-2.5,3c-2.1,1.6-3.7,3.7-5.4,5.7c-0.7,0.9-1.4,1.8-2.1,2.6c-0.7,0.7-1.5,1-2.5,0.9c-4.3-0.8-6.2,3.5-9.5,4.6       c-0.5,0-0.9-0.2-1.2-0.6c-2.6-3.3,0.9-4.8,2.3-6.6c1.5-2,4.3-3.7,2.3-6.2c-1.8-2.2-4.2-4.5-8.1-2.7c-3.7,1.7-7.2,0.1-10.4-2.6       c-4-3.4-8.3-6.4-11.4-10.6c-0.3-0.3-0.7-0.7-1-1C1865.7,584.5,1867.8,582.4,1866,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3742"),
                d:
                  "M1857,549c1,2,1.9,4,2.9,6.1c2.7,4.5,3.7,9.6,5.2,14.5c0.1,1.3,0.1,2.7-0.5,3.9       c-0.2,0.2-0.4,0.4-0.6,0.6c-2-1.4-1.3-6.3-2.7-5.3c-2.5,1.8-5.8,0-6.7,1.5c-1.9,3.2-4.7-1.8-5.2,0.7c-0.5,3-4.5,0-3.9,2.7       c0.8,3.8-2.1,8.2,1.8,11.5c1.1,0.9,2.2,2.1,1.4,3.8c-1.5,0.7-1.9-1.8-3.3-1.2c2.4,6-1.2,11.1-1.7,17.8c-1.4-2-2-2.8-2.7-3.7       c0-3.3,0.1-6.6,0-9.9c-0.1-2.6,1.2-5.8-3.1-6.6c-1-0.2-0.9-1.6-0.9-2.6c0.1-3.8-1.1-7.3-2-10.9c-0.2-1.6,1.4-2,2-3       c2.5-1.6,6.3-1.2,7.6-5c0.3-0.8,1.6-1.2,0.8-2.5c-2-3.5,0.8-3.4,2.9-3.7c2.2-0.4,4.2,0.5,6.1,1.5c2.2-2.1-0.7-5.3,1.6-7.3       C1856,550.9,1855.8,549.7,1857,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3643"),
                d:
                  "M1868,587c2.5,1.7,5,3.1,7,5.8c1.5,2.1,4.7,4.2,7.3,5.7c2.4,1.4,5.9,2,9.5-0.3c3.6-2.3,4.9,3.7,8.3,4.1       c-0.3,2.5,0.4,5.1-2.6,6.9c-2.1,1.3-4.7,3.3-3.5,6.8c-1.7,1.1-1.8,3.5-3.4,4.6c-1.3,0.9-2.5,2.8-4.6,1.5       c-1.9-2-1.4-4.7-0.8-6.6c1.2-3.5,0-5.7-2.2-8.1c-3.2-3.4-5.5-7.4-10.7-8.4c-3.1-0.6-2.3-4.9-4.3-6.9       C1868,590.3,1868,588.7,1868,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3643"),
                d:
                  "M1866,577c-1.2,0.7-1,1.9-1,3c-1.9-1.7-1.4-3.9-1-6c0,0,0,0,0,0c1.8-0.3,2.5,0.9,3,2.2       C1867.3,577,1866.7,577.2,1866,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3643"),
                d:
                  "M1866,581c4,0.9,0.2,3.4,1,5C1865.3,584.6,1866.2,582.7,1866,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C333F"),
                d:
                  "M1856,552c-0.5,2.7,1.8,5.4,0.1,8.2c-0.8,1.5-1.8,2.4-2.8,0.8c-2.2-3.5-5-1.7-8.9-1.5       c2.9,1.8,6.9,3.2,1.4,4.8c-0.1,0-0.4,0.2-0.4,0.3c-1.1,4.7-4.5,5.1-8.4,4.4c0-2.6,1.1-6.3-0.2-7.7c-3.4-3.7-0.9-7.7-1.8-11.3       c1.2-3.2,1.2-3.2,5.1-3.7c-0.4,1.3-1.9,2.5-0.6,4c1.9,0.6,1.1-1.8,2.1-1.9c2.1-0.2,0-4.9,3.4-3.3c2.5,1.2,7.4-0.6,6.7,4.9       c0.9-0.5,0.7,4.3,2.6,0.4C1854.8,549.3,1854.8,552,1856,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63C45"),
                d:
                  "M743,658c-2.4-4.1-1.6-5.8,3.2-6c2.6-0.1,5.2,0,7.8,0c1.1-1,5.3,2.3,3.6-2.8c-0.4-1.3,1.2-1.3,2.1-0.8       c0.9,0.6,1.5,1.8,2.4,2.4c1.7,1.2,3.7,2.8,4.4-1c0.3-1.4,0.4-1.4,2.5,0.1c4-0.6,7.8-1.9,11.4,2.1c1.8,1.9,6,0.5,9.2,0.6       c1.8,0.1,3.7-0.2,5.4,0.6c2,0.9,3.2,2.3,2,4.7c-8.9-1.1-17.8,0.1-26.7,0c-2.1,0-4,0.2-5.3,2c-2.3-2.9-5.7-1.5-8.6-1.8       C752,657.7,747.5,658,743,658z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46063"),
                d:
                  "M781,660.1c6.3,0.5,12.7-1.2,19,0.9C793.7,660.5,787.3,662.1,781,660.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13541"),
                d:
                  "M805,640c-1.7-1-3.3-2-5-3c-0.2-2.3,1.7-2.1,3.1-2.6c0.5,0,1,0,1.5,0.2c4.3,1.2,8.5,3.2,13.1,3.4       c3.6,0.1,6.6,1.7,7.9,5.5c0.6,2,0.8,2.2,1.3,1.7c1.7-1.5,3.1-0.6,4.5,0.2c0.7,0.4,0.7,1.8,2.1,0.6c2.5-2.1,5.7-1.3,8.7-1.3       c3.5-0.1,7.1,0.5,9.2-3.4c0.5-1,1.9-1.3,3.1-1.4c1.6-0.2,3.9-0.6,4.4,1.3c0.6,2.2-2,2-3.3,2.8c6.5,3.5,13.2,2,19.9,1.3       c4-0.4,7.8,0.1,11.7,0.4c5.2,0.4,9.5,2.1,13.9,4.5c1.4,0.7,3,0.3,4.3-0.4c2-1.2,4.1-1.5,6.2-0.9c4.4,1.2,8.7,0.6,13.1-0.2       c6.3-1.1,12.5,1,18.7,1.8c1,0.1,2.2,1.1,2.8,0.3c3.1-4.3,7.4-1.3,11-2.1c6.7-0.6,13.6-0.4,20.2,0.1c8.9,0.7,17.6-1.3,26.4,0.1       c5,0.8,9.9-2.5,15.1-0.3c1.8,0.8,2.1-2.7,3.9-3.2c1.2-0.5,2.4-0.6,3.7-0.2c2.5,1.5,5.3,1.6,8.2,1.8c1.2,0.1,2.5,0.4,2.6,1.9       c0.1,1.7-1.3,1.7-2.4,1.7c-1.8,0-3.4,0.7-5.6,2.5c5.1-3.1,5.3-3.1,7.8-1c0.4,3-0.8,4.1-3.9,4c-18.8-0.1-37.7,1.2-56.4-0.5       c-10.2-0.9-20.6-2.6-30.4-1.1c-16.7,2.5-33.4,0.3-49.9,1.9c-4.9,0.5-10,2.2-15,1.5c-6.5-0.8-13.4-0.6-19.3-2.2       c-5.1-1.4-9.6-0.7-14.3-1.7c-0.2,2.7,2.5,1.3,2.6,3.5c-2.2,1.2-4.8,0.3-7.3,0.6c-4.7-2-9.3-4-14-6       C820.2,649.7,812.4,645.3,805,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63644"),
                d:
                  "M1037,652c-2.3-2.2-3.9-0.5-5.5,1c-1,1-2.1,1-3,0c-0.4-0.5-1-1.2-0.8-1.6c0.5-1.6,1.8,0.5,2.3-0.3       c1.7-2.2,4.6-0.1,6.6-1.9c-2.7-2.9-7.6,1-9.6-3.2c1.4-4.4,5.3-1.6,7.9-3c-6.8-3.2-14.3-0.3-21.3-2.3c-1.8-2.4,0.5-2.8,1.8-3.1       c2.6-0.5,5.3-1.6,7.8-1c5.6,1.3,11.1-1.4,16.6-0.4c0.1,0-0.4-1.6,0.8-2c2.6-1,5.2-0.5,7.9-0.6c1.3,0,2.6,0.1,3.8,0.6       c1.6,1.2,1.1,3.1,1.7,4.6c0.2,1.6,0.2,3.3-0.3,4.9c-0.6,0.1,0.6,0.8,0.1,0.4c-0.2-0.2-0.1-0.3,0.3-0.4c4.4-1.1,7.1,2.6,10.5,4       c1.9,0.8-1.9,2.5-0.7,4.2C1055,652,1046,652,1037,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93240"),
                d:
                  "M1064,652c-0.2-0.3-0.6-0.5-0.6-0.8c-0.3-3.7-6.2-7.3-10.4-6.2c0-2,0-4,0-6c1-0.9,2.1-1.1,3.3-0.7       c0.5,2,2.4,1.5,3.8,2.1c0.6,0.3,1.2,0.6,1.8,1c3.1,1.9,6.7,2.8,9.6,5.1c1.3,1.1,3.3,1.8,3,4.1c-1.5,1.5-3.7,0.4-5.4,1.4       C1067.3,652,1065.7,652,1064,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53743"),
                d:
                  "M1101,652c-0.1,1.1,0.4,2.8-1.9,2.2c-1.4-0.4-2,0.5-2.1,1.8c-1.3,0-2.7,1-4,0c-1.3-1.3-2.8-1.4-4.5-1.2       c-3.8,0.4-5-1.4-4.2-5c1.1-2.5,3.2-3,5.6-3c2.6,0,4.8,2.6,8.1,0.5C1099.6,646.4,1101.9,649.2,1101,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F313D"),
                d:
                  "M1069,652c1-3.6,3.2-1.5,5-1c1.1-1,2.4-1.1,3.7-0.7c2.7,1.9,6.7,2,8.3,5.7c-5.4,0.3-10.5-1.2-15.7-2.2       C1069.4,653.7,1069.1,652.8,1069,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63946"),
                d:
                  "M1086,656c-2.2-2.5-6.4-1.6-8-5c0.7-1.9,2.3-2.1,4-2.2c1.1,0,2.2,0.3,3,1.2c-0.3,2.8,0.6,5,3.7,3.7       c2.9-1.2,3.6,0.1,4.3,2.2C1090.7,656,1088.3,656,1086,656z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3D48"),
                d:
                  "M805,640c8,4,16,8,24,12c0.7,4.6-0.9,6.4-5.8,6.1c-8.7-0.4-17.5-0.1-26.2-0.1c-0.3-3.1-2-4.2-5-4       c-3.3,0.2-6.6,0.1-9.9,0c-1.8,0-3.2,0.1-4.4-2.2c-0.6-1.2-3.7-2.3-5.7-0.8c-1.8,1.3-2.6,1.1-3-1c0.1-3.7,2.8-3.9,5.6-4.6       c2.6-0.6,4.8-3.8,7.4,0.1c0.5,0.7,2.5,0.3,3.8,0.4c1.6,0.1,3.7-0.4,2.3,2.6c-0.8,1.7,0.9,1.5,1.6,1.3c3.6-0.7,7.7,0.5,10.6-2.4       c1.9-1.8,3.1-1.2,4.5,1C804.5,645.4,807,642.8,805,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M611,630c-2.9-3.4-6.4-3.4-10.5-2.5c-3.5,0.8-7.4-2.4-11.1,1.5c2.4-3.7,1.9-6-1.5-7.7       c-1.2-0.6-1.9-1.8-1.9-3.3c0.7-0.6,1.3-0.6,2,0c2.3-5.1,10.3-8.1,15.5-5.8c0.5,0.2,1,0.8,1.3,1.3c2,3.8,4.4,6,8.8,2.9       c0.8-0.6,2.2,0.4,3.3-0.4c5.2,1.2,9.5,4,13.3,7.7c0.4,1.8-1.2,1.7-2.1,2.2c-2.2-0.8-3.8-4.2-6.9-1.8c-0.6,0.4-0.9-0.1-0.8-0.7       c0.4-1.3,1-3-1.1-2.7c-1.6,0.2-0.7,2.1-0.9,3.3c-0.3,1.9-1.3,4.3-3.7,3.7C612.3,627.3,612.1,629.1,611,630z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811E2C"),
                d:
                  "M1049,635c-3,0.1-6,0.1-9,0.2c-2.8,1.6-5.9,1.2-8.8,1.2c-25.5,0.2-50.9,0.2-76.4,0.2       c-26.8,0.1-53.6-0.3-80.4,0c-4.5,0.1-8.9-0.1-13.4-0.1c-17.6,0-35.1,0.8-52.7-0.4c-1.5-0.1-3-0.1-4.3-1c-0.4,0-0.7,0-1.1,0       c-2,0.7-4,0.8-6,0c-0.3,0-0.7,0-1-0.1c-1.5-1-3.2-0.2-4.7-0.6c-1.5-0.3-2-1-0.6-2.2c2.2-1,4.6-0.6,6.9-0.7       c18.4,0,36.9,0,55.3,0c16,0.2,32-0.4,48,0.3c2.7,1,5.6,0.7,8.4,0.7c45.5,0.1,90.9-0.1,136.4,0.1c1,0,1.9,0.2,2.8,0.7       C1049.1,633.7,1049.3,634.3,1049,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A1222E"),
                d:
                  "M790,633.3c1.7,1.6,4.4-0.3,6,1.7c-32.5,0-64.9,0-97.4-0.1c-1.9,0-4,0.7-5.7-0.9c1.9-2,4.3-1.4,6.6-1.4       c14.1-0.1,28.3,0,42.4,0c2.3,0,4.7,0.2,6.9-0.6c12.4-0.4,24.8-0.4,37.3-0.3C787.6,631.7,789.1,631.8,790,633.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D1B28"),
                d:
                  "M749,633.3c-1.6,1.2-3.5,0.7-5.3,0.7c-16.9,0.1-33.8,0.1-50.8,0.1c-10.6,0-21.2-0.1-31.8-0.1       c0.2-2.2,2-1.9,3.4-2.2c4-0.1,8,0,12.1-0.1c21.8,0,43.6,0,65.4,0C744.4,631.6,747.1,630.9,749,633.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52B3B"),
                d:
                  "M664.1,632.9c-1,0.2-2.2-0.2-2.9,1c-11.3-1.7-22.8-2.4-33.1-7.9c0.6-0.6,1.3-1.2,1.9-1.9       c0.5-0.6,1.2-0.8,1.9-0.6c1.8,0.7,3.4,1.6,5.1,2.6c3.8,2.1,7.9,3.1,12.2,3.6c1.2,0.1,2.5,0.2,3.7,0.4c1.5,0.5,3,0.6,4.5,0.5       c2.1,0.1,4.3-0.3,6.3,0.8C664.2,631.9,664.3,632.4,664.1,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13947"),
                d:
                  "M797,635.1c2,0,4,0,6,0c-1,0.7-2,1.3-3,2C799,636.4,798,635.7,797,635.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3E49"),
                d:
                  "M744.6,647.6c-0.2-0.4-0.7-0.8-0.8-1.4c-0.2-1.3,0.8-1.2,1.6-1.1c0.8,0,1.1,0.5,0.9,1.3       C746,647,745.8,647.6,744.6,647.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3E49"),
                d:
                  "M740.3,650c0.5,0.3,1,0.5,1.1,0.8c0.2,0.8-0.5,1.1-1.1,1c-0.3,0-0.8-0.5-0.8-0.8       C739.5,650.7,740,650.4,740.3,650z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90323D"),
                d:
                  "M170,622c-4-2.3-8.5-3.9-12-7c-2.2-4-4.8-7.8-5.7-12.4c1.6-1.8,3.5-3.1,3.9-6c0.3-2.7,2-4,4.9-1.9       c4.1,3,4.8,2.7,7.4-2.1c0.7-1.3,0.9-3.3,2.9-2.8c1.8,0.4,1.7,2.2,1.7,3.7c-0.1,2.6,2.9,2,3.9,4.1c-0.7-5.5,4.8-5.4,6.9-8.2       c1.3-1.7,3.3-2.5,2.3-5.3c-0.5-1.2-0.1-2.8,1.4-3.4c1.3-0.5,2.3,0.4,3,1.3c1.7,2.1,2.9,3.1,4.3-0.5c0.9-2.1,3.9-2.4,6.1-2.9       c1.9-0.4,2.9,1.3,2.8,3.2c-0.1,1.4-1.3,2.8,0.3,4.1c0,0,0,0,0,0c0.1,1.6,1.5,3.3-0.9,4.7c-2.1,1.3-5.1,1.6-5.5,5.4       c-0.4,3-3.1,0.3-4.9,0.1c-0.7,1.8,2.4,4.1-0.3,5.3c-1.8,0.8-4.3,2.3-5.4-1.3c-0.1-0.3-1.7-0.8-2.1,1.2       c-0.3,1.7-3.8,1.1-4.5,3.4c-0.6-0.8,0-1.9-2.2-2.1c-5.7-0.6-5.1,4.1-6.2,6.7c-0.4,1.1-0.8,3.3-1.5,4       C166.9,616.3,168.1,619.1,170,622z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313D"),
                d:
                  "M230,610c1-1.2,2.1-1.3,3.3-0.5c0.2,0.1,0.2,0.7,0.1,0.8C232.2,611.6,231.1,610.3,230,610       C230,610,230,610,230,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D343F"),
                d:
                  "M225,605c-0.2,0.9,0.4,2-0.9,2.5c-0.2,0.1-0.7-0.2-0.7-0.4C223.2,605.9,224.2,605.5,225,605       C225,605,225,605,225,605z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M210,425c3.3,0.8,6.7,0,11.5,2c-1.3,0.4-2.1,0.3-2.5,0.7c-1.3,1.3-1.6,3.2-0.5,4.5       c1.5,1.7,3.3,0.2,4.3-0.8c3.4-3.7,3.2-1,3.2,1.6c-2.5-0.7-2.7,2.4-4.9,2.6c5,1.7,5,1.8,0.5,8c2.4,0.2,4.7-3.1,6.9,0.1       c-1.2,2-7,5.6,1.5,4.6c1.6-0.2,1.7,1.1,0.9,2.4c-1.7,2.6-3.2,5-0.3,8.1c1.2,1.2,0.9,4.1-2.6,3.4c-1.3-0.3-2.6-0.1-4-0.2       c-0.6-0.6-0.6-1.2-0.1-1.9c2.7-0.9,3.7-2.2,1.2-4.5c-0.8-0.7-1.5-2.4-2.7-1.2c-1.1,1.2,0.8,1.8,1.4,2.6       c0.3,0.3,0.6,0.7,0.8,1.2c0.1,0.7-0.1,1.4-0.7,1.9c-1.9,1.6-3.7,2.1-5,0.5c2,1.1,1.7,3.8,2.1,6.3c0.3,0.4,0.3,0.8-0.1,1.2       c-1.5,1.9-2.4,1-3.3-0.4c1.2,2.1,2.4,2,3.7,0c3.6-0.1,6.2,1.1,6.2,5.3c0.6-3.6,0.6-3.5-1.9-4.6c-1.6-0.7-3.7-0.3-4.9-2       c0.8-1.7-1-5.4,3.4-4.4c0.1,1.4,0.9,2,2.3,2c3.7,0,7.2,1,10.7,2l0,0c-2.1,2.4,0.7,3.7,1.4,5.5c-1.4,0.5-3.2-1.2-4,0.9       c-0.6,1.5,0.5,2,1.6,2.6c0.9,1.4-0.2,6,4,2.3c-1.2-1-3-1-4-2.3c3.6-2.2,8.7-0.2,9.4,3.7c0.2,1.4,1.3,2.6,0.6,4.1       c-2.4,0.5-2.4-3.4-4.9-2.5c2.4,5.6,1.6,7.5-4,11.2c-2.2,1.4-0.7,4.9-3.1,6.5c-0.2,0.2-0.5,0.3-0.7,0.5       c-10.2,0.4-20-2.4-29.8-4.1c-6.5-1.1-13.1-1-19.4-3.2c-1.4-2.5-0.6-3.7,2.8-3.5c-1.9-1.7-4.1-2.9-3.4-5.7       c0.4-1.5,0.7-2.8,3.3-2.4c-2.7-1.4-5.1,0.4-7.2-1.6c-0.9-0.8-3.7,0.7-3,2.7c1.2,3.2-0.9,3.4-2.8,3.9c-2.9,0.7-6,1.7-8.5-0.6       c-1.2-1.1-0.8-3.1,1-3.6c2.2-0.5,3.5-2.4,5.1-2.5c-0.4,0.3-2.1-3-3.1,0.6c-0.7,2.4-2.5,0.2-3.3-1.3c-1.5-2.8,0-6.6-3.1-9       c-0.4-0.3-0.2-1.6-1.3-1.5c-5.2,0.2-4.7-2.9-3.8-6.3c0.8-3.1,0.8-5.6-2.6-7.5c-4.9-2.8-1.9-5.8,0-9.1c1.9-3.4,4.7-4.3,7.3-1.4       c0.7,0.7,0.7,1.8,1.7,2.4c1.2,0.8,4.4,2.7,5.8,3.2c-0.5-2.2-1.3-4-3.3-5c-3-1.4-5.2-3.1-3.5-6.9c0.6-1.4-0.6-1.6-1.6-1.8       c-1.3-0.2-2.7-0.1-3.5-1.5c1.7-3.1,5-1.9,7.5-2.5c5.4-1.2,11-2.1,16.5-2.6c1.6,0.1,3.1-0.5,4.6-0.8c3.7-0.3,7.4-0.2,11.1-1.1       c2.7-0.3,5.4,0.5,8-0.9C206.3,424.4,208.2,424.2,210,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70132C"),
                d:
                  "M210,425c-1.7,1.1-3.3,1.1-5,0c-1.3,1.3-2.9,1.7-4.7,1.4c-1.5-1.5,1.1-2.6,0.3-4.3       c-2.2-0.2-3.9,0.8-5.4,2.4c-1.6,1.7-2.6,5-5.7,1.2c-0.6-0.7-2.8,1.6-4.4,2.3c-1.2,0.7-2.5,1.2-4,1c-0.5-0.5-0.7-1.3-0.3-1.8       c3.4-3,5.2-8.5,11.3-7.2c14.3-2.3,28.6-4.7,42.9-6.9c1.8-0.3,3-1.2,4.3-2.1c3.3,0.7,4.2,3,3.8,6c-1.4,1.9-2.4,3.3-5.6,3.6       C228.2,421.4,219.1,423.4,210,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79152F"),
                d:
                  "M253,511l-0.5,0l-0.5,0c-7.4-0.1-14.9,0.4-21.8-3.4c-1.4-4.3,0.6-7.2,3.8-9.6c0,0,0,0,0,0       c9.5,1.7,19.3,1.4,29.4,3.8C259.7,505.4,257.2,509.1,253,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C304B"),
                d:
                  "M267,453c0,0.7,0,1.4,0,2c-3.4-2.8-4.9-7-7-10.6c-3.7-6.4-8.1-12.5-11-19.3c0.2-0.1,0.4-0.3,0.6-0.4       c2.8-0.1,3.1,2.5,4.1,4.1c1.3,2.1,2.7,4,4,6.1c2.2,4.4,4.9,8.6,7.5,12.8C266.2,449.3,267.9,450.7,267,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M237,466c0-1.7-1.3-2.6-2.2-3.8c-1.3-1.9-1.3-3.6,1.4-5.3c-1.1,6.3,3.9,8.3,7.3,10.8       c1.8,1.3,3.1,2.7,4.4,4.3l0,0c-1.2-0.1-2.4,2.2-3.6-1C243.5,468.7,239.6,467.6,237,466L237,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F4B"),
                d:
                  "M243,417c-1.2-2.1-1.7-4.6-3.8-6c-0.4-1.3-0.8-2.6-1.3-3.9c0,0,0.1-0.1,0.1-0.1       c3.8-0.1,3.9,3.5,5.7,5.5c1.4,2.2,2.5,4.5,4.1,6.5c1,1.9,2.9,3.6,1.2,6c0,0-0.1,0.1-0.1,0.1C247,422.4,245,419.7,243,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M236.7,429.9c-0.2,2.5-0.7,4-2.4,4.7c-0.6,0.3-1.2-0.4-1.2-1.1C233.3,431.6,234.6,430.8,236.7,429.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M250,474c-1.3,0-2-0.7-2-2c0,0,0,0,0,0c1-0.4,1.6-1,2-2l0,0C253.1,471.3,250.4,472.7,250,474L250,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M250,470c-3.1-2-1.8-3.1,0.9-4.1C251.8,467.7,249.5,468.5,250,470L250,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M235.3,428.7c-0.8,0-1.2-0.4-1.2-1.2c0-0.4,0.4-0.9,0.7-1.1c0.7-0.3,1.3,0.2,1.5,0.9       C236.5,428,236,428.5,235.3,428.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M227.8,434.9c-0.2,0.1-0.6,0.6-0.9,0.5c-1-0.3-0.8-1.2-0.8-2c0-1.1,0.7-0.3,0.9-0.2       C227.7,433.4,227.9,434,227.8,434.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M250,474c1.1,0.8,1.2,1.9,0.7,3.1c-0.1,0.1-0.6,0.2-0.8,0C248.5,476,249.7,475,250,474L250,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M230.9,428.1c0.6,0.3,1,0.5,1.3,0.8c0.3,0.5-0.1,0.9-0.6,0.9c-0.4,0-0.9-0.2-1.2-0.5       C230.3,429.2,230.7,428.6,230.9,428.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69122A"),
                d:
                  "M249,425c0.5-2.4-2-3.8-2.2-6c0.8-1.9,2.5-1.8,4.1-2c4.7-0.6,9.5-1.1,14.2-1.9c1.2-0.2,2.5-0.3,3.6,0.4       c0.1,0.1,0.3,0.2,0.4,0.3c0.9,6,4.8,8,10.4,8.1c0.7,0,1.3,0.2,1.9,0.5c0.9,0.5,1.8,1.1,1.4,2.3c-0.3,1-1.3,0.9-2.1,0.8       c-1.8-0.3-3.6-1-5,0c6.2-0.9,10.9,2,14.7,6.9c0.1,0.5,0.2,0.9,0.1,1.4c-0.6,1.7-2.4,2-3.5,3.1c-0.9,0.6-1.6,1.7-2.9,1.1       c-2.4-1.4-3.2-0.4-3,2c-0.1,0.7-0.5,1.2-1.2,1.5c-2.4-0.6-2,1.6-2.7,2.7c-0.6,0.3-1.3,0.3-1.7,0.9c-3.6,4.8-3.8,4.8-6.9,0.3       c-0.4-0.1-0.8-0.3-1-0.6c-2-1-3.3-2.5-4.1-4.6c-1.2-3.2-3.5-5.4-6.5-7C253.1,432.6,253.2,427.1,249,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1631"),
                d:
                  "M334,414c-9.9,4.5-20.4,7.8-30,13c-3.6,0.2-7,1.4-10.3-2.1c-1.9-2.1-6-0.5-9-1.2       c-1.4-0.3-3.4,0-3.6-1.8c-0.3-1.9,1.5-1.7,2.8-1.7c0.1,0,0.2-0.1,0.1-0.3c-1.5-2.5,0.5-4.4,1.2-6.5c0.3-0.4,0.6-0.8,1-1       c1.5-0.5,2.9-0.7,4,0.8c0.3,1.6-2.3,3.3,0.2,4.7c1.9,1.1,3.8,2,5.6-0.1c1.2-1.5,3.6,0.1,4.7-1.9c0.3-0.4,0.6-0.7,1-0.9       c2.9-1.2,6-1.2,8.9-1.9c1.1-0.3,2.3-0.6,3.4-1c1.4-0.4,2.8-0.6,4.1-1.1c3.2-1.1,6.5-1.7,9.7-2.9c0.7-0.2,1.4-0.3,2.1-0.4       c1.5,0,3,0,4.1,1.3c-0.3,2.2-2.8,1.5-3.7,2.8C331.4,413,333.4,412.2,334,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73132E"),
                d:
                  "M286,414c0.8,2-3,3.2-0.7,6c1,1.2-2.8,0.1-4.2,2.8c8.8-2.4,15.3,3.3,22.9,4.2c-2.1,2-5.3,2.5-7,5       c-0.1,0.2-0.2,0.4-0.4,0.6c-1.6,1.3-3.6,1.8-5.4,2.8c-0.5,0.1-0.9,0-1.2-0.4c-4.5-5.7-11.3-6.3-17.9-7.7       c3.6-0.3,6.7-2.3,10.3-1c-5.2-2.7-14.6,0.3-13.4-10.3c-0.1-1,0.5-1.7,1.3-1.8C275.5,413.6,280.7,411.1,286,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M308.9,448.3c3.1,3.9,5-2.7,8-1c-0.9-4.2,3.5-9.4-2.9-12.7c3.3,0.7,6,1.5,6.3,4.9       c0.3,3.1,1.9,1.1,3.1,1c0.7,1.7-0.8,2.7-1.2,4c-0.3,1.2-2.2,3.1,0.7,3.2c1.1,0.1,3.4,4.3,3.9-0.7c0.2-2,2.7-1.6,4.1-1.2       c1.5,0.4,1.2,2.2,1,3.5c0,0.4-0.4,1-0.8,1.1c-8.6,2.4-8.6,2.4-12.1,7c1.7-4.4-4.2-3.9-2.9-7.6c0.1-0.3-1.3-0.8-1.6-0.2       c-0.7,1.5-3.2,1.9-2.8,3.8c0.9,3.7,0.8,6.4-3.8,7c-1.4,0.2-0.5,2.1-1.7,3.1c-1-5.7-4-0.2-6.3-1.3c0.3-2.9,0.4-6,0.9-9       c0.4-2.7,1.6-4.2,4.2-1.7c1,1,2.1,1.9,3.5,1C310.6,451.3,307,450.2,308.9,448.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601124"),
                d:
                  "M280,443c0.3-0.3,0.7-0.7,1-1c3.3,3,2.3,7.4,1,9.9c-2,3.8-2.2,6.1,1.9,8.1c-2,1.4-2.5-1-3.9-0.7       c-1.3,2.4,4.2,1.9,2,4.7c-5.1-3.5-10.5-6.7-15-11c-3.2-6.1-7.8-11.3-10.2-17.9c3.1-2.2,3.2,1.3,4.7,2.4       c3.3,2.5,3.7,6.8,6.5,9.6c-0.3,0.4-0.6,0.8-0.4,1.4c0-0.5,0-1,0.4-1.4c4.9-3.3,2,2,2.8,2.6c4,1.6,1.3-6.7,6.2-3.6       c1.8,0.8,2.1,2.4,2,4.1c0.2-1.3,0.3-2.5-0.8-3.8C276.3,444,278.8,443.8,280,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2038"),
                d:
                  "M334,414c-0.3-0.1-0.6-0.3-0.9-0.3c-2-0.2-5.2,1.1-5.3-1.6c-0.1-2.5,3.3-1.7,5.3-2.4       c-0.8-1.2-2.1-0.4-3-0.7c-0.3-0.5-0.3-1,0.1-1.4c4.1-1.7,8.6-2.1,12.8-3.5c2-0.5,4.1-0.6,6.1-1.2c3.2,0.2,6.6-1.8,9.7,0.4       c1.4-0.1-1.3,2.3,1.1,1.8c1.3-0.3,3.1-0.5,3.1,1.8c-1,0.4-2,0.7-3,1.1c-8,1.8-16.3,2.9-24,5.9C335.3,414,334.7,414,334,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601124"),
                d:
                  "M290,435c0.3,0,0.7,0,1,0c2.5,0,4.5-1,6-3c0,0,0,0,0,0c0.8,0.3,3-0.6,1.9,1.4c-1.5,2.7-2,6.8-6.8,6.5       c-0.5,0-5.2,1.1-2.2,4.6c1.4,1.6-0.6,1.9-1.4,2.2c-2.3,0.8-1-0.6-1-1.6c0-2.4-4.3-2-3.5-5.1c1-0.4,1.6-1,2-2       c1.2-0.9,3.5,0.2,4-2C290,435.7,290,435.3,290,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("580F22"),
                d:
                  "M237,518c0,0.3,0,0.7,0,1c-0.6,0.5-1.2,1.1-1,2c-1.6,1.9-4,0.4-6,1.3c0.2,1.8,6.7-1.2,3,3.7       c-2.1,1.7-4.3,2.9-7,1.3c-1.4-0.8-2.9,0.1-4.3,0c-2.6-1.7-1.6-3.7-0.4-5.5c0.8-1.3,1.3-2.6,0-3.5c-0.6-0.4-0.5,1.4-1.3,1.5       c-2.7,0.4-2.1-1.9-2.5-3.4c-1,0.7-1.2,1.7-1.5,2.6c-0.6,1.8-1.3,2.6-2.9,0.6c-1.5-1.8-4-2.1-5.7-4.5c-1.4-1.9-5.6-0.9-8.4,0.4       c-3,0.4-6,0.9-7.9-2.5c-0.3-0.6-1-1-1.7-1c-6,0.4-9.9-4.4-15-6.2c-3.3-1.2-5-4.7-4.9-8.6c2.4-1.2,4.7,0.3,7.1,0.1       c14.9,2,29.8,4.3,44.7,7.1c1.5,0.3,2.9,0.6,4.2,1.3c1.8,1.3,1.9,3,0.8,4.8c-0.1,0.2-0.9,0.3-0.5,0.5c3.7,2.3,7.1,5.1,11.4,6.1       C237.1,517.5,237,517.8,237,518z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M237,518c-1.9-2.6-4.9-0.9-7.1-1.2c-4.7-0.6-2.7-2.3-1.8-4.6c-1.6-0.1-3.2-0.2-6-0.4       c3.4-0.8,4.3-2.4,3.8-4.8c1.3-1.2,2.7-1.2,4,0c7.1,2.4,14.7,2.2,22,4c-2.9,0.7-5.2,1.7-6.6,5C243.8,519.7,239.9,517.4,237,518z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631321"),
                d:
                  "M222,527c1.5-1.5,3-2.6,4.9-0.6c2.2,2.3,4-1.6,6.1-0.4c2.3,1.7,5.1,0.8,7.7,1.3       c3.7,0.8,5.7,3.5,8.3,5.7c-2.7,3.4-6.1,0.1-9,1c-6.8-0.3-13.4-1.7-20-3c-0.1-0.2-0.2-0.4-0.3-0.7       C219.8,528.8,220.5,527.6,222,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M236,521c-0.7-0.2-1.8-0.1-1.4-1.2c0.4-1.1,1.6-0.7,2.4-0.8C237,519.8,236.8,520.6,236,521z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841726"),
                d:
                  "M413,406c-1.7,0-3.3,0-5,0c2.3-4.5,6.3-1.4,9.1-2.5c-1-0.8-3.6,1.5-4.3-1.5c0.8-0.9,2-1.2,3.2-1.2       c11.7-0.6,23.2-3.2,35-2c1.9,0.2,3.5-0.1,5.1-1.2c2.9,0.3,3.5,3.4,5.6,4.7c0.5,0.6,0.8,1.2,0.6,2c-0.4,2.6-2.9,3.6-4.3,5.6       c-1.1,1.6-2.9,1.3-4.2-0.4c-2.1-2.7-4.4-4.2-8-2.6c-2.3,1-3.9-1.6-6.1-1.6c-5.3,0.1-10.7-0.6-15.9,0.5       C420.2,406.6,416.6,406.9,413,406z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1626"),
                d:
                  "M413,406c8.4,0.3,16.5-3.3,24.9-2c2,0.3,4.4-0.6,5.9,1.6c0.4,0.6,1,0.6,1.7,0.5c4.8-1.1,4.7-1,9.4,3.5       c0.4,0.3,1.3,0.4,1.8,0.2c2.3-0.9-0.6-2.7,0.7-4c3.6,4.8,2-3.5,4.6-1.8c1,0.5,1.4,1.4,1.7,2.4c0.1,0.8,0.1,1.5-0.1,2.3       c-0.7,4.4-3.8,4.4-7.4,4.6c-6.6,0.3-12.7-2.9-19.3-2c-1.8-0.1-3.6-0.8-5.5-0.5c-1.5-0.6-3.5,0.3-4.5-1.7c-4.4-2.7-9.2-1.9-14-2       C413,406.7,413,406.3,413,406z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E182D"),
                d:
                  "M413,402c1.2,1.8,3.4,0.4,5.3,1.6c-3.7,0.7-7.2,0.7-10.3,2.3c-15-0.7-30.1-1.7-45,1c-1-1.4-2.6-0.7-4-1       c-2.6-0.5,0.2-1.3,0-1.9c1.9-3.6,5.6-1.8,8.4-2.7c2-0.7,4.2-0.7,6.3-0.6c1.2,0,2.3,0.1,3.4,0.4c2.4,1,5,1.1,7.4,0.5       c8.2-1.9,16.6-0.6,24.9-0.9C410.7,400.6,412,400.9,413,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M357.1,435.8c-0.4,2.7,2.5,1.6,3.2,3.1c-1.4,1.5-3.2,1.7-4.4,0.5C355.2,438.7,355.9,437,357.1,435.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M339.2,428.4c-0.9,3.1-2.2,2.8-4.4,1.8C336.4,429.5,337.5,429.1,339.2,428.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621125"),
                d:
                  "M357,431.5c0.2-2.1,0.6-3.2,2.1-3.1c0.3,0,0.6,0.7,0.8,1.1C359.1,430.1,358.3,430.6,357,431.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2F3A"),
                d:
                  "M204,586c-1-0.7-6.4,1.6-1.9-2.8c1-0.9,1.1-2.1,0.2-3.1c-1.2-1.4-1.9-0.5-2.7,0.5       c-1.1,1.3-5.7-0.4-3.4,4c-1.8-0.6-4.3,3.9-5.7-0.7c-0.3-0.9-1.6-1.5-3.1-2.8c0.9,7-1.9,11.1-8.2,13.4c1.2,1.3,0.9,4.7-1.6,4.5       c-4.2-0.3-6.1-4.2-6-8.4c-1.9,0.1-1.4,1.5-1.7,2.3c-2.8,6.6-4.3,7-10,2.3c-0.6-0.4-0.9-1-1.6-0.6c-1.2,0.7-1.4,1.9-1.3,3       c0.3,3-0.5,4.9-4,4.4c-1.4-0.6-2.4-1.6-2.7-3.1c3.4-4.5,5.9-10.1,10.7-13.2c4.3-2.7,5.6-6.4,5.2-11c-0.3-3,0.1-3.8,3.7-4.8       c6.2-1.7,13.1-3.2,17.8-8.5c2.1-0.8,4.3-1,6.3-0.5c4.7,1.2,7-2.3,10-4.6c0.3-0.3,0.7-0.6,1.1-0.7c2.2,0.6,4.5,1,5.7,3.3       c0,0.3,0,0.7,0,1c-0.5,3.3,1.2,6.9-1.1,10c-1,1.3-1.4,4.5-3.9,1.1c-1.1-1.5-2.3,0.3-3.1,0.2C205,576.2,205.9,581,204,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80262F"),
                d:
                  "M215,545c0.8,2.8-1.7,4.5-2,7c-0.7,0.3-1.3,0.7-2,1c-1.9,1.2-4.6,0.8-6,3l0,0       c-5.1-1.5-10.5-0.3-15.5-1.9c-1.3-1.9-0.1-2.6,1.5-3.1c1.7-0.5,3.6,0,5.3-0.9c1.1-0.5,2.2-1,3.5-1.1c4.6,1.1,8.3-1,11.9-3.4       C212.7,545,213.7,544.4,215,545L215,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852934"),
                d:
                  "M205,556c0.2-4.6,3.3-3.3,6-3c2,2,0.9,4,0,6C209,558,207,557,205,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651322"),
                d:
                  "M215,545c-1,0.3-2,0.7-3,1c-1.9,2.1-4.4,1.9-6.9,1.7c-1.8-0.9-1.4-2-0.3-3.1c0.1-0.1,0.2-0.2,0.4-0.2       c0.5,0,0.7-0.5,0.4-0.5c-7.1-0.8-14.1-2.1-21.1-3.4c-5.4-1-10.7-2.1-16.2-2.7c-2.5-1.8-5.6-1.3-8.4-2c-0.4-0.2-0.8-0.5-1.1-0.9       c-0.1-1.4,0.6-2.1,1.4-2.1c-4.1-1.9-9.8-2-12.4-7.6c-0.6-1.2-2.1-3.1-3.5-0.1c-0.9,2-2.5,0.6-3.8,0.2c-1.6-0.5-3-2.5-4.8-0.4       c-5,1.9-6,1.3-8.2-4.1c0-2.4,1.7-2.9,3.3-2.2c2.8,1.1,4.7-0.3,6.9-1.4c1.9-0.5,3.6,0.1,5.3,0.7c7.6,1.8,15.5,2.3,23.2,3.8       c14,2.6,28.1,3.7,42.1,6.1c4,0.7,8.4,0.2,11.7,3.2c0,0,0,0,0,0C219.3,536,215.8,540,215,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("843C45"),
                d:
                  "M133,598c0-4.5-0.1-9,0-13.5c0-2.1-0.8-4-2.1-5.4c-1.7-1.7-0.7-2.8,0.1-4.1c0.9-0.3,1.8,0,2.1,0.7       c2.6,5.6,7.6,9.9,8.9,16.2c0.3,3.4,1,6.9-0.8,10.2c-1.1,0.8-2.2,0.8-3.3-0.1c-1-0.7-2-1.3-3-2C134.3,599.3,133.7,598.7,133,598       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B3942"),
                d:
                  "M141,602c0-3.7,0-7.3,0-11c0.8-0.8,1.8-0.9,2.8-0.6c3.3,2.1,3.4,6.9,7.2,8.6c0.6,1,2.2,1.5,2,3       c0,0.8-0.2,2.3,0.2,2.4c5.1,2,3.1,7.1,4.8,10.6c-0.3,0-0.7,0-1,0c-5.5-3.4-11.1-6.6-16-11C140.4,603.3,140.4,602.7,141,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4046"),
                d:
                  "M141,602c0,0.7,0,1.3,0,2c-1.5,0-2.9,0-3-2C139,602,140,602,141,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101F"),
                d:
                  "M427,409c1.3,0.3,2.7,0.7,4,1c2.9,0.9,5.7,1.6,8.1,3.9c2.6,2.5,6.4,1.1,9.7,1.6       c1.1,0.2,2.3-0.2,3.4,0.3c0.4,0.1,0.8,0.3,1.3,0.5c1.5,0.7,3.1,0.5,4.6,0.8c0.4,0.1,0.9,0.3,1.2,0.6c3.6,3.5,8.4,3.8,12.9,4.9       c1.2,0.3,1.8,1.2,2.4,2.2c0.8,1.6,2,2.7,3.6,3.4c0.6,0.4,1,0.8,1.2,1.5c0,0.7-0.3,1.3-0.7,1.8c-0.5,0.4-0.9,0.9-1.6,0.5       c-0.5-0.4,0.1,0.3-0.3-0.3c0.1,0.1,0.3,0.2,0.4,0.4c1,0.9,2.1,1.3,3.4,1.3c0.7,0.1,1.3,0.4,1.9,0.7c0.4,0.2,0.7,0.5,1,0.9       c0.2,0.4,0.3,0.8,0.4,1.3c0,0.4,0,0.9,0,1.3c-0.5,1.4,0.7,3.7-1.4,4.3c-1.5,0.4-2.5-1.4-3.5-2.4c-0.6-0.6-1.3-1-1.9-1.5       c-0.3-0.3-0.7-0.7-1-1c-0.9-0.4,0.1-2.8-2-2c-0.7,0-1.3,0-2,0c-3.1-2-5.5-2.2-5.7,4.4c-2.2-7.6-7.3-5.9-11.6-6.3       c2.9-1.1,5.6-2.7,8.5-1.3c0.8-1.2-0.3-1.9-0.3-2.5c0.5-5.1-2.1-2.2-3.7-1.4c-0.8,0.4-1.7,2-2.1,1.8c-1.6-0.7-5.5,1.6-4.3-3.1       c0.5-2-1.2-3.1-2.6-2.4c-2.9,1.4-6-0.7-8.8,1.2c-1.5,1-2.2-0.8-3.1-1.7c-2.4-2.2-6.2-2.8-9.2-1.4c-1,0.5-1.3-1-2-0.9       c-3.2,0.5-6,1.5-4.9,6.4c-2.7-3.2-5.6-4.5-9-7.6c1.4,4.2-1.5,4.6-3,6c-1.4,1.2-3.3,1.2-4.7,0.6c-1.7-0.7,0.1-2.8-0.9-4       c2.1-1.3-1.7-5.9,3.2-5.7c0-1-0.1-1.9-0.2-2.9c-0.5-5,1-5.5,5.9-5.1C417.9,409.4,422.5,411.3,427,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M477,438c4-2.5,2.6,3.4,5.5,3.2c0.3-1.2-0.7-2.9,0.5-4.2c0.7-0.3,1.4-0.3,1.8,0.2c3,3.9,6.9,7,10,10.9       c0.4,0.5,0.5,1.2,0.2,1.9c1.3,1.7,2.8,3.3,3.9,5.1c1.1,1.8-0.6,3.7-1.6,2.6c-3.1-3.1-5.6-0.1-8.4,0.3c-0.4-2,1-2.7,1.9-3.3       c2.4-1.6,2.5-3.1,1.3-5.7c-1.5-3.2-4.5-0.9-6.3-2.5c-1.4,3.3-6.3,1.1-7.2,5.3c0.4,2,3.1-1,4,1.4c-2,0.9-3.9,1.8-5.4-0.6       c-1.4-2.3,0.8-8.2,3.3-9.4c-1.5-1.3-3.9,1.2-4.9-1.2C474.9,440.3,476.4,439.3,477,438z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4D0F17"),
                d:
                  "M529,488c-3.8-6.4-9-11.6-14-17c0-0.7,0-1.3,0-2c0.2-0.1,0.5-0.2,0.7-0.2c3.2,1,4.9,3.8,7,6       c2.2,3.3,5.5,5.8,7.6,9.2c1,1.5,2.3,3,0.7,4.9l0,0C529.9,489.6,529.4,488.9,529,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F16"),
                d:
                  "M515,469c-6.3-4.1-9.9-10.8-15-16c0.3-0.4,0.8-0.6,1.3-0.7c1.6-0.1,2.8,0.7,3.8,1.9       c2.9,3.7,6.2,7.2,9.1,10.9C515.1,466.2,516.3,467.4,515,469L515,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671D29"),
                d:
                  "M495,450c-4-4.3-8-8.7-12-13c0-0.3,0-0.7,0-1c2.5-1.5,3.6,0.7,5,1.9c1.6,1.4,2.9,3.2,4.3,4.8       c1.1,2.5,5,3.5,3.7,7.3C495.7,450,495.4,450,495,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F16"),
                d:
                  "M496,450c-0.1-3.1-4-3.9-4.1-7c0.2-0.1,0.4-0.2,0.6-0.3c2.8,0.8,4.4,3.3,6.8,4.7       c1.5,0.9,0.5,1.9-0.7,2.5c-0.2,0-0.5,0-0.7,0.1C497.3,450,496.7,450,496,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M457.6,449c-1.5-0.3-2.4-1.1-3-2.7C457.1,445.7,457,447.7,457.6,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F16"),
                d:
                  "M501,453c-0.3,0-0.7,0-1,0c-0.7-1-1.3-2-2-3c0,0,0,0,0,0C500.8,449.2,501.8,450.2,501,453z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M474,435c0.2-0.7,0.2-1.9,1.2-1.4c1.3,0.7,0.6,2.2,0.8,3.4C475.3,436.3,474.7,435.7,474,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621125"),
                d:
                  "M403.5,414.6c-0.2-0.7-0.5-1.2-0.4-1.4c0.2-0.5,0.7-1,1-1.4c0.2,0.3,0.5,0.7,0.4,1       C404.4,413.2,404,413.7,403.5,414.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942A34"),
                d:
                  "M547,513c1.7,1.8,3,3.8,4,6c-2.1,1.5-4.6,4.9-5.1-1.2c-0.1-1.3-1.2-2.6-1.9-3.9       C545,513.7,546,513.3,547,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751826"),
                d:
                  "M529,488c0.7,0.3,1.3,0.7,2,1c0,0.3,0,0.7,0,1c-1.4-0.1-2.9,0.4-4-1C527.7,488.7,528.3,488.3,529,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1625"),
                d:
                  "M1405,456c-0.9-5.7,2.8-7.4,6.9-10.3c3.7-2.6,8.2-2.9,11.3-6c1.3-1.3,2.6-2.1,4.4-1.5       c-0.4,1.6-3.5,0.7-2.7,3.6c2.7-2.1,4.8-2.1,6,1.5c0.6,1.7,2.5,0.9,3.9,1.1c2.3,0.4,6.3,0.4,3.4,4.8c-1.4,2.1,0.7,2.4,1.7,2.5       c2.8,0.5,0.8-1.2,0.7-2c-0.1-1.3,1-1.9,1.9-1.9c2.8,0.2-0.6,1.4,0.2,2c0.4,0.3,0.8,0.6,1.1,0.8c1.7-3.3,5.4,1.6,7.5-2.1       c1.2-2,3.9,0.3,6.1,0c3.3-0.4,2.7,2.1,2.7,4.3c0,2.2,1.1,3.5,3.5,2.8c4.1-1.2,6.3,0.1,5.7,5.3c2.6-2.1,4.5-5,7.3-0.9       c1,1.5,3.1-0.7,3.3-1.7c0.9-4.9,3.9-7.4,8.6-8.6c3.1-0.8,4.5-3.8,7-5.5c2.8-1.9,3.2-2,5.5-0.2c-0.8,1.5-1.8,2.6-3.5,3       c-2.2,0.6-0.9,1.9-0.5,3c-5.5,3.9-9.3,9.6-14.5,13.8c-1.9,1.5-3.2,3.8-5.5,4.8c-0.6,0.3-1.7-0.1-1.8,0.3c-0.6,4.9-3,3.4-5,1.2       c-2-2.4-3.5-2.9-5.4-0.1c-1.3,1.9-2.5,1.7-3.8-0.2c-2.4-3.5-4.1-3.3-6,0.3c-3.3,6.2-3.9,6.4-10,3.6c-0.4-0.2-0.5-1-1.1-0.7       c-1.5,0.7-3,1.9-4.1-0.6c-0.6-1.5-0.2-2.7,1.2-3.4c1.6-0.8,2.7-3.2,5.2-1.6c1.3,0.8,3,3.3,4.4,0.5c1.2-2.3,4.5-4.6,1-8       c-1.3,1.5-0.7,6.6-4.9,3c-0.5,3.2-4.1,2.1-5.3,3.5c-2.4,2.7-4.1,1.9-6.4,0.5c-1.4-0.8-3.5-0.8-3.4-3c0.1-2.4,2.9-0.8,3.9-2.2       c-1.4-0.9-3-1.4-4.5-2c-1.4-0.5-2.6-0.4-3,1.5c-0.3,1.2-0.2,3.1-2.2,2.6c-1.9-0.5-1.6-2.2-1.1-3.8c0.3-0.9-0.3-1.6-0.9-2.2       c0.2-2.1,1.2-3.6,2.9-4.6c-1.6-2.3-3.6-4.2-6.8-2.4c1.7-0.2,3.6-0.6,4.8,0.8c1.7,1.9-0.1,3.3-0.9,4.9c-0.4,0.7,0,1.2,0.4,1.8       c0.6,1.2,0.4,2.4-0.7,3.1c-2.2,1.5-5.6,1-7.1,4.3c-0.3,0.7-4-1.2-5.1-3.4c-0.4-0.7-0.1-1.6-0.2-2.4c-0.8-1.7-2.6-1.6-4.1-2.1       C1406.3,457.5,1404.8,457.8,1405,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1828"),
                d:
                  "M1477,468c6.8-5.9,11.2-14.4,20-18c1-0.3,1.4-2.6,2.7-1.4c1.8,1.7-0.9,1.9-1.5,2.6       c-1,1.3-2.6,2.1-3.6,3.4c-0.9,1.1-1.6,2.7-0.6,4.1c1.4,2.1,2.1-0.5,3.2-0.6c6.5-0.4,10.4-4.4,14.1-9.4c1.8-2.5,5.6-4.1,9.4-2.4       c1.2,0.5,2.6,1.4,3.6,0c0.4-0.6-0.1-2-0.6-2.8c-1-1.9-1.8,0.2-2.8,0.3c-1.6,0.1-3.9,0.8-3.7-1.8c0.2-2,1.9-3.7,4-3.7       c4.4-0.1,8.7,0.1,12.9-1.5c2.2-0.8,4.6-0.6,5.4,2.4c-0.8,1.3-2.3-0.7-3.1,0.6c0.2,1.4,1.4,1.7,2.5,1.9c1.1,0.1,2.6-0.6,2.6,1.2       c0,1.3-1.5,1-2.4,1.1c-4.8,0.5-4.2,5.2-6.1,8c-1.6,2.3-4.5,2.3-6.5,2.7c-6.6,1.2-12.5,3.9-18.5,6.3c-4.1,4.5-10,5.8-15.3,7.8       c-5.7,2.2-10.8,5-15.8,8.4c-2.2,1.5-4.2,3.3-7.2,2.8c-1-1.5-0.7-3.2,0.6-3.9C1473.8,474.3,1475,470.9,1477,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1522,430c1.8-2.3,3.5-4.8,7-4c1,1.3,2,1.3,3,0c0.3,0,0.7,0,1,0c0.8,1.7,1.8,3.5,0.1,5.1       c-1.5,1.5-3.5,1.4-5.1,0.3c-1.6-1.1-2.4-0.8-3.9,0.3C1522.9,432.5,1522.2,431.4,1522,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A31E2C"),
                d:
                  "M1470,480c11.6-8.4,25.1-13.2,38-19c3.2,3,6.7-2.8,9.9,0.7c-2,1-1.6,5.7-6.6,4       c-1.5-0.5-1.1,2.3,0.6,3.3c-1.2,1.2-2.5,2.3-3,4c-2.7,1.8-6,2.1-8.9,2.6c-3.5,0.7-6.6,1.5-9.2,3.9c-0.2,0.2-0.6,0.6-0.8,0.5       c-7.4-2.3-9.6,6.9-15.9,7.1c-0.4,0.2-0.9,0.3-1.4,0.2c-2.6-1-5.2-2.4-8.2-1.7C1464.6,482.1,1466.9,480.6,1470,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF2F3B"),
                d:
                  "M1488,496c-2.4,2.2-3.4,4.8-3,8c-1.8,1.4-3.9,2.3-5.8,0.5c-2.2-2.2,1.1-3.3,1.4-5.1       c-0.4,0.5,0.1-0.3-0.1,0c-4.9,5.2-8.8,2-13.9-0.7c-2.2,1.4-5.1,5.1-9.7,2.4c-0.7-1.5-0.1-2.8,0.6-4.1c4.3-2.5,7.9-6.8,13.5-6.2       c-0.4-0.4-2.4-0.1-1.9-1.7c0.5-1.7,2-2.6,3.9-2.2l0,0c4.4,0.8,8.2,0.3,11.8-2.8c2.7-2.4,6.7-1.2,8.2,1.8       C1492.8,490,1489.4,492.5,1488,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA2734"),
                d:
                  "M1493,486c-2.7-2.3-6.2-2.2-8.2,0.3c-0.6,0.8-1.3,1.8-2.3,1.5c-3.1-0.8-6.7,3.2-9.4-0.8       c1.2-1.3,2.2-2.4,4.3-2.8c3.9-0.7,3.9-1.4,4.9-5.4c0.2-0.8,4.3-2.4,4.9-1.3c2,3.7,3.1,0.8,4.2-0.3c2.6-2.6,6.1-2.1,9.2-3.1       c2.9-0.9,5.7-1.2,8.6-1.1c0,0.3,0,0.7,0,1c0,0,0,0,0,0c-1.8,1.6-4.2,2.3-6,4c-1.9,1.5-3.3,5.8-4.8,5       C1493.7,480.3,1494.6,484.9,1493,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02833"),
                d:
                  "M1503,478c0.9-3,2.9-4.3,6-4C1508.5,477.6,1506,478.2,1503,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1585.6,423.8c-1.4-0.3-3.4,1.5-3.1-1.1c0.1-1-0.8-2.5,0-2.7C1585.3,419.7,1584.3,422.4,1585.6,423.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1397,553c1.5-0.2,3.3-0.6,3.7-2c1.1-3.7,3.7-3.1,6.4-2.7c0.2,2-2.2,1.3-2.6,2.6       c0.6,1.8,2.2,0.9,3.4,1.1c1.1,0.2,2.6-0.2,2.9,1.3c1.3,6.8,5.9,8.8,12.1,8.9c0.2,0,0.4,0.4,1,1.3c-4.3,0-8.5-1.3-12.4,2.3       c3.6,1,6.6-2.1,9.4-0.3c1.2,0.8,4-0.3,3.7,2.2c-0.3,2-2.5,1-3.8,1.2c-0.9,0.1-1.8,0.1-3.2,0.2c5,2.7,9.7,1.7,14.4,0.8       c-0.2,4.3,3.1,9.1-1.8,12.8c-1,0.8-1,2-0.5,3.2c1.8,4.3,0.3,8.8,0.4,13.2c0,1.5-0.6,2.9-1.7,4c-0.4,0.4-1.4,1.1-0.8,1.5       c6.6,5-2.5,5.1-2.4,8.1c-7.2,1.8-14.4,3.2-21.8,1.7c-0.8-0.4-1-1.1-1-2c0.1-0.5,0.3-0.9,0.7-1.3c1.7-2.6,4.6-1.2,6.8-2.1       c2.4-1,3.6-1.4,3.3-5c-0.6-5.8-3.9-7.8-8.4-9.4c-0.6-0.2-1.1-0.7-1.8-0.7c-7.1,0.4-7.1,0.4-9-6.2c-0.1-0.3-0.2-0.6-0.3-1       c-3.6-11-3.1-21.9,1-32.6c1.4-0.9,1.7,0,1.7,1.1c0,2,0.5,3.8,2.2,5.2c-1.2-1.9-2.7-3.8-2.1-6.3       C1396.5,553.8,1396.7,553.3,1397,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1426,612c-0.7-1.3-0.6-2.6,0.6-3.6c0.8-0.6,2.8,0.9,2.7-1.1c-0.1-1.7-2-1.2-3.3-1.4       c-0.5-0.1-0.9-0.3-1.4-0.4c6.1-5.8,6-12.5,3.1-19.6c-0.9-2.1,1.8-5.3,5.1-5.5c-5.2-3.3,0.4-6.9-0.8-10.4c0.3-0.3,0.7-0.7,1-1       c5.9,2,11.8,1.4,17.7-0.3c2.8-0.8,4,1.3,4.2,3.5c0.2,2.4,0.2,5-0.4,7.4c-0.7,2.9,0.7,6.5,0.1,8.2c-2,5.2,2.5,10.2-0.3,15       c-0.5,0.8,0,1.6,0.8,2.2c0,1.3,0,2.7,0,4c1.1,1.3,1.2,2.7,0.2,4.1c-3.7,1.1-7.3,1.6-11.2,0.7c-3.9-0.9-7.9-0.2-11.9-0.4       C1430,613.3,1427.7,613.7,1426,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93C48"),
                d:
                  "M1393,530c3.3,2,7.5-0.2,10.8,2.3c0.7,0.6,1.4-0.4,2.1-0.9c2.3-1.6,4.5-3.7,6,1.2       c0.3,1,3.4,2.5,5.8,2.1c2.5-0.4,1.8,1,1.4,2.3c-7.3,3-14.7,6-22,9C1391.7,542.1,1390.3,536.5,1393,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13B46"),
                d:
                  "M1397,553c0,0.3,0,0.7,0,1c-0.3,0.5-0.7,0.5-1,0c-3.5,8.6-3.3,17.6-2.9,26.6c0.1,2.5,2.7,4.6,1.9,7.4       c-2.5,1.2-4.6,0.5-6.6-1.2c-1.6-4.1-0.5-8.4-0.8-12.6c0-8.8-0.1-17.6,0.3-26.5c0.1-1.1,0.3-2.2,1.3-2.8       c2.1,0.1,2.5,2.1,3.8,3.1C1392.9,550.8,1394.1,552.6,1397,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43F4E"),
                d:
                  "M1393,548c-2.4,0.3-3.1-1-3.1-3.1c-2.5-5.2-0.9-10.6-1-16c0.8-2.4,0.8-5.2,3.1-6.9c2,2.5,0.6,5.4,1,8       c0,5.7-0.1,11.3,4,16C1395.7,546.7,1394.3,547.3,1393,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1432.3,565.1c-0.2,1.7-1,2.4-2.4,2.4c-0.2,0-0.5-0.5-0.4-0.7C1429.7,565.2,1430.8,565.1,1432.3,565.1z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF303D"),
                d:
                  "M1394,514l-0.5,0l-0.5,0c-2.6-4.1-1.3-8.5-1-12.7c0.3-0.6,0.6-1.6,1.2-1.4c5,2,10.8-0.6,15.6,2.7       c1.6,1.1,3.5,0.6,5.4,0.4c2.4-0.3,4.7-0.3,6,2.3c1,2,2-0.7,3.2,0c4.7,2.7,10.2,0.9,15.1,2.5c4,1.2,8.2,1.5,12.1-0.9       c0.7-0.5,1.6-0.4,2.4,0.1c1.3,3-1.5,4.8-2.2,7.2c-0.7,1.1-1.7,2-2.6,3c-5,5-5.9,5.1-12.6,2.4c-4.3-1.8-8.9-2.5-13-4.6       c-1-0.5-1.9-0.3-2.8,0.3c-1.2,0.9-2.9,0.8-3.7-0.2c-2.3-2.9-5.5-3.1-8.5-2.9C1403.1,512.4,1398.2,511.3,1394,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1394,514c0.1-2.2,1-3,3.5-2.8c4.9,0.3,9.8,0,14.7-0.4c1.4-0.1,2.1,0,2.8,1.2c1.2,2.2,2.5,5.1,4.8,0.6       c0.4-0.8,1.5,0,2.2,0.4c5.8,3,12.3,4.3,18.4,6.5c2.6,0.9,3.5,0.2,4.9-1.2c1.5-1.5,3.2-2.9,4.8-4.3c1.2-0.7,2-0.7,2,1       c-1.2,4.8-5.8,7.2-8.9,10c-2.4,2.1-8.2,0.2-12.5,0c-1.3-0.1-0.2-0.9-0.2-1.4c-0.1-2-1.1-3.2-3.1-2.6c-5.8,1.7-11.9-0.7-17.6,2       c-1.1,0.5-2.6-0.2-3.8-1.2c0.8-1.4,2.5-0.1,3.3-1.2c-2.7-4.9-3.7-5-6.7-1.1c-0.2,0.3-0.5,0.4-0.8,0.6c-1.3,1-2.7,1.9-5.1,3.7       C1398.2,519.3,1399.1,515.4,1394,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33440"),
                d:
                  "M1452,515c-0.4-0.8-1.2-1-2-1c0.1-2.7,2-4.7,3-7c0.1-0.2,0.2-0.4,0.3-0.6c1.7-1.4,1.3-3.8,2.5-5.4       c0.4-0.3,0.8-0.2,1.2,0.1c4.2,0.7,7.2-2.4,10.7-3.7c0.2-0.1,4-1.9,1.1,1.3c-0.2,0.2,0.1,1.2,0.4,1.3c2.8,0.7,5.7-0.2,8.5,1.4       c1,0.6,1.7-2,2.3-3.3c0.2-0.4,0.4-0.8,0.7-1.3c1.8,1.4,1.6,2.8,0.6,4.4c-0.6,1-2.8,1.2-1.4,3c1.1,1.5,2.4,0,3.7,0       c0.5,0,1,0,1.5,0c0,1.3,0,2.7,0,4c-0.3-0.1-0.7,0-0.9-0.2c-1.4-1.1-2.9-2.4-4.8-1.6c-2.4,1,2.1,2.7-0.3,3.8       c-1.2,0.6-1.3,2.8-2.8,2.5c-2.2-0.3-0.3-3.1-1.9-4.1c-1.1,1-0.6,4.2-3.7,1.9c-3.6-2.7-6.8-1.9-8.1,2.2       c-1.1,3.5-2.7,4.1-4.1,1.2c-2.6-5.1-3.6-1.8-5.2,0.4C1452.9,514.5,1452.4,514.7,1452,515z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93743"),
                d:
                  "M1393,500c0,4.7,0,9.3,0,14c-0.2,2.7-3.9,4.9-1,8c-0.7,2-0.6,4.2-1.9,6c-1.5-1.2-1.5-2.9-1.4-4.6       c0-6.1-0.3-12.3,0.2-18.4c0.4-1.7,0.8-3.5,1.8-5C1391.4,499.4,1392.2,499.4,1393,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33440"),
                d:
                  "M1465.9,514.5c-0.5,0.2-1.2,0.2-1.2-0.4c0-0.8,0.4-1.7,1.3-1.8c0.4,0,1.1,0.3,1.2,0.6       C1467.6,514.2,1466.3,514.1,1465.9,514.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3946"),
                d:
                  "M1463,558c1.7,1.2,0.4,2.7-0.1,3.5c-0.8,1.3-2,2-0.4,3.7c1.9,2.1-2.6,2.6-1.5,4.8       c-0.6-0.3-1.5-0.6-1.6-0.9c-0.7-4.9-0.5-9.7-0.2-14.4C1462.3,554.5,1459.2,559.4,1463,558z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1436.5,566.5c2-1.1,5.1,0.7,5.2-2.9c0-0.3,1.7-0.6,2.6-0.9c0,0,0.2,0.5,0.3,0.8       c-2.8,0.9,1.3,3.8-0.9,4C1441.5,567.7,1438.9,569.3,1436.5,566.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1444.6,556c0-1.6-3.8-1.4-2-3.8c0.5-0.7,1.3-1.2,2.1-0.6C1446.8,552.9,1445,554.4,1444.6,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1442,554.9c-0.2,0.5,0.1,1.4-0.9,1.3c-0.3-0.1-0.7-0.6-0.8-1c-0.1-0.8,0.5-1,1.2-1.1       C1442.5,553.9,1441.7,554.7,1442,554.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43744"),
                d:
                  "M1455,613c0-1.3,0-2.7,0-4c0.6-0.9,1.2-1.7,2.2-3.2c0,4,0,7.3-0.1,10.7c0,0.2-1.4,0.4-2.2,0.6       c0,0,0,0,0,0C1453.9,615.7,1453.9,614.3,1455,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3647"),
                d:
                  "M1378,652c2.6-3,0.8-6.5,1-9.8c0.2-1.9,1.4-3.4,3-3.5c7.3-0.8,14.7-1.6,22,0.3       c-4.3,0.3-8.6-0.7-12.8,0.7c-0.7,0.2-1.8-0.6-1.9,0.8c-0.1,1,0.8,1.6,1.6,1.4c3.6-0.9,6.9,3.9,10.6,0.3       c0.8-0.8,2.1,0.2,2.8,1.3c0.7,1.3,1,2.5-0.1,3.7c-1.3,1.4-2.5,2.7-2.2,4.8c-1.3,0-2.7,0-4,0       C1391.3,653.5,1384.7,653.2,1378,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63843"),
                d:
                  "M1437,654c-4.5,0-9.5-1.3-13.3,0.4c-4.2,1.9-8.3,0.8-12.2,1.8c-3.8,0.9-6.4-0.2-8.5-3.2       c0-0.3,0-0.7,0-1c14.8,0,29.6,0,44.4,0c1.6,0,3.3-0.1,4.9-0.4c0.9-0.2,1.9-2.1,2.5,0.1c0.5,1.7-0.8,2.3-2.3,2.3       C1447.3,654,1442.1,654,1437,654z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63A48"),
                d:
                  "M1385,625c2.9,4.7,8.1,4.3,12.3,4.8c6.5,0.8,13.2,0.2,19.8,0.2c2.1,0,4.1,0,3.9,3       c-2.3,1.2-5,0.3-7.2,1.4c-0.5,0-0.9-0.1-1.4-0.3c-2.8-1.5-5.6-0.7-8.4,0c-6.7,1.1-13.2-1-19.8-1c-1.6-0.6-4.5-1-3.9-2.7       C1381,628.4,1381.9,625.5,1385,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9424D"),
                d:
                  "M1419,616c-4.3,0-8.6,0-12.9,0c0,1.5,1.5,0.5,1.7,1.8c-4.3,0-8.7,0.2-13.1-0.1       c-1.3-0.1-2.6-0.3-3.8,0.2c-0.8,0.3-1.7,0.5-1.7,1.5c0,1.4,1.1,1.4,2.1,1.6c1.6,0.2,3.4-0.6,4.7,1c-4,0-8,0-12,0       c-0.2-0.2-0.3-0.4-0.5-0.6c-0.8-2.9,0.9-5,2.4-7.1c1.2-1,2.5-1.2,4-0.9c8.4,0,16.7,1.5,25.1,1.2       C1416.4,614.5,1418.5,613.3,1419,616z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2313F"),
                d:
                  "M1414,633.9c2-2.7,4.6-1.3,7-0.9c1.3,0.2,3.5-0.4,3.2,1.7c-0.2,1.7-1.8,2.5-3.7,1.6       c-1.2-0.5-2.5-0.6-3.5,0.7c-4,0-8.1,0-12.1-0.1c0.4-2.6,2.6-1.7,4.2-2.2C1410.7,634.3,1412.6,635.8,1414,633.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B3B46"),
                d:
                  "M1385,625c-0.9,1.5-1.3,3.6-2.6,4.3c-3.5,2,0.9,1.7,0.6,2.6c-1.9,1.8-4,1.4-6.2,0.8       c-0.5-0.2-0.9-0.6-1.1-1.1c1.4-4.4,3.2-8.4,8.2-9.8c0,0,0.2,0,0.2,0C1384.4,623,1384.7,624,1385,625z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3341"),
                d:
                  "M1419,616c-3.9-2-8-0.6-12-1c-6-0.6-12.1,1.2-18-1c2-3.1,5-0.6,7.4-1.4c2.3,0.1,4.6-0.4,6.6,1.4       c7.8,1.2,15.3-2,23-2c7.2,0.8,14.4-1.2,21.7,1c1.7,0.5,4.8-1,7.3,0c0,1.3,0,2.7,0,4C1443,616.7,1431,616.3,1419,616z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63843"),
                d:
                  "M1378,652c6.7-1.8,13.3,0.1,20,0c-1.2,2.6-3.6,1.8-5.6,2c-2.7,0.3-6-0.2-6.4,3.9c-0.7,0-1.3,0-2,0       c-0.8-1-2.3-0.9-3-2C1379.8,654.8,1377.3,654.6,1378,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63843"),
                d:
                  "M1403,653c-0.5,0.8-1.1,2.1-2.1,1.5c-1.1-0.6-0.2-1.2,0.6-1.4C1402,653,1402.5,653,1403,653z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761723"),
                d:
                  "M1376.1,631.9c2.3,0,4.6,0,6.9,0c7.3,0.3,14.7,0.6,22,1c2.7-0.2,5.4-0.3,8,1c0.3,0.1,0.6,0.1,1,0       c2.5,1.2,2,1.8-0.4,2.1c-2.9,0.4-5.9-0.8-8.7,0.9c-10.3,0.1-20.5,0.2-30.8,0.3c0-0.8,0-1.5,0-2.3c2.7-1,5.3,0,7.5-0.4       c-1.5-0.9-4.2,1.2-5.9-1.2C1375.6,632.8,1375.7,632.3,1376.1,631.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93647"),
                d: "M1381,656c1.4,0,2.9-0.1,3,2C1383,657.3,1380,659.7,1381,656z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("421016"),
                d:
                  "M1373,634c-0.4,0.1-0.8,0.1-1.2,0.2c-1.8,1.6-4.1,1.2-6.2,1.2c-13.5,0.3-26.9-0.5-40.4-0.5       c-9.3-1.1-18.6-0.3-27.9-0.5c-7.5-0.1-15,0-22.4,0c-41.5,0-83,0-124.5,0c-5.8,0-11.6,0-17.4,0c-2,0-4,0.2-5.8-1.1       c-0.5-0.6-0.4-1.2,0.1-1.7c1.8-1.3,3.8-1.1,5.8-1.1c45.3,0,90.5-0.1,135.8,0.1c22.6,0,45.3,0.2,67.9-0.1       c10.5-0.1,20.9,0.9,31.4,1.1C1370,631.6,1372.4,631.2,1373,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("2C0C0D"),
                d:
                  "M1373,634c-1-1.2-2.4-0.9-3.7-1c-26.6-1.6-53.2-0.8-79.8-1c-6.8,0-13.7-0.1-20.5-0.1       c-1.1-0.7-3.7-1.1-0.7-2.7c1.8-1,3.9-0.6,5.9-0.6c20.5-0.1,41.1,0.1,61.6-0.1c11,0,21.9-0.4,32.9,0.3c2.2,0.7,4.7,1,5.7,3.6       c0.1,0.6-0.1,1.1-0.5,1.6C1373.6,634,1373.3,634,1373,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963C48"),
                d:
                  "M1325.1,633.9c15.6,0.1,31.2,0.2,46.7,0.2c0,1.3,0.1,2.6,0.1,3.9c-1.4-0.2-2.9,0.4-4-1       c-3-1.1-6.1-1-9.1-1c-15.4-0.2-30.9-0.8-46.3-0.6c-1.2,0-2.7,0.5-3.7-0.8C1314.1,632.3,1319.7,633.7,1325.1,633.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B75565"),
                d:
                  "M1373.9,634c0.1-0.2,0.2-0.5,0.2-0.8c0.6-0.8,1.2-0.8,1.9-0.1c2.1,1.6,4.9-0.1,7.5,1.7       c-3.5,0-6.5,0-9.4,0C1374,634.6,1374,634.3,1373.9,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4652"),
                d:
                  "M368,282c0.7,1.3,1.3,2.7,2,4c-3,0-6,0-9,0c-10.1,0.1-19.9-2.3-29.8-3.7c-8-1.1-16.2-0.6-24.3-0.2       c-4.9,0.2-6.7-1.4-5.9-6.1c-2.7-2.6,0-2.8,1.6-3.5c4.7,0.8,9.1,2.9,14,2.3c4.8,0.4,9.5,3,14.5,0.8c0.8-0.3,1.8-0.1,2.2,0.7       c2.2,3.8,5.8,2.6,9.2,3c6.7,0.7,13.1-1.7,19.7-1.9c1,0.3,1.6,1.1,2.3,1.7C365.7,280.1,364.6,283.8,368,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3F4A"),
                d:
                  "M275,281c-1-3.6-4.3-5.1-7-6.9c-1.4-0.9-4.6,1.2-5-1.2c-0.6-3.5-1.7-7.6,2.6-10.3       c5.6-3.6,11.1-7.5,16.5-11.4c4.3-3.1,9.4-4.7,13.9-7.7c2.6-1.8,7.5-1.7,11.1-3.3c0.8,2.9-1.5,3.9-3.3,4.8       c-6.8,3.6-13.9,6.5-20.7,9.4c0.5,0.3,1.9-0.1,2,1.1c0.1,0.9-0.8,1.3-1.7,1.5c-1.7,0.6-3.7,0-5.3,1.1c-0.9,0.7-1.8,1.4-2.6,2.3       c-5.2,5.9-3.7,10.7,4,12.6c2.3,0.6,4.1,1.2,3.5,4.1C280.8,279.3,278.1,280.4,275,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5414C"),
                d:
                  "M283,277c-0.8-1.7-1.6-3.1-3.9-3c-3.7,0.1-8.3-4.2-8.5-7.9c-0.2-3.4,3.2-4.9,4.7-7.4       c0.4-0.7,1.1-1.1,1.7-1.7c0.3-0.2,0.6-0.4,0.9-0.4c1.8,0.2,4.1-1,5.1,0.7c1.3,2.2-1.9,2.7-2.6,4.2c-0.3,0.6-0.7,1.1-0.6,2.2       c2.3-0.7,4.2-0.2,5.6,1.8c2.1,4.9,6.4,5,10.8,4.6c1.9-0.2,3.5-0.6,5,1c0.5,0.5,0.8,1.1,0.9,1.9c-0.6,0.9-2.1,1.5-1,3       c-3.3,0-6.5,0.5-9.7,0.7c-3.6,0.2-5.3,1.2-4.9,5C283.9,280.8,286.2,277,283,277z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3E4A"),
                d:
                  "M250,282c0.1-1,0.4-2,1.7-1.8c1,0.1,1.1,1,1.3,1.8C252,283.2,251,281.7,250,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5A0A6"),
                d:
                  "M298.3,315.2c-1.1-0.9-4.1,1.5-3.7-2.1c-1.6,0.1-3.3-0.6-4.6,0.9c-0.3,0-0.7,0-1,0       c-0.5-0.6-1.6-0.8-1-2c7.3,0,14.5,0,21.8,0c5.1-0.1,9.9-3,15.2-2c13.3,0,26.7,0,40,0c9.9-0.4,19.9,1,29.7-0.9       c2.4-0.5,4.3,1.3,6.6,1.7c3.8,0.6,7.3,1.8,11.1,0.4c1.2-0.4,2.1,0.7,2.6,1.8c-1.6,3.9-4.8,4.2-8.2,3.3       c-8-2.1-15.9-3.8-24.3-3.1c-7.1,0.6-14.3,0.3-21.4-0.1c-8.3-0.4-16.5,0-24.3,3.5c-3.6,2.2-7.6,0.1-11.3,1.4       c-6.8-0.8-13.4-3.5-20.5-2.8c-1.3,0.1-2.6,0.1-3.9,0C300.1,315.2,299.2,315.2,298.3,315.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0939C"),
                d:
                  "M288,312c0.3,0.7,0.7,1.3,1,2c-1.4-0.1-2.9,0.5-4-1C285.7,311.8,286.9,312,288,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6A6AD"),
                d:
                  "M337,316c-0.1-0.6-0.8-1.6,0-1.7c7.9-1.8,15.9-3.2,24.1-2.7c8.4,0.5,16.9,0.5,25.3,0       c3.8-0.2,8.1,1,11.9,1.3c5.4,0.4,11.2,5.7,16.7,0.1c1.8,0.6,1.4-2.1,2.9-2c0.4,2.1,2.4,3.6,2,6c-2.4,1.3-5.1,1.8-7.3,3.6       c-2.5-0.1-5.1,0.4-7.6-0.4c0.7-2.5-0.6-3.3-2.9-3.3c-1.5,0-2.9,0.3-4.4,0c-10.3-2.6-20.6-1.3-31-0.9c-4.2,0.2,0.1,3.1-1.4,4       c-2.8,2.1-5.9,1.6-8.9,0.7c-4.2-1.3-8.2-3-12.9-1.9C341.1,319.4,338.9,317.7,337,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79152E"),
                d:
                  "M279,331c2.4-1.9,4-4.8,7-6c2.7-2,5.4-4,8.8-4.7c2.9,0.8,0,2.3,0.4,3.4c1.7-1.6,2.7-0.3,3.4,1.1       c0.8,1.6,1.4,3.4,1.9,5.1c0.5,1.6-0.3,2.9-2.4,2.4c1.4,1,2-0.1,2.7-1.1c0.8-1.1,2-1.2,3-0.3c1.1,0.9,0.6,2.1,0,3.1       c-0.6,0.9-2.3,1.7-0.3,2.9c-0.2,2-1.8,2.3-3.2,2.3c-3.4,0-6.2,1.7-9,3.4c-5.9,2.2-11.9,4.3-18.4,3.4       C274.5,340.8,276.5,335.8,279,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931A37"),
                d:
                  "M273,346c6-1.3,12-2.7,18-4c1.3-1.2,2.8-1.6,4.5-1.5c1,0.8,0.8,2.2,1.8,2.9c0,0.5-0.3,0.9-0.6,1.1       c-5.9,1.2-11.6,3.1-16.9,5.7c-3.8,1.9-5.5,6.3-4.3,10.3c0.6,2,2.4,3.4,2,5.9c-0.2,1.2,2.1,0.5,3.2,0.3       c5.2-0.9,10.1-3.3,15.4-3.7c1.3,0.3,2.4,0.8,3.1,1.9c-0.9,3.1-4,2.6-6,3.9c-4.2,1.5-8.5,2.6-12.8,3.8c-1.4,0.4-2.9,0.6-4.4,0.3       c-5-4.8-4.3-11.2-4.8-17.2c0-0.6,0.4-1.2-0.2-1.8C271.5,351.3,271.6,348.5,273,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851731"),
                d:
                  "M303,336c-3.4,0.1-1-1.2-0.5-2c0.5-0.8,1.8-1.5,0.8-2.5c-0.9-0.9-1.7-0.1-2.4,0.7       c-2.6,3.1-3.3,0.7-4.3-1.3c1.2-1.2,2,1.7,3,0.2c0.7-1.1-0.2-1.8-1.2-2.2c-1-0.4-0.7-0.9-0.6-1.9c0.3-2.3,0-2.4-1.9-1.1       c-0.8,0.6-1.2,0.1-1.6-0.3c-0.6-0.6-1-1.2-0.9-2.2c0.1-1.2,2.4-0.8,1.7-2.5c-0.1-0.9-0.1-1.7,1.2-1c0.3-0.2,0.5-0.4,0.7-0.6       c6.7-3.1,13.6-3.7,20.7-1.7c1.3,0.4,2.5,1,3.7,1.5c2.6,1.6,5.9,2.4,6.6,6c0,1.8-0.9,3-2.6,3.8c-0.5,0.2-1.4-0.3-1.2,0.1       c2.8,4.5-1.2,3.6-3.2,4.1c-3.3,1-6.6,2-9.8,3.1C308.3,337.4,305.6,338,303,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4B151B"),
                d:
                  "M301,315.2c6.3-2.1,12.5-1.6,18.7,0.4c2,0.6,4.1,1.1,6.1,1.7c0.4,0.1,0.9,0.3,1.3,0.5       c2.7,2.1,5.8,3.9,6.6,7.6c-0.1,1-0.4,1.8-1.5,2.2c-1.9,0.1-3.1-1-4-2.4c-1.7-2.6-4-4.2-6.7-5.5c-1.3-0.7-2.8-1-4.2-1.5       c-4.2-2.1-9-0.2-13.2-2C303,315.9,301.8,316.2,301,315.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC5665"),
                d:
                  "M304.1,316.1c4.7-0.1,9.5-0.6,14,1.6c0.5,0.5,0.5,0.9-0.1,1.3c-7.1-1.8-14.1-1.3-21.1,0.4       C298.4,316.3,302,317.7,304.1,316.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3C4F"),
                d:
                  "M296.2,320c-0.4,0.3-0.8,0.7-1.2,1c-3.5,0.3-5.8,3.3-9,4C288.7,322.1,291.6,319.2,296.2,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD555F"),
                d:
                  "M583,305c-2.7-2.1-5.8-0.3-8.6-1.1c1.1-1,1-6,3.9-1.1c0.1,0.2,0.7,0.2,0.9,0.1c7.9-4,16.9-3.1,25.6-5.9       c-4.9-2.9-11.6,1.9-16.1-5c6,0,11.1,0,16.2,0c0.2,0.1,0.4,0.2,0.6,0.3c5.2,0.5,10.4,1.5,15.4-0.9c0.5-0.2,1-0.4,1.5-0.5       c10.1-0.6,20.2,0,30.3-0.3c5.3-0.6,10.8,1.1,15.9-1.2c1.6-0.7,3.3-0.7,5-0.1c3.2,2.5,7.3,0.6,10.8,2c0.8,0.4,1.1,1.1,1.1,2       c-0.1,0.5-0.3,1-0.6,1.4c-4.2,3.3-9.8,3.7-14.5,4.2c-9,0.9-18.2,2.3-27.4,0.7c-4.8-0.9-9,1.8-13.6,2.2       c-4.6,0.4-9.5,1.3-13.6,2.5c-4.7,1.4-8.7,0.8-13.1,0.7c-2.1,0-3.9,0.6-5.5,2c-1.1,0.8-2.3,1.3-3.6,1.4       C590,307.5,585.8,308.5,583,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D14B56"),
                d:
                  "M420,301c4.7-2.1,9.7-0.5,14.5-1c2.5-0.2,4.9-0.1,7.4-0.1c4.6-0.7,9.3-0.6,14-1c1.7,0.5,3.3,0.5,5,0       c1.1,1.4,2.8,1.2,4.2,0.9c11-2,22,1.3,33-0.8c2.3-0.4,4.1-2.2,7-1.7c1.8,0.3,3.3,0.7,4.8,1.5c1.7-0.9,3.8-0.4,5.6-1.6       c3.3-2,6.8-3.6,11.1-1.8c2.2,0.9,5-0.1,6.7-2.3c2.2-2.8,4.4-2.5,6.9,0.4c-0.5-2.4-0.6-3.3-3.2-3.3c-9.4,0.1-18.7-0.5-26-7.6       c-0.2-0.2-0.2-0.6,0-0.9c1.9,0,4.6-5.1,5.6,1c0.2,1,1.9,1.1,3.1,1c5.7-0.5,11.2,0.8,16.8,1c1.1,0,2.5,0,3.4,0.6       c4.3,3,8.9,3.3,13.9,2.5c1.3-0.2,3-0.1,3,1.7c0,2.1,1.4,4.7-1.4,6.2c-3.2,1.7-6.2,3.3-10.2,2.4c-2.3-0.5-5.1,0.6-8.1,1       c1.5,2.1,2.9,1.3,4.2,1.1c1.8-0.4,4-1.5,4.8,1.6c-6,1.7-11.8,0.3-17.1-0.7c6.7,2.1,14.3,1.1,21.6,2.2c4.2,0.6,8.5,1.1,12.8,1.6       c1.3,0.1,2.8,0,2.8,2c-14.4,0.1-28.7-1.1-43-2.7c-28.7-3.2-57.6-3.9-86.5-3.3C431,301.1,425.5,301,420,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4753"),
                d:
                  "M511,282c3.7,2.6,8.2,3.8,11.7,6.9c0.2,0.2,0.7,0.6,0.8,0.5c4.8-4.1,9.6,1.8,14.5-0.2       c3.8-1.6,3,3.1,4.9,4.3c-0.4,0.5-0.7,1.1-1.2,1.5c-1.3,0.9-2.3,0.1-2.9-0.9c-1.7-2.7-2.5-2.1-4.4,0.2       c-2.6,3.2-6.5,3.7-10.4,1.9c-2-0.9-3.7-0.4-5.4,0.7c-2.6,1.6-5.5,2.2-8.5,2c0.5-0.8,1.5-0.7,2.1-1.1c2-1.2,5.6-0.7,5.1-4.4       c-0.5-3.8-1.2-7-6.4-7.7c-5-0.7-10-1.8-15.2-1.7c-3.1,0-5.2-4-8.7-2c1.2-3.3,3.9-2.5,5.6-1.2c3,2.2,6.2,1.7,9.3,1.6       c1.6-0.1,3.3-2.3,4.3,1c0.2,0.8,2.1,0.4,2.1-0.7C508.3,278.1,509.9,281.4,511,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15965"),
                d:
                  "M461,275c-0.2-2.1-1.8-2-3.2-2c-1.4,0-2.6-0.2-2.8-2c1.7-0.9,3.6-0.4,5.4-0.4       c5.9-0.2,11.9,0.5,17.8-1.3c4.9-1.5,9.8,0.8,14.5,2.2c2.5,0.7,4.8,1.1,7.3,1.1c3.1,0,6.1,0,9.2,0.1c0.8,0,1.6,0.2,2.3,0.4       c2,0.9,4.1,1.5,6.1,2.5c0.4,1.9,3.5,1.1,3.4,3.5c-6.9-0.9-13.8-1.7-20.7-2.6c-1.3-0.2-2.7-0.6-3.9-0.3       c-10.7,2.2-21-1.7-31.6-1.6C463.6,274.5,462.3,274.8,461,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94852"),
                d:
                  "M566,307c-4.5-1.8-9.4-1.2-14-1.9c-7.9-1.3-15.9-2.1-23.9-3.6c6,0.3,11.9,0.9,17.9,0.5       c10.7,1.1,21.5,2,32.2,3.4c1.7,0.2,3.2-0.3,4.8-0.3c3.6,1.3,7.3,1.5,11,2c0.1,2.6-1.7,2.4-3.4,2.3       C582.4,308.9,574.2,307.8,566,307L566,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85B67"),
                d:
                  "M521,279c0-2-4.3,0.6-3-2.8c0.2-0.2,0.3-0.4,0.5-0.6c1.2-0.7,2.5-0.7,3.7-0.7c1,0,2.1,0.1,3.1,0.4       c4.5,0.7,8.9,2.2,13.6,1.1c2.1-0.2,4.1,0.5,6.1,0.9c4.1,0.5,8.2,1.9,12.4,1.3c2.6-0.4,5,1.2,7.6,1.1c1.4,0.3,2.9,0.4,4.1,1.3       c0.3,0.4,0.3,0.9,0,1.3c-8.7,0-17.4,0.3-26.1-0.3c-3.2-0.2-6.4-1.9-9.6-0.2c-2-4.3-7.2,0.3-9.6-3.3       C523.5,278,521.9,278.7,521,279z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF5B64"),
                d:
                  "M569,282c0-0.3,0-0.6,0-0.9c1.8-2.1,4.6-1.1,6.8-2c3.8-0.5,7.1,1.5,10.7,1.9c1,0.3,1.9,0.8,2.8,1.2       c2.2,1.2,4.6,1.1,7,1.5c1.3,0.2,3.5,0,2.3,2.6c-1.9,0.1-3.7,0.3-5.5-0.5c-3.8,0-7.6,0-11.5,0c-3.8,0-8,1-10.2-3.6       C571.2,282,569.8,282.1,569,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD4F5B"),
                d:
                  "M593,286c2,0,4,0,6,0c2.3-1.8,4.5-1.4,6.7,0.1c1.5,2.1,3.5,2.7,6,2.6c2.1-0.1,4.3-0.2,6.4,0.1       c1.7,0.3,3.8,0.4,2.9,3.2c-5.3,1.6-10.7,1.6-16,0c0,0,0,0,0,0c-0.9-3.6-4.4-2.7-6.6-4C596.7,287,594.5,287.5,593,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M637,317c-2.5-1.2-5.6-0.3-8-2c3.9-2.2,8.3-2,12.5-2.3c4.6-0.4,9.2,0.3,13.9,0.4c0.3,0,0.8-1,0.7-1.5       c1.7-1.3,3.8-0.9,5.7-1c7.5,0,14.7,1.7,22.2,2.2c12.7,0.9,25.3,2,38,3.3c0.8,0.4,1.4,1,1.5,1.9c-0.6,2.7-2.7,2.6-4.7,2.2       c-6.6-1.2-13.1-0.9-19.7-0.1c-5.9,0.6-11.9-1.6-17.8-0.2c-4.8,1.2-9.5,1.4-14.2,1.1c-2.8-0.2-5.5-0.9-8.4-0.7       c-1.6,0-3.2,0-4.7-0.2c-0.5,0-1-0.1-1.5-0.3c-1.6-0.6-3.2-0.7-4.9-1c-0.5-0.1-0.9-0.2-1.4-0.3c-2.4-0.6-4.8-0.1-7.2-0.5       C638.2,317.9,637.5,317.6,637,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45860"),
                d:
                  "M656,312c0.7,0.5,1.3,0.9,2.7,1.9c-10.4,0.2-20.1,0-29.7,1l0,0c-6.3-1.2-12.7-1.3-19-2       c-4.4-0.5-8.8-0.5-13-2c-0.1-2.1,1.6-2.1,2.7-1.7c6.6,2,13.2-0.4,19.6,0.3c-1.1-1.1-4.1,1.9-4.1-1.9c1.7-1.1,3.6-1,5.5-1       c1.1,0,2.2,0.1,3.3,0.4c2.1,0.8,4.2,0.6,6.4,0.6c7.7,0.2,15.2,2.3,22.9,2.6C654.4,310.3,655.4,310.9,656,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97B83"),
                d:
                  "M652,319c0.3,0,0.7,0,1,0c1.8,1,3.8,0.3,5.6,0.5c9.3,1.4,18.8,1.1,28.1,2c4.7,1.1,9.8,0.3,14.1,3       c0.4,0.5,0.5,1,0.2,1.6c-1.2,1.1-2.7,1.2-4.2,1c-7.6-1.1-15.5,0-23-2.3c-1.5-0.5-2.9-0.3-4.3,0.5c-0.7,0.3-1.5,0.4-2.3,0.4       c-2.2-0.3-4.4-1.2-6.6-1.4c-3.6-0.2-7.3-0.2-10.8-1.3c-1.3-1.8-3-2.1-5-1.3c-0.9,0.2-1.8,0.2-2.6,0c-1.8-0.7-3.5-1.7-5.4-0.2       c-0.7,0.2-1.3,0.1-1.8-0.5c-2-1-4-2-6-3c2.7-0.4,5.5,1,8-1c0.7,0,1.3,0,2,0c2.5,1.4,5.5-0.3,8,1l0,0       C648.5,319.2,650.5,317.8,652,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0525A"),
                d:
                  "M615,308c2.1,2.2,5.2-0.1,7.9,2.1c-4.2,0.8-8-1-11.9,1.3c-3.4,2-7.6-0.5-11.5-1.1       c-1.1-0.2-2-0.3-2.6,0.7c-10.4-0.8-20.8-1.4-31-4c7.8-0.3,15.5,0.8,23.3,1.1c1.4,0.1,3.8,1.6,4.7-1.1c1-0.3,2-0.7,3-1       C603.2,305.2,609.2,305.5,615,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M610,313c6.4,0,12.8-0.3,19,2C622.6,315.1,616.3,314.5,610,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F19499"),
                d:
                  "M632,322c0.7,0,1.3,0,2,0c1.4,0.8,2.5-0.4,3.7-0.6c0.5,0,1,0,1.4,0.1c7.2,2.1,14.6,2.5,21.9,2.9       c6.2,2.2,12.6,0.8,18.9,1.3c2.4,0.9,4.8,1.1,7.3,1c4.8-0.2,9.7-0.4,13.6,3.1c0.4,0.3,0.3,0.4,0.8,0.2c5.7-3.3,11.4,0.1,17,0.2       c9.7,0.2,19.5,0.7,29.2,2.2c0.5-0.1,1,0,1.6,0c5,1.6,10,1.6,15.2,1.2c2,0.3,4.5-0.6,5.6,2.2c-3.5,2.4-7.5,2.7-11.6,2.6       c-3.5-0.1-7.2-0.9-10.2,1.9c-5.3-0.2-10.6,1.4-16.1-0.8c-3.7-1.5-8.3,0.7-12.3-0.4c-2.6-0.7-5-0.7-7.5,0.2       c-2.2,0-4.5,0.1-6.7-0.4c-24.8-2.6-49.2-8.3-74.1-9.7c-1.4-0.1-2.8-0.5-4.1-0.9c-2.4-0.5-4.8-1.1-7.3-1.1       c-15.2-1.8-30.3-3.8-45.5-5.4c-0.8-0.3-1.4-0.7-1.9-1.4c0.6-4.4,2.8-0.2,3.8-1.2c-1.1-1.8-5.1,0-5.8-3.4c8.7,0.7,17.3,1.3,26,2       c8.3,2.2,16.9,1.5,25.3,2.5C625.6,320.9,629,320.2,632,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M571,316c2.2,1.4,5,1.6,6.9,3.6c-1.3,1.7-3.5-1.7-4.9,0.4c-5.4,2-10.8,2.4-16-0.3       c-0.9-1.5-1.1-2.8,0.6-4c-1.1,0.2-1.8,2.4-3.2,1.5c-4.6-3.1-10.2-0.9-15-2.9c-1.4-0.6-2.9-0.1-4.4,0.4       c-3.3,1.1-6.4,0.6-9.7-0.7c-5.9-2.5-12.4-1.6-18.6-2.4c-3.8-0.5-7.6,0-11.5-0.2c-1.6-0.1-3.9,0.4-4.2-2.3c0.8,0,1.6-0.2,2-1       c19.2,0.3,38.2,2.4,57.2,4.7C557.1,313.6,564.3,313.2,571,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M632,322c-8.8-0.7-17.7-1.4-26.5-2c-3-0.2-5.8-0.5-8.5-2c10.6,0.7,21.2,1.4,31.8,2       C630.3,320.1,631.4,320.7,632,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M637,322c-1,1.3-2,1.3-3,0c0.3-0.3,0.7-0.7,1-1c0.7,0,1.3,0,2,0c0.3,0.2,0.3,0.4,0.3,0.7       C637.2,321.9,637.1,322,637,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FFFFFF"),
                d:
                  "M587.1,282.1c-3.7-0.6-7.3-1.2-11-1.9c-3.6,0.3-7.3,0.5-10.9-0.1c-2.6,1.6-4.7-1.4-7.1-0.8       c-4.3-0.2-8.6-0.9-12.9-1.2c-2.1-0.2-4.1-0.4-6.2-0.6c-4.6-0.7-9.3-0.7-13.9-1.4c-0.9-0.1-1.8-0.2-2.7-0.2       c-2.2-0.5-4.4-0.9-6.7-0.9c-1.3-0.2-2.5-0.3-3.7-0.9c-0.5,0-0.9-0.1-1.4-0.1c-5.8-1.2-11.8-1.2-17.3-3.7       c-10.5-3.6-19.6-9.7-28.4-16.4c-2-2.6-4.9-4.3-7.3-6.4c-5-5.1-11-9.1-15.5-14.7c0.1-0.2,0-0.4-0.2-0.5       c-2.2-1.5-4.1-3.2-5.5-5.5c-0.6-1.8-0.2-3.4,0.8-4.9c0.8-1.2,1.6-2.5,2.7-3.4c8.2-7.1,17.5-12.6,27.2-17.3       c17.3-8.6,34.6-17.1,52.4-24.7c3.2-1.4,6.7-2,9.9-3.3c6-1.4,11.5-4,17.3-5.8c8.1-2.4,16.3-3.9,24.3-6.5       c11.6-2.2,23.2-4.5,34.7-7.6c0.8-0.3,1.6-0.4,2.4-0.5c4.1-0.1,7.9-2.5,12.1-2.1c6,0,11.7-1.9,17.6-2.8c6.5-0.9,13-2.6,19.6-3.2       c2.5-0.2,4.9-0.8,7.3-1.5c1.4-0.4,2.8-0.5,4.1-0.5c2.4-0.1,4.9,0.3,7.2-0.8c3.7-1.6,7.6-1.1,11.4-1.2c2.9,0.3,5.7-0.4,8.4-1.4       c0.8-0.2,1.5-0.4,2.3-0.4c3.2,0.2,6.1-1.2,9.2-1.9c2.2-0.3,4.4-0.2,6.5-0.2c3.6,0.3,7.1-0.3,10.4-1.6c2.5-0.5,5.1-0.3,7.6-0.4       c4.1-0.3,8.4,0.9,12.2-1.4c2.5-0.8,5.1-0.5,7.7-0.6c3.7,0.2,7.3,0.1,10.7-1.6c4.9-0.8,9.9-0.2,14.8-0.4       c2.9,0.3,5.5-0.8,8.2-1.6c3.5-0.6,7-0.3,10.4-0.4c5.8,0,11.7,0.5,17.4-1.6c5.1-0.7,10.3-0.2,15.5-0.4c3.9,0,7.7,0,11.6,0       c2.7,0.3,5.1-0.8,7.7-1.2c5.7-1.5,11.5-0.4,17.3-0.8c14.4,0,28.7,0,43.1,0c4.6,0.2,9.2-0.2,13.7,0.3c3,0.9,6,2.1,9.2,1.7       c3.2,0,6.5,0,9.7,0c5.1,0.2,10.3-0.5,15.3,0.5c4,2.4,8.4,1.4,12.6,1.6c4.3,0.3,8.7-0.6,12.9,0.8c2.9,1.1,5.9,1.3,8.9,1.2       c1.4,0,2.8,0.1,4.1,0.5c5.9,2,12.2,2.1,18.2,3.5c5.5,0.7,10.8,2.3,16.4,2.4c4,1.6,8.4,1.8,12.5,2.9c9.5,2.4,18.8,5.4,28.2,7.7       c10.5,3.7,21.3,6.3,31.7,10.4c11.2,5,22.9,8.9,34.2,13.9c22.5,10.2,44.9,20.8,66.9,32.2c14.3,8,28.7,15.8,42.9,24       c2,1.2,4,2.4,5.7,4.1c2.5,2.8,5.9,4.2,8.9,6.1c11,5.7,21.2,12.8,31.8,19.2c1.6,0.9,3.1,1.9,4.9,2.3c1.5,0.4,2.7,1.2,3.7,2.4       c3.4,3.5,7.7,5.6,11.7,8.3c11.4,7.9,23.3,15.2,33.2,25.1c1.3,1.3,2.8,2.3,4.5,3c1.5,0.6,3.3,1.3,3,3.4c-0.3,1.9-2.1,1.8-3.6,2       c-3.3,0.5-6.4,1.5-9.5,2.7c-2.4,0.5-4.9,0.3-7.4,0.4c-6.5,0.3-12.7,2.7-19.3,2c-3-0.2-5.9,0.8-8.8,1.6       c-1.4,0.3-2.8,0.4-4.2,0.4c-2.6,0-5.2,0-7.8,0c-3.8,0-7.6,0-11.4,0c-2,0-3.9,0-5.9,0c-5-0.1-10-0.1-15,0       c-6.6,0.2-8,2.8-4.4,8.5c2.5,4,5.6,7.7,3,12.8c-1.4,3.6-3.5,6.6-6.3,9.2c-0.6,0.5-1.3,0.9-2,1.1c-0.8,0.2-1.6,0.3-2.4,0.4       c-6.2,1.9-12.3,3.8-18.6,5.1c-6.4,1.3-12.3,1-18-1.8c-5.8-2.9-7.2-8.8-8-14.7c-0.4-3.1-0.1-6.3-0.2-9.5c-0.1-3.8-1.4-6.8-5.4-8       c-6.7-1-13.4-3.8-20.2,0.2c-1.9,1.1-4.2,0.7-6.4,0.7c-18.3,0-36.5,0-54.8,0c-5.3,0-10.5,0-15.8,0c-4.9,0-9.9,0-14.8,0       c-3,0-6,0-9,0c-3.7-0.1-7.5,0.2-11.3-0.3c-0.6-0.1-1.1-0.2-1.6-0.4c-4.2-2.2-8.7-1.1-13-1.3c-4.1,0-8.2,0-12.3,0       c-3.5,0-7,0-10.6,0c-1.2,0-2.3-0.1-3.4-0.4c-3.2-0.7-6.4-1.7-9.8-1.6c-3.5,0-6.9,0-10.4,0c-3.8,0-7.6,0-11.5,0       c-1.5,0.1-2.9-0.1-4.3-0.4c-3.2-0.9-6.4-1.9-9.8-1.6c-4.7,0-9.3,0-14,0c-2,0-4,0-6-0.4c-2.9-0.7-5.8-1.8-8.9-1.6       c-2.6,0-5.2,0-7.7,0c-3.9,0-7.7,0-11.6,0c-2.7-0.1-5.3,0.1-8-0.4c-4.4-1.9-9-1.7-13.6-1.6c-4.4,0-8.9,0-13.3,0       c-2,0-4.1,0.1-6.1-0.4c-3.4-1.4-7-1.9-10.7-1.6c-4.3,0-8.7,0-13,0c-1.4,0-2.8-0.1-4.2-0.4c-2.4-0.7-4.8-1.3-7.2-1.5       c-3.4-0.1-6.8,0-10.2,0c-3.8,0-7.6,0-11.4,0c-3.8,0.5-7.1-1.8-10.8-1.9c-3.2-0.1-6.3,0-9.5,0c-2.3,0-4.6,0-6.9,0       c-4,0.2-7.6-2.5-11.7-2c-3.8,0-7.6,0-11.4,0c-2.6,0-5.2,0-7.8-0.1c-1.1,0-2.3-0.2-3.3-0.6c-2.9-2.1-6.3-1.2-9.5-1.3       c-3.1,0-6.2,0-9.3,0c-2.3-0.1-4.6,0.1-6.8-0.4c-2.6-0.8-5.3-1.7-8.1-1.6c-3.8,0-7.5,0-11.3,0c-3.5-0.1-7,0.2-10.5-0.3       c-2.9-0.9-5.8-2-9-1.7c-3.4,0-6.9,0-10.3,0c-2.3,0-4.6,0-6.8,0c-1.1,0-2.2-0.1-3.3-0.4c-3.2-0.9-6.3-1.9-9.7-1.6       c-4.3-0.7-8.6-0.2-12.9,0c-1.7,0.1-3.4-0.1-5.1-0.4c-2.8-0.9-5.7-2-8.7-1.6c-2.8,0-5.5,0-8.3,0c-1.7,0-3.3,0-5-0.2       c-0.6-0.1-1.1-0.2-1.6-0.3c-3.9-1.4-8-1.7-12.2-1.5c-3.4,0-6.9,0-10.3,0c-2.3-0.1-4.6,0.1-6.9-0.4c-3.2-1.2-6.4-2-9.8-1.6       C593.3,283.4,590.2,283.1,587.1,282.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA737B"),
                d:
                  "M460,268c-2.1-3.3-6.7-1.5-9.1-4.9c-1.8-2.7-1.5-6.1-3.8-8.4c2.1-1,3.6-3.1,5.4-4.2       c0.9-0.5,1-2,2.3-1.9c1.1,4.2,4,5.8,8.1,5.3c0.4-0.3,0.8-0.4,1.3-0.3c2.3,1.4,5,2.3,6.5,4.8c0.8,1.7,2.1,2.8,4,3       c2.1,1.4,5.5,1.4,5.4,5.2c-4.8,1.8-9.6,3.2-14.7,3.5C463.4,270.3,461.1,270.5,460,268z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2646E"),
                d:
                  "M460,268c2.8,1.5,5.8,1.2,8.7,0.6c3.8-0.9,7.6-1.8,11.4-2.8c1.8-1.3,3.4-0.3,4.9,0.6       c2.5,1.5,5.2,2.6,8.1,3.2c1.6,1.1,3.5,1.4,5.4,1.8c1.4,0.3,2.5,0.7,1.6,2.5c-4.6,1.3-8.5-1.8-12.8-2.3c-4-0.6-7.5-0.9-11.8-0.1       c-6.6,1.2-13.8,1.6-20.6-0.5c-6.9-0.3-13.9,1-20.7-1.5c-2.3-0.8-2.1-2-2.3-3.5c1,0,2,0,3,0C443.3,266.7,451.7,267.3,460,268z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6595F"),
                d:
                  "M442,232.7c6.1,3.9,10.9,9.2,16.1,14.2c0.3,1-0.1,1.3-1.1,1.2c-4.1-3.6-8.2-7.2-12.3-10.9       C443.4,236,441.8,234.9,442,232.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("672C30"),
                d:
                  "M438,221.8c-0.8,1.6-1.1,3.3-0.8,5c0.2,1-0.2,1.4-1.2,1.3c-0.9,0.2-1.9,0.4-2.8,0.6c0-0.9,0-1.8,0-2.7       c0.1-1.6,0.9-3,1.4-4.5c0.6-1.1,1.3-2.1,2.7-2C438.3,220.1,438.9,220.7,438,221.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD7075"),
                d:
                  "M457,248.1c0.4-0.4,0.7-0.8,1.1-1.2c2.4,2,4.9,4,7.3,5.9c-0.2,0.7-0.7,1.1-1.4,1.2       c-0.3,0-0.6,0-0.9-0.1C461.8,251.2,458.5,250.5,457,248.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A5B5F"),
                d:
                  "M435.9,228.1c0.4-0.4,0.8-0.8,1.2-1.3c1.6,1.8,3.1,3.6,4.7,5.4C438.5,232.9,437.7,229.8,435.9,228.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0555F"),
                d:
                  "M348,267c-2-0.2-4.4,1.6-6-1c-3.1-3.8-7.3-2.1-11.1-2.1c-1.1,0-2.3,1-3.1-0.3c-1-1.4-0.6-2.9,0.4-4.2       c2.6-3.2,3.4-6.7,2.9-10.8c-0.4-3.4,4.7-8.3,8.7-8.1c5.6,0.3,9.2-3.7,13.7-5.5c1-0.4,1.8-1.5,3.1-1.5       c4.1-4.8,10.5-3.8,15.5-6.1c6.2-2.9,11.8-7.1,18.5-9.1c6.5-1.9,13.2-3,19.4-5.9c2.2-1,3.8,0.1,4.4,2.5       c-0.9,3.7-4.6,3.9-7.1,4.4c-5.7,1.3-10.7,4-15.9,6.4c-2.8,1.3-5.5,3-8.7,3.4c-1.8,0.2-3,1.4-3.9,2.8c-1.5,2.4-1.8,5.9-6.6,4.1       c-2.2-0.8-1.6,3.9-3.8,5c-3.4,1.4-3.9-0.9-4.2-3.9c-4,4.2-7.9,7.6-14,7.2c-2.4-0.1-4.3,2.8-4.5,5.8c-0.1,1.1,0.3,2.4-0.2,3.4       c-1.7,4.3-0.7,7.5,3.7,9.4C349.4,264.6,348.5,265.8,348,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD525D"),
                d:
                  "M357,234c-3.9,4.2-10,4.9-14.2,8.7c-3.1-2.5-5.4,0.4-8,1.2c-2.7,0.9-1.6,3.7-3,5.3       c-0.4,0.5,1.7,0.3,2.7,1.4c-1.2,1.1-4.9,1-2.4,4.4c0.9,1.2-1.2,3.5-2.8,4.7c-1.1,0.8-1.8,2-1,3c1.5,2,1.7-1.1,2.1-0.9       c3.8,1.7,8.4-1.1,11.9,2.1c0.8,0.7,0.6,1.5-0.2,2.1c-1.1,0.6-1.7,2.7-3.2,1.7c-5.9-3.7-13.6-0.5-19.2-5.4c-2-1.7-4.5,0-6.7-0.4       c-1.3-1.2-3.1-1.9-4.2-3.7c2.1-1.5,4.5-2.6,3.3-6.1c-0.5-1.5,1.9-2.4,3.4-3.1c2.6-1.2,5.1-2.8,7.7-3.7c6.2-2,11.5-6.2,17.9-7.7       c3.3-2.1,7.4-2,10.6-4.2c0.8-0.7,1.6-1.1,2.6-1.3C355.6,232.2,357.1,232,357,234z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24953"),
                d:
                  "M302,273c-0.3-0.3-0.7-0.7-1-1c-0.8-2.5-2.6-5.1-4.9-5.7c-4.7-1.1-7-4.1-8.3-8.4       c0.5-0.6,1.1-0.9,1.7-1.1c2.4-1.2,5.8-1.1,6-5c5.9-4.1,12.7-6.7,18.3-11.4c2.8-2.4,4,0,4.7,2.5c-1.5,4-3.5,7.2-8.4,7.5       c-5,0.4-6.4,3.3-4.7,7.9c1.2,3.3,2.8,6.3,5.5,8.6c0.8,0.7,1.5,1.5,1.3,2.7c-0.2,0.7-0.4,1.3,0.7,0.6c0.4-0.3,0.7-0.6,1.2-0.8       c0.7-0.2,1.3-0.1,1.8,0.5c0.3,0,0.7,0,1,0c1.8,2,2,4,0,6C311.7,276.7,306.7,275.3,302,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M311,267c-2.7-1-9.6-10.9-8.6-13.1c1.3-2.7,4.9-5.4,6.7-5c5.7,1.2,6.3-3.6,8.9-5.9       c-0.4-1.1,0.2-1.2,1.1-1.1c0.5,1,0.9,1.2,1.3,0.6c0.4-0.6,0.8-1.2,1.5-1.3c6.1-1.3,10.6-5.3,15.5-8.6c2.4-1.5,4.7-2.6,4.9,1.8       c-0.4,1.6,1.9,3.9-1.3,4.7c-2.3-1-3.8,1.5-5.6,2.1c-2.7,0.8-6.3,1.9-8.3,5.2c-1.6,2.7-1.9,0.1-2.6-1.5c0.6,4.3-3.3,2.8-5,4.1       c-1.2,0.9-3.5,1.8-5.4,2.3c-0.9,0.2-1.7,0.8-1.1,2.2c1.5,3.7,1.4,3.8-3.2,5.3c1.9,0.5,3.8,0.9,3.3,3.4       C313.3,264.1,312.6,265.7,311,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24853"),
                d:
                  "M317,276c0.8-2-0.1-4,0-6c3-2.2,5.5-1.9,7.2,1.5c0.9,1.9,2.3,2.7,4.3,2.6c4.8-0.4,9.8,2.5,14.3-1.9       c0.9-0.9,3.5,0.9,5.5,0.2c0.8,5.4,3.1,0.9,4.9,1c3.3,0.1,6.7-1.1,9.9,0.7c-0.1,0.2-0.1,0.4-0.2,0.6c-0.6,1.1,0,2.4-0.8,3.4       c-2.4,1.7-6.5-1-8.1,3.6c-0.4,1.4-2.4-2-4.7-1.4c-3.5,0.9-7.3-0.8-10.8,1c-0.2,0.1-0.6-0.2-0.9-0.2c-3.7,1-3.7-6.4-9.2-3.4       C325.7,279.1,320.9,276.7,317,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44651"),
                d:
                  "M363,274c10.3-0.6,20.3,2.4,30.5,2.2c3.7-0.1,7.9,0.8,11.5,2.8c-0.1,0.2-0.2,0.4-0.3,0.7       c-5.1,3.5-10.3,1.8-15.6,0.6c-6.2-1.3-12.6-2.2-19-1.4C365.6,279.5,362.9,277.6,363,274L363,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D35660"),
                d:
                  "M406,271c-0.3,0.3-0.7,0.7-1,1c0,0.3,0,0.7,0,1c-2.7-0.4-5.3-1.3-8-2c-0.1,2-1.5,2-3,2       c-0.6-1.2-1.6-1.6-2.9-1.5c-4.5,0.4-8.7-1.1-13.1-1.5l0,0c-2,0.6-4.2,0.6-6-0.4c-1.4-0.8-3.2-2-1.7-4.2       c5.9,0,11.8,0.3,17.6,0.5c3.8,0.6,7.1,3.8,11.7,1.3C401.7,266.2,403.5,270.3,406,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD525D"),
                d:
                  "M370,266c1.4,3.8,5,3.3,8,4c-1.8,1.5-3.9,1.4-6,1.2c-7.2-0.8-14.5-1.5-21.7-2.4       c-0.8-0.1-1.5-1.2-2.3-1.8c-0.8-1.4-0.6-2.4,1-3c5-0.7,10.1-0.9,14.8,1.4C365.9,266.5,368.1,264.5,370,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD525D"),
                d:
                  "M378,270c5.5,0.1,11.3-1.2,16,3c-4.7-0.2-9.5-0.4-15.2-0.6C378.9,272.5,380.1,270.4,378,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44651"),
                d:
                  "M421,282l-0.5,0l-0.5,0c-3.8-0.7-7.8,1.6-11.5-0.4c-1.3-0.7-3.5-0.1-3.5-2.6c0,0,0,0,0,0       c2.9-0.5,5.9-2.3,8.7,0.5c1,1,2.4,0.2,3.7-0.1C419.7,278.7,420.8,279.8,421,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M316,270c-0.7,0-1.3,0-2,0c-0.7,0.6-1.3,0.5-2,0c-0.3-1-0.7-2-1-3c2.4,0.2,4.6-0.3,6.9-2.1       C317.2,266.6,316.6,268.3,316,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3525E"),
                d: "M397,271c3-0.8,5.6,0.4,8,2C402,273.9,399,274.5,397,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE424D"),
                d:
                  "M458,297c-0.2-2.9-2.8-1.5-4.1-2.4c2.2-2.8,5-4.6,8.6-5c-0.7-3.9-4.8-3.4-6.5-5.6       c5-0.6,9.4,0.9,13.5,3.7c1.2,0.8,2.2,1.8,2.1,3.1c-0.1,1.6-1.8,0.9-2.8,1.2c-2.8,0.8-4.7,4-8.4,2.2       C458.7,293.5,460.3,297.3,458,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84551"),
                d:
                  "M456,299c-4.6,1.6-9.3,0.8-14,1C446.6,298.9,451.2,297.5,456,299z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD404B"),
                d:
                  "M405,279c3.7,1.8,7.6,2.9,11.8,1.9c1.4-0.3,2.6-0.6,3.2,1.1c-4.1,5.1-10.3,2.3-15.4,3.9       c-0.3,0.1-0.7,0.1-1,0c-6.4-2.2-13-1.7-19.6-1.9c-1.4,0-2.3-0.5-3.3-1.7c-2.1-2.6-5.3-1.9-7.7-0.6c-2,1.1-3.4,0.4-5.1,0.2       c-4.6,2.6-3.6-3.3-6-4c-0.5-1.5-2.3-3.4,1-4c0.2,5.2,5.3,1.3,7,3.6c1.1-3,3.1-1.1,4.5-0.5c2.9,1.1,5.9,0.9,8.9,0.9       c4.3-0.1,8.3,2,12.5,2.4C398.8,280.7,402.1,280.4,405,279z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M423,265c0.5,1.8-1.6,1.1-2,2c-2.8-0.5-5.3,0.9-8,1c-1.1,0-2.1-0.3-3-1l0,0c-0.2-1.9,1-1.6,2.3-1.2       c-2-0.9-4-1.3-5.9-1.6c-4-0.6-5-3.8-5.3-6.9c-0.3-3.2,2.1-3,4.4-2.3c-2.3-0.6-4.5-1.4-4.9-4.2c0-0.5,0.1-0.9,0.3-1.4       c1.3-1.7,2.2-4.4,4.8-0.9c0.9-2.7-1.1-4.1-1.3-6c-0.2-1.5-0.5-3.7,1.4-3.6c4,0.4,5.2-2.7,7.2-4.8c1.4-1.6,2.9-3.2,4.5-4.7       c1.7-1.6,3.4-2.6,5.2,0.2c1.1-2.5-3.9-4-0.3-6.2c4.3-2.8,6.2-2.4,9.4,2.1c0.1,0.2,0.2,0.3,0.3,0.5c-1.7,3.3-3.9,6.3-3.2,10.6       c0.7,3.9-3.2,0.4-4.4,2.2c4,2.6-1.6,6.1,1,9.5c-6.1-2.5-4.8,4.3-4.7,4.9C421.2,257.1,419.8,261.6,423,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4687A"),
                d:
                  "M435.2,222.3c-0.2,1.5-0.4,3-2.1,3.8c-0.4,0-0.7,0-1.1,0c0,0,0,0,0,0c-0.9-1.3-0.4-2.6,0.1-4       c0.5-0.8,1.1-1.5,2.2-1.4C435.1,220.8,435.5,221.3,435.2,222.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M423,224c0.1,0.7-2.2,1.2-0.3,1.9c1.1,0.4,2.6,0.4,2.1,2c-0.5,1.5-0.2,3.9-2,4.2       c-2.4,0.5-1-2.7-2.7-3.6c-2.4,2.8-6.1,4.5-7,8.5c-0.2,0.7-0.2,1-1.1,1.2c-2.5,0.5-2.5,0.6-1.5,3.2c-2.3,1.4-2.7-2.1-5.1-1.6       c-0.9,2.3,0.7,4,1.8,5.9c0.8,1.3,1.5,2.9-0.2,3.9c-1.1,0.6-2.6,1.7-3.3-1c-0.2-0.9-1.3,1.9-3,1c-0.2-0.3-0.1-0.1,0,0       c-0.2-0.3-0.3-0.5-0.5-0.8c-0.1,0.1,0,0.2,0.5,0.7c1.3,1.8,1.3,4.4,4.2,4c1.6-0.2,1.9,0.9,2,2.2c0.1,0.9-0.1,1.8-1.1,2       c-1.8,0.3-0.8-1.4-1.3-1.9c-1.1-1.3-2-0.1-2.8,0.6c1.8,1.9,0,6.1,4,6.4c2.4,0.2,4.4,1.2,6.5,2.3c-0.8,0.6-1.6,1.2-2.3,1.8       c-2.9,1.6-4.8-0.8-7-1.6c-5-1.9-9.9-4.2-15-0.3c-0.2,0-0.5,0.1-0.7,0.1c-3.9-0.3-6.7-1.4-4.7-6.2c0.3-0.7-0.2-1.3-0.4-1.9       c-1.6-4.8-0.4-8.8,3.5-12c0.6-0.5,1.4-1.2,1.5-1.9c0.9-6.2,6.5-6.3,10.5-7.1c4.7-0.9,7.9-3,10.5-6.5c1.3-1.8,2.8-3.4,5.4-2.2       c1.6,0.8,2.4,0,3-1.5C418,222.5,420.2,222.2,423,224z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45A64"),
                d:
                  "M370,266c-4.7,3.3-9-1.9-13.7-0.8c-2.3,0.5-5,0.3-7.3-1.2c-0.5-0.3-1-0.8-1.6-1c-3.4-1.1-6.1-2-3.6-6.7       c0.8-1.6,2.6-4.6-0.2-6.8c-0.6-0.4-0.4-1.8-0.1-1.7c3.8,0.3,3.7-5.8,8.7-4.6c3.5,0.8,7.1-2,9.6-5.2c0.8-1.1,1.6-2.9,3.5-2.1       c2.7,1,0.1,2.2,0,3.4c-0.2,2.1,1.5,1.7,2.8,1.8c0.5,0.9,0.3,1.8,0,2.7c-2.6,3.6,2,0.5,1.8,1.9c0.4,0.3,0.6,0.7,0.7,1.2       c-1.8,5.1-2.3,5.4-6.9,3.6c-4.6-1.8-9.5-0.3-11.9,3.7c-0.9,1.5,0.8,5,2.4,4.7c4.6-1,8,1.6,11.7,3.4c1.7,0.8,3.3,1.7,5.2,1.4       c5.8-0.9,11.4,0.4,17.1,1.5c0,0,0,0,0,0c0,0.3,0,0.7,0,1c-4.5,1.2-9,2.1-13.6,0.4C373.1,265.9,371.5,266.1,370,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d: "M410,267c1.1,0,2.3-0.2,3,1C411.3,269.8,410.8,268.1,410,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3AAB3"),
                d:
                  "M425.2,321.5c-0.1-0.8-0.2-1.5-0.3-2.3c0.7-3.4,2-5.3,5.9-3.3c2,1,4.1-0.6,6.2-0.9       c5.3-0.6,10.6-0.4,15.5-3.6c2.3-1.5,6.1-0.4,9.2,0c2.4,0.3,4.9,0.7,7.3-0.4c0,0,0,0,0,0c3.3-0.5,6.6-1.4,10-1       c2.3-1.2,4.7-0.2,6.8,0.2c6.7,1.3,13.5,0.7,20.2,0.9c0.5,0,1-0.1,1.5,0c2.1,0.5,5.5-0.1,5.5,2.9c0,3.5-3.1,3.1-5.6,2.9       c-1.7-0.2-3.3,0.5-4.9,0.8c-0.5,0.1-1.1,0.1-1.6,0.1c-3.7-0.6-7.4-0.3-11.2-0.3c-1.6,0-3.1,0.6-4.7,0.4       c-3.1-0.6-6.2-0.7-9.3,0.2c-2.2,0.4-4.4,0.4-6.6,0c-4.6-1-9.2-0.9-13.9,0c-8.4,2-17,2.6-25.5,4c-1.2,0.3-2.2,1.3-3.4,1.3       C425.4,323,425.2,322.3,425.2,321.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F19BA1"),
                d:
                  "M502,317c2.1-1.4,4.2-2.3,6.9-1.1c1.1,0.5,2.8,0.2,3.2-1.5c0.4-2.1-1.5-1.1-2.4-1.6       c-1.7-0.9-3.5-0.9-5.3-0.8c-8.6,0.4-17,0-25.4-2c3.9-2.1,8-0.5,12-1c1.1,1.4,2.7,1.1,4.2,1c9-0.6,17.8,1.1,26.7,1       c1.6,0,3,0.3,4.1,1.5c2.2,2.3,5.2,2.2,7.4,1.3c6.9-3,13.4,2.1,20.1,0.4c1.1,3.4,3.6,0.4,6,1.3c-1.9,0.8-2.8,2-2.5,3.7       c-0.7,0.6-1.6,0.7-2.5,0.6c-7.3-0.8-14.7-0.1-22.1-0.4c-0.9,0-1.8-0.1-2.6-0.4c-5-1.2-10-0.4-15-0.5       C510.5,318,506,319.6,502,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAA9AF"),
                d:
                  "M469,311c-4.1,2.1-8.5,0.5-12.7,1c-2.8,0.3-5.2,2.1-7.3,2.9c-6.1,2.2-13.6,3.7-19.4,1.8       c-4.6-1.5-2,4.7-4.7,2.5c-1.4-2.2-2.3-4.6-2.9-7.1c3.4-3.8,7.9-1.8,11.7-1.9C445.5,309.8,457.3,309.7,469,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F2A8AD"),
                d:
                  "M413,320c1.4-3.1,3.8-3.8,6.9-3c2.6,0.9,1.6,3.7,2.9,5.2c0.5,1.4-0.7,1.9-1.2,2.8       c-1.3,1.8-3.4,2.4-5.2,3.4c-1.8,1-3.8,2-3.2,4.7c-0.1,1.8,3,3.7-0.1,5.5c-0.7,0.2-1.5,0.1-2.1-0.3c-5.5-6.7-5.6-7.2-1.5-12.5       c1.3-1.4,3.4-1.3,4.9-2.5C414.2,322.2,411.4,321.9,413,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751E20"),
                d:
                  "M425.2,321.5c0.3,0.4,0.6,0.9,0.9,1.3c3.1,2.6,4.1,6.1,4.5,9.9c-0.3,1-0.7,1.9-1.6,2.5       c-2-0.1-2.1-1.9-2.9-3.1c-1-3-3.6-5.5-2.2-9.1C424.4,322.5,424.8,322,425.2,321.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D77578"),
                d:
                  "M423.9,323c1,3,2.1,6,3.1,9c0.4,1.1-0.2,1.2-1,1.2c-2.9-2.3-3.5-5.9-5-9c0.6-0.6,1.2-1.3,1.7-1.9       C423.2,322.5,423.6,322.7,423.9,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4750"),
                d:
                  "M1089,141c0-1,0-2,0-3c4-2.6,6.7,1.4,10,2c0.2,0,0.5,0,0.7,0c2.2,1.3,6.5-0.7,6.6,4       c-0.5,0.9-1.3,1.6-2.2,2.1c-5.1,0.1-9.6-2.4-14.3-3.5C1089.1,142.4,1088.8,141.7,1089,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1106,138c0,0.7,0,1.3,0,2c-2.3,2.8-4.7,0.3-7,0c0,0,0,0,0,0c-0.4-1.2-0.8-2.4-1.3-3.8       C1100.8,135.8,1102.9,139.2,1106,138z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4464F"),
                d:
                  "M1221,192c0.3,0,0.7,0,1,0c0.1,2.5,2.1,2.9,3.9,3.7c1.9,0.9,4.2,0.9,5.7,2.6c5.9,3.6,10.6,9.7,18.4,9.7       c0.3,0,0.7,0,1,0c2.5,3.1,4.9,6.3,9.2,7.3c1.4,0.3,2.3,1.3,2,3c-1.7,2.5-4.6,1.8-6.9,2.5c-0.7,0.1-1.5,0-2.1-0.3       c-1.1-4.6-5.1-5.9-8.7-7.6c-1.9-0.9-4-1.5-6-2.3c-2.3-2-5.1-2.9-7.8-4c-6.2-2.7-12.8-4.8-18.4-9c-3.1-3.1-7.4-4.5-11-6.7       c-0.4-0.3-0.7-0.6-1-1c-0.9-1.2-1.7-2.6-3.4-2.6c-9.4-0.1-17.1-4.6-24.3-10.1c-3.6-2.8-8.9-1.7-11.9-5.7c-1.5-2-0.4-3.1,1.4-4       c5.4,0,9.6,3.2,14.1,5.3c1.6,0.7,2.9,1.8,4.9,2c2.7,0.2,5,1.5,7.3,2.9c5.2,3.2,11.2,4.5,16.8,7       C1210.2,187.4,1215.2,190.5,1221,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC434D"),
                d:
                  "M1205,185c-1.9,0.7-3.8,1.2-5.2-1.1c-0.8-1.3-2.3-1.7-3.9-1.9c-3.4-0.6-6.7-1.4-9.3-4.1       c-0.6-0.6-1.8-0.9-2.7-1c-4.7-0.6-8.3-3.6-12.5-5.1c-3.2-1.1-5.8-3.9-9.5-3.8c-1.9,1.2-3.4,0.2-5-0.8c-3.4-2.2-7-3.6-10.9-4.5       c-4-2-8-3.9-11.9-6.1c-1.5-0.8-4-1.3-2.8-4.1c3.1-0.9,5.9,0.2,8.6,1.5l0,0c2.4,1,4.9,1.4,7,3.2c2.5,2.2,6.1,1.6,9,2.8v0       c1.7,0.8,3.8,1.2,4.8,3.1c1.6,3.1,5.4,0.5,7.2,2.9c1.9,0,2.5,3.3,5,2c2.4,2.2,5.1,3.4,8.2,4.3c8.5,2.5,16.2,7,23.7,11.7       c0.3,0.2,0.5,0.4,0.3,0.7C1205.2,184.9,1205.1,185,1205,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB414B"),
                d:
                  "M1262,218c-1.8-3.2-6.1-1.6-8.2-4.6c-1.2-1.7-3.2-2.9-2.8-5.4c1.2,0.5,2.8,0.6,3.6,1.4       c4.7,5.2,11.3,7,17.4,9.6c3.4,5.1,9.9,5.1,14.4,8.6c4.2,3.2,9.1,5.6,13.6,8.4c-0.3,2.6-1.8,2.5-3.4,1.3c-1.7-1.3-3.5-1.3-5.5-1       c-3.7-4.6-9.4-5.6-14.4-7.9c-4.6-1.8-8.7-4.3-12.6-7.4C1263.1,220.1,1262,219.6,1262,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB424A"),
                d:
                  "M1250,208c-4.6,2.8-8.5-0.7-11.1-2.8c-2.6-2-5.8-3.5-7.9-6.2c1-0.8,2-0.7,3,0       C1240.5,199.9,1244.8,204.7,1250,208z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1168,166c-5.9,1.9-8.7-2.7-12-6c2.3,0,4.6,0,6.9,0.1c0.3,0.7-2.4,1.2-0.2,1.8c1.3,0.4,2.8,1.1,4.3,0.2       c0.4,2.5,2.4,1.8,4,2C1170,164.7,1169,165.3,1168,166z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7404A"),
                d:
                  "M1205,185c0-0.3,0-0.7,0-1c6,1.3,11,4.7,16,8C1214.5,192.3,1209.7,188.9,1205,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C93F47"),
                d:
                  "M1234,199c-1,0-2,0-3,0c-2.7-1-5.3-2.1-8-3c-2.8-0.9-2.9-2.1-1-4C1226.8,192.9,1230.6,195.6,1234,199z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1173,168c-0.6,3.1-2.5,1.6-3.2,0.6c-0.6-0.9-1.3-1.7-1.8-2.6C1170.1,165.6,1171.4,167.1,1173,168z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1140,154c-3.1,0.5-6-0.8-9-1c-4.7-1.6-10.1-0.6-14.5-3.7c0.1-2.2-0.9-3.2-3.2-2.6       c-0.5,0-0.9-0.1-1.3-0.3c-0.8-0.5-1.3-1.2-1.4-2.2c0.1-1,0.8-1.6,1.4-2.2c2.3,1.8,4.6,1.8,6.9,0c0.4,2.5,2.5,1.8,4,2       c2.4,4.2,8.1,6.1,12,4c0.8,1.7,2.3,2,4,2C1136,152.2,1140.9,152.3,1140,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0434E"),
                d:
                  "M1112,142c0,0.8-0.2,1.6-1,2c-1,1.1-2.3,1.2-3.7,0.9c-0.5-0.2-0.9-0.5-1.3-0.9c-1-3.7-5.7-0.9-7-4       c2.3-0.7,4.7,1.3,7,0C1108,140.5,1109.5,142.8,1112,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF404A"),
                d:
                  "M1156,160c-6.8,1.8-11.2-2.6-16-6c1-0.7,1.7-2.5,3.4-0.7c1.5,1.5,3.7,0.5,5.5,0.8c-0.1,2.9,1.3,4,4.2,4       C1154.2,158.1,1157,156.5,1156,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68112A"),
                d:
                  "M249,382c3.5-1.8,8-0.8,11-4c3.1-2.5,6.9-3.1,10.5-4.4c2.9,1.3,4.2,4.3,6.5,6.3       c0.3,0.4,0.6,0.8,0.8,1.2c0.5,1.1,1,2.2,0.2,3.4c-1.2,0.9-3,0.4-4,1.9c-0.2,0.3-1,0.2-1.6,0c0.5,0.4,1.2,0,1.7,0.2       c1.5,0.7,0.8,1.4-0.1,2.1c-3.1,2.6-6.1,5.3-10.4,5.8c-0.6,0.1,0.2-0.1-0.5,0.2c-3.1,1.1-6.3,1.6-9.7,1       c-0.4-0.2-0.8-0.5-1.1-0.8c-1-0.6-0.8-4.1-3.3-1.1c-1.1,1.2-2.8-0.2-3.8-1.3c-1.2-1.2-1.4-2.7-0.6-4.1c0.8-1.4,2.3-2.5,1.4-4.4       C247,383.3,248,382.7,249,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631125"),
                d:
                  "M246,384c1.9,0.7,3.8,1.4,1.1,3.4c-1.3,0.9-2.6,1.8-1.8,3.5c0.4,0.9,1.5,2,2.5,2.2       c2.3,0.4,1.7-2.2,2.8-3.4c0.6,2,2.9,3,2.4,5.3c-0.2,0.6-0.6,1.3-1.2,1.5c-5.5,1.7-11.5,1.5-16.6,4.4c-1.6-1.5-2-3.9-4.1-4.9       c0,0,0,0,0,0c-0.9-1.6-2.3-2.9-2.1-5c3.7-3.7,8.8-4.2,13.3-5.9C243.5,384.7,244.7,384.4,246,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152F"),
                d:
                  "M239,366c0.3,1.2,2.4,2,1.5,3.3c-1.2,1.7-2.1-0.6-3.2-0.7c-0.8-0.1-1.9-0.3-1.6-1.3       C236.1,365.7,237.7,366,239,366L239,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2F4B"),
                d:
                  "M229,391c0.7,1.7,2.1,3,2.1,5c-2-1.1-2.6-3-3-5C228.3,391,228.6,391,229,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M192,420c-5.6,0.6-7.5,5.8-11,9c-8,1.1-16.1,2.1-24,4c-1,0.9-2,0.8-3,0c-1.1-1.5-5.3-2.4-1-5       c2.5-2.1,5.4-2.9,8.6-3.4c9.7-1.6,19.4-3.5,29.2-5.3C191.1,419.3,191.6,419.8,192,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681229"),
                d:
                  "M243,413c-2-1.7-2.2-4.9-5-6c0-0.6-0.1-1.3-0.1-1.9c0.1-2.6,2.3-1.9,3.7-2.1c5.4-0.8,10.8-1.2,16.3-1.9       c3.2-0.3,6.4-1.8,9.7-0.9c3.2,1.8,4.3,4.2,2.4,7.6c-0.4,0.4-0.8,0.7-1.3,0.9c-2.2,0.8-4.6,0.3-6.7,1.2       C255.8,411.6,249.5,413,243,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("78142F"),
                d:
                  "M258,402c-5.7,1.4-11.6,1.9-17.4,2.2c-1,0.1-2-0.2-2.6,0.8c-0.9-1.4-1.9-2.7-2.8-4.1       c3-5.3,8.5-3.8,13.1-4.8c1.6-0.4,3.3-0.2,4.8-1.1c0,0,0,0,0,0c0.8,0.8,1.9,0.3,2.8,0.7c1.6,0.7,4.1-1.4,4.9,1.6       C261.4,399.8,259.1,400.6,258,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63202A"),
                d:
                  "M114,443c-1.6-3.4,1-5.6,2.5-7.8c2.3-3.4,4.4-6.8,5.7-10.8c1-3.2,3.4-4.7,6.9-4.4       c0,2.8-1.6,6.5,3.5,6.8c0.2,0,0.3,1.5,0.5,2.2c0.2,0.2,0.6,0.6,0.5,0.8c-0.9,3.6,0.8,6,3.7,7.8c-3.9,3.3-9,1.9-13.3,3.5       C120.6,442.1,117.6,444.1,114,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M137,437c-4.9-0.5-5.6-2-4-8c0.3,0,0.7,0,1,0c0.7,1.8,2.6,3.5,0.3,6.5c4.6-2.5,1.3-6.7,3.8-9.3       c1,3.2,2,6,2.9,8.8C140,436.4,139,437.6,137,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M137,437c1.4-0.6,2.3-2.2,4-2c0.7,0,1.3,0,2,0c1.2-1,2.5-1.4,4-1c2.3-0.4,4.9,0.9,7-1c1,0,2,0,3,0       c1.3,0,2.7,0,4,0c2.6,0,5.5-0.1,2.1,3.5c-2.2,2.3-0.2,4.2,1.4,4.7c5.1,1.4,5.6,5.1,5.8,8.9c-2,2.2-2.2-5.3-4.5-0.2       c0,0.1-0.3,0-0.5,0c0.5-3.7-4.6-3.2-4.6-5.4c-0.1-4-3.1-1.8-4.5-2.8c-0.1-0.1-0.6,0.2-0.9,0.4c2.8,3.9-3.3,3.7-3.1,6.8       c0.1,3,3,3.6,4,4.2c3.4,1.9,2.4,5.3,1.9,6.8c-1.3,3.8-2.3,5.8,3.3,5.8c1.5,0,4,3.9,4.3,6.2c0.4,3.4-0.2,3.5,1.5,6.7       c2-1.8,0-4,0.3-5.7c2.7-0.9,1.8,7.4,6,1.2c0.9,5.3-3.4,5.4-5.8,7c-0.9,0.6-2.3,0.1-2.1,1.9c0.3,2,1.7,1.1,2.7,1.2       c2.7,0.4,5.2-0.7,8-1.3c-3-1.5-2.6-3.2-0.5-4.9c2-1.5,4.4-0.4,5.4-0.3c2.5,0.2,4.9,1.6,7.5,0.1c-0.2,1.7-1.1,2.8-1.9,2.7       c-2-0.1-2.1,0.6-2.4,2.4c-0.3,1.9,0.4,2.4,1.7,3c1.2,0.6,3.3,0.5,2,2.9c-1.2,2.4-2.2,1.3-3.5,0c-0.3-0.3-0.7,0.9-0.8,1.5       c-0.9,0.9-2,1.2-3.1,1.1c-10.3-1.6-20.6-2.7-30.7-5.3c-0.5-2.2-1.9-2.7-3.9-2.3c-0.4,0.1-0.9-0.3-1.3-0.6       c-0.5-1.3,0.1-2.6-1.2-4c-3.4-3.7-3.7-9.7-8.9-12.2c1.1-3.1-3.4-4-2.7-6.7c0.7-2.6,2.3-4.9,2.5-7.2c-1.6,1.5-0.4,5.7-4.6,5.5       c-0.8-0.4-1.6-1-1.5-1.8c1-5.2-0.8-9.4-4.8-12.8c-0.3-1.3-1.4-2.4-0.8-3.9C127.5,438.1,132.6,439.3,137,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M147,434c-1.2,0.7-2.5,1.2-4,1C143.7,432.2,145.2,432.6,147,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861630"),
                d:
                  "M270.9,374.1c-3.3,2.2-7,3.4-10.9,3.9c-1.8-0.4-5.8,1.4-3.2-3.3c0.1-0.2,0-0.8-0.2-0.9       c-8.5-3.5-2.8-10.6-4.2-15.9c-0.2-0.6-0.3-1.3-0.5-1.9c0.2-4.8,4.5-2.7,6.6-3.1c1.5-0.3,3.1,0.2,4.4-1.3c2.2-2.6,4,0.1,6,0.4       c0,1.4,0,2.7,0,4.1c-2.1,4.9,0.3,9.3,1.5,13.8C270.8,371.2,271.6,372.6,270.9,374.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871835"),
                d:
                  "M244,352c0.9,0.6,1.3,1.5,0.5,2.4c-0.5,0.6-1.3,0.4-1.6-0.2C242.1,353,243.8,352.9,244,352       C244,352,244,352,244,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9434F"),
                d:
                  "M319,242c-0.3,0.3-0.7,0.7-1,1c-1.1-1.2-1.3-3.6-4.1-1.2c-5.2,4.6-11.2,8.1-17.9,10.2       c-0.8,0.8-0.4,2.4-2.6,1.9c-2.5-0.5-4.4,0.9-3.4,4.1c-0.7,0-1.3,0-2,0c-0.9,2.7,0.9,6.4-3,8c-1.6-1-3.1-2.8-5.1-0.6       c-0.5,0.6-1.5,0.8-2.2,0c-0.7-0.8,0.1-1.4,0.5-2.2c1-2.1,1.1-4.8,5.3-4.8c-2.5-2.1-4.6-1.2-6.4-1.5c2-2.1,4.7-0.3,6.9-1.3       c1-1.3-4.5,0-0.8-2.3c2.8-1.7,6.1-2.7,8.6-4.4c5-3.3,12.1-2.9,15.3-9c4.7-0.6,8-4.1,12-6c1.7-0.8,3.3,1.5,5,0c0.3,0,0.7,0,1,0       c2-2.2,4.3-3.7,7.4-2.7c1.4,2.8,0.5,5.3-2.2,6.1C326.3,238.7,322.9,240.8,319,242z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE444F"),
                d:
                  "M341,234c-0.3-0.7,0.7-4.4-1.5-0.6c-0.4,0.6-1.1,0.2-1.5-0.4c-0.6-1.2-2.1-1.6-2.5-3       c0.1-1.5,1.1-2.4,2.3-2.9c6.1-2.5,11.3-6.4,17.2-9.1c0.7,0,1.3,0,2,0c3.6-0.8,7.3-1.5,10.5-3.5c4.2-2.6,8.7-3.2,13.5-2.5       c1.2,2.6-0.9,2.7-2.4,3.1c-5,1.4-9.1,4.1-13.1,7.4c-4.8,4-11.3,4.9-16.8,7.7c-0.4,0.2-0.8,0.4-1.3,0.5c-2.6-0.2-3.7,2-5.2,3.5       C341.8,234.4,341.4,234.3,341,234z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4414C"),
                d:
                  "M355,218c-4.4,4.6-10.2,7.2-15.8,9.8c-1.6,0.8-3.1,1.1-3.2,3.2c-1,2-1.3,2-3-0.3c0-0.2,0-0.5-0.1-0.7       c0.3-5.8,6.2-5.1,9.3-7.6c1.6-1.3,4.6-1.4,6.5-3.5C350.4,217.2,352.9,218.2,355,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4414C"),
                d:
                  "M333,232c-3.1-1.1-5.1,2.1-8,2c-2.5-3.6-0.4-4.4,2.7-4.4c1.8,0,3.5,0.3,5.3,0.4c0,0,0,0,0,0       C333.6,230.7,333.6,231.3,333,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B4414C"),
                d:
                  "M324,234c-1.7,4.2-3.3,0.4-5,0C320.7,232.1,322.3,233.3,324,234z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M348,230c3.8-2.6,7.8-4.9,12.2-5.8c3.2-0.7,4.6-2.9,6.7-4.8c2.9-2.6,6.7-4.6,10.8-5.4       c1.5-0.3,3.1,0.1,3.3-2c0-0.8,0.2-1.6,1-2c6.4-2,13.3-1.4,19.7-3.3c4.5-1.3,8.5-3.7,12.9-5.3c2.6-1,4.4-3.2,5.5-5.9       c3.5,1.5,7.9,1.5,9.3,6.2c-10.2,2.7-19.2,8.5-29.3,11.4c-4.4,1.3-8.7,2.4-13.2,2.5c-2.7,0.1-4.2,2.5-6.1,3.8       c-6.7,4.3-14.4,6.5-21.4,10c-1.9,0.9-4,1.7-5.2,3.7c-0.7,0.3-1.3,0.7-2,1C347.7,235.7,347.9,232.8,348,230z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24651"),
                d:
                  "M420,196c0.3,5.1-3.8,6.7-7.2,7.7c-5,1.5-9.4,4.5-14.6,5.7c-1.7,0.4-3.3,1.2-4.7,0       c-1.3-1.2-2.2-1-3.4-0.1c-2.5,1.9-5.3,1.9-8.1,0.7c4.9-4.3,10.9-6.3,17-8c0.7-0.6,1.3-0.6,2,0c0.8,0,1.6-0.2,2-1       c0.3-0.4,0.5-0.9,0.9-1.1c4.5-2,8.8-4.3,12.7-7.3c1.3,0.5,3.1,0.3,3.8,2.1C420.5,195.2,420.4,195.6,420,196z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5404B"),
                d:
                  "M417,193c-3.7,0.6-4,5.5-8.2,6c-1.8,0.2-4.1,0.7-5.8,2c0.2-2.8,2.5-3.4,4.6-4.5c2-1.1,5.7-0.6,5.4-4.5       c1.3,0,2.7,0,4,0c0,0,0,0,0,0c0.3,0.2,0.3,0.5,0.2,0.7C417.2,192.9,417.1,193,417,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B5404B"),
                d:
                  "M401,202c-0.7,0-1.3,0-2,0c0.1-1.3-0.3-3.5,1.7-3.2C402.5,199,400.7,200.9,401,202z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA404C"),
                d:
                  "M417,193c0-0.3,0-0.7,0-1c3.1-1.8,6.5-2.8,10.2-2.8c2.6,0,4.4-1.7,6.5-3c2.6-1.6,5.1-4,8.6-1.7       c1,0.7,2.2,0,2.3-1c0.4-3.3,4.2-5.2,3.2-9.2c-0.2-0.9,1.4-3.5,3.9-1.3c0.9,0.8,3.2-1.1,4.2,1c-2.2,2.6-4.7,7.6-5.5,11.1       c-2.7,1.9-4.6,4.7-7.3,6.5c-5.2,3.7-11.5,4.4-17.6,5.8c-2.5,0.6-3.9-1.3-5.7-2.4C419,194.3,418,193.7,417,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03E49"),
                d:
                  "M450,185c-0.5-5-0.2-9.6,6-11c2.4,4.4,5.8,0.2,8.6,1.1c0-0.6,0.3-1.3,0-1.7c-0.8-1.7-0.5-3.6-0.6-5.4       c6.5-4.1,13.5-6.7,21-8c0,0.8,1.2,2.5,0.1,2.2c-4-1.1-3.7,1.6-4.1,3.8c1.3,2.3-0.7,2.9-2,3.7c-1.9,1-4.1,1.5-6.3,1.6       c-3.4,0.1-5,1.5-4.8,5.3c0.2,4.7-1.7,6.5-5.8,6.4c-1.9-0.7-2.7-2.8-4.5-3.6c-0.9-0.5-1.9-0.6-2.8,0.1c-1,0.8-0.4,1.7,0.1,2.6       c0.9,1.4,2.6,2.8,0.6,4.6C453.4,187.3,451.5,187,450,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5859"),
                d:
                  "M1634,288c0-1.8,0-3.6,0-5.6c7.6,3.8,15.1,3.4,22.6,3.8c10.4,0.5,20.7,0,31.2,1.6       c11,1.7,22.2,2.7,33.4,3.3c5.2,0.3,11,0.5,16.5,2.2c5.5,1.7,11.8,1.7,17.6,1c6.1-0.7,11.7,1.1,17.2,2.3       c5.1,1.1,10.8,1.8,15.1,1.4c6-0.5,10.4,3.3,16.2,2.5c5.5-0.8,11.3,1.3,17,1.9c7.7,0.9,15.6,0.7,23.1,3.3       c1.4,0.5,2.9-1.5,4.1,0.3c-0.7,3.1-3.2,2.3-5.1,2c-4.2-0.8-8.4-0.7-12.6-1.1c-0.5,0-1.1-0.2-1.6-0.4c-1.1-0.7-2.4-1.2-3.7-1.1       c-10.6,0.9-21.1-1.6-31.6-2.3c-6.5-0.4-12.9-2.6-19.5-2.4c-0.4,0-0.9-0.5-1.3,0c0.5,0.3,0.5,0.8,0.5,1.3       c-5.4,2.5-11.3,2-16.5,0.7c-3.8-1-7-0.7-10.5-0.1c-2.4,0.4-4.6,0.7-6.3-1.6c-1.1-1.5-2.8-1.8-4.5-1.7       c-15.2,1.4-30.1-1.3-44.9-4c-3.8-0.7-8.1,0.8-11.5-2.2c-0.7-0.6-1-0.1-1.6,0.4c-2.4,2.2-6.1,2.1-7.9,1.1       c-6.1-3.5-12.1-0.7-18.1-1.2c-3-0.3-6,0-8-2.9c-0.9-1.3-2.7-1.1-4.2-1.2C1637.4,289.2,1635.4,289.5,1634,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935659"),
                d:
                  "M1634,288c2.5,0,5-0.1,7.5,0c1,0,2.6,0.2,2.7,0.6c1.4,5.1,5.6,3.7,8.6,3.2c3.4-0.6,7.5,2.1,10.4-1.6       c0.2-0.2,1.5,0.1,1.7,0.5c2.4,4.4,7.7,3.7,10,2.5c5.5-3,9.7,1.4,14.6,1.1c5.6-0.3,11.4,1.1,17,2.3c8.5,1.8,17.1,1.6,25.7,1.6       c3.4,0,7-1.7,9.8,3.1c1.2,2.1,6.6-0.9,10.1-1.2c0.8-0.1,1.3-2.4,2.1,0.1c0.6,2,2.6,1.8,4.2,1.8c4.8,0,9.7,0,14.5,0       c4.1,2.3,8.7,1.9,13.1,2.8c3.7,0.7,4,0.8,4.5,3.8c-5.1,1.5-10.4,0.1-15.6,0.7c-0.9-0.1-1.7-0.3-2.5-0.7c-3.8-2.2-8-0.8-12-1.1       c-2.8-0.2-5.5,0-8.3,0c-13.3-1.8-26.9-2.4-40.1-4.5c-7.8-1.3-15.4-1-23.2-1.5c-1.7,0-3.4,0-5-0.7c-4.2-2.5-8.7-0.9-13.1-1.3       c-3.6-0.5-7.5,1.1-10.8-1.4c-3.2-1.8-6.7-2.6-10.4-2.6c-6.5,0-12.9-0.3-19.4,0.3c-1.9,0.1-3.8-0.4-5.7-0.3       c-2.3-0.2-4.8,0.5-6.7-1.4c-0.2-0.4,0-0.8,0.1-1.2c-6.4,2-13-1.9-19.4,0.2c-2.1,0.3-4.1,0.6-5.8-1.1c-0.1-0.3-0.1-0.6,0.1-0.9       c0.1-0.1,0.1-0.2,0.1-0.2c-5.4,1.4-10.6-1-16-0.5c-1.5,0.1-3.8,0.4-4.1-2.2c5.3,0,10.7,0,16,0c2.7,0,5.3,0,8,0       c7.9-1.2,15.6,0.9,23.4,0.9c1.5,0,2.9,0.5,3.6,2.1c2,0.7,4.3,3.3,5.2-1.3C1629.7,286.9,1632.3,288.4,1634,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("874E4F"),
                d:
                  "M1829,306c0.3,0,0.7,0,1,0c6.8,0.5,14.3-0.1,20.3,2.1c10.8,3.8,22.2,1.9,32.7,5.9       c9.3,0.3,18.5,1.4,27.2,5.2c2.6,1.1,5.2,0.7,7.8,0.8c9.7,2.4,19.2,5.1,29,7c0,0,0,0,0,0c1.8,1.8,4.1,2.4,6.5,3.1       c6.2,1.8,12.3,3.9,18.5,5.9c0,0.7,0,1.3,0,2c-2.3,1.3-4.9-1.8-7.1,0.5c-0.7,0.2-1.4,0.2-2.1-0.1c-1.8-1.4-4-1.1-6.1-1.5       c-1.5-0.3-2.9-0.8-4.4-1.2c-9.8-5.7-20.8-6.2-31.7-6.7c-1.5-0.1-2.8-0.8-4.2-1.3c-7.2-2.3-14.6-4.3-22.2-4.4       c-3.9,0.2-7.6-0.1-10.9-2.5c-1.5-1.1-3.4-1.3-5.3-1.4c-8.1-0.2-16.1-2.2-24.2-2.5c-0.5-0.1-1-0.4-1.5-0.6       c-10.2-1.6-20.4-3.9-30.7-5c-1.6-0.2-3.3,0-4.8-1.1c-2-3-1.9-4.8,2.5-4.9C1822.6,305.4,1825.9,304.2,1829,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("925D5F"),
                d:
                  "M1624,291c-1.3-0.3-2.6-1.1-3.8-0.9c-6.8,1-13.4-2.7-20.3-0.5c-0.7,0.2-1.9-1-2.9-1.6       c0.5-2.8,2.7-1.8,4.3-2c4.5-0.4,8.8,0.4,13.4-1.6c3.6-1.5,7.8,2.3,12.2,2C1628.4,286.3,1627.6,288.7,1624,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A5354"),
                d:
                  "M1883,314c-3.2,0.2-6.4,0.1-9.3-1.1c-4.3-1.7-8.8-0.2-13.3-1c-3.1-0.6-6,0.6-8.7-2.7       c-2.4-3-2.3,1.6-4.2,2.5c-0.3-4.2-3.2-3.8-6-3.7c-4,0.1-7.8-0.6-11.5-2c4-0.7,8-0.1,12,0.5c2.1,0.3,4.1,1.2,6-0.5       c7.2,2.6,14.9,3.1,22.3,4.5C1874.7,311.4,1878.9,312.5,1883,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C5B5C"),
                d:
                  "M1947,327c-3.4,1.3-6.8-0.1-9.5-1.2c-6.3-2.6-13.7-1.6-19.5-5.8C1928,321.1,1937.6,323.7,1947,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B5859"),
                d:
                  "M1631.6,284.7c0,0.8-0.4,1.2-1.1,1.2c-0.4,0-0.9-0.4-1.1-0.7c-0.3-0.7,0.2-1.3,0.8-1.5       C1631,283.5,1631.4,284,1631.6,284.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93393E"),
                d:
                  "M1483,285.9c0.5-0.8,1.2-0.9,2-0.9c13.3-0.7,26.6,1.2,39.9,1c5.4,1.3,10.9,0.5,16.3,0.8       c12.9,0.8,25.7,2.5,38.6,2.7c0.5,0,0.9,0.3,1.4,0.6c0.3,0.6,0.3,1.2,0.1,1.8c-0.8,1.1-2.1,1.3-3.3,1.4       c-2.4,0.1-4.9,0.1-7.3-0.4c-4.5-1.2-9.3-1.1-13.8-1.2c-12.9-0.3-25.7-3-38.7-2.3c-3.1,0.1-6.1,0.2-9.2-0.3       c-6.4-0.8-12.9-1.4-19.3-1.6C1487.3,287.4,1485,287.5,1483,285.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4575B"),
                d:
                  "M1581,291c-4.9-2-10.1-1.2-15.1-1.7c-12.5-1.3-25.1-1.6-37.7-2.2c-1.2-0.1-2.4,0.1-3.2-1       c16.1-1.5,32,2.6,48,2c5.7,1.9,11.7,0.7,17.5,1.9c1.7,0.4,3.6,0.1,5.6,0.1c-0.8,1.6-2.1,0.7-3.1,1.1       C1589,293.1,1585,293.1,1581,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE4C57"),
                d:
                  "M2045.1,629c3.7,0,7.3-0.1,10.9-0.9c0.3,0.3,0.7,0.6,1,0.9c0,0.3,0,0.6,0,1c-11,1.2-22,2.1-32.9,3.6       c-3,0.4-6.4-0.7-9.2,1.3c-14,0.3-27.8,2.3-41.8,2.1c-1.9,0.3-4,1.7-5.3-1c3-2.6,7-0.5,10.2-2c2.9-0.5,5.8-0.3,8.7-0.4       c2.6-0.1,5.2,0.3,7.7-0.7c7.9-0.2,15.7-1.5,23.7-0.9c0.3,0,0.6,0,0.9,0c3.3-1.4,6.8,0.4,10.1-1c1.3-0.1,2.6-0.1,3.9-0.2       C2036.9,629.5,2041.1,629.9,2045.1,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1414E"),
                d:
                  "M1968,636.1c1.4,1.6,3.4,0.7,5.1,1c-0.1,0.3-0.1,0.6-0.2,0.8c-5,0-9.9,0.1-14.9,0.1       c-0.7-1.2-3,0.4-3.1-1.8c2-2.3,4.8-1.5,7.3-1.7C1964.2,634.6,1966.4,634.3,1968,636.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3D49"),
                d:
                  "M1893.1,635.9c-3.4,0.1-6.9,0.9-9.1-2.9c0.7-1,1.3-2,2-3c0,0,0,0,0,0c4.3-2.3,3,3.1,5.1,3.7       C1892,634.3,1893.3,634.4,1893.1,635.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1893.1,635.9c-0.8-1-2-0.8-3.1-1c-1-1.9-0.3-4-0.9-6c-0.1-4,4.6-3.2,5.9-5.9c0.8-1.4,2.2-1,3.5-1.2       c3.1-0.4,6.5,1.3,9.3-1.7c0.9-1,2.2,0,3.3,0.4c3.1,1.3,6.3,2.1,9.6,2.7c0.4,0.2,0.7,0.6,0.9,1c0.2,2.1-1,4-0.9,6.6       c2.2-2.2,3.7-1.5,4.7,1c0.7,1.4,2.8,1.9,2.6,4.6c-7.3-0.2-14.6,0.4-22-0.4C1901.6,636,1897.3,636,1893.1,635.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971929"),
                d:
                  "M1905.8,636.1c7.1,0,14.3,0,21.4,0c-0.1-2.8-5.2-0.1-3.3-4.1c1.5-5.5,8.1-9.7,14.3-8.7       c2.2,0.4,4.2,0.4,6.3-0.4c5.4,1,11.1-1.7,16.5,1.1c2,1.6,0.8,2.7-0.6,3.8c-5.4,2.6-11.1,1.9-16.8,1.6c-2.9,1.4-4.9,0-6.8-2.7       c0.5,3.8-2.7,3.4-4.3,4.9c2.6-1.4,5.2-3.8,7.4,0.3c1.9,1.2,4.1,0.9,6.2,1.4c1.3,0.3,2.9,0.4,2.8,2.1c-0.1,1.5-1.6,1.4-2.7,1.4       c-1.2,0.1-2.2,0.5-3.4,0.5c-2.9-0.2-5.9,0.4-8.7-0.4c-0.4,0-0.8,0-1.1,0c-7.3,0-14.6-0.1-21.8-0.2       C1909.3,636.9,1907.4,637.3,1905.8,636.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C14353"),
                d:
                  "M1934.1,637.1c3.3-0.1,6.7-0.2,10-0.3c3.6,0.5,7.3-2.7,10.9,0.1c1.1,0.1,2.3-0.2,3.1,1       c-1.3,0-2.6,0.1-3.9,0.1c-5.1,0-10.2,0-15.4-0.1C1937.2,638,1935.4,638.6,1934.1,637.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3744"),
                d:
                  "M1085,650c-1,0-2,0-3,0c-2.9-2.3-3.8-6.8-8.1-7.6c-4.3-0.7-8.5-2.5-12.9-0.4c-0.3-0.3-0.7-0.7-1-1       c-0.6-2.9,1.2-3.8,3.5-4.2c1.9-0.3,3.9-0.2,5.8-0.9c8.6,0.3,17.2,0.8,25.9,0.7c8.9-0.1,17.7,0.4,26.6,0.2       c12.9-0.3,25.7,2.7,38.7,1.6c1.3-0.1,2.6,0.4,3.5,1.6c0.3,1.8,0.7,3.5,0.9,5.3c0.1,1.2-0.2,2.6-1.7,2.5       c-3.4-0.2-7.5,1.4-9.9,0.3c-7.8-3.5-15.8-1.9-23.7-2.2c-2.7-0.1-5.4-1-7.8,1.6c-1.3,1.5-2.8-1.1-4.6-1       c-0.5,3.7-1.4,6.7-5.5,2.4c-1-1.1-1.4-0.7-1.8,3c-3,0-6,0-9,0c-1.6-3-1.5-3-5.5-2.1c-1,0.2-1.8-0.4-2.7-0.9       C1090,647.2,1087.3,647.4,1085,650z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63A47"),
                d:
                  "M1164,640c-8.1,0-16.2,0-24.3,0c-6.5,0-12.7-3.2-19.4-2c-1.8,0.3-4-1-5.2,1.6c-0.1,0.3-1.3,0.5-1.8,0.3       c-11.2-3.2-22.6-1.5-33.9-1.9c-3.5-0.1-6.8-1.7-10.3-1c-3.4,1.4-7.8-1-10.6,3c-0.2,0.4-1.1-0.5-1.4-1c-1.3,0-2.7,0-4,0       c0-1.3-1-2.6,0-3.9c1.9-1.9,4.3-1.4,6.6-1.4c64.4,0,128.9,0.7,193.3,0.4c1.8,0,3.7-0.5,5.1,1.2c-0.5,2.2-2.4,2.1-4,2.1       c-21.2-0.1-42.4,0.6-63.6-0.4c-1,0-2-0.3-2.8-0.5c1.6,1.8,6.8-1.9,6.4,3.8c-3.1,1.7-6.1,1.7-9.1-0.3c-1.3,0.1-3.5-0.4-3.5,0.9       c-0.1,5.4-3.8,3.5-6.5,3.5c-2.8,0-5.7,0.3-7.7-2.6C1166.7,640.8,1165.1,640.6,1164,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C13C43"),
                d:
                  "M1185,640c3,0,6,0,9,0c1.8-2.6,4.4-3,7.4-3c13.8,0.1,27.5-0.1,41.3,0.1c9.8,0.1,19.5-0.6,29.3-0.3       c2.4,0.1,5.2-0.4,5.8,3.1c-0.5,4.1-3.8,3.6-6.5,3.6c-14-0.2-28.1,0.2-42.1,0c-8.1,0.1-16.1,0-24.2,0.1c-2.8,0-5.6-0.2-8.1,1.5       c-1.7,0.9-3.4,1.8-5.1,2.8c-0.2-1.6,2.2-5.5-2.5-2.8c-1,0.5-2.8-2-4.2,0.5c-0.3,0.5-1.2-0.8-1-1.6       C1184.3,642.5,1184.7,641.3,1185,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M1197,645c-0.2-3.4,2.2-3,4.3-3c9.2,0,18.5,0,27.7,0c1.6,2.3,4,2.5,6.6,2.6c4.1,0.1,8.2-0.6,12.3,0       c3.2,0.4,3.6,0.9,3.6,3.9c-12.2,1.1-24.5,0.3-36.7,0.3c-0.7,0-1.2-0.4-1.8-0.8C1207.4,648.6,1202,647.6,1197,645z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3840"),
                d:
                  "M1213,648c13,0,26,0,39,0c1-1,2.3-1.4,3.6-1.3c7.9,0.4,15.8-0.7,23.7-0.7c5,0,3.5,1.7,1.7,4       c-10.7,0-21.3,0-32,0c-0.7,0-1.3,0-2,0c-2,0.9-4,0.7-6,0c-7.9,0-15.8,0-23.7,0C1215.7,650,1213.5,650.8,1213,648z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93745"),
                d: "M1241,650c2,0,4,0,6,0C1245,652.3,1243,651.5,1241,650z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C23947"),
                d:
                  "M1281,650c0.6-3.4,0.6-3.8-2.9-3.1c-8.7,1.6-17.4,1-26.1,1.1c-1.8-3.2-5-2-7.6-2.2       c-3.8-0.2-7.7,0-11.5,0.2c-3.1,0.2-4.3-1-3.9-4c14.4,0,28.8,0,43.2,0c1.7,0,4.2,1.1,4.8-2c2-1.7,3.8-0.8,5.9,0.1       c4.9,2.2,9.4,5.2,14.1,7.9c-0.2,2.2-1.9,2.3-3.3,1.9C1289.4,649,1285.2,650.5,1281,650z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C03F4C"),
                d:
                  "M1297,648c-2.3,0-3.8-1-5.8-2.3c-4.2-2.7-8.7-5.8-14.2-5.7c-0.3-2.5-2.3-2-3.8-2c-20.8,0-41.5,0-62.3,0       c-5.7,0-11.5-0.7-16.9,2c-2.9-4-7.4-2.2-11.3-2.8c0-0.4,0.1-0.8,0.1-1.2c25.1,0,50.1,0,75.2,0c6.4-2.7,12.9-1.1,19.4-1       c0.6,0.2,1.1,0.6,1.5,1.1c1.7,1,3.4,1.9,5,2.9c4.5,2,7.9,6,13,7C1297,646.7,1297,647.3,1297,648z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1B27"),
                d:
                  "M1279,636.1c-0.3-0.1-0.6-0.1-0.9-0.2c0.3-2.3,2.2-1.6,3.6-1.9c7.4,0,14.8,0,22.1,0       c1.8,0,3.6-0.3,5.2,0.9c20.3,0.5,40.7-0.9,61.1,1.1c-0.5,1.3-1.4,0.8-2.1,1C1338.3,636.3,1308.6,635.6,1279,636.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4454F"),
                d:
                  "M1291,236c1.9-0.9,3.7-1.2,5.6,0c1.1,0.7,2.3,1.9,3.4,0l0,0c2.4,2.8,5.5,4.7,8.8,6.1       c4.5,3.8,10.1,5.4,15.2,7.9c2.8,3.6,7.7,3.3,11,6c7.3,7.1,16.9,10.6,24.9,16.4c1.2,0.9,2.1,2.4,3.1,3.6       c-2.2,1.8-4.2-0.6-6.3-0.4c-5.5-3.2-11.6-5.3-16.4-9.5c-3.5-2.7-8.4-3.3-10.5-7.8c-0.3-0.6-1.1-0.7-1.7-0.8       c-5.8-0.7-10-4.5-15-7c-7-3.6-13.3-8.4-20.6-11.3c-1.1-0.5-2.1-1.1-1.8-2.6C1290.7,236.4,1290.9,236.2,1291,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA444B"),
                d:
                  "M1324,250c-5.6,1-9.1-4.6-14.5-4.6c-0.9,0-1.5-2-1.5-3.4c0.1-0.6,0.4-0.9,1-1c0.5-0.2,1.1-0.7,1.3-0.5       C1314.6,244.1,1320,246,1324,250z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB414B"),
                d:
                  "M1309,241c-0.3,0.3-0.7,0.7-1,1c-4.5,0.4-6.4-2.6-8-6C1303,237.7,1306,239.3,1309,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44A53"),
                d:
                  "M1357,275c2.4-2,3.8,1.8,6,1c4.5-0.8,6.3,3.1,9.2,5.2c-0.4,0.3-0.7,0.6-1.1,0.9       c-1.7,0.8-3.5,2.1-5.2,0.1c-1.5-1-3.5-0.7-5-1.6C1359.1,279,1356.6,278,1357,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2646B"),
                d:
                  "M1437,285c1.4,0,2.9,0,3,2c-4.2,3.8-9.4,2-14.2,2.4c-14.2-4.1-29-1-43.4-3.1c-3.2-0.5-6.9,0.3-9.6-2.4       c0.1-1.4,0.9-2.3,2.1-3c4.7,2.6,10,1.3,15,1.8c10.3,1.1,20.7,0.9,31.1,1.3C1426.3,284.7,1431.6,285.1,1437,285L1437,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1437,285c-5.4,1.7-10.7,0.3-16-1C1426.3,284.3,1431.7,283.3,1437,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76C76"),
                d:
                  "M1372.8,283.9c4.3-0.2,8.3,2.1,12.8,0.7c2-0.6,4.7,1.3,7.1,1.3c10.8,0.3,21.7-1.4,32.2,2.1       c0.1,2.2-1.9,1.9-3,2.7c-2.3,1.8-5.6,2.5-6.5,6c-0.3,0.9-1.8,1.8-2.9,1.7c-4.2-0.3-8.3,1.8-12.3,0.7       c-8.4-2.2-16.8-3.1-25.4-2.2c-0.8,0.1-1.6-0.4-2.2-0.9c-1-1-1.4-2.4-2.3-3.7c-0.1-0.6-1,0.1-0.4-0.1c0.2-0.1,0.3,0.1,0.4,0.3       c0.4,1,0.3,1.9-0.6,2.5c-2-0.3-2.3-1.6-1.9-3.2C1369,288.8,1371,286.4,1372.8,283.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36570"),
                d:
                  "M1367,281c0.6,3.5,3.1-1,4.1,1c-0.2,1.3-0.7,2.3-1.8,3.1c-3.8,4.9-10.3,4.3-15.1,7.4       c-2.7,1.8-5-0.5-5.7-4.8c-1.8,0-3.3,1.6-5.2,1.2c-4-1.2-7-4.3-10.6-6.2c-6.4-4.6-13.2-8.7-19.7-13.1c-1.1-0.7-2.4-1.1-2.4-2.8       c1.3-2.4,3-1.6,4.6-0.5c6,3.8,13.2,6,18.5,10.7c5.8,5.1,11.8,4.9,18.5,3.9C1357.1,280.1,1362,281.4,1367,281z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF6C76"),
                d:
                  "M1343.1,288c2.8,0.2,5-3.8,8.2-1.4c0.8,1.7-3.3,2.6-0.8,4.5c1.9,1.4,3.5,0.7,5.3-0.7       c2-1.6,4.3-3.1,7.2-2.5c1.7,0.3,2.9-0.4,3.5-2c0.6-1.6,1.6-1.4,2.7-0.8c-3.1,4.7-6.2,9.3-9.2,14c-1.2,0.8-2.3,0.3-3.4-0.4       c-3.6-2.4-7-5.1-10.7-7.2C1344.6,290.8,1342.6,290.3,1343.1,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA6D77"),
                d:
                  "M1367.9,291.8c0.7,1.1,1.4,2.2,2.1,3.2c0.1,0.2,0.2,0.4,0.2,0.6c-1.7,3.4-5.2,5.2-7.6,8       c-1-0.1-1.9-0.3-1.7-1.7C1362.9,298.3,1365.2,294.9,1367.9,291.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73383C"),
                d:
                  "M1357,298c1,0.4,2,0.8,3,1.2c0,0.6,0,1.2,0,1.8c-2.9,2.5,1,3.1,1.3,4.7c-0.2,0.5-0.5,0.9-0.9,1.1       c-2,0.8-4.1,0.7-6.2,0.4c-1-0.2-2-0.5-2.4-1.7c0.5-1.6,2.8-2.3,2.2-4.4C1354.1,299.2,1354,297,1357,298z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("461214"),
                d:
                  "M1360.9,305c-1.7-0.1-3.8,0.4-4.2-2c-0.5-2.9,2.6-0.7,3.3-2.2c0.3,0.4,0.6,0.7,0.9,1.1       c0.3,1,1.2,1,2.1,1c0.4,0.4,0.5,0.8,0.4,1.4C1362.8,305.5,1362,305.8,1360.9,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1825"),
                d:
                  "M1911,462c-0.3,0-0.7,0-1,0c-0.5,0.8-1.4,0.4-2,1l0,0c-0.8,0.3-1.5-0.2-1.3-0.8       c0.8-3.3-1.3-3.2-3.3-2.7c-3.5,0.8-7.3,1.2-9.6,4.5c-1,1.4-2.5,1.6-3.9,2c-2.7,0.9-2.3-1-2.4-2.7c0.3,2.2-0.4,4.1-2.8,4.5       c-3.3,0.5-6.7,0.7-8.7-2.9c-0.7-2,1.6-5-2-6c-1.1,0.6-1.4-0.4-2-1c-0.3,0.3-0.7,0.7-1,1c-1.5,0.8-2,3.6-4.5,2.5       c-1-0.8-0.1,0.7-0.6,0.6c-5.7,1.4-9.2,0-10.7-4.1c-0.3-1.8-0.4-3.6,1.6-4.7c2.9-1.5,3.9,1.4,5.7,2.4c2,0.2,3-1.3,4.2-2.4       c1.7-1.7,3.5-2.2,5.8-1c2.8,1.5,5.3,2.4,8.8,0.7c2.5-1.3,6-1.7,9-1.1c4.2,0.8,7.7-1,11.5-2.1c0.6-0.2,0.1,0.2,0.4-0.2       c2.3-2.4,2.2,5.3,5.1,1c1.8-2.6,5-0.4,7.6-0.7c5.2,0.2,10.3,1.1,15.5,0.6c1-0.1,2.1,0.3,2.8,1c4.5,4.9,10.2,5.9,16.4,5.2       c0.5-0.1,1.1-0.1,1.4,0.2c5.2,5.8,12.6,3.8,18.9,5.6c1.7,0.5,3.2,0.8,3.7,2.7c-0.6,1.8,4,2,1.5,4.5c-1.6,0.8-3.4,1.1-4.6-0.4       c-2.8-3.6-6.3-2.9-9.9-1.9c-6.5-2-12.7-4.8-19.8-4.3c-2.8,0.2-5.2-1.8-7.8-2.7c-0.8-0.7-1.3-1.7-2.8-1.5       c-5.9,0.6-11.8,0.9-17.7,1C1911.4,459.9,1911.9,461.6,1911,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1876,465c1,0.5,2.1,1.1,3.1,1.5c5,1.7,7.2,0.5,8.4-4.5c1.1,1-0.2,2.7,1.1,3.5c5.2-3,9.5-7.6,16.3-7.6       c4.5,0,4.2,2.1,3.2,5.1c-3.9,4.3-8.5,7.2-14.7,5.8c-1.3-0.3-1.4,0.4-1.8,1.1c-1.6,3.1-4.1,4.4-7.6,4.1       c-0.1-0.8-0.6-2.1-1.4-1.4c-1.9,1.6-3.4,2.8-6,1c-1.4-1-2.4,0.7-2.5,2.1c-0.2,2.6-2.5,3.1-3.9,2.9c-2.7-0.5-5.1-0.7-7.4,1.4       c0.8-2.6,2.4-3.8,4.7-4.1c0.9-0.1,1.5-0.7,1.3-1.7c-0.2-0.8-0.9-1.2-1.5-1.1c-3.2,0.7-7.7-2-9.1,4.7c-2-4.8,1.2-5.4,2.9-6.8       c2.3,0,4.7,1.2,7,0C1872.3,472.6,1874.5,470.9,1876,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1866,461c1.1-0.2,2.5,0.5,2.7-1.7c0.2-2.3,1.5-0.2,2.3-0.3c0.1,2.1,0,3.7-2.8,4.2       c-4,0.8-7.7,3-11.7,0.2c-0.7-0.5-1.5-1.1-1.5,0.5c0.2,5.1-3.3-0.1-4.4,1.6c-1.3-4.8-5.8,0.2-7.8-2.5c0-0.1-0.7,0.2-0.7,0.3       c0,5.9-4.7,5.6-8.1,5.3c-3.9-0.3-4.7-4.5-6.1-7.6c0.7-0.7,1.3-1.3,2-2c3.5-2.8,6.2-6.7,11-7.4c2.1,2,3.8,3.6,6.8,0.6       c2.8-2.8,4.1,1.8,6.3,2.6c0.9,0.3,0.8,2.4,1.8,3.3C1858.4,462.1,1861.8,462.7,1866,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1872,458c0.7,0.3,1.3,0.7,2,1c-1.1,2.2-0.4,4.9-2,7v0C1872,463.3,1872,460.7,1872,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1868,471c-2.3,1.6-4.7,1.6-7,0C1863.3,468.3,1865.7,472,1868,471z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1872,466c-1.4,0.5-2.8,1.1-4.4,1.7C1868.9,465.1,1868.9,465.1,1872,466C1872,466,1872,466,1872,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1810.4,482.6c4-0.5,7.5,0.2,10.2,3.5c0.7,0.9,0.2,2.5-0.2,2.1c-2.4-2.8-7.3,1.6-8.8-3.2       C1811.5,484.3,1810.3,483.9,1810.4,482.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991929"),
                d:
                  "M1812.9,487.2c2.4,2,3.6,3.3,3.3,5.3c0,0.3-1.4,0.6-1.6,0.4C1813.1,491.4,1813.7,489.7,1812.9,487.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7982"),
                d:
                  "M1747,414.9c-6.6-3.9-14-6-21-9c0.4-2.2,1.3-1.9,3.1-1c4.8,2.4,9.7,4.4,14.6,6.4c1,0.4,2.2,0.5,3.3,0.7       c5.3,0.6,9.6,3.9,14.4,5.4c6.7,2.2,12.4,6.9,19.5,7.8c3,1.2,3.8,3.9,4.2,6.6c0.2,1.7-0.7,2-2.1,1.2c-0.3,0-0.6,0-0.9,0.1       c-6-3.2-11.9-6.3-17.9-9.5C1758.8,420,1753,417.2,1747,414.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M1841,452c-4.2,1.5-6.4,6.1-11,7c-2.2-1.1-4-2.6-5.2-4.8c-0.4-0.8-0.2-2.2-0.1-2.1       c4,3.2,3.6-3.1,6.2-2.8c0.8,0.1,1.5,0.3,2.5,0.4c-0.5-2-2.2-1.9-3.3-2.7c-0.6-1.9,1.3-1.3,2-2c0.3-0.4,0.7-0.7,1-1.1       c1-1.6,1.9-3.4,4-3.8c0.7-0.2,1.4-0.2,2.2-0.2c2,0.2,3.7,1.3,5.4,2.2c4.7,2.3,4.9,3.5,1.4,7C1844.6,450.6,1843.2,452,1841,452z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91293F"),
                d:
                  "M1832,445c-0.7,0.7-1.3,1.3-2,2c-5.7,3.3-11.3,6.7-17,10c-0.7-0.6-0.4-1.2,0.2-1.6       c5.5-3.6,11-7.1,16.5-10.6C1830.6,444.3,1831.2,444.8,1832,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871A1F"),
                d:
                  "M1837,441c-1.3,1-2.7,2-4,3c0-1.3-0.7-1.9-2-2c0.7-0.7,1.3-1.3,2-2c0.6-1.9,2.5-2.5,3.8-3.7       c3.8-2.8,7.9-5.2,11.7-8.1c4.9-2.9,9.1-6.8,14-9.8c1.7-0.8,2.9-2.2,4.6-3c1-0.3,1.9-0.3,2.7,0.3c0.3,0.4,0.4,0.8,0.3,1.3       c-2.5,3-5.5,5.6-8.9,7.7c-2.6,1.3-4.4,3.8-7.1,5c-2.8,1.7-5.4,3.9-8.2,5.7c-0.4,0.3-0.7,0.5-1.1,0.8       C1842.4,437.8,1839.7,439.5,1837,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6F74"),
                d:
                  "M1782.9,433c2.4-3.2-0.2-5-1.9-7c0.5-0.7,1.3-1,2.1-1.1c1.9-0.2,3.7-0.2,5.5,0.4c2.7,2.4,7,2.5,8.7,6.3       c-0.6,1.6-1.4,3.1-0.5,5c0.9,2.1-0.6,2-2.1,1.5C1790.5,437.2,1786.7,435.2,1782.9,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D2656D"),
                d:
                  "M1794.8,438.1c0.7-0.3,2.5-0.3,1-1.6c-3-2.6-1-3.5,1.2-4.6c2.3-1.9,4.9-1.4,7.4-0.8       c1.6,1.3,4.3,1.2,4.7,3.9c-4.3,0.7-7.9,3.4-12.2,4C1796.2,438.7,1795.5,438.4,1794.8,438.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC5A64"),
                d:
                  "M1796.9,439.1c0.8-0.2,2-0.3,2.3-0.8c2.2-4.5,6.2-3.2,9.8-3.3c1.5-1.3,3-1.3,4.7-0.5       c0.5,0.4,0.6,0.8,0.5,1.4c-4.1,2.3-8.6,3.2-13.2,4c-0.7,0-1.4,0.1-2.1,0.1C1798.2,439.7,1797.6,439.4,1796.9,439.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8505A"),
                d:
                  "M1837.1,437.1c-0.9,1.6-2.7,2-4.1,2.9c-0.7,0-1.4,0-2,0c-0.9-1.6-3.1-0.4-4-2c0.1-0.2,0.2-0.4,0.3-0.6       c1.7-3,4.7-3,7.6-3.5C1838,433.4,1837.7,435.1,1837.1,437.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8505A"),
                d:
                  "M1801,440c4.2-1.8,8.2-4.1,13-4c4.7-2.1,10.2-1.3,13,2c0,0,0,0,0,0c-6.4,0.4-13-1.2-19.2,1.9       C1805.7,440.9,1803.3,440.2,1801,440z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M1469,402c2.6,0.3,5.3-0.8,7.7,1.1c0.2,0.2,0.6,0.2,0.9,0.2c0.9-5,3.9-0.7,5.9-1.3       c3.4-0.9,4.7,1.1,5.2,4.2c2.4-0.6,0.5-2.9,2.3-3.6c-0.1,0,0.4-0.1,0.5,0c1.4,2.3,2.7,3.9,5.7,1.7c0.9-0.7,4.6-2,4.1,2.3       c-0.1,1,0.8,1.3,1.8,1.2c1-0.2,1.8-2.5,3.1-0.4c1.1,1.7-1.8,1.7-1.3,3.2c4.5,0.7,7.6-4.7,13.2-1.8c0.2,0.3-1.3,1.4-1.1,2.7       c0.3,1.6-0.7,3.7,1,4.6c2.3,1.3,2.8-1.7,4.7-2.5c-0.2,4.4,2.4,8.8-1.7,12.5c-11.4,3.4-22.6,7.1-34.1,10.3       c-5.9,1.7-12.2,2.8-17.8,5.9c-4.2,2.3-8.9,0.2-13.2-0.6c-20.3-3.8-40.5-7.3-61-9.9c-2-0.3-3.8-2.5-6-0.7c-1.9-2.3-2.1-5.3-2-8       c0.2-6.4-1.4-12.8-0.7-19.2c0.2-0.5,0.4-0.9,0.9-1.2c1.7-0.5,3.3-0.4,4.9,0.3c2.7,0.8,5.8,6.4,8-0.7c0.2-0.5,3.1-1,3.7-0.5       c4.7,4.3,9.9-1.2,14.6,1c1.2,0.5,1.2-1,1.4-2c0.4-1.2,1.9-1.1,2.5-0.7c2,1.2-1,0.7-0.6,1.5c0.3,0.6,0.5,1.3,0.9,1.7       c0.6,0.5,1.2-0.1,1.7-0.6c4-3.7,8.5-3.6,13-1.3c2.1,1.1,2.6-0.5,3.7-1.4c4-3.3,6.6-2.8,10,1.7c0.5,0.6,2.1,0.4,3.1,0.6       c-0.2,1.3-3.1,0-2,1.9c0.8,1.3,3.6,1.3,4,0.3c2.2-6.1,5.9-2.9,9.3-1.9C1466.7,403.1,1468,403.3,1469,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("470F16"),
                d:
                  "M1387,403c0.7,9.3,1.3,18.7,2,28c0.4,7.7-1,15.4,1,23c2.4,3.7,1.4,7.8,1.1,11.8       c-0.7,1.9-0.7,3.9-0.7,5.9c-0.1,1.9,0.4,5-1.7,5.1c-2.4,0.1-1.8-2.9-2-4.8c-0.1-1.3-0.3-2.6-0.6-3.9       c-0.6-5.9-0.9-11.9-0.5-17.9c0.2-2.8,0.3-5.7-0.6-8.4c-0.7-4.4-0.3-8.9-0.4-13.3c-0.3-8.5-1.7-17-0.9-25.6c0.1-1.6,0-3.3,1-4.8       c0.5-0.4,1-0.6,1.6-0.5C1388.8,399.1,1388.3,401,1387,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C141F"),
                d:
                  "M1390,466c0-4,0-8,0-12c5,0.7,10,1.3,15,2c2.5,1.4,6,0.3,8,3c-1,1.1-2.2,1.9-3.7,2.3       c-6.4,1.9-12.7,4.4-19.3,5.9C1389.5,466.8,1389.5,466.4,1390,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1625"),
                d:
                  "M1478.2,445.6c-0.6,2-0.7,2.3-0.8,2.6c-1.7,2.6-3.1,6.5-6.3,6.3c-3.7-0.3-0.8-5.1-3.2-7.2       C1471.3,448.3,1474.5,449.4,1478.2,445.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1532,426c-0.1,1.1,0.3,2.6-1.3,2.7c-2,0.2-1.6-1.5-1.7-2.7C1530,426,1531,426,1532,426z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1444.1,392c-9.9,2.4-20,4.4-30.1,6c-2.3,0.9-4.8,0.8-7.1,1.3c-5.8,1.3-9.3-2.5-12.6-6.5       c-0.7-0.8-1.1-2.3-2.6-1.1c-0.9,0.7-1.1,3-2.8,1.8c-1.4-1.1-1.2-3.1-0.6-4.6c0.6-1.3,3.1-2.2,0-3.7c-0.3-0.2-1.2-1.1-1.9-1.7       c-0.4-0.7-0.6-1.4-0.7-2.2c0.2-4.1-1.9-8-0.7-12.1c0.9-1.7,0.8-4.7,4.2-3.1c1.2,1.6,0.5,3.5,0.7,5.3c0.2,2-0.6,4.7,3.1,4.3       c0.8-0.1,1.9,0.7,1.8,1.4c-0.3,2.8,3.1,2.9,3.2,3.7c1,3.8,2.6,1,3.9,0.7c0.5-0.1,1.3-0.3,1.4,0c2.3,4.2,5.4,1,8.2,0.9       c0.8,0,1.8-0.2,2.5,0.1c3.4,1.8,5.6-0.1,7.7-2.3c0.8-0.1,2.1-0.1,2.2,0.7c0.5,4.5,3.4,4.1,6.8,4c3.4-0.1,6.4,1.3,8.3,4.4       C1440.2,391.4,1442.8,390.4,1444.1,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1626"),
                d:
                  "M1387,384c0.4-0.3,0.7-0.6,1.1-1c0.9,1.5,1.5,3.6,3.6,1.2c0.3,0.3,0.9,0.7,0.9,1       c-0.2,0.9,0.1,1.9-0.8,2.7c-2.7,2.4-2.7,2.5-2.7,5.3c2.5-5.6,3.7-4.7,6.8,0c2.8,4.1,7.8,7.5,14,4.9c1.1-0.5,2.6-0.1,4-0.1       c-6.2,2.7-13.1,2-19.4,4c-0.9,0.3-2,0.1-2.6,1c-1.3,0.9-2.6,0.9-4,0c-0.4-4.7-3.1-9-2.4-13.9       C1385.8,387.3,1385.5,385.4,1387,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("85182B"),
                d:
                  "M1514,400c-15.4-0.3-30.5-2.5-45.7-4.8c-2.8-0.4-5.7,0.4-8.3-1.2c-0.6-0.6-0.6-1.2-0.3-1.9       c3.3-1.4,6.4,0.4,9.6,0.3c1.7,0.3,3.3,0.3,5,0.2c0.5,0,1,0,1.5,0c4.5,0,9,0.2,13.5-0.1c6.3-0.4,12.2,0.8,17.8,3.3       c3,1.3,6.4,0,9.2,1.7C1517.6,400.2,1515.4,399.8,1514,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1514,400c1-0.7,2-1.3,3-2c0.2-0.1,0.4-0.3,0.6-0.4c5.2,0.5,10.3,0.9,15.5,1.9c0.8,0.6,1.4,1.4,1,2.5       c-3.7,0-7.3,0-11,0C1520,401.3,1516.8,401.5,1514,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("85182B"),
                d:
                  "M1444.1,392c-1.6-1-4.7,2.1-5-2c3.3-1.2,6.8-1.4,10.2-1.3c1.7,0,3.5,1,4.2,3c0,0.5-0.1,0.9-0.5,1.3       c-1-0.3-2,1.2-3,0c-1.5-1.3-3.5,0.1-5-1C1444.7,392,1444.4,392,1444.1,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1453,393c0-0.3,0-0.7,0-1c2.3-1.8,4.7-1.8,7,0c0,0.7,0,1.3,0,2C1457.7,393.6,1455.1,394.9,1453,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F121F"),
                d:
                  "M1469.2,402.3c-2-1.8-4.4-0.8-7.6-2.4C1465.1,400.4,1467.7,398.6,1469.2,402.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831726"),
                d:
                  "M1445,392c1.7,0.2,3.6-0.7,5,1C1448.3,392.7,1446.4,393.6,1445,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB1E2B"),
                d:
                  "M1587.9,399c-5.3,1-10.6,2-15.9,3c-0.4,0.3-0.8,0.4-1.3,0.2c-1.8-1.2-1.1-2.7,0.3-5.5       c-5.1,4.9-7.7,2.9-10.1-1.1c-1-1.7-2.4-3.2-3.5-4.8c-0.9-1.3-2-2.3-3.7-1.9c-4,0.8-7.8-0.6-11.8-0.7c-0.4-0.3-0.7-0.8-0.9-1.2       c-0.7-3.5,2-2.9,3.9-3.3c3.2-0.1,6.4,0,9.6,0.4c0.7,0,1.3,0,2,0.2c1.7,0.4,3.3,0.8,4.6,2c1.1,0.8,2.3,1.5,3.6,2.1       c8.3,4.1,16.9,6.5,26.2,6.3c1.8,0,3.7-0.2,5.1,1.3C1593.7,397.9,1590.1,396.6,1587.9,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE676F"),
                d:
                  "M1596,396c-11.6,0.6-22.7-1-32.9-7.2c1.3-3.5,4.3-2.9,7-2.7c2,0.2,3.9,0.7,5.8,0c1.3-0.3,2.6-0.3,4,0       c5.2,1.2,10.8,0.4,15.9,2.3c1.1,0.8,1.5,2,2.4,3c1.8,2,0.4,2.9-1.2,3.9C1596.7,395.5,1596.3,395.7,1596,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB707B"),
                d:
                  "M1713,400c-1.1,0.1-2.4-0.1-3.1,1.1c-11.8-3.3-23.7-6.1-36-7c-8.3-1.7-16.7-1.7-25-2.2       c-6.3-0.9-12.6-0.1-18.8-0.4c-1.1-0.3-1.7-0.7-0.8-1.9c6.4-2.1,13-0.6,19.4-1c9.3,0.2,18.5,0.5,27.7,1.9       c9.7,1.6,19.3,3.2,29,5.1C1708.4,396.2,1711.6,396.6,1713,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE6B73"),
                d:
                  "M1629,390c0.3,0.3,0.6,0.7,1,1c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3       c-5.5,0.9-11.1,1.2-16.7,1.1c-2.7,1.2-5.7-0.6-8.3,1l0.1,0c-1.6,1-3.5-0.2-5.1,0.9c-1,0.1-2,0.2-3,0.3c2.6-2.6-1.7-4-1.1-6.2       c2.2-2.1,4.7-0.8,7.1-0.7c7.7,0.3,15.5,1.5,23.2,0.7C1627.4,389,1628.3,389.2,1629,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1630,392c0-0.3,0-0.6,0-0.9c6.3,0.4,12.7-1,19,0.9C1642.7,391.9,1636.3,391.9,1630,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE676F"),
                d:
                  "M1605,394.1c2.5-2.2,5.5-0.7,8.3-1C1610.7,394.4,1607.8,394.1,1605,394.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE676F"),
                d:
                  "M1600,394.9c1.5-1.6,3.3-0.7,5.1-0.9C1603.6,395.4,1601.8,394.9,1600,394.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1B2C"),
                d:
                  "M1571,402c0.3,0,0.7,0,1,0c-0.3,0.7-0.7,1.3-1,2c-12.5,2.1-24.7-0.5-37-2c-0.3-0.7-0.7-1.3-1-2       c-0.6-1.5,0-2.5,1.2-3.4c5.5,0,10.6,1.9,15.8,3.1c5.4,1.6,10.9,0.4,16.3,1C1568,400.9,1569.6,401.1,1571,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1674.8,395.9c3.2,0.4,6.5-0.7,9.4,1.4C1681.2,396.8,1677.7,399.2,1674.8,395.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1682,399.1c-1.9,0.8-2.8,1.1-3.6,1.6c-0.9,0.5,0.5,2.6-1.5,2.4c-0.3,0-0.6-0.7-0.9-1.1       c1.3-0.6,0.7-2.7,2.4-2.9C1679.2,399,1680,399.1,1682,399.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76068"),
                d:
                  "M1713,400c-7.5-4.2-16-4.3-24.1-6c-4-0.8-8-1.4-11.9-2c-0.8-0.8-1.7-1.5-2.7-2.2       c-2.9-1.8-3.7-3.9,0-5.7c2.1-0.8,4.3-1.4,6.5-1.4c1.8-0.1,3.7,0.1,5.5-0.3c1-0.2,2.1-0.5,2.9,0c4,2.3,7.3,6,12.1,6.9       c8.8,2.3,17.7,3.8,26.9,3.5c3.1-0.1,5.7,1.3,8.6,2.6c8.7,3.9,17.1,10.2,27.9,6.5c2.4-0.8,5.4,1.1,8.2,1.3       c0.5,0.2,0.9,0.5,1.2,0.9c0.1,2.5-1.8,2.8-3.6,3.3c-2.7,0.7-5.3,1.7-7.6,3.3c-2.8,1.5-5.2-0.3-7.4-1.3       c-3.8-1.8-8.5-0.9-11.7-4.2c-2.1-0.1-4.2,0.1-6.1,0.7c-1.1-1.8,1.1-1.4,1.1-2.4c-8,1-15.2-2.9-23-3.3       C1715,400,1714,400,1713,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5666D"),
                d:
                  "M1744,405c6.7,0.4,12.3,4.5,19,5c1.1-1,2.4-1.2,3.7-0.8c5.4,1.4,11,1.9,16.2,3.9c2,2,5,1.3,7.1,2.8       c1.4,3.1,3.8,5.3,6.5,7.3c0.8,0.6,1.7,1.4,1.5,2.4c-0.3,1.3-1.7,1.5-2.8,1.6c-2.1,0.2-4.3,0.3-6.2-1.1c-2,0-4,0-6,0       c-4.3-1.7-8.2-3.3-11.9-7.1c-3.2-3.3-9.1-5.7-14.8-5.5c-1,0-3.2,1.4-3.3-1.4c-2.4-1.3-4.7-2.9-7.2-4       C1744.1,407.4,1744,406.3,1744,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC7379"),
                d:
                  "M1753,412c2,1.6,4.7,0.6,6.5,0.4c5-0.5,7.4,5.2,12.1,4.1c0.1,0,0.4,0.1,0.4,0.3c1.3,5.9,7.4,6.1,11,9.3       c-0.7,0-1.3,0-2,0c-4.4-0.9-8.9-0.8-12.3-4.9c-1.9-2.3-6.4-0.1-9-2.7c-3.5-3.6-8.6-4.2-12.8-6.4C1749,412,1751,412,1753,412z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24B56"),
                d:
                  "M954,114c2.1,3.4,6.5,1.6,9,4c-1.4,1.7-4.2,0.7-5.4,2.8c-0.4,0.3-0.8,0.6-1.3,0.7       c-1.3,0.1-2.9,0.2-3.9-0.4c-9.1-6-19.2-2.7-28.9-3.1c-11.7-0.5-23.4,1.6-35.2,0c-5.7-0.8-11.9-1-17.8,0.3       c-3.3,0.7-6.6,0.4-9.9,0.1c-9.8-0.9-19.6-0.2-29.1,2.4c-4.9-0.5-9.9,0.6-14.7-1.1c-2-0.7-3.7,1.2-5.7,1.4       c-4.5,0.3-9,0.6-13.4-0.3c-1.3-0.3-2.8-1.1-3.9-0.5c-4.7,2.3-9.7,1.5-14.6,2c-5.8,0.6-11.6,1-17.3,1.6c-3.9-0.1-7.4,0-11.3,1.9       c-2.5,1.2-7.3,3.5-11,0.5c-1-0.8-2.2-0.5-3.3,0c-5.8,2.4-11.7,0.8-17.6,0.7c-0.8,0-1.5-0.6-2-1.3c-0.6-1.4-0.6-2.7,0.4-3.9       c3-1.7,6.2-1,9.3-0.8c5.7,1.1,11.1,0.6,15.8-3.3c1.7-0.8,3.5-0.7,5.4-0.5c1.8,0.8,3.5,1.1,5.7,0.5c5.4-1.5,11.1,0.4,16.6-1.1       c0.5-0.1,1-0.2,1.3-0.5c3.2-3.2,7.6-1.7,11-1.7c7,0.2,14-1.1,21-0.3c7.1,0.9,14.3,1.2,21.4-0.1c1.7-0.3,3.2-0.1,4.9,0.2       c4.3,0.8,8.6,1,12.9-0.2c2.6-0.7,5.3-1.4,7.9-1.1c7.7,1.1,15.4-1.9,23.1,0.2c0.8,0.2,1.7,0.5,2.4,0c5.5-3.5,11.9-2.3,17.3-1.5       c7.8,1.2,15.5,1.5,23.1,1.4c8.3-0.1,16.5,1.5,24.8,0c1.8-0.3,3.7-0.2,5.2,1.1c1.3,0,2.7,0,4,0c1-0.8,2-0.8,3,0       C953.3,114,953.7,114,954,114z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64650"),
                d:
                  "M748,118c-2,0-4,0-6,0c-5.6,2.5-7.3,2.6-13.6,1c0.3,0.6-0.4,0-0.3,0.1c1.1,1.2,2.8,2.3-0.2,3.3       c-0.3,0.1-0.6-0.1-0.9-0.4c-3.3,0-6.7,0-10,0c-5.5-1.8-10.5,1.9-15.9,1.2c-0.7,0.1-1.5,0.1-2.2,0.1c-4.2-0.1-8.2,0.7-12,2.5       c-4.7,2.3-9.8,1-14.7,1.3c-5.5,0.4-10.9,0.6-15.7,3.7c-0.6,0.4-1.2,0.8-1.8,0.7c-10.7-2.1-19.8,6.3-30.4,4.9       c-0.8-0.1-1.5,0.5-2.3,0.9c-0.4,0.2-0.9,0.4-1.4,0.5c-2.6,0.4-5.6-0.5-7.6,2.4c-0.9,1.2-2.9,1.3-4.2,0.9       c-4.3-1.3-8.6,0.3-12.9,0.2c-2.8-0.1-5.5-0.1-8,1.5c-0.8,0.3-1.6,0.4-2.4,0.5c-2.5-0.1-5.3,0.7-7.5-1.3c1.1-2.1,2.8-3.3,5.2-3       c6.5,0.8,12.6-1.5,18.3-3.8c2.9-1.1,4.1,1.3,6.3,0.6c3.8-1.1,7.2-4.4,11.7-2.1c0.5,0.3,1.3-0.4,0.9-1.3       c-1.1-2.5,0.9-2.3,2.1-2.1c5.3,0.7,10.4,0.4,15.2-2.1c2.4-1.2,5.9,1.6,7.3-2.4c2.7-0.3,5.3-0.7,8-1c9.8-2.1,19.7-3.2,29.5-5.2       c6.7-1.4,13.7-1.6,20.5-1.8c10.1,0.4,19.9-3.1,30-2c5.3,0,10.7,0,16,0C749.7,117.2,749.7,118,748,118z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4953"),
                d:
                  "M946,114c-13.4,0.7-26.8,0.4-40.2-0.2c-4.2-0.2-8.8,1-12.8-1.5c-0.9-0.5-2.6-0.7-3.4-0.2       c-4.2,2.8-9.7-2.1-13.7,2.5c-0.6,0.7-3.1-0.6-4.7-0.6c-10,0-19.9-0.4-29.9,1.7c-4.3,0.9-9.3,1.3-13.7-0.8       c-1.3-0.6-2.1,0.2-3,0.3c-7.2,0.5-14.6,2.7-21.5-1.3c6.3-1.8,12.8-2,19.3-2c8.3,0,16.6,0.4,25-1.2c3.8-0.7,8.6-1.6,12.7,0.6       c0.3,0.2,0.7,0.5,0.9,0.4c5-2.8,10.3,0.5,15.5-0.7c7.1-1.7,14.2-1.5,21.2,0.6c0.8,0.2,1.7,0.5,2.4,0.3c7.3-2.5,14.6,0.4,22-0.4       c6.9-0.8,14.3,0.7,21.6,0.5C945,112,945.8,112.6,946,114z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4852"),
                d:
                  "M748,118c0.8-0.4,1-1.2,1-2c7.3,0,14.7,0,22,0c-4,2.3-8.3,3.2-12.9,2.1c-1.6-0.4-3.5-0.5-5.2,1       C751,120.8,749.2,120.2,748,118z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4953"),
                d:
                  "M953,114c-1,0-2,0-3,0c0.1-0.8,0.2-1.7,1.3-1.8C952.6,112,952.9,113,953,114z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD434D"),
                d:
                  "M703,118c-2.9,3.2-6.9,1.7-10.1,1.6c-10.7-0.4-20.4,4.9-31.1,4.6c-2.8-0.1-5.6,2.9-8.8,0.8       c0.8-1.8,1.7-3.2,4-3c4.8,0.5,9.5-1,14.3-0.8c2.6,0.1,3.1-2.7,5.5-2.6c3.8,0.1,7.5-0.4,11.3-0.6c3.3-0.2,6.5,0.5,9.6-1.6       C699.4,115.2,701.5,116.4,703,118z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D65763"),
                d:
                  "M1483,285.9c8.7,0.4,17.4,0.3,26,2.1c-4.9,2.9-10.2,0.9-15.3,1.4c-0.5,0-1.2-0.3-1.4-0.1       c-0.5,0.7,0.4,0.7,0.7,1c0.8,0.6,1.7,0.9,2.5,1.3c4.9,2.3,9.8,4.5,13.8,8.3c0.2,0.8,0.1,1.5-0.2,2.2c-1.1,1-2.5,1-3.7,0.5       c-7.1-3.1-13.9-6.8-20-11.5c-0.5-0.4-0.7-1.1-0.8-1.7C1485.3,287.5,1482.3,287.7,1483,285.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1918"),
                d:
                  "M1484.8,289.2c6.1,4.2,12.5,7.9,19.1,11.3c1.6,0.8,3.2,1.7,5.1,1.6c2.2-0.5,4.1,0.6,6.2,1.2       c0.9,0.4,1.8,0.9,2.1,2c-0.3,1.2-1.2,1.5-2.3,1.7c-3.2,0.5-5.9-1.3-8.8-2c-3-1.4-6.1-2.7-9.1-4.2c-1.2-0.7-2.4-1.3-3.7-1.9       c-2.6-1.4-5.3-2.6-8-4.1c-1-0.7-1.9-1.4-1.6-2.9c0-0.6,0.1-1.3,0.1-1.9C1484.2,289.8,1484.5,289.5,1484.8,289.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8616B"),
                d:
                  "M1421,289c1.4-0.2,3,0.5,4-1c5,0,10.1,0.2,15-1c4.8,0.2,9.6,0.4,14.4,0.6c0.9,1.8-2.4,0.6-1.4,2.4       c3.4,3.4,3.4,3.7-0.8,6.9c-6.5,1.1-13,0.4-19.6,0.5c-3.9-0.4-7-2.6-10.3-4.3C1420.5,292.2,1420,290.8,1421,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E85762"),
                d:
                  "M1453,296c1.4-2,1.4-4,0-6c4.3,0,8.6,0,12.9,0c1.4,0,2.7-0.7,3.7,1.3c0.5,1,2.7,1.8,3-0.8       c0.1-0.8-2-1.8,0.3-2.5c1.5-0.4,2.2,0.1,3.3,1c2.1,1.8,4.4,4,7.7,3.1c0.7,0.7,1.4,1.4,2.1,2.1c0.1,2.5-1.6,2.7-3.4,2.8       c-1.1-0.7-2.2-1.7-3.6-0.7c-1.4,0.3-2.2-5.5-4.1-0.4c-0.5,0.6-1.2,1-2,1.2c-5.5,0.6-11.1,0.5-16.6,0.3       C1455,297.2,1453.8,297,1453,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE424D"),
                d:
                  "M462,182c4.8,1.1,4.9-2.6,4.8-5.4c-0.1-5.7,0.2-6.2,5.9-6.7c3.1-0.3,6.7-0.1,8.3-3.9       c3.5,0.4,6.6-1.4,9.1-3.1c2.2-1.5,4.4-2.5,6.6-2.7c6.8-0.5,12.8-4,19.3-5c7.5-1.2,14.3-5.4,22-5.2c0,0.7,0,1.3,0,2       c-3.3,3.2-7.7,3.5-11.7,4.9c-7.5,2.6-15.3,4.6-22.5,8.2c-0.4,0.3-0.8,0.4-1.3,0.5c-4.7-0.9-8.9,0.2-12.8,2.7       c-5.3,3.4-11,6-16.9,8.3c-1.6,0.6-3.3,1.2-2.3,3.5c0.2,0.4,0.3,0.8,0.5,1.3c0.3,0.9,0.6,1.9,0.8,2.8c0.3,1.5,1.5,3.4-0.4,4.5       c-1.7,1-4.2,0-4.8-1.1C465.5,185.2,461.2,185.6,462,182z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74551"),
                d:
                  "M503,165c-0.1-4.2,4.6-3.6,5.9-3.9c9.9-2.5,19.2-6.8,29.1-9.1c4.1-1.8,9.3-0.6,12.7-4.6       c1.8-2.1,4.2,0,6.6-0.6c6.8-1.8,13.5-4.2,20.7-4.8c2.7,0,5.3,0,8,0c1.6,1.2,1.3,2.8-0.4,2.6c-9.7-1.2-16.9,6.3-26.1,7       c-6.3,0.5-12.3,2.4-18.1,4.6c-10.5,3.9-21.6,5.6-32.3,8.8C507.2,165.7,505,166.7,503,165z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("864F55"),
                d:
                  "M115,555c-3.4-8.8-9.3-16-14-24c-0.7-1.3-1.3-2.7-2-4c0-1.1-0.2-2.2,0.9-2.9c3.8,2.3,5.1,6.6,7.7,9.9       c3.3,5.9,7.2,11.5,10.2,17.5c0.4,1.5,1.9,2.8,1.2,4.6C116.8,559,116.5,554.6,115,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("563334"),
                d:
                  "M95.1,527.1c1.3,0,2.6,0,3.9,0c-0.1,1.9-1.4,2.7-3,2.5C94.7,529.4,95.1,528,95.1,527.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("50131C"),
                d:
                  "M142,519c-1.5-0.9-3.2-1.1-5-1c-3.6,0.8-7.2,0.2-10.7-0.8c-3.7-1-7.3-1.8-11.1-2.2       c-4.2-0.9-8.7-0.8-12.2-4c-0.7,0-1.3,0-2,0c1.7-3.1,3.8-5.2,7.8-5c3.1,0.2,4.1-1.5,2.8-4.5c-2.2-5.3-3.4-11.2-9.3-14       c-0.9-0.5-2-1.3-1.2-2.8c0.9-0.6,1.8-0.6,2.8-0.4c4.9,2.2,10.2,2.8,15.5,3.6c1.8,0.3,3.6,0.7,5.2,1.6c1.1,1,1.3,2.3,1.3,3.6       c0.1,3.7,0.7,6.9,4.8,8.1c1.1,0.3,1.8,1.5,2.2,2.6c1.2,3.3,3.7,5.4,6.5,7.2C142.6,513,143.6,515.6,142,519z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("552025"),
                d:
                  "M104,485c-1,0-2,0-3,0c-1.2,0.2-2.2,0-3-1c-1.3-0.7-3-1-3-3c-1.6-5.6,3.3-8.7,5.3-12.8       c3.2-6.9,7.7-13.3,8.7-21.1c1-2.2,1.9-4.4,5-4c3-1,6-2,9-3c0.7,1,1.3,2,2,3c-1.2,1.8-2,3.8-3.3,5.5c-4.3,5.5-7.1,11.7-8.1,18.7       c-0.2,1.4-1.3,2.3-1.9,3.4c-1.3,2.4-2.9,4.9-0.8,7.7C106.6,478.5,104.8,481.2,104,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("47171A"),
                d:
                  "M98,484c1.1,0,2.3-0.2,3,1c6.9,3.4,9.9,9.6,12.1,16.5c1.1,3.3,1.7,6.1-3.2,5.7c-3.8-0.3-6.2,2-8.9,3.9       c-6.4-2.6-8.2-5.4-6.8-12.3c0.7-3.5,1.1-6.9,0.7-10.4C94.6,485.6,96,484.7,98,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("59272C"),
                d:
                  "M106.9,534.1c-3.1-2.8-4.8-6.6-7-10c-1-1.7-2-3.4-3-5c1.4-0.1,2-0.7,1.5-2.2c-0.5-1.4,0.5-1.6,1.5-1.8       c2.9,1,1.4,5.4,4.6,6.2c1.6,1,2.3,3,4.2,3.6c0.4,0.2,0.7,0.3,1.1,0.6c0.5,0.8,1.1,0.6,1.7,0.1c1,0,1.6,0.5,1.9,1.4       c0.4,2.6,1.2,5.1,0.1,7.7C111.3,536,109,536.2,106.9,534.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1F27"),
                d:
                  "M105,522c-2.4,0.2-4.2-0.1-4.1-3.3c0.1-1.2-0.6-2.5-0.9-3.7c0.5-1.7,1.8-2.8,3-4c4,1,8,2,12,3       c-2.9,3.5-4.9,7.4-5,12c-0.3,0-0.7,0-1,0C107.4,524.9,106,523.6,105,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("503030"),
                d:
                  "M97.9,524c-0.1,0.8-0.3,1.5-0.8,1.2c-0.5-0.3-0.8-0.9-1-1.5c-0.1-0.4,0.2-1.1,0.7-0.8       C97.4,523.1,97.7,523.7,97.9,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A131E"),
                d:
                  "M273.9,375.1c0.4-0.8,1.2-1.1,2.1-1.1c0.2,0.1,0.4,0.1,0.6,0.2c1.1,0.8,1.6,2,2.4,3       c1.6,2,3.2,3.9,5.3,5.3c0.6,0.5,1,1,1.2,1.7c0.1,0.8,0,1.5-0.5,2c-4.2,0.6-5.8-2.8-8-5.3l0,0       C276.4,378.8,272.9,378.2,273.9,375.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96243D"),
                d:
                  "M269.9,370c-2.2-3.2-2.1-7.1-2.9-10.7c-0.3-1.4-0.3-3.1,1.9-3.3c0,4.4,0.8,8.7,2,13       C270.7,369.4,270.6,370,269.9,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3A51"),
                d:
                  "M269.9,370c0.3-0.3,0.7-0.7,1-1c1.2,1.9,1.2,4.4,3,6.1c0,2.5,3.1,3.4,3.1,5.9c-3.1-1.4-4.1-4.6-6.1-6.9       C270.6,372.7,270.2,371.4,269.9,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152E"),
                d:
                  "M276,373c1-1.5,2.6-0.9,4-1c0.1,0.2,0.1,0.4,0.2,0.7c-1,1.6-2.5,1.9-4.2,1.4c0,0,0,0,0,0       C276,373.7,276,373.3,276,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D84F58"),
                d:
                  "M1089,141c5,1.3,10,2.7,15,4c3.2,0,4.6,3.4,7.8,3.8c2.6,0.3,4.9,1.9,7.6,2.2c5.7,0.6,5.7,0.6,3.8,5.8       c-1,3.4-3.4,4.7-6.8,4.5c-4.3-1-8.5-2.1-12-5.1c-2.3-2.1-5.9-0.1-8.5-1.7c-4-6.4-10.9-6.1-17-7.1c-4.4-0.7-8.5-1.1-12-4.2       c-1.5-1.3-3.9-0.5-5.8-0.8c-6.5-4.6-14.7-4.4-21.8-7.4c-4.4-1.9-9-2.9-13.9-2.3c-2.1,0.3-4-0.2-5.1-2.3c-1-1.9-2.5-3-4.8-2.8       c-3.7,0.3-7.3-0.7-10.7-1.7c-4.3-1.3-8.1-0.9-12,0.9c-1.3,0.3-2.6,0.3-3.7-0.5c-1.4-2.4,0.8-2.5,2-3.3c5-1.5,10.6,0.3,15.3-2.8       c1.2-0.8,1.8,0.1,1.4,2.2c-0.3,1.2,0.4,1.7,1.2,1.5c9-2.2,16.2,5.8,24.6,4.5c5.8-0.9,11,1.4,15.9,2.6       c4.3,1.1,10.4-0.8,13.9,4.3c1.1,1.5,3.8,0.5,5.8,0.6c2.4,0.1,5-0.5,6.9,1.8c0.6,0.7,1.3,1.6,2.6-0.6c1.8-3.1,3.4,2.2,5.8,1.2       c-0.1,2.3-2.6,1-2.8,3C1084.1,143,1086.5,140.1,1089,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8515A"),
                d:
                  "M991,123c-0.6,1-2.2,1.4-2,3c-3.1,2.3-6.3,1.4-9.4,0.1c-2.7-1.1-5.3-1.8-8.2-1c-6,1.6-9.7-3-14.4-5.1       c1-3.6,4-1.3,6-2C972.2,120.2,981.8,120.4,991,123z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M588,618c-0.7,0-1.3,0-2,0c-5.3,3.5-6.4,6.3-5.1,12.7c0.3,1.8,0.6,3.9-1.7,4.6       c-2.2,0.6-4.8,2.4-6.2-1.3c0-5.2,0.1-10.3,0-15.5c-0.1-2.9,0.3-5.1,4-4.5c2,0.3,3.4-1.1,5.6-1.9c-0.5,2.8-0.4,5.2,3.4,4.1       C586.8,615.9,587.5,617.1,588,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661514"),
                d:
                  "M631.9,624.1c-0.6,0-1.3,0-1.9,0c-4.4-2.7-8.7-5.4-13.1-8.1c-1.7-2.1-3.6-3.8-5.8-5.2       c-0.5-0.1-0.8-0.4-0.9-0.9c-0.4-0.7-0.7-1.3-1.1-2c-0.9-1.1-0.4-1.8,0.7-2.3c1.9-0.2,3,1.1,4.2,2.2c5.5,5.5,11.7,10.1,19,12.9       c1.1,0.4,2.2,0.8,2.2,2.3C634.4,624.1,633.1,624.1,631.9,624.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3B47"),
                d:
                  "M590.1,583c1.3,1.7,2.6,3.4,3.8,5.1c4.9,3.5,8,8.3,9.9,13.9c-3.2,0.4-5.4-0.4-5.9-4.2       c-0.4-3.6-4.9-3.5-6.4-6.7c-1.5-3-2.6-5.9-3.5-9.1C589.1,581.4,589.5,582.5,590.1,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("711618"),
                d:
                  "M603.8,602c-3.3-4.6-6.6-9.3-9.9-13.9c0.9-0.5,1.1-1.3,1.2-2.2c4.8,2.3,5.9,7.7,9.3,11.2       c0.4,0.5,0.7,1.1,1.1,1.6c0.6,1.1,1.3,2.1,2.2,3c1,1.3,2.8,2.2,2.5,4.3c-0.8,0.4-1.1,1.1-1.1,2c-0.3,0-0.7,0-1,0       c-1-0.2-1.5-0.7-1.2-1.8C605.9,604.7,604.8,603.4,603.8,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF3444"),
                d:
                  "M571,634c-1,0-2,0-3,0c-1-0.7-1.2-1.7-0.9-2.6c1.3-4.1,2.1-8.4,2.1-12.8c0.6,0,1.2,0.1,1.8,0.1       C571,623.8,571,628.9,571,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M610.2,609.9c0.3,0.3,0.6,0.6,0.9,0.9c0,1.6,2.8,3.2,0.5,4.7c-1.9,1.3-3.1-0.9-3.9-2       C606,611,608.9,610.9,610.2,609.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03641"),
                d:
                  "M590.1,583c-0.7-0.3-1.4-0.6-2.1-1c-2.2-1.1-1.2-3.4-1.9-5.1C588,578.5,589.3,580.6,590.1,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3946"),
                d:
                  "M606.9,606.1c0.4,0.6,0.8,1.2,1.2,1.8c-0.2,1.2-0.9,2.7-2.1,1.8C604.3,608.4,606.1,607.1,606.9,606.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53843"),
                d:
                  "M573.1,555.8c4.6,5.1,7.3,11.5,11,17.2c-5.9-2-8.6-6.8-11-12C570,559.2,574.6,557.6,573.1,555.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53844"),
                d:
                  "M574.3,577.3c1.4,1.8,1.8,3.1,0.8,4.4c-0.2,0.2-1.2,0.2-1.3-0.1C572.9,580.2,573.6,579.1,574.3,577.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M582.9,635.5c1.6-2.3,3.6-1.2,6.5-1.5C586.8,636.9,584.8,635.6,582.9,635.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03641"),
                d:
                  "M566,561.3c-0.4-1,0.2-1.2,0.6-1.2c0.6,0,1.5,0.1,1.8,0.5c0.5,0.7-0.1,1.2-0.9,1.2       C566.9,561.8,566.3,561.4,566,561.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M531,489c-0.1-4-3.3-6.1-5.4-8.9c-1.2-1.7-3.4-2.6-3.6-5.1c4.7-3.7,8.1-4.2,12.6-1.1       c3.1,2.2,7.5,3.1,8.1,8c0.2,1.8,2,2.5,4,2c2.3-0.6,3.9,0.2,4.6,2.5c-3.2,3.5-7.6,1.6-11.3,2.7c-2.3-0.1-4.6,1.1-6.9-0.2       C532.3,489,531.7,489,531,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962935"),
                d:
                  "M562,531.1c-4.5-5.2-7.1-11.6-10.9-17.1c-0.9-1.2-0.5-2.6-0.2-3.8c0.7-2.5,1.9-3.6,4.2-1.4       c1,1,2.2,1.4,3.5,1.7c5.9,6.5,10.8,13.5,12.8,22.2c-1.5,1.7-3.3,1.3-4.2-0.2C565.7,530.1,563.9,530.9,562,531.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53641"),
                d:
                  "M588.9,575c-7-9-12.1-19.2-17.9-29c1.3-2.3,0.2-5.4,2.5-7.3c0.5,0,0.9,0.2,1.2,0.5c1.5,1.3,2,3,2.1,4.9       c0.2,1.5-0.8,3.5,1.6,4.2c2.1,3.6,3.1,7.9,6.2,11c3.3,3,3.3,7.8,6.1,11.1c0.5,0.9,0.7,1.9,1.2,2.7c0.5,0.9,1,2,0.1,2.7       C590.7,576.8,589.8,575.7,588.9,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M533,489c2.3-0.6,4.6-1.3,7-1c3,0.3,5.8,1.9,9,1.6c1.1-0.1,1.9,0.4,2.6,1.2c1.5,1.5,2.5,10.1,1.4,12.2       c-3.1-0.3-5.9-1.3-7.6-4c-1.5-2.5-3.3-2.4-5.4-1C537.7,495,535.3,492,533,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1F2D"),
                d:
                  "M540,498c2.1-3.9,3.9-4.3,5.5-0.7c1.6,3.6,5.6,3.1,7.5,5.7c0.2,0.1,0.4,0.1,0.7,0.2       c1.6,2.5,5.5,3.7,4.4,7.8c-2.7,1.2-3.6-1.5-5.4-2.8c-0.6,2.1-1.1,4-1.5,5.8C547.4,508.6,543.7,503.3,540,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3945"),
                d:
                  "M588.9,575c0-1,5.1,2.7,1.6-1.7c-0.6-0.7-0.3-2.2-0.5-3.3c4,0,3.7,4.2,6.1,5.9c1.1,0.8,1.9,2,1.8,3.3       c-0.1,3,1.9,4.8,3.1,7.1c1.6,3.1,6.1,5.1,4.9,9.6c-0.3,1-0.8,1.8-1.9,2.1c-3-4.1-6-8.1-8.9-12.2       C593,582.3,590.9,578.7,588.9,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D323D"),
                d:
                  "M574,539c-1.4,1.1-1.3,2.8-0.8,4c1.2,2.7-1.3,2.2-2.3,3.1c-3.3-4.8-6.5-9.7-9-15       c2.1-1.4,4.3-4.6,5.7,0.7c0.4,1.4,2.1,1.2,3.4,1.2c2.1-0.3,2,1.7,2.9,2.7C574.4,536.8,575,537.9,574,539z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("773039"),
                d:
                  "M119,556c-0.6-1.4-2.2-2.2-2-4c1.8-0.1,3.1-1.1,4.3-2.2c2.6,3.3,6.4,2.6,9.9,2.5c2.8,0,4.9,0.4,5.1,3.8       c0,3.9,0.7,7.9-0.6,11.7c-1.7,2.3-3.5,4.2-6.6,2.2C125.7,565.3,122.3,560.7,119,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E333D"),
                d:
                  "M129,570c2.5,0.8,4-1.5,6-2c2.1,0.5,4.4,0.5,6.3,1.8c1.6,2.6,0.8,5.4,1,8.2c0.3,3.6-0.7,7.5,2.8,10.4       c0.9,0.7,1,2.5-1.1,2.6c-1,0-2,0-3,0c-3.3-5.3-6.7-10.7-10-16C130.1,573.4,128.6,572.1,129,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FFFFFF"),
                d:
                  "M1995,393c1.4,1-0.8,3,1.1,3.9c12.7,4.4,18.4,15.2,24.1,26c1.4,2.6,1.1,5.5,0.9,8.3       c-0.4,2-1.6,3.3-3.5,3.9c-2.1,0.5-3.9,1.7-5.6,3c-5.1,3.8-10.8,6.2-17.1,6.7c-0.5,0-1.1,0-1.6-0.1c-14.1-4.5-28.9-3.7-43.3-5.4       c-3.5-0.4-6.8-1.6-10.1-2.6c-3.6-1.1-7.1-1.6-10.8-1.4c-1.6,0-3.3,0-4.8-0.7c-8.3-4.6-17.8-6-26.5-9.3c-1.7-0.6-3.5-0.8-5-2       c-1.4-1.3-3.2-1.8-4.9-2.6c-2.1-0.8-4.1-1.8-6.3-2.4c-1.3-0.3-2.6-0.4-3.8-1.2c-1.1-1-2.3-1.8-3.8-2c-1.1-0.2-2.1-0.6-3-1.1       c-0.4-0.2-0.7-0.4-1.1-0.7c-1.6-1.1-3.4-1.8-5.3-2.4c-0.4-0.1-0.8-0.3-1.2-0.5c-1.7-0.9-3.5-1.8-5.3-2.6       c-3.1-1.5-6.3-2.5-9.4-4c-2.2-0.9-4.4-1.7-6.4-2.8c-7.5-3.1-14.5-7.3-22.1-10c-0.9-0.3-1.7-0.7-2.5-1.3       c-1.9-1.6-3.9-2.8-6.3-3.6c-1.1-0.4-2.1-0.9-3.1-1.5c-4.2-2.5-8.7-4.5-13.1-6.7c-3.7-2.3-8.3-3.1-11.2-6.8       c-1.7-3.6-0.2-5.7,3.1-7c2.9-1.2,6.1-1.6,9.1-2.8c0.5-0.2,1-0.3,1.5-0.4c3.9-0.2,7.7-0.9,11.5-2c0.5-0.2,1.1-0.2,1.7-0.3       c4.7-0.2,9.3-0.1,14-0.1c15.1-0.1,29.9,2.9,44.7,5.2c12.5,1.9,25,4.9,37.8,4.9c7.6,1.7,15.4,2,22.8,4.2       c3.7,1.5,7.1,3.9,10.8,5.4c2.3,1.8,5.1,1.2,7.7,1.8c2.3,0.8,4.8,0.4,7.2,0.9c0.5,0.1,1,0.2,1.4,0.4c2.5,1.1,5.2,1.4,7.9,1.7       c5.3,1.5,10.5,3.8,16.1,4c2.3,0.7,4.6,1.5,7,2c2.2,0.9,4.1,2.2,6.1,3.3C1994.7,392.7,1994.9,392.8,1995,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("625759"),
                d:
                  "M2017.3,434.1c1.7-0.2,2.4-1.5,2.9-2.9c1.7-4.5,0.5-8.5-2.5-12c-3.2-3.7-3.8-8.8-6.9-12.6       c-1-1.3,0.5-2.3,2.2-1.8c0.7,0.4,1.4,0.8,2.1,1.1c2.2,2,3.1,4.7,3.9,7.5c0.7,2,2.3,3.1,3.9,4.3c5.3,4.2,5.4,8,1.6,13.5       c-2.1,3.1-4.4,5.6-7.7,7.4c-1.4,1-2.6,2.5-4.7,1.6C2011.6,436.3,2015.3,435.9,2017.3,434.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C6BCBC"),
                d:
                  "M2013,404.8c-0.8,0.4-2.4,0.4-1.2,1.8c4.2,4.8,5,11.4,9,16.3c2,2.5,1.5,5.6-0.7,8.2       c-1.8-12.3-7.5-22.3-17.6-29.7c-2.1-1.6-4.3-3.1-6.5-4.6c1.6-1.6,2.3,0.3,3.2,1C2003.5,401,2008.7,402.1,2013,404.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("883237"),
                d:
                  "M1989,390.1c-2.5-0.5-5-0.5-7.2-2c1.2-1.9,3-1.7,4.8-1.5c2.2,0.2,4.4-0.1,6.5,0.6       c1.3,1.4,2.8,2.5,4.9,1.7c2.1,0.7,6-2,5.8,3c-0.9,1.3-2.4,0.3-3.5,0.9c-1.4-0.2-2.8-1.5-4.2,0c-0.3,0.1-0.6,0.2-1,0.3       c0,0,0-0.1,0-0.1C1992.8,392.4,1991.2,390.5,1989,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63454A"),
                d:
                  "M2018,413c-1-2.4-1.9-4.7-2.9-7.1c2.7,0.7,5.5,1.5,7.9,3.1c-0.5,0.7-2.2-1-1.9,1       C2021,412,2019.2,412.2,2018,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2043,387c-0.6,2.7-5,1.6-5,5c-1.5-1-2.8-5.7-4.4,0.1c-0.4,1.4-2.8,2.2-3.6,3.9c-3-1.2-6.5,0.6-9.5-1.3       c-0.9-0.6-3.2-0.9-0.3-2.1c0.8-0.3,0.3-0.9-0.5-1.1c-1.3-0.4-2.2-2.1-4.1-1.2c-1.7,0.8-3.5,1.5-3.8,3.8c-0.4,0.3-0.9,0.3-1.3,0       c-2.3-6.6-2.3-6.7,4-8.6c3.6-1.1,5.5-5.2,9.9-5.1c1.5,0,3.2-0.1,4.8-0.7c0.8-0.3,2.1-0.4,2.3,0.1c2.1,4.9,7.4,3.7,10.9,6       C2043.1,386.1,2043.2,386.5,2043,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2036,395c-0.6,1.4-1.4,2.7,1.2,3c1.7,0.2,3.6,0.6,5.1,1.3c1.7,0.8,2.3,2.1-0.3,2.7       c-3.7,1.3-6.4-2.8-10-2c-0.3-0.7-0.4-1.5-1-2c0-0.7,0-1.3,0-2C2032.9,396.6,2034.1,394,2036,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2036,395c-1.7,0.3-3.1,2-5,1c-0.3,0-0.7,0-1,0c-0.4-0.9-0.8-1.8,0-2.8c0.9-1.2,4.6-1.3,1.5-4.1       c-0.3-0.3,0.6-1.2,1.2-1.1c1.8,0.5,4.2-0.5,5.3,1.9c0.2,0.6,0,1.3,0.1,1.9v0C2036.3,392.3,2037,394.2,2036,395L2036,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852E37"),
                d:
                  "M2011,394c0.3,0,0.7,0,1,0c0.3,0.7,0.7,1.3,1,2c-1.9,0-4,0.3-5.1-2C2009,393.1,2010,393.2,2011,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A25"),
                d:
                  "M2031,398c1.8,0,1.5,0.9,1,2c-0.9-0.1-2.1,0.3-2.4-0.8C2029.2,398.1,2030.3,398.2,2031,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901D28"),
                d:
                  "M2011,394c-1,0-2,0-3,0.1c-0.4-0.1-0.9-0.1-1.3-0.2c-1.1-0.8-3.1,0.2-3.6-1.8c0.2-0.9,0.7-2-1-2       c-1.6,0-3.3,0-4.9-0.1c-0.3-2.4,1.8-2.5,3.2-3c9.3-3.3,18.1-7.4,26.9-11.7c0.2-0.1,0.5-0.1,0.7-0.2c0.4,0.1,0.8,0.1,1.2,0.2       c3.8,2.3,8,3.8,12,6c1.2,0.6,3.1,0.6,2.9,2.8c0.3,1,0.7,2,1,3.1c-0.3,0.4-0.7,0.4-1,0c-0.3,0-0.7,0-1,0       c-3.7-1.2-7.3-2.3-11-3.6c-1.2-0.4-1.5-0.6-0.2-1.7c1.2-1-0.4-1.3-1.3-1.4c-7.6-0.5-12.4,6.5-19.6,7.4       C2009.6,387.9,2011.7,391.8,2011,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3737B"),
                d:
                  "M2003,392c1.2,0.6,2.4,1.2,3.6,1.8c-2.3,0.5-4.4-0.4-6.5-1.1C2000.9,391.6,2002.1,392.3,2003,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("1C0C0B"),
                d:
                  "M2022,416c5.6-2.7,8.8,2.2,13,4c1.5-0.8,2.4,0.5,3.5,0.9c1.9,0.6,3.2,2.2,4.7,3.4       c0.5,0.5,0.8,1,0.8,1.7c1.7,1.5,3.3,3.1,5.1,4.5c1.6,1.3,1.3,2.3-0.1,3.4c-0.3,0.4-0.8,0.8-1.3,1c-1.1,0.4-2.2,0.4-3.3,0.4       c-5.9-0.3-11.4,2.7-17.4,2.3c-1.7-0.1-3.7,0.6-4.7-1.6c-0.4-2.2,0.9-3.6,2.4-5c3.9-3.5,3.9-6.5,0.4-10.4       C2023.9,419.2,2021.7,418.4,2022,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("893B40"),
                d:
                  "M2045,449.1c-1.3-0.1-2.7-0.1-4-0.2c-3.7-4-3.6-4.5,1.4-11.4c1.2-1.3,2.5-2.4,4.5-2.2       c1.8,0.6,3.7,1.2,5.1,2.6c-0.2,3.5-0.2,3.5-5.1,8.6c5,0.9,6.4-4.4,10.1-5.7c-1,5.9-4,8.4-9.5,7.9c-0.8-0.1-1.6-0.4-2.4,0.2       L2045,449.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15253"),
                d:
                  "M2045,448.9c5.3-0.7,10-2.3,11.9-8c0.6-0.6,1.3-1.3,1.9-1.9C2060.1,446.3,2053.1,451.3,2045,448.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E404C"),
                d:
                  "M2043,425c-1.6-1.1-3.2-2.1-4.8-3.2c-1.1-1.2-0.7-1.8,0.8-1.9c3.4,0.4,7.1-0.7,10,2       c1.1,0.7,0.1,1.3,0,2C2047,424.8,2045,424.9,2043,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E434C"),
                d:
                  "M2051.9,438c-2,0.1-3.7-0.4-5-2.1c-0.4-1.1,0.5-1.4,1.2-1.8c0.3,0,0.6-0.1,0.8-0.1c1.7,0,3.5,0,5.3,0       C2054.2,436.1,2052.4,436.6,2051.9,438z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8525E"),
                d:
                  "M2043,425c1.8-1.5,3.7-2.4,6-1c-0.5,3.4-3.2,1.7-5,2C2043.6,425.7,2043.3,425.4,2043,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DBB1B0"),
                d:
                  "M2037.7,450.9c3.8,1,7.5,2.1,11.3,3.1c-1.7,3.3-4.9,1.7-7.5,2.4c-0.6-0.2-0.6,0.9-0.5,0.2       c0.1-0.2,0.2-0.2,0.5-0.1c2.8,0.7,3.9,3,4.4,5.4c0.6,2.7,0.2,5.4-3.5,5.8c-2.2-0.3-4.3-0.8-6.4-1.8c-3.5-2-7.5-0.6-11.2-1.2       c-3.2-0.6-5.8-1.4-6.9-4.7c-1.1-2.4,0-3.9,2.2-4.8c4.8-1.3,9.9,0.3,14.7-1.9c2.3-1,2.5-0.6,1.7-1.9       C2036.8,450.9,2037.2,450.7,2037.7,450.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1BDBB"),
                d:
                  "M2042,467c4.2-0.9,3.7-4.1,2.3-6.4c-3.1-5-3.4-4.9,1.9-5.6c1-0.1,1.9-0.6,2.8-0.9       c4.2,1.9,8.3,1.4,12.1-0.8c1.8-1.1,3.2-1.2,4.9-0.2c1.4,3.1,4.9,4.6,6,8c-1.2,2-2.6,0.9-3.8,0.1c-2.3-1.6-4.9-1.8-7.6-1.8       c-5.8,0-5.9,0-5.6,6c0.1,2.9-2,3-3.8,3.8C2048,469,2044.3,471.1,2042,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("461317"),
                d:
                  "M2037.7,450.9c0,0-0.4-0.1-0.4-0.1l-0.3,0.2c-3.1,2.4-6.7,1.6-10.1,1.4c-3.5-0.2-7-0.5-10.3-1.6       c-0.5-0.3-0.8-0.7-0.9-1.3c0.9-1.3,2-1.2,3.2-0.4c-2.1-1.5-4.6-0.2-6.9-0.9c-0.8-0.3-1.7-0.5-1.9-1.3c-0.2-1,0.7-1.4,1.4-1.8       c3.9-1.8,7.3-4.7,11.9-4.4c1.3,0.1,2.8-0.2,3.7-1.2c2.6-2.9,5.8-2.6,9.1-2c1.5,0.9,0.8,1.8,0,2.8c-3.7,4.7-3.6,4.7,2.2,6.9       c1,0.4,2.5,0.5,1.8,2.2C2039.3,449.8,2038.5,450.3,2037.7,450.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("51121B"),
                d:
                  "M2040.1,449.2c-1.1-1.8-2.9-1.1-4.4-1.3c-2.4-0.2-2.9-2.4-4-4c-1.3-2,1.2-2.2,2-3.2       c0.9-1.1,2.2-1.9,3.3-2.8c0.1-0.2,0.3-0.4,0.4-0.6c2.1-1.4,4.1-2.1,5.7,0.7c-1.8,3.4-5.8,6.3-2.2,10.8       C2040.7,449.1,2040.4,449.2,2040.1,449.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2C4C2"),
                d:
                  "M2052,468c0.1-1.1,2.5-0.4,1.5-3c-2.1-5.6-0.6-6.5,5.3-7.1c5-0.6,8.9,1.9,13.2,3.1       c0.3,0.7-0.6,2.4,0.9,1.9c1.8-0.6,2.6,0.9,2.5,1.4c-0.9,4.3,3.8,7.4,2.6,11.7c-3.1,1.7-6,3.9-9.6,1.1c-1.3-1-2.6-2.1-4.3-0.6       c-0.5,0.1-0.9,0-1.3-0.1c-1.8-1.1-3.9-1.2-5.9-1.6c-0.5-0.1-0.9-0.3-1.3-0.6C2054.2,472.3,2050.8,471.5,2052,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1BAB9"),
                d:
                  "M2063.6,476.2c0.9-1.8,2.5-2.4,4-1.1c2.4,2.2,4.7,3.1,7.7,1c0.7-0.5,1.8,0.9,2.7-0.1       c1.2-0.7,0.9-2,1.2-3.3c2.3,1.6,0.8,3.4,0.4,4.9c-0.4,1.4-0.3,2.2,1.3,2.4c0,0.7,0.1,1.3,0.1,2c-1.7,1.8-2.9-0.2-4.3-0.7       c-2.5-1-4.8-2.8-7.8-2.2c-0.5,0.5-1,0.6-1.7,0.5c-1-0.3-1.7-1-2.6-1.5c-0.3-0.2-0.6-0.5-0.9-0.8       C2063.6,477,2063.6,476.6,2063.6,476.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("32292C"),
                d:
                  "M2022,416c1.3,1.5,2.5,3,3.9,4.4c4.6,4.8,4.4,7.8-0.9,12c-0.9,0.7-2,1.2-2,2.6c-1.3,3.4-3.7,4.4-7.1,3       c3.3-2.1,5.8-4.8,8-8c2.6-3.8,2.9-6.2-0.3-9.8c-2-2.2-5.4-3.4-5.7-7.1c0.4-1.6,2.3-1.8,3-3C2022,411.9,2018.9,414.5,2022,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("512226"),
                d:
                  "M2039,420c-0.8,0.4-0.9,1.1-0.8,1.9c-1.1-0.6-2.1-1.3-3.2-1.9c0.9-3.9,3.7-2.4,6-2       C2040.3,418.7,2039.7,419.3,2039,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("894447"),
                d:
                  "M1963,338c0.7,0,1.3,0,2,0c5.7,1.3,11.6,1.7,17,4c3,1.5,6.9,0.2,9.3,3.7c0.6,0.9,3.7,0.2,5.6,0.3       c0,1.7,0.4,2.6,2.4,3.1c10.4,2.3,19.9,7,29.1,12.3c3.3,1.9,6.9,3.1,10.4,4.6c-2.7,2.4-5.6,4.5-8.8,6.2c-0.6-0.2,0.2,0-0.5-0.1       c-5.5-1-8.8-6.9-13.1-7.9c-5.3-1.1-10.2-1.9-14.3-5.6c-2.6-2.3-6.1-1.1-9-2.3c-10.8-4-21.5-8-31.7-13.3       c-3.8-2-8.2-2.2-12.2-3.6c-1.4-1-2.7-2.3-1.5-3.9c1.3-1.8,3.4-1,5.2-0.5c1.5-0.2,2.8,0.3,4,1       C1958.8,337.4,1961.7,335.4,1963,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C4B4D"),
                d:
                  "M1982,342c-0.3,0.1-0.6,0.4-0.9,0.4c-5.4-1.3-11.3-0.7-16.1-4.4c2.3-5,4.7-0.1,7,0       C1975.8,338.2,1980.1,337.1,1982,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983F44"),
                d:
                  "M2069.1,605.1c-0.1,3.5-2.6,5.1-5.1,6.9c-0.3-0.3-0.5-0.7-0.6-1.1c0-0.4,0-0.9,0.1-1.3       c0.3-1.4,0.7-2.8-1-3.7c-2.2-1-4.7-0.2-6.9-1.3c-0.5-0.3-0.7-0.8-0.6-1.4c3.8-2.2,7.8-3.1,12.1-1.2c0.7,0,1.3,0,2,0.1       C2069,603.1,2069,604.1,2069.1,605.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A25157"),
                d:
                  "M2068,485c2.3,2.8,1.7,3.8,0.8,6.7c-0.8,2.8-0.6,6.3,0.8,9.1c1,1.9,1.4,3.5,0.9,5.6       c-0.6,3-2.6,6-0.7,9.3c-5.1,2.6-1.9,9.9-7.1,12.4c-1.1,0.5-1.4,1.1-0.5,2.3c0.5,0.7,0.2,2,1.2,2.5c9.8,5.5,5.3,13.6,4,21.1       c-0.2,1.1-0.4,2.3-0.5,3.4c-0.3,4.3-0.4,8.7-3,12.5c-1.2,1.4-1.6,3.1-2.2,4.8c-0.5,1.5-1.2,3.3-3.4,1.5       c0.1-6.7,0.8-13.3,3.7-19.6c2.2-4.7,2.6-9.3,0.1-15c-3.7-8.5-10.2-9.4-17.5-10.2c-0.4-0.1-0.8-0.4-1.1-0.7       c-0.2-0.4-0.4-0.8-0.4-1.2c-0.3-1.6-1.6-1.4-2.7-1.6c-0.4,0-0.9-0.1-1.3-0.2c-2.3-0.7-4.6-0.6-7-0.6c-0.5,0-1,0-1.5,0       c-1,0-2-0.2-3-0.4c-4.7-1-9.6-0.5-14.4-0.9c-0.7-0.2-1.4-0.6-1.7-1.4c0.1-2.9,2.2-3.2,4.4-3.5c1.8-0.2,3.5,0.4,5.3,0.3       c8.8,0.5,17.4,1.9,26.1,3.4c7,1.2,10.2-1.4,11.2-8.4c0.5-3.5,1.2-7.2,4.1-9.9c0.2-0.4,0.4-0.8,0.6-1.2       c0.8-3.4,0.7-6.8-0.3-10.1C2064.3,491.6,2067,488.7,2068,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A84F56"),
                d:
                  "M2059,576c2.7,0.2,2-1.9,2-3.2c0-2.2,1-2.9,3-2.8c0.7,1.7,0.9,3.3,0,5c-0.6,4,1.7,8.7-2.7,12       c-0.4,0.3-0.4,1.9,0,2.3c3.2,3.7,2.3,9.2,5.7,12.7c-4.1,0.1-8.1,0.7-12,1.9c-1.2,1.4-2.9,1.3-4.5,1.3c-1.2-0.1-2.7-0.1-3.3-1.3       c-0.6-1.4,0.9-1.7,1.7-2.3c0.4-0.2,0.9-0.4,1.3-0.6c2.8-1.5,1.4-3.8,0.3-5c-2-2.2-1.3-4.1-0.5-6.3c1.2-3.5,3.1-6.9,2.6-10.9       C2054.3,577.1,2054.9,572.6,2059,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B484F"),
                d:
                  "M2068,485c0.8,4.2-1.5,7.2-4,10c-0.9,3.7,1,7.3,0,11v0c-3.9,1.6-4-1.2-4.4-3.7c-0.1-2.6-0.1-5.2,0-7.8       c0.6-4.2,3.5-7.6,3.6-11.9c2.4-0.1,1.4-3.8,3.9-3.7c0.6,0.1,1.2,0.1,1.8,0.2c0,0.3,0.1,0.6,0.2,0.8       C2068.1,481.5,2067.9,483.2,2068,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A25157"),
                d: "M2064,575c0-1.7,0-3.3,0-5C2065,571.7,2066.9,573.3,2064,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("934449"),
                d:
                  "M1994,355c0.3,0.1,0.6,0.4,0.9,0.4c5.2-0.2,8.9,2.8,12.7,5.7c1,0.8,2.5,1.8,3.5,1.6       c5-1.2,8.6,1.3,11.3,4.7c2.1,2.7,6.2,1.6,7.7,4.8c-0.7,1-1.4,1.9-2.2,2.9c0,0,0.1,0,0.1,0c-0.3,0.4-0.8,0.4-1.2,0.3       c-1.5-1-3.2-1.8-4.6-2.9c-2.8-3-6.5-4.2-10.2-5.8c-6.4-2.9-13.3-4.7-19-9.1C1992.3,356.2,1993.2,355.6,1994,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E08588"),
                d:
                  "M2044,383.9c-3.4-2.6-7.6-3.8-11.3-5.9c-1.3-0.7-3.4-0.6-3.6-2.9c0.3-0.1,0.5-0.1,0.8-0.2       c5.4,2.6,11.1,4.6,16.2,7.9c-0.4,0.3-0.8,0.6-1.1,0.9C2044.7,383.8,2044.4,383.9,2044,383.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1627"),
                d:
                  "M2050.1,604.1c1.6,0,3.2-0.1,4.8-0.1c0.3,0,0.7,0.1,1,0.1c-2.5,6.9-2.5,6.9-8,6.5c2.1,0.4,4.2,1,6.3,0       c2-1,4.4-0.4,6.2-1.4c2.3-1.2,2.9,0,3.4,1.8c0,0.3,0.1,0.7,0.1,1c-0.3,0.4-0.6,0.7-1,1.1c-0.4,0.4-0.7,1.1-1.2,1.3       c0,0.4-1.5-0.7-0.5,0.5c0.3,0.3,0.7,0.5,1,0.9c0.2,0.4,0.1,0.8-0.2,1.2c-1.3,1.6-3.7,1.6-4.4,0.6c-2.3-3.5-5.7-0.2-8.4-1.6       c-0.6-0.3-2.4,2-4.7,2.2c-5,0.3-9.9-2.2-15.1-0.5c-1.3,0.4-3.4-2.2-4.5-3.3c-3.7-3.3-4.2,0.4-6,1.7c-0.5,2.8-0.9,3.1-2.1,1.5       c-0.9-1.2-2.5-1.6-3.2-3c0.8-4.7,4-8.3,5.6-12.6c0.8-2.1,2-0.8,2.8,0.3c1.9,3.1,5,2.1,7.8,2.3       C2036.7,604.9,2043.4,604,2050.1,604.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951B2A"),
                d:
                  "M2081,619c-4.7,4.5-11,4.6-16.8,5.8c-2,0.4-2.6-1.3-1.8-2.9c0.5-1.1,1.7-1.9,2.6-2.9       c3.7-2.8,5.5-6.6,6-11.1c0-0.3,0-0.6,0.1-0.9C2076.2,609.6,2079.2,613.8,2081,619z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992F39"),
                d:
                  "M2071,607.9c0.5,5.1-0.3,9.4-6,11.1c-1.5,0.1-1.9-1.4-2.9-2.1c0-0.3,0-0.6,0-0.9c-0.6-0.7-0.6-1.3,0-2       c0.3-0.3,0.7-0.7,1-1c0.3,1.4-0.2,3.4,1.8,3.6c1.8,0.2,2.9-1.5,3.6-2.9C2069.4,611.8,2069.3,609.5,2071,607.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2014,615c1.5,0,4-1.7,3.6,1.9c-0.1,0.6,0.4,0.9,0.9,0.5c0.3-0.3,0.3-0.9,0.5-1.4       c1.8,1,3.3,2.3,2.8,5.2c-1.4-2-3.7-3.4-4.9-1.6c-1.2,1.7,0.7,3.7,2.7,4c2.4,0.4,0.5,4.2,3.8,3.7c-1.5,0.9-2.9,1.2-3.6,0.3       c-0.7-0.9-0.4-2.9-2.5-1.1c-1.1,1-2.5,1.3-2.4,3.2c0.2,2.2,1.5,2.3,3.1,2.3c-7.9,1.8-16,2-24,2c-1.7,0.2-3.3,0.2-4.4-2.2       c4.6-1.3,9.5,0.1,14-3c-5.4,1-10.1-1.1-14.9-1.3c-0.5-3.7-3.9-1.3-5.5-2.7c-1.4-0.9-3.4-0.4-4.4-2.1c0-0.6,0.2-1,0.6-1.3       c4.1-1.9,8.6-2.6,13-2.6c6,0,11.4-1.3,16.5-4.4C2010.7,614,2012.4,614,2014,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2045.1,629c-4,1.1-8,1.9-12.2,1.8c-5.1-2-10.5,0-15.7-1.6c4.9,0,9.8,0,14.7,0       c-8.3-1.1-1.1-5.2-2.6-8.6c3.5,2.1,2.6,7.4,7.2,6.3c0.1,0-1.6,1.3-0.7,2.6C2038.8,628.8,2042,629,2045.1,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2029.1,631c-3.2,1.7-6.7,0.7-10.1,1C2022.2,630,2025.7,631.4,2029.1,631z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1929"),
                d:
                  "M2043.3,626.4c-1.3,2-2.8,1.7-5.2,1.1C2040.4,627,2041.9,626.7,2043.3,626.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2044,387c0.3,0,0.7,0,1,0c1.7,1,3.3,2,5,3C2046.6,391.7,2044.9,390.2,2044,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M2036,395c-0.1-0.8-0.1-1.6-0.2-2.3c-0.2-0.8-0.6-1.7,0.5-1.9c0.5-0.1,1.2,0.8,1.8,1.2       C2038,393.4,2037.3,394.4,2036,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931928"),
                d:
                  "M1825.9,495.6c-0.3,0.4-0.6,0.7-0.8,1c-0.3-0.3-0.8-0.5-0.8-0.9c-0.1-0.3,0.3-0.7,0.5-1       C1825.1,495,1825.4,495.2,1825.9,495.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1323"),
                d:
                  "M1864,570c-1.1-5.1-3.9-9.6-4.1-14.9c1.4-1.4,3.3-2.2,1.5-5.1c-1.3-2.1,0.1-4.2,3.3-3.5       c1.3,0.3,2.5,0.7,3.8,1.1c-0.4,2.3-2.6,0.8-3.7,2c3.4,1.5,3.2,4.5,3.2,7.5c-1,0.9-3.8,0.1-2.2,3.3c1.2,2.3,1.2,5.1,2.2,7.9       c1.8-2.6,3.8-2.2,6-0.9c0.7,0.6,1.2,1.3,1.3,2.2c-0.5,2.7,2.2,0.9,2.9,2c-0.1-0.6-0.8-1.3,0-1.9c1.8-1.2,3.9-0.1,5.9-1       c-5.6,0.8-7.9-0.2-9.4-5.1c-0.9-3.2-1.7,1.5-2.2-0.2c-1.4-0.9-1.2-2-0.4-3.2c2.7-1,3.8-4.4,8.7-5.2c-4.6,2.9-1.8,5.6-2.1,8       c-0.1,1,0.6,1.4,1.2,1c3.6-2,7-0.3,10.5,0.4c0.3,0.1,0.5,0.4,0.8,0.6c0.5,2-2.7,0.4-2.2,2.1c0.3,1.1,1.6,1,2.6,1       c1.6,0,2.7-0.3,2-2.3c-0.2-0.7,0-1.2,0.9-1.3c6.8-1,6.8-1,6.1-9.2c-0.1-1.2,0.7-1.9,1.5-2.3c4.1-1.8,3.4-1.8,3.8-6.9       c0.2-2.6-0.2-5.2,0.3-7.7c2.4-0.7,4.3,5.7,6.5,0.2c-2.4-0.3-3.5-3-5.6-4.3c0.3-0.4,0.7-0.7,1.2-0.8c2.8-0.6,5.1,1.5,7.8,1.5       c0.7,0.1,1.5,0.2,2.2,0.3c2.9,1.2,6.1,1.7,8.8,3.2c2,2.4,6.2,2.9,6,7.2c-1,4.4-1.9,8.8-6.2,11.3c-1.2,0.5-2.4,0.8-2.2,2.7       c0.2,1.9-1.1,3.4-2.8,3.6c-5.7,0.7-3.8,3.9-2.6,6.9c-1.5,3.8-5.1,5.9-8,8.4c-0.9,0.8-1.9,1.7-2.4,2.8       c-2.8,6.1-12.9,10.1-19.2,7.6c-1.5-0.6-3.2-0.9-4.7-1.5c-2.1-5.4-7.5-6-12-8c-0.3-0.4-0.5-0.8-0.7-1.2c0-4.5,3-1.7,4.8-1.9       c-2.1-0.9-4.1-0.8-6.2-0.4C1867.7,574.9,1865.1,573.4,1864,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1908,534c-0.3,0-0.7,0-1,0c-1.5,0.1-2.8-0.3-4-1c-1.2-0.7-2.8,0-4-1c-4.7-2.5-10.4-2.1-15-5       c1-0.7,4.1,1.7,3-2c-0.6-2.2-0.6-2.2-3.9-2.4c0.8,0.4,2.9-1.3,2.9,1.4c-3.2,1.1-6.3,1.7-9-1c-2.9-4.2,1.5-4.9,3.1-4.8       c7.5,0.4,13.1-3.1,18.6-7.3c1.7-1.3,4.2,2.5,5.8-0.7c5.8,3,11.6-2.6,17.2,0.4c-0.8,1.4-2.8-0.3-4,1.2c2.8,0.5,5.3,0.8,7.1-1.7       c0.7-0.7,1.7-1.2,2.7-0.9c5.8,1.4,11.9,1.9,17.3,4.8c0.8,0.4-1,1.5,0.3,1.7c3.7,0.6,6.8,3.4,10.8,3.3c1.4-0.1,3.4,0.2,3.2,2.2       c-0.1,2-2.1,1.6-3.5,1.8c-0.5,0-0.9,0-1.4-0.1c-1.3-0.3-2.7,0-4-0.2c-4.8-2.7-9-0.6-13.2,1.6c-1.6,0.8-3.4,2.2-3.7-1.3       c-0.2-2.1-1.6-1.3-2.5-0.6c-4.5,3.1-8.7,1.6-12.6-1.1c-1.7-1.2-2.8,0.5-4.2,0.1c-1.2-0.9-1-2.1-0.3-3.1       c0.9-1.2-0.1-1.3-0.7-1.7c-0.1-0.1-1.2-1-0.8,0.3c0.1,0.3,1.1,0.5,0.9,0.9c-0.9,2.8-2.3,5.5,0,8.3c0.1,0.5-0.1,0.9-0.3,1.3       C1910.1,528.6,1909.8,531.9,1908,534z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731426"),
                d:
                  "M1874,568c-1.3-0.3-2.5-0.6-3.8-0.9c-1.5,1.2,2,2.9-0.3,3.7c-1.8,0.6-2.5-1.1-3.2-2.5       c-1.7-3.4-1-7.5-3.2-10.8c-0.7-1,0.1-2.4,1.7-1.2c0.9,0.7,1.8,0.6,2.8,0.7c0,1.7,0,3.3,0,5.2c1.5-0.8,2.7-1.5,4-2.2       c0,1.1-0.2,2.3,1,3C1874.4,564.5,1875.2,566,1874,568z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1323"),
                d:
                  "M1899,532c1.4,0.1,2.9-0.5,4,1C1901.4,533.9,1900.1,533.4,1899,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F1120"),
                d:
                  "M1900,476c1.9-0.1,2.8-2.6,5-2c2-2,4.2-3.8,6-6v0c3.8-2.4,8.1-4,12.4-4.6c5.6-0.8,11.2,0.9,16.5,2.4       c1.3,0.4,2.9,0.7,4.3,0.8c2.9,0.3,5.5,1,7.6,3.1c0.2,0.3,0.4,0.7,0.2,0.9c-2.3,3-2.4,3.8-0.8,9.8c0.4-2.6-0.5-4.1-0.4-5.6       c0.1-1-0.1-2.1,1.2-2.3c1.1-0.2,2,0.2,2.5,1.2c1.1,2.4,2.6,4.7,2.3,7.5c-0.3,3.9-1.8,4.8-5.6,3.4c-0.2,2.6,1.9,2.6,3.6,3.1       c1.2,0.4,3.1,0.2,2.9,2c-0.1,1.5-1.9,1.6-3.1,2.1c-1.5,0.6-3.4-0.4-4.6,1c-0.1,0.5,0,0.8,0.2,1.1c1.2,2,5.1,1.4,4.9,4.3       c-0.1,2-2.9,3-3.6,5.1c-0.8,1-1.2,2.1-1.5,3.3c-3.5,6.5-9.7,5.5-15,4.2c-5.3-1.3-10.7-1.9-16-2.8c-12.4-2.7-24.8-5.3-37.2-8.1       c-1.9-0.4-4.6-0.3-5.1-2.3c-0.4-1.7,2.3-2.5,3.5-3.8C1886.3,487.3,1894.8,483.5,1900,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68131E"),
                d:
                  "M1919,508c7.8-1.5,15.1,2.5,22.9,2c3.6-0.2,6.3-1.1,7.1-5c1.3-1.2,3-1.3,4.6-1.4c3.8-0.4,5.1,1,3.6,4.5       c-0.9,2.1-0.7,3.1,0.8,4.6c2,1.9,0.7,3.2-1.2,4.1c-0.7,0.3-1.5,0.4-2.3,0.5c-3.4,0.3-6.7-0.2-9.5-2.3c-6.5-2.4-13.2-4.1-20-5       C1923.5,507.9,1920.5,510.1,1919,508z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1876.9,493c-2.7,1.9-2.3,4.2-3,6.1c-0.5,1.4-1,3-2.9,2.8c-2.2-0.2-1.8-1.9-1.9-3.4c0-1,0-2,0-3       c0-2.6-0.6-6.2,3.9-2.7C1873.5,493.4,1875,493,1876.9,493z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1915,508.8c-1,0-2,0-3.3,0C1912.8,507.6,1913.9,508,1915,508.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("67131C"),
                d:
                  "M1952,470c-7.9-3.1-16.4-3.9-24.6-5.6c-3.5-0.7-8.3-0.2-11.7,2.8c-1.4,1.3-3.1,0.6-4.7,0.8       c1.3-1.3,2.7-2.7,4-4c1.4-4.1,4.4-5.3,8.5-4.8c3,0.3,5.7,1.5,8.7,1.8c8.2,2.7,17,3.1,25,6.2c1.4,0.5,2.9,0.6,4,1.9       c-0.5,2.4-2.5,2-4.1,2.3C1955.2,471.4,1953.4,471.4,1952,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1932,462c-1.3,0-3,0.4-3.9-0.2c-5.2-3.5-9.3-1.5-13.1,2.3c-1.3-0.7-2.7-1.3-4-2c-1-4.1,2.2-2,3.7-2.7       c5.2-2.5,10.6,0,15.8-1.3c2-0.5,2.8,0.1,2.5,2.1C1932.4,460.5,1932.2,461.3,1932,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1883.8,474.1c1.6,2,3.9,4,0.8,6.9c-1-1.5-1.7-3.6-4.3-3.5C1881.2,475.5,1882.8,475,1883.8,474.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("67131C"),
                d:
                  "M1911,468c-1.2,2.8-2.6,5.5-6,6C1905.7,470.7,1908.4,469.4,1911,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1908,463c0.4-0.8,1.2-1,2-1c0,1.4,0,2.8,0,4.3C1907.3,466,1909.9,463.4,1908,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1627"),
                d:
                  "M1886,524c-1.2-1.8-3.5-0.3-5.1-1.5c3.4-1.5,6.4,1,10.1-0.4c-1.1,2.5-2.5,2.7-4,2.9       C1886.7,524.7,1886.3,524.3,1886,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96313C"),
                d:
                  "M1896,624c-1.1,2.7-4.9,1.3-6,4c-0.5,0.6-1.2,0.7-1.9,0.5c-2.4-1.2-0.8-3.9-2-5.4c0-0.3,0-0.7,0-1       c2.3-1.2,4.9-2,5.3-5.3c0.2-1.6,1.6-1.2,2.7-0.7c0,0,0.1,0,0.1,0c1.3,2-0.2,3.4-1,5c-0.2,0.2-0.4,0.4-0.5,0.7       c-0.2,0.4-0.1,0.6,0.2,0.3c0.4-0.3,0.9-0.4,1.4-0.3C1895.2,622.2,1895.3,623.3,1896,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33845"),
                d:
                  "M1859,594c1.2-1.8,2.4-4.1,5-2.3c3.5,2.5-0.8,4.5-0.6,6.9c-1.7-1.2-2.1-2.9-2.4-4.6       C1860.3,594,1859.7,594,1859,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3643"),
                d:
                  "M1886,623c3.6,0.5,0.6,3.6,2,4.9c-0.4,0.9-0.9,1.6-2,1.1C1880.9,627,1883.9,625,1886,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3948"),
                d:
                  "M1886,629c0.7-0.4,1.3-0.7,2-1.1c0.7,0,1.3,0,2,0c0,2.3,0,4.6,0,7c-2.2-0.9,0.1-5.5-4-5       C1886,629.7,1886,629.3,1886,629z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33845"),
                d:
                  "M1861.5,601.4c-1.5,0.8-2.5,0.8-3.6,0.2C1858.8,600.6,1859.9,601,1861.5,601.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2C37"),
                d:
                  "M1926,556c4.2-2.5,4.7-6.9,6-11c1.3-1.4,3-2.2,4.8-2.6c1.2,0,2.3,0.4,3.2,1.3c0.6,0.9,0.2,1.8-0.1,2.6       c-0.9,2.7-0.5,5.7-2.1,8.2c-0.8,0.6-2.1,0.9-2.2,1.9c-0.2,3.9-2.4,6.4-5.4,8.2c-2.5,1.5-0.1,3.3-0.8,4.9       c-0.2,0.2-0.3,0.3-0.5,0.5c-2.6,4.3-4.7,8.8-11.3,7c-2.1-0.6-1.3,1.7-1.3,3.1c0,1.4,3.6,2.3,0.4,3.9c-0.4-0.2-0.6-0.2-0.6-0.2       c-0.2,0,0,0,0.4,0.1c0.6,0.2,0.2,0.8,0.4,0.2c0-0.1-0.1-0.1-0.2-0.1c-0.4,5.6-1.9,6.6-6.1,3.9c-1.6-1-2.1,0.2-2.8,1       c-0.5,0.6-3.3,2.2,0.5,1.9c0.1,0,0.4,0.6,0.3,0.8c-0.2,0.8-0.4,1.5-0.7,2.2c-3.8-2.4-3.7,5.9-6.8,2.8c-0.9-0.9-5.8,0.5-3.2-3.5       c0.2-3.7,4.1-3.7,6.1-5.7c2.2-2.2,4.5-4.3,6.1-6.9c2.1-3.5,5.3-5.9,8.1-8.7c1-1,1.1-1.8,1.1-3c0.2-1.5,0.4-3.3,1.5-4.1       C1924,562.6,1924.5,559,1926,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92182A"),
                d:
                  "M1896,624c-0.7-0.7-1.3-1.3-2-2c2-4.9,5.8-8.2,10-11.1c0.8,0,1.5-0.1,2-0.9c4.8-2.1,7.7,2.2,11.4,3.6       c2,0.8,3.8,2,5.8,2.7c4.4,3.1,9.6,3.8,14.7,4.7c1.7,0.4,3.1,1.3,5,1c1.5-0.3,2,0.6,1.1,2c-1.2,0.3-1.8,1.7-3.5,1.3       c-7.4-1.6-12.6,0.7-16.5,6.7c-0.2-0.8-0.5-2.1-1.3-1.3c-1.2,1.1-1.8,3.3-3.7,1.9c-2.3-1.7,1.4-2.7,0.9-4.1       c-0.7-2,1.2-2.9,1.4-4.6c1.3,0,2.3,0.1,2.5,0.5c-0.3-0.5-1.3-0.9-2.5-0.5c-3.4,0.4-6.3-0.5-9.2-1.7c-2.1-0.8-4.8-2.5-6.1,1.4       c-0.5,1.5-1.2,0.7-2.1,0.1C1901.2,622,1898.6,623.7,1896,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("98343F"),
                d:
                  "M1938,554c-0.7-2.8,0.2-5.4,1-8c5.4-1.6,9.8,1.2,13.9,3.9c1.8,1.2,1.1,3.5,0,5.4       c-0.8,1.4-2.5,2.2-2.6,4c-0.1,0.5-0.2,1-0.3,1.5c-1.6,3.8-5.2,6.1-7.5,9.5c-2.4,2.4-4.2,5.4-7.6,6.7c0.1-2.7-1-4.5-3.7-4.9       c-1.3-0.2-2.2-0.6-2.3-2.1v0c1.4-1.2,0.1-2.9,0.7-4.2c0.5-1,0.2-2.6,1.7-2.8c1.8-0.2,2,1.3,2.2,2.7c0.1,0.7,0.5,1.2,0.8,1.9       c-1.1-2.3-1.6-4.6,1.7-5.1c1.7-0.2,1.2-0.7,1-1.8C1936.9,558.4,1936.6,556.1,1938,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33E48"),
                d:
                  "M1935,577c1.7-3,4.6-4.8,7-7c1.2,0.1,2.8-1.2,3.4,0.7c0.5,1.8,0.9,3.8-0.6,5.6       c-2.5,2.9-5.4,5.6-6.9,9.3c-0.2,0.4-0.5,0.7-0.8,1.1c-1.2,0.9-2.4,1.8-3.1,3.2c-0.2,0.4-0.4,0.8-0.7,1.1       c-1.1,1.5-2.3,2.7-4.4,2.5c-1.9-0.6-3.2,0.5-4.1,1.9c-1.9,3.2-4.6,3.7-7.8,2.8c3.4-5.9,8.9-9.8,12.8-15.2       C1931.3,580.7,1933.3,578.9,1935,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93D4B"),
                d:
                  "M1917,598c4.1-0.1,6.5-3,9.1-5.6c1.1-1.1,2.5-2.1,2.9,0.6c-0.9,3-2.9,5.6-3.3,8.9c-0.5,1-1,2-2.2,2.3       c-0.3-0.1-0.5-0.3-0.6-0.4c0.1,0.1,0.3,0.3,0.6,0.6c0.5,1.1,0.1,2.2,0,3.2c-0.1,1.7-0.2,3.4,0,5.1c0,1.5,0.8,3-0.4,4.3       c-2.4,0.4-3.8-1.9-6-2.2c-0.4-1.1,0.4-1.8,0.6-2.8c0.8-3.6-0.9-5.2-4.6-4.2c-1.7,0.4-3.1,1.9-5,0.9c-0.2-0.1-0.2-0.5,0-0.9       c1.4-2.6,2.7-5.3,6-6c1.1-0.7,1.7-1.8,2-3C1916.3,598.6,1916.6,598.3,1917,598z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1727"),
                d:
                  "M1920,569c0.5,2.3-1.3,4.2-2.4,5.1c-7,5.8-10.9,14.9-19.6,18.9c-4.3,0.2-8.6,0.3-12-3       c-1.5-0.6-3.7-0.5-3-3.2c0.7-0.4,1.4-0.4,2,0.2c2.4-1.5,4.6,0.2,6.4,1c2.8,1.3,7.7,0.9,9.5-2.1c0.3-0.5,0.5-1.2,1-1.2       c6.2,0.1,6.2-4.8,7.3-8.9c0.1-0.4,0.6-0.7,1-1.1c2.2,0.9-0.8,2.7,0.9,3.8c1.3-4.2,5.1-5.8,7.9-8.5       C1918.7,569.1,1919.1,568.8,1920,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C2735"),
                d:
                  "M1883,587c1,1,2,2,3,3c-1,1.1-1.9,2.2-2.9,3.4c-4-4.7-10-7-13.1-12.4c-1-1.7-1.8-3.5-4-3.9       c0.4-1.7-1.4-1.9-2-3c0-1.3,0-2.7,0-4c2,2.1,4.3,3.8,6.9,5c1.4,0.5,1.4,2,2,3c0,0.3,0,0.6,0,1       C1876.4,581.6,1880.5,583.3,1883,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73844"),
                d:
                  "M1908,608c1.4,1.1,2.4-0.3,3.5-0.7c2.4-0.9,4.8-2.6,6.9,0.4c1.9,2.8,1.2,5.2-1.2,7.2       c-3.6-1.8-6.8-4.6-11.1-4.9C1906.3,609.1,1907,608.4,1908,608z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1724"),
                d:
                  "M1904,611c-2.8,4.2-6.8,7.3-10,11.1c-0.3,0.3-0.7,0.6-1,1c-1.7,0-1.7-0.8-1-2c0.7-1.7,1.4-3.3,2-5       C1897.3,614.1,1898.8,608.8,1904,611z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33E48"),
                d:
                  "M1916,599c1.4,2.4,0.4,3.2-2,3C1914,600.6,1914.7,599.6,1916,599z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3742"),
                d:
                  "M1841.6,562.1c1,0.2,2,0.5,2,1.7c0,0.9-0.7,1-1.4,1c-0.9-0.1-1.6-0.6-1.8-1.5       C1840.2,562.6,1840.8,562.2,1841.6,562.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73744"),
                d:
                  "M957,650c-2,0-4.3-0.8-5.9,0c-3.9,1.9-7.3,2.8-11.5,0.8c-1.8-0.8-4.8,0.9-6.5,0       c-4.7-2.6-8.8-1.4-13,0.9c-1.6,0.8-2.8-0.3-4.2-0.7c-3.3-1-6.4-1.8-10,0.2c-2.2,1.2-5.2,2.3-7.7-1.3c-1.2-1.7-5.3-0.3-6.8-3.3       c-3.9,5.2-6.7-2.1-10.8-0.9c-5.1,1.5-10.7,1.1-16.1,1.9c-3.9,0.5-6.9-2-10.5-2.3c-1.1-0.1-0.8-0.8-0.5-1.4       c0.4-0.7,0.6-1.7,1.7-1.6c1,0.1,2.2,1.1,3.1-1c-2.4-0.5-5.5-1-6.3,1c-2,5.1-6,3.4-9.4,3.7c-3.4,0.3-7.4-1.3-10,2.5       c-0.5,0.6-2.1-0.1-1.9-0.7c1.3-3.3-2.1-1.4-2.6-2.7c-1.1,1.3,1.4,2,0.1,3.3c-0.1,0-0.5,0.3-0.7,0.2c-1.5-1.2-4.5-1.5-2.6-4.6       c3.4-6.2,9.2-5.8,14.8-5.2c3.5,0.4,6.9,0.5,10.3,0c3.1-0.5,6.4-0.7,9.4,0.2c7.6,2.1,15.1,1.3,22.7-0.1c8.6-0.7,17.1-1,25.7-1.6       c6.1-0.4,12.5,1.3,18.7,0.4c5.6-0.8,11-0.9,16.6-0.1c2.7,0.4,5.5,0.7,8.2-0.9c1.7-1,3.5-0.1,5.2,0.8c0.3,0.3,0.5,0.7,0.6,1.1       c-0.6,1-0.2,1.9-0.1,2.9c-0.4,1.2-1.9,1.2-2.5,2.4c0.8,1.5,3.4,1.5,3.6,3.6C958.5,648.8,957.8,649.4,957,650z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3644"),
                d:
                  "M958,648c-0.5-0.5-1-0.8-1.4-1.4c-1.1-1.5-4.1,0.6-4.2-2.1c-0.1-2.9,3.3-2,4.5-3.5       c-0.6-0.7-0.6-1.3,0-2c2.2-1.9,4.8-0.7,7.2-1c14.8-2.1,29.6-0.3,44.4,0.1c1.7,0,3.3,0.5,4.4,1.9c6.6,0,13.3,0,19.9,0       c1.5,0,3.6-0.6,4,1.8c0.2,1.3,0.6,2.9-0.7,3.7c-1.3,0.8-2.9,0.8-4.1-0.5c-2.3-2.5-3.3,1.3-5.1,1c-1.3,0-2.7,0-4,0       c-2.5,1.8-5.4,1-8.2,1.2c-9.1,0.5-18.2,0.6-27.3,0.5c-7.9-0.1-15.8,0.3-23.7-0.3c-1.7,0.3-3.6-1.8-5.3,0.3       C958.3,647.8,958.2,647.9,958,648z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13947"),
                d:
                  "M883,640c-7.3,1.7-14.6,2.5-22.1,0.6c-4.7-1.2-9.9-1.7-14.6,0.6c-2.5,1.3-3.8-1.2-6-1.4       c-5.7-0.5-10.8,0.6-15.3,4.1c-2.4-4.2-6.4-4.9-10.8-5.1c-3.6-0.2-7.2-1.4-10.2-3.8c19,0,38,0,57,0c5.7,2.4,11.7,0.8,17.6,1       c5.5,0.1,11,0,16.4,0c1.5,0,3.1-0.2,4.3,1.7C893.9,639.9,888.1,637.6,883,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63644"),
                d:
                  "M962,646c6.6-1.2,13.1,2,19.9,0.2c6.5-1.8,13.3,0.9,20.1,0.1c6.9-0.9,14-0.2,21-0.2       c-1.6,4.1-4.2,3-8,3.2c-5.6,0.2-11.2,0.6-16.9,0.4c-6.6-0.3-13.4,0.1-20,0.3c-7,0.2-14.1-1-21.1,0.1c0.3-0.7,0.7-1.3,1-2       C959.1,646.9,961.1,647.5,962,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63644"),
                d:
                  "M1025.9,649.1c-0.7,2.6-1,4.6-3.6,4.7c-0.3,0-0.9-0.6-0.9-0.9C1021.7,650.6,1023.1,649.6,1025.9,649.1z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53C4B"),
                d:
                  "M883,640c0.4-2.5,2.3-2,3.9-2c3.6,0,7.3,0,10.9-0.5c-6.6-0.1-13.1-0.4-19.7-0.1       c-5.6,0.2-11.3-0.1-16.9-0.5c-0.6,0-0.3-1.1-0.1-1.8c59.7,0,119.4,0,179,0.1c0.7,0.4,1.3,0.9,2.7,1.9c-7.2-0.4-13.4,1.8-20,1.1       c-2.9-0.3-6.9-0.8-9.8,1.8c-12.3-0.7-24.7-2-36.9-1.7c-6.3,0.2-12.7,1.3-19.1,0.7c-2.2-1.5-4-1.6-6.7-0.3       c-2.4,1.2-6.1,1-8.8,0.1c-5.3-1.9-10.3,0.1-15.4,0.2c-5.8,0.2-11.6-0.8-17.1-0.6c-5.6,0.2-11.4,0.4-17.1,1.1       C888.9,640,886,639.8,883,640z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921A28"),
                d:
                  "M1281,635c-1.1,0.1-2.2-0.2-3,0.9c-6.7,0-13.3,0-20,0.1c-1.7-1.6-3.8-0.9-5.7-0.9       c-66.4,0-132.9,0-199.3,0c-1.3,0-2.7-0.1-4-0.1c0-0.3,0-0.6,0-0.9c1.7-1.8,4-1.4,6.1-1.5c22.1,0,44.3-0.5,66.4,0.2       c9.4,0.3,18.9,0.6,28.4,0.7c39.9,0,79.9,0,119.8,0c2.3,0.4,4.5,0.5,6.9,0.2C1278,633.5,1280.2,632.3,1281,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53743"),
                d:
                  "M1061,642c2.7-2.3,5.3-4.3,9-1.4c1.8,1.4,4.4-0.3,6.6,1.1c3.2,1.9,4.3,5.1,5.4,8.3       c-1.5-0.1-2.8,0.3-4,1c-1.3,0-2.6,0-4,0c-1.6-3.4-4.9-4.6-7.9-6.1C1064.3,644.1,1062.4,643.6,1061,642z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53743"),
                d:
                  "M1057,639c3.9-1.4,7.8-2.7,12-2c-1.1,1.4-2.7,1.1-4.1,1c-2.5-0.2-4.1,0.7-4.9,3.1       C1059,640.3,1056,642.7,1057,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63C45"),
                d:
                  "M786.3,651.4c-1.4,1.9-3,1.2-4.8,0.6c-1.3-0.4-1.3-1.1-1.1-2.2c0.2-0.9-0.2-2,1.1-2.4       c1.1-0.3,1.3,0.6,1.6,1.4C783.6,650.4,786,649.6,786.3,651.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963B4C"),
                d:
                  "M1126.9,632.1c0.1,0.3,0.2,0.5,0.3,0.7c-1.6,1.3-3.5,0.6-5.3,0.6c-23.1,0.1-46.2,0-69.3,0.1       c-1.8,0-3.7-0.4-5.4,0.4c-47.7,0-95.3,0.1-143,0.1c-1.2,0-2.4,0.1-3.3-0.9c3.8-2.8,8.2-0.9,12.2-1.5c17.7,0,35.5,0,53.2,0       c2.3,0,4.6,0,6.9-0.8c2-0.4,4-0.3,6-0.3c46.7,0,93.4,0,140.1,0C1121.9,630.5,1124.7,629.9,1126.9,632.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C06877"),
                d:
                  "M749,633.3c-22-0.1-43.9-0.2-65.9-0.2c-2.3,0-4.7-0.1-7-0.1c-0.3-0.7-0.1-1.3,0.6-1.6       c2.2-1,4.6-0.7,6.9-0.7c19.2-0.1,38.3,0.1,57.5-0.1c35.3-0.2,70.6-0.1,105.9-0.1c1.8,0,3.7,0,5.4,0.9c0.7,0.4,0.9,0.9,0.6,1.6       c-18.8,0-37.6,0-56.5,0.1c-2.2,0-4.3,0.2-6.5,0.3C776.3,633.3,762.7,633.3,749,633.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C15262"),
                d:
                  "M1047.2,633.9c1.6-1.5,3.5-0.8,5.2-0.8c23.1,0,46.2,0,69.3,0c1.8,0,3.6-0.1,5.5-0.2       c7.6,0.1,15.2,0.1,22.8,0.2c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3c-31.3,0-62.6,0.1-94,0.1c-2.3,0-4.7,0.1-7,0.1       C1048.4,634,1047.8,633.9,1047.2,633.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B65D6C"),
                d:
                  "M853,632.9c0-0.3,0-0.5,0-0.8c1.3-1.6,3.2-1.6,5-1.6c17-0.2,34,0,51,0.1c1.2,0,2.3,0.2,3.4,0.8       c0.7,0.4,0.9,0.9,0.6,1.6c-4,0.1-8,0.1-12,0.2C884.9,633.1,869,633,853,632.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44D5F"),
                d:
                  "M676.1,632c0,0.3,0,0.6,0,0.9c-4,0-8,0-12,0c-0.1-0.3-0.1-0.6-0.1-0.9c0.2-0.8,0.7-1.4,1.5-1.8       c1.3-0.5,2.6-0.4,3.9-0.1C671.5,631.1,674.2,630.1,676.1,632z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("501515"),
                d:
                  "M631.9,624.1c0.7-1.2,1.9-1.1,3-1.1c1-0.2,2.1-0.3,3.1-0.3c5.1,0.2,9.9,2.4,15.1,2       c0.9,0,1.7,0.2,2.5,0.4c3.9,1,7.8,0.3,11.7,0.5c2.1,0.1,4.3-0.4,5.9,1.7c-1.1,2.7-3.5,1.8-5.5,2c-4.1,0.4-8.3-0.8-12.3,0.6       c-0.3,0.4-0.7,0.6-1.2,0.7c-1.2-0.1-2.4-0.1-3.6-0.4c-5-0.4-9.8-1.9-14.5-3.4C634.8,625.6,632.6,626.1,631.9,624.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C35060"),
                d:
                  "M636,626.8c5.2,0.4,10.2,1.8,15.2,3.1c-0.4,0.9-1.5,0.4-2,1C644.5,630.3,639.9,629.6,636,626.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36579"),
                d:
                  "M665,631.1c-0.3,0.3-0.7,0.7-1,1c-2.3-0.1-4.5-0.1-6.8-0.2c-0.2-1,0.5-1.4,1.2-1.7       c1.8-0.5,3.6-0.5,5.4,0C664.2,630.3,664.7,630.6,665,631.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44D5F"),
                d:
                  "M658.1,630.9c-0.3,0.3-0.6,0.6-0.9,0.9c-1.5,0-3,0.5-4.2-0.7c0.5-0.8,1.5-0.4,2.1-0.9l-0.1-0.4       c0.9-0.7,1.9-0.7,2.9-0.2C658.2,630,658.3,630.4,658.1,630.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E36579"),
                d:
                  "M655,630.2c-0.7,0.3-1.4,0.6-2.1,0.9c-1.3-0.1-2.5-0.2-3.8-0.2c0.7-0.3,1.4-0.7,2-1       C652.5,630,653.7,630.1,655,630.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B1229"),
                d:
                  "M181,490c1,0,2,0,3,0c4.1,2.3,8.7,0.9,13,1.8c11.1,2.2,22.3,4.5,33.6,5.4c1.1,0.1,2.2,0.6,3.3,0.9       c-1.3,3-2.7,6-4,9c-1.3,0-2.7,0-4,0c-16.6-3-33.2-5.9-50-8c-2.3-2.4-1.1-4.7,1.4-4.2C183,496,181,492.5,181,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1228"),
                d:
                  "M185,428c0.8-1,1.6-2.1,2.5-3c0.9-0.9,1.8-2.3,3.3-1.8c2.4,0.9-1.1,2.5,0.6,3.9       c2.3-2.3,3.6-5.9,7.4-6.2c1.2-0.1,2.6-1.6,3.6-0.2c1.1,1.5-0.2,2.8-1,3.9c-0.4,0.5-0.9,0.9-1.4,1.4c-0.8,1-2.2,0-3,1       C193,427.9,189,428.2,185,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M224.1,457.8c-2.5-0.6-5.4-1.2-3.1-4.6c0.9-1.3,2.9-1.4,3.7,0.2c1.2,2.3,4.8,3.8,3.7,6.8       c-0.7,1.9-2.9-0.5-4.4-0.2h0C224,459.3,224,458.7,224.1,457.8c0.4-0.8-0.5-0.7,0.1-0.5c0.1,0,0.1,0.1,0,0.3       c-0.3,0.6-0.8,0.1-0.2,0.4C224.1,458,224.2,457.9,224.1,457.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M221,467c1.5,0,3,0.5,4.4,0.5c4.3,0,5.2,1.8,3.8,5.6c-0.4,1-0.4,2.2-0.6,3.8c-3.5-2.5-1.2-9.5-7.6-8.9       l0,0C221,467.7,221,467.3,221,467L221,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M236,475c2.4-0.1,4.3,1,6.4,2.2c-2.6,0.2-3.6,4.3-6.8,2.3C232.9,477.8,236.3,476.5,236,475L236,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M224,462c-2.8,0.6-2.3,3.2-3,5c0,0,0,0,0,0c-1.3-2.3-1.8-5.2-4.2-6.9c-0.7-0.5-0.8-1.5-0.1-2.1       c1-0.9,1.4,0.2,1.7,0.8c1.4,2.6,3.5,1.6,5.5,1.1c0,0,0,0,0,0C224,460.7,224,461.3,224,462L224,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M160.5,448.5c-2.2,0.7-4.1,0.9-6.2-0.2C157.4,446.9,157.4,446.9,160.5,448.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M221,468c-0.1,1.4-0.9,2.2-2.3,1.9c-2.5-0.6-1.5-2.8-2.2-4.6C218.5,465.9,218,469.9,221,468L221,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("611126"),
                d:
                  "M197,427c0.7-1.2,1.9-1,3-1c1.7-0.3,3.3-0.6,5-1C203.2,429,199.6,426.2,197,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1531"),
                d:
                  "M243,413c6.1-2.7,12.7-2.3,19-4c0.6-0.5,1.3-0.5,2-0.3c0.9,0.1-1.1,1.8,0.9,1.5       c1.9-0.3,3.3,0.9,3.2,2.8c-0.1,2.3-2.1,1.4-3.4,1.6c-0.2,0-2-0.2-0.4,0.8c0.3,0.2,0.6,0.3,0.8,0.6c-4.6,1.7-9.6,1.7-14.4,2.2       c-1.3,0.1-2.5,0.4-3.8,0.8C244.7,417.6,244.2,415.1,243,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1836"),
                d:
                  "M265,416c-1-0.1-2-0.2-2.9-0.3c0.3-0.8,0.6-1.7,1.1-2.5c1.5-2.6,2.5,2.1,4.1,0.1       c-0.4-3.4-3.4-1.9-5.5-2.6c0.8-0.6,1.5-1.2,2.2-1.8c1.5-1.2,3.5,0.2,5-1l0,0c3.4-1.8,6.8-3.1,10.7-1.5c1.7,2.8-1.9,1.2-2,2.4       c1.6-0.6,3.2-1,4.8-1.4c1.1-0.3,2.5-0.3,2.9,1.1c0.4,1.6-0.6,2.5-1.9,3.1c-1.5,0.6-3.2,0.1-4.9,1.2c2.8-0.9,5.2-1.7,7.5,0.1       c0,0.3,0,0.7,0,1c-5.7-0.1-11.5,0.2-17,2C267.7,416,266.3,416,265,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M280,443c-0.1,1-2.6,1.2-1.2,2.7c2.9,3,2.2,5.4-1.6,8.2c0.7-3.1,1.4-5.6-0.2-7.9c0-1.4-1.2-2.9,0.2-3.9       C277.7,441.7,279.1,442.7,280,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M290,436c0.4,4.1-2.6,1.4-4,2C287.3,437.3,288.7,436.7,290,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B54D5C"),
                d:
                  "M311,414c-3.2,1.5-6.6,1.6-10,2c-4.6,3.2-7.4-1.1-10.1-3.2c-3-2.2,0-5.3,0.4-8c1.4-2.5,1.7-5.7,4.6-7.2       c4.7,1.1,5.6,3,2.6,6.6c-2.4,2.9-0.5,5,1.5,5.2C304.3,409.7,307.4,412.4,311,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941B3A"),
                d:
                  "M292.1,405.1c0,2.4-2.7,6.1-1.1,6.7c3.3,1.4,5.5,5.7,10,4.2c0,0.3,0,0.6,0,1c-2,1.1-4.2,0.5-6.3,0.9       c-2.6,0.5-4.5-0.9-4.7-3.9c-1-1.5-2.6-0.9-4-1c-2.6,0-5.2,0-8,0c1.5-2.7,5.5-0.9,7-4.4c-2.9,0.2-5.3,0.3-8.7,0.5       c1.8-1,2.8-1.5,3.8-2.1C284.2,403.4,287.6,402.8,292.1,405.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8818A"),
                d:
                  "M330.1,408.3c0,0.2,0,0.4-0.1,0.7c-0.7,0-1.3,0-2,0c-4.1-0.4-8.2,0.3-12.2,0.2       c-4.6-0.1-4.7-0.3-3.3-4.6c0.3-0.9-0.3-2,0.3-2.9c0.4-0.3,0.8-0.6,1.3-0.7c5.8-0.1,11.1-3,16.9-2.8c1,0.5,1.7,1.4,0.4,1.9       c-1.4,0.6,0,1.1-0.3,1.5c-1.3,1.5-3.2,2.1-4.8,3.2C328.1,405.4,331.5,404.5,330.1,408.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C9626F"),
                d:
                  "M311,414c-4.6,0.2-8-4.1-13-3.6c-1.2,0.1-3-3.7-0.7-6.3c2.3-2.6,2.9-5-1.5-6c-0.8-0.1-1.1-0.6-1-1.4       c0.9-1.8,1.7-3.7,3.2-5.1c0.4-0.2,0.9-0.4,1.3-0.4c0.7,0,1.4,0.2,1.9,0.7c0.1,4.4,3.2,8.6,0.7,13.4c-0.8,1.5,0.4,3.2,2.5,3.5       c1.5,0.2,3,0,4.4,0.3c0.4,0.1,0.9,0.3,1.3,0.5c1.2,1.3,2.9,2.1,4,3.5C313.3,414,312.1,413.9,311,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D27781"),
                d:
                  "M310,410c-0.3,0-0.7,0-1,0c-2.9-1-6.4-2.6-5.9-5.7c0.6-3.5,4.9-2.4,7.6-3.1c0.8-0.2,1.6,0.2,2.2,0.8       c-0.1,1.6,1.5,2,2.3,3.1c-0.5,1.7-3,0.2-3.5,2.2c0.3,0.2,0.6,0.6,0.9,0.6c3.1-0.1,6.3,0.6,9.3-0.5c2.4-0.9,4,0.9,6,1.6       c-3,2-6.5,2.3-9.8,3.1c-1.4,0.4-2.8,0.8-4.4-0.4c1-2.5,3.3-1.8,6.2-2.1C315.9,409.1,313,411.2,310,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73132E"),
                d:
                  "M290,414c2.7,4.6,7.1,2.6,11,3c1,1.1,0.1,1.6-0.7,1.4c-1.8-0.4-2.7-0.4-4.2,1.5       c-2.6,3.2-5.5-0.5-7.7-1.7C286.8,417.4,287.3,414.6,290,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8707A"),
                d:
                  "M310,410c3.1-1.8,6.5-0.7,10.1-1c-1.2,2.3-3.8,0.8-5.4,2.6c1.4,0.2,2.5,0.4,3.6,0.5       c-1.2,1-2.6,0.9-4.1,1C312.1,413,310.1,412.7,310,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M297,432c-0.6,3.8-2.4,5.1-6,3C292.3,432.6,294.8,432.7,297,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69122A"),
                d:
                  "M268,447c-0.2,1.4,1.4,2.5,0.5,4.4C267.5,449.8,266.2,448.7,268,447L268,447z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5989D"),
                d:
                  "M349,403.9c-1.8,0.8-3.7,1.3-5.7,1.2c-1.6,0.1-3.1,0.3-4.5-0.8c-2-3.5-2-3.6,1.6-3.8       c0.9-0.1,0.1-0.4,0.2-0.5c1.7-3.1,4.7-3.6,7.9-3.8c0.4,0.1,0.9,0.3,1.3,0.6c1.5,1.4,4,0.4,5.3,2.4c-0.8,2.9-4.8,1-5.7,3.7       C349.4,403.4,349.3,403.7,349,403.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE838E"),
                d:
                  "M340,404c1.1,0.4,2.2,0.8,3.3,1.2c-4.4,1.1-8.8,2.1-13.2,3.2c-0.7-4.1-4.7-1.6-7.2-3.6       c3.2-0.6,5.6-2.3,8.1-3.7C334.2,401.4,336.9,403.2,340,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2E3F"),
                d:
                  "M349,403.9c0.1-0.3,0.2-0.5,0.3-0.8c2.7-2.7,6.3-2.8,9.8-3c2.5,0.8,4.9,0.3,7.3-0.4       c3-1,6.1-1.6,9.2-0.3c1.7,2.2-1,1.7-1.6,2.5c-5.1,0.3-10.1,0.8-15,2.1C355.7,402.6,352.3,404.6,349,403.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4B0D1E"),
                d:
                  "M142,519c-0.3-3-0.7-5.6-4-7.4c-2.9-1.6-5.7-3.9-6.3-7.8c-0.1-0.7-0.9-1.7-1.5-1.8       c-7.9-1.3-4.7-7.5-5.2-12c0.2-0.2,0.5-0.3,0.7-0.5c9.6,0.6,18.9,2.9,28.3,4.6c0.8,0.1,1.6,0.4,2.4,0.4       c4.3,0.8,9.2-0.5,12.6,3.5c1.1,1.3,2.8,2,3.2,4.2c0.3,1.6,1.1,4.1,4,2.7c1.2-0.6,2.3,0.5,2.5,1.1c2.2,5.2,7.6,3.3,11.3,5.2       c0.4,0.2,1.2-0.2,1.8-0.3c0.1,5.5,4.6,3.2,7.3,4.1c0.2-0.1,0.3-0.1,0.5-0.2c0.3,2.2,4.7,0.8,3.7,3.9c-0.8,2.4-3.5,2-5.6,2.4       c-1.2,0.3-2.4,0.6-3.5,0.4c0.8,0.6,3.2,0.2,2.7,2.2c-0.4,1.6-2.2,1.1-3.4,0.9c-3.6-0.7-7.2-1-10.8-1.4       c-2.2-0.3-3.8-1.2-3.3-2.5c-0.8,2.7-3.6,3.6-7.1,2.1c-2.3-1-4.1,0.4-6.1,0.3c-6.4-1-12.8-2.1-19.3-2.9       C145.1,519.8,143.5,519.9,142,519z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("520F1E"),
                d:
                  "M166,523c2.2-1.3,3.7-3.5,7.1-1c2.3,1.7,5.1-0.5,6.3-3.6c0.3-0.9,0.9-2.7,2.4-1.7       c2,1.3,0.1,1.8-0.8,2.7c-1.8,1.9-0.4,2.5,1.4,2.6c4.6,0.2,9.1,0.9,13.8,2c-0.9-2.2-2.9-1.6-4.1-2.3c3.1-2.3,7.7-0.6,10.9-3.7       c-2-1.3-4,1.3-5.3-0.7c-0.9-1.4,2.4-0.5,1.5-2.2c3-3.6,6.8-1.2,10.2-1.1c2.8,0-0.5,2.2,0.5,3.7c2.3-1,5.2-2.2,4.9,3       c-0.1-3.4,0.9-5.4,4.1-5.7c1.1,1.3-1.4,2.8,0.1,4.1c2.3,1.5,0-3.6,2.9-1.8c2.3,1.4,4.2,2.2,1,4.8c-1.6,1.3-2.6,3.1-0.7,5.1       c-0.7,1.3-1.3,2.7-2,4c-12-1.7-24.1-3.4-36.1-5.2C177.9,524.9,172,523.9,166,523z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651127"),
                d:
                  "M169,498c-4.2-1.3-8.5-2-13-2c-0.7-0.7-1.6-1.2-2.5-1.5c-0.6-0.2-1.3-0.5-1.5-1.2       c-0.5-1.6,0.6-1.9,1.8-2.1c-1.1-0.4-2.2-0.7-3.1-1.5c-0.8-0.8-2.1-1-2.9-1.8c-0.8-0.9-0.4-1.8,0.4-2.6c0.2-0.1,0.4-0.2,0.6-0.3       c10.7,1.7,21.3,3.3,32,5c0.9,1.8,3.3,3.5,1.9,5.6c-0.9,1.3-2.9,0.7-4.8,0.1c-2.6-0.8-2.9,1.1-2.1,3.3       C173.7,498.7,171.3,498.3,169,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921922"),
                d:
                  "M413,402c-7.1,0-14.3,0.3-21.4-0.1c-3.5-0.2-6.6,1.8-10.1,1.4c-1.7-0.1-3.2-0.1-4.5-1.3       c0.7-1.7,2.2-1.8,3.7-1.9c5.9-0.5,11.8-1.7,17.8-1.4c6.3,0.3,12.5-0.8,18.7-1.7c12.2-0.4,24.5-1.1,36.7-1.8       c1.2,0,2.2,0.3,3,1.3c0.3,0.5,0.3,1,0,1.5c-1.3,2.1-1.6,2.1-4.8,2c-6.9-0.1-14.3-1.4-20.7,0.4C425.1,402.1,419,401.2,413,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("501116"),
                d:
                  "M483,435c-0.3,0-0.7,0-1,0c-0.6-1.9-2.7-2.9-3-5c-0.3-0.3-0.7-0.6-1-1c-1.5-1-2.5-2.4-3.4-4       c-0.9-2.1-2.9-3.4-3.9-5.4c-0.5-0.7-0.9-1.5-1.4-2.2c-0.8-1.2-1.7-2.5-2.6-3.6c-0.3-0.3-0.5-0.7-0.7-1.1       c-1.1-2.1-2.3-4.1-2.9-6.5c-0.8-0.5-1-1.3-1.1-2.2c-0.3-0.3-0.5-0.7-0.8-1c-0.7-0.5-0.8-1.2-0.8-2c0.2-0.8,0.6-1.3,1.4-1.5       c1.4,0,2.1,1,2.7,2.1c0.9,1.4,0.9,3.5,2.8,4.3c0.3,0.3,0.6,0.7,0.8,1.1c2.2,3.6,4.6,7.1,6.6,10.8c1.5,3,2.9,6,6.1,7.6       c1,1,0.7,2.8,1.9,3.7c0.6,0.6,1.2,0.8,2,0.5c0.4-0.1,0.8-0.1,1.2,0c0.4,0.2,0.7,0.5,1,0.9c1.4,2.2,3.7,3.3,5.7,4.8       c0.4,0.3,0.6,0.7,0.6,1.2c-0.5,1.6-1.6,2.3-3.3,2.1C487.5,437.9,485.9,435.2,483,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3545"),
                d:
                  "M460.9,401.1c0.1,0.6,0.2,1.3,0.3,1.9c-2.5-0.8-3.1-3.1-4.3-5c0-0.3,0.1-0.6,0.1-0.9       c-0.3-0.2-0.4-0.5-0.3-0.8c0.1-0.3,0.2-0.4,0.2-0.4C460,396.2,460,399,460.9,401.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701425"),
                d:
                  "M470,417c0.7,0.4,1,1,1,1.8c0.3,0.4,0.4,0.8,0.4,1.3c-0.3,1-1.2,2.4-1.8,1.9c-3.3-2.1-7.8-0.8-10.6-4.1       l-0.5,0l-0.5,0c-1.5-1.1-3.3-0.6-5-1l0,0c-4.1-2.5-9.3-2-13.4-4.5c-1.3-0.7-3.5-0.1-3.6-2.5c3.6,0,8-1.3,10.7,0.3       c3.4,2,6.7-0.1,9.9,1.5c3,1.5,5.4-0.5,6.4-3.8c1.9,1.2,2.4,3.5,4.1,5l0,0C468.2,414.2,468.2,416.3,470,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M436,410c4.3,1.4,8.6,2.7,12.9,4.2c1.5,0.6,3.9,0.3,4.1,2.8c-4.7,1.4-9.6-3-14.1,0.9       c-0.7-3.1-2.1-5.2-4.9-5.9c-1.4-0.4-2.5-0.7-3.1-2.1C432.7,408.6,434.3,409.8,436,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882E3B"),
                d:
                  "M467,413c-2.6-0.7-3.4-2.7-4.1-5c0.1-0.6,0.1-1.2,0.2-1.9C464.9,408.2,466.6,410.2,467,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B52738"),
                d:
                  "M417.1,398c-4.9,1.4-10,1.9-15,1.9c-8.4,0-16.7,0.7-25,2.1c-1,0-2,0-3-0.1c0.7-0.7,1.3-1.3,2-2       c0.3-0.4,0.6-0.6,1-0.8c1.5-0.3,2.9-0.9,4.2-1.8c3.2-1.2,7.3,0.1,9.8-3.3c0.9-1.1,2.2-1,3.4-0.8c5.2,4.5,11.5,3.2,17.6,3.4       C413.8,396.7,415.7,396.5,417.1,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853039"),
                d:
                  "M144,591c0.9-0.7,1.3-2.3,0.4-2.3c-4.8-0.3-3-4.2-3.3-6.4c-0.5-4-0.1-8.2-0.1-12.3       c3-2.4,5.5-6,10.4-3.8c1.6,0.7,3.2,0.1,5.1-1.1c6.6-4.1,13.2-8.8,21.6-8.3c0.9,0.5-0.1,2.2,1.9,2.2c2.9,0,5.7,1.2,8,3.1       c-0.6,2.8-1.6,5-5.2,4.1c-0.8-0.2-1.5,0.5-1.7,1.5c-0.1,0.5-0.2,1-0.4,1.4c-4.8-1.6-8,2.4-12.1,3.4c-0.6,0.2-0.3-1.6-1.8-1.2       c1.5,3.2,0.6,6.4,0.2,9.7c-0.3,1.9-1.2,3.4-2.6,4c-6.7,2.7-8.3,10.1-13.4,14.1C145.6,599,146,594,144,591z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852934"),
                d:
                  "M188,562c-3.8,0.5-7-4.2-10.9-0.9c-1.5-2,1.4-2.6,0.9-4.1c0-1.8,1.1-2.9,2.7-2.7c1.8,0.3,1.8-1.5,2.9-2       c2.5-0.9,4.4,0.5,6.3,1.7c3.7,0.1,7.4-0.4,11.3,0.1c2,0.2,2,2.4,3.7,1.9c-1,1.4,0.1,2.9-0.2,4.2c-1.9,1.6-3.3-2.4-4.9-0.3       c-1,1.3,1.8,1.3,1,3.2C196.7,562.5,192.4,561.6,188,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853039"),
                d:
                  "M172.7,575.1c-0.1,0.7-0.5,1.4-1.2,1.3c-0.4-0.1-0.9-0.8-1.1-1.3c-0.1-0.1,0.5-0.8,0.9-0.9       C171.9,574.1,172.6,574.2,172.7,575.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("792830"),
                d:
                  "M190,554c-2.3-0.3-4.7-0.7-7-1c-3.3,1.5-6.5,2.8-10.4,2.4c-3.2-0.3-6.3,1.5-9.4,2.5       c-1.7,0.5-3.2,1-4.8,0.2c-2.2-1.1-4-1.5-6.2,0.3c-1.3,1.1-3.3,0.5-3.7-1.7c-0.4-2.5-2.2-4.4-2.9-6.8c2.2-5.2,3.6-5.7,11.9-5.2       c1.3,3.1,3.3,4.6,6.9,3.3c4.2-1.5,8.4,0.6,12.7,0.9c6.5,0.4,13.1-1.4,19.6,0.7c0.5,0.4,0.6,0.8,0.3,1.4c-1.6,1.9-3.7,1-5.6,1       C189.8,552,189.3,552.5,190,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621823"),
                d:
                  "M197,550.9c0-0.3,0-0.6,0-0.9c-5.8-1.3-11.8-0.4-17.7-1.5c-7.5-1.3-15-2.6-22.4-4.2       c-4.1-0.1-8.3-0.2-12-2.3c0.5-3.2,2.6-5.7,4.2-8.3c1.1-0.2,2.1,0.1,3,0.5c14.6,7.8,30.6,9.1,46.7,9.5c2.1,0.1,4.4-0.4,6.1,1.4       c-0.1,0.7-1.1,1.3,0,2c-0.3,3.3-3.8,1.2-5,3C199,550.3,198,550.6,197,550.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72252D"),
                d:
                  "M200,550c0.7-2.6,3.8-1.3,5-3c2.4-0.1,4.8,0.4,7-1C208.8,549.8,204.9,551.3,200,550z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("500F1A"),
                d:
                  "M205,545c-13.4,0.9-26.6-1.3-39.6-3.7c-5-0.9-9.6-4.1-14.4-6.3c2.7-3.9,5.3-1.9,8,0       c2.9,1.2,6.3-0.2,9,2c9.9,0.3,19.4,3,29.1,4.6c4.4,0.7,9,0.2,13.5,2.6C208.6,545.5,206.7,544.8,205,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66212A"),
                d:
                  "M113,527c-0.4-0.8-1.2-1-2-1c-0.4-2.8,1-4.6,3.6-5c3.9-0.6,7.9-1.1,11.3,1c-0.7-0.6-2.1-1.5-0.9-2.8       c1-1,2.1-0.2,2.9,0.7c1.5,3.7,3.3,6.8,8,4c0.1,0.2,0.3,0.4,0.4,0.6c-0.1,2.4,1.5,3.3,3.5,3.9c1.7,0.5,3.4,0.8,5.1,1.5       c1.1,0.6,2.4,1.1,2.3,2.8c-3,2.5-6.5,0.9-9.5,0.4c-7-1.3-13.9-2.6-20.9-3.9C115.2,528.9,113.9,528.4,113,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1F26"),
                d:
                  "M128,520c-3.4-1.2-2.5,0.9-1.8,2.7c-8.8-2-12.7-1.1-15.2,3.3c-0.3,0.7-0.7,0.7-1,0       c-1.7-6.4,0-10.3,5-12c7.6-0.2,14.6,3,22,4c-1.1,2.1-2.5,3.2-5.1,2C130.8,519.5,129.3,518.3,128,520z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111D"),
                d:
                  "M147,532c-1-0.3-2-0.7-3-1c-1.9-3.3-6.9-2.9-8-7c0,0,0,0,0,0c-0.2-0.8-1-2.2,0.9-1.5       c2.1,0.8,4.2,1.9,6.3,2.9c1.3-1.2-1-1.9-0.3-3.2c2.1,0.4,5-0.7,6.1,2.4c2,5.9,8,4.8,12.4,7.8c0.4,1.2-2.4,1.1-2.3,2.6       c-2.7,0.4-5.3-2.6-8,0c-0.7-0.3-1.3-0.7-2-1C147.8,533.8,147.5,532.9,147,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111D"),
                d: "M168,537c-3-0.7-6.2-0.5-9-2C162,535.6,165.7,533.4,168,537z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M459,418c2.9,1.8,6.9,0.3,9.6,3.2c0.9,1,1.5-0.8,2.3-1.1c0.9,0.8,1.7,1.6,1.1,3       C469,424.1,460.8,420.9,459,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("440F17"),
                d:
                  "M483,435c3.3-1.3,5,1.3,7,3c1.3,1.4,3.4,2.5,2,5c0,0,0,0,0,0c-3.8-1.4-4.6-6.4-9-7       C483,435.7,483,435.3,483,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2C38"),
                d:
                  "M472,423c-0.4-1-0.7-2-1.1-3c0-0.4,0.1-0.8,0.1-1.2c1.9,1.7,3.4,3.7,4,6.2c-0.3,0.4-0.7,0.3-1,0       C473.3,424.3,472.7,423.7,472,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671C2B"),
                d:
                  "M474,425c0.3,0,0.7,0,1,0c1.8,0.7,2.2,2.5,3,4C475.6,428.7,474.3,427.4,474,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M477,432c0.3-0.3,0.7-0.7,1-1c1.9,0.1,2.9,1.1,3,3C478.6,435.3,477.3,434.7,477,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M459.9,424.2c-0.1,0.7-0.3,1.4-1.1,1.3c-0.9-0.2-1.3-1.1-1.2-1.9c0.1-0.5,0.8-1.2,1.2-1.2       C459.9,422.4,459.9,423.4,459.9,424.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671C2B"),
                d:
                  "M481,434c-1-1-2-2-3-3c0.3-0.3,0.7-0.7,1-1c2,1.1,3.3,2.6,3,5C481.7,434.7,481.3,434.3,481,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M455,422.6c0.9,0.1,0.9,0.8,0.9,1.5c0,0.6,0,1.4-0.9,1.4c-0.9,0-0.9-0.8-0.9-1.4       C454.1,423.4,454.1,422.7,455,422.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d:
                  "M477,432c-2-0.2-2.8-1.2-3.9-2.9C475.4,429.5,476.8,430,477,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B1120"),
                d: "M453,417c2-1.3,3.6-0.6,5,1C456.3,417.8,454.4,418.7,453,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M492,443c-0.7-1.7-1.3-3.3-2-5c1.4,0,2.4-0.7,3-2c0.3-1.1,1.1-1.6,2.1-1.8c3,0.7,7.4-0.3,6.6,5.2       c1.2-0.2,2.3,0.6,3.5,0.7c4.2,0.6,8.6,2.4,12.2-1.8c1.4-1.6,8.6,0.3,9.7,2.3c0.6,1.2,0.7,2.6,2.7,1.5c1.9-1,2.8-1.7,2.6-3       c-0.1-0.7-0.2-1.5,0.3-1.9c2.6-2.4,2.2-5.3,1.8-8.3c-0.2-1.7,1-3.8,2.2-3.2c4.4,2,2.7-2.5,4.1-3.5c1.2-1.1,2.2-0.4,3.6,0.9       c-1.3-1.7-2.4-1.8-3.6-0.9c-4.1-2.5-1.2-5.2-0.3-8c0.9-2.9,2.7-2.2,4.6-1.6c1.2,0.4,2.6-0.7,3.8,0.3c0.4,0.3,0.8,1.1,0.6,1.2       c-3.5,2.7-1.7,6-1,9c0.1-0.1,0-0.2,0-0.3c0.6-1.3,0.8-2.2-0.5-3.3c-1.3-1.2-1.1-1.5,1.7-1.9c0.8,0.8,1.8,1,2.8,1       c-0.7-0.7-1.9,0.3-2.5-0.7c-1.5-1.5,1-4.1-1.4-5.4c-2.6-7.1,10.6-15.9,16.4-13.9c1.7,0.5,1.5,2.5,3.2,2.9       c-0.9-0.9-1.4-1.9-1.9-2.8c-2-3.4-1.1-5.4,2.7-5.8c3-0.3,5.9-0.3,8.7-1.6c1.8-0.8,3.6-0.2,5.1,1c2.1,1.7,3.9,1.6,5.2-1       c1.7-3.5,4.7-4.5,8.2-4.3c2.2,0.1,4.3-0.2,6.3-0.9c1.4-0.4,2.8-1,4.1,0.3c0.6,1,2.3,2,4.7,2.7c0.5,0.2,0.5,0.3,0.3,0       c7-3.2,7.1-3.2,13.3-1.3c1.6,0.5,2.9,1.1,3.9-1.3c1.1-2.8,4.2-2.3,6.5-2.4c9.4-0.4,18.7-1.4,28.1-1.3c5.9,0.1,11.7,1,17.6,1.9       c1.3,0.2,2.6,0.8,3.9,0.3c0.4-0.2,0.8-0.4,1.2-0.6c2-1.5,4.7-1.9,5.4,0.6c1,3.4,3.7,3.2,5.8,4.4c0.1-0.2-0.2-0.2-0.5-0.5       c-1.3-1.1-5,0.4-4-2.9c0.8-2.5,3.6-2.4,6-1.6c1.3,0.4,2.1,1.5,3.1,2.4c2.3,2.1,5.1,2.5,7.6,0.7c2.8-2,6.1-2.6,9.1-4       c2.9-1.3,7.7,1,9.8,4.9c1.6,2.9,2.4,1.5,3.1-0.2c0.9-2,2.3-2.8,4.2-3c1.9-0.2,3.3,0.7,2.2,2.5c-2,3.2,0.9,3,2.4,3.9       c1.5,0.9,6.7-0.3,2.4,4c-0.1,0.1,0.4,0.2,2.2-0.3c0.2,0.1,0.4,0.2,0.4,0.2c0.2-0.1,0.2-0.2,0.2-0.4c0-0.2-0.1-0.3-0.3-0.4       c-0.2-1.2-0.5-2.6-1.9-2.5c-4.8,0.1-2.7-3.7-3.4-5.8c-0.4-1.3,0.9-2,2.3-1.8c1.6,0.3,3.3,0.7,4.7,1.6c1.9,1.2,3.2,1.4,4.9-0.9       c1.9-2.5,5.1-1.4,7.8-0.8c1.1,0.2,0.9,1.6,0.4,2.5c-0.6,1.2-1.5,2.3-2.4,3.2c-2.5,2.6,1,3.2,1.6,4.7c0.1,0.2,0.2-1.1,0.9-1.5       c2-1.2,5.3,0.1,5.6,3c0.4,4.2,2.2,3.6,4.9,2.2c1.1-0.5,2.3-2,3.5-0.5c1,1.3-0.2,2.4-1.1,3.4c-2.5,2.3-5.7,3.9-7.9,6.6       c-0.4,0.5-0.4,1.2-0.6,2.1c2.1-3.8,6-5.5,8.5-8.7c1.6-1.4,3.7-3,4.9-0.5c1.5,3.1,2.8,2.2,4.9,1.1c1.6-0.8,4.1-3.5,5.2,1       c0.1,0.5,3.6-1.3,4.9-0.4c-3.4-1.8-4.3-3.5-2.5-6.1c0.8-1.2,2.1-2.2,3.3-1.3c2.2,1.7,4.6,1.4,7.1,1.3c4.9-0.2,3.6,3.3,3.2,5.1       c-0.1-0.6,0.8-2.1,0.8-3.7c0-1.3,1.8-2.5,2.3-1.7c2.6,4.1,7.5,1.4,10.5,3.9c0.2,0.2,0.6,0.3,0.9,0.4c0.7,0.1,1.8,2.6,2.2-0.5       c0.3-1.9,5.9-2.3,7.6-0.9c0.9,0.8,1.3,2.1,0.4,2.6c-3.6,1.9-1.3,5.4-2.5,7.9c-0.5,0.9-0.1,1.9,0.5,2.8c2.8,3.8,3.1,6.1,1.4,11       c-0.2,0.6,1,0,0.4,0.1c-0.2,0-0.2-0.1-0.1-0.5c1.4-3.9,2.1-7.6-1-11.1c-1.8-2-0.5-3.8,1.2-5c1.8-1.3,3.4-1.5,3.7,1.6       c0.1,1,1.9,0.9,2.6,1.9c1.5,2.2,2.5,4.2-0.5,5.9c2.4-1.5,3-3.9,2.8-6.6c-0.1-1.4-0.5-2.9,1.1-3.4c1.8-0.5,2.3,1.5,3.4,2.4       c1.5,1.3-0.4,5.1,3.7,4.8c1-0.1,3.2,3.2,1.9,5.5c-1.5,2.7-0.3,6.1-2.5,8.5c-1.2,1.4,0.4,2,0.8,2.9c1.3,2.4,0.3,4.3-1.6,5.6       c-1.9,1.3-4.1,2.2-3.6-1.6c0.2-1.8-0.8-2.6-1.8-3.7c0.8,2.5,0.4,5.1-2,6c-3.6,1.4-7.3,1-10.4-1.3c-2.2,1.7,0.9,7.4-4.7,6.7       c-2.4-0.3-3-2.3-1.7-4.5c-2.2,0.7,0.5,4.7-3,4.5c-2.4-0.2-2.2-3.2-4.6-4.2c-0.4,2.7-0.6,5.3-3.8,6.4c-4.7,1.7-9.2,3.6-14.3,2.1       c-0.7-0.2-1.9-0.6-1.4-1.6c0.6-1.3,2-0.6,3.1-0.6c0.7,0-0.4-1-0.1-0.5c0.1,0.2,0,0.3-0.4,0.3c-4.4,0.5-9,0.2-12,4.6       c-0.8,1.2-2.2,1.3-3.9,0c-2.8-2.1-5.1-5.6-9.9-3.1c-0.8,0.4-4.8-0.6-7.1-1.7c-1.4-0.6-2.6-0.4-3.9,1.1c1.7,1.1,5.2,1.2,3.9,4.1       c-1.3,2.9-4.1,0.7-6.2,0.7c-0.7-0.3-0.2,1.1-0.1,0.4c0-0.2,0.2-0.2,0.4-0.2c0.7,0,1.5,0,1.7,0.6c0.4,1-0.5,1.7-1.3,1.7       c-4.6-0.1-8.7,1.4-12.8,3.5c-1.5,0.8-2.2-0.9-3-2c-2.3-3.4-4.3-3.5-7.3-0.6c-1,1-1.6,2.1-3,3.1c-4.2,2.9-9.3,3.3-13.7,5.5       c-11.3,2-22.7,3.7-34,5.7c-3,0.3-5.9,1.4-9,1.4c-4.8-0.3-9.5,0.3-14,1.7c-17.6,3.9-35.6,6-53.5,8.5c-3.6,0.5-7.1,1.9-10.8,1.8       c-1.9-0.1-3.8-0.1-5.6,0.5c-2.6,0.4-5.1,1.4-7.7,1.4c-1.6,0-3.1,0.1-4.6,0.6c-1.6,0.4-3.2,0.4-4.8,0.7       c-6,1.1-12.2,1.2-18.2,2.5c-1.6,0.3-3.3,0.2-4.6-1.1c-1.5,0.3-2.3-2.2-4-1c-3.6,2.4-5-0.9-6-2.9c-3.7-7.6-9.9-10.3-18-7.3       c-0.3,0.1-0.7,0.1-1,0.1c-2.3-2-4.7-4-7-6c-3.9-6-7.9-11.9-14-16c-0.1-1.9-1.1-2.9-3-3c0.1-0.7,1.7-1.5,0.9-1.7       C495.8,447.4,494.7,444.2,492,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841726"),
                d:
                  "M1390,467c7.2-4.1,15.3-5.3,23-8c-2.2,4,1.7,4.4,3.8,6.3c0.7-1.7-1.1-6.1,3.7-3.8       c1.3,0.6,4-0.6,3.5-3.5c4.1,0.2-0.4,4.3,2.3,5.2c1.5-6.3,2-6.6,7.3-3.8c1.4,0.8,4.7-0.2,3.9,2.9c-0.6,2.3-3.3,1.5-5.5,1.3       c1.2,3.2,5.4,0.9,6.1,4.1c0.1,0.5,1.6-0.1,1.8-1c0.8-4.1,2.9-2.7,5.1-0.7c0.7-2-1.1-4.2,1.2-5c2.3-0.8,1.2,2.4,2.9,2.6       c1.3-0.5,0.8-1.6,0.8-2.5c-0.1-1-1.3-2.3,0.6-2.8c1.4-0.4,2.9,0.1,3.3,1.5c0.7,2.4,2.9,5.2-1.1,7c-0.8,0.4-0.6,1.1-0.6,1.7       c-0.1,4.2-2.6,3.7-4.3,1.6c-2.7-3.3-4.6-0.1-6.7,0.4c-1.1,0.2-0.5,1.4-0.1,2.1c0.4,0.8,0.5,0.7,1.3,0.1       c1.7-1.2,1.7-0.7,3.8,0.9c1.3,0.9,3.5,1.1,5.2,0.9c1.5-0.2,2.2-1.6,2.4-3.3c0.5-3.3,2-5.5,6.1-5.5c4.4-0.1,0.3,4.7,3.3,4.9       c3.2-5,3.7-5.1,8.4-0.2c0.8,0.8,2,1.1,2.7,0.4c1.7-1.9-1.9-1.2-1.4-2.9c1.4-0.9,2.9,0.8,4.4,0.3c-0.9,3.5-1.1,7.4-5.7,8.6       c-1.4,0.4-1.3,2.1-1.3,3.4c-1.5,2.2-4.8,2.8-5,6c-0.6,2.2-2.2,3.6-4.2,4.4c-3-0.1-7.1,1.9-7.9-3.8c-0.1,2.6-1.6,3.8-3.8,4.2       c-2.2,0.4-3.4-0.3-4.8-2.4c-1.7-2.6-5.5-1.6-8.3-3.1c3.1,3.1,2.2,4.5-4.2,6.9c-3.7,0.1-7.5,0.8-10.9-1.4       c-2.9-5.5-8.3-6.2-13.6-6.3c-4.1-0.1-7.1-2.2-10.6-4.6c1.5,4.4-4.4,5-4.2,8.9c-0.1,1.8,0,3.6,0,5.4c0,2,0.1,4-1.3,5.6       c-0.2,1.4,0.3,3-0.9,4.1c-1.2-0.9-1.4-2.2-1.4-3.6C1388.3,489.3,1388.6,478.2,1390,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841726"),
                d:
                  "M1423.3,458.6c-1-2.4,0.5-3.1,1-4.1c1.1-2.4-0.7-2.4-2.1-2.8c-1.5-0.4-1,1.7-1.9,1.7       c-1.5,0.1-0.3-1.2-0.8-1.8c-0.6-0.8-2.1-0.3-2.2-1.7c5.2-2.5,9-0.8,11.7,4.3C1426.2,453.5,1425.2,456.6,1423.3,458.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M1504.9,459.4c1.5-2.2,2.1-3.7,3.9-3.4c0.2,0,0.7,0.9,0.6,1.2C1508.7,458.5,1507.1,458.2,1504.9,459.4z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA2734"),
                d:
                  "M1461,490c1-1.7,2.3-3,4-4c3.2-4,5.5-0.3,8,1c-1.1,0.8-2.1,1.5-3.3,2.3c1.6,1.7,3.1-0.4,5.4,0.6       c-2.1,1.4-3.5,3.5-5.8,2.2c-2-1.1-1.9-0.2-3.1,0.9c-2.2,2-5.2,3.2-8.2,3.9c-0.1-0.2-0.2-0.3-0.4-0.5c-0.3-1.2-0.5-2.5,0-3.7       C1458.4,491.4,1459.6,490.6,1461,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A82A36"),
                d:
                  "M1391,500c0-2,0-4,0-6c1.3-1.1,2.1,0,3,0.7c1,0.7,2.1,1.5,3.2,1.2c8.9-2.3,16.7,1.6,24.8,4.2       c1.5,0.5,2.9,0.6,4.4,0.7c6.3,0.4,12.6-0.3,18.9,1c3.2,0.6,5.7-1.5,8.3-2.8c1.4-0.7,2.4-2.5,4.3-1.9c0,0,0,0,0,0       c0.1,1.5-0.3,2.8-1,4c-0.3,0-0.7,0-1,0c-0.9,1.3-0.7,3.7-2.5,4c-2.4,0.4,0.3,1.6-0.5,2v0c-5.6,4-11.5,3.1-17.7,1.3       c-4-1.1-8.6,1-12.3-2.2c-2.9,2.9-3.4-0.6-4.8-1.8c-0.3-0.3-1-0.4-1.4-0.4c-4.4,0.8-8.8,1.2-12.3-2.5c-1.7,3.3-5.2-1.9-6.9,1.5       c-1.6-1-3.1-2-4.7-3.1C1392.4,500,1391.7,500,1391,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3845"),
                d:
                  "M1389,587c2.1-0.4,4,0.7,6,1c2.5,0.5-0.7,4.1,2.6,4.6c1.4,0.2,1.8,2.9,4.3,0.2c1.3-1.5,5.2,1.2,7.7,2.5       c1.9,0.9,2.8,3.3,5.1,3.9c1.1,0.3,1.1,0.9,0.2,1.7c-2.7,2.8-0.5,4.4,2,6.3c-3.7,1.6-6.6,4.7-11.1,3.4c-0.4-0.1-1.2,1-1.8,1.5       c-2.3-0.6-5.1,1.3-7-1.2c0.3-1.4,1.4-1.6,2.2-2c1.1-0.5,2.1-1.1,1.8-2.6c-0.3-1.3-1.3-1.9-2.6-1.3c-0.8,0.3-2.1,0.3-2.2-0.3       c-1.2-4.7-6.6-3.9-9-6.9c-0.5-1.7-0.4-3.4,0-5.1c0.3-0.9,0.7-1.7,1.3-2.5c0.4-0.6,2.2-0.8,0.5-2       C1388.7,587.7,1388.8,587.3,1389,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("933440"),
                d:
                  "M1387.9,597.9c1.7-0.6,3.4,3.3,5.3-0.1c0.3-0.5,1,1.4,1.7,1.9c1.4,0.9-0.8,7.4,4.2,2.7       c1.2,1.3,3.6,1.2,3.8,3.4c0.1,1.7-0.4,3.3-2.2,4c-0.9,0.4-2-0.2-2.7,0.8c1.9,1.1,4.4-0.6,6,1.4c-0.3,0-0.7,0-1,0c-2,2-5,0-7,2       c-2.3,0-4.7,0-7,0c-1,0.3-2,0.7-2.9,1C1385,609.1,1383.9,603.2,1387.9,597.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1396,554c0.3,0,0.7,0,1,0c0.2,1.4-0.6,3,1.3,3.9c5,2.2,2.2,3.8-0.6,5.6       C1396.2,560.3,1395.8,557.2,1396,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3845"),
                d:
                  "M1396,614c1.5-3.7,4.7-1.3,7-2c0,0.7,0,1.3,0,2C1400.7,614,1398.3,614,1396,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A23642"),
                d:
                  "M1402.3,565.8c0.2-2.1,0.4-3.5,2.4-3.5c0.3,0,0.7,0.3,0.7,0.5C1405.6,564.5,1404.5,565.3,1402.3,565.8z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3845"),
                d:
                  "M1416.5,604.6c-0.2-0.7-0.4-1.2-0.3-1.5c0.1-0.3,0.7-0.4,1.1-0.6c0.1,0.3,0.4,0.7,0.3,0.8       C1417.4,603.7,1417,604.1,1416.5,604.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63945"),
                d:
                  "M1408.9,534.9c-0.3-0.6-0.6-1-0.5-1.3c0.1-0.4,0.6-0.6,0.9-0.9c0.2,0.3,0.6,0.7,0.5,1       C1409.8,534.1,1409.4,534.4,1408.9,534.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1419"),
                d:
                  "M1387.9,597.9c-1.8,5.6-0.3,11.5-1.9,17.1c-0.2,2.5-2.4,4.3-2.2,7c-3.4,2.4-5,6.2-7.7,9.1       c-0.7-0.1-1.2-0.6-1.4-1.3c0.1-2.3,1.8-3.9,2.7-5.9c0.7-1,1.4-2.1,2.1-3.1c0.6-0.9,1.3-1.6,1.9-2.4c0.5-0.7,0.8-1.5,1-2.3       c-0.4-4.5-1.2-9,0.6-13.4c0.6-1.9,0.7-3.9,0.6-6c0-0.5,0-1.1-0.1-1.6c0.4-5.4,1.5-10.6,1-16.1c1.1-8.2,0.8-16.6,1.4-24.9       c1.5-2.2-0.9-6.1,3.1-7.2c0,9-0.1,17.9-0.1,26.9c-1,4.4-0.3,8.9-0.4,13.3c0,1.6,0.3,3.3-0.5,4.8       C1388,594,1388,595.9,1387.9,597.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651412"),
                d:
                  "M1389,547c-2.3,1.9,0.1,5-1.8,7c-1.7-1.3-1.4-3.2-1.6-5c-0.1-1.8,0-3.7,0.4-5.5       c1.2-9.6,0.3-19.2,0.5-28.9c0.1-1.8-0.1-3.7,0-5.5c-0.1-9.1,0.6-18.3-0.4-27.4c-0.2-0.6-0.3-1.2-0.4-1.8       c0.1-3.8-0.9-7.7,0.7-11.4c0.2-0.2,0.4-0.4,0.6-0.6c2,2.4,0.1,5.5,1.4,8.3c1.5-3.4-0.8-7.2,1.5-10.2c0,0.3,0,0.7,0,1       c0,12.4,0.1,24.7,0.1,37.1c0,8,0,16,0,23.9c-0.1,5.6-0.1,11.3-0.2,16.9C1389.6,545.6,1389.3,546.3,1389,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("933440"),
                d:
                  "M1388,592c0.4-6-1-12.1,0.9-18.1c0,4.4,0,8.7,0.1,13.1c0,0.3,0,0.7,0,1c0.6,0.7,0.6,1.3,0,2       C1389,590.8,1388.8,591.6,1388,592z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1429.6,513.5c-0.7,0.2-1.2,0.4-1.5,0.3c-0.3-0.1-0.4-0.7-0.6-1.1c0.3-0.1,0.7-0.4,0.8-0.3       C1428.7,512.6,1429.1,513,1429.6,513.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF2F3B"),
                d:
                  "M1453,507c0-0.8-2.1-0.9-0.7-2.2c1.3-1.2,2.5-2.5,3.7-3.8C1455.7,503.4,1457,506.5,1453,507z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2313F"),
                d:
                  "M1413,633.9c-2.7,0.3-5.4-0.1-8-1C1407.8,631.9,1410.7,630.4,1413,633.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("421016"),
                d:
                  "M1374.8,629.8c0.4,0.4,0.9,0.9,1.3,1.3c-0.1,0.3-0.1,0.6,0,0.8c0,0.4-0.1,0.8-0.1,1.2       c-0.6,0-1.2,0-1.9,0.1c-0.5-2.2-2.9-1.9-4.2-3.1C1371.5,628.6,1373.1,628.6,1374.8,629.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("381011"),
                d:
                  "M657.9,630.2c-1-0.1-2-0.3-3-0.4c-0.4-0.7-2.4-1.8,0.5-1.8c5.9,0,11.9,0,17.8-0.1       c2.3-2,5.1-1.3,7.7-1.3c33.3-0.1,66.6,0,100-0.1c32.4-0.1,64.9-0.2,97.4,0.1c2.6,0,5.4,0.5,7.7-1.2c0.8-0.5,1.5-1.2,2-2       c1.9-2.8,2.6-1,3.3,0.9c0.3,1.9,1.1,3.3,3.3,3.3c60.8,0.1,121.7-0.1,182.5,0c59.8,0,119.5,0.1,179.3-0.1       c24.1-0.1,48.3-0.1,72.4-0.1c2.6,0,5.8-0.9,7.4,2.5c-21.8,0-43.6,0.1-65.4,0.2c-0.1,0-4.8-2.2-1.8,1.8       c-45.2,0-90.4,0-135.7,0.1c-2.2,0-4.3,0.1-6.5,0.1c-46.5,0-93-0.1-139.5-0.1c-4.8,0-9.7,0.1-14.5,0.2       c-9.9,0.8-19.8,0.3-29.7,0.3c-10.1,0-20.2,0.5-30.2-0.3c-20,0-40,0-60,0c-33.7-0.1-67.4-0.3-101.1-0.4c-3.5,0-7,0.1-10.4,0.2       c-1.8-0.8-3.6-0.4-5.4-0.4c-20.5,0-41.1,0-61.6,0c-1.8,0-3.6,0.4-5.4-0.4c-1.4,0-2.7,0-4.1,0c-0.3-0.1-0.6-0.2-0.8-0.2       C662.1,629.9,659.9,631,657.9,630.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4F5C"),
                d:
                  "M1150,633.9c0-0.3,0-0.6,0-0.8c31.7-0.1,63.3-0.2,95-0.2c10,0,20,0.1,30,0.2c-0.7,2.5-2.4,1.2-3.9,1.1       c-38.7-0.1-77.4-0.1-116.1-0.2C1153.3,634,1151.6,633.9,1150,633.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D3241"),
                d:
                  "M1271.1,634.2c1.3-0.4,2.9,0.4,3.9-1.1c15.6,0,31.3,0,46.9,0c1.2,0,2.3-0.1,3.3,0.8       c-5.3,0.7-10.8-1.1-16.1,1c-9.3,0-18.7,0-28,0c-1.5-1.5-3.3-1-5-0.5C1274.3,635,1272.6,635.5,1271.1,634.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3745"),
                d:
                  "M1336.2,629.9c-2-1.4-4.2-0.7-6.3-0.7c-82.3,0-164.6,0-246.9,0c-2,0-4-0.1-6-0.1       c-0.3-0.7-0.1-1.2,0.5-1.6c2.5-1.2,5.2-0.7,7.9-0.7c43.3-0.1,86.6-0.2,130-0.2c7.2,0,14.3-0.3,21.5,0c3.3,0.2,6.7,0,9.9-0.9       c0.8-0.3,1.7-0.4,2.6-0.3c3.5,1.1,7.1,3,10.3-0.8c2.1-1.7,4.6-1.9,7.1-1.9c24.6,0,49.2-0.2,73.8,0.1       c11.5,0.1,22.9-0.5,34.4,0.6c1.2,0.1,2.3,0,3.3,0.9c-0.5,2.3-1.9,4-3.3,5.8c-1.6,0.1-3.2,0.2-4.8,0.3       C1358.7,630,1347.4,630,1336.2,629.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4652"),
                d:
                  "M285,266c1.9-2.3,0.6-5.9,3-8c0.4,0.3,1,0.6,1.1,0.9c0.7,5,5.9,4.6,8.6,7.2c1.8,1.7,2.2-1.9,4.2-1.2       c-0.3,2.3-1.3,4.6-0.9,7.1c-1.3-0.7-2.2-1.5-4.3-0.6C292,273.2,285.5,269.8,285,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9CA7"),
                d:
                  "M326.1,317.9c-0.1-0.2-0.2-0.4-0.2-0.7c3.5-2.5,7.5,0.2,11.1-1.2c9.5,0.3,18.5,3.6,28,4       c3.6,0.6,7.7,0.1,9.3,4.7c-0.9,1.5-2.5,1.5-3.9,1.8c-1,0.1-2-0.3-2.9-0.8c-0.9-0.5-1.9-0.8-2.8-1.2c-8.9-2.6-18-3.6-27.2-4       C333.4,320.3,329.5,320.3,326.1,317.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4AEB3"),
                d:
                  "M374,324.9c-1.9-3.7-6.7-2-9-4.9c-1.3-5.4-0.8-6,4.8-6c6.8,0,13.6,0.1,20.4,0c3.1,0,6.2,0,8.8,2       c1,1.1,1.2,2.5,0.9,3.9c-1.1,3.2-3.7,3.3-6.4,3.4c-4.2,0.1-8,1.3-11.6,3.5c-0.5,0.3-1.1,0.8-1.7,0.3c1.4,1.5,1,2.6-0.9,2.9       c-2.4,0.4-2.8-1.8-3.6-3.4C376.7,324.6,373.8,326.3,374,324.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAACB2"),
                d:
                  "M413,320c0,2.8,2.7,1.4,4.2,1.9c-1.7,3.5-4.6,3.6-7.2,4.1c-3.8,0.3-2.4-4.6-5.1-5.3       c0-0.2,0.1-0.4,0.2-0.7C407.7,318.9,410.3,318.9,413,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAACB2"),
                d:
                  "M399,320c0-1.3,0-2.7,0-4c1.3-0.2,2.5-0.7,3.8-0.5c2.9,0.3,4.5,1.5,2.2,4.5c0,0,0,0,0,0       C403,323.1,401,323,399,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("85172A"),
                d:
                  "M303,336c5.2,0.6,9.8-1.1,14.3-3.4c2.2-1.1,4.5-0.1,7-0.9c-0.6-1.4-1.2-2.6-2-4.3       c3.3,1.5,4.4,0.1,4.7-2.6c3.9,1.7,6.6,4.4,7.6,8.6c0,0.8-0.2,1.6-1.1,1.9c-9.5,0.4-18.6,3.3-27.9,4.9c-3.2,0.5-6.3,2.1-9.7,0.7       c-1.7,0.3-3.3,0.6-5,1c2-2.8,4.9-3.8,8.2-4C300.8,337.9,302.7,338.5,303,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961831"),
                d:
                  "M296,364c-4.6,1.2-9.3,2.1-13.8,3.6c-4.4,1.4-3.9,0.9-6-2.8c-2.5-4.4-2.4-8.4-1.1-12.8       c0.7-2.3,6.1-5.4,8.5-4.6c1.4,0.5,3.2-0.6,3.3-0.8c2.8-3.5,6.6-2.4,10.1-2.5c0.2-0.2,0.5-0.5,0.8-0.5c2.8,0,6.5-0.1,7,2.9       c0.6,3.4-3.4,3-5.7,3.8c-1.1,0-1.7-0.6-1.6-1.2c-0.3-1.2-0.9-0.1-0.5-0.6c0.9,1.1,0.9,2.3,0.1,3.5c-2.6,1.2-2.7-0.4-2.9-2.1       c0.2,2.7,3.1,4.4,3.6,7.2C298.2,359.2,298,362.6,296,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1932"),
                d:
                  "M299,350c0.1-0.1,0.2-0.3,0.2-0.4c0.7-2.6,5.7,0.1,4.8-3.1c-0.7-2.3-4.6-1.5-7-2.5c0-0.3,0-0.7,0-1       c3.7-3,8.5-1.8,12.6-3.4c3.6-1.4,7.4-2.9,11.5-1.7c0.9,2-0.4,2.8-2,3c-2.2,0.2-1.4,1.7-1.5,2.9c-1.4,5.5-4.7,2-7.8,1.2       c0.3,2.7,1.9,4.6,1.4,6.9c0,0.7-0.1,1.4-0.3,2.1c-0.8,3.1-2.2,6.2-4.9,7.7c-2.3,1.3,1,1.6,0,2.3c-2.1,1.9-4.4,2.9-7.1,1.1       c-1-0.3-2-0.7-3-1c1-1.7-0.1-4.3,2.9-5.1c-1.5-0.8-3.6,0.5-3.2-2.4c0.5-3.2,0.1-3.3-3.5-4.5c0.7-1.5,2.2-2.7,1.5-5       c2.2,1.6,0.2,4.9,3.3,5c0.2,0,0.3,0,0.5,0c0.7-0.2,1.1-0.8,1.4-1.4C298.9,350.3,299,350.2,299,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("88182E"),
                d:
                  "M299,365c2.5,0,4.9-0.4,7-2c4.8-3.2,10.4-4,15.8-5.5c2.9-0.8,5.7-1.5,8.6-2.4c2.1-0.7,4.2-1,6,0.9       c0.6,1.3,0.4,2.5-0.7,3.6c-5.6,2.7-11,5.9-16.2,9.3c-1.6,1.1-3.2,2.4-5.4,1.5c-1.6-3.4,1.7-3.6,3.6-5.3       c-7.2,3.1-14.3,5-21.6,5.7c0.1-2.2-1.8-2-3-2.7C295,367,297,366,299,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E152E"),
                d:
                  "M293,368c1.3,0.2,3.4-0.8,3,2c2,4.9,1.6,6.2-2.6,9c-0.4,0.3-1.2,0.1-1.2,0.5c0.6,8-4.6,3.6-7.7,3.6       c-0.2,0-0.3,0-0.5,0c-3.3-0.7-4.6-3.4-6-6c-0.6-2,1.4-2.3,2.2-3.3c0.7-0.8,0.6-1.2-0.2-1.7c0,0,0,0,0,0       C284.1,370.1,288.6,369.1,293,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A41E38"),
                d:
                  "M321,338c-8.2,0.9-15.7,4.9-24,5c-1.8,0-1.5-0.9-1-2c10.7-2.3,21.5-4.6,32.3-6.8c2-0.4,4-0.3,5.7,0.9       c1-0.3,1.2,0.2,1.1,1.1C330.5,337.6,326.1,340.2,321,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8495A"),
                d:
                  "M333.9,333c-2.1-2.9-3.7-6.3-6.9-8.2c-1.3-2.5-4.2-3-6.2-4.7c0.2-0.5,0.6-0.7,1.1-0.9       c4.3,1.3,6.8,5.1,10,7.8c2.3,1.3,4,3,3.3,5.9C334.8,333.3,334.4,333.3,333.9,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B25E6E"),
                d:
                  "M321.9,319.3c-0.3,0.3-0.7,0.6-1.1,0.9c-1-0.4-1.9-0.8-2.9-1.2c0-0.4,0.1-0.9,0.1-1.3       C319.4,318.2,320.7,318.7,321.9,319.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D2536"),
                d:
                  "M326.1,317.9c9.8,1.4,19.8,1.2,29.6,3.1c3.6,0.7,7.2,1.1,10.4,3c-1.8,1.7-4.2,1.8-6,0.9       c-4.8-2.2-9.7-1.2-14.6-1.8c-2.9-0.4-5.7-2.6-8.6,0.9c0.7,1.1,2.4,2.5,2,4.6c-0.1,0.5-0.3,0.9-0.6,1.3c-1,0.7-1.8,0.2-2.6-0.3       c-1.8-1.1-2-3-2.6-4.7C331.3,322,328.3,320.3,326.1,317.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B131A"),
                d:
                  "M333.1,324.9c1,1.4,2,2.7,3,4.1c0.8,1.8,3.3,3.5,0.2,5.4c-0.9,0-1.6-0.3-1.2-1.4       c-0.3-2.3-2.2-3.9-3.1-5.9C332.8,326.6,333,325.8,333.1,324.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05A63"),
                d:
                  "M615,308c-6-0.4-12.1-0.6-18-2c0.1-0.9,0.4-1.7,1.3-1.9c4.4-0.9,8.8-1.3,13.1,0.3       c2.6,1,2.8-0.7,3.1-2.4c0.1-1,0.5-1.6,1.4-1.7c0.8,0,0.9,0.8,1.1,1.4c0.9,2.7,1.7,2.4,2.5-0.1c0.1-0.4,0.5-0.7,0.8-1.1       c3.1,5.1,5.3-0.8,8.1-0.7c3.3,0.1,6.3-0.7,9.5-1.7c4.8-1.5,10,0.8,15.1,0.1c6.8-1,13.9,0.8,20.7-1.9c3.6-1.5,7.8-0.4,11.6-2.2       c0.3,0.3,0.4,0.3,0.4,0.3c-0.3-0.2-0.5-0.4-0.7-0.6c-0.1,0.1,0,0.2,0.3,0.3c0.1,0,0.3,0.1,0,0c-0.3-0.9-0.4-1.6-0.4-2.3       c1.5-1.6,3.6-1.5,5.1-0.8c6.2,2.7,13,0.4,19.3,2.5c1.6,0.5,3.2,0.8,4.5,1.9c0.9,3.4-1.8,3.4-3.8,3.7c-6.9,1-13.8,1.7-20.7,2.5       c-7.2,0.9-14.1,1.4-21.1-0.2c-0.8-0.2-1.9-0.1-2.4,0.4c-5.1,5.2-10.4,1.4-15.5,0.1c-3.8-1-7,0.2-10.2,1.3       c-5.1,1.7-10,4.6-15.7,2.6c-0.5-0.2-1.2,0.4-1.9,0.6c-0.6,0.4-1.1,0.9-1.6,1.4C619,308,617,308,615,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D65C67"),
                d:
                  "M714,296c-9.5-2.5-19.4-1.9-29-4c-2.6,0-5.2,0-7.7,0c-1.5,0-3,0.1-3.3-2c4.4-2.2,8.9-0.5,13.3-0.1       c0.9,0.1,1.8,0.1,2.8,0.2c2.4,0.9,4.8,0.2,7.2,0.4c2.2,0.1,4.4-0.1,6.7,0.1c3.6,0.8,7.4-0.1,11,1.1c3.9,1.7,8.1,0.4,12.1,0.8       c2.2,0.6,5-1.4,6.5,1.6c-0.1,3.1-2.6,3.1-4.7,3.3c-3.8,0.2-7.6,0.1-11.5,0C716.2,297.2,714.9,297.1,714,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7545B"),
                d:
                  "M621,292c-2.5-4.1-6.4-1.4-9.7-1.9c-2.6-0.4-5.4,0.3-6.3-3.1c0.8-1.8,2.3-2,4-1.6       c4.1,1.6,8.2,2.2,12.5,1.1c3.4-0.9,6.7-0.2,9.8,0.7c2.2,0.6,4.3,0.5,6.4,0.5c3.7,1.6,7.6,0.5,11.3,1c1.9,0.3,4.9-0.5,3.9,3.3       C642.3,292,631.7,292,621,292z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D65C67"),
                d:
                  "M653,292c-0.8-3.3-3.5-1.6-5.4-2c-3.5-0.8-7.7,1.8-10.7-2c0.2-0.2,0.4-0.4,0.7-0.6       c3.9-0.9,7.8-0.2,11.6-0.4c3.3-0.1,6.7,0,9.9,0.9c1.6,0.1,3.2,0.1,4.8,0.2c1.5,0.9,3.3,0.1,4.9,0.6c0.3,0.3,0.4,0.5,0.3,0.8       c-0.1,0.3-0.1,0.4-0.2,0.4c-0.3,2.4-2.2,2-3.7,2C661.2,292,657.1,292,653,292z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3555F"),
                d:
                  "M605,292c5.3,0,10.7,0,16,0c-0.2,1.7-1.3,2-2.8,2c-3.9,0-7.8,0-11.8,0C604.8,294.1,604.4,293.5,605,292       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B97D80"),
                d:
                  "M669,289.9c0-0.3,0-0.6,0-0.8c2.8-1.5,6,0.2,8.9-1c3.3-0.4,6.4,0.5,9.4,1.8c-4.4,0-8.9,0.1-13.3,0.1       C672.3,290,670.7,290,669,289.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B77178"),
                d:
                  "M500.1,273.9c-1.1-3.7-5.9-0.4-7.1-3.7c-0.5-0.4-0.5-0.7,0.1-1.1c5.8,1.8,11.9,2.4,17.5,4.8       C507,273.9,503.6,273.9,500.1,273.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B6646A"),
                d:
                  "M511.9,274c1.4,0,2.7,0.1,4.1,0.1c0.6,0.7,2.5-0.2,2,1.7c0,0,0,0.2,0,0.2       C515.8,276,513.5,275.9,511.9,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A95E61"),
                d:
                  "M525,276.1c4.7,0.1,9.4-1.1,13.9,1.4C534.1,278.6,529.6,277.6,525,276.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6444F"),
                d:
                  "M545.1,278.1c4.4-0.2,8.7-0.5,12.9,1.2C553.5,280.6,549.3,279.1,545.1,278.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99474E"),
                d:
                  "M565.1,280.2c3.6,0,7.3,0.1,10.9,0.1c-2.2,1.5-4.8,0.4-7.1,0.9C567.7,280.7,566.2,281.4,565.1,280.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD8483"),
                d:
                  "M518,275.9c-0.7-0.6-1.3-1.2-2-1.7c2.3,0,4.4,0.4,6.3,1.7C520.9,275.9,519.4,275.9,518,275.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE5D6B"),
                d:
                  "M609,286c-1.4-0.2-2.7,0.3-4,1c-1.8-1.8-4-0.7-6-1c-2.6-1.8-5.7-0.7-8.5-1.6c-1-0.3-1.4-0.5-1.5-1.4       c2.3-0.9,4.6-0.4,6.9-0.4c3.4,0.7,7,0.2,10.4,1.3c2.2,0.1,4.5,0.1,6.7,0.2c2.6,1.2,5.6-0.5,8.2,1c0.1,0.7-0.2,1.1-0.7,1.5       C616.6,287.1,612.8,287.7,609,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3E49"),
                d:
                  "M595.9,283.1c-2.3,0-4.6-0.1-6.9-0.1c-0.6-0.3-1.3-0.6-1.9-0.9c3.3,0,6.6,0,9.8,0       C597.1,283,597,283.5,595.9,283.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB6E77"),
                d:
                  "M723,318c-0.3-0.3-0.7-0.7-1-1c-0.7-1.1-3.1,0.3-3-1.7c0.1-1.9,2-1.7,3.4-2c3.7-0.8,7,2.2,10.7,0.6       c3.4-1.4,7.1-0.6,10.6-0.9c6.3-0.6,12.7,0.2,19,0.3c10,1.4,20.1,0,30.1,0.2c7,0.1,13.8,1.5,20.8,1.3c9.9-0.3,19.6,2.8,29.6,2       c6-0.5,12,1,18,1.3c0.6,1,0.6,2.1,0.3,3.2c-1.3,3.6-4.4,4.6-7.6,4.4c-9.4-0.7-18.9,1.4-28.1-1.8c-0.8-0.3-1.6-0.2-2.5-0.2       c-7,0-13.9,0.1-20.8-1.2c-5.7-1.1-11.5-0.8-17.3,0.2c-0.5,0.1-1.1,0.1-1.6,0c-4.8-1.8-9.7-1.1-14.5-0.5       c-2.1,0.5-4.2,0.5-6.3,0.2c-0.5-0.1-1.1-0.2-1.6-0.3c-2.4-0.7-4.8-0.3-7.3-0.3c-9.4,0.5-18.6-2.4-28-2.1       C724.9,319.3,723.8,318.9,723,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA6B73"),
                d:
                  "M723,318c10.8-1,21.3,2.6,32,2c2.2,1.3,4.8-0.3,7,1l0,0c3.7,1.4,7.3-0.1,11,0c2.2,0.1,4.5-0.3,6.7,0.4       c1.7,4.2,1.3,5.3-2.8,5.3c-3.9,0-8-0.6-11.8-0.3c-5.8,0.6-11.2-1.6-16.9-1.2c-8.1,0.6-16.2-0.5-24.3-1.7       c-3.6-0.5-6.9,0.4-10.4,0.7c-7.7,0.7-15.1-1.9-22.7-1.7c-1.3,0-2.6-0.5-3.8,0.4c-9.7-1-19.3-2-29-3c-0.3-0.2-0.4-0.4-0.3-0.7       c0.1-0.2,0.2-0.3,0.3-0.3c3.4,0.3,6.9,0.2,10.3,0.9c5.9,1.2,11.3-2.3,17-1.5c11.6,1.5,23.4-2.1,34.9,0.9       C721.7,319.6,722.5,319.2,723,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76871"),
                d:
                  "M733,315c-3.6,3.2-6.9-2.2-10.6-0.4c-0.7,0.3-2.3-0.8-2.7,0.8c-0.1,0.4,1.4,1.1,2.2,1.6       c-18.1-1-36.1-2.2-54-4.8c-2-0.3-4-0.1-6-0.2c-1.8-1.4-4.3,0.5-6.2-1.4c1.4-2.3,3.7-1.8,5.8-2c5.8-0.5,11.6,1.2,17.4,0.8       c1.7-0.1,3.3,0.1,4.9-0.5c0.5-0.2,0.9-0.4,1.5-0.5c5.3-1.5,10.2,0.5,15.3,1.5c4.9,1,10.1,0.8,14.8-0.3       c4.9-1.1,9.6-0.5,14.4-0.7C733.8,308.9,734.5,310.6,733,315z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6646C"),
                d:
                  "M685,309c-0.8,3.3-3.4,1.8-5.3,1.9c-7.5,0.2-14.9-1.7-22.7-0.7c1.5,1.6,3.9-0.1,5,1.8c-2,0-4,0-6,0       c-8.7-1-17.3-2-26-3c1.6-2.8,3.4-5,6.8-2.4c0.8,0.6,1.1,0.1,1.5-0.2c3.8-2.2,7.8-2.4,12-1.3c2.6,0.7,5.3,0.3,7.9-0.1       c3.8-0.5,7.5-0.3,11.2,0.8c3.2,0.9,6.1-1.1,9.2-1.5C683.5,303.6,684.2,303.9,685,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d: "M647,318c-2.7-0.4-5.5,1-8-1C641.7,317.4,644.5,316,647,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d:
                  "M658,319c0,0.3,0,0.7,0,1c-1.7-0.2-3.6,0.7-5-1C654.7,319,656.3,319,658,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97079"),
                d:
                  "M652,319c-1.7-0.2-3.6,0.7-5-1C648.7,318.2,650.6,317.3,652,319z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45D67"),
                d:
                  "M685,309c-2.4-4.4-5.3-5.5-11-2.5c-2.5,1.3-4,1.2-6.2,0.2c-5.6-2.7-11.3,1-16.9-0.3       c-4.5-1-8.4-0.4-12.8,1c-2.3,0.7-5.7-1.3-8,1.6c-2-0.3-4.3,0.8-6-1c1.1-1,2.5-0.1,3.8-0.7c0.5-0.1-0.3-1-0.1-0.3       c0.1,0.3,0.1,0.4-0.2,0.5c-2.3,0.2-4.6,0.4-6.5-1.4c0.8-1.3,2.8-1.8,3.5-1.5c7.1,3.3,12.4-2.2,18.5-3.5c3.6-0.7,6.5-0.3,10,0.5       c3.2,0.8,6.7,1.1,9.8,2.9c1.2-2.2-1.5-2.2-1.2-3.6c6.4-1.4,13.3,2.4,18.8,0.7c8.1-2.5,16.5,0.8,24.1-3.3       c1.3-0.7,3.3-0.3,4.9-0.3c1.9,0,3.7,0.1,4.7-2c1,0,2,0,3,0c1.2,0.9,1,4.9,4.2,1.8c0.9-0.9,11.3,3.8,12.3,5.1       c-0.1,0.9-0.7,1.8-1.5,1.8c-5.4-0.3-10.7,4.1-16.2,0.4c-0.8-0.6-1.9-0.6-2.9-0.2c-6.7,2.4-13.7,1.5-20.5,0.7       C689,305.3,686.6,306,685,309z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6646C"),
                d:
                  "M621,306c2.3,0.5,4.7,0.9,7.1,1.4c-1.3,1.1-2.8,0.3-4.1,0.6c-1,0-2,0-3,0C621,307.3,621,306.7,621,306z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE7982"),
                d:
                  "M701,326c0-0.3,0-0.7,0-1c1.4-1.5,3.1-1,4.7-0.8c4.1,0.5,8.1,0.3,12.3-0.7c4.9-1.2,10.1,1.1,15.2,1.4       c10,0.6,20,2.4,30.1,1.9c6.5-0.3,13,0.3,19.2,2.4c0.3,0.1,0.9,0.5,1,0.1c0.2-2.5,0.4-3.1,2.4-2.8c4.1,0.6,8.3-0.5,12.3,1.4       c3.1,1.4,6.6,0.6,9.9,0.7c14.8,0.3,29.5,1.1,44.1,3.5c2.6,0.4,5.4,0.8,7.3-1.9c0.4-0.4,0.8-0.5,1.3-0.5       c1.4,0.8,1.4,2.6,2.4,3.7c0.3,0.4,0.5,0.9,0.7,1.4c0.4,1.8,0.6,3.7-0.7,5.3c-2.9-0.2-1.3-2.2-1.5-3c0,3.4-2.9,3.5-5.6,3.2       c-12.9-1.4-25.8-2.3-38.7-3.3c-8.1-0.7-16.2-0.8-24.3-1.8c-9.3-1.2-18.6,0.3-28.1-1.5c-5.1-1-11-0.4-16.6-0.9       c-8.4-0.1-16.7-1.9-25.1-2.5c-5.3-0.4-10.6-0.6-15.8-1.7C705.1,327.9,702.7,327.9,701,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7077"),
                d:
                  "M860,330c0.3,2.9-0.4,4-3.8,3.7c-6.1-0.6-12.3-1.3-18.3-2.7c-0.3-0.1-0.6-0.3-0.9-0.3       c-11.2,1.7-22.4-2.6-33.7-0.4c-1,0.2-1.5-0.3-2.3-0.6c-5.6-1.9-11.5-1.1-17.5-2.5c0.7,2.6,2.6,1.2,3.5,2.4       c-0.2,0.1-0.4,0.4-0.6,0.3c-13.4-1.9-26.9-1.3-40.3-2.3c-8.6-0.7-17.5-0.3-25.9-3.4c-2.7-1-4.2,1.9-6.9,1.9       c-4.2,0-8.2-1.4-12.4-1.2c-4.7-0.7-9.3-1.3-14-2c3.6-0.8,7-1.4,11-0.8c5.4,0.8,11.1,2.1,16.5,0.7c6.2-1.7,12.3-0.2,18.2,0.4       c6.8,0.7,13.6,0.4,20.3,0.8c2.1,0.1,4.7-1.3,6.2,1.7c0.6,1.2,1.4,0.1,1.8-0.5c0.9-1.4,2.3-1.5,3.5-0.9c4.1,2.2,8.5-0.1,12.6,1       c3.7,1,2.8-1.5,2.9-3.3c1.3-1.2,2.7-1,4,0c0.3,0,0.7,0,1,0c20.7,0.9,41.4,2.6,61.9,5.3c2.7,0.3,5.3,0.1,8,0.3       C856.9,327.8,859,327.7,860,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED878E"),
                d:
                  "M701,326c14.1,2.3,28.5,2.7,42.6,5.7c1.8,0.4,3.6,0.2,5.4,0.3c0.3,0.2,0.3,0.4,0.3,0.7       c-0.1,0.2-0.2,0.3-0.3,0.3c-2.8,2.4-5.9,0.6-8.5,0c-2.5-0.5-4.8-1-7.3-1c-8.4,0.1-16.7-1.2-25-1.7c-9.5-0.6-18.7-3.1-28.2-3.3       c-3.5-1.4-7.7,0.7-11-2c0.5-2.8,2.7-2.2,4.3-1.7C682.4,326,691.8,324.6,701,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M661,325c-7.9,0.6-15.6,0.1-23-3c0.9-1.9,2.4-1.9,4-1c1,0,2,0,3,0c1.8-0.2,3.5-0.2,5,1       c3.6,1,7.3,1,11,1c0.5,0.4,0.6,1,0.4,1.6C661.3,324.7,661.1,324.9,661,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF898F"),
                d:
                  "M669,325c3.6,1.2,7.5,0.2,11,2c-5.4-0.2-10.7-0.4-16.1-0.5c-1.2,0-2.2-0.4-2.9-1.5c0,0,0,0,0,0       c2-1.1,4-0.6,6,0C667.7,325,668.3,325,669,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8489"),
                d:
                  "M642,321c-1.5-0.1-2.8,0.3-4,1c0,0-0.5,0-0.5,0s-0.5,0-0.5,0c0-0.3,0-0.7,0-1       C638.7,317.1,640.3,319.9,642,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF8489"),
                d: "M650,322c-1.8,0.1-3.5,0-5-1C647,319.7,648.9,318.9,650,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED878E"),
                d:
                  "M667,325c-2,0-4,0-6,0c0-0.7,0-1.3,0-2C663,323.7,665.3,323.5,667,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9AA1"),
                d:
                  "M748,340c0.8-1.7,1.6-3.2,4-3c6,0.5,12-0.3,18-1c6.6-2.3,12.9,0.2,19.3,1.3c3.9,1.6,8.2,1.6,12.2,1.6       c9.7,0,19.1,2,28.6,3.3c7.8,1,15.5,1,23.3,0.6c3.2-0.1,7.3-1.7,8.7,3.3c0.1,3.4-2.2,4.2-4.9,4.2c-6.6,0.1-13.3,0.2-19.9-0.1       c-13.6-0.6-27.1-1.8-40.7-2.8c-4.6-0.3-9.3-1-13.8-2c-10.1-2.2-20.4-2.4-30.6-4C750.6,341.2,749.1,341.2,748,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8B92"),
                d:
                  "M748,340c9.1-0.2,18.3,0.7,27.1,2.4c18.7,3.6,37.5,4.8,56.4,5.8c8.5,0.5,17.1,0.3,25.6,0.8       c2.2,0.1,4.1,0,3.9-3c0.8-0.9,1.1-2.7,3-2c1.7,1.9,1.2,4.3,1.3,6.5c-0.1,2.5-1.1,4.4-4,3.8c-6.8-1.5-13.7-0.3-20.4-1.3       c-7-1.5-14.2-0.9-21.3-1.4c-13.1-1-26.1-2.3-39.1-3.5c-9.6-1.7-19.3-2.3-28.9-3.6c-6.5-0.9-13.1-1.7-19.7-2.2       c-0.5,0-1.1-0.2-1.6-0.3c-2.1-0.9-4.4-0.6-6.6-1c-0.5-0.1-1-0.2-1.4-0.3c-2.4-0.7-4.9-0.1-7.4-0.6c-1-0.3-2-0.6-2.1-2       c7.5-0.7,14.9-0.6,22.3,1.1c1.9,0.5,3.8,1.2,5.7,0.3C743.3,338.3,745.6,339.6,748,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF848B"),
                d:
                  "M789,338c-6.3-0.7-12.7-1.3-19-2c-1.7-1.8-4-0.7-6-1c-5-0.8-10.1-0.4-15-2c0,0,0,0,0,0c0-0.3,0-0.7,0-1       c9.1,0.5,18.2-0.5,27.2,1.8c1.5,0.4,3.4,0.4,4.9-0.1c5.5-1.8,10.8,0.2,16.1,0.7c4.4,0.4,8.8,0.9,13.1,0.9       c10.4,0.1,20.7,1.5,31,2.5c5,0.5,10.1-0.2,15.1,1c2.1,0.5,4.9,0.8,4.8-3.2c1.5,1.4,0.2,3.3,1.6,4.3c1.1,0.8,1,1.9,0.5,3       c-13.2,0.9-26.3-0.9-39.5-1.8c-11-0.7-22-2.2-33-2.4C790.1,338.8,789.5,338.4,789,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951E2D"),
                d:
                  "M631,328.2c7.8-0.7,15.5,1,23.2,1.9c16.9,2,33.6,5.8,50.6,7.2c0.5,0,0.9,0.4,1.3,0.6       c0.2,0.3,0.3,0.5,0.3,0.8c0,0.3-0.1,0.4-0.2,0.4c-2.7,1.7-6,1.8-8.9,2.1c-2.2,0.2-3.9,1.1-5.9,1.5c-0.5,0-0.9-0.2-1.3-0.4       c-1.2-1.9-3.5-2-5.3-2.3c-4.7-0.6-9.2-2.2-14-2.3c-0.4-0.1-0.9-0.3-1.3-0.5c-7.6,0-15.1-1.1-22.4-3.1c-2.1-0.6-4.3,0.6-6.4-0.2       c-2.1-2.6-5.1,0.3-7.4-1.3C632.1,331.4,629.9,330.7,631,328.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951D2D"),
                d:
                  "M574.2,320.8c15.7,0.8,31.2,3.3,46.8,5.3c1,1.1,1.1,2.2,0.5,3.5c-3,2.1-5.7,3.3-9.6,0.8       c-3.4-2.2-8-1.3-12.2-1.1c-1.6,0.1-3.3,0.7-4.9,0c-4.9-2.6-10.4-2-15.6-2.5c-3.5-0.3-7-0.5-10.4-0.7c-2.6-0.2-5.4-0.5-5.9-4       C566.3,319.1,570.4,320.9,574.2,320.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE1F2D"),
                d:
                  "M621,330c0-1.3,0-2.5,0-3.8c2.5-0.4,4.7,0.6,7,1c3.5,4,4.5,8.9,5.3,13.9c-0.1,1.8,0.2,3.7-1.5,5       c-0.8,0.2-1.4-0.2-1.5-0.9c-1.2-4.4-4.3-6.1-8.6-6.1C619.9,336.2,619.6,333.2,621,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD2B36"),
                d:
                  "M574.2,320.8c-3.7,1.2-8.1-1.8-11.2,2.2c-1.2,1.9-2.8,2.9-5.1,2.6c-2.7-4-7.4-1.2-10.7-3.2       c-1.1-1.6,0.4-2.2,1.2-3c0.7-0.4,1.4-0.7,2.1-0.8c1.5,0.2,3.1-0.5,4.5,0.5c0.7,0,1.3,0,2,0c5.3,1.1,10.6,1,16,0.9       C573.4,320.3,573.8,320.6,574.2,320.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E2734"),
                d:
                  "M706,339c0-0.4,0-0.8,0.1-1.1c2.2,0.1,4.5,0.2,6.7,0.2c0.7,0.3,1.5,0.6,2.2,0.9       c2.6,1.3,5.5-0.2,8.1,0.9l0,0c2.2,1.5,4.8-0.2,7,1.1l0,0c0.5,0.7,0.5,1.5,0.1,2.2c-6.1,2-12.1-0.8-18.1-0.4       c-0.6,0-1.8-0.4-1.8-0.7C710.2,338.9,707.1,340.5,706,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941920"),
                d:
                  "M632,341c-0.4-4.9-2.8-9.1-4-13.8c1,0.3,2,0.7,3,1c0.3,1.8,2,2.6,3,3.8c1.6,3,0.4,5.9-0.6,8.7       C633,341.2,632.6,341.3,632,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED878E"),
                d: "M749,333c5.1,0.2,10.1,0.5,15,2C758.9,335,753.7,336,749,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M581.5,319.6c1.5-0.8,2.5-0.8,3.6-0.2C584.2,320.4,583.1,320,581.5,319.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E35C65"),
                d:
                  "M989.5,309.9c1.2,0.1,2.4,0.1,3.5,0.2c3.8,0.9,7.7,0,11.5,0.5c2.6,0.7,5.3,0.2,7.9,0.5       c1.4,0.4,3.5,0.7,3.4,2.3c-0.2,2.1-2.5,1.5-4.1,1.6c-2,0.1-4,0.1-5.5,1.9c2.1-1.3,3.5,0.4,5.1,1c3.5,1.4,6.6,2.5,10.1-0.7       c2.5-2.3,5.7-1.7,8.7,0.3c5.6,3.7,11.6,7,18.8,5.1c0.8-0.2,1.9-0.4,2.4,0.3c2.5,3,5.1,5.8,8.3,8c0.7,0.5,0.2,1.9-0.6,2.6       c-6.9,2.4-14,3.8-21.2,4.6c-2.7,0.3-5.1-1-7.8-0.9c-2.7,0.1-4.8,1-4,4.1c0.9,3.4-1.2,3.4-3.4,3.8c-4.3,0.7-8.2-1.4-12.3-1.7       c-1.7-1-2.9-2.3-1.9-4.5c0.8-1.9,2.5-2,4.2-1.8c2.9,0.4,4.5-0.8,4.7-3.7c0.1-1.2-0.1-2.4-1.7-2.4c-3.1-0.1-5.8-1.4-8-3.6       c-0.3-0.3-0.8-0.9-1.2-0.4c-2.9,2.8-4,0.2-5.1-1.8c-1.1-2-2-2.6-4.2-1.1c-2,1.4-4.7,1.6-6.7,0.4c-7.4-4.4-15.6-3.6-23.5-4       c-3.2-0.2-6.8,0.9-9.8,2.9c-1.5,1-2.9,1.3-4.7,0.4c-2.4-1.2,0.2-2.9-0.5-4.2c-4.6-1.1-9.3,0.1-14-2.2c-2.3-1.2-6.5-1.6-9.9-0.3       c-2.6,1-5.5,1.3-8.3,0c-1.1-0.5-2.1-1.2-1.8-2.6c0.2-1.2,1.3-1.5,2.2-1.7c1.5-0.3,3-0.3,4.5-0.4c0.2,0,0.5,0,0.5-0.1       c0.2-0.8-0.7-0.1-0.8-0.5c-5.1-0.9-10.2-1.6-15.1,0.6c-4.9,1.6-10.2-0.4-15,1.9c-0.6,0.3-1.4,0-1.9-0.3       c-7-4.3-14.4-3.5-21.8-1.3c-1.5-0.3-3-0.2-4.4-0.8c-0.3-0.4-0.6-0.8-0.7-1.3c0.2-3.2-0.7-6.8,3.5-8.3c1.9,0,3.7-0.2,5.6,0.2       c3.9,0.7,7.8-0.1,11.7,0.5c3.2,1.5,6.7,1.3,10.1,1.3c2.9,0,5.8-0.1,8.7,0.1c4.6,1,9.4,0,14,0.6c3.9,1.8,8,1.2,12,1.3       c3.1,0,6.3,0,9.4,0c0.6,0.1,1,0.4,1.4,0.8c0.5,0.7,0.7,1.5,1.1,2.2c1.5,1.5,3.4,1,5.2,1c6.5,0.1,12.9-0.1,19.4,0       c2.2,0,4.3-0.3,6.2-1.4C978.9,308.8,984.2,308.9,989.5,309.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15961"),
                d:
                  "M1059,333c0-0.5,0.1-1.4-0.1-1.4c-3.8-1.4-6.7-3.6-7.8-7.8c-0.1-0.2-1.2-0.5-1.7-0.3       c-8.2,3-14.4-1.2-20.6-5.5c-2.3-1.6-5.4-1.9-6.7,0c-4.1,5.8-8.7,2.5-12.4,0.5c-2.4-1.3-3-0.6-4.4,1.1c0-5.9,0-5.9,10.1-5.8       c-1-0.7-1.7-1.2-2.4-1.7c4.1-2.4,8.2-0.3,12.3-0.2c0.9,0.1,1.8,0.1,2.7,0.2c3.6,0.9,7.3,0.2,11,0.4c1.5,0.1,2.9-0.2,4.4,0.2       c5.5,0.5,10.9,0.1,16.4,0.2c1.8,0,3.6,0.2,5.3,0.9l-0.1,0c2,1.2,4.4,0.1,6.5,0.8c8.8-0.6,17.3,1.8,26.1,1.9       c1.2,0,2.3,0.2,3.3,0.9c0.7,0.7,0.8,1.5,0.5,2.3c-2.9,2.4-6.4,1.1-9.6,1.5c-2,0.3-4.6-0.6-5.3,2.5c-0.1,1.2-0.1,2.5-0.3,3.7       c-0.3,2.6-2.1,3.9-4.4,3.9c-6.6,0.1-12.9,1.6-19.3,2.7C1061.1,334.5,1059.9,334.2,1059,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M1234.7,298.1c-1.2-0.1-2.5-0.1-3.7-0.2c-1.6-1.1-4,0.2-5.3-1.7c-0.7-2.6-2.3-4.8-0.6-7.8       c1.4-2.6-0.6-4.9-3.7-4.2c-4.1,0.9-4.5-1.2-4.4-4.3c0.7-3.6,3.5-5.3,6.6-6.5c2.6-0.2,4.2,1.4,5.7,3.2c2.1,2.5,4.2,2.2,5.2-0.6       c1.2-3.4,3.7-4.8,6.8-5.6c2,0,4.6-0.1,4.7,2.3c0.1,2.7-2.5,2.8-4.7,2.5c0.4,2,2.3,2.5,3.1,3.8c0.7,1.3,1.7,2.9,0.3,4       c-1.7,1.4-3,0.2-4.1-1.3c0.9,4.3,5.3,7.1,5.3,11.8c-0.2,4.5-3.5,5.1-6.9,5.3C1237.6,299,1236.2,298.3,1234.7,298.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9606F"),
                d:
                  "M847.8,126.2c-1.9,1.6-4.1,1.8-6.5,1.6c-5.1-1.5-10.2-0.7-15.3-0.3c-4.2,0.1-8.5-0.1-12.7,0.1       c-2.9,0.6-5.8,0.6-8.7,1.3c-4.6,0.2-9.1,0-13.7,0.1c-4-0.7-8.1,1.6-12-0.9c0.3-2.7,2.4-2.4,4.1-2.5c8.1-0.3,16.3-0.6,24.3-1.3       c18.5-1.5,37.1-1.2,55.6-2.7c7.5-0.6,15,0.5,22.4-0.6c0.6-0.1,1.2,0,1.8,0.1c7.3,0.7,14.6,0.9,21.9-0.2c3.5-0.5,7.1-0.6,10.6,0       c4.7,2.7,9.8,1.4,14.8,1.7c1.7,0,3.4,0,5,0.4c0.8,0.3,1.5,0.8,1.8,1.6c0.1,0.6,0,1.1-0.4,1.6c-1.2,0.9-2.7,0.7-4.1,0.7       c-0.6,0-1.1-0.1-1.7-0.2c-3.6-0.7-7.4,0-11-0.8c-5.2-0.9-10.4-0.2-15.6-0.4c-14.2,0-28.4,0-42.7,0       C860,125.9,853.8,124.7,847.8,126.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24E5C"),
                d:
                  "M1354,306.2c2.3-0.1,4.7-0.2,7-0.2c2.8-0.1,4.3,1.5,5.3,3.9c-1.5,1.1,0.6,3.5-1.6,4.4       c-1.6,0.3-2.8-0.7-4.1-1.4c-0.6-0.3-1.2-0.7-1.9-0.6c-9.5,1.2-19.2-0.3-28.6,2.1c-3.4,0.9-6.1-0.9-9.2-1       c-6.1-0.1-12.2,0.2-18.4,0.1c-3,0-6,0.1-8.9-0.7c-0.5-0.2-0.9-0.6-1.1-1.1c-0.1-0.6,0.2-1,0.7-1.2c2.5-0.4,5.1,0.4,7.5-0.5       c1.3-0.1,2.5-0.1,3.8-0.2c5-1.3,10.1-0.5,15.2-1.2c6.9-1,13.8-1.9,20.8-2c1.6-0.7,3.3-1,5-1       C1348.6,305.1,1351.3,306.7,1354,306.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("985457"),
                d:
                  "M529.1,174.2c-20.6,7.5-40.1,17.4-59.7,27.1c-0.7,0.4-1.6,0.5-2.3,0.7c-0.9,0.7-1.9,0.5-2.9,0.3       c-0.9-2.5,1.2-3.1,2.7-4c3.2-1.8,6.6-3.2,9.7-5.2c5.4-2.9,11.2-4.9,16.5-7.9c8.8-4,17.9-7.5,26.9-11.2       c3.6-0.8,6.7-4.1,10.9-2.4C532.1,173.8,529.3,173.1,529.1,174.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731527"),
                d:
                  "M1251.1,342.1c0.3-0.3,0.7-0.7,1-1c0.8-0.8,2-0.6,3-1c0.8,0,1.5,0.2,2.1,0.8c0.7,0.6-1,3.9,2.3,1.9       c1.3-0.8,3.3-0.3,4.9,0c1.3,0.3,2.7,0.5,3,2.1c0.2,1.2-0.4,1.6-3.4,2.5c3.3-0.6,6.5-1,9.9-0.6c3.3,0.3,5,1.8,3.5,5.3       c-8.2,2.9-16.1,2.1-24-1.3c-1.7-1.5-3.2-3.3-6-2.2c-1.1,0.5-2.3,0.1-2.8-1.3c0-2.4,2.4-2.4,3.6-3.7       C1249.1,343,1250.2,342.7,1251.1,342.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F8F7F7"),
                d:
                  "M1116.8,314.1c18.9,0,37.9-0.1,56.8-0.2c2,0,4.4,0.8,5.6-1.8c0-0.1,0.3-0.1,0.4-0.2       c6.7-1.4,13.2-0.8,19.5,1.8c-0.2,0.2-0.4,0.5-0.6,0.7c-3.3,1.5-6.9,0.8-10.3,0.8c-4,0-8,0.3-11.8,1.8       c-18.8,0.5-37.5,0.5-56.3,0C1118.5,316.6,1117,316.1,1116.8,314.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15B5B"),
                d:
                  "M1311.1,266.9c7.2,5.2,15.3,9.1,22,15c-0.2,0.8-0.7,1.3-1.4,1.6c-2.4,0.4-3.5-1.7-5-2.8       c-8.5-6.5-17.9-11.6-26.5-17.9c-1-0.6-1.9-1.3-2.9-1.9c-11-6.2-21.3-13.5-32.2-19.9c-0.2-0.1-0.3-0.6-0.2-0.9       c0.3-0.4,0.7-0.7,1.2-0.9c5.4-0.2,8.5,4.6,13.1,6c9.8,6.9,20.5,12.3,30.2,19.5C1310.1,265.3,1310.6,266,1311.1,266.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F0ECEC"),
                d:
                  "M1300.1,262.7c9.8,5.3,18.9,11.7,28,18.1c1.2,0.8,2.5,1.5,3.8,2.3c0.2,0,0.4,0,0.7,0.1       c1.5,0.5,2.7,1.7,4.1,2.4c4.6,3.1,9.2,6.3,13.5,9.7c2.2,1.8,4,3.8,4.9,6.5c0.4,2.5-1.4,3-3.1,3.5c-1.7,2.1-4.1,0.8-6.1,1.2       c-1.6-0.3-3.3,0.6-4.7-0.7c2.9-2.2,6.4-2.5,9.8-2.9c0.6-0.1,1.3-0.4,1.6-0.8c0.4-0.7-0.2-1.4-0.8-1.6       c-8.6-2.7-13-10.9-20.2-15.5c-9.9-6.3-19.4-13.3-29.1-19.8C1301.3,264.6,1300.3,264.1,1300.1,262.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85A66"),
                d:
                  "M823.2,298.3c3.5-0.6,6.4,2,9.8,1.8c0.3,0.5,0.2,1-0.2,1.4c-5.3,2.1-5.3,2.1-18.4-0.6       c1.3-0.4,1.9,0,1.6,1.4c-1.6,1.3-3.5,1.1-5.3,0.8c-1.9-0.6-3.9-0.9-5.9-0.1c-0.5,0.1-1,0.2-1.5,0.3c-2.8,0.2-5.5,0.3-7.6-2.5       c-1-1.4-3-1-4.7-1.1c-5.8-0.3-11.6-0.1-17.4-0.4c-3.1-0.1-6.3-0.2-8.9-2.3c-0.1-0.6,0.1-1.1,0.7-1.5c2.4-0.7,4.7-0.7,7,0.4       c0.8,0,1.7,0.1,2.5,0.1c2.7,1,5.5,0.2,8.2,0.5c4-0.1,7.9,0.3,11.9-0.2c3.8-0.7,7.2,1.6,10.8,1.8c2.2,1,4.6,0.2,6.8,0.5       C816.2,298.3,819.7,298.9,823.2,298.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A5595B"),
                d:
                  "M1202.6,205.2c-21.9-11.3-44.3-21.7-66.6-32.3c-0.3-0.5-0.3-0.9,0.2-1.3c2.9-1.3,5.1,0.7,7.5,1.6       c9.4,3.7,18.2,8.7,27.5,12.7c4.9,2.4,9.7,5.1,14.7,7.4c3.6,2.1,7.6,3.6,11.1,5.9c1.3,1,2.7,1.7,4.2,2.2c1.3,0.7,2.7,1.3,3,3       C1204,205.2,1203.5,205.6,1202.6,205.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F3F0F1"),
                d:
                  "M1199.1,313.8c5.2,0.5,5.5,4.5,5.9,8.3c0.4,4.3-0.4,8.6,0.5,12.9c2.7,12.6,13.7,13.8,23.2,12.3       c7-1.1,13.5-4,20.4-5.3c0.3,1.7-1.3,2-2.1,2.8c-5.6,3.8-12.4,3.7-18.4,6.1c-3.3,0.6-6.6,0.6-9.9,0c-2.5-0.9-4.9-2-7.3-2.9       c-3.8-1.5-6.4-4-7.4-8c-1.6-5.2-2.8-10.4-1.6-16c0.8-3.6-2.2-6.7-3.4-10L1199.1,313.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3C3C3"),
                d:
                  "M1228.9,248.1c10.3,4.2,19.5,10,26,19.1c4.1,5.7,2.3,12.1,0.3,18.2c-0.9,2.8-2.4,5.5-3.3,8.3       c-1.6,5.2-5,7.1-10.2,6.2c0.7-2.9,4.3-2.5,5.6-4.8c4-5.9,6.3-12.5,7-19.4c0.7-7.4-4.9-11.5-10.1-15.3c-1.2-0.9-2.7-1.2-3.8-2.3       c-1.6-1.9-3.6-3.3-6-4.2c-2.1-1-4.5-1.7-5.9-3.8C1228.3,249.4,1228.4,248.7,1228.9,248.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F595B"),
                d:
                  "M529.1,174.2c0.6-0.8,1.3-1.6,1.9-2.4c0.3-2.3,2.2-2.7,3.9-3.2c11-3.6,22.1-6.6,33.4-9.4       c1.5-0.4,2.9-0.5,4.3,0.3c1.7,2.2-1,1.7-1.6,2.5c-9.7,2.7-19.4,5.6-29.3,8.1C537.4,171.1,533.8,174.4,529.1,174.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC4150"),
                d:
                  "M1182,293.8c-2.9,0.3-5.7,0-8.2-1.6c0.2-1.4,1.1-2.3,2.1-3.1c3.7-1.4,7.7-0.1,10.9,0.6       c6.5,1.3,12.8,0.9,19.3,1.1c1.9,0.1,4.2-1,4.7,2.1c0,0.5-0.1,1-0.3,1.5c-2.2,2.3-5.2,0.3-7.6,1.4c-4.7-0.7-9.4-1.3-14.1-2       C1186.6,293.2,1184.3,293.3,1182,293.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD6566"),
                d:
                  "M1202.6,205.2c0.5-0.4,0.9-0.7,1.4-1.1c2.2-1.1,3.7,0.5,5.4,1.3c6.7,3.2,12.9,7.2,19.6,10.5       c0.8,0.5,1.6,1,2.5,1.4c3.5,2.1,7,4.3,10.6,6.1c1.9,0.9,3.9,1.9,4.4,4.3c0,0.5-0.2,0.9-0.6,1.3       C1231.5,221.1,1217,213.2,1202.6,205.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D26471"),
                d:
                  "M779,128c4,0,8.1,0,12.1,0.1c0.2,0.5,0.1,0.9-0.3,1.2c-2,0.3-3.9,0.1-5.9,0.2c-0.5,0-1,0-1.5-0.1       c0.5,0.3,1.2,0.1,1.4,0.8c-2,1.5-4.3,1.8-6.7,1.5c-7-1.3-13.8-0.6-20.6,1.2c-1.9,0.1-3.9,0.1-5.8,0.1c-2.9,0-5.8,0.3-8.7,0.9       c-1.8,0.4-3.5,0.5-5.1-0.6c-0.4-0.6-0.3-1.1,0.1-1.6c4.1-3,9-2.3,13.5-2.5c7.3-0.4,14.4-2.5,21.7-2.5       C775.3,126.6,777.4,126.3,779,128z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15D5E"),
                d:
                  "M665.3,144.2c-4.8,2.9-10.3,1.9-15.5,2.9c-9.9,1.9-19.7,4.2-29.8,4.8c0-2.1,2-2.2,3.1-3.1       c5.4-2.5,11.5-2.3,17.1-3.8c6.8-0.8,13.6-2.3,20.5-2.7C662.4,142.6,664.1,142.6,665.3,144.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EDE8E8"),
                d:
                  "M1258,332.9c1.7-3.9,1-7.3-1.7-10.5c-1-1.1-1.7-2.4-2.4-3.7c-2.6-5.1-0.8-8.4,4.9-8.6       c5.4-0.2,10.9,0,16.3,0c-0.4,2.4-2.7,2-4.2,2.8c-1.5,0.4-3,0.4-4.5,0.4c-1,0-2-0.2-3,0c-2.1,0.3-4.9-1.1-6.2,1.7       c-1.1,2.4,1.2,3.9,2.2,5.6c1,1.7,1.6,3.5,2.1,5.4c0.1,0.7,0.1,1.5,0,2.2C1260.8,330.1,1261.5,333.2,1258,332.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("975C5C"),
                d:
                  "M463.8,201.9c1.1,0,2.1,0.1,3.2,0.1c-9.2,5.4-18.6,10.4-26.8,17.3c-0.7-0.2-1.3-0.7-1.7-1.4       c-0.6-2.4,1.1-3.6,2.7-4.9c4.7-3.5,9.9-6.2,15-9c1.7-0.7,3.2-1.9,4.9-2.6C462.1,201.2,463.1,201.1,463.8,201.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F5C5E"),
                d:
                  "M571,162c0.7-0.7,1.3-1.4,2-2c0.4-2.7,2.9-2.5,4.6-2.9c7-1.7,14.2-2.7,21.3-4.4c1.2-0.1,2.3-0.1,3.5,0       c1.5,0.1,3,0.1,4,1.5C594.7,157.7,582.9,160,571,162z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A96665"),
                d:
                  "M1136,171.8c0,0.4,0,0.8,0,1.1c-11.3-4.7-23-8.5-34.1-13.8c-0.4-0.5-0.4-0.9,0-1.4       c2.4-1.3,4.5,0.2,6.5,1c8,3.2,16.4,5.6,24.1,9.8c0.5,0.2,0.9,0.4,1.3,0.6C1134.9,169.9,1136.1,170.3,1136,171.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA646A"),
                d:
                  "M493,269.2c0,0.3,0,0.7-0.1,1.1c-4.9,0.4-8.1-4.4-12.9-4.4c-2-1.3-4.1-2.6-6.1-3.8c-1.5-0.8-3-1.6-4-3       c-1.2-2.7-4.7-2.5-6.1-4.9c0.5-0.4,1-0.8,1.4-1.2C473.9,259.4,483,265,493,269.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80313A"),
                d:
                  "M1203,295.8c2-1.9,5.1,0.4,7.1-1.8c6-2.8,13.2-1.9,15.9,1.9c1.7,0.7,3.3,1.3,5,2       C1221.5,299.1,1212.4,295.9,1203,295.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D65C67"),
                d:
                  "M609,286c4,0,8,0,12.1,0c5.1-2.1,10.2-0.7,15.3-0.1c0.2-0.1,0.5-0.1,0.6,0.1c0.3,0.2,0.6,0.5,0.6,0.9       c0,0.4-0.2,0.7-0.5,1c0,0,0,0,0,0c-2.3,3.5-4.6-0.1-6.8,0c-5.8,0.1-11.5,0-17.3,0C611.3,288,609.4,288.5,609,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC6C6C"),
                d:
                  "M1102,158c0,0.4,0,0.8,0,1.2c-10.6-3.4-21.3-6.8-31.9-10.1c-0.2-1,0.4-1.4,1.2-1.8       c3.1-0.8,5.9,0.4,8.6,1.5c5.1,1.9,10.4,3.1,15.4,5.4C1097.1,156,1101.5,153.5,1102,158z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ECE6E6"),
                d:
                  "M1264.9,240c9.3,5.9,18.7,11.7,28,17.7c1.5,1,3.3,1.6,4.3,3.2c-3,0.3-4.8-2-7-3.3       c-10.1-6.1-20.2-12.4-30.2-18.6c0.5-0.6,1.2-0.9,2-0.9C1263.4,238.1,1264.5,238.6,1264.9,240z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D65C67"),
                d:
                  "M765,296c0,0.3,0,0.6,0,1c-0.7,3.1-3.3,2.6-5.1,2.1c-5.5-1.6-11-1.6-16.6-1.9c-2.2-0.1-4.2-0.9-5.9-2.4       c-1.5-2.2,0.5-2.2,1.7-2.6c2.5-0.5,4.8,0.4,7,1.5c2.4,1.5,5,0.3,7.5,0.7c2.9,0,5.8,0,8.8,0C763.5,294.5,764.5,294.8,765,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85A66"),
                d:
                  "M856.1,300.3c2.1,0.5,4.1,1,6.2,1.4c-0.1,0.4-0.2,0.8-0.5,1.2c-0.7,0.8-1,2-2.2,2.4       c-3,0.3-5.9,2.5-8.8-1.1c-1.7-2.1-4.6-0.7-6.9,0.4c-1.2,0.4-2.3,0.2-3.4-0.5c-1.2-0.9-2.6-0.9-4-1c-0.5,0-1-0.2-1.5-0.3       c-0.9-0.6-2.1-1.1-0.5-2.2c3.4-0.1,6.8,0,10.3,0C848.6,300.4,852.3,300.7,856.1,300.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A66462"),
                d:
                  "M1071.1,148c-0.4,0.3-0.7,0.7-1.1,1c-9.3-2.6-18.7-5.2-28-7.9c-0.4-0.5-0.3-1,0.1-1.4       c1.7-1.1,3.4-0.8,5.2-0.3c7,2.2,14.3,3.5,21.3,5.8C1069.9,145.7,1071.2,146.2,1071.1,148z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A16F6C"),
                d:
                  "M1116.8,314.1c0.8,0.6,1.5,1.2,2.3,1.8c-1.4,1.7-3.4,1.4-5.3,1.5c-6.6,0.3-13.3-0.5-19.9-0.4       c-1.5,0-3.1,0.3-4-1.4c3.4-2.7,7.5,0,11-1.4C1106.2,314.2,1111.5,314.1,1116.8,314.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942634"),
                d:
                  "M865,125.1c14.6,0,29.3,0,43.9,0c0.3,0.2,0.5,0.3,0.4,0.5c-0.1,0.2-0.2,0.3-0.3,0.3       c-14.7,0-29.3,0-44,0c-0.3-0.2-0.4-0.4-0.3-0.5C864.8,125.2,864.9,125.1,865,125.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAE4E4"),
                d:
                  "M1158,251.9c0.1-2.3,1.8-3.8,3.4-4.6c6.9-3.3,13.7-7.2,21.8-7.2c-0.2,2.2-2.1,2.4-3.6,2.8       c-3.4,0.9-6.5,2.3-9.7,3.7c-2,1-4.2,1.4-6,2.8c-0.5,0.4-1,0.8-1.5,1.1c-1.1,0.6-2.1,1.4-3.3,1.9       C1158.6,252.5,1158.2,252.3,1158,251.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1168.9,245.9c4.2-3.2,9.7-3.3,14.2-5.8c1.3,0,2.6,0,3.9,0c1.6,1,3.2,0,4.8,0.1       c1.6,0.1,3.8-0.8,4.3,1.9c-1.7,1.7-4,1.5-6.1,1.4c-4.7-0.2-9.1,0.6-13.4,2.4c-1.8,0.5-3.7,1.2-5.6,1.2       C1170.2,246.9,1169.4,246.6,1168.9,245.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A06261"),
                d:
                  "M1013.1,135.8c-6.1-1.3-12.6-1.1-18.4-3.6c1-1.4,2.5-1.4,4-1.5c1.4,0,2.9,0,4.3,0.1       c4.5,1,9.1,1.3,13.6,2.6c0.5,0.3,0.8,0.7,0.8,1.3C1016.3,136.4,1014.3,134.9,1013.1,135.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F5959"),
                d:
                  "M1264.9,240c-1-0.4-1.9-0.7-2.9-1.1c-4-1.5-7.5-3.7-11-6.1c-1.7-1.2-3.4-2.5-5.1-3.7c0-0.4,0-0.8,0-1.3       c0.4-0.3,0.9-0.6,1.4-0.4c6.8,2.7,12.9,6.5,18.6,11.1c0.4,0.3,0.3,0.9,0.3,1.4C1265.8,239.9,1265.4,240,1264.9,240z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E4B4F"),
                d:
                  "M1341.1,307.1c-7,1.3-14.1,1.3-21.2,2c-2.3-0.1-4.9,1.8-6.9-1c6.8,0.4,13.2-2,20-2       C1335.7,307.2,1338.6,305.6,1341.1,307.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935F62"),
                d:
                  "M1196,242c-2.6-2.4-6.4,0.5-9-1.9c0.9-0.1,1.8-0.1,2.7-0.2c4.1-0.5,8.3-0.6,12.4,0l0,0       c0.1,2.3,1.8,0.9,2.7,1.1c1.8,0.4,3.6,0.4,5.3,0.9c0.3-0.1,0.5-0.1,0.8,0.1c0.2,1.9-1.2,2.3-2.5,2.8       C1204.2,244.6,1199.6,245.4,1196,242z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5D5D"),
                d:
                  "M790.9,128.9c0.1-0.3,0.2-0.5,0.3-0.8c4.7,0,9.4-0.1,14.1-0.1c2.4-0.9,4.8-0.3,7.2-0.3       c0.2,0.2,0.4,0.3,0.6,0.5c-5.5,2.6-11.3,1.8-17.1,1.7C794.4,128.9,792.3,130.3,790.9,128.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24350"),
                d:
                  "M1176,290c-0.4,1.1-1.2,1.7-2.2,2.2c-3.5,0-7-0.2-8.9-3.9c-0.3-0.7-0.5-1.4-0.3-2.1       c1.6-1.6,3.3-1.5,4.7,0.1c1.2,1.3,2.5,2.1,4.2,2.4C1174.5,288.9,1175.4,289.2,1176,290z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1209,244c0.7-0.7,1.3-1.3,2-2c6.6,0.3,12.2,3.4,17.9,6.1c0,0.6,0.1,1.3,0.1,1.9       c-2.1,0.9-3.7-0.3-5.4-1.1c-4.2-2.3-8.5-4.3-13.5-4.1C1209.7,244.6,1209.3,244.4,1209,244z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A66B6E"),
                d:
                  "M1065.1,313.9c-7.4-0.3-14.8,1-22.2-0.8c2.9-1.5,6.1,0.1,9-0.9C1056.4,312.3,1061,311,1065.1,313.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80313A"),
                d:
                  "M1248.1,296.1c-1.2,2.6-4.6,1.7-6.2,3.8c-2.5-0.2-5.1,0.2-7.1-1.7c2.2-1.4,4.8,0.2,7.2-0.9       c2.2-1,3.3-2,3.1-4.3c1.4-0.6,2.4,0,3.3,1C1248.6,294.7,1248.5,295.4,1248.1,296.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B08988"),
                d:
                  "M1258,332.9c2.6-0.8,1.6-3.5,2.9-5.1c1.2,0.9,1.3,2.2,1.3,3.6c0,0.8-0.1,1.5-0.4,2.3       c-1.5,3-2.5,6.5-6.7,6.9c-1,0.2-2.1,0.3-3.1,0.5C1254.3,338.5,1256.7,336.2,1258,332.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("934448"),
                d:
                  "M758.3,131.9c6.6-1.4,13.4-1.8,20.1-1.7c1.7,0-0.4,1-0.2,1.6c-5.4,0.1-10.7,0.3-16.1,0.4       C760.8,132.5,759.5,133.1,758.3,131.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A5455"),
                d:
                  "M1013.1,135.8c1.1-1.3,2.7-0.7,4.1-1c3.2-2,6.4,0.3,9.5,0c1.8,0.6,4,0.6,4.5,3       c-0.4,0.5-0.9,0.6-1.4,0.3C1024,138.6,1018.6,136.7,1013.1,135.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A57372"),
                d:
                  "M969.1,129.9c-4.1-0.2-8.4,1.3-12.1-1.7c0.2-0.2,0.4-0.4,0.6-0.7c2.5-1.3,5.1-0.7,7.7-0.9       c3.3,0.6,7-1.3,9.9,1.8C973.6,130.8,970.9,128.6,969.1,129.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E4D4B"),
                d:
                  "M826.8,126.9c5-1.6,10.1-0.3,15.2-0.8c0.5,0,1.5-0.1,0.5,0.8c-0.3,0.3-0.8,0.6-1.1,0.8       c-4.1,0-8.2,0.1-12.4,0.1C828.4,127.3,827.3,127.8,826.8,126.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA7374"),
                d:
                  "M1270.9,311.9c1.4-0.6,2.8-1.2,4.2-1.8c2,0,4,0,5.9,0c3.9,1.2,8-0.5,11.8,0.9c0,0.3,0,0.6-0.1,0.9       c-3,2.6-6.7,1.4-10,1.5c-3.1,0.1-6.3,0.2-9.4-0.2C1272.4,313.1,1271.5,312.8,1270.9,311.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A77474"),
                d:
                  "M919.2,306.1c-4.8-0.7-9.7,0.8-14.3-0.9c1.4-1.5,3.4,0,4.9-1c4.5-0.2,9.1-0.5,13.3,1.7       C922,306.9,920.6,306.5,919.2,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E5F62"),
                d:
                  "M1165,286c0,0.8-0.1,1.5-0.1,2.3c-3.7-4.1-3.2-9.6-4.8-14.3c-0.9-1.2-0.6-2.5-0.3-3.8       c2.4-0.7,2.5,1.3,3.2,2.6c0.4,2,0.5,4,1.1,6C1164.3,281.1,1165.6,283.5,1165,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("996464"),
                d:
                  "M744.3,134.2c-3.8,2.8-8.2,1.5-12.4,1.7c-1.5-1.2-3.9,0.8-5.1-1.5c2.8-3,6.4-1.4,9.7-1.6       C738.9,134.5,741.9,132.7,744.3,134.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3545B"),
                d:
                  "M724.2,136.1c-3.2,2-6.7,1.9-10.3,1.7c-1.5-1.1-3.8,0.7-5.1-1.3c3.8-3.2,8.5-1.8,12.8-2.4       C722.7,134.5,723.7,135,724.2,136.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDB8B8"),
                d:
                  "M1160,270c0,1.3,0,2.6,0,4c-2.6-5.4-4.3-11.1-3.3-17.2c0.5,0.2,0.9,0.5,1.1,1       C1159,261.7,1161.3,265.6,1160,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46B6C"),
                d:
                  "M936.9,126.1c1.4-0.1,2.7-0.1,4.1-0.2c3.5-1.6,7-2.5,10.2,0.6c-3.1,2.2-6.9,0-10.1,1.3       c-3.3,0-6.6,0-10-0.1C932.2,124.4,935.1,127.1,936.9,126.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B67D7D"),
                d:
                  "M1025.3,311.9c-4.1,0.1-8.2,0.1-12.3,0.2c-2.7-0.5-5.5,0.6-8-0.9c0.2-0.2,0.4-0.4,0.5-0.6       c3.5-0.4,7,0.4,10.4-0.4C1019.2,310,1022.3,310.7,1025.3,311.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37F80"),
                d:
                  "M636.3,285.9c-5.1,0-10.2,0-15.3,0.1c0-0.3-0.1-0.6-0.1-0.9c0.7-1.1,2.1-0.2,3-0.9       C628.2,283.6,632.3,284.3,636.3,285.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6668"),
                d:
                  "M886.2,304.1c-4.1-0.5-8.2,0.7-12.2-0.9c1.8-1.6,4.1,0.1,6-1c3.6-0.5,7.1,0,10.3,1.8       C888.9,304.9,887.5,304.6,886.2,304.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("914043"),
                d:
                  "M688.3,141.7c-4.2,0.4-8.4,0.7-12.6,1.1c-1.7-0.5-1.2-1.4-0.4-2.3c3.6-1,7.2-2,11-1.6       c0.5,0.1,1,0.3,1.5,0.6C688.5,140.1,688.6,140.8,688.3,141.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37A7D"),
                d:
                  "M989.5,309.9c-5.5,0-11,0-16.5,0c-0.3-0.5-0.3-0.9,0.2-1.3c2.2-0.5,4.5,0.3,6.7-0.5       C983.3,307.7,986.4,308.6,989.5,309.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A05B5C"),
                d:
                  "M623,149.9c-1,0.7-2,1.3-3,2c-4,0.7-8,1.4-12,2.1c0-2.2,2-2.2,3.2-3C615.1,149.9,618.8,147.3,623,149.9       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3595B"),
                d:
                  "M675.1,141.2c0.2,0.5,0.4,1.1,0.6,1.6c-1.9,2.1-4.4,1.2-6.7,1.2c-1.1-1.2-3.4,0.6-4.1-1.6       C668,140.1,671.4,139.5,675.1,141.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("974A4D"),
                d:
                  "M744.3,134.2c-2.4-0.1-4.9-0.1-7.3-0.2c-0.2-0.9,0.1-1.3,1-0.9c4.6-0.3,9.3-0.6,13.9-0.9       c0.7,0.6,0.7,1.1,0,1.7C749.4,134,746.9,134.1,744.3,134.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA8E8E"),
                d:
                  "M950.9,306.2c2.9-0.3,5.7,0.5,8.3,1.7c-2,2.1-4.6,1.3-6.9,1.5c-2.6-0.2-5.4,0.5-7.9-0.9       c-1-1.2-0.3-1.7,0.8-1.9C947.1,306.3,949,306.9,950.9,306.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A96C6C"),
                d:
                  "M1313.1,308.2c2.1,1.7,4.6,0.5,6.9,1c-5,1.7-10.1,0.5-15.2,0.8C1307.4,308.5,1310.2,308,1313.1,308.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93144"),
                d:
                  "M865,125.1c0,0.3,0,0.5,0,0.8c-5.7,0.1-11.5,0.2-17.2,0.3c2-2.3,4.6-0.9,7-1.1       C858.2,124.9,861.6,125.1,865,125.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B28B8C"),
                d:
                  "M936.9,126.1c-1.5,1.9-4.2,0-5.8,1.7c-2.9,0.2-5.7,0-8.3-1.7c0.7-0.8,1.6-0.6,2.5-0.6       c3.6,0.2,7.2-0.5,10.7,0.4C936.3,126,936.6,126,936.9,126.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A97D7A"),
                d:
                  "M752,133.9c0-0.6,0-1.2,0-1.7c2.1-0.1,4.2-0.2,6.4-0.3c1.3,0.1,2.6,0.2,3.9,0.2       C759.1,134.4,755.5,134,752,133.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB7A7C"),
                d:
                  "M1029.8,138.2c0.3-0.2,0.6-0.3,0.9-0.3c4.3-2.2,8-1.3,11.3,2c0,0.4,0,0.8,0,1.2       C1037.9,140.3,1033.6,140.2,1029.8,138.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA676A"),
                d:
                  "M991.1,131.9c-3.1,0.2-6.1,0-9.1-1.1c-0.1-1.1,0.7-1.4,1.5-1.8c3.3-0.3,6.6-1.3,9.6,1       C993.6,131.9,991.6,131.2,991.1,131.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3C4F"),
                d:
                  "M706.9,138c-2.8,1.3-5.7,2.1-8.8,1.8c-0.5-1.1,0.2-1.8,1-2.4c1.1-0.6,2.3-1,3.4-1.3       c1.5-0.3,3.1-0.4,4.4,0.6C707.4,137.2,707.4,137.6,706.9,138z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA7F7D"),
                d:
                  "M765,296c-0.6-0.3-1.2-0.6-1.9-1c-0.3-0.2-0.5-0.3-0.4-0.6c0.1-0.2,0.1-0.4,0.2-0.4       c3.2,0.4,6.7-1.2,9.5,1.7C770,295.9,767.5,296,765,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2D7D7"),
                d:
                  "M1251.1,232.8c4,1.5,7.5,3.8,11,6.1c-0.7,0-1.4,0-2.1,0C1256.8,237.2,1253.1,236.2,1251.1,232.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B18281"),
                d:
                  "M715.3,292.2c-3.8-0.7-7.7,0.6-11.3-0.9c1-1.6,2.8-0.2,3.9-1.1c2.9-0.4,5.7,0.1,8.3,1.7       C716,292.3,715.7,292.4,715.3,292.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB6E6F"),
                d:
                  "M595.9,283.1c0.3-0.3,0.7-0.6,1-1c3.3-0.4,6.5,0.1,9.4,1.8C602.9,283.6,599.3,284.9,595.9,283.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73042"),
                d:
                  "M924.9,125.8c-0.7,0.1-1.4,0.2-2.1,0.4c-4.6-0.1-9.2-0.2-13.8-0.3c0-0.3,0-0.5,0-0.8       c5.3,0,10.6,0,15.9,0c0.4,0.2,0.5,0.3,0.4,0.5C925.2,125.7,925,125.8,924.9,125.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2D34"),
                d:
                  "M826.8,126.9c0.7,0.3,1.4,0.6,2.1,1c-5.3,0.1-10.6,0.2-15.9,0.3l0-0.3c-0.4-0.2-0.5-0.3-0.3-0.5       c0.1-0.1,0.2-0.2,0.4-0.2C817.7,127,822.2,127,826.8,126.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("903F41"),
                d:
                  "M941.1,127.9c3.2-1.8,6.7-0.4,10-1c1.7-1.5,3.5-1.3,5.5-0.5c0.6,0.3,0.7,0.8,0.4,1.4       c0,0,0.1,0.4,0.1,0.4C951.7,128.1,946.4,128,941.1,127.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91343A"),
                d:
                  "M739.1,292.3c-0.8,0.5-1.6,1.1-2.3,1.6c-1.2,1.3-2.5,1.2-3.7,0c-1.8-1.4-4-0.6-6-0.9       c-0.4-0.2-0.5-0.3-0.4-0.5c0.1-0.2,0.2-0.3,0.3-0.3C731.1,292.2,735.1,292.2,739.1,292.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984548"),
                d:
                  "M982.6,129.9c-0.2,0.3-0.4,0.6-0.6,0.9c-4.2-1.3-8.6-0.4-12.9-1c1.8-1.6,4-0.5,5.9-1       c2.5-1.8,5.2-1.5,7.8-0.3C983.4,129.2,983.3,129.6,982.6,129.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853031"),
                d:
                  "M1100.9,314.2c-3.5,1.7-7.3,0.3-10.9,1c-1.2,1.1-2.4,0.7-3.7,0.2c-0.6-0.3-0.7-0.7-0.4-1.3       C1091,314.2,1095.9,314.2,1100.9,314.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93313C"),
                d:
                  "M790.9,128.9c1.7,0.5,3.6-0.5,5.1,1c-3.7,0.1-7.3,0.2-11,0.4c-0.9-0.2-1.8-0.4-2.8-0.6       c0-0.3,0-0.5,0-0.8C785.1,128.9,788,128.9,790.9,128.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1210.2,241.9c-2.7,0-5.6,0.4-8.2,0c-2.6-0.4,0.4-1.3,0.2-2C1205,239.7,1207.7,240.5,1210.2,241.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("973541"),
                d:
                  "M699,138.1c-0.3,0.6-0.6,1.2-0.9,1.7c-0.8,0.1-1.6,0.2-2.4,0.4c-2.7,0.3-5.3,1.7-7.9-0.3l-0.5,0.1       c-0.4-2,1.3-2.1,2.4-2.2c2.7-0.1,5.2-1.1,7.9-0.7C698.1,137.3,698.6,137.6,699,138.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("973941"),
                d:
                  "M979.9,308.2c-2.1,1.6-4.6,0.5-6.9,1.1c-2.5,1.5-5,1.4-7.5,0.4c-0.6-0.4-0.7-0.9-0.4-1.5       C970,308.1,975,308.1,979.9,308.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B07576"),
                d:
                  "M659.2,287.9c-3.4,0-6.8,0-10.2,0c-0.4-0.2-0.5-0.6-0.3-1c0.6-0.6,1.5-0.3,2.2-0.8       C653.9,285.9,656.7,286.3,659.2,287.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99323D"),
                d:
                  "M909.9,304.2c-1.4,1.4-3.3,0.6-4.9,1c-2.9-0.1-5.9-0.2-8.8-0.2c-0.4-0.2-0.5-0.3-0.4-0.5       c0.1-0.2,0.2-0.3,0.3-0.3C900.6,304.1,905.3,304.2,909.9,304.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80262D"),
                d:
                  "M879.9,302.1c-1.8,1.7-4,0.4-6,1c-2,0-4-0.1-6-0.1c-0.6,0.5-1.2,0.6-1.9,0.2c-0.2-0.2-0.3-0.5-0.3-0.8       c0-0.3,0.1-0.4,0.2-0.4C870.6,302.1,875.3,302.1,879.9,302.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A04B52"),
                d:
                  "M677.9,288.1c-2.8,1.8-6,0.4-8.9,1c-1.6-0.4-3.6,0.5-5-1C668.7,288.1,673.3,288.1,677.9,288.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M687.8,140c2.6,0.1,5.3,0.2,7.9,0.3c-2.3,1.6-4.8,1.9-7.4,1.4C688.1,141.1,687.9,140.5,687.8,140z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C363A"),
                d:
                  "M1051.9,312.2c-2.9,1.7-6,0.3-9,0.9c-1.3,0-2.6-0.1-3.9-0.1c-0.3-0.2-0.4-0.4-0.3-0.6       c0.1-0.2,0.2-0.3,0.3-0.3C1043.3,312.2,1047.6,312.2,1051.9,312.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852C33"),
                d:
                  "M1341.1,307.1c-2.7-0.6-5.6,0.8-8.1-1c2.6-0.1,5.3-0.2,7.9-0.4c1.7,0.1,3.3,0.2,5,0.3       c0.4,0.2,0.5,0.4,0.4,0.5c-0.1,0.2-0.2,0.3-0.4,0.3C1344.3,307,1342.7,307.1,1341.1,307.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64256"),
                d:
                  "M965.1,308.1c0,0.3,0,0.5,0.1,0.8c-1.1,1.3-2.6,1.4-4.2,1.4c-3-0.8-6.8,1.8-8.9-2.3       c2.4-0.1,4.8-0.1,7.2-0.2C961.2,307.9,963.1,308,965.1,308.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94A58"),
                d:
                  "M919.2,306.1c1.3-0.1,2.6-0.2,4-0.3c2.6,0.1,5.2,0.2,7.8,0.3c0.3,0.2,0.4,0.4,0.3,0.6       c-0.1,0.2-0.2,0.3-0.3,0.3C927.1,306.6,923.1,307.9,919.2,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3239"),
                d:
                  "M795.1,296.3c-3.9,1.7-8,0.5-12,0.6c-0.4-0.1-0.5-0.3-0.4-0.5c0.1-0.2,0.2-0.3,0.4-0.3       C787.1,296.2,791.1,296.2,795.1,296.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B303D"),
                d:
                  "M931,307c0-0.3,0-0.6,0-0.8c4,0,7.9,0,11.9,0c0,1.8-1.1,1.4-2.1,0.9C937.5,307,934.3,307,931,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86383C"),
                d:
                  "M1292.9,311.1c-3.9-0.6-8,1.1-11.8-0.9c4,0,7.9,0,11.9,0c0.3,0.2,0.4,0.4,0.3,0.6       c-0.1,0.2-0.2,0.3-0.3,0.3L1292.9,311.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A05458"),
                d:
                  "M611,152c-1,0.7-2,1.3-3,2c-0.6,0.1-1.1,0.1-1.7,0.2c-1.5-0.1-2.9-0.1-4.4-0.2c0.2-2.2,2.1-2.2,3.5-2.9       C607.4,150.7,609.4,150.4,611,152z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3E49"),
                d:
                  "M1071,315.1c-2-0.4-4.3,0.7-6.1-1.1c4,0.1,8,0.1,12,0.2c0.3,0.6,0.2,1-0.4,1.3       C1074.7,315.4,1072.9,315.9,1071,315.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F52"),
                d:
                  "M727,292.1c0,0.3,0,0.5,0,0.8c-3.9-0.2-7.9,0.8-11.8-0.8c0.3-0.1,0.6-0.2,0.8-0.3       C719.8,292,723.4,292,727,292.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F41"),
                d:
                  "M844.9,301c-3.6,0-7.3,0-10.9,0c-0.3,0.3-0.6,0.3-0.9,0c0-0.3-0.1-0.6-0.1-0.9c4,0,8,0,12,0.1       c0.4,0.2,0.5,0.4,0.3,0.6C845.2,300.9,845,301,844.9,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D6E6F"),
                d:
                  "M1202.1,239.9c-4.1,0-8.3,0-12.4,0C1193.8,238.6,1198,238.2,1202.1,239.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3343"),
                d:
                  "M1004.9,311.2c-3.9-0.7-8.1,0.7-11.9-1.1c4,0,8,0,12,0c0.3,0.1,0.4,0.3,0.4,0.5       c-0.1,0.2-0.2,0.3-0.3,0.3L1004.9,311.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E4544"),
                d:
                  "M1005.1,311c-0.1-0.3-0.1-0.5-0.1-0.8c3.6,0,7.3,0,10.9,0C1012.4,311.9,1008.7,310.7,1005.1,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A14A54"),
                d:
                  "M623.9,284.2c-0.8,1-1.9,0.8-3,0.9c-2.6-0.5-5.4,0.8-7.9-1C616.7,284.1,620.3,284.1,623.9,284.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("834041"),
                d:
                  "M844.9,301c0-0.3,0.1-0.6,0-0.9c3.7,0.1,7.4,0.1,11.1,0.2C852.4,301.8,848.6,301,844.9,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3646"),
                d:
                  "M1039,312.1c0,0.3,0,0.6,0,0.8c-3.7-0.2-7.4,0.8-11-0.9C1031.7,312.1,1035.3,312.1,1039,312.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("955C59"),
                d:
                  "M940.8,307.1c0.7-0.3,1.4-0.6,2.1-0.9c2.7,0,5.3,0,8,0c-2,1.9-4.9-0.1-6.9,1.6c-0.9,1.1-1.9,1-2.9,0.1       C941,307.6,940.9,307.3,940.8,307.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("973D42"),
                d:
                  "M707.9,290.2c-1,1.3-2.6,0.7-3.9,1.1c-2.3-0.1-4.6-0.2-6.9-0.3c-0.3-0.2-0.5-0.3-0.3-0.5       c0.1-0.2,0.2-0.3,0.3-0.3C700.6,290.2,704.3,290.2,707.9,290.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B3C3D"),
                d:
                  "M823.2,298.3c-3.3,1.9-6.8,0.4-10.2,0.7c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3       C816.4,298.2,819.8,298.2,823.2,298.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C14959"),
                d:
                  "M896,304.1c0,0.3,0,0.6,0,0.8c-3.3-0.3-6.7,1-9.9-0.9c1.3-0.1,2.7-0.1,4-0.2       C892.1,304,894.1,304,896,304.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96373B"),
                d:
                  "M763,294.1c0.1,0.3,0.1,0.6,0.2,0.9c-3.3-0.1-6.7-0.1-10-0.2c-0.4-0.1-0.5-0.3-0.4-0.5       c0.1-0.2,0.2-0.3,0.3-0.3C756.3,294.1,759.6,294.1,763,294.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("94343F"),
                d:
                  "M724.2,136.1c-0.7-0.3-1.5-0.6-2.2-1c1.6-1.6,3.2-1.6,4.9-0.3c1.6,0.4,3.6-0.6,5,1       C729.4,136,726.8,136.1,724.2,136.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E35C65"),
                d:
                  "M866,302.1c0,0.3,0,0.5,0.1,0.8c-2.1,1.6-0.9,5.1-3.8,6.2c-2.4-2.3-1.5-4.7-0.3-7.1       c0,0,0.3-0.3,0.3-0.3C863.5,301.9,864.7,302,866,302.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02E34"),
                d:
                  "M1077,314.9c0-0.3,0-0.5,0-0.8c3,0,6,0,9,0c0,0.3,0,0.5,0,0.8C1083,315.8,1080,315.8,1077,314.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("913A40"),
                d:
                  "M650.9,286.2c-0.6,0.3-1.3,0.6-1.9,1c-2.1,0.7-4.3,0.2-6.5,0.3c-0.6-0.3-0.8-0.7-0.4-1.3       C645,286.2,647.9,286.2,650.9,286.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A9404A"),
                d:
                  "M991.1,131.9c0.4-0.8,1.2-0.9,2.1-1c0.7-0.8,1.7-1,2.8-1c1,0,2,0.1,2.9,0.7c0.4,0.4,0.5,0.8,0.2,1.3       c-1.5,0.1-3,0.2-4.4,0.3C993.4,132.1,992.2,132,991.1,131.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CDB8B8"),
                d:
                  "M1158,251.9c0.3,0,0.7,0,1,0c0.6,0.4,0.8,1,0.9,1.7c0.1,0.7,0,1.3-0.2,2c-0.3,0.6-0.7,1.1-1.2,1.5       c-0.4,0.2-0.8,0.2-1.3,0.1c-0.2-0.1-0.3-0.3-0.5-0.4C1157.1,255.2,1157.6,253.6,1158,251.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73549"),
                d:
                  "M1293,311c0-0.3,0-0.6,0-0.9c2.7,0,5.3,0,8,0C1298.5,311.8,1295.7,310.7,1293,311z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B94352"),
                d:
                  "M753,294.2c0,0.2,0,0.5,0.1,0.7c-2.3-0.4-5,1.4-7-1.1C748.4,293.9,750.7,294,753,294.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984244"),
                d:
                  "M664.9,142.9c1.4,0.3,3-0.4,4.1,1c-1.2,0.1-2.5,0.1-3.7,0.2c-1.4-0.5-3,0.2-4.2-0.9       C662.2,141.8,663.5,141.9,664.9,142.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B54450"),
                d:
                  "M783,296.1c0,0.3,0,0.5,0,0.8c-2.7-0.1-5.6,1-8.2-0.9C777.6,296.1,780.3,296.1,783,296.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A4E4A"),
                d:
                  "M438.9,217.9c0.4,0.5,0.9,1,1.3,1.4c-0.8,0.8-1.5,1.7-2.3,2.5c-0.1-0.7-0.1-1.5-0.9-1.9       C436.7,218.4,437.4,217.8,438.9,217.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23B4C"),
                d:
                  "M697,290.2c0,0.3,0,0.5,0,0.8c-2.3-0.2-4.8,0.8-7-0.8C692.4,290.1,694.7,290.1,697,290.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2F3B"),
                d:
                  "M706.9,138c0.1-0.3,0.1-0.6,0.1-1c0.6-0.6,1.2-0.7,1.9-0.2c1.7,0.4,3.6-0.6,5,1       C711.6,137.9,709.3,138,706.9,138z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2E38"),
                d:
                  "M813,298.1c0,0.3,0,0.6,0,0.9c-2.4-0.3-4.9,0.8-7.1-1C808.3,298.1,810.6,298.1,813,298.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963743"),
                d:
                  "M1182,293.8c2.3-1.3,4.6-1.3,6.9,0C1186.6,293.8,1184.3,293.8,1182,293.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C1B1B2"),
                d:
                  "M1247.1,344.1c0.7-0.7,1.3-1.4,2-2.1c0.7,0,1.4,0,2.1,0.1c-0.7,0.7-1.4,1.3-2.1,2       C1248.4,344.6,1247.7,344.6,1247.1,344.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A94352"),
                d:
                  "M642,286.2c0,0.2,0,0.5,0,0.7c-1.7,1-3.4,0.9-5,0.1c0-0.3,0-0.6-0.1-0.9       C638.6,286.1,640.3,286.1,642,286.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2646E"),
                d:
                  "M470,258.9c1.4,0.9,3.2,1.3,4,3C471.3,262.8,470.6,260.9,470,258.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M438.9,217.9c-1,0.4-1.6,1-1.9,2c-0.6,0.8-1.2,1.5-1.8,2.3c-1.4-1.9-1.9-0.8-2.2,0.7       c-1.4,1-2.1,0.3-2.3-1.1c-0.2-1.5-0.2-3,1.5-3.8c2.2-1.1,4.1-2.6,5.9-4.3c0.5-0.5,1-0.9,1.7-1.2c0.4-0.2,0.9-0.2,1.3-0.2       c0.7,0.2,1.2,0.5,0.9,1.4C440.5,214.9,439.2,216,438.9,217.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB4F59"),
                d:
                  "M354,233c-0.2-0.9-1.4-2.2-0.1-2.6c5.1-1.4,8.9-6.1,14.7-5.9c1.9,0,4.3-1.3,5.5-2.8       c3-3.8,8.5-3.4,11.7-7.3c0.5-0.6,5.2-1.4,7.9-1.6c7.5-0.7,14.2-3.7,20.9-6.6c3.3-1.4,6.3-3.2,9.7-4.4c1.7-0.6,3.2-0.6,4.7,0.3       c0.8,0.2,1.3,0.6,1.4,1.4c0,0.5-0.2,0.9-0.5,1.3c-2.6,0.3,0.1,3.6-2.3,4.1c-1.9,0.4-3.9,0.2-5.8,0.7c-1,0.3-2.3,0.7-2.2,1.7       c0.6,5.1-2.9,3.8-5.6,3.8c-1.1-0.7-1.8-2.8-3.7-1.5c-6.1,4-13.3,4.3-20,6.4c-6.3,2-11.7,5.8-17.5,8.8c-2.7,1.4-5.5,0.9-8.2,2       c-2.5,1-5.4,1.2-6.9,4.3c-0.4,0.9-0.7-0.5-0.9-0.9C356.3,232.8,355.1,233,354,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45762"),
                d:
                  "M414,215c1.1-2.6,2.7-1.7,4.4-0.6c-1.5-5.3-1-5.7,10.4-6.9c-1.9-0.5-3-0.7-4.3-1       c1.6-2.2,4.1-1.2,5.5-2.5c3.5-0.7,4.7,2.4,6.8,4.1c1,1.7,3.4,2.5,3.2,4.9c-0.3,0.3-0.7,0.7-1,1c-1.8,1.3-3.9,1.2-6,0.9       c-1.3-0.2-2.5-0.5-3.3,0.9c-0.3,0.3-0.7,0.6-1.1,0.7c-3.4-0.3-6.5,0.1-8.7,3.2c-0.8,1.1-2.4,1.1-3.5,1.7       c-3.4,1.8-7.2,2.8-10.3,5.3c-3.8,3-8,2.3-12-0.1c-1.1-0.5-2.2-0.8-2.9-1.8c6.3-4.5,13.7-5.9,20.9-8.1       C412.9,216.6,413.6,215.9,414,215z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45964"),
                d:
                  "M391,225c1.1,0,2.3-0.2,3,1c1.8,1.9,2.5,3.9,0.7,6.2c-2.8,3.9-6.5,5.2-11.2,3.8c-0.4,1,0.5,1,1,1.2       c1.1,0.3,2.5,0,2.8,1.5c0.3,1.6-0.9,2.5-2.1,3.1c-4.2,2-6.8,5.8-10.2,8.7c-1.7,1.4-2.8,3.2-3.8,5.2c-0.6,1.3-0.9,3.2-3.1,1.9       c-1.6-1-2.2-2.6-1-4.3c1.2-1.8,2.5-3.5,4-5.1c1.9-1.9-1-1.4-1.1-2.2v0c-1.1-0.9-2.1-1.9-3-3c0.3-0.7,0.7-1.3,1-2       c0.3-0.8,0.7-1.5,0.9-2.3c1.4-5.5,2.3-5.9,6.9-2.1c0-8.5,7.4-8,12.4-10.5C389.1,225.6,390.1,225.4,391,225z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB4F59"),
                d:
                  "M348,230c1.5,1.2,0.6,4.8,4,4c-0.1,1.1-0.6,2.3-1.6,2.1c-3.7-0.7-6.1,1-8.2,3.5       c-0.1,0.1-0.7-0.4-1.1-0.7c1.8-1.7-0.7-3.3,0-5c0.3,0,0.7,0,1,0C343.5,231.9,346.5,232.2,348,230L348,230z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4652"),
                d:
                  "M290,258c-0.1-1.3-2.1-1.4-1.9-2.8c2.6,1.3,2-5.7,5.6-2.1c1.1,1.1,1.4-0.9,2.2-1       C297.5,257.5,292.9,256.9,290,258z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4652"),
                d:
                  "M312,270c0.7,0,1.3,0,2,0c-0.1,1.4-0.9,2-2.2,2c-0.9-0.1-2.3,0.3-2.2-1.1       C309.7,269.7,311.1,270.1,312,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC4652"),
                d:
                  "M305,269.4c-0.3,0.5-0.5,1-0.8,1.1c-0.8,0.2-1.1-0.5-1-1.1c0-0.3,0.5-0.8,0.8-0.8       C304.3,268.5,304.6,269,305,269.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24953"),
                d:
                  "M333,232c0-0.7,0-1.3,0-2c1.1,0.1,1.2,3,3,1c2.5-1.1,1.9,0.7,2,2c-4.3,3.6-8.3,7.9-14.3,8.6       c-2.5,0.3-2.4,2.9-4,3.8c-1.1-1.1-0.5-2.3-0.7-3.4c3-3.1,6.5-4.9,10.9-5.3C332.9,236.5,330.8,232.8,333,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M370,246c1.4-0.2,2.9-0.3,4.7-0.6c-1.4,4.4-8.5,5.9-6.2,12.7c4.1-9,10.9-14.1,18.1-18.8       c-1-1.9-2.2-0.3-3.1-0.5c-1.9-0.3-2.6-1.5-2.4-3.2c0.4-2.2,2.4-2.2,3.4-1.3c4.1,3.8,5.9-0.7,8.6-2.1c3.2-1.6,0.8-4.2,0.9-6.3       c3.8,0.9,7.8,3.3,11.3,0c3.6-3.4,8.2-4.3,12.4-6.1c0.6-0.2,1.5-0.5,1.7-0.9c2.1-4.7,5.8-3.9,9.6-3c0.8,0.8,0.9,1.8,0.4,2.9       c0.5-1.1,0.6-2.1-0.4-2.9c0-1.8,0.3-3.5,2.7-2.6c2.4,0.9,4.8,0.4,7.3,0.6c-1.4,2.3-3.6,3.7-5.9,5c-2.4,1.2-2.5,2.6-0.1,4       c-0.3,1-0.7,2-1,3c-0.6-0.4-1.3,0.3-2.1-1.2c-1.2-2.3-4.2-3.6-6.9-0.8c-1.9,0.6-5.4-1.8-5,3.2c0.1,1.3-3.2,3.4-4.2,2.2       c-3.4-3.9-4,0.3-5,1.6c-2.7,3.8-6.2,5-10.7,6.2c-2.6,0.7-9.1-0.9-8.9,5.9c0,1.1-1.8,2.3-2.9,3.2c-4,3.5-5.1,7.3-1.5,11.7       c0.4,0.4,0.5,0.7,0.3,1.2c-1.4,4-1.4,4,2.9,5.8c-6,0.5-12.1-1.1-18.2-0.1c-3.9,0.6-6.2-3.5-9.7-4.2c-2.6-0.5-5.5-3.2-6.8,1.9       c-1.8-2.1-1.2-5.2-3.6-6.6c-0.7-0.4-1-1.8-0.3-2.2c2.7-2,6.6-2.8,7.4-6.8c2,1.9,5,0.3,7,2C368,252.4,369,249.1,370,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9626C"),
                d:
                  "M417.4,264.1c0.4,0.5,0.6,0.8,0.9,1.2c-0.3,0.2-0.7,0.6-1,0.5c-0.3-0.1-0.6-0.5-0.9-0.8       C416.7,264.7,417,264.5,417.4,264.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M387.3,252.6c-0.5-0.4-1.5-0.7-1.7-1.4c-0.3-1.1,0.7-1.2,1.6-1.2c0.9,0,1.6,0.4,1.6,1.4       C388.8,252.4,388.3,252.6,387.3,252.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M399.3,248.6c0.2-0.2,0.5-0.8,0.8-0.8c1-0.2,0.8,0.7,0.8,1.3c0,0.3,0.6,1-0.4,0.9       C399.9,249.8,399.3,249.6,399.3,248.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75D68"),
                d:
                  "M367,243c1.9,0.1,2.9,1.1,3,3c-0.6,0-1.3,0.1-1.9,0.1c-1.2,0-2.2,2.7-3.4,0.1c-1.4-2.8,2.4-0.6,2.2-2.3       C366.8,243.6,366.9,243.3,367,243z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B32532"),
                d:
                  "M428.1,321.2c5-1.9,10.4-1.8,15.6-2.5c3.8-0.5,7.5-1.2,11.3-1.8c4.6-0.7,9.3-0.3,13.9-0.3       c2.4,0.1,4.7,0.2,7.1,0.4c0.7-0.6,1.5-0.5,2.2-0.1c0.2,0.6,0,1-0.4,1.5c-1.7,1.1-3.6,0.8-5.5,0.9c-0.8,0-1.6,0-2.4,0       c-0.5,0-1.1,0-1.6,0c-7.9,1.8-16,1.9-24,3.3c-5.2,0.9-10.1,2.9-15.3,3.7C427.4,324.8,426.8,323.2,428.1,321.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F262F"),
                d:
                  "M550,319.2c-0.3,0.3-0.7,0.6-1,0.8c-1.1,0.6-2.3,0.7-3.5,1.2c-10.8,0.5-21.6,0.6-32.4,0       c-6-0.4-12.1-1.8-18.2-2c-0.6-0.2-1.2-0.4-1.7-0.8c-0.5-0.5-0.5-1.1-0.2-1.6c2.7-0.3,5.3-0.6,7.9,0.2c0.3,0,0.7,0,1,0       c4.2,0,8.4,0.1,12.7,0.1c5.1,1.2,10.3-0.4,15.3,0.8c0.6,0,1.1,0.1,1.7,0.1c4.5,0.9,9.1,0.1,13.6,0.4       C546.9,318.6,548.6,317.9,550,319.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971C2C"),
                d:
                  "M493,317.1c0,0.3,0,0.5,0,0.8c-5,2.2-10,2.5-14.9,0.1c0-0.3,0-0.5,0-0.8c2.3-1.1,4.6-0.8,6.9-0.1       c1.3-0.3,2.7-0.7,4-1C490.1,317.2,491.9,315.8,493,317.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C55861"),
                d:
                  "M428.1,321.2c-0.3,1.7,0,3.4,1,4.9c1.3,1,1.9,2.5,2.5,4c0.2,0.7,0.2,1.4,0,2.1c-0.2,0.4-0.5,0.8-0.9,1       c-0.2,0-0.5-0.1-0.7-0.1c-1.3-3.4-2.6-6.8-3.9-10.2C426.8,322.3,427.5,321.7,428.1,321.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9B9F"),
                d:
                  "M468.9,316.6c-4.6,0.1-9.3,0.2-13.9,0.3C459.6,315.3,464.3,315.7,468.9,316.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB9B9F"),
                d:
                  "M493,317.1c-1.3-0.6-3,0.2-4-1.1c4,0.4,8.2-1.1,12,1C498.3,317,495.7,317.1,493,317.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72534"),
                d:
                  "M484.9,317c-2.3,0-4.6,0.1-6.9,0.1c-0.7-0.1-1.4-0.1-2.1-0.2C479,315.8,482,315.8,484.9,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M550,319.2c-6.1-0.7-12.3,0.3-18.3-1.1c6.6,0,13.2-0.1,19.7-0.1c1.3,0,2.7-0.2,3.6,1       C553.3,319.1,551.7,319.1,550,319.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M530,318c-5.1-0.2-10.3,0.5-15.3-0.8C519.8,317.4,525,315.9,530,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F1989D"),
                d:
                  "M539.8,316.5c-1.8,0.4-3.4,0.9-5-0.1C536.7,315.6,538.3,316.1,539.8,316.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EEB4B8"),
                d:
                  "M399,320c2,1.1,4,1.8,6,0c0.1,2,6.4-0.4,2.9,4.1c0,0,1.4,1.2,2.1,1.8c-4.2,4.4-0.5,8.1,1,12       c-0.4,0.3-0.8,0.5-1.2,0.5c-2.8-2.4-4.2,0.9-6.3,1.5c-1.4,0.4-2.9,0.3-4.4,0.5c-3.3,0.4-6.4,1.7-9.7,1.4       c-2.4-1-1.4-2.3-0.5-3.8c2-3.4,1.4-5.4-1.9-6.8c-2.3-1-4-2.7-5.9-4.2c2.2-4.4,6.6-4.1,10.5-5C394,321.5,397.2,323.3,399,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E89AA0"),
                d:
                  "M413,338c1.8-2.1-2.2-3-1-5c2.2-0.1,3.9,0.7,5.2,2.5c0,4.4,3.4,6.2,6.6,7.9c2.8,1.5,5.6,2.8,7.7,5.3       c1.2,1.9,2.6,3.8,3.4,6c0.5,1.6,1.6,2.9,1.9,4.6c0.1,0.5,0,1,0,1.5c-0.6,1.8-1.8,2.3-3.5,1.8c-1.9-0.9-0.7-3.2-2.1-4.3       c-2-3.6-6.1-4.9-8.6-7.9c-0.3-0.6-0.6-1.2-0.8-1.7c-0.6-1.3-2-1.4-3.1-1.8c-0.4-0.2-0.8-0.4-1.1-0.8       C415.7,343.5,412.7,341.7,413,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B22C34"),
                d:
                  "M416.9,335.9c-1.2-1.7-4.1-0.6-4.9-2.9c-1.4-1.9-0.1-2.7,1.2-3.9c2.3-2.2,5.9-2.3,7.9-5       c3.4,2,3.1,6.1,5.2,8.9c-0.1,0.2-0.3,0.4-0.4,0.6c-2.6,1.5-5.4,2.6-8.4,2.8C417.3,336.3,417.1,336.1,416.9,335.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2ACB2"),
                d:
                  "M413,338c1.1,3,4.4,4.7,5,8c-2.5,2-5.6,2.1-7.7,0.2c-2.4-2.2-1.7-5.4-0.3-8.2c0.3,0,0.7,0,1,0       C411.7,338,412.3,338,413,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("591417"),
                d:
                  "M428.9,335.1c0.1-0.8,0.2-1.7,1.1-2.1c0,0,0.2-0.1,0.2-0.1c2.2,1.2,3,3.5,3.8,5.7       c2.1,5.4,4.5,10.7,6.8,16c1.5,3.3,3,6.6,4.5,9.9c0.4,1.2,0.8,2.4,0.4,3.7c-0.3,0.8-0.9,1.2-1.7,1.3c-2.9-1-3.4-3.8-4.4-6.1       c-2.1-5-4.5-9.8-6.6-14.8C431.5,344.1,427.8,340.3,428.9,335.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C86770"),
                d:
                  "M428.9,335.1c1.6,4.3,3.3,8.6,4.9,12.9c-0.4,0.3-0.8,0.5-1.3,0.5c-0.5-0.1-0.9-0.3-1.3-0.6       c-2.5-4.1-3.7-8.7-5.9-12.9c-0.1-0.7,0-1.4,0.4-2.1c0,0,0.4,0,0.4,0c0.3-0.3,0.5-0.7,0.8-1C427.7,333,428.3,334.1,428.9,335.1z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24851"),
                d:
                  "M1122,156c1.4-2.4,2.4-4.3-2-4.1c-4.6,0.3-8.6-2.7-13.2-3.2c-2.4-0.2-0.2-3.7-2.8-3.8       c0.4-0.8,1.2-1,2-1c0.3,0,0.7,0,1,0c1.4,1.3,3.6,0.7,5,2c0.3,0,0.7,0,1,0c1.2,1,3.1,0.6,4,2c0.2,2.1,1.9,2.2,3.3,2       c4.1-0.6,7.4,1,10.7,3c3.6,3.3,8.3,4.6,12.4,6.9c1,0.6,2.1,0.9,2.6,2.1c-1.8,1.9-4.3,2.5-6.2,0.9c-3-2.5-6.3-2.1-9.7-2       c-0.4-0.1-0.9-0.3-1.2-0.6c-1-1.3-1.5-3.2-3.7-3.1C1124,157.1,1122.8,156.9,1122,156z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1253,220c0.7,0,1.3,0,2,0c4,0.9,7.1,3.6,10,5.9c4.6,3.6,9.3,5.5,15,5.3c2.1,0.9,4.3,1.2,6.2,2.5       c0.9,2.1,2.2,3.5,4.5,4.7c8.7,4.2,16.8,9.4,25,14.3c1.4,0.8,2.2,1.9,1.9,3.6c-1.8,3.4-4.4,2.5-5.8,0.3c-2.9-4.4-8-2.1-11.5-4.3       c-0.3-0.2,0.1,1.7-1,2.1c-2.9,1.1-5.2,0.7-7.6-1.6c-2.9-2.6-7.3-2.9-9.8-6.2c-1.3-3.5-4.8-3.9-7.6-5       c-6.9-2.9-13.3-6.6-18.8-11.6c-2.2-2-4.8-2.8-7.3-4.1c-1.9-1-4.1-1.6-5.3-3.6c0.2-2.5,0-5.3,3.7-5.3c0.5,0.1,0.9,0.2,1.3,0.4       c1,0.7,1.7,2.1,3.3,1.7C1251.9,219.2,1252.5,219.5,1253,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF4C57"),
                d:
                  "M1247,218c-3.4-0.7-1.8,3.5-4,4c-2.2,1.3-3.2-0.2-4.2-1.7c-0.3-1.3-0.1-2.7-0.5-4.1       c-0.9-3.4-2.6-1.8-4.2-2c-5.5-1-11-2.6-14.2-7.7c-1.4-2.2-1.7,0.5-2.5,0.1c-0.5,0.1-0.9,0-1.3-0.2c-0.6-1.2-1.5-1.9-2.9-1.8       c-0.9-0.5-1.9-0.8-2.9-0.1c-0.4,0.2-0.9,0.2-1.3,0.2c-2.8-0.5-4.8-3.5-8-2.6c-1.7,0-3.2-0.3-4-2c-0.3-1.8-1.7-2.5-3.2-3       c-1.8-0.6-2.2-1.6-1.4-3.2c0.4-1.9-1.6-2.9-1.9-4.6c0-0.8,0.3-1.4,1-1.8c3.4,0.1,6.5,1,9.6,2.6v0c1.3,3.1,4.1,3.8,6.9,4.5       c1.7,0.4,3.5,0.7,5.1,1.5c0.1,1.9,1.7,2.8,2.9,2.9c7.2,0.4,11.8,7.4,19.1,7.2c2.4,0,2.2,3.1,4,3.9c2.1,1.1,4.4,1.8,6.4,3.1       C1247.3,214.4,1248.1,215.9,1247,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4954"),
                d:
                  "M1201,190c-3.6,0.9-6.7-1.1-10-2c-2.5-0.2-5.1-0.7-7.5,0.6c-4.9-4.2-12-4.3-16.8-8.9       c-1.7-1.6-3.9-0.3-5.7-1.2c-0.7-0.5-1-1.1-1.2-2c-0.1-0.4,1.5-0.8,0.1-1c-1.6-0.2-3.2-0.7-3.2-2.4c0-2.3,1.9-2.2,3.6-2.2       c0.2,0,0.5,0,0.7,0c5.9,3,12.1,5.1,17.8,9c4.7,3.3,11.1,7.5,18.5,5.6C1199.7,185.1,1200.7,187.7,1201,190z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4853"),
                d:
                  "M1280,232c-4.9,0.5-9.6,0.7-13.4-3.3c-3.4-3.5-8.6-4.7-11.6-8.7c2-2,5-0.2,7-2       c4.9,1.8,7.5,7.6,13.4,7.8c1.1,0,1.6,1.1,1.6,2.2C1278,229.3,1280.6,229.4,1280,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4A54"),
                d:
                  "M1129,160c4.2-0.6,8.3-1.8,11.8,2.2c1.3,1.5,3.4-0.7,5.2-0.2c3.9-0.3,7.1,1.7,10.4,3.3       c1.8,0.9,3.1,3.1,5.6,2.7c-0.6,0.9-2.1,1.5-1,3c0,0,0,0,0,0c-2.5,1-4.9,0.6-7-1c-2.7-2.1-5.4-2.2-8.8-1.9       c-6.1,0.7-11.1-3.1-16.4-5.5C1128,162.3,1128.2,160.8,1129,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4853"),
                d:
                  "M1247,218c-0.1-3-2.2-4.5-4.5-5.6c-1.3-0.6-2.9-0.7-3.5-2.4c5.9,0,9.8,4.3,14.5,6.8       c0.3,0.2-0.3,2.1-0.5,3.2c-0.7,0-1.3,0-2,0c-0.8-0.9-1.8-1.7-3-2C1247.7,218,1247.3,218,1247,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4954"),
                d:
                  "M1213,196c-3.5,0.4-6.6-1.5-10.2-1.3c-3.1,0.2-1.2-3-1.8-4.7C1205.5,191.1,1209,193.9,1213,196z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4484F"),
                d:
                  "M1280,232c-0.4-1.8-3.1-1.8-3-4c4.4,0.7,8.5,2.2,12.3,4.8c1.4,1,0.7,2.4,1.7,3.2c0,0,0,0,0,0       c-2.7,1.8-3.8-0.2-5-2C1283.8,234.1,1281.6,233.9,1280,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4750"),
                d:
                  "M1117,148c-1.6-0.2-3.7,0.7-4-2c1.6-1,3.3-1,4.8,0.1C1118.3,146.5,1117.8,147.5,1117,148z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4750"),
                d:
                  "M1112,146c-1.9,0-4,0.3-5-2c1.3,0,2.7,0,4,0C1111.3,144.7,1111.7,145.3,1112,146z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("71132B"),
                d:
                  "M263,394c1.5-2.7,5.4-0.7,6.6-2.9c1.1-2,0.5-2.3,4.9-3.8c-1.8-0.2-3.2-0.3-4.6-0.5       c3.1,0,4.5-5.1,8.2-2.8c3.9,1.9,8.5,2.6,11,6.7c-1,1.6-2.7,1.5-4.3,1.7c-4.7-0.1-9.2,1.3-13.8,1.9       C268.4,393.9,265.6,396.2,263,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831732"),
                d:
                  "M263,394c2.7-0.3,5.3-0.6,8-1c-0.1,0.1,0.1,2.5,0.1,2.7c0.6,1.8,1.2,3.5,1.9,5.2       c-1.7,1.7-3.4,1.1-5.1,0.1c-3.3,0.3-6.7,0.7-10,1c-2.3-2.5,4.9-3.4,1.2-5.1c-1.7-0.8-4.2-0.6-6.2-1.9       C256.3,394.7,259.7,394.3,263,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("98394F"),
                d:
                  "M288.9,390.1c-4.1-1.1-7.2-4-10.7-6.1c-0.4-1-0.8-2-1.1-3c3,1.1,4.6,4.5,8,5.1c5.8,2,11.9,2.4,17.8,3.6       c0.5,3.5-2.9,0.9-3.7,2.3c-0.3,0-0.6,0-0.9,0C294.5,394,291.6,392.5,288.9,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("68112A"),
                d:
                  "M239.4,390c1.3,0,3,0.1,3.1,1.7c0.1,1.8-1.8,2.1-3.2,2.2c-1.4,0.1-3.4-0.1-3.3-1.8       C236,390.5,237.8,390,239.4,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79152B"),
                d:
                  "M268,401c1.7-0.3,3.6,0.7,5-1c1.9-2,4.5-2.3,6.9-2.3c4.3,0,8.5-1,12.8-1.5c0.9-0.1,1.7,0.1,2.4,0.7       c0.2,0.4,0.5,0.7,0.7,1.1c-1.2,2.3-2.4,4.7-3.6,7c-4.3-0.8-8.2,0.7-12.1,1.9c-3.8-0.6-7.3,1.4-11,1       C270.8,405.4,269.7,403.1,268,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("79152B"),
                d:
                  "M269,408c-1.4,1.7-3.3,0.7-5,1c-0.7,0-1.3,0-2,0C264.1,407.1,266.7,408.4,269,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("52151D"),
                d:
                  "M111,478c-1.3-2-3.9-0.1-5.4-1.7c4-3.2,7-6.8,6.4-12.3c-0.1-0.5-0.2-1.1,0.1-1.5       c4.7-6.3,6.1-14.6,12.9-19.5c0,0.3,0,0.7,0,1c0,3.1,3.9-1.4,4,2.1c0,1.7-0.9,4,0.6,5.1c1.6,1.2,1.6,1.8,0.3,2.9       c-1.6,1.4-0.4,2.6,0.1,3.9c2.1,3.2,0,6.3-0.8,9c-1.4,4.8-0.9,10.4-5,14.2C119.2,482.6,114.8,481.4,111,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("470E1C"),
                d:
                  "M124,481c2.6-7.5,4.2-15.3,6-23c2.1,0,2-1.9,2.6-3.2c1.2-2.5,2.9-4.1,6-4.1c-4.5,1.5-2.2,6.9-5.5,9       c-0.3,0.2,0,1.3,0,1.9c5.5-1.5,0,6.1,5.4,6.4c2.9,0.2,3.3,6.9,5.8,10.1c1.4,1.8,2.9,2.8,0.7,4.8c-0.1,0.2-0.3,0.4-0.4,0.5       c-6.4,1.3-12.7,0.9-18.8-1.5c-0.5-0.1-0.9-0.3-1.3-0.6C124.3,481.4,124.2,481.2,124,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("470E1C"),
                d:
                  "M145,483c1.3-0.2,2.6-0.6,3.8-0.5c0.7,0.1,2.2-0.2,2.1,1.2c0,0.5-1.2,0.9-1.9,1.3l0,0       C147.2,485.3,145.4,485.5,145,483L145,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M166,444.1c-0.7,0.2-1.2,0.6-1.5,0.4c-0.3-0.2-0.5-0.7-0.8-1.1c0.3-0.1,0.6-0.4,0.9-0.3       C165,443.3,165.3,443.6,166,444.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64B56"),
                d:
                  "M348,230c-0.2,4-3.5,3.5-6,4C342.8,230.8,344.1,228.5,348,230z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B64553"),
                d:
                  "M430,203c-0.3-0.3-0.7-0.7-1-1c-1.8-3.7-6.4-3.4-9-6c0-0.3,0-0.7,0-1c4.4,1.9,8.1,0.5,12.5-0.9       c3.8-1.2,8.2-1.6,10.9-4.3c2.1-2,3.6-4.2,6.5-4.9c2,0.3,3.9,1.4,6,1c2-0.5,2.8,0.8,3.6,2.2c0.4,4.2-2.4,5.2-5.6,5.1       c-2.2-0.1-3.8,0.4-5.6,1.5C442.7,198.4,436.2,200.5,430,203z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34652"),
                d:
                  "M459,188c-1-0.7-2-1.3-3-2c0-1.3-0.7-2.1-1.7-2.9c-1.5-1.2-2.8-3.4-1.4-4.5c1.5-1.1,4.1-2.5,6.2,0       c0.9,1.2,1.9,2.3,2.9,3.4c1,1.5,1.8,3.4,4.2,2.4c0.3-0.1,0.6,0,0.9,0c-1.2,3.9,3.1,2,3.8,4.9c0.9-3.7-1.3-5.8-1-8.3       c2.4-0.2,2.4,2,3.2,3.3c0.8,2.7,2.5,5,3.4,7.6c0.1,0.7,0.1,1.3-0.2,2c-1.4,0.7-3,1-4.5,1.5c-0.7-0.2-1.4-0.4-1.8-0.9       c-2.7-3.5-6.3-5.4-10.5-6.5C459.4,188,459.2,188,459,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A5354"),
                d:
                  "M1829,306c-3.7,0.2-7.3,0.2-11,0.5c-3.1,0.2,0,2.5-1,3.5c-5.4-1-10.8-0.5-16.2-0.7       c-2.6-0.4-5.1-0.4-7.7-0.3c-0.8-0.1-1.5-0.4-2-1.1c-1.3-1.5-3.1-2.4-4.8-1.9c-3.7,1.2-6.9-3-10.8-0.7c-1.2,0.7-2.6-1.5-2.4-3.4       c-0.7-0.5-1.3-0.9-2.6-1.8c6-1,11.8-1.9,16.8,0.1c6.4,2.7,13,1.3,19.4,2.5c6.4,1.2,13,2,19.6,1.2       C1827.6,303.8,1828.8,304.2,1829,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5256"),
                d:
                  "M1791,308c0.7,0,1.3,0,2,0c3.8,1.6,7.9,0.8,11.8,1c6.1-1.3,11.5,1.9,17.5,2.2       c10.3,0.6,20.3,4.2,30.7,4.8l0,0c4.2,1.6,8.7,1.5,12.9,2.6c2.6,0.7,5.8,0.7,6.3,4.4c-0.6,0.9-1.5,1.4-2.5,1.7       c-6.5-0.9-12.9-2.5-19.4-3.7c-1.5-0.3-2.9-0.5-4.4,0c-7.8-1.3-15.7-2.5-23.5-3c-11.8-0.8-23.1-4.5-34.8-5.1       c-3.8-0.9-7.8-0.9-11.6-2.3c-0.9-0.6-1.5-1.4-1-2.6C1780.3,308,1785.7,308,1791,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A25358"),
                d:
                  "M1775,308c0.3,0.7,0.7,1.3,1,2c-1.5,1.6-3.7,1.4-5.6,1.7c-13.2-1.1-26.3-3.5-39.5-4.7       c-12.2-1.9-24.5-3.2-36.8-4.6c-1.9-0.2-4.5,0.7-5.2-2.4c4.3,0,8.6-0.3,12.9,0.1c8.6,0.8,17.1,1.8,25.7,3c5.6,0.8,11.2,2.1,17,1       c2.8-0.5,4.5,3.1,7.5,1.9c4.5,0.8,9.1,1.1,13.7,1c2.5,0,4.9,0.2,7.3,1C1773.7,308,1774.3,308,1775,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2E36"),
                d:
                  "M1660,297c3.5,1.9,7.3,0.5,11,1c2.3,1.1,4.8,0.2,7.1,0.5c1.2,0.1,2.7-0.6,3.1,1.3       c-1.2,1.6-3,1.6-4.7,2.1c-10.5-0.5-20.9-2.3-31.4-2.7c-5.6-0.8-11.2-1.5-16.9-1.8c-1.8-0.1-3.7,0.1-5.2-1.3       c-0.8-2,1.4-1.3,1.9-2c1.8-0.2,3.5,0.1,5.1,0.8C1640.2,294.2,1650.1,294.7,1660,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892B34"),
                d:
                  "M1677,300.9c1.1-1.3,2.6-0.7,4-0.9c1-0.9,1.9-0.8,2.9-0.1c1.7,0,3.3,0.1,5,0.1c7.6,1,15.2,2,22.7,3       c6.4,0.9,13,1.2,19.3,2.9c0.3,0.6,0.2,1.1-0.5,1.5c-5.3,0.9-10.5-0.4-15.7-1c-11.3-1.3-22.6-2.5-33.9-3.9       C1679.5,302.3,1678,302.2,1677,300.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2D33"),
                d:
                  "M1625,294.1c-0.5,0.8-1.3,0.9-2.1,1c-3.6,2.3-7.6,1.3-11.4,0.9c-2.1-0.2-4.2-0.5-6.3-0.5       c-5.6,0.1-11.3,0.2-16.8-1.3c-2.3-1.2-5.3,0-7.3-2.2c0-0.3,0-0.7,0-1c4,0,8,0.1,12,0.1c1.8,1.6,4.1,0.7,6.1,0.9       c6.4-1.3,12.5,1.1,18.9,1.1C1620.1,294.8,1622.6,293.6,1625,294.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E5258"),
                d:
                  "M1660,297c-10,0.4-19.8-2.6-29.9-2.2c10.1-1.3,20.1-2,29.9,1.4c0.1,0,0.2,0.3,0.2,0.4       C1660.2,296.8,1660,296.9,1660,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5256"),
                d:
                  "M1773,308c-4.3,0.8-8.7,0.2-12.9-0.4c-2.6-0.4-5.7,0.4-8.1-1.6c5.7,0,11.5,0,17.2,0       C1770.8,306,1772.7,305.6,1773,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4575B"),
                d:
                  "M1617.9,293c-6.3,0.5-12.5-1.2-18.9-1.1c2-1.7,4.6-1.2,6.6-0.7c4.7,1.1,9.5,0.6,14.3,0.9       c-0.2,0.4-0.4,0.7-0.6,0.8C1618.9,293,1618.4,293,1617.9,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A74F56"),
                d:
                  "M1684,299.9c-1,0-2,0.1-2.9,0.1c-3-2.5-7.1,0.5-10.1-2c3.2,0,6.5,0,9.7,0       C1682.1,298,1683.7,297.8,1684,299.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C4B4D"),
                d:
                  "M1953,335c-1.5,0.3-3.5-0.8-4.6,0.9c-1.1,1.6,1.1,2.1,1.6,3.1c-0.7,0.9-1.7,1.1-2.8,1.1       c-6.9-1.3-12.7-6-20-6.2c-9.8-4.6-21-4.5-31-8.6c-1.4-0.6-4.7,0-2.2-3.2c8.5,0.3,16.9,1.5,24.5,5.6c2.7,1.4,4.8-0.5,7.3-0.2       c5.7,0.6,10.9,3.5,16.8,2.7c2.7-0.4,6-1.1,7,3.2C1949.9,334.5,1952.2,333.6,1953,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("934F52"),
                d:
                  "M1894,322c-0.1,0.7-0.8,1.9,0.5,1.9c4.2-0.1,7.6,3.2,11.3,3.2c4-0.1,7.1,2.2,10.7,2.3       c4,0.1,7.3,1.7,10.6,3.6c-0.6,0.7-1.3,1-2.2,1.1c-6,0.1-11.6-1.8-17.3-3.2c-8.6-2-16.7-6-25.7-6.3c-2.4-0.1-4.2-3.1-6.9-1.1       c-1.1,0.3-2.1,0.2-2.9-0.6c-4.3-4.8-10.5-3.2-15.8-4.9c-1.3-0.4-3,0-3.2-2.1c9-0.8,17.7,2.1,26.7,2.2       C1884.7,318.3,1888.5,323.5,1894,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("934F52"),
                d:
                  "M1853,316c-5.6,1.6-10.8,0.2-16.2-1.3c-4.2-1.2-8.6-2-12.9-2.1c-6.4-0.2-12.4-3.3-18.9-2.6       c-1.3-1.7-4.3,1.2-5-2c4.1,0,8.2,0.1,12.3-0.1c2-0.1,3.4,0.6,4.7,2c8.7,0.4,17.3,0.9,25.7,3.8c1.9,0.7,4.3,0.1,6.4,0.2       C1850.7,314.1,1852.6,313.5,1853,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C4B4D"),
                d:
                  "M1963,338c-1.7-1.5-4.4-0.2-6-2C1959,336.7,1962,334.4,1963,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC4E59"),
                d:
                  "M1509,300c-1.2-1.2-2.3-2.3-4.2-2c-1.9,0.2-3.4,0-4-2.5c-0.7-2.8-5-0.4-5.8-3.5c0.3-1.1,0.1-1.7-1.1-2       c-0.9-0.2-2.4-0.2-1.9-1.9c5.7,0,11.4,0,17,0c3,0,5.9,0.1,8.9,0.1c9.1,1.2,18.4,1.3,27.4,3.1c1.5,1,1.5,2.4,0,3.1       c-1.9,0.9-3.8,2.5-6,2.2c-3-0.5-5.2,0.1-6.4,3.1c-0.6,1.3-1.8,1.3-3,1c-5.5-1.3-10.9-2.2-16.2,1       C1512.1,302.7,1510.3,301.5,1509,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D04954"),
                d:
                  "M1588,293c5.6,0.4,11.3,0.8,16.9,1.2c1.7-0.4-2.5,1.6,0.5,1.2c4.9-0.8,9.9,0.6,14.8,0.2       c0.9-0.1,1.8,0.1,2,1c0.3,1.1-0.4,1.8-1.3,2.4c-2.5,1.6-5.2,0.3-7.8,0.4c-2.1-0.1-4.2,0-6.3,0c-0.5,0-1,0-1.5,0       c-6-0.5-12-0.4-17.9-1.9c-7.9-0.7-15.6-2.6-23.7-2.3c-1.7,0.1-4.4-0.4-2.5-3.5c3.2,0.1,6.5-0.6,9.7,0.4c2.3,0,4.7,0.1,7,0.1       C1581.3,293.3,1584.7,291.7,1588,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C94D56"),
                d:
                  "M1571.1,292c-3.4,0-6.7,0-10.1,0.1c-5,2.3-10,2.4-15,0c-9.2-0.1-18.2-3-27.5-2.6       c-0.2,0-0.4-0.8-0.6-1.2c14.1-0.5,28,1.7,41.9,2.7C1563.6,291.2,1567.5,290,1571.1,292z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF454E"),
                d:
                  "M1588,293c-3.3-0.4-6.7,0.9-9.9-0.9c1-0.1,2-0.1,3-0.2C1583.3,292.5,1585.9,291.3,1588,293z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931927"),
                d:
                  "M1989,627c5-1.1,9.8,2.3,14.8,0.7c1.2-0.4,2,0.4,1.9,1.6c-0.1,0.9-0.5,2.4-1.5,2.2       c-4.4-0.6-8.6,2.8-13.2,1c1,0.5,2.1,1,3.1,1.5c-2.2,1.6-4.7,0.7-7.1,0.9c-3.7-1.8-7.6,0.1-11.7-0.5c1.1,0.3,2.1-0.1,2.7,0.7       c-3.2,1.8-6.7,0.5-10,1c-2-0.1-4-0.1-6-0.2c-1.5-2.5-0.4-3.8,2-4.5c1.7-0.1,3.3,1.5,5,0c0.8-0.5,1.6-0.9,2.4-1.2       c3.7-0.6,7.5-0.8,11.2-0.4c1.9,0.2,3.3,0.7,3.7-2C1986.5,626.7,1987.7,626,1989,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831820"),
                d:
                  "M1978.1,635c-1.6,0-3.2,0-4.9,0c4.2-0.2,8.1-2.4,12.4-1.8c1.1,0.2,1.3,0.8,1.4,1.6       C1984,635,1981,635,1978.1,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A31B28"),
                d:
                  "M1965,632c-2.5,0.1-3.1,1.7-3,3.9c-2.3,0.5-4.9-0.8-7.1,1.1c-3.6,0-7.2-0.1-10.9-0.1       c1-1.6,3.2-0.1,4.5-1.8c-3.2-1.3-6.8,0-9.6-2.1c0.2-2.6,2.4-1.2,3.5-1.7c3.4-1,6.9-0.7,10.4-0.3c4.1,0.4,7.9-0.2,11.6-1.8       c2.6-0.9,4.9-0.9,6.5,1.9c-0.5,0.8-1.2,1-2,1C1967.7,633,1966.3,632.7,1965,632z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B192C"),
                d:
                  "M1971,631c-1.9-0.8-3.8-2.1-6.1-1c-2.2-0.1-4.5-0.1-5-3c0.6-0.5,2.2-0.6,1-2c0.3-2.4,2.3-1.9,3.8-2.1       c6.4-0.6,12.9-0.4,19.2,1.1c1.3,1,2.8,0.1,4.2,0.3c2.8,0.5,1.1,1.6,0.8,2.6c-3.1,0.6-2.7,2.6-1.2,5.5       C1981.8,629.6,1976.4,631.4,1971,631z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF1B2F"),
                d:
                  "M1960,627c1.7,1,3.3,2,5,3c-3.4,2.1-7.1,2.6-11.1,2.2c-3.9-0.4-7.9-0.2-11.8-0.2c-1.4-1.7-0.4-2.9,1-4       C1948.7,628.4,1954.4,629.1,1960,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962236"),
                d:
                  "M1984,624c-7.1,0-14.2,0-21.3,0.1c-0.6,0-1.1,0.6-1.7,0.9c-5.6-2-11.4,0-17-1c-1.6-1.9-4.5,0-6-2       c-0.9-0.7-2-1.4-0.5-2.6c4.7-1.1,8.8,1.5,13.3,1.7c7.2,1,14.4,0.2,21.6,0.5c2.3,0.1,4.6-0.4,6.6,1.4       C1980.7,623.3,1982.6,622.3,1984,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A51A2D"),
                d:
                  "M1943,628c-0.7,1.2-1.2,2.5-1,4c-0.7,1.3-2.5-0.7-3,1c-3.3-5.2-4.7-0.8-6.6,1.3c-2-0.5,0-3-3.1-3.6       c3.1-1,5.3-0.3,6.7-2c0-1.5-3.3-0.2-2.3-2c0.9-1.6,3-0.9,4.4-0.1C1939.7,627.6,1940.8,629.7,1943,628z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD4B56"),
                d:
                  "M1286,234c1.6,0.9,2.9,2.4,5,2c4.3,2.8,8.2,7,12.9,8c4.1,0.9,5.7,4.8,9.9,5.5c1.9,0.3,5.8,2.3,7.3,5.2       c1.3,2.5,2.6-0.4,4.3,0.3c6,2.2,9.1,8.8,15.5,10c0.8,1.3,1,2.6-0.6,3.3c-1.3,0.6-3.3,0.2-3.6-0.8c-0.6-1.9-1.9-1.5-3.1-1.7       c-3.1-1.6-7.1-1.9-8.3-6.2c-0.3-1.3-0.2,0.1-0.3,0.2c-3.4,1.1-5.9-0.3-8.1-2.8c-0.2-0.8,0-2-0.5-2.3       c-8.7-5.3-17.1-11-26.3-15.3C1287.1,237.9,1285.6,237.3,1286,234z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0515B"),
                d:
                  "M1334,265c0.9,0.6,2.2-1,3.1,1.3c0.8,2.2,3.1,1.4,3.9-1.3c3.5,3.9,8.6,5.2,12.9,7.7       c1.1,0.7,2.1,1.5,3.1,2.3c1.3,1.7,2.7,3.3,4,5c-5.4,0.3-10.6-0.1-15.1-3.5c-1.6-1.2-3.7-1.4-5.2-2.6c-1-1.9-2.1-3.7-4.2-4.7       C1334.8,268.4,1333.2,267.3,1334,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25C64"),
                d:
                  "M1341,274c0.9-0.4,1.9-0.8,2.8-0.1c5,4.1,11.3,4.5,17.2,6.1c2,0.5,4.2-0.3,6,1c-1.8,1.1-3.8,1-5.8,1       c-5.9,0-11.7,0.2-17.5,1c-2.4,0.3-6.7,0.6-7.8-3.7c-0.6-2.5-3.2-1.7-4.6-2.5c-6.2-3.6-12.6-6.7-18.6-10.7       c-0.3-0.2-1.1,0.5-1.7,0.7c-0.7-0.4-1.4-0.8-2.1-1.1c-1.2-2-2.4-3.9-2.3-6.3c4.6-1.7,8.2,1.2,11.5,3.4c3,1.9,5.7,3.6,9.2,4.3       C1332.6,268.1,1337.1,270.5,1341,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3656E"),
                d:
                  "M1421,289c0,1.3,0,2.6,1.8,3c3.3,0.7,5.6,3.8,9.2,4c-0.7,3.5-2.8,4.6-6.3,5.5c-11,2.8-22,1.7-33.1,1.6       c-4.7,0-9.1,1.4-13.7,1.9c-1.7,0.2-3.3,0.4-4.9,0c-3.8-2.6-2.7-6.6-3-10.2c0.7-0.3,1.4-0.3,2,0.3c4.2,1.7,8.6,0,12.9,0.4       c3.5,0.4,7,0.7,10.5,1.6c3.9,1,7.7,2.1,11.5-0.3c0.8-0.5,1.5-0.3,2.3,0c4.2,1.1,5.9-0.8,5-6.2       C1417.6,291.7,1420.1,292.4,1421,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA6D77"),
                d:
                  "M1373,295c-0.7,0-1.3,0-2,0c-0.3,0.5-0.7,0.5-1,0c0,0,0,0,0,0c0-0.9,0-1.9,0-3.5       C1371.6,292.6,1372.9,293.2,1373,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("924449"),
                d:
                  "M1355,301.8c-5.3-6.5-12.7-10.5-19.1-15.6c-1.2-1.2-2.4-2.4-4-3.1c0,0,0,0,0,0c0.4-0.4,0.8-0.8,1.2-1.2       c3.8,1.3,6.5,4.4,10,6.1c4.3,3.8,9.8,5.9,13.9,10C1354.3,298.2,1355.3,300.4,1355,301.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB646C"),
                d:
                  "M1370,295c0.3,0,0.7,0,1,0c1.6,2.8,1.6,5.9,2,9c0.1,0.8,0.6,1.4,0.7,2.2c0.7,1.7,0.6,3.3-0.9,4.6       c-0.3,0.3-0.7,0.5-1.2,0.6c-3.6-1.6-6.6-3.9-8.5-7.5c-0.1-0.3-0.1-0.6-0.1-0.8C1363.4,298.7,1368.6,298.5,1370,295z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681618"),
                d:
                  "M1363.1,303.8c3,2.4,5.9,4.8,8.9,7.2c1.7,0.3,2.7,1.7,3.9,2.7c3.8,3.2,5.9,7.4,6.8,12.2       c0.2,0.7,0.3,1.5,0.3,2.2c0,0.8-0.1,1.5-0.3,2.3c-0.9,2.2,0.2,4.8-1.8,6.7c-2.5-0.7-2-2.9-2.2-4.7c-0.2-2.1,0.2-4.2-0.5-6.2       c-0.1-0.5-0.2-0.9-0.3-1.4c-1.3-4.8-5-7.8-8.2-11.1c-1.2-1.3-2.6-2.3-3.6-3.7c-1.4-1.6-3-3.1-4.9-4.1c0-0.3-0.1-0.6-0.1-0.9       C1361.8,305,1362.6,304.8,1363.1,303.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3F4C"),
                d:
                  "M1345.9,306.9c0-0.3,0-0.5,0-0.8c2-0.3,4-0.5,5.9-0.8c0.7,0.3,1.5,0.6,2.2,0.9       C1351.5,307.7,1348.7,306.8,1345.9,306.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961926"),
                d:
                  "M1841,452c1.2-1.1,2.4-2.2,3.7-3.2c2.9-2.3,4.4-4.4-0.7-5.8c2.1-1.8,4.5-1.3,6.9-1       c0.6,0.2,1.5,0.4,1.6,1c1.2,6.5,6,6,10.8,5.7c0.8-0.1,1.6,0.2,2.4,0.4c7.6-0.4,15.3,0.5,22.6-1c6.4-1.3,13-0.6,19.3-2.5       c2.5-0.7,4.4,0.9,6.5,1.9c0.9,1,1.6,2,1,3.4c-0.5,0.2-1,0.6-1.4,0.5c-5.6-0.9-5.6-0.9-7,4.6c-1.3-6.7-5.4-5.6-9-3.8       c-2.6,1.4-4.6,2.3-6.8-0.1c-0.8,1.5,0.6,2.1,0.4,3.1c-0.3,0-0.8,0.2-0.9,0.1c-1.8-1.7-3-3.9-6.3-1.7c-1.5,1-4.7-1.1-5.3,2.9       c-0.3,1.8-1.7,0.6-2.4-0.4c-2.4-3.4-5.5-4.3-9.3-2.3c-1.6,0.7-2.7,1.9-4,3c-2.3,0-2.4,0-2.8-2.1c-0.2-1.3-1.2-0.9-1.9-0.9       c-2.9,0-2.2,2.3-2.3,4c-0.6-0.3-1.6-0.4-1.7-0.8c-0.3-2.6-4-2.2-4.2-4.9c0,0-1.2-0.1-1.3,0c-1,3.3-4.8,2.3-6.9,4.5       C1842.5,455,1843.2,453.1,1841,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941926"),
                d:
                  "M1915,451c-0.3-1-0.7-2-1-3c0.9-2.2,2.6-2.6,4.9-2.4c12.2,1.5,24.2,3.9,36,7.4c0.8,0.2,1.8,0.2,2.3,0.8       c3.8,4.3,9.7,4.2,14.4,6.7c2.6,0.2,5.3-0.3,7.8,0.5c1,0.3,1.9,0.7,1.9,1.9c0,0.9-0.5,1.6-1.3,1.8c-2.3,0.7-4.3,2.5-6.9,1.2       c-2.6-3.9-7-3-10.6-3.3c-4.1-0.3-8-0.7-10.7-3.9c-1.3-1.6-1.4-0.5-2.6-0.4c-3.6,0.3-7.3-0.8-10.9-1.7c-1.4-0.3-2.3-2.4-4.3-1.2       c-0.7,0.4-1.4,0-0.8-0.9c2.4-3.5-2.3-1.6-2.3-3.2c-2.6,2.1-5.5-0.7-7.4-0.1C1920.1,452.4,1917.7,450.3,1915,451z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961923"),
                d:
                  "M1973,466c2.6-0.6,4.6-2.7,7.6-2.9c-3.6-1.6-7.1-0.9-10.6-1.1c-0.1-5.7,4.8-2.9,7.2-4.2       c5.4,0.3,10.7,1.2,14.3,5.8c2.2,5.5-0.9,10.2-7.9,11.6c-0.8,0-1.6-0.2-2.3-0.5c-0.5-0.2-0.9-0.5-1.2-0.9       c-0.9-1.1-2.1-2.1-1.3-3.8c1.5-0.7,2.8-2.4,4.9-1.1c-2.7-1.7-4.1,0.9-6.1,1.7c-1.2,0.1-2.6,0.4-2.6-1.6c0.6-1.7-0.9-0.8-1.4-1       C1972.3,467.6,1971.8,467.1,1973,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A182A"),
                d:
                  "M1932,462c-0.5-1.1-0.7-2,1-2c4.8-0.1,9.2,1.8,14.2,1.8c4,0,10,1.4,13.8,5.2c2,0.5,4.9-0.6,5.2,2.8       c-0.3,0.4-0.7,0.7-1.2,0.9c-1.7,0.3-3-0.4-4-1.7C1951.3,466.7,1941.7,464.3,1932,462z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("94192A"),
                d:
                  "M1966,470c-0.7-2.6-3.8-1.3-5-3c3.1-2.6,6.4-3,9.1,0.4c1.5,1.8,2.9,2.4,4.9,1.6c0.7,1.2,1.9,1,3,1       c0.3-0.4,0.7-0.4,1,0c-0.2,1.5,1.4,1.9,2,3c-1.2,1.4-2.8,1.8-4.5,1.3C1972.9,473.1,1969.1,472.4,1966,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1863,457c0.4-2.2,1.4-3.6,4-3C1866.3,455.8,1865.4,457.4,1863,457z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1827"),
                d:
                  "M1863.2,459.7c0.9-0.3,1.4-0.6,1.6-0.5c0.5,0.3,1,0.8,1.1,1.3c0.2,1-0.7,0.4-0.8,0.3       C1864.5,460.6,1864.1,460.2,1863.2,459.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62232"),
                d:
                  "M1852,443.1c-2.7,0-5.3,0-8-0.1c-1.7-0.7-3.4-1.3-5.1-2c0.7-3.3,4.8-3.2,6-6l0,0       c0.9-0.6,1.9-0.5,2.8-0.7c0.5,0.1,0.9,0.3,1.3,0.6c-2.1,4.4,1.9,5.8,4.1,8.1C1852.8,443.4,1852.4,443.4,1852,443.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33744"),
                d:
                  "M1845,435c-0.3,3.7-4.3,3.7-6,6c-0.7,0-1.3,0-2,0C1838.9,438,1842.1,436.7,1845,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5660"),
                d:
                  "M1863.2,419.1c-4.7,3.4-9.4,6.7-14.1,10.1c-2.5-0.1-5-0.1-7.5-0.9c-2.4-0.8-4.9-1.1-6.8-3       c-0.1-1.4,0.4-2.7-1.9-3.3c-2.3-0.5-5-0.3-7-2.1c0.9-2.3,3.3-3.3,4.6-3.4c4.5-0.4,5.1-3.6,6.3-6.7c2.4-1.4,5-2.1,7.5-1       C1851,411.5,1857.4,414.7,1863.2,419.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85964"),
                d:
                  "M1863.2,419.1c-4.9-0.7-8.5-4.1-12.7-6.3c-4.3-2.2-8.5-4.2-13.5-2.8c-0.5-0.6-0.6-1.2-0.3-1.9       c2.7-0.5,0.1-3.9,2.5-4.6c0.5-0.2,1.2-0.4,1.4-0.1c3.3,5.6,8.4,1.1,12.5,2.3c1.9,0.1,3.4,1.2,5,1.9c1.4,0.8,2.9,1.4,4.2,2.2       c1.4,2.3,4.6,3.3,5,6.4C1866.1,417.4,1864.9,418.6,1863.2,419.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45863"),
                d:
                  "M1842,427c2.3,1.1,5.1,0.2,7.1,2.2c-3.8,2.9-7.8,5.6-12,7.9c-0.8-2.2-4.9-2.7-7.3-0.7       c-0.9,0.8-1.6,1.5-2.9,1.5c-4.2-1.7-8.6-2-13-2c0-0.3,0-0.7,0-1c0.4-3.5,3.2-2.5,5.3-2.7c4.1-0.5,8-0.1,11.9-3.5       C1833.1,427.1,1838.2,427.1,1842,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE2E3B"),
                d:
                  "M1853.9,428.9c2.6-1.3,4-4.3,7.1-4.9c1.8-0.1,2.9-1.4,4.2-2.4c2.9-2.2,5.3-1.2,6.8,2.6       c-1.2,1.5-3.2,1.6-4.5,3.9c-2.1,3.7-7,4-11.4,2.7C1855.1,430.3,1854.3,429.8,1853.9,428.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3444B"),
                d:
                  "M1872,424c-2.3-2.6-4.7-3.9-7.7-0.9c-0.8,0.8-1.9,2.1-3.3,0.8c3-2.4,6-4.8,9-7.1c0.2,0,0.5,0,0.7,0       c2.4,0.8,4.5,2.1,6.8,3c1.4,0.6,3.4,1.2,2.4,3.5c-2.3,1.5-4.7,2.3-7.3,1.2C1872.4,424.4,1872.2,424.2,1872,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D0686F"),
                d:
                  "M1867.3,416.2c-1.7-2.1-4.9-2.9-5.3-6.1c0.6-0.7,1.4-0.6,2.1-0.2l-0.1,0c2.1,1.7,4.6,2.2,7.1,3.1       l-0.1,0c1,1.5,0.4,2.4-1,3.1C1869.1,416.1,1868.2,416.1,1867.3,416.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE3A49"),
                d:
                  "M1853.9,428.9c0.8,0.1,1.7,0.2,2.2,1.1c-1.4,3.7-5.2,3.6-8,5c-1,0-2,0-3,0       C1847.9,433,1850.9,430.9,1853.9,428.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E484D"),
                d:
                  "M1870,416.1c0.3-1,0.7-2.1,1-3.1c1,0.4,1.9,0.8,2.9,1.2c0.5,1.4-0.8,1.7-1.5,2.3       c-0.7,0.5-1.4,0.8-2.3,0.7c0,0-0.2-0.4-0.2-0.4C1870,416.6,1870,416.3,1870,416.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE626C"),
                d:
                  "M1789,426c2.7,0,5.4,0,8.4,0c-2.3-4-8.9-3.9-7.4-10c0.2-0.2,0.4-0.4,0.6-0.5c5.9-0.6,11.5,0.7,17,2.5       c1.2,0.4,2.3,0.8,3.5,1.3c1.8,0.8,3.8,1.4,5.3,2.7c1.3,1.1,3.6,2.2,2.3,4.3c-1.1,1.7-3.1,3.4-5.4,0.6c1.7,2.2,2.5,4.5,0.3,5.9       c-2.7,1.8-5.9,1.7-8.6-0.7c-2.7,0-5.3,0-8,0C1795.3,428.7,1790.3,429.9,1789,426z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA5D68"),
                d:
                  "M1805,432c2.2,1.8,5.1,1.2,7.1,0.5c4.2-1.4,0-4.4,0.9-7c1.8,2.3,3.6,1.4,5.4-0.1       c-1.5-3-5.1-3.2-7.3-5.4c0.5-0.5,1.1-1,1.7-0.9c7.7,0.8,15.5,1.4,22.3,5.9c2.3,0.7,4.7,1.3,7,2c-1.9,1.8-5.5,0.4-6.6,3.6       c-0.1,0.2-0.8,0.4-0.9,0.2c-4-3.9-5.1,2.5-8.4,2.5c-3.6,0-7.4-0.7-11,0.7c-0.4,0.2-0.7,0.6-1.1,1c-1.7,0-3.3,0-5,0       C1808.2,433.3,1805,434.8,1805,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671320"),
                d:
                  "M1387,384c-0.7,6.4,1,12.6,1,19c-0.3,0-0.7,0-1,0c-0.3-1.7,0.6-3.6-1-5c-2-6.4-2.6-12.8-1.7-19.4       c1.3-1.4,1.8-0.6,2.1,0.7c0.2,0.9-0.1,1.9,0.6,2.7C1387,382.7,1387,383.3,1387,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B1321"),
                d:
                  "M1386,442c1.5,1.3,0.9,3.1,0.9,4.7c0.1,7.1,0.1,14.2,0.1,21.3c0,0-0.1,0.1-0.1,0.1       c-1.4,0.6-2.8,0.7-3.9-0.6c-0.6-0.7-1-2.2-2.1-1.8c-7.6,2.8-16.7,1.4-22.7,8.4c-1.1,1.3-3,1.2-4.7,1.2c-5,0-10,0.1-15-0.1       c-4.7-2.5-9.1,0.9-13.7,0.5c-2.3-0.2-5.8,2.4-5.9-2.8c0-1-1.3-0.1-1.9,0.2c-2.3,1-4.4,1.4-7,0.1c-2.1-1.1-5-0.2-7.6,0.7       c-2.7,0.9-5.5,1.7-8.2,0.2c-2.9-1.5-5.9-1.2-8.8-0.8c-8.5,1.2-17.2-0.2-25.5,2.6c-8.8-1.4-17.5-2.2-26.5-0.4       c-4,0.8-8.9,0.5-13-1.2c-1.5-0.6-2.5-0.3-3.8-0.1c-1.8,0.2-3.6,0.8-5.2-0.6c-0.2-0.1-0.3-0.5-0.6-0.5c0.3,0.4,0.2,0.8-0.1,1.2       c-1.3,1-2.8,1.2-4.3,1c-7.1-1-14.2,0.8-21.2-0.8c-2.4-0.5-5-1.5-7.3-0.3c-2,1.1-3.4-2.6-5.7-0.3c-0.8,0.7-1.8-1.7-1.2-3.3       c1.2-1.4,1.7-3.8,4.4-3.2c-1.3-0.3-2.3-0.8-3.2-1.6c-0.8-0.6-1.7-1.5-1.2-2.5c0.6-1.3,2-1.3,3-0.6c1.5,1,1.5,0.7,2.4-0.9       c1.1-2.1,4.5-1.4,6.1-2.7c2.6-2.2,3.9-1,5.8,0.8c1.7,1.7,4,0.9,5.5-0.3c3-2.5,5.6-2.4,8.1,0.4c3.2-4.5,3.3-4.5,6.1,0       c0.4,0.6-0.1-0.1,0.1,0.5c1,2.3,5.5-0.7,5.1,2.9c-0.3,2.5,0.3,4.1,2.1,6c-0.7-3.5,0.9-7.5-4.4-8.9c-1.2-0.3,1.1-3.4,1.2-5.4       c0.2-0.4,0.4-0.8,0.8-1.2c1.3-0.3,1.7,0.6,2.1,1.5c1.3,3.1,3.6,4.4,6.9,4.3c1.5,0.8,3.8,0.7,3.8,3.2c0,1.3,0.9,2.1,1.6,3       c0.2,0.2,0.5,1,0.7,0.6c3.4-6.7,9.9-4.1,15.2-5.3c2.7-0.6,5.1-2.4,8.1-0.4c0.6,0.4,1.3-1.7,2-2.5c1.5-1.6,3-3.2,5.6-2.8       c0.3,0.1,0.6,0.3,0.8,0.5c1.6,1.8,1.7,1.8,2.6-0.2c0-0.6,1.3,0.9,0.8-0.5c-0.3-0.9-1.2-1.5-1.7-2.4c-0.6-1.3-1.1-2.6-0.9-4       c3-0.8,5.3,0.6,6.5,4.1c0.8,2.3,1.2,5,4.3,1.9c0.4-0.4,1.1-0.5,1.4-0.2c3.8,3.2,9.3,0.2,13.1,3.6c0.9,0.8,1.9,0.3,2.7-0.3       c1-0.8,2.1-2.1,3.5-0.9c1.4,1.2,0.4,2.8-0.1,4.3c1.6-0.8,1.2-2,1.2-3.1c0-4.4,1.9-6,6.2-4.7c2.1,0.6,4,1.3,6.2,0.1       c1.1-0.6,2.1,0.2,3.2,0.7c5.3,2.2,10.6,3.6,16,0c1.7-1.2,3.7-0.5,5.3,0.2c2.7,1.1,5.1,1.3,7.5-0.5c1-0.7,2.1-1,3.3-0.7       c4.1,0.9,4.3-1.1,2.7-4.2c0.7,2.3,2.3,4.8-2.4,4.3c-3.1-0.4-6.1-1.4-9.5,0.9c-2.9,1.9-7.4-1.8-7.7-5.5c-0.1-2.4-0.7-5,1.1-7.2       c0.5-0.3,0.9-0.4,1.5-0.5c12.2,1.6,24.1,4.6,36.2,6.7c0.5,0.1,1,0.2,1.5,0.4c1.7,0.7,3.5,0.5,5.3,0.7c3.6,0.9,7.4,0.9,11.1,1.8       c2.6,0.6,4-0.3,4-3.2C1384.7,445.6,1384.4,443.5,1386,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601121"),
                d:
                  "M1385,398c-0.5,10,0.3,20,1,30.1c-0.8,3-2.9,3.3-5.4,2.7c-9.9-2.6-20.2-3.4-30.3-5.6       c-5.9-1.3-12-1.9-18-3.1c-1.7-0.7-3.5-0.6-5.3-0.8c-0.8-0.1-1.6-0.4-2.3-0.8c-1.4-1.3-1.9-2.7-0.9-4.5c1.7-1.5,3.8-1.9,5.9-2.4       c15.5-3.4,31.2-6.3,46.8-9c3.8-0.7,6.6-2,6.3-6.6c-0.1-1.5,0.1-3,1.3-4.1C1386.5,394.7,1385.5,396.4,1385,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771628"),
                d:
                  "M1332,421c10.5,1.8,21,3.1,31.4,5.4c6.3,1.4,13,1.6,19.3,3.5c1.6,0.5,2.2-1.2,3.3-1.8       c0,4.6,0,9.3,0.1,13.9c-0.3,3.4,1.5,7.9-0.8,10.1c-2.1,2-6.1-0.9-9.3-1c-2.4-0.1-4.6-0.5-6.8-1.1c-1.5-1.2-3.5,0.2-5-1v0       c0.1-2.7,2.2-2,3.7-2.1c3-0.3,6,0.4,9,0.5c0.7,0,1.3,0.3,2,0.4c1.3,0.2,2.2-0.3,2.8-1.6c0.6-1.4-0.8-10.8-1.7-11.6       c-1.4-1.2-2.4-0.3-3.4,0.7c-1.2,1.2-2.6,1.2-3.2-0.4c-2-5.2-6.7-4.3-10.6-4.5c-2.5-0.1-4.9,0.4-6.9-1.7c-0.9-1-2.2-0.8-3.3-0.5       c-4.4,1.3-8.4,0.5-12.2-1.8c-1.6-1-3.1-1-4.8-0.9c-4,1.3-7.4-0.9-11-1.7c-1.2-0.2-1.9-1.4-1.6-2.7c0.3-1.4,1.2-1.9,2.5-1.1       c0.7,0,1.3,0,2,0C1328.5,421.2,1330.5,419.8,1332,421z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("4D1116"),
                d:
                  "M1385,398c-0.2-1.4,0.5-2.9-1-4c-1.2-1-1.7-2.4-2.1-3.8c-0.8-5.1-0.3-10.1-0.3-15.2       c-0.1-9.9-1.1-19.8-1.9-29.7c0.1-2.7-0.8-5.6,1.1-8.1c0.7-2.3-0.8-5,1.1-7.2c2.5,3.7,2.3,8,2.5,12.2c0,0.5,0,1.1,0,1.6       c0.5,7.1,2.2,14.1,1.9,21.2c-1.3,4.2-0.2,8.7-1.2,12.9c-0.4,6.7,1.6,13.3,0.9,20C1385.7,398,1385.3,398,1385,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871726"),
                d:
                  "M1460,392c-2.3,0-4.7,0-7,0c-2.3-2-4.5-3.3-7.8-1.7c-1.7,0.8-4.1-0.1-6.2-0.3c-3.9-3.1-8-5.1-13.2-3.1       c-1.5,0.6-2.4-0.2-2-2.2c0.3-1.5,0.7-3.5-1.9-3.8c-1-0.8-1.6-1.8-1.7-3.1c0.2-2.1,0.4-4.2,1.6-5.8c1.3-0.1,1.6,0.5,1.9,1.1       c2,5.3,5.9,7.2,11.5,6.9c3.9-0.2,8.2-2.4,11.7,1.4c2.6-2.2,5.7,0,8.5-1.2c2-0.9,4.3-1.9,6.7-0.6c0.9,2.2,0.9,4.2,0.5,6.6       c-0.5,3.1-1.7,3.5-4.1,3c2.2,0.4,4,0.5,4.2-2.6c0.1-1.2,1.1-0.9,1.7,0c0.1,0.2-0.1,0.5,0.1,0.7c2.5-3.8,5.6-2.4,8.8-1.3       c3.1,1.1,6,2.8,9.5,2.4c1.4-0.2,2.7,0.3,2.7,2.1c0,1.8-1.1,2.6-2.8,2.8c-2.6,0.3-5.3-0.6-7.8,0.5c-0.3,0-0.7,0-1,0       c-1.4-1.5-3.3-0.8-5-1C1465.8,394.5,1463.1,391.9,1460,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1827"),
                d:
                  "M1421,378c0.3,1,0.7,2,1,3c-1.8,1.3-1.7,3.4-2.6,5.8c-3-4-7-3.3-10.8-2.7c-2.4,0.4,1.5,2.5-0.9,3.6       c-2.6-4.4-5.7-7.7-10.2-1.5c-1.6-2.7,1.3-2.5,1-3.9c-1.5-1.5-5.7,1.3-5.3-3.4c0.2-2.4-0.4-2.7-4.2-2.1c0-3.3,0-6.6,0-9.8       c2.5-3.2,5.8-1.7,8.9-1.4c2.3,2.9,0.4,4.4-2.2,5.4c1.1,1.9,2.8,2.5,4.3,2.5c6.2,0,11.7,3.6,18,3.1       C1419,376.5,1420.2,377,1421,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911A2F"),
                d:
                  "M1398,366c-2.9,1.2-6.1-0.7-9,1c-2.8-2-1.5,2.1-3,2c-0.9-1.6-0.5-3.3-0.2-5c0.8-0.9,1.9-1.2,3.1-1.3       c2.9,0.3,5.6-1.1,8.5-0.7C1400.2,363.7,1400.3,364.4,1398,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801722"),
                d:
                  "M1386,364c0,1.7,0,3.3,0,5c-0.7,4.4,1.5,8.6,1,13c-1.6-0.9-0.4-3.1-1.9-4c0-4.7,0-9.3,0-14       C1385.3,363.6,1385.7,363.7,1386,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1475,394c2-1.9,4.4-0.7,6.7-1c1.6-0.2,3.3-0.6,3.1-2.4c-0.2-2-2.5-1.2-3.1-1c-4.5,1.4-7.3-3.1-11.5-3       c-1.1,0-1.4-0.4-2.9,0.1c-3.5,1.3-6.8,5-12.4,2.2c10.1,1.7,5.9-5.3,7.2-9c2.6-1.8,4.9-0.4,7.5,0.2c3.2,0.7,6.1,3.2,10,1       c1.9-1.1,4.4,1,6.3,2.2c3.1,1.8,6,3.1,9.8,1.3c1.9-0.9,4.2-0.8,3,2.6c3.6,0.6,5.1,5,9.1,5.1c2.2,0,4.3,0.4,6.4,0       c1.8-0.3,3.9-0.5,4.8,1.5c0.9,1.9-0.9,3-1.9,4.2c0,0,0,0,0,0c-4-0.8-7.9-0.1-12.2-1.6c-3.8-1.3-8.3-3.6-13.4-2.6       C1486.1,394.8,1480.5,394,1475,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1469,393c2-1.4,3.9-2.1,5,1C1472.3,393.8,1470.4,394.7,1469,393z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921927"),
                d:
                  "M1517,398c1.5-4,1.4-5.6-4-4.4c-4.3,1-9.4,0.5-12.2-4.4c-0.4-0.7-0.9-1-1.5-0.4c-0.9,0.8-2,1.8-2.9,0.3       c-1-1.7,0.7-2.6,2.4-3.9c-1.3-0.1-2.2-0.4-2.4-0.1c-3.7,4.4-7.2,1.2-10.5-0.6c-1.8-1-4.1-0.8-5.4-2.8c-2.9,4.2-6.6-0.8-9.4,0.7       c-1.4,0.8-1.1,0-1.5-0.5c-0.5-0.6-0.6-1.5-1.7-1.5c-2-0.1-3.9-0.4-5.9-0.6c-2.6,0.3-5.3,0.6-7.5,2.1c-1.1,0.7-2.1,1.2-3.1,0.2       c-0.7-0.7-1.4-1.7-2.5-0.9c-1.4,1.1,1.3,1.8,0.4,3c-2.1,0.5-2-1.7-3-2.6c-3.4-2.7-7.5-0.9-10.8-0.5c-6.8,1-11.9-1.6-12.9-8.6       c-0.5,1.8-1.1,3.5-1.6,5.2c-5.6-0.7-11.4-0.3-16.7-3c-2.4-1.2-5.3,0.6-8-1.3c-3.2-2.2-0.5-4.9-0.1-4.8c3.6,0.7,1.1-2.1,1.9-2.9       c1.7-1.7,1.1-2.6-1-3c0.1-2.5,1.9-1.8,3.3-1.7c2.1,2.2,3.5,5.3,7.3,1.5c1.8-1.8,3.3,1,4.3,2.6c0.7,0.9,1.6,1.1,2.6,1.2       c13.8,1.2,27.4,4.2,41.2,5.5c7.9,0.7,15.5,3,23.5,2.6c5.2-0.2,10,2.1,14.9,3.3c2.3,0.6,4.5,1.4,6.3-1c4.7-0.8,9.5-0.7,14.2,0       c2.3,1.1,1.6,2-0.2,2.9c-1.1,0.5-2.9-0.1-2.9,1.9c1.2,3.1,4.8,1.2,6.5,3.1c0.3,2.3,1.2,3.7,3.7,4.3c3.5,0.9,6.9,2,10,3.8       c1.5,0.9,3.4,1.6,2.1,4c-0.3,1-0.7,2-1,3C1527.6,399.9,1522.1,400.4,1517,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB616B"),
                d:
                  "M1580,387c-1.3,0-2.7,0-4,0c-5.3-0.8-10.6,0.2-15.9-0.2c-1-0.6-2-1.3-3-1.9c0.8-2.6,1.9-4.9,4.4-6.4       c1-0.6,2.1-1.8,1.3-2.9c-2.5-3.2,0.1-4.7,1.8-6.5c0.8-0.7,1.8-0.9,2.9-0.7c4,0.1,7.6,2.2,11.6,2.6c1.2,0.1,2.3,0.7,2.7,1.9       c1.5,5,5.4,5.7,9.8,5.8c4,0.1,6.8,1.5,6.3,6.2c-0.8,2.7-1.6,4-5.2,2.7C1588.7,386.2,1584.2,387,1580,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A25"),
                d:
                  "M1571,402c-5.9,0-11.8,0.1-17.7,0c-1.6,0-3.8,0.8-4.3-2c0.9-1.2,0.8-1.3-0.1-1.8       c-2.5-1.3-5.2-2.1-7.7-3.3c-3.1-1.5-2.7-4.4,0.7-6.9c4.6-1.7,9.6-0.5,14-0.1c2.9,0.3,5.4,6.3,8,9.8c0.4,0.5,0.6,1.1,0.9,1.6       c1.5-1,2.8-2.1,4.2-2.8c1.4-0.7,2.8,0.1,3.4,1.2c1.1,2-0.9,1.2-1.7,1.7C1569.6,400.1,1570.8,401.1,1571,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871821"),
                d:
                  "M1510,382c-0.3-1.6-0.9-3.3,2-3c1.4,0.1,3,0.5,4-1c1.5-1.7,4-1,5.7-2.2c3.3-1.7,7.1-0.8,10.6-1.8       c2.1-0.2,4.2-0.7,6.2-1.5c1,0,1.9,0.3,2.8,0.7c2,0.8,4.1,1.4,5,3.7c-0.3,2.1-1.7,1.7-3.4,1.3c2.5,0.9,4.7,1.8,7.2,1.3       c2.3,1.1,5.4,1.5,5.1,5.1c-3.4,0.1-6.8,0.2-10.2,0.3c-7.3,0-14.7-0.5-22-0.7C1518.6,384.1,1514.1,384,1510,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1A24"),
                d:
                  "M1542,388c-2.8,5.5-2.7,6.1,3,6.8c2.6,0.3,3.2,4.3,6.6,2.2c-0.7,1.8-1.6,2.5-2.7,3       c-5.2,0.1-10.1-1.4-15-3c0-3.8-3.8-2.9-5.7-4.4c-2-1.6-5-2.2-7.7-2.6c-3.6-0.6-4.5-1.9-2.6-5.1c8.1-1,16.2-1.7,24,2       C1542,387.3,1542,387.7,1542,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD6671"),
                d:
                  "M1545.9,377.1c-1.6-1.1-3.2-2.1-4.8-3.2c4.9-3.5,10.9-3.1,16.4-4.3c2.4-0.5,5.1-1.8,7.5,0.4       c0.2,1.7-4.7,3-0.3,5.1c0.6,0.3,0.3,1.9-0.5,2.7c-2.5,2.2-5.2,4.4-7.1,7.1c-0.6-0.1-1.2-0.1-1.8-0.2c-0.9-2.6-3.7-3-5.4-4.6       C1548.2,379.5,1546.6,379,1545.9,377.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1A2D"),
                d:
                  "M1542,387c-7-1.5-14.1-1.6-21.2-1.4c-1.1,0-1.9-0.3-2.8-0.6c-2.9-0.3-6.6,1.4-8-3       c11.1,0.7,22.2,1.4,33.3,2.1c0.6,0,1.1,0.6,1.7,0.9C1544,385.7,1541,383.3,1542,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1560.1,386.8c5.3-0.9,10.6-1.7,15.9,0.2c-1.3,1.5-3.1,1.2-4.5,0.6c-3.1-1.2-5.7-0.3-8.3,1.2       C1562.1,388.1,1561.1,387.5,1560.1,386.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A25"),
                d:
                  "M1564.9,393.4c1,0.3,1.1,0.9,1.1,1.6c0,0.4-0.4,0.7-0.6,1c-0.3-0.5-0.8-1-1-1.6       C1564.3,394.2,1564.7,393.7,1564.9,393.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636B"),
                d:
                  "M1580,387c4.2-1.8,9-1.9,12.8-0.4c2.9,1.1,3.1-0.2,4.2-1.6c0.2,0,0.4-0.1,0.6-0.1       c1.8-0.6,3.5-0.1,5.2,0.3c6,0.3,12-0.4,17.9-0.7c3.8-0.2,8.1,0,12.1,0.9c0.6,0.1,1.2,0.5,1.1,1.4c0,0.3-0.4,0.4-0.3,0.7       c4.4-3.9,9.1-0.8,13.7-0.6c0.7,0.2,1.4,0.5,1.9,1.1c0.4,0.8,0.3,1.5-0.3,2.1c-6.6,0-13.3,0.1-19.9,0.1c-11.1,1.4-22-0.4-33-1       C1590.7,388.3,1585.2,388.8,1580,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3666E"),
                d:
                  "M1649,390c0-0.7,0-1.3,0-2c7.5-2,15-4,22.8-4.1c0.8,0,1.6,0.4,2.2,1.1c-1.8,1.8-1.2,3.4,0.9,3.9       c2,0.5,2.1,1.6,2.1,3.1C1667.7,390.7,1658.3,390.2,1649,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF5B66"),
                d:
                  "M1853,406.2c-0.5,2.4-2.1,0.5-3.1,0.8c-1.3,0.3-2.5-1.3-4.1,0.7c-1.4,1.7-4.2,0.1-4.7-2.7       c-0.3-1.7-1.4-0.7-2.1-1c-3.3,3.1-4.8,3-9.9-1.2c-1.1-0.9-1.8-1.9-3.5-1.6c-0.8,0.1-1.8,0-2.4-0.5c-7.8-6.1-15.8-1.6-23.7-0.6       c-5.8,0.8-11.2,2.9-16.8,4.1c-2.9-0.1-5.9,2.1-8.7-0.3c-0.3,0-0.7,0-1,0c-0.6-0.6-0.6-1.3-0.3-2c1.2-1.2,3-1.4,4.2-2.5       c0.6-0.4,1.2-0.6,1.9-0.8c2.8-1.1,4.3-3.9,7-5.2c4.1-2,8.1-3.1,12.6-2.7c1.5,0.1,2.9-0.1,4.2-1.1c0.7-0.3,1.3-0.3,2,0       c0.4,0.1,0.6,1,1.3,0.4c-0.8,0.3-1.1-0.3-1.4-0.8c-0.4-3.3,2.3-3.2,4.3-3.9c1,0,2,0.2,3,0.3c1.9,1.5,4.4,2,6.4,3.4       c0.6,0.4,1.3,0.7,1.9,1.1c7.6,3.4,14.9,7.4,22.7,10.5c1.8,1,3.7,2,5.7,2.7C1850.2,403.8,1851.8,404.6,1853,406.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E55861"),
                d:
                  "M1773,402c0,0.7,0,1.3,0,2c-2.4-0.4-4.8,0.8-7.2-1.1c-1.9-1.5-1,2.3-2.9,1.9       c-6.8-1.4-14.1-0.4-19.9-5.4c-1.4-1.2-2.9-1.5-4.6-1.5c-1,0-2.5,0.3-2.7-0.7c-1.2-4.9-5.1-2.9-8.1-3.3c-4.7-0.6-9.5-0.6-14.1-1       c-4.5-0.5-8.8-3.1-13.5-2c0.4-0.4,0.5-0.8,0.5-1.3c0.1-1.9-1.6-4.5,0.5-5.5c2.1-1,5,0,6.7,1.5c3.1,2.7,6,3,9.5,1.2       c1.2-0.7,2.6-0.6,3.8-0.1c6.2,2.6,12.8,2.6,19.4,2.6c0.5,0.1,0.9,0.3,1.3,0.6c2,1.5,3.3,2.9,6.7,2.3c3-0.5,7.2,0.6,10,3.4       c1.1,1.2,2.4,2.4,3.8,1.3c5.3-4.2,10.4,1.2,15.7,0.1c1-0.2,2.2,1.4,1.1,3c-0.7,0-1.3,0-2,0C1776,401.4,1774,400.6,1773,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2545D"),
                d:
                  "M1741,390c-6.6,1.6-13,0.5-19.2-1.7c-1.8-0.6-3.2-1.5-4.9,0.2c-1.9,1.8-4.5,1.9-6.4,0.5       c-2.8-2-6.1-2.6-9-4.3c-1.3,1.8,0.7,4.5-1.4,6.3c-0.2-1.5-0.6-4.4-2.4-2.1c-2.1,2.6-2.9,0.6-3.4-0.4c-2.2-4.5-5.5-5.8-10.2-4.5       c-0.9,0.3-2,0-3,0c-0.3-0.5-0.3-1,0.1-1.5c1.2-1.2,2.8-1.7,4.5-1.7c7.7-0.3,15.2-2.1,22.8-2.9c0.5,0,1,0.3,1.5,0.3       c2.6-0.1-0.2,3.4,2,3.1c2.2-0.3,4.3-0.5,6.1,1c1,0.8,1.5,0,2-0.6c0.8-0.8,1.9-1.2,2.7-0.4c4.7,4.5,10.7,3.4,16.3,3.8       C1742.6,385.2,1743.1,386.4,1741,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF545F"),
                d:
                  "M1681,383c0,0.3,0,0.7,0,1c-2.3,0.3-4.7,0.7-7,1c-8.5-0.5-16.5,3.7-25,3c-0.7,0-1.3,0-2,0       c-0.4-2.3,2.9-2,2.9-4.2c-1.8-1.2-4.3,0-6-1.6c-0.6-1.9-0.1-3.5,1.7-4.6c0.5-0.1,1-0.1,1.5,0c2.2,1.3,4.6,1.2,7,1.2       c3,0.2,6,0.1,9-0.1c4.5,1.7,9.1,2.7,13.8,3.2C1678.3,382,1679.9,381.7,1681,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7565F"),
                d:
                  "M1774,404c3-0.3,6-0.7,9-1c-0.5,3-0.6,6.4-5.1,5.1c3.9,0.1,6.4,4.7,11.3,3.8c1.4-0.3,2,2.2,0.2,3.6       c-2.3,0.1-4.5,0.2-6.4-1.5c-6.7-1.3-13.3-2.7-20-4c1.3-3,4.3-3.1,6.9-3.9C1771.5,405.7,1773.2,405.9,1774,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE626C"),
                d:
                  "M1783,414c2.3,0.6,4.6,1.3,7,1c0.3,0.2,0.3,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.2,0.3c0,0,0,0,0,0       C1787.6,415.6,1784.6,417.1,1783,414z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8515A"),
                d:
                  "M920,122c-3.7,0-7.3,0-11,0c-7.3-0.4-14.7,0.8-22,0l0,0c-9,0-17.9,0.4-26.9,0.7       c-9.9,0.3-19.8,1-29.6-0.1c-1.4-1.2-0.3-1.9,0.6-2.6c5.5-3.8,12.1-3,18.1-3.4c9.6-0.5,19.4,0.4,29.1-0.1c5.9-0.3,11.9-0.2,18,1       c4.3,0.9,9.1-0.2,13.7-0.3c9.6-0.3,19.1-1.5,28.7-0.3c1.9,0.2,3.9-0.7,5.8-0.8c1.9-0.1,3.7-0.5,5,2c1.5,2.9,5.3,1.2,7.6,2.9       c2.3,0.6,3.2,1.7,0.4,2.8c-2.3,1-4.9,0.4-7.3,0.1c-3.4-0.5-6.8-1.2-10.2,0.1c-1.7,0-3.3,0-5,0c-1.2-1.1-2.7-1-4.2-1       C927.2,122.9,923.5,123.5,920,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D95762"),
                d:
                  "M940,124c-0.9-2.3,0.7-1.8,2-2c4.8-0.6,9.5,1.2,14.3,1.1c2.9-0.1,1.4-1.1,0.7-2.1c0-0.3,0-0.7,0-1       c2.2,0.7,5.2-1.6,6.6,2.8c0.6,1.9,5.5,1.8,8.3,0.9c2.8-0.9,5.1-0.5,7.4,1c3,1.9,6.4,1.1,9.6,1.3c1.3,0,2.7,0,4,0       c0.8-0.6,1.8-1.2,2.7-1c8.3,2.1,17.3,1.3,25.3,5c1.3,2.5,4,1.8,5.6,1.5c4.3-0.8,8.1-0.1,11.9,1.8c6.6,3.3,14.2,3.1,20.8,6.6       c1,0.5,1.6,1,1.7,2.1c-0.6,0.6-1.3,0.9-2.1,0.8c-10.9-2.9-22.1-4.9-33.1-7.8c-2,0.1-4-0.1-6-0.5c-1.1-1.7-2.9-0.9-4.3-1.1       c-4.1-0.6-8.2-2.2-12.5-1.4c-1.3,0-2.7,0-4,0c-0.1-0.3-0.1-0.6-0.2-0.9c-0.2,0.6,0-0.9,0.4-0.3c0.4,0.5,1.1-0.1,0.4-0.2       c-1.4-0.2-2.9,0-4.4-0.2c-4.1-1.4-8.4-0.9-12.5-1.8c-13.9-1.9-27.9-2.2-41.8-3.5C940.7,124.7,940.3,124.3,940,124z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6525B"),
                d:
                  "M831,120c-0.3,0.7-0.7,1.3-1,2c-1.2,1.4-3,1.6-4.6,1.6c-10.2-0.1-20.3,3.2-30.5,0.5       c-1.3-0.4-2.6,0.3-3.9,0.5c-7.3,1.2-14.6,1.6-21.9,2.4c-2.9,0.4-5.2-0.8-6.8-3.2c-0.1-0.2-0.2-0.5-0.3-0.7       c3.2-1.3,7.6,1.1,9.9-3.2c0.1-0.2,0.9-0.2,0.9-0.1c1.5,5.1,3.8,0.9,5.9,0.8c2.7-0.2,5.4,0.9,8.2,1.3c0.6,0.1,1.6-0.2,1.7-0.5       c1.3-4.8,5.9-2.9,7.7-2.4c6.2,1.6,12,2.2,18-0.6c0.8-0.4,2-0.1,2.9,0c3.2,0.4,6.3,3.1,9.8,0.3C827.6,118.1,829.7,119.5,831,120       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6525B"),
                d:
                  "M717,126c5,0,9.9,0,14.9,0.2c1.2,0,2.2,0.3,3.1-0.9c0.5-0.6,1.5-1.4,1.9-1.2c3.9,1.6,7.8,1.6,11.8,0.6       c0.3-0.1,1.3,1.2,1.6,0.6c3-5.7,7.7-2.6,11.8-2.3c0,0,0,0,0,0c1.1,2.8-0.8,3.6-2.8,4.1c-2.7,0.6-5.4,2.1-8.2,1.9       c-9.1-0.4-18,2.2-27.1,2.2c-1.2,0-2.3-0.1-3.4,0.5c-6,3.3-12.4,2.1-18.7,1.4c-1.3-4.3-0.6-5.6,3.3-5.2       c3.9,0.3,7.4-1.4,11.2-1.8C716.5,126,716.8,126,717,126z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD4A50"),
                d:
                  "M701,122c3.5-0.8,7.2-0.1,10.8-1.8c1.3-0.6,4.4-1.5,5.2,1.8c0,1.3,0,2.7,0,4c0,0,0,0,0,0       c-4.5,1.5-9.2,0.8-13.7,0.8C700.1,126.7,699.4,124.7,701,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4852"),
                d:
                  "M727,122c0.8-0.3,2.5-0.5,0.9-1.6c-1-0.7-2.8-0.5-4.2-1.2c6-2.4,12.3,0.3,18.2-1.2       c-0.1,1,0.2,2.4-0.9,2.6C736.5,121.8,732,124.1,727,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4A54"),
                d:
                  "M472,185c-0.2-1.6-0.7-3-2-4c0,0,0,0,0,0c2.5-3.6,6.6-4.7,10.4-6.2c3.2-1.3,6.6-2.1,8.3-5.7       c0.7-1.6,2.5-1.8,4.3-2c3.4-0.5,6.7-1.4,10.1-2c0,0,0,0,0,0c8.4-2.3,17.2-3,25.2-6.7c1-0.5,2.3-0.2,3.4-0.3       c2.3-0.2,4.4,0.5,6-2.8c0.7-1.6,5.5-1.7,8.4-1.8c1.6-0.1,2.8-0.1,3.9-1.2c2.2-2,5.1-2,7.7-1.8c8.5,0.8,14.4-6.7,22.6-6.9       c1.7,0,3.2,0.3,4.8,0.4c1.7,0,1.3-1,1-2c0.7,0,1.3,0,2,0c2.2-2.7,5.6-0.1,8-2c4.3,0.1,8.6-1.7,13-0.1c0.9,0.4,2.9,0.1,3.2-0.4       c2.1-4,5.6-2.4,8.7-2.5c0.6,2.1,2.7,2.7,3.9,4.3c0.3,0.4,0.5,0.8,0.6,1.3c0,0.5-0.1,1-0.2,1.4c-0.3,0.4-0.7,0.6-1.2,0.8       c-3.5,1-6.2-1.6-9.6-1.7c-8.2-0.1-16,2.2-23.9,3.6c-0.9,0.2-1.7,0.6-2,1.4c-1.4,4.7-5,5.7-9.2,5.6c-1.8,0-2.5,1.4-3.3,2.6       c-0.6,0.4-1.3,0.5-2,0.5c-5.2-0.3-10.4-0.7-15.6,0.3c-2.6,0.5-0.6,1.8-1,2.6c-0.2,0.5-0.5,0.8-0.9,1.1       c-4.5,0.3-8.8,2.1-13.6,1.1c-3.7-0.8-7.3,1.9-10,4.6c-1.5,1.4-2.8,1.6-4.8,1.7c-5.9,0.4-12.4-1.7-17.4,3.5       c-0.5-0.1,0.5,0.8,0.2,0.2c2.9-0.5,2.8,1.3,2.5,3.2c-1.8,2.7-4.6,2.2-7.2,2.3c-3.3,0.1-6.7-0.7-9,2.8c-0.5,0.8-1.9,1.1-2.8,0.8       c-7.4-3-13.4,1.4-19.7,3.7C473.9,184.9,473,185.4,472,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44D57"),
                d:
                  "M625,144c0-0.7,0-1.3,0-2c0.2-0.2,0.3-0.3,0.3-0.3c0.1-0.1,0,0-0.3,0.3c-1.5-1.5-5.7-0.9-4-5       c0,0,0,0,0,0c1.8-0.3,3.6-0.2,5.4,0.3c5.1,1.3,9.6,0.5,14.7-1.8c4.5-2.1,9.5-4.6,15.1-3.7c2.1,0.3,4.4-0.2,6.3-1.1       c5.9-2.6,12.5-1.6,18.5-3.5c0.9-0.3,2.1-0.5,3-0.2c6.5,2.5,10.9-0.9,15.1-5c0.7,0,1.3,0,2,0c0,2.9,0,4.1,4.2,3.4       c3.5-0.6,7.8,0.6,11.8,0.6c-2.9,3.5-8.1,4-10.9,3.2c-4-1.1-3.9,1.1-5.1,2.8c0.8,0.8,0.9,1.8,0.3,2.8c-0.4,0.4-0.8,0.5-1.3,0.3       c-3.1-2.4-6.2-2.5-9.7-0.7c-3.7,2-7.8,2.6-12.1,2.5c-3.1,0-6.3-0.1-9,2.1c-1.2,1-2.9,1.3-4-0.2c-0.4-0.6-0.3-1-0.9-0.3       c-3.4,3.4-7.7,2.5-11.8,2.8c-6.6,0.5-13.1,1.7-19.5,3.3C630.3,145.3,627.5,146.1,625,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4A54"),
                d:
                  "M699,122c-1,3.2-4,4.7-6.1,7c-1.1,1.2-2.4,1.2-3.6,0.4c-3.9-2.6-7.7-0.9-11.7-0.3       c-7,1-13.9,3.6-20.7,4.2c-7.6,0.7-14.3,2.1-20.6,6.1c-1.5,1-3.2,0.2-4.8-0.1c-3.6-0.7-7.2-0.9-10.6-2.4c1.6-4,5.3-1.8,7.9-2.3       c4.6-0.8,9.5-0.2,13.2-3.8c1-1,2.3-0.6,3.3-0.5c6.7,0.4,12.8-1.9,19-3.9c2.6-0.8,5.6-0.5,8.4-0.5c6.7,0,13.3-0.6,19.5-3.2       C694.4,121.8,696.7,122,699,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74551"),
                d:
                  "M596,140c-1.9,3.7-5.7-0.2-8,2C590,138.6,593.3,140.5,596,140z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D74853"),
                d:
                  "M1546,292c5,0,10,0,15,0c0.2,1.4,1,2.1,2.4,1.9c8.7-1.1,17,2.1,25.6,2c-0.3,3.4-3.2,3.3-5.2,3.1       c-5-0.5-10.5,1.5-15.1-2.7c-1.2-1.1-3.9,0.2-5.1,1.1c-5.7,4.2-12.5,3.4-18.8,4.7c-7.8,1.7-16.1-0.1-23.7,3.1       c-2.2,0.3-4.2-0.6-6.3-1.2c-2.1-0.3-4.1-0.7-5.9-2c0-0.7,0-1.4,0-2.1c2.2,0.2,3.8,0.9,6.5-0.5c4.1-2.1,9.6-2.8,14.4,0.2       c1.1,0.7,2.7,0.9,1.8-1.5c2.6-0.3,2.9-6.7,7.4-2.7C1539.6,295.8,1544.3,294.5,1546,292z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E75564"),
                d:
                  "M1492,288c0.7,1.1,1.9,0.9,3,1c0.8,0.1,2.2-0.4,2.2,1c0,1.2-0.9,1.9-2.2,2c-2.1,0.5-3.5-1.1-4.5-2.4       C1488.4,287.1,1491.4,288.5,1492,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83C49"),
                d:
                  "M1514.9,304.1c2.4,0,4.8-0.1,7.1-0.1c9.2-1,18.5-1.2,27.8-1.4c26,0.1,52-0.2,78-0.1       c12.2,1.5,24.5,1.9,36.8,2.2c2,0.1,3.9,0.7,5.8,1c4,1.4,8.2,0.8,12.4,1c0.9,0,1.7,0.2,2.5,0.4c6.8,1.9,13.8,1.5,20.7,1.6       c1.8,0,3.7-0.2,5.4,0.5c0.7,0.3,1.7,0.5,1.3,1.7c-0.3,0.9-1.5,0.2-2,1.2c1.8-0.7,3.6-1.7,5.3-1.1c6,2,12.2,0.7,18.2,1.8       c1.3,0.2,3.1,0.2,3.4,1.5c0.5,1.9-1.6,2.1-2.9,2.8c-5.6,0.6-11.2-1.1-16.8-0.7c-3.8-1-7.8-0.5-11.6-1.2       c-12.8-0.7-25.5-2.5-38.2-3.4c-16.6-1.2-33.2-2-49.8-2.7c-17.5-0.7-35-0.2-52.4-0.4c-9.2,0.1-18.4-0.2-27.6,0       c-3.9,0.2-7.9,0-11.8-0.1c-3.5-0.3-7.2-0.1-9.7-3.2C1516.2,304.8,1515.5,304.5,1514.9,304.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4953"),
                d:
                  "M1497.1,299.8c3,1.4,5.9,2.7,8.9,4.1c-0.4,2.8-2.6,2.4-4.5,2.6c-6.6,0.5-13.2,1.2-19.8,0.4       c-1.5-0.2-2.9,0.4-4.4,0.8c-0.5,0.2-1,0.3-1.5,0.3c-2.6,0.1-5.1-1.1-7.7-0.7c-1.4,0.1-2.7,0.4-4.1,0.2       c-5.5-0.8-11,0.3-16.4,0.9c-13.7,1.3-27.5,1.3-41.2,2.7c-7.6,0.8-15.3-0.3-22.9,1c-1.3,0.2-2.6-0.4-3.5-1.5       c-1-1.9-0.1-2.7,1.7-3.2c2.1-0.6,4.3-0.8,6.4-0.8c13.6-0.3,27.2-1.1,40.7-2.2c5.2-0.4,10.5,0,15.7-1.2       c9.4-0.1,18.7-0.5,28.1-1.8c6.3-0.9,12.9-0.1,19.3-0.7C1493.6,300.6,1495.4,300.3,1497.1,299.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD505B"),
                d:
                  "M1497.1,299.8c-2,4.2-5.9,2.1-8.8,2.2c-12,0.4-24,1.4-36,2.8c-2.6,0.3-4.9-1-7.4-0.8       c-1.7,0.8-3.4,0.6-5.1,0.1c-0.1-1.3,0.8-2,1.7-2c5.3-0.2,10.1-3,15.5-2.5c6,0.6,11.3-2,16.9-3.6c0.3-0.3,0.7-0.7,1-1       c1.5-0.5,2.6,0.9,4,1c1-1.4,2-1.3,3,0c3.7,2.4,8.1,0.6,11.9,2.2C1495.2,298.3,1496.3,298.9,1497.1,299.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841822"),
                d:
                  "M1516.9,305.2c3,0.6,6.1,1.2,9.1,1.9c0.8,0.9,2.8-0.1,2.8,1.3c0,2-2.1,2-3.4,1.9       c-9.2-0.3-18.4,1.4-27.6,1.1c-2.6-0.1-4.4,0.6-5.6,3c-2.6,1.4-4.9,1-7.1-0.8c-1.9,0.4,2.2-2-0.9-1.6c-5,0.6-10,2.3-15.2,1       c-1.3-0.5-2.8-0.7-3.2-2.4c1.3-2.1,3.4-1.7,5.4-1.8c3-0.2,6,0.3,8.9-0.7c10.5-0.1,21-2.1,31.6-1c1.2,0.1,2.3,0.1,3.2-0.8       C1515.5,305.8,1516.2,305.5,1516.9,305.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73C4A"),
                d:
                  "M1514.9,306.1c1,1.9-0.2,1.9-1.5,1.8c-11.1-0.6-22.1,1.5-33.2,1.1c-3.4,1.1-6.7,0.2-10.1-0.2       c-1.6-0.2-3-0.7-2-2.8c2.8-0.6,5.3,0.9,8,1c1.4,1,3,0.2,3.8,0.4c1.4-0.1,0.4-1,0.7-0.4c0.1,0.2,0,0.4-0.3,0.4       c-1.1,0-2.2,0.4-3.2-0.4c1.8-1.4,3.6-1.4,5.9-1.3c7.8,0.6,15.5,0.6,23.1-1.7C1509.2,303.9,1511.6,306.5,1514.9,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1493.9,298.2c-4.1-0.3-8.7,2.8-11.9-2.2c1.7,0.1,3.2-0.1,3.9-1.9       C1488.6,295.5,1491.3,296.8,1493.9,298.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15B64"),
                d:
                  "M1458,301c-6.2-0.3-12,2.2-18,3c-10.5-1-20.7,1.7-31.2,1.5c-10.4-0.2-20.7,0.6-30.9,3       c-2.3,0.5-3.8-0.7-4.9-2.5c-0.1-0.7-1.1-1.3,0-2c5.1,0.7,9.8-1.9,14.8-2c8-0.1,16-0.6,23.9,0.1c6,0.6,11-3.3,16.9-2.3       c2.2,0.4,1-3.6,3.4-3.8c7,0,14,0,21,0c1,0,2,0,3,0C1456.6,297.7,1458.2,299,1458,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1458,301c-1.2-1.4-3.4-2.5-2-5c6,0,12,0,18,0C1469.4,299.9,1463.9,301.2,1458,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE575F"),
                d:
                  "M1479,296c-1.7,1.3-2.7-0.4-4-1c-0.3-1-1.7-2.2-0.5-3.1c1-0.8,2.1,0.4,3,1.1       C1478.4,293.8,1479,294.7,1479,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34652"),
                d:
                  "M503,165c-3.6,1.6-7.1,3.8-11.4,3.2c-0.9-0.1-1.9,0.3-2.1,1.1c-1.5,7.8-9.7,5.2-13.9,8.9       c-1.4,1.3-3.2,3.1-5.7,2.8c-2.5-2.7-2.9-4,1.7-5.4c6.9-2.1,13.7-5.4,19.3-9.9c3.2-2.5,7.3,0.9,9.6-2.8       C501.2,163.8,501.5,165.1,503,165z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C2D34"),
                d:
                  "M121,550c0.4,4-1.1,4.5-4,2c-3.2-6.1-7.7-11.4-10.1-17.9c2.4,1.1,4.7,0.1,7.1-0.1       c7,2,14.5,1.8,21.2,5.3c-0.3,1.3-3.6,1-1.7,3.6c0.5,0.7-1,1.4-2.1,1.2c-1.5-0.3-2.8-1.1-4.1-1.7c-2.2-1-3.5-0.6-3.7,2.1       C123.4,546.6,123.4,548.9,121,550z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1924"),
                d:
                  "M111,478c4.4,0.8,8.4,3.2,13,3c0,0,0,0,0,0c1.9,2.4-2,5.6,1.2,7.8c0.2,0.5,0.1,0.9-0.2,1.2c0,0,0,0,0,0       c-6.3-1-12.6-2.1-18.8-3.1c-1.1-0.2-1.7-0.9-2.2-1.9C103.9,478,103.9,478,111,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E1F27"),
                d:
                  "M135,540c-4.1-2.5-8.9-1.5-13.3-2.8c-2.7-0.8-5.2-1.8-7.7-3.2c-2.3-2.1-0.9-4.6-1-7       c10.8,2,21.5,3.9,32.3,5.8c0.5,0.1,1.1-0.5,1.7-0.8c1,0.4,1.6,1,2,2c0,3.1-0.3,6-4,7C141.4,543.2,138.2,541.9,135,540z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66212A"),
                d: "M105,522c1.7,1,3,2.3,4,4C106.6,525.7,105.3,524.4,105,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851933"),
                d:
                  "M284,383c0.2-2.1,1.4-1.3,2.4-0.8c1.7,0.8,3.8,1.6,5,0.1c1.6-1.9-1.4-2.9-1.8-4.6       c5.2,0.9,6.3-0.4,6.3-7.7c8.1-1.9,16.2-4,24.5-7c-1.2,3.8-6.3,3.4-6.4,7.4c0.1,1.1-0.5,1.8-1.2,2.4c-6.6,4.2-12.3,9.5-18,14.8       c-3.9,0.6-7.4-0.2-9.9-3.5C284.7,383.7,284.3,383.4,284,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F171F"),
                d:
                  "M285,384.1c3.2,1.3,6.4,2.9,9.9,3c5.4-1,11.1-0.1,16.3-2.7c5.7-2.7,10.7-6.3,14.7-11.3       c1.2-1.5,2.2-3.9,4.9-3.4c0.4,0.3,0.7,0.7,0.8,1.2c-0.1,4.8-4.6,6.5-7,9.7c-1.6,1.5-3.1,3.2-4.9,4.4c-3.6,2.2-7.3,4.4-11.5,5.5       c-1.7,0.4-3.5,1.1-5.2-0.2c-6.3-0.3-12.8,0.5-18.1-4.1C285,385.4,285,384.7,285,384.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F1423"),
                d:
                  "M280,372c0.5,0,1,0,1.5,0.1c1.1,0.3,0.3,0.7,0.1,1.3c-0.5,1.9-2.3,2.6-3.6,3.6c-0.7-1-1.3-2-2-3       C277.3,373.3,278.7,372.7,280,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE505A"),
                d:
                  "M1129,160c1.5,3.7,5.3,3.5,8.1,4.9c4,2,8,2.7,12.5,1.2c2-0.7,3.6,1.6,5,2.7c2,1.6,3.9,2.3,6.3,2.2       c-0.7,1.4-2.5,0.6-3.5,1.6c0.9,4.3,5.1-0.3,6.7,2.4c0.1,2.3-4.7-0.8-3.2,2.9c0.6,0.6,0.6,1.3,0.2,2c-4.2-0.1-7.3-3.1-11.2-4.2       c-5.5-1.5-10.3-5.1-16.1-5.8c-0.3,0-0.6,0-0.9-0.1c-3.8-3.5-8.3-5.5-13.1-6.9c-1.8-0.5-4.1-0.1-3.9-3c3.1,0.3,5.8,0,6-4       c1.3,0,2.7,0,4,0C1127.4,157,1128.4,158.3,1129,160L1129,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75964"),
                d:
                  "M1059,142c0.7,0,1.3,0,2,0c2.7-1.3,4.8-1.3,7.1,1.4c1.2,1.4,4.5,2.1,6.5,2.2c4.8,0.2,9.3,1.7,13.9,2.2       c4.1,0.5,6.4,2.2,7.4,6.1c-0.2,0.5-0.5,0.8-1,0.9c-8.2-1.7-15.5-6.3-23.9-6.9c-0.7-0.6-1.4-1.2-2.2-1.7       C1066,144.1,1061.6,145,1059,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5A68"),
                d:
                  "M1095,154.9c0.3-0.3,0.7-0.6,1-0.9c6.5-1.8,11,2.9,16.3,5c1.2,0.5,2.3,1.1,3.7,1.1       c0.4,0.5,0.9,1.5,1.2,1.4c5.6-1,8.8,4.7,13.9,5c3,0.2,1.5,2.3,1.9,3.5c-9.1-3.7-18.1-7.3-27.2-11c-1.2-0.5-2.5-0.7-3.8-1       C1100.4,155.3,1097,156.7,1095,154.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8515A"),
                d:
                  "M1021,130c-8.1-1.4-16.3-1.3-24.2-4c-1.1-0.4-2.5,0-3.8,0c2.5-3.6,6.5-2.3,9.6-2       c4.9,0.6,9.5,2.7,14.7,2.1C1019.4,125.9,1020.7,127.7,1021,130z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E84A58"),
                d:
                  "M1120,155c-1.9,1.2-3.1,1.1-5.2-0.1C1117,153.8,1118.3,153.7,1120,155z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23A46"),
                d:
                  "M637,623.6c-0.9,0.3-1.6,0.1-2.1-0.6c-9.5-3.8-17.6-9.7-24.7-17.1c-1.1-1.3-2.1-2.6-3.2-4       c-0.8-0.9-0.7-2.5-2.1-2.9c-0.3-0.4-0.6-0.7-0.9-1.1c0.3-0.7,0.7-1.4,1-2c2.2-1.6,3.7-0.2,5.1,1.2c1.5,1.4,2.7,3.4,5,3.7       c0.6,0.3-0.1,0,0.5,0.1c2.8,0.4,1.5,4.2,2.9,4.3c3.1,0.3,3.1,1.8,3.2,4.2c0.2,2.4,3.5,0.8,4.6,2.5c1,3.1,2.8,4.8,6.3,5       c3,0.1,5.2,1.9,5.1,5.4C637.7,622.8,637.4,623.3,637,623.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03540"),
                d:
                  "M604.9,599.1c5.2-2.4,0.9,2.3,2.1,2.9C605.8,601.4,605.1,600.4,604.9,599.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741523"),
                d:
                  "M551,486c7.7-1,15.3-2,23-3c2,1.9,2.7,3.9,0.2,6c1.6-1.4,3.3-1.3,5-0.8c0.4,0.2,0.8,0.5,1,0.9       c0.5,7.9-2.3,9.9-13.3,8.6c3.6,2.4,11.1,1.4,6.5,8.6c-4.5,0.5-6,3.2-5.2,7.4c-0.2,0.4-0.4,0.8-0.9,1c-2.3,0.7-4.1-0.2-4.8-2.3       c-1.6-4.8-6.1-6.6-9.6-9.4c0,0,0,0,0,0c-0.7-4.4-0.9-9-3.3-13.3c-1.9,1.8,1,2.5-0.4,3.7c-0.8,0.6-1.6,0-1.9-0.7       c-1.1-3-3.2-3.9-6-2.9c-2.5,0.9-1-1.1-1.4-1.7C543.6,486.7,547.6,488.3,551,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M553,503c1.7-0.1,4-1.9,4.2,1.7c0.1,1.2,1.4,1.2,2.3,1.5c1.8,0.7,3.3,1.1,3.3,3.9       c0,2.6,2.1,4.4,5.2,3.8c1.2,5.4,2.9,10.6,5.8,15.4c1.1,1.8,1,4.5-0.8,6.5c-0.7-1-1.3-2-2-3c-3.3-8-7.8-15.2-13-22       C557.5,507.6,553.7,506.3,553,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M573,536c0.1-3.8,0.3-7.4-2.7-10.5c-3.2-3.2-2.2-7.5-2.3-11.5c4.7-0.8,3.9-5,5-8       c1.1-1.6-0.6-3.5,0.8-5.3c-2.2,3.7-5.3-4.7-6.7,2c-1.1-2.7,2.1-5-3.2-5.9c6.2-0.5,10.6,2,14.7-2c2.2-2.1-1.2-4.5,1.4-5.7       c3.3-3.5,7.9-2.7,11.4-1.8c3.4,0.8,6,0.5,9.1-0.3c1.8-0.5,3.5,0.6,4.8,1.9c1.1,3.7-0.9,7.4,0.3,11.3c0.6,1.9-0.9,2-2.8,1.1       c-1.3-0.6-2.3-5-4.8-1.2c-0.2,0.3-0.5,0.5-0.7,0.7c0.5,0.1,0.7-0.3,0.9-0.6c1.9-2.7,2.6,0.3,3.8,0.9c1.3,0.6,2,1.9,1.3,3.3       c-0.8,1.6-2.3,0.9-3.6,0.8c-1.8-0.1-3.7-0.3-5.5-0.3c-1.9,0-3.5,0.8-3.8,2.7c-0.8,5-3.8,5.1-7.3,3.4c1.6,1.6,4.2,1.5,5.8,2.5       c2.2,1.4,1.3,4.9,1.2,7.5c-0.1,2.6-2.8,0.6-3.9,1.9c7-0.6,13.8-2.3,20.8-0.6c1.6,0.4,3.1-1,4.8-1.2c6.4-0.8,12-0.1,12.7,9.2       c-1.7,2.1-7.5,4.1-9.4,3.1c-0.9-0.5-1.7-1.2-1.1-2.3c0.3-0.6,1.2-0.2,1.7-0.6c-0.5,0.2-1,0.1-1.5,0.3c-1.1,0.4-2.2,2-2.2,2.4       c-0.2,1.8-2.2-2.7-1.4,0.4c0.6,2.3,0.5,4.6,0.1,6.9c-0.2,1-0.7,2-1.9,2c-1.5,0-1.8-1.2-1.9-2.4c-0.1-1.2,0.3-2.3,0.4-3.5       c0.2-2.6-0.2-4.9-2.5-6.4c0.4,0.5-0.1-0.5-0.5,0c-3.8,5.4-3.8,5.4-5.6,5.3c2.7,1,7.6-2,7.3,4c-0.2,3.4-2.6,3.3-4.9,2.1       c-2.1,2.4,2,6-2,7.6c-2.5,0.8-4.8,1.1-6.4-1.5c0.3-4.2-2.4,0.4-3.1-1.1c-0.5,0-0.9-0.2-1.3-0.5c-0.9-1.9-2.4-3.4-3.8-4.8       c-1.2-1.2-2.5-2.6-4.3,0c-2.5,3.6-4.2-0.8-6.4-1.1c0-0.3-0.1-0.6-0.2-1C573.7,538,573.3,537,573,536z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A5313C"),
                d:
                  "M595,576c-3.2,1.3-0.5-1.2-1.1-1.8c-1.4-1.3-2.6-2.8-3.9-4.2c-3.1-2.7-3.2-7.2-6-10       c1.4-1.4,3.5-1.4,4.5-0.2c4.4,4.8,10.2,4.2,15.7,4.6c4.4,0.4,8.9,0.5,13.4,0.5c3.3,0,6.1-2.2,9-3.7c9.9,0.1,19.6-2.9,29.6-1.6       c4.3,0,8.5,0.7,12.5,2.1c1.9,0.4-2.2,2.6,0.8,2.7c1.1,0.7,3,0.8,2.4,2.9c-2.1,1.3-4.1,2.8-6.8,2.5c-8.6-1.7-17.3-3.1-26.1-2.7       c-1,0-2.1,0-2.7,1c-2.2,3.4-5.5,3.3-8.9,3.2c-6-0.2-12-0.8-17.9,0.5c-1.2,0.2-2.3-0.2-3.5-0.2c-0.3,0-2.2-3.2-1.5,0.5       c0.3,1.5-0.4,2.6-2.2,2.5c-0.7-0.2-1.1-0.7-1.5-1.2c-3.2-3.2-3.5-3.2-4.9,1.1C595.8,575,595.5,575.6,595,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12C38"),
                d:
                  "M626,562c-0.7,3.9-5.2,3.7-6.9,3.8c-5.8,0.3-11.8,1.1-17.5-1.1c-0.4-0.2-1.1-0.3-1.3-0.1       c-4.5,4.2-7.2-0.4-10-2.4c-2.1-1.5-3.9-2.2-6.3-2.2c-3.9-3.1-5.3-7.4-6-12c0.2-0.1,0.4-0.1,0.7-0.2c2.5,0.5,2.4,3.3,4.2,4.6       c9.8,7,20.1,11.4,32.6,9.1C618.8,560.9,622.6,559.5,626,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821728"),
                d:
                  "M574.1,540c2.8,0.8,5.4,2.9,7.2-2.2c1-2.9,2.4,3.3,4.9,1.6c-0.8,2.9,3.7,3.6,2.8,6.6       c0,2.8-0.4,4.6-3.7,2.3c-2-1.4-3.7-3.7-6.6-3c-0.4,0.2-0.9,0.2-1.3,0.2c-0.8-0.2-1-0.9-1.3-1.4       C575.4,542.6,575.4,541,574.1,540z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12C38"),
                d:
                  "M576,544c0.3,0.3,0.7,0.7,1,1c0.8,0.9,1.7,1.7,1,3c0,0,0,0,0,0c-0.9,0.3-1,1.8-2.6,1.5       C575.6,547.7,575.8,545.8,576,544z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03540"),
                d:
                  "M595,576c0.1-2.4-1-5.7,2.7-6.2c2.7-0.4,4.1,1.6,4.3,4.2c1.2,1.2,2.2,2.3,3.1-0.3       c1.1-3.3,2.8-2.8,4.4-0.3c2.3,3.8,5.7,4.5,9,1.8c0.8-0.6,1.3-1.6,2.5-1.1c5.9,2.7,11.2,1.4,16.1-2.4c1.1-0.8,2.5-1.1,3.8-0.9       c6.8,0.6,13.4-1.8,20.2-0.9c1.4,0.2,2.4-1.8,4-0.9c2.6,0.3,4.2-3,7-2c4.8,0.7,8.6,2.9,11.1,7.1c-3.8,1.6-7.5,3.7-11.8,2.7       c-2.2-0.5-5,1.2-5.2,1.7c-1.7,3.3-4.2,2.1-6.5,1.6c-3.1-0.7-6.1-0.6-9.3-0.3c-2.5,0.2-4.4,0-6,2.2c-0.2,0.4-1.1,0.6-1.4,0.3       c-3.5-3.5-6.6,0.5-9.9,0.7c-3.2,0.2-5.7,2.4-6.1,6.2c-0.2,2.2-0.9,4.7-3.9,2.1c-0.5-0.7-0.2-1.5-0.3-2.3       c-0.1,0.8-0.3,1.6,0.3,2.3c-4.1,3.2-6.7-0.1-9.7-2.3c1.9,1.6-1.5,6.4,3.8,5.8c2.3,3.3-1.4,4.8-2.2,7.2       c-2.6,0.3-3.8-1.7-5.1-3.3c-1.3-1.7-2.6-2.9-4.9-2.7c0.3-4.3-3.2-6.8-5.4-9.3c-1.8-2-3.3-3.1-2.7-5.9       C597.3,578.9,596.5,577.3,595,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D2C35"),
                d:
                  "M146,550c1.9,1.7,4.2,3.3,3.7,6.3c-0.1,0.8-0.1,1.3,0.7,1.5c1,0.2,2.2,0.1,2.4-1.1c0.5-3,1.6-2.5,3.5-1       c2.2,1.8,4.4,1.4,7.4,0.7c3.3-0.7,6.1-4.9,10.7-2.1c1.9,1.1,5.7-0.8,8.6-1.3c0.3,0.9,1.9,1.1,1.4,2.2c-0.5,1.2-1.7,0.7-2.4,0.3       c-2-1.1-2.8,0.6-4,1.5c-7.6,1.3-15.3,4-20.6,9c-2.9,2.7-5.2-0.1-7.4,2c-1.1,1.1,0.7-1.8-0.9-2.4c-1.8,2.8-5.2,3-8.1,4.4       c-2-0.7-5,1.6-6-2c0-4.3,0-8.7,0-13c1.9-1.3,2.5,0.6,3.6,1.6C139.1,552,142.3,550.7,146,550z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732932"),
                d:
                  "M146,550c-0.3,2.5-0.2,2.2-2.4,1.8c-2.4-0.5-2.9,2.3-3.7,3.5c-1.7,2.4-1.2,2.7-3.5,0.2       c-0.3-0.3-0.9-0.3-1.4-0.5c-1.8-3.2-4.9-1.4-7.1-1.2c-3.4,0.2-5.8-0.2-6.9-3.7c0.9-2,1.5-3.9,1.2-6.2c-0.4-3.5,1.8-4.7,5.1-2.9       c1.7,0.9,3.2,2.3,5.6,2.5c-0.5-2-1.1-4.1,2.2-3.3c3.3,0.3,6.7,0.7,10,1c3.7,2.1,8.3,0.9,12,3c0.3,0.2,0.4,0.4,0.3,0.7       c-0.1,0.2-0.2,0.3-0.3,0.3C153.3,546.6,148,544.7,146,550z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1E2B"),
                d:
                  "M1986,387.9c-1.5-0.8-2.9,0-4.3,0.2c-5.9,0.2-11.2-2.1-16.7-4c-0.6-0.6-0.7-1.2-0.3-1.9       c1.1-0.9,2.2-0.9,2.8-0.7c-0.6,0-1.9-0.3-2.9,0.8c-1.4,0.9-2.8,0.6-4.1-0.2c-3-1.1-5.6-3.2-9-3.5c-1.3-0.1-2.5-0.9-2.7-2.4       c2.5-1.7,5.4-2.6,7.5-5c0.5-0.6,1.7-0.8,1.3-1.7c-2.3-4.6,2.1-3.8,4-5.1c5,1.1,9.3,3.8,13.9,5.9c1.4,4,1.3,4.2-3.3,3.8       c-1.1-0.1-2.5-1-2.9,0.7c-0.3,1.1,1.1,1.4,1.9,1.9c1.6,1.1,3,3.3,3.5,5.4c0,0.2,0,0.2,0.9,0.3c2,0.2,4,0.2,5.8,0.9       C1982.5,385.2,1986.9,383.8,1986,387.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B292F"),
                d:
                  "M1949,376c3.5,2.8,8.4,2.4,12,5c-1.1,1.2-2.5,1.7-4.1,1.1l0.1,0c-2.7-2-6.2-1.8-9.2-2.4       c-5.9-1.2-11.1-4.2-16.8-5.7c-7.6-1.3-15.3-2.7-22.9-4c-0.3-0.3-0.6-0.7-1-1c-1.5-1-3.1-1.5-4.7-2.2c-1-0.4-2.2-1-0.9-2.4       c1.4-0.8,3-0.8,4.5-0.8c0.5,0,1.1,0,1.6,0.1c11,2.8,21.9,5.8,32.8,8.7C1943,374.1,1947.3,371.8,1949,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("865251"),
                d:
                  "M1908,369c0,0.3,0,0.7,0,1c-9.6,0.9-18.7-2.8-28.1-3.4c-13.3-0.8-26-5.3-39.4-5.9       c-5.1-0.2-10.3-0.6-15.4-0.8c1.7-3.8,5.6-1.3,8.2-2.9c9.1,0.1,18.1,1.6,27.1,2.9c14.1,2,28.2,4,42.1,7.2       C1904.4,367.5,1906.2,368.1,1908,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6972"),
                d:
                  "M1870.2,417.2c0.6-0.4,1.3-0.9,1.9-1.3c2-0.7,4-1.2,5.8,0.3c1,1.4,2.8,0.1,3.9,1       c1.3,1.6,3.1,2.3,5.1,2.5c0.8,0.8,1.8,1.3,2.8,1.9c5.7,3,11.7,5.2,17.7,7.2c1.2,0.4,2.4,1,2.8,2.4c-0.6,2.2-2.6,2.3-4.3,2.8       c-5.7-0.2-10.2-4-15.6-5.2c-0.4-0.2-0.8-0.5-1.2-0.8c-2.6-2.5-6.7-2.3-9.1-5.1C1877.5,419.7,1872.7,420.5,1870.2,417.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82272F"),
                d:
                  "M1924.1,433.9c1.6,0.1,3.2,0.1,4.7,0.2c10.7,1.9,21.2,4.8,31.9,6.9c3.7,1.4,8.5,1.1,10.2,5.9       c-2,2.2-4.3,2.1-6.7,0.8c-2-1.1-4.3-1.6-6.4-2.5c-2.7-1.3-5.2-1.1-7.8,0c-5.2,0.2-8.8-4.3-13.8-4.9c-2.1-0.2-4.1-1-6.3-1.3       c-3.1-1.9-7.7-1.5-9.2-5.9C1922.3,431.9,1923.1,433,1924.1,433.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F6F6"),
                d:
                  "M1961,442c-10.8-2.4-21.7-4.4-32.2-8c3.8-0.3,7.5,0.2,11.2,1.4c9.6,2.8,19.5,3.7,29.5,3.8       c8.3,0.1,16.6,1.5,24.4,4.8c-3.7,2.4-7.8,1.6-11.6,1c-5.1-0.9-10.1-1.7-15.2-2C1965.2,442,1963,443,1961,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B79595"),
                d:
                  "M1966.9,442.2c7.1-1.4,13.7,2.1,20.6,1.9c2.1-0.1,4.3,0,6.4,0c0.3,0.1,0.6,0.1,0.9,0       c3.5,0.5,6.7-2.6,10.4-0.9c-1.8,3.8-5.5,3.5-8.7,4.1c-5,0-10,0.1-14.9,0c-3.6-0.4-7-1.6-10.5-2.4       C1969.5,444.6,1967.4,444.4,1966.9,442.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C26262"),
                d:
                  "M1924.1,433.9c-1-0.3-2-0.5-3-0.8c-3.7,0.5-7.1-1-10.4-2.4c-1.2-0.5-2.1-1.7-3.6-0.9       c-6.5-1.6-12.2-5.1-18.2-7.8c1.3-0.8,2.6-0.7,3.9,0c8.2,2.7,16.5,5.3,24.6,8.2C1919.8,431.1,1922.8,431,1924.1,433.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("814243"),
                d:
                  "M1930.9,374c8.8,2.2,17.9,3.8,26,8.2c-2.7-0.6-5.5,0.4-8.1-1.2c-2.5-1.2-5.5-0.3-7.9-2.1       C1937,378.7,1934.3,375.6,1930.9,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("794041"),
                d:
                  "M1810,359.9c-0.3,0.1-0.6,0.2-1,0.3c-4.1,0.4-8.1,1-12.1,1.7l0,0c-2.9,1-5.8,1.3-8.9,1.5       c-0.8-0.4-1.4-1-1.3-2c0.7-1.5,2-2.3,3.5-2.4c7.1-0.9,14.1-3,21.4-2.2c1.1,0.3,2.7,0.6,2.2,1.9       C1813.3,360.3,1811.1,359,1810,359.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("957473"),
                d:
                  "M1810,359.9c0.6-0.8,1.5-0.9,2.4-1c0.4-0.1,0.9-0.2,0.4-0.7c-0.2-0.2-0.6-0.2-0.9-0.2       c-0.4-1.1,0.2-1.8,1-2.4c0.4-0.2,0.9-0.4,1.3-0.5c0.9-0.1,1.8,0,2.7,0.3c1.1,0.4,2.2,1.4,3.5,0.7c1.3-0.6,2.6-0.3,3.9,0       c0.4,0.1,0.9,0.2,1.3,0.3c1.8,0.6,3.7,0.3,5.5,0.6c0.7,0.2,1.4,0.5,1.8,1.2c-2.3,2.1-5.6-0.3-7.9,1.7       C1820,359.9,1815,359.9,1810,359.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F7F6F6"),
                d:
                  "M2005,443.1c-3.5-0.5-6.6,2.5-10.2,1c8.5-0.9,14.9-6.7,22.5-10c-1.6,2.1-4.6,2.9-5.2,5.9       c0.2,1.3-0.8,1.7-1.6,2.2C2008.7,442.7,2007.1,444.4,2005,443.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE6E6E"),
                d:
                  "M1842.9,401.1c-8.1-2.8-15.8-6.3-22.9-11.1c4.9,0.1,8.4,3.5,12.7,5.2c3.5,1.4,6.9,3.3,10.3,4.9       c0.3,0.2,0.4,0.4,0.3,0.6C1843.1,401,1843,401.1,1842.9,401.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7D0CF"),
                d:
                  "M1788,362.9c3-0.3,6-0.7,9-1c-2.2,2.3-5.5,2.1-8.2,2.9c-3.4,1-5.2,2.6-3.8,6.3c-0.5,0.3-1,0.2-1.5,0       c-1.7-1.5-2.8-3.4-1.5-5.5C1783.2,363.3,1785.1,361.8,1788,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("915555"),
                d:
                  "M1795.9,377.3c4.5,2,9,3.9,13.1,6.7c-0.3,0.4-0.7,0.7-1.2,0.8c-1,0.3-1.9,0.2-2.9-0.1       c-3.3-2.1-7.7-2.4-10.2-5.9C1794.7,377.9,1795.1,377.4,1795.9,377.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("803F41"),
                d:
                  "M1795.9,377.3c-0.4,0.3-0.7,0.6-1.1,0.9c-2.3,1.1-3.9-0.7-5.7-1.4c-1.7-0.9-3.5-1.8-5.2-2.7       c-0.4-0.2-0.7-0.5-1-0.8c-0.2-0.4-0.3-0.8-0.2-1.2c0.3-0.6,0.7-1,1.4-1.2c0.3,0.1,0.6,0.1,0.9,0.2       C1788.6,373.1,1792.3,375.2,1795.9,377.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A76765"),
                d:
                  "M1853,406.2c-1.7-0.8-3.3-1.5-5-2.3c-0.1-0.9,0-1.5,1.1-1c3.3,1.4,6.5,2.8,9.8,4.2c0.2,0.9,0,1.4-1,0.9       C1856.3,407.4,1854.6,406.8,1853,406.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7D0CF"),
                d:
                  "M1796.9,361.9c3.9-1.8,8-2,12.1-1.7C1805.1,361.6,1801.1,362.4,1796.9,361.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("814243"),
                d:
                  "M1956.8,382.2c1.4-0.4,2.7-0.8,4.1-1.1c1.1,1.4,2.6,0.9,4,1l0,0c0,0.7,0,1.4,0.1,2.1       C1962.1,384.2,1959.4,383.6,1956.8,382.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37671"),
                d:
                  "M1871.1,412.9c-2.9,0.2-5.5-0.1-7.1-3.1C1866.7,410.1,1869.1,411,1871.1,412.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8DFDD"),
                d:
                  "M1941,379c2.8,0,5.5,0.5,7.9,2.1C1946.2,380.6,1942.9,382.3,1941,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A05B5C"),
                d:
                  "M1818.1,389c-2.3-0.5-4.7-0.6-6.1-2.9c-0.3-0.2-0.4-0.4-0.3-0.5c0.1-0.2,0.2-0.3,0.3-0.3       C1814.2,386.2,1816.7,386.6,1818.1,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B37671"),
                d:
                  "M1858,408c0.3-0.3,0.7-0.6,1-0.9c1.8,0.7,3.8,1.2,5.1,2.8c-0.7,0.1-1.4,0.1-2.1,0.2       C1860.4,409.8,1859,409.3,1858,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE7976"),
                d:
                  "M1886.8,420.1c-2.2,0-4.5,0.1-5-2.8c2.1,0.9,4.2,1.8,6.3,2.7C1887.8,420.5,1887.3,420.5,1886.8,420.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B07672"),
                d:
                  "M1849.2,402.9c-0.4,0.3-0.8,0.7-1.1,1c-1.7-0.9-3.4-1.9-5.1-2.8c0-0.3,0-0.6,0-0.9       C1845,401.1,1847.1,402,1849.2,402.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7BFBD"),
                d:
                  "M1989,390.1c2.7-0.6,4.4,1.2,6.1,2.8C1992.4,393.4,1990.8,391.4,1989,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B67170"),
                d:
                  "M1886.8,420.1c0.4,0,0.9-0.1,1.3-0.1c1.6,0.5,3.5,0.6,4.6,2.1c-1.3,0-2.6,0-3.9,0       C1888.2,421.4,1887.5,420.7,1886.8,420.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA817F"),
                d:
                  "M1877.9,416.2c-1.9-0.1-3.9-0.2-5.8-0.3c0.6-0.6,1.2-1.1,1.8-1.7       C1875.6,414.2,1877.1,414.5,1877.9,416.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F4143"),
                d:
                  "M1812,385.2c0,0.3,0,0.5,0,0.8c-1,0-2,0-3,0c-1.7,0.1-1.5-0.9-1.1-2c0.4,0,0.8-0.1,1.1-0.1       C1810,384.4,1811,384.8,1812,385.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("351819"),
                d:
                  "M2010,441.1c0.7-0.3,1.4-0.7,2.1-1c1.7,0.2,2.5-1.6,3.8-2.1c2.5-0.6,5.3-0.7,7.1-3       c0.2,1.6,1,1.4,2.4,1.5c6.7,0.2,12.9-2.9,19.6-2.5c0,2.5-1.9,2.3-3.5,2.4c-1.7,0.1-3.3,0.2-4.5,1.6c0,0,0,0,0,0       c-3.5,0.1-7.3-1-9.5,3.1c-0.2,0.4-1.2,0.8-1.8,0.7c-5.8-0.9-10,2.7-15.1,5c3.4,0.1,6.5,0.3,9.8,1.9c-1.9,0.2-3.4,0.3-4.8,0.4       c-2.2,1.7-4.7,1.1-7.1,0.8c-1.5-0.4-3-0.7-4.5-1.2c-2.8-1.5-3.1-2.6,0.2-4C2006.4,444,2008.7,443.2,2010,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1416"),
                d:
                  "M2026.8,374.8c0.4,0.1,0.8,0.1,1.2,0.2c-0.1,2.2-1.9,2.4-3.4,3c-9.2,4-18.3,8-27.5,12       c-1-0.5-4.6,2.9-3-1.9c0.7-1.1,1.9-1.4,2.9-2c6.4-3.4,13-6.1,19.6-9.1c2.6-0.6,4.9-2.1,7.4-2.9       C2025,374,2026,374.1,2026.8,374.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951B28"),
                d:
                  "M1997,387c-0.7,1.1-1.9,0.9-2.9,1c-2.7-0.1-5.4-0.1-8.1-0.2c-0.3-3-4.5-1.1-5-3.9       c1.6-1.5-2.8-2.4-0.3-4.1c2.1-1.4,4.1-1.1,6.1-0.1c3,1.4,6.3,2,8.8,4.4C1996.4,385,1997.6,385.6,1997,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("461317"),
                d:
                  "M2037,438c1.5-3.7,6-1.3,8-4c1,0,2.1,0,3.1,0.1c-0.4,0.6-0.8,1.2-1.2,1.8c-1.7,0-2.6,1.4-3.8,2.2       C2041.1,436.4,2039.1,437.6,2037,438z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DAA7A1"),
                d:
                  "M2016.3,449.9c6.9,0.3,13.8,1.4,20.8,1.1c-0.2,1.5,1.1,1.8,1.8,2.3c-5.9,3.4-12.4,2.7-18.8,2.7       c-2.6,1.7-4.8-0.9-7.2-0.9c-1-1.5-0.7-3.5-2.3-5C2012.8,449.3,2014.5,449.3,2016.3,449.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E9B9BA"),
                d:
                  "M2052,468c0.3,2.7,3.7,3.3,4,6c-0.6,0.6-1.4,0.9-2.2,0.9c-7-1.8-14.2-2.5-20.9-5.5       c-0.7-2.7,0.3-4.1,3.1-4.3c2,0.7,4.3,0.6,6,2C2045.2,469,2048.7,467.5,2052,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5B1B3"),
                d:
                  "M2036,465c-1,1.2-2.5,2-3,3.6c-4,2.3-7.4-0.6-11-1.4c-1.4-0.9-3.2-1.1-4.6-2.2c-2.1-3-1.6-4.6,1.5-5       c1.5,2.9,4.1,2.7,6.9,3.3C2029.3,464.1,2033.3,461.5,2036,465z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA5A8"),
                d:
                  "M2019,460c-2.6,0.9-2.3,2.5-1.1,4.3c-1.2,0.8-2.3,0.4-3.4-0.4c-1.8-1.6-2.6-3.8-3.4-5.9       c-0.7-1.8-0.1-2.9,1.9-3c2.5-1.1,4.5,1.8,7,1C2018.8,457.1,2017.6,458.2,2019,460z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D18F8F"),
                d:
                  "M2013,455c-2.8,3.5,0.9,5.5,1.9,8.2c-0.6,0.5-1.3,0.6-2.1,0.5c-1-0.2-1.8-0.8-2.5-1.5       c-2.3-3.1-5.8-4.9-6.2-9.7c-0.3-4.3,0.6-4.6,4-3.6c2.5,0.1,5,0.2,7.5,0.2c0.2,0.2,0.4,0.5,0.6,0.7       C2010.8,448.8,2013.5,452.9,2013,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B3139"),
                d:
                  "M2054,474.1c0.7,0,1.3-0.1,2-0.1c0.2,0.2,0.5,0.2,0.7,0.1c0.6,0.2,1.2,0.5,1.8,0.7       c1.9,0.5,3.7,1.2,5.4,2.2l0,0c0.8,2.3-0.9,3.3-2.3,4.5c-0.6,0.4-1.2,0.7-1.8,0.8c-2.3-1.2-2.8,2.6-5,1.8       C2053.7,480.8,2054.3,477.4,2054,474.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E1BAB9"),
                d:
                  "M2058,475.1c-0.4-0.3-0.9-0.7-1.3-1c2.3,0,4.9-0.9,6.3,1.9C2061.1,477.1,2059.7,475.3,2058,475.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853E45"),
                d:
                  "M2058,475.1c1.7,0.3,3.3,0.6,5,0.9c0.2,0.2,0.4,0.3,0.6,0.2c0.1,0.3,0.3,0.5,0.3,0.8       C2061.8,477.1,2059.7,476.9,2058,475.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("853E45"),
                d:
                  "M2061,481c1.2-1.2,2.5-2.3,3-4c1.4,0,2.6,0.4,3.1,1.8c-1.7,0.4-0.1,4-3.1,3.2       C2062.8,482.3,2061.3,483.5,2061,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("984A4E"),
                d:
                  "M1947,339c1,0,2,0,3,0c6.9,0,12.7,3.4,18.8,6.1c8.2,3.7,16.5,7.4,25.2,9.9c-0.3,0.7-0.7,1.3-1,2       c-0.5,0.6-1.2,0.9-2,1c-7.1-1.9-13.8-4.5-20.2-7.9c-1.7-0.9-3.3-1.4-5.1-1.4c-1.7-2.5-4.4-2.3-7-2.4c-3.4-3-8-3.6-11.8-5.9       C1946.6,339.8,1946.7,339.4,1947,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701421"),
                d:
                  "M2063.9,610.9c-3.2-1.8-6,0.1-9,0.7c-3.5,0.6-7.3,1.6-11.1-2.3c2-0.1,3.1-0.5,3.9-0.2       c3.5,0.9,6.7,1.8,6.3-3.8c0-0.3,1.3-0.8,2-1.2c2.7,0,5.5-0.6,8,1c0.8,1.7,0.7,3.3,0,5C2064,610.3,2064,610.6,2063.9,610.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1627"),
                d:
                  "M2064,610c0-1.7,0-3.3,0-5C2065.6,606.7,2065.4,608.4,2064,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2061,502c-0.1,2.1-0.2,4.3,3,4c-3.9,5.5-4.2,12-5.4,18.3c-0.3,1.4-1,2-1.8,1.6       c-4.2-2.4-8.1,1.5-12.7,0.1c-6.7-2.1-13.7-3.1-20.9-3.1c-0.8,0-1.5-0.6-2.3-0.9c-1.7-1.1-3.5-2.2-1.7-4.6       c2.9-1.3,5.9-0.9,8.9-0.5c2.9,1.3,5.3,0.4,8.3-0.5c6.2-1.8,9.8-7.6,16.1-9c1.9-0.4,2.7-2.2,3.4-3.9       C2057,501.1,2058.6,500.3,2061,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2059,576c-3.7-2.4-3.5,2.9-6,3c-2.5,0-4.9-1.1-7.5-1.2c-0.3-2.2-4.5-5.9,2.1-5.5       c0.4-3.3,4.9-3.1,5.3-6c0.5-4,2.4-6.9,4.9-10c3-3.6,2.1-8.2,1.3-12.5c-0.3-1.8-1.9-2.2-3.5-1.7c-1.8,0.5-3.6,0.6-5.4,0.6       c-1.6,0-3.7-0.7-3.5-2.1c0.6-3.7-3-5.8-3-9.1c0.1-0.2,0.2-0.4,0.3-0.6c5.2-0.9,10.5-0.3,14.6,2.6c3.9,2.7,6.1,8.2,7,12.2       c0.8,3.3,1.2,9.7-3.4,13.2c-0.6,0.5-1.3,1.4-1.2,2C2062,566.2,2058.8,570.9,2059,576z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA5456"),
                d:
                  "M2012,524c0.3,0.3,0.7,0.7,1,1c0.4,0.5,0.3,0.9,0,1.3c-0.4,0.3-0.9,0.5-1.4,0.7c-0.5,0.1-1,0.2-1.5,0.2       c-4,0.6-8.3-1.1-12.2,1.3c-5.5,3.8-10.6,8.3-17.1,10.5c-0.8-1.2-0.4-2.3-0.1-3.5c1.9-3.6,5.2-5.5,8.6-7.1       c2.4-1.1,4.6-2.5,6.5-4.4c1.3-0.9,2.8-1.2,4.3-1.3c2.3-0.1,4.5-0.2,6.8-0.9C2008.9,521.4,2011.4,520.9,2012,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB4550"),
                d:
                  "M2012,524c-4-3.1-8,1.5-12,0c-2.5-3.7,0.3-4.2,2.9-4.9c4.4,0.5,8.4-0.2,12.3-2.7       c2.8-1.8,3.2-1.4,3.9,1.6c0.7,1.3,1.3,2.7,2,4C2018.1,523.2,2014.4,520.7,2012,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2931"),
                d:
                  "M2030.9,526.1c0.4,0,0.7-0.1,1.1-0.1c2.6,0.9,5.4,0.4,8,1c0.3,0,0.6,0,1,0c0.6,0.7,1.7,0.3,2.3,1       c0,1.8-1.6,1.8-2.7,2.5c-0.4,0.2-0.8,0.3-1.3,0.5c-2.4,0.8-5.2,0.8-6.3,3.8c-0.3,0.8-1.4,0.4-2.2,0.1c-0.6-0.4-1.1-0.9-1.3-1.6       c-0.1-0.5-0.1-0.9,0-1.4C2030.3,530.1,2029.8,527.9,2030.9,526.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4849"),
                d:
                  "M2030,532c0,0.4-0.1,0.8-0.1,1.2c-1.7,0.2-2.7-1-3.9-1.9c-2.6-2.5-5.5-4.5-9.5-4.2       c-1.2,0.1-2.6,0-3.4-1.4c-0.1-0.2-0.1-0.5-0.2-0.7c5,0.1,10.1-1.1,15,1.1C2029.4,527.8,2030.2,529.8,2030,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2064,506c-0.3-3.7-2.2-7.3,0-11C2065,498.7,2065.8,502.3,2064,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("602427"),
                d:
                  "M2030,532c-1.3-1.8-2.5-3.6-2-6c1,0,2,0,2.9,0C2031.5,528.2,2031.7,530.3,2030,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2040,527c-2.8,0.6-5.5,0.4-8-1C2034.7,526.2,2037.5,525.4,2040,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2044,530c0,0.3,0,0.7,0,1l0,0c-0.9,1.1-1.9,1.8-3.3,1.3c-1.1-0.4-1.3-1.3-0.6-2.3l0,0       C2041.3,529.3,2042.7,529.2,2044,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A34950"),
                d:
                  "M2042.9,528c-0.8,0-1.5-0.2-1.9-1c1.1,0.5,3.8-1.4,3,2C2043.4,528.9,2043.2,528.4,2042.9,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0444C"),
                d:
                  "M2042.9,528c0.4,0.3,0.7,0.7,1.1,1c0,0.3,0,0.7,0,1c-1.3,0-2.7,0-4,0C2041,529.3,2042,528.7,2042.9,528       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A94B52"),
                d:
                  "M2046,578c2.9-3.5,4.7,0.3,7,1c2.4,4.6-1.6,8.1-2,12.1c-0.2,1.3-0.9,2.1,0.5,3.8c3,3.3,1.9,6.6-1.5,7.1       c-0.9-1.7-0.5-3.4-0.4-4.1c0.1,0.7-0.6,2.5,0.4,4.1c-0.7,0.5-1.4,1.1-2.2,1.6c0.8,0.1,1.5,0.3,2.3,0.4       c-6.9,2.2-14,2.1-21.1,1.9c-0.4-1.4,0.7-1.6,1.6-1.9c2.2-0.7,4.3-0.5,6.6-2.1c4.7-3.2,5.7-5.1,1.4-9.2c-0.5-0.5-0.9-1-0.9-1.7       c1.7-4.9,1.3-10.2,2.4-15.2c0.5-1.2,1.2-2.1,2.6-2.4C2045.3,573.9,2044.9,576.5,2046,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F444B"),
                d:
                  "M2061,502c-2.1,0-4.1-0.2-4.1,2.9c0,3.5-3.8,4.8-5.4,4.7c-3.9-0.4-4.2,0.7-2.7,3.6       c-1.4,1.2-3.7-4.8-3.9,0.8c0,0.5-0.3,1.4-0.4,1.4c-5.3-0.6-8.7,4.7-13.8,4.4c-0.6,0-1.1-1.1-1.7-1.7c-2.3-3.4-1.4-7.2-1-10.9       c0.9-1.3,0-3,0.9-4.3c4.4-2.4,9-2.7,13.8-2c2.8,0.4,4.8-0.6,7.2-2.3c3.2-2.3,6.5-5.3,11.2-4.5C2061,496.7,2061,499.3,2061,502z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3E45"),
                d:
                  "M2061,494c-3.5,3-8.9,2.4-11.6,6.8c-1.4,2.3-3.9,1.9-6.3,1.2c-4.8-1.3-9.3,1.4-14.1,0.9       c-0.9-0.8-1-1.8-0.8-2.8c3.3-3.5,7.5-4.1,12.1-4.2c7.2,0,18.6-5.7,19.7-14c0.3-0.3,0.7-0.7,1-1c0.5,1.7,2.3-0.2,3,1       C2065.1,486.5,2062.4,490.1,2061,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24A4F"),
                d:
                  "M1991,357c0.7,0,1.3,0,2,0c8.2,2.5,15.1,7.9,23.7,9.6c2.5,0.5,4.9,2.7,6.3,5.3       c-1.8,1.5-3.5,0.2-5.1-0.5c-6.7-2.5-13.1-5.4-20-7.5c-2.5-1.3-5.5-1.7-7.4-4C1990.1,358.9,1990.2,357.9,1991,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD7278"),
                d:
                  "M1998,362.9c8.7,2,16.5,6.4,25,9c1,1.3,3.9,0.2,3.8,2.9c-0.9,0-1.8,0-2.7,0c-2.4,0-4.5-1.1-6.8-1.9       c-5.2-2.1-10.3-4-15.6-5.8c-1.8-0.8-3.9-1-5-3C1996.8,363.2,1997,362.6,1998,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B04951"),
                d:
                  "M2038,591c2.8,1.7,5.6,2.6,4.7,7.4c-0.7,3.5-1.2,5.1-4.9,4.2c-0.7-0.2-1.8,0.1-1.7,1.1       c0,0.3,1.3,0.5,2.3,0.8c-3.3,1.3-6.6-0.8-9.3,1.5c-2.9-0.3-6.5,1.1-8-3c0.3-3.3,1.8-6.3,3-9.3c1.4-2.2,2.1-4.8,4.6-6.2       C2031.3,589.8,2035.4,588.4,2038,591z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90313C"),
                d:
                  "M2024.9,593.9c-0.6,3.3-2.4,6.1-3.9,9.1c0-0.2,0-0.4-0.1-0.5c-0.2-0.2-0.4-0.3-0.6-0.5       c-0.9,4.9-4.2,8.6-6.3,13c-1.3,1-2.7,0.1-4,0c1.8-5.7,5-10.7,8.1-15.7c2.7-1.9,2.2-6.2,5.5-7.6       C2024.8,592,2024.5,593.2,2024.9,593.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851727"),
                d:
                  "M2062,614c0,0.7,0,1.3,0,2c-1.2-0.2-2.4-0.5-3.8-0.7C2059.3,613.9,2059.9,611.6,2062,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("FFFFFF"),
                d:
                  "M2018.8,599.9c-2.8,5.1-4.9,10.6-8.8,15.1c-4.6,3.6-9.9,5-15.7,5.3c-5.1,0.2-10.2,1.2-15.3,1.9       c-9.7,0.7-19.3,0.6-29,0c-4.3-0.8-8.7-1.6-13-2.4c-2.1,0.7-3.7-0.6-5.5-1.2c-3.3-2.3-7.7-3.6-8.5-8.5c-0.2-3.8,1.9-6.6,4-9.4       c5.6-7.4,11.1-14.9,17.2-21.9c8-7.9,15-16.6,22-25.2c3.1-3.3,6.5-6.3,8.8-10.2c1.6-1.9,2.7-4.6,5.9-4.4       c5.4-3.7,10.7-7.3,16.1-11c3.7-2.6,7.7-1.1,11.6-0.8c3.9,0.7,7.9,1.2,11.8,1.9c5.2,1,8.6,3.9,10.4,8.9c2,5.5,2.8,11.6,8.4,15.3       c2.3,1.6,0.7,3.8-0.8,5.6c-2.9,3.4-5.9,6.7-7.1,11.3c-0.4,1.7-1,3.4-1.6,5.1C2026.1,583.4,2023.4,592.1,2018.8,599.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96182F"),
                d:
                  "M1994,624.8c4.2-4.9,9.8-1.8,14.7-2.6C2004.1,625.1,1998.8,623.1,1994,624.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781C21"),
                d:
                  "M1950,622.1c9.7,0,19.3,0,29,0c0,0.3,0,0.6,0,0.9c-8.2,0-16.5,0-24.7,0       C1952.8,623,1951.2,623.4,1950,622.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1954,522c0.3,0,0.7,0,1,0c-0.1,4.4-1,4.9-6.6,3.8c1,3.1-0.9,5.1-4,4.5c0,1.2-1.7-3.6-1.4,0.5       c0.2,3.1-1.3,6.3-5.7,5.5c-0.7-0.1-1.6-0.3-1.9,0.2c-2.3,4.5-5.8,1.5-7.8,0.5c-3.3-1.7-6.4-1.1-9.6-1.1c-0.7,0-1.3,0-2,0       c-1.1-2.9,1-4.6,2.5-6.4c0.5-0.6,1.4,0.3,1.9-0.5c-0.7,0.3-1.6-0.6-2.3,0.2c-0.5,0.5-0.6,1.2-1.1,1.7c-1.7,1.6-3.9,1.7-5.4,0.4       c-2.1-1.9,0.3-3,1.3-4.3l0,0c0.8-0.4,0.7-1.1,0.5-1.9c0.1-1.5-1.1-2.7-0.6-4.2c0.4-0.3,0.8-0.2,1.1,0.1       c2.2-1.8,4.5-4.1,5.9,0.7c0.1,0.4,0.7,0.6,1,0.9c2.4-4.8,6.3,4.1,8.8-1c1.1-2.3,3.5-2.1,5.2-1.2c2.1,1.1-1.2,2.3-0.4,3.8       c5.2-2.5,10.3-7.1,16.5-2.2C1952,522.8,1953,521.8,1954,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1918,536c0.3-0.8-0.3-2.7,1-2.1c2.7,1.4,5,1.4,7.4-0.4c0.6-0.4,1.5,0.1,1.3,0.8       c-0.9,3.4,0.4,2.4,2.3,1.4c3.3-1.7,0.2,3,2.9,2.3c1.1-1.5,1.1-5.5,5.8-2.7c2.2,1.3,2.8-3,3.3-5.1c0.2-1-1.2-2-0.6-3.5       c2.4-0.4,3.7,6.3,7.2-0.3c0-0.4-4.2,1.4-2.9-1.1c1-2,3.2-1.8,4.8-0.7c3.5,2.4,3.7-0.5,4.5-2.6c1.2-0.3,2.4-0.5,3.5-0.8       c-5.3-0.4-9.8-3-14.3-5.3c-0.1-0.1-0.2-0.2-0.3-0.3c0.4-0.2,0.7-0.4,1.1-0.7c3.3,0.5,6.6,1.4,10,1c3.7,0.8,7.4,1.1,11.1,1.8       c2.9,0.6,5.8,1.1,7.9,3.5c0.6,1.2,0,1.9-1.1,2.3c-1.7,0.6-3.4,1.1-5.3,1.5c-4.7,1-9.7,1.1-12.9,6c-1.5,2.3-5,3.3-8,3.7       c-2.5,0.3-4.3,1.7-6,3.3c-1.2,1.1,0.8,0.8,1,1.4c1,1.2-0.1,2-0.5,3c-0.3,0.6-0.7,1.1-1.3,1.5c-1-0.3-2-0.7-3-1       c-3.4-1.2-7.1-1.5-10-4C1924,538.2,1920.8,537.7,1918,536z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1913,527c-0.4,1.2-0.8,2.4-1.2,3.6c4,1.5,5.4-0.6,5.6-4.7c2.1,1.7,3.3,3.6,5.9,3.6       c-5.3-0.7-6.1,3.1-7.3,6.5c-2.9,0.4-5.1-2.4-8-2C1908.7,531,1908.2,527.1,1913,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771626"),
                d:
                  "M1920,569c-0.3,0.3-0.7,0.7-1,1c-3.4-1.2-2.5-4.6-2.5-6.7c0-2.6,2.7,0,4-0.7c1.6-0.7,4.4-1.7,3.1-3.6       c-3.3-4.8,2.2-1.6,2.4-3C1926.4,561.4,1921.7,564.5,1920,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1874,568c-0.3-1.7-0.7-3.3-1-5c0-2.1,2.2-2.2,3.5-3.5c-2.4,3.3-0.4,5.4,1.6,7.4       c2.4,2.5,5.5,0.1,8.6,1.2c-2.9,2.2-5.8,1.9-8.7,1.9c-1,0.8-2,0.9-3,0C1874.7,569.3,1874.3,568.7,1874,568z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761525"),
                d:
                  "M1883,587c-3.8-2-7.4-4.4-9.9-8c5-1.4,7.7,4.6,12.6,4c1-0.1,1.6,1.3-0.2,1.6c-2.4,0.4-0.5,1.5-0.5,2.4       C1884.3,587,1883.6,587,1883,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("78161E"),
                d:
                  "M1927,539c3.2,1.7,7.6,0.4,10,4c-1.6,0.9-2.9,2.4-5,2C1932.1,541.6,1927.4,542.1,1927,539z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761525"),
                d:
                  "M1873,578c-0.7-1-1.4-2-2-3c2.9-1.5,6.2,1.2,9.2-0.7c-1.2,1.7-2.5,3.1-4.8,2.2       C1873.8,576,1873.1,576.5,1873,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731426"),
                d:
                  "M1875,570c1,0,2,0,3,0c0,0.8,1.8,1.1,0.9,1.8c-1.9,1.4-3.7,0.4-5.1-1.2c0,0,0.1-0.3,0.3-0.4       C1874.3,570.1,1874.7,570.1,1875,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1893.6,569.7c0.5,1.1,0.7,2.5-0.4,2.7c-1.5,0.3-0.8-1-0.5-1.6C1892.8,570.4,1893.2,570.1,1893.6,569.7       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1914,525c0.3,0.9,2,1.2,1.5,2.2c-0.6,1.2-1.6,0-2.5-0.2c-2.7-2.8-3.9-5.7-0.3-8.7       c-1.2-1.3-2.2,0.5-3.2-0.3c-0.3-1.4,1.1-1.8,1.7-2.6c2.1-2.6,2.9,1.1,4.7,1.1c0.9,0-0.3,1.1-0.8,1.4c-1.2,0.8-1.1,1.9-1.1,3       c-0.3,0-0.7,0-1,0C1912.2,522.6,1914.4,523.5,1914,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1927.6,519.4c0.1,1-0.3,1.5-1.1,1.5c-0.9,0-1.6-0.4-2-1.2c-0.4-0.7-0.1-1.3,0.7-1.5       C1926.4,517.9,1927,518.7,1927.6,519.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851726"),
                d:
                  "M1939.8,519.3c0,0.7-0.2,1.3-1,1.4c-1,0.2-1.6-0.3-1.6-1.3c0-0.7,0.5-1.2,1.2-1.2       C1939.1,518.2,1939.7,518.5,1939.8,519.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d: "M1954,522c-1,1.3-2,1.3-3,0C1952,521.7,1953,520.4,1954,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1424"),
                d:
                  "M1961,469c1.3,0.3,2.7,0.7,4,1c1.3,1.4,3.2,1.6,4.8,2.5c1.4,0.7,2.7,1.5,2.9,3.2       c0.3,2.8,0.7,5.3,4.7,4.5c0.8-0.2,2.2,1.2,1.9,2c-1.1,3.7,4.5,1.8,3.9,4.9c0.7-2.3,3.6,1.2,4.4-1.8c1.1-3.9,4.8-5.2,7.8-7.3       c0.4-0.2,0.8-0.3,1.3-0.4c1.6,0.6,3.2,0.7,4.9,0c0.5,0,0.9,0.1,1.3,0.2c0.4,0.2,0.9,0.3,1.3,0.5c1.1,0.4,2.3,0.4,3.4,0.6       c6.2,1.2,6.3,2.4,2.7,7.6c-3.8,5.6-8.4,10.7-11.4,16.8c-2,3.3-4,6.6-7.9,8.2c-3.2,2-6.9,3.1-9.5,6.2c-1.1,1.4-3,1.8-4.6,1.2       c-5.6-2.3-11.5-1.2-17.2-2c-1-0.1-2-0.2-2.7-1c2.9-4.5-2.2-3.1-3.4-4.7c-0.2-1.1,0.7-1.3,1.3-1.8c1.3-1.1,2.6-2.3,1.9-4.2       c-0.9-2.2-2.5-0.1-3.8-0.3c-1.3-0.2-2.6,0-3.9,0c0-1.3,0.7-2,2-2c2.5-2.8,5.9-3.3,9.4-3.4c2.1,0,4.3,0.1,6.5-0.5       c-0.8-3.4-2.6-6.2-3.8-9.4c-0.2-0.5-0.2-1-0.2-1.5c0.4-6.3,1.6-12.8-6.1-16.1c-0.7-0.3-0.6-1.5,0.1-2.2       C1958.4,469.9,1959.9,470.5,1961,469z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641222"),
                d:
                  "M1957,470c0.4,2,1.8,3.6,3.5,3.8c5.6,0.7,4.6,4.9,4.4,8.3c-0.3,3.9-3,8.1,2.4,10.6       c-1.8,3,0.9,4.3,2,6.4c0.7,1.2-1.8,2-3.3,2c-4.1,0-8.2-0.1-12.2,1.1c-0.9,0.3-1.9,0.6-2.8,1c0.4-2.2,0.7-4.5,4.4-4.9       c-2.3-1.1-3.9-1.9-5.5-2.7c-1.6-0.7-2.3-1.9-1.7-3.6c0.5-1.5,1.7-1.9,3.2-1.2c2.1,0.9,3.8-0.5,6.3-1c-6.7-1.5-6.7-1.5-7.8-6.9       c2.1-0.9,3.2,3.6,4.9,1.4c1.5-2,2-4.9-0.2-7.2c-1.1-1.1,0.2-3.6-2.7-3.8c-0.1,1.8-0.1,3.5,0.9,5c0.6,1,1.7,1.9,0.7,3.1       c-0.7,0.9-1.5,0.1-2.3,0c-1.7-0.3-2.6-1.4-2.9-2.9c-0.3-1.4,1.8-2,1.2-3.6c-1-1-3.3,1.3-3.6-1.2c-0.3-2.8,2.2-0.8,3.2-1.6       c0.9-0.7,1.9-1.2,2.9-1.9C1953.7,470,1955.3,470,1957,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761521"),
                d:
                  "M1957,516c4.2,0,8.3,0,12.5,0c2.1,0,4.1-0.1,6.1,1.3c1.8,1.2,3.9,1.5,5.6-1.5c2-3.4,6.5-3.9,9.8-5.8       c-0.1,5.7-3.8,9-7.7,12.2c-1.7,1.1-3.6,1.1-5.5,1.1c-1.4-0.1-2.8-0.2-3.8-1.3c-4.3-2.8-9.4-3-14.2-3.9       c-1.8-0.4-3.6-0.6-4.8-2.1C1955.7,516,1956.3,516,1957,516z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1892,621c0,0.8,0.2,1.6,1,2c-0.6,0.9-1.3,2.6-2.4,1.2C1889.7,623.2,1891,621.9,1892,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73A47"),
                d:
                  "M1862.5,592.9c0.5,0.4,1,0.7,1,1c0.1,0.9-0.6,0.9-1.2,0.7c-0.4-0.2-0.9-0.4-1.3-0.6       C1861.5,593.6,1861.9,593.3,1862.5,592.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D313A"),
                d:
                  "M1940,544c0-0.7,0-1.3,0-2c2.3-1.2,4.4,0.3,6.5,0.6c3.1,0.7,6,1.7,9,2.7c5,1.6,5.3,2.7,2,7.3       c-0.3,0.4-0.6,0.7-1,1c-2.6,2-3.9,5.6-7.6,6.3c0.1-1.3-0.2-2.6,0.9-3.7c4.4-4.6,4.5-5.2-1.2-7.4c-3.1-1.2-6.1-3-9.7-2.9       C1939.3,545.3,1939.7,544.7,1940,544z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96313C"),
                d:
                  "M1938,554c1.6,2.8-2.7,7.3,2.8,8.7c-1.5,1.8-2.7,1.2-4,0.7c-0.9-0.3-1.7-0.1-2.2,0.6       c-0.7,0.9-0.2,1.6,0.6,2c1.6,0.9,1,2.2,0.7,3.5c-0.3,0.9-0.9,0.8-1.5,0.5c-1.6-0.7-1.4-2.1-1.4-3.4c0-1,0-2-1-2.9       c-3,1.1-0.1,5.1-3,6.2c-1.7-4-1-6.8,3.5-8.4c1.7-0.6,1.7-2.3,1.5-3.8C1933.6,554.6,1935.1,553.7,1938,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96313C"),
                d:
                  "M1915.6,585.2c-0.8-0.3-0.6-1-0.5-1.5c0-0.3,0.5-0.6,0.7-0.9c0.4,0.4,0.8,0.9,1.2,1.3       C1916.5,584.4,1916,584.8,1915.6,585.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D2436"),
                d:
                  "M1932.3,617.9c1.7,0.2,3.3,0.8,4.8,1.8c0.3,0.7,0.6,1.5,1,2.2c-5.6,0.1-10.9-0.7-15-4.9       c-0.3-1.4-0.7-2.8-1-4.1C1925.9,613.7,1928.2,617.5,1932.3,617.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1828"),
                d:
                  "M1924.9,625.2c0,1-0.8,2-1.3,1.6c-0.9-0.8-0.9-2.6-2.6-2.8c0.4-0.3,0.7-0.8,1.1-0.8       C1923.7,623,1924.5,623.8,1924.9,625.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1937,586c-1-4.9,4.4-6.3,5.8-10.1c1.3-3.4,2.3-4.3-0.9-6c1.3-3.8,5-5.7,7-8.9c1.5-0.3,2.7,2.8,3.9,0.7       c1.2-2.2,3.6-4,3.3-6.9c0-0.6-0.5-1.2-0.2-1.8l0,0c2.7-1.9,5.4-0.7,8.1,0.1c0.4,0.2,0.8,0.6,1.1,1c0.1,1.3-0.6,2.2-1.4,3       c-6.2,7-11.7,14.6-18.6,21.1C1942.6,580.8,1941.3,585.1,1937,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D46"),
                d:
                  "M1956,553c1.8,1.9,5,3.7-0.2,5.4c-1.2,0.4-0.6,1.7-0.9,2.6c-0.8,2.1-2.8,3.2-4.8,3.2       c-2.4,0,1-2.7-1.2-3.2c0-0.3,0-0.7,0-1C1951.3,557.7,1953.7,555.3,1956,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E5F60"),
                d:
                  "M1937,586c3.4-1.9,4.6-6.1,8-8c0.4,0.4,0.5,0.9,0.2,1.4c-5.7,7.3-11.4,14.5-17.1,21.8       c-2.1,2.6-4,5.3-4.1,8.8c-2.4,0.2-0.7-2.2-1.8-2.8c0.3-1,0.6-2.1,0.9-3.1l0,0c0.6-0.7,1.3-1.4,1.9-2.1c1.3-3.6,2.5-7.2,6.3-9.1       c1.2-0.6,1.1-2,1.8-2.9l0,0c0.9-1.4,2-2.7,3.1-4C1936.4,586.1,1936.7,586,1937,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1933,590c0.2,2.1-0.8,3.4-2.5,4.5c-2.8,1.8-3.3,5.3-5.5,7.5c0-3.6,0.8-6.8,4-8.9       C1930.7,592.5,1931.8,591.1,1933,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1936.1,586.1c-0.2,1.9-1.4,3.1-3.1,4C1933.1,588,1934.3,586.8,1936.1,586.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("88373B"),
                d:
                  "M1922.1,607.2c0.6,0.9,1.2,1.9,1.8,2.8c0.7,4.8,5.7,5.2,8.4,8c-4.5,0.5-7.3-2.3-10.2-5       C1922,611,1922.1,609.1,1922.1,607.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE3750"),
                d:
                  "M1923,604.1c-1.1-0.3-2.6,0.6-3.4-0.9c-0.1-0.2,0.4-0.8,0.7-0.9C1921.9,601.8,1922.9,602.4,1923,604.1       C1923.1,604,1923,604.1,1923,604.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53C4B"),
                d:
                  "M957,639c0,0.7,0,1.3,0,2c-0.8-0.2-2.1,0.5-2.2-0.8C954.8,639.1,956.1,639.1,957,639z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13541"),
                d:
                  "M874.4,644.5c-1.5,0.6-2.6,0.7-3.6,0C871.9,643.8,872.9,643.9,874.4,644.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73744"),
                d: "M962,646c0,3.2-2.2,2.3-4,2C957.4,643.5,959.7,644.6,962,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A74B5D"),
                d:
                  "M913,632.1c20,0,40,0,59.9,0c-1,1.2-2.4,0.8-3.7,0.8c-18.7,0-37.5,0-56.2,0       C913,632.7,913,632.4,913,632.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C25461"),
                d:
                  "M669,631.1c23,0,46,0.1,69.1,0.2c1.1,0,2.2,0.4,3.4,0.7c-21.8,0-43.6,0.1-65.4,0.1       C673.7,631.6,671.2,632.9,669,631.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73945"),
                d:
                  "M654.8,626.1c-0.6,0-1.2-0.1-1.8-0.1c-0.6-0.7-1.1-1.3-1.5-2.2c-2.1-4.1-1.8-4.9,2.5-5.2       c4.1-0.3,8.3-0.4,12.4,0.2c1.3,0.2,2.9,0.5,2.7,2.3c-0.1,1.7-1.7,1.8-3,1.9c-3.1,0.1-6.2,0.3-9.2-0.5       c13.2,0.9,26.4-0.5,39.6,0.1c17.4-0.4,34.9,0,52.3,0c5.5,0.2,11.1-1.3,16.4,1.5c0.5,3.3-2,2.9-3.9,2.9c-6.5,0.1-13,0-19.4,0       c-20.9,0-41.9,0.3-62.8-0.1C671,626.7,662.9,627,654.8,626.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE384C"),
                d:
                  "M654.8,626.1c34.9,0,69.9,0,104.8-0.1c1.9,0,4.6,1.4,5.4-1.9c1-1.2,2.4-1.2,3.7-1.3       c1.6,0,3.2,0,4.7,0.2c0.5,0.1,1,0.2,1.5,0.4c2,1.6,5.8,0.8,6,4.8c-33.4,0-66.9-0.1-100.3-0.1c-2.5,0-5,0-7.5,0.1       c-4.1-1.4-8.4-0.5-12.6-0.9C658.6,626.8,656.6,627.4,654.8,626.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3A4A"),
                d:
                  "M653,624c0,0.7,0,1.3,0,2c-5.5,0.6-10.6-1.8-16-2.4c0-0.2,0-0.5,0.1-0.7C642.7,619,647.9,620.2,653,624       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52B3B"),
                d:
                  "M657.9,630.2c2.1-0.1,4.3-0.6,6.2,0.7c-2,0-4,0-6,0C658,630.7,658,630.4,657.9,630.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("590F23"),
                d:
                  "M222.6,454.6c2,0,1.7,2,2.8,2.7C223.5,456.9,223.5,456.9,222.6,454.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB9097"),
                d:
                  "M340,404c-3.4,0.3-6.7,0.2-9-3c-0.5-0.2-0.1-1.1,1-2c0.3-0.4,0.7-0.7,1.1-0.9c1.7-0.6,3.9-1,3.5-3.4       c-0.4-2.3-2.7-1.4-4.2-1.5c-6.2-0.3-6.2-0.3-7.8-6.6c1.1-3.7,4.6-1.5,6.7-2.6c3.1-1.5,6.7-1.8,9.1-4.8c0.9-1.1,2.4-1,3.7-0.6       c1.5,1.4,3.7,2,4.1,4.4c-0.8,1.3-2.3,1.6-3.5,2.1c0.7,2.4,2.6,3.3,4.5,4.1c2.4,1,2.8,3.8,3.4,5.6c0.8,2.5-2,2-3.6,2.1       c-2.6,1.1-6.5,0.2-7.1,4.5c0,0.1-0.9,0.2-1.3,0.1c-0.8-0.2-1.4-2-2.3-0.7C337.3,402.5,339.5,402.9,340,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8707A"),
                d:
                  "M313,402c-3,0.5-6.1,1-9.9,1.7c2.3,2.4,4.1,4.4,6,6.3c-3-0.8-9.1,2.3-8.1-3.7c0.8-5-0.7-9.6,0.1-14.3       c1.1-0.5,1.7,0.1,2.4,0.8c2.5,2.1,5.5,1.2,8.1,0.8c4.7-0.7,5.9,3.2,8.3,5.4c1.1,1.1-0.3,2.1-1.5,2.3c-1.4,0.2-2.9-0.3-4.3,0.7       C313.7,402,313.3,402,313,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF7E86"),
                d:
                  "M314,402c1.1-2.2,3.7-0.7,5.5-2c-0.7-1.8-5.4-0.4-3.4-4.2c0.5-0.9-1.5-0.7-2.3-0.7       c-3.1,0-6.3-0.1-9.4,0.4c-3.3,0.5-1.8-1.1-1.4-2.4c3-0.7,6.2-0.7,9.1-2.3c0.9-0.5,2.2-0.9,2.9-0.3c3.8,3.3,8.2,1.6,12.4,2       c6,0.5,6,0.4,5.7,6.6c-0.3,0-0.7,0-1,0C325.9,399.3,320.3,402.6,314,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7828C"),
                d:
                  "M333,399c-0.4-0.6-1.1-1.2-1-1.7c1.4-6.8-3.5-4.2-6.2-4c-3.8,0.3-7.6,2.4-10.7-1.9       c-0.9-1.3-2.8,0.5-4,1.1c-2.7,1.4-5.2,2.1-8,0.5c-0.7-0.3-1.3-0.7-2-1c-0.6,0-1.3,0-1.9,0c0.8-1.8,3-0.5,4-1.8       c6.1-0.5,11.3-3.5,16.5-6.4c0.9,3,4.6-0.9,5.4,2.2c1,5.3,4.3,6.8,9.4,6.1c1.4-0.2,4.2-1.3,4,1.7c-0.1,2.2-0.1,5.4-3.9,5.2       C334,399,333.5,399,333,399z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99243B"),
                d:
                  "M295.1,397c-0.7,0-1.4,0-2.1,0c-2,1.1-4.3-0.1-6.3,0.8c-1.4,0.6-3.6,1.8-3.9-0.9       c-0.3-2.2,2.3-1.2,3.8-1.6c-2.4,0.1-4.3-0.3-4.6-2.7c-0.2-2,2.3-0.6,3-1.7c1.3-0.2,2.9,0.5,3.9-1c3.2,0.3,6,2.4,9.3,2       C297.6,394,297.1,395.9,295.1,397z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE9EA2"),
                d:
                  "M349,397c0.6-1.3,2.1-0.7,3.5-1.6c-3.4-0.6-2.3-3.7-3.5-5.4c0.5-0.9,1.2-1.7,2.2-1.9       c5.9-1.2,11.7-3.8,17.7-0.5c0.5,4.4-3,6-6,7.4c-1.7,0.8-3.1,1.5-4.3,2.9c-3.2,1.6-6.4,0.6-9.6,0.2C349,397.7,349,397.3,349,397       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9FA6"),
                d:
                  "M349,398c3.4,0,6.7,0.2,10-1c1.3-2.9,4.1-1.6,6.3-2.1c4.1-0.4,8.1-0.1,12.2-0.2c1.2,0,2.3,0.2,3.3,0.9       c1.1,2.1-0.9,2.1-1.9,2.7c-1.1,0.3-2.1,0.6-3.2,0.7c-5.7-0.3-10.9,2.6-16.5,2.2c-3.4-0.1-6.5,1.6-9.8,2c-0.4-0.4-2.1,0-1-1.2       c1.4-1.5,3.3-2.6,7-1.4C352.5,398.3,350.2,399.9,349,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4303B"),
                d:
                  "M359.1,401.1c5.5-1.6,11.2-2.5,17-3.1c0.8,0.4,1.6,0.8,1,2c-0.3,0-0.7,0-1,0c-3.7-0.1-7.4,0-11,1.4       C363.1,402.2,361,402.6,359.1,401.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("540E21"),
                d:
                  "M125,490c0-0.3,0-0.7,0-1c-2-2.7-0.9-5.3,0-8c6.6,1.4,13.2,2.6,20,2c1.3,0.7,2.7,1.3,4,2       c-1.8,2.5,1.2,1.9,1.7,2.9c1.2,2.1,3.7,2,5.5,3.4c-0.8,1.4-2.5,0.2-3.4,1.2c0,2.1,3.5,1.1,3.2,3.5C145.7,494,135.3,492,125,490       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA2230"),
                d:
                  "M417.1,398c-2.5,0-4.9,0-7.4,0c-5.5-0.1-11.4,1.2-15.7-3.9c0.5-0.7,1.1-1,1.9-1.1       c2.8-0.6,5.8,0.6,8.4-1.2c0.4-0.3,0.9-0.5,1.3-0.6c1.9-0.5,3.9-0.3,5.8-0.6c1.8-0.5,3.5-2.1,5.5-0.8c0.8,2.6-2,3.1-2.7,5.3       c8.4-0.4,17,0.1,25.5-0.6c2-0.2,3.9-0.3,5.9-0.1c1.8,0.2,1.6-1.3,1.5-2.4c-0.1-0.9,0.2-2-1.2-2.3c-4.4-1-5.8-4.1-3.4-8.1       c0.7-1.1,0.8-2.6,1.9-3.5c0.4-0.2,0.9-0.3,1.4-0.3c3.1,1.9,3.5,5.7,5.8,8.2c1.1,3.4,4.6,5.9,3.3,10.1c-5,2.4-10.5,0.8-15.7,1.5       C432,398.4,424.5,397.9,417.1,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34750"),
                d:
                  "M455,395.9c-1.4-3.3-2.7-6.5-4.1-9.8c-0.5-0.4-0.5-0.8,0-1.3c4.2,2.5,6.1,6.2,6.2,11       c-0.1,0.4-0.1,0.8-0.2,1.2C456.3,396.7,455.7,396.3,455,395.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631222"),
                d:
                  "M495,435c-0.7,0.3-1.3,0.7-2,1c0,0,0,0,0,0c-1.1-1.7-1.4-3.7-1.7-5.5c-0.3-1.7-1-2.1-2.7-2.6       c-2.5-0.7-0.6,0.5-0.6,0.9c0.1,1.8-0.6,2-2,1.2h0c-2.3-0.6-4.5-1.3-5-4c-5-0.3-5.6-4.5-7-8c1.3-1.7,0.9-5.7,5.4-3       c1.2,0.7,5.1,1.4,7.5-0.7c0.5-0.4,1.2-0.5,1.9-0.4c3.2,0.6,6.4-2,6.8-5.7c0.9-7.5,2-8.4,9.4-8.1c0.5,0,1-0.1,1.5-0.1       c3.4-0.6,6.7,0.5,10.2-0.7c3-1.1,6-1.7,7.7-4.7c0.7-1.3,2-1.7,3.4-1.7c5,0,9.9-0.7,14.9,0.5c1.2,3.2,2.3,6.2-2.8,7.1       c-0.6,0.1-2.4,0.9-0.8,2.3c0.3,0.4,0.4,0.7,0.5,1.2c-0.8,2.5-2.5,1.6-4,1.1c-1.6-0.5-2.9-1.5-4.4-2.2c1.4,1,2.1,2.2,1.2,3.8       c-0.7,1.3-1.9,1-3.1,0.4c-0.4-0.2-0.8-0.5-1.1-0.8c-3.2-2.9-4.6-0.5-5.1,2.2c-0.5,2.6-1.3,4.8-3.8,6.4c1.3,0.5,2.4,0.9,3.6,1.1       c1.3,0.2,3.5-0.9,3.5,1.4c0.1,3.1-2.6,4-4.9,4.9c-2.3,0.8-3-0.5-3-2.5c0-0.6-0.2-0.9-1.5-1.4c1.7,2.7,1,4.9-0.9,6.5       c-2.5,2-4.4,4.5-6.2,7.1c-1,1.5-2.5,3.5-4.4,2.2c-2.2-1.5,0.4-3,0.9-4.5c-7.1,3.5-7.1,3.5-7.4-0.2       C497.4,431,496.6,433.3,495,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1325"),
                d:
                  "M506,401c-2,1.8-4.4-1.1-6.7,0.8c-2.2,1.8-3,3.2-1.2,5.4c1.7,2.1-4.3,1.6-1.4,4.1       c-3.4,1.5-4.1,5-5.8,8.5c-0.7-4.5-1.4-7-6-3.4c-1,0.8-4.9-0.4-7.4,0.6c0.1-0.8,0.1-1.5,0.2-2.5c-2.1,0.3-1.2,3.7-3.6,3.4       c-2.9-3.3-4.9-7.2-7-11c4.1-3.8,5.1-3.9,8-0.5c0.2,0.2,0.2,0.6,0.4,0.9c1.4-6.2,4.9,2.1,6.7-1.6c-0.6-0.4-1.8-0.2-2.6-0.6       c-0.8-0.3-1.5-0.8-1.4-1.8c0.1-0.8,0.7-1.1,1.3-1.3c5.7-2,9.8-6.6,15.3-9.1c1.8-0.5,3.6-0.5,5.4-0.5c2.8,0.3,5.7-0.3,8.5,0       c1.6,1.1,1.1,2.9,0,3.2C505.4,396.7,505.9,398.8,506,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M494,394c-4.7,3.9-9.3,7.7-16.2,9.9c2.8,0.4,4.7,0.7,6.8,1c-0.3,1.3-0.6,3.9-1.7,3.4       c-2.1-0.9-5.5,1.3-6.1-3.4c-0.9,2.3,0.9,3.7-0.7,5.7c-1.4-6-4.8-6.4-9.2-3.6c0-0.3,0-0.6,0-1c-1.6-0.9-1.8-2.9-3-4       c-0.7-0.7-1.3-1.3-2-2c-0.6-0.7-0.6-1.4-0.2-2.1c0.8-0.7,2-1.3,2.7-0.8c3.3,2.2,6.4,0.3,9.7,0.1c3.6-0.3,6.4-1.8,9.4-3.2       C487.1,393.4,490.6,391.3,494,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1614"),
                d:
                  "M462,398c0,0.7,0,1.3,0,2c-0.4,0.4-0.7,0.7-1.1,1.1c-2-1.2-2.1-3.7-3.7-5.2c-2-3.7-4-7.4-6-11.1       c-3.2-4.2-5.6-8.9-7.7-13.7c-0.1-0.8,0-1.5,0.5-2.1c0.4-0.3,0.7-0.7,1.1-1c0.4-0.3,0.9-0.3,1.3,0c3.2,4.4,4.9,9.5,7.6,14.2       c1.4,2.3,2.4,4.7,3.8,7c0.3,0.5,0.6,1.1,0.9,1.7c0.8,1.7,2.3,3,3.1,4.7C462,396.3,462.1,397.2,462,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M486,430c3.3-1.7-2.4-3.5,0.1-5.3c5.7,1.7,8.2,5.3,6.9,11.3C489.7,435.1,486.5,434.2,486,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M481,426c1.7,1.3,3.3,2.7,5,4l-0.5,0l-0.5,0c-1,0.8-2,0.7-3,0C480.8,428.9,479.6,427.8,481,426z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882E3B"),
                d:
                  "M470,417c-2.9,0.1-2.5-2.3-3-4C468.8,413.7,469.1,415.6,470,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1325"),
                d: "M464,402c1.8,0.7,2.2,2.5,3,4C463.5,406.5,465,403.4,464,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d: "M482,430c1,0,2,0,3,0C484,433.2,483,431.6,482,430z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("F2A9AF"),
                d:
                  "M395.6,393.9c-0.5,0.1-1,0.1-1.5,0.2c-1.2-0.1-2.4-0.1-3.4,0.7c-3,1.7-5.9,3.1-9.4,1.3       c-1.1,0-2.2-0.1-3.3-0.1c1.6-2.9,2.6-6.9,7.2-3.4c0.5,0.4,1,0.1,1.3-0.2c3.9-4.2,9.1-3.7,14.3-3.6c-0.6-2.7-4.3-2.2-3.8-5       c0.4-0.4,0.9-0.6,1.4-0.8c6-0.8,12-0.4,18-0.3c0.9,0.1,1.7,0.3,2.4,0.7c1.3,1.1,0.9,2.4,0.2,3.6c-1.5,2.1-4.3,2-6.2,3.4       c-2.5,0.7-5.2,0.9-7.7,1.4l0-0.1C402.2,394.2,398.6,392.9,395.6,393.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4303B"),
                d:
                  "M381.3,396.1c3.1-0.4,6.3-0.9,9.4-1.3c-0.2,3-2.8,2.7-4.7,3.1c-1.6,0.4-3.3,0.1-4.9,0.1       c-0.6,0.8-1.3,1.6-2.4,1.3c-1-0.3-1.2-1-0.5-1.9C379.1,397,380.2,396.6,381.3,396.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2E3F"),
                d:
                  "M378,397.4c0.5,2.4,1.9,0.8,3,0.6c-0.4,2.6-2.4,1.8-4,2c-0.3-0.7-0.7-1.3-1-2       C376.7,397.8,377.4,397.6,378,397.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("72252D"),
                d:
                  "M157,545c0-0.3,0-0.7,0-1c4.1-1.1,8,0.5,11.8,1.3c8.8,1.8,17.6,3,26.6,3.8c0.6,0.1,1.1,0.6,1.7,0.9       c-7.6,0-15.2,0-22.7,0c-4.2,0-8.2-1.8-12.7-0.1C157.5,551.4,156.9,548.2,157,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651322"),
                d:
                  "M136,524c1.9,1.1,3.4,2.9,5.7,3.6c1,0.3,3.5,1,2.3,3.4c-2.1-0.7-4.2-1.6-6.4-2.1       C134.1,528.1,134.4,526.3,136,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M718,461c4-0.8,7.2-4.4,11.8-2.9c0.2-1.9-2.2-0.5-2-1.9c0.2-1,1.1-1.1,2-0.8c1.6,0.6,2.5,1,3-1.5       c0.5-2.6,3.7-3.3,5.7-4.2c3.5-1.5,3,2.6,4.5,4.2c0.4,0.5,0.1,3,2.1,1.1c3.6-3.5,8.2-3.6,13.2-2.8c-1.3-2-3.7-0.4-4.7-2.7       c2,0.1,3.7,0.3,5.5,0.4c1.2,0,3.1,0.9,3.3-1c0.3-1.7-1.5-1.8-2.9-1.9c-0.8,0-1.6,0-3.5,0c2.5-1.8,3.9-6.2,5.1-4.7       c2.6,3.2,7.6-2.7,8.4,3.1c2.2,0.4,1.7-3.3,3.5-2.6c2.7,1.1,6.3,2.3,7.5,4.6c2,3.5,2.7-0.7,3.9,0c0.6-4.4,4-3.4,6.9-3.5       c2.2-0.1,4.4,0.4,6.6-1.3c-0.3,3.1-2.9,1.7-4.1,2.8c4.8,1.9,9.1-0.2,13.3-1.4c2-0.6,5.9-1.1,3.7-5.2c-0.4-0.8-0.3-1.6,0.6-2       c1-0.5,1.7-0.3,2.7,0.3c1.9,1.2,1.2,3.8,3.5,5c1.2-1.7-0.1-4.5,2.5-5.3c1-0.3,1.5-2.4,2.8-1.1c1.5,1.5-0.4,1.8-1.2,2.4       c-1.6,1.1-2.1,2.4-0.1,3.4c0.8,0.4,2.7,1.8,2.4-1.4c-0.2-2.1,1.2-4.4,2.1-6.5c0.3-0.8,1.4-1.8,2.3-0.5c1.3,1.8,4.3,3.9,6.4,3.8       c3.5-0.1,4-2.6,3.3-5.2c-0.3-1.2-1.2-2.3-0.5-5c0.6,4.3,7.6,4.2,3.6,9.9c2.7-0.1,4.1-1.7,4.5-3.5c0.5-2.7-2.4-2.9-4.4-3.9       c5.2-3.1,6.5-9.8,3.2-15.6c-0.1,0.6-0.2,1.1-0.2,1.5c0.1,1,1.4,2.4-0.8,2.6c-1.3,0.1-1.5-1.2-1.4-2.2c0.4-3.3-0.7-6-3.6-8.1       c1.4,3.4,0.8,6.3-1.6,8.9c-0.7,0.7-1.2,1.8-2.4,1.2c-1.2-0.6-2.6-1.6-2.2-3c0.6-2.1,1.4-1,1.9,0.3c0.2,0.3,0.7,0.5,1.1,0.9       c-0.1-4.6-1-5.4-4.6-4.3c-1.3-1.6,2-2.3,0.4-4.2c-2,1.4-5,1.6-2.1,5.5c2.9,3.8,1.6,11.3-2.2,14.3c0.3-3.3,4.1-6.4,0-9.1       c4.1-3.1,0-2.8-1.4-4c-0.6-0.4-0.4-2.3-0.1-3.3c1.1-2.8,0.8-5.2-1.2-7.4c1.5-1,4.6,0.6,4.3-2.1c-0.2-2.1-2.8-1-4.3-1.1       c-2.6,0-2.6,0.1-2.6,6.6c-1.3-4.8-4.6-5.4-7.3-6.1c-1.6-0.4-5.5-2.9-5.3,2.8c-0.9-0.9-1.3-1.2-1.3-1.4c0.1-1.6,1.2-4.1-0.6-4.4       c-2.8-0.5-0.6,2.6-1.6,3.7c-1.1,1.2,0.6,3.9-2,4.5c-1.1-0.4-0.5-0.9-0.4-1.5c1.3-6.9,1.2-7-5.7-5.5c-1.2,0.3-1.7,0.4-2.3-0.6       c-0.7-1.2-1.3-2.5-3-1.6c-1.1,0.7-1.2,2-1.4,3.1c-0.5,2.6,1.6,1.2,2.5,1.6c1.7,0.8,2.5,2.4,4.1,5.1c-4.3-2.5-7.6-3.7-10.3,0       c-2.1-1.5-0.4-3,0.5-5.1c-2.8,1.5-4.7,2.5-6.5,3.5c-1.5,0.8-3.7,0.3-3.7-1c0.2-5.1-2.8-1.6-4.4-1.9c0.2-1,0.5-1.9,0.9-3.6       c-2.8,2.2-5.6,2.9-8.7,3.8c-0.1-1.9-0.1-3.6-0.3-5.4c-0.1-1.6-1.5-2.1-2.7-2.5c-0.6-0.2-1.4-0.2-1.6,0.6       c-0.3,1.3,2,1.3,1.6,2.7c-3,0.1-8.4-4.2-7.2-5.8c1.5-2,3.3-3.9,4.6-6.1c-2.9,0.8-6.8-1.6-8.2,3.2c-0.5,1.6-2.2,0.6-3.3-0.3       c-2.1-1.7-4.6-2.4-7.3-2.8c-0.4,2.6,2.3,1.7,2.9,3c-0.4,2.2-2.4,0.1-3.2,1.2c0.7,3.1,7.7,0.3,5.6,6c-1.8,1.6-3.9,2.1-6.3,1.4       c0.2-2.3,2.9-1.9,4-3.7c-3.3-1-6.9-1-9.3-3.7c0.4-1.6,3.5-0.8,3-3.7c-2,0.9-5.6-0.5-4.5,4.2c0.2,0.7,0.2,2.6-1.3,1.3       c-3-2.7-0.7,3.1-3.4,1.1c-0.8-1.3,0.7-4.5-2.4-5.7c-2-0.8-3.9-3.8-5.4-2.8c-3.2,2.1-7.4,1.8-10.2,4.5c-1.9,1.9-7.7,1.2-9.2-1       c-1.9-3.1-4.1-3.3-7.9-0.5c3.1,0.6,6,1.1,7.6,5.2c-3.5-2.2-7-2.5-8.8-5.4c-1.7-2.9-3.6-2.7-5.9-1.1c-0.7-0.8-1.6-1.3-2.7-1.4       c1,0.2,2,0.6,2.7,1.4c-4.5,2.1-8.9-1.6-13.3-0.5c-4,1-8-3.7-12,0c-7.8-2.5-15.5,0.3-23.3,0.3c-4.7,0-4.5-0.3-7.1,3.4       c-1.2,1.7-3.9,1.3-5,0.5c-2.9-2.1-6-1.5-9.1-1.7c-3.2-0.2-5.2,0.4-3.6,4.4c-2.3-0.8-1.1-3-2.5-3.9c-1.8,0.1-0.7,2-1.9,2.8       c-0.8-1.4-1.5-2.9-2.3-4.3c1.3-1.9,3.2-2.2,5.3-2.3c4.8-0.1,9.5-1.3,14.4-1.2c0.5-0.2,1-0.3,1.6-0.3c2.1,0.1,4.2,0.4,6.2-0.3       c25.5-3.1,51.1-4.1,76.6-6.1c12.9-1,25.9-2.1,38.8-3.1c2.3-0.2,4.7-0.2,7,0.1c4.3,0.5,8.4,2.1,13,0.2c2.3-1,5-0.5,7.8,0.1       c3.8,0.9,7.7-0.9,11.5-1.5c11.5-1.9,23-2.1,34.6-1.9c1,0,2,0,3,0.4c2.2,0.8,2.1,2.1,0.9,3.5c2.7-2.8,5.5-5.2,9.3-1.2       c0.1,0.1,0.1,0.1,0.2-0.2c2.6-4.4,8.7-5.7,12.6-2.5c1.3,1,1.9,2.1,4,1c2.3-1.2,3.5,1,4.4,2.9c1.2,2.5,1,3.1-1.5,4.9       c0,0.4,0.3,0.6,0.7,0.5c2.1-0.8,3.5,2.7,5.2,1.1c2-1.9,3.2-4.6,3.1-7.7c0-1.7,0.1-3.4,1.1-4.8c0.8-1.2,1.6-0.8,2.3,0.3       c2.2,19.6,6.3,38.9,7.7,58.6c0.3,4.7,2.5,9.3,1,14.2c-10.9-4.6-21.4,0.6-32,1.7c-8.7,0.9-17.5,1.7-26,3.8       c-1.6,0.4-3.3,0.3-4.9-0.1c-1.2,0-1.2-1.8-2.7-1.9c1,0.7,1.9,1.2,0.9,2.3c-1.5,1.1-3.3,1.5-5.2,1.7c-27.3,3.8-54.6,8-81.8,12.8       C722.3,462.4,720,462.8,718,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M812,446c11-0.7,21.8-2.6,32.7-4.4c8.1-1.3,16.2-2.4,24.3-3.6c3.3-0.5,6.2,0,7,4       c2.6,4,1.8,8.8,3.2,13.1c-0.3,5.3,1.6,10.5,0.8,15.8c-0.4,0.7-0.7,1.6-1.8,1c-0.8-0.4-1-1.3-1.2-2.1c-1.6-6.9-2.6-14.1-9-19.1       c-1,0.4-2.1,3.8-4.5,1.9c-2.3-1.8-1.3-4.4,0.4-6.9c-2.7,0.5-2,4.3-4.8,4.1c-1.8-2,0.7-4,0.2-5.9c-0.2,1.8-0.4,3.9-1.5,5.3       c-1.4,1.7-1.8,2.9-0.6,5c0.9,1.5,0.5,3.3-2.3,2.9c-2.4-0.3-6.3,3-6.1-2.8c-3,0.7-3.5-2-5-3.5c-1.2-1.3-5.1,0.2-5.2,2       c-0.1,2.1-1.2,3.4-2.8,4.3c-1.3,0.8-2,1.8-1,3.3c0.6,0.9,0.9,1.9-0.1,2.7c-1.3,0.9-2.6,0.6-3.7-0.4c-0.9-0.8-0.8-1.3-2.2,0       c-3.5,3.3-2.8-4.6-6.2-3c-1.1-2.3,0.4-3.3,2.1-4.4c1.4-0.9,3.4-0.2,4.6-1.5c-2.8-0.1-4.9,1.6-7.1,2.9c-1.7,1-3.4,0.7-4.4-1       c-1-1.7,0.6-2.2,1.7-2.8c-1.6,0.2-2.2,1.6-3.1,2.7c-0.3,0.4-0.7,1.1-1,1.1c-5-0.7-9.1,4.3-14.3,2.5c-0.5-0.2-1.2-0.7-1.3-0.5       c-2.5,5.8-7.5,1-11.1,2.5c-3,1.2-7.3-0.2-7.3,5.6c0,1.7-2.3,4.3-4.2,5.9c-1.5,1.3-3.3,2.3-4.4-0.3c-0.5-1.1-0.5-1.3-1.4-0.3       c-0.7,0.7-3.3-1.6-2.7,1.8c0.1,0.7-2,0.8-3.1,1c-2.1,0.2-4.3,0.1-6.4,0.7c-1.2,0.3-2.2,2.2-3.5,0.9c-1.3-1.3-1-3.1-0.5-4.7       c0.2-0.8,0.8-1.4,1.9-2c-1.9-0.2-3.8-0.5-4.5,0.7c-2.2,3.6-5.8,4.5-9.4,5.8c-1.2,0.4-2.2,2-3.4,0.5c-1.1-1.5-0.6-2.8,1-3.7       c1.5-2,4-1.9,6.2-3.3c-2.9,0-5.8,0.3-4.7-4.1c-0.9,2.6,0.6,5.2-1.4,7.3c-1.8-0.3-3.3-2.1-5.5-0.6c-1.4,0.9-3.3,0.7-4.4-1       c-1.2-1.9,1.2-2.3,1.9-3.8c-3-1.2-5.6-0.7-7.8,1.3c-3,2.9-5.2,0.9-7.6-0.2c1.1,2.8,3.8,2.5,6.1,1.7c1.5-0.5,2.7-1.3,4.1-0.2       c1,0.8,2.5,1.2,2.5,2.8c0,1.4-1.2,1.8-2.3,2.3c-0.7,0.4-1.5,0.7-2.3,1.1c-0.4,0.2-0.9,0.3-1.3,0.5c-2.4,0.8-5-0.2-6.7-0.9       c-4.4-2-8.1,1-12,1.3c-4.4,0.2-4.6-1.6-5.5-4.7c-2.9,1.7-5.6,3.6-9.1,2.7c-1.4-0.4-3.4,1.2-4.1-0.5c-0.9-2.1,1.6-2.8,2.7-4.1       c-4.4,5.8-10.2,5.9-16.6,4.7c-2.3-0.4-4.6-0.4-6.9,0.7c-2,0.9-3.3,3.3-6.1,0.1c-1.6-1.8-1.7,1.4-1.7,2.8       c-0.2,0.7-0.6,1.2-1.4,1.4c-2.7-2.2-6.5-2.8-8.5-5.9c3.8-4,9-2.1,13.5-3.2c1.2-0.3,2.6,0.3,3.8-1c0.3-0.1-0.3,0-0.3,0       c-1.6,1.6-3.2,1-4.8-0.2c4.4-2.2,9.2-2,14-2c0.5,1.7-1.3,1.2-1.8,1.9c-0.4,0-0.5,0.1-0.3,0.4c0-0.3,0.2-0.5,0.6-0.6       c4,1,7.1-1.5,10.5-2.7c6.5-1.3,13-2.7,19.6-3.9c4.8-0.9,9.6-1.4,14.4-2.1c12-1,23.7-3.9,35.7-5.3c10.8-1.3,21.5-3.2,32.2-5       C794.6,449.3,803.6,449.2,812,446L812,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M538.8,403.3c-0.6-0.4-1.5,0-2-0.9c1.6-0.9,1-4.4,2.2-3.8c4,2.1,2.4-1.1,2.9-2.4       c0.3-0.7,0.7-1.4,1.1-2.1c4-1.9,8.1-3.7,12.6-4.3c9.7-2.1,19.7-2.2,29.5-3.1c3.6-0.4,7.2-0.9,10.8-1c2.4-0.1,5-0.5,7.1,1.4       c-1.8,1.4-3.8,1.7-6,1.5c-3.7-0.3-6.9-0.6-8,4.6c-0.4,2-4.3,3.1-6.6,0.5c-1.8-2.1-3.6-2.1-5.5-0.5c-1.8,1.5-3.8,0.6-5.7,0.9       c-1.5,0.3-3.4-1-4.5,0.9c-1.2,2.1,0.8,3.3,1.5,4.8c0.4,0.8,1.3,1.3,2,1.9c-1.2,0.8-2.4,1.9-3.9,0.4c-2.9-3-11.7-2.9-12.1,0.4       c-0.5,4.6-7.1,5.4-5.2,10.5c-2.2,0.1-4.6,3.6-6.8-0.8c1,3.8-4.9,6.1-1.2,9.8c-0.2,2.7,0.8,5.7-1.9,7.5       c-2.3-0.3,0.8-4.1-2.3-3.2c-2.5,0.6-0.9,2.5-0.8,4.1c0.1,2,1.2,4.3-0.9,6c-0.8,0.7-2.3,1-1.9,2.6c0.6,1.9,2.5-0.5,3.5,1.3       c-2.5,1.5-5.8,1.6-7.9,4.1c-1.3,1.5-2.3,0.6-2.5-1.7c-0.1-1.5,0.3-7.6-3.9-1.8c-0.2,0.3-0.5,0.4-0.8,0.6c-3-5.5-5.3,0.7-8,0.8       c-5,0.2-9.4-1.1-14.2-2.6c-0.2-1.1,2.8-0.8,1.9-1.6c-1.7-1.7-3.7-3.2-6.4-3c-0.7-3.4,3.2-4.9,3.2-8.2c2.3,1,1.4,3.1,1.8,5.2       c1.8-2.9,5.6-2.4,6.8-5.8c1.1,2.8,1.1,2.8-1.2,7.1c1.8,0.6,2.4-0.8,3-1.8c1.8-3,3.5-5.9,6.6-7.7c1.3-0.7,1.6-1.9,1.7-3.4       c0.1-1.2-2.8-1.6-0.7-2.9c0.9-0.5,2.1-1,3.3-0.3c2.2,1.4-0.8,2.6,0,4.3c2.4-1,5.2-1.3,6.3-4.9c-1.9-0.1-3.9,1.5-5.6-0.4       c-0.8-1-3.1,0.5-3.5-1c-0.7-2.5,2.3-1,3-2.2c0.8-1.5,2.5-2.6,1.8-4.9c-0.9-3,2.9-3.1,3.5-5.3c1.4,0.8,3.6,0.7,3.6,3.2       c-0.4,0.4-0.6,0.5-0.8,0.7c0.2-0.2,0.4-0.4,0.6-0.6c0.6-0.3-0.2-0.8,0.3-0.3c0.1,0.1,0,0.2-0.2,0.2c1,0,2,1.2,2.7,0.1       c1.3-1.9-1.3-2.5-1.7-4c2.4-0.8,4.1,0.9,6,1.7C537.2,404.5,538.7,405.7,538.8,403.3c2.3-2.2,4.9-0.6,6.4-2       C543.5,402.4,540.7,400.9,538.8,403.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M661,470c2.1,0,4.1,0,6.2,0c-5.5,4.6-12.8,0.6-18.2,5c-0.6,0.6-1.8,0.4-2.2,0.9       c-4.8,6.1-11.1,5.5-17.6,4c-0.6,0.3,0.2,0-0.4,0.2c0.2-0.2,0.5-0.2,0.8-0.4c1.6,0.4,3.1,1.3,4.8,1.5c1,0.1,2,0.5,1.9,1.8       c0,1.2-1,1.6-2,1.9c-2.3,0.5-4.6,0.1-7.3,0.5c-0.3,1.1,2.3,2.3,0.4,3.5c-3.4,2.1-6.6-0.3-9.5-0.4c1.6,1.9,6.2-0.5,6.7,3.8       c0.3,2.6-2.5,1.4-3.7,2.3c-7.6,1.1-13.5-1.2-16.1-6.1c-2.7-1.6-2.7-1.6-2.3-5.5c-2.2,4.5-4.6,3-6.7,1.4c-2-1.5-1.5-3,0.3-4.3       c12.1-1.9,24.1-4.2,36.2-5.4C641.9,473.6,651.3,471.1,661,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721524"),
                d:
                  "M603,387c-16.1,0.5-32,2.3-48,4c-2.2-0.7-5.8,1.8-6.3-2.8c3.4-3.7,8.5-2.5,12.5-4.5       c2.8-0.5,5.3-2.4,8.3-2.2c1.9,0.7,3.8,0.8,5.9,0.5c9.2-1.3,18.5-2.2,27.8-2c3.2,1,6.5,0.7,9.8,0.5c5.1-0.3,9.6,1.5,14.1,3.4       c-4.3,1.6-8.9,1.4-13.3,1.9c-2.6,0.3-5.2,0.4-7.7,1.1C605,385.8,604,387.3,603,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741523"),
                d:
                  "M596,480c0.1,1.4-2.7,4.5,2.1,2.9c1.6-0.5-0.7,1.9,0.7,2.6c1.6,0.2,0.9-1.2,1.3-1.9       c1.3-2.2,2.7-0.5,4,0.1c1.6,0.8,0.8,1.4-0.2,2.4c-2,1.8,0.9,1.3,1.2,2c0.3,0.2,0.3,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3       c-3.9-0.7-8-2.6-10.7,2.2c-1.3-3.6-6.8-4.5-14.3-2.2c-1.1-1.2-3,0.2-4.1-1.2c0-2.2,2.3-3,3-4.8c1.1-1.4,2.6-0.8,4-1       c3,2,5.5,0.5,8-1C592.4,479.4,594.3,480.2,596,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M773.1,402.1c-0.3,5.2-8.7,5-6.6,11.3c-3.8-3.2-3.8-5,0-7.5C768.6,404.4,769.8,401.4,773.1,402.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M549,424c-2.2-1-1-4.6-4.2-5.1c-1-0.1-0.2-1.6,0.8-2.1c1.6-0.9,3.5-1.4,3.4-3.7c4,0.9,0.5,3.4,1,5       c-0.4,0.6-3.2-0.5-1.3,1.1C551,421.1,549.3,422.4,549,424L549,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M684,467c0.2,0.3,0.6,0.7,0.6,0.7c-2.2,2.6-9.1,3.9-11.5,2.3l0,0c0.7-0.7,1.3-1.3,2-2       C678,467.7,681,467.3,684,467z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M579,483c2,2.7-2.3,2.5-1.3,5.6c-0.1-0.1,1.8-1,2.3,0.4c-2.1,0-4.2,0-6.7,0c2.2-1.8,1.3-3.9,0.7-6       C575.7,483,577.3,483,579,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M591,481c1.2,0.1,2.3,0.3,2.7,2c-3.4,0.4-6.7,0.7-10.1,1c-3,0.3-1.2-1.1-0.6-2       C585.7,481.7,588.3,481.3,591,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M753.8,403.5c1.7-1.2,0.3-4.7,3-4.5c0.8,0,2.5,1.3,2.1,2.9C758.1,405,755.2,402,753.8,403.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M772.4,415.1c-0.4-1.3-0.8-2.5-1.1-3.7c-0.3-1-0.3-2.1,0.7-2.6c1.4-0.8,2,0.7,2.7,1.4       c1.2,1,0.5,1.6-0.7,2C772.6,412.6,773.5,414.4,772.4,415.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M553.1,421.8c-1-1.3-3-2.4-2.1-3.9c1.8-2.8,4.5-2.4,3.3-0.6C553.3,418.8,554.1,420.4,553.1,421.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M540.9,421.7c2.3-1.1,3.9-0.9,4.8,1.2c0.8,1.9-0.6,3.4-2,2.1c-0.6-0.5-0.6-1.5-1.1-2.2       C542.3,422.4,541.6,422.2,540.9,421.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M769.8,412.7c0.3,0.3,0.7,0.6,0.9,1c0.2,0.7-0.1,1.3-0.8,1.5c-0.7,0.2-0.8-0.4-0.8-0.9       C769,413.7,768.9,413,769.8,412.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M747.8,397.9c-0.2,0.1-0.6,0.6-0.9,0.5c-1-0.3-0.8-1.2-0.8-2c0-1.1,0.7-0.3,0.9-0.2       C747.7,396.4,747.9,397,747.8,397.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M754,396.6c-0.3,0.3-0.5,0.8-0.9,0.9c-0.6,0.1-0.9-0.4-0.7-0.9c0.2-0.4,0.7-0.6,1-0.9       C753.6,395.9,753.7,396.2,754,396.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M549,424c0.8-0.1,1.6-1.3,2.5-0.3c0.1,0.1,0,0.7-0.1,0.8C550.4,425.2,549.6,424.8,549,424L549,424z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1E2D"),
                d:
                  "M1458,497c-3.9,2.8-7.4,6.8-12.9,5.9c-2.7-0.4-5.5-2.5-7.8,0.8c-6.4-3.6-14.3,0.1-20.5-4.1       c-2.9-2-6.2-0.7-9.2-2.1c-2.9-1.4-6.1-2.4-9.7-0.1c-2.2,1.4-4.7-1.7-6.9-3.3c0-2,0-4,0-6c1.8-4.2,5.5-2.4,8.3-2.2       c6.8,0.5,13.4,2,20.2,2.9c0.7,0.1,1.2,0.6,1.5,1.2c3.5,1.7,7.3,1.3,11,1c6.1,1.7,12.5,2.1,18.7,3.7c2.9,0.8,4.6-2.7,7.4-1.7       C1458,494.3,1459,495.7,1458,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1825"),
                d:
                  "M1458,493c-5.5,5.3-11.9,1.6-17.8,1.2c-2.6-0.2-6-0.8-8.3-3.2c2.3-0.3,3.7-1.9,5.5-3.1       c-1.3-1.8-2.9-0.2-4.3-0.7c2.4-3.6,9.7-3.4,12.3,0.8c1,1.6,1.5,2.3,2.9,1.9c1.4-0.4,4.3-0.1,2.7-3.3c-0.1-0.1,1.6-1.2,2.6-1.8       c1,2.4-0.2,7.4,5.1,3.8c1.1-0.7,1.4,1.1,2.3,1.4C1460.4,491.4,1459.3,492.3,1458,493z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1924"),
                d:
                  "M1421,490c-8.7-1.2-17.4-2.2-26-3.6c-1.9-0.3-2.6,1.2-3.9,1.6c0.3-1.8,0.7-3.6,2.9-4       c0.6-0.1,1.3-0.2,1.6-0.9c1.7-3.9,2.3-4.6,5-2.3c4.1,3.6,8.8,2.3,13.2,3.1C1417.3,484.7,1419.4,487,1421,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13B46"),
                d:
                  "M1389,590c0-0.7,0-1.3,0-2c1.2,0.2,3.2-0.4,3.1,1.4C1392,590.5,1390.1,589.8,1389,590z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B3642"),
                d:
                  "M1385.9,579c0.6,5.7-0.7,11.3-1,17c-3,4-6.9,4.8-11.5,3.4c-2.5-0.8-5-1.8-7.5-2.5       c-2.7-0.8-5.2-0.6-7.7,0.5c-0.5,0-1-0.1-1.4-0.3c-0.7-1.3-1.2-2.2-3.2-2.4c-4.9-0.4-9.8-2.5-14.6-2.7       c-10.4-0.5-20.3-4.4-30.8-4c-2.7,0.1-5.3,0-7.5-1.8c-0.6-1.4-0.2-2.3,1.3-2.7c0.6-0.9,2.7,2.3,2.5-0.9c1.2-2,3.3-0.8,4.9-1.4       c1.5,0.1,3.6-0.7,3.4,2.1c0,0.2-1,1,0,0.6c4.4-1.9,9.7,1,13.7-3c1-1,3.7-0.9,3.5,0.9c-0.4,4.4,2.5,2.9,4.4,3       c4.3,0.3,8.6-0.6,12.6,1.8c1,0.6,2.3,0.5,3.4,0.1c5.7-2.5,11.7-1.3,17.5-1.5c2.3-0.1,5.3,0.1,5.3,4.3c0,1.9,3.1,1.9,5,2.1       c1.7,0.2,2.9-0.3,3.2-2.3c0.2-1.1,0.3-2.3,0.7-3.4C1383.9,583.8,1382.6,580.1,1385.9,579z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1382.1,619.2c-0.6,0.7-1.3,1.3-1.9,2c-2.5,1.8-5.1,1.6-7.8,0.7c-3.8-1-7.7-0.4-11.6-0.4       c-2.9,0-5.9,0.1-8.8-0.4c-6.2-1.4-12.4-0.4-18.6-0.6c-16-0.1-32-1-48-2.3c-2.1-1-4.2-1.5-6.3-0.2c-6.6,0.7-13.2-0.7-19.7-1.2       c-1.5-0.8-4.1-0.8-3.5-3.3c0.4-1.9,2.6-1.8,4.2-1.8c3.9-0.1,7.9,0,11.9-0.1c3.4,0,6.8-0.3,10.2,0.4c1.6,0.4,3.2,0.7,4.9,0.7       c16.2-0.2,32.3,1.7,48.5,1c0.8,0,1.6,0.1,2.4,0.3c1.9,0.8,3.7,1.7,5.7,0.3c1.2-0.3,2.4-0.3,3.7,0c9.3,2,18.8,0.3,28.2,0.9       C1378.3,615.3,1381.6,614.9,1382.1,619.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1D2B"),
                d:
                  "M1384,603c-2.3,4.5,0.8,9.4-0.9,14c-4-3.2-8.8-1.5-13.2-2.2c-2-0.3-4.3,0.4-6.1-1.3       c-0.3-0.4-0.5-0.8-0.7-1.2c-0.4-3.9,2.9-5.3,4.4-7.9c-2.3-1.1-5.1-2.8-8.5-3.4c-1.1-0.2-2.3-0.5-2.3-2.1c2.3-2,4.9-0.8,7.5-0.7       c0.5,0,0.9,0.1,1.4,0.3c3.7,2.5,9.4,0.8,12.1,5.8c0.5,0.9,1.4-0.2,2.1-0.5C1381.2,603.3,1382.4,602.2,1384,603z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA333E"),
                d:
                  "M1352,620c3,0,6,0,9,0c3.9,1.4,8.1-0.3,12,1c2.4,0.9,4.8-0.3,7.2,0.1c-0.1,1.3-0.8,2.3-2,2.9       c-5.5,1.5-11.1-0.5-16.6-0.1c-6.8,0.4-13.7,0.1-20.5,0.1c-1-1.4-1.3-2.8,0-4.2C1344.7,619.5,1348.4,619.1,1352,620z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43D4B"),
                d:
                  "M1385.9,579c-1.8,2-0.3,5.4-2.9,7c-3.5-0.4-2.5-3-2.5-5.2c0.1-7.6,1.5-15.1,1.1-22.7       c-0.2-3.6,2.2-6.1,3.8-8.9c0.5-0.5,1-0.5,1.6-0.2c0,1.7,0.1,3.3,0.1,5C1386.9,562.3,1387.1,570.7,1385.9,579z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1364,613c5,1.1,10.1,1,15.1,1c2.2,0,4.1,0.2,4,3c-0.3,0.7-0.7,1.4-1,2.1c-0.8-2.3-3.3-2.9-4.9-2.8       c-6.3,0.5-12.5-0.5-18.8,0c-3.7,0.3-7.8,0.5-11.4-1.4c0.9-1.4,2.3-2.1,3.8-2.1C1355.2,613,1359.6,611.5,1364,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892837"),
                d:
                  "M1384,603c-2.3,1.2-4.6,2.5-6.9,3.7c-0.9-7.5-9-3.6-12.1-7.7c2.6-2.4,5.4-0.9,8-0.2       c4.3,1.2,8.3,1.1,11.9-1.8C1385,599.1,1385.2,601.1,1384,603z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912D3B"),
                d:
                  "M1384.9,597c-0.9,2.9-2.2,3.9-5.8,3.3c-4.6-0.8-9.3-1.9-14.1-1.3l0,0c-2.3-1-5-0.4-7-2       c3.5-4.6,8.2-1.8,11.2-0.4c5.7,2.7,10.6,2.8,15.7-0.6C1384.9,596.3,1384.9,596.7,1384.9,597z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3E4A"),
                d:
                  "M1387,549c-0.3,0-0.7,0-1.1,0.1c-1.6,3.5-4.6,4.8-8,5.7c-2,0.5-4.1,1.1-5.9,2.1       c-12.3,4.4-24.5,9.2-36.7,13.9c-4.1,1.9-8.5,3.2-12.6,5.2c-2.9,0.8-5.7,1.9-8.7,2.2c-3.7,0.1-3.2-2.4-3-4.8       c-0.1-2.2,0.1-4.3,3.1-3.8c5.7,0.9,10.4-0.7,15.3-3.8c5.3-3.3,11.2-6.4,18-6.4c3.9,0,7.3-0.9,8.3-5.5c0.3-1.5,1.4-2.5,2.9-1.6       c4.7,2.8,8.2-0.4,12-2.3c0.6-0.3,1-1.2,1.5-1.3c6.5-0.5,8.5-5.5,10.6-10.5c0.4-0.9,0.1-1.4,0-2c-0.1-4-0.1-8-0.1-12       c1.2-3.3-0.2-7.3,2.5-10.2c3.2,1.9,1.5,5.1,1.7,7.6c0.6,7.5,0.8,15,0,22.5C1387.1,545.7,1387,547.4,1387,549z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881927"),
                d:
                  "M1384,468c1-0.6,2-0.6,3,0.1c0,4,0,8,0,12c-1.3,0.4-1.7-0.6-1.8-1.5c-0.3-1.5-1.1-1.1-2-0.7       c-8.6,0.7-17.2,2.9-26,1.3c-3-0.7-5.8,0.1-8.7,1c-1.9,0.6-3.7,1.3-5.7,0.2c-1.7-1.7-1.1-2.9,1-3.4c1.5-0.4,3.1-0.9,4.7-1.1       c10.5-1.1,20-5.7,30.3-7.7C1380.6,467.8,1382.2,466.5,1384,468z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1387.1,544.1c-0.4-9,0.2-18-1-26.9c-0.2-1.1,0.1-2.3-1-3.1c-0.2-0.2-0.4-0.4-0.6-0.6       c-0.6-2.9-2.3-6.1,2-7.8c1.8,0.6,0.6,2.5,1.5,3.5c0,10.1,0,20.2-0.1,30.3C1387.8,540.9,1388.3,542.7,1387.1,544.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2A36"),
                d:
                  "M1384,477c0.1-0.9-0.3-2.2,1-2.4c1.1-0.1,0.9,1.1,1,1.8c0.1,1.3-0.3,2.7,1,3.6c0,0.3,0,0.7,0,1       c1,5.9,0.2,11.8,0.5,17.6c-0.3,2.5-1.4,1.7-2.4,0.5c-0.8-0.9-0.9-2.1-1.1-3.2c-0.3-2.3-0.4-4.6-1-6.9c-0.3-1.8,0.1-3.6,0.4-5.4       C1383.2,481.4,1382.2,479.1,1384,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881927"),
                d:
                  "M1387,500c0-6.3,0-12.7,0-19c2,3.7,0.8,7.8,0.9,11.7c0.2,5.5,0,10.9,0,16.4c-1-0.8-0.8-2-0.9-3.1       c-0.3-0.4-0.6-0.8-0.8-1.2c-0.4-1.2-0.4-2.4,0-3.6C1386.4,500.7,1386.6,500.4,1387,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3543"),
                d:
                  "M892.1,628.7c-2.2-0.4-1.9-2.1-2.1-3.7c-0.1-9.6,1.9-18.9,2.6-28.4c0.1-1.6,0-3.4,1.4-4.6       c1-0.5,1.5,0.2,2,0.8c1.9,3.3,1.5,7.4,4.1,10.4c0.8,4.1,0.7,8.3,0.3,12.4c-0.4,3.9,1.2,4.8,4.8,4.8c16.5-0.1,33-0.5,49.4,0.1       c14.7,0.6,29.4-0.4,44.1-0.1c2,0,4-0.1,5.9,0.9c2.9,3,6.2,5.2,10.9,5c-0.2,0.7-0.4,1.4-0.5,2.1c-5.6,0.1-11.2,0-16.8,0       C962.8,628.7,927.5,628.2,892.1,628.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M781,628c-1.1-2.7-4.6-1.7-6-4c2.1-2,4.6-1.2,7.1-1.1c3.5,0.2,7,0,10.5,0.1c-2.8,0-5.6,0.1-8.3,0       c-1.6-0.1-3.5,0.1-3.6-2.4c1.3-2.3,3.7-2,5.8-2.1c29-0.1,57.9-0.1,86.9,0c1.2,0,2.3,0.1,3.5,0.3c1.8,0.4,3.1,1.4,2.9,3.4       c-0.1,1.9-1.4,2.5-3.1,2.3c-1.3-0.1-2.6,0.5-3.2,0.5c0.1,0,0.9-0.4,1.7-0.3c3.9,0.7,6.4-0.8,7.7-4.5c0.4-1.1,1.2-2,2.3-2.6       c2.6-0.5,3,1.4,3.5,3.2c-0.4,1.6,0.4,3.5-0.8,5c-1.1,2-3,2.2-5.1,2.2C848.8,628.1,814.9,628,781,628z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3440"),
                d:
                  "M892.1,628.7c1.6-1.3,3.5-0.7,5.3-0.7c30.8,0,61.6,0,92.4,0c8,0,16,0,24,0c0-0.3,0-0.5,0-0.8       c-2.6,0-5.2,0-7.3,0c-1.3-0.9,4-4.3-1.6-2.8c-1.1,0.3-1.2-0.2,0.1-2.4c3.7-2.6,7.9-1.3,11.9-1.2c3.1,0.1,6.1,0.2,9.2,0       c0.5,0,1,0.1,1.6,0.3c2,0.7,4,1.2,5.7,2.4c2.2,2.9,5.3,3.6,8.7,3.1c3.8-0.1,7.6-0.2,11.4,0c6,0,12,0,17.9,0c2,0,4-0.3,5.6,1.4       c0,0.3,0,0.7,0,1c-43.6,0-87.3,0-130.9-0.1C928.1,628.9,910.1,628.8,892.1,628.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("531218"),
                d:
                  "M887.8,625.9c0-1.6,0.1-3.3,0.1-4.9c-0.4-9.3,2.2-18.3,2.7-27.5c0-1.3,0-2.7,0-4c0-1.5-0.4-3-0.5-4.6       c0.2-1,0.3-2,1.7-2c1.4,0.5,1,2.1,2.1,3.2c-1.1-2.7-1.7-5,0-7.3c2.9,0.5,3,3.8,4.9,5.4c1.1,0.9-1.5,1.6-2,2.7       c-0.6,1-0.6,2.1-0.8,3.2c-0.2,0.7-0.5,1.3-1.1,1.7c-2,7.4-1.5,15.1-2.9,22.6c-0.6,3.5-0.4,7.2-2,10.6c-0.1-0.7-0.2-1.5-0.3-2.5       C888.6,623.7,889.4,625.5,887.8,625.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93C4A"),
                d:
                  "M1077,628c-8,0-16,0-24,0c-0.5-3.8,2.5-3.2,4.5-3.3c6.4-0.2,12.9-0.1,19.3-0.1c7.9,0,15.9,0,23.8,0       c14.5,0.9,28.8-2.5,43.3-2.2c31.1,0.5,62.3,0.2,93.4,0.3c2.2,0,4.3-0.2,6.5,0.3c1.7,0.6,3.1,1.5,4.1,3.1c-2.5,2-5.5,2-8.5,2       C1185.3,628,1131.2,628,1077,628z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53642"),
                d:
                  "M1341,620c0,1.3,0,2.7,0,4c-24.5,0-49.1,0.1-73.6-0.1c-3.1,0-5.8,0.5-8.4,2.1c-0.7,0.1-1.5-0.1-2.1-0.3       c-1.5-1-4-1-3.9-3.7c-0.2-4.7,0.7-5.8,5.1-5.1c17.3,2.7,34.7,1.5,52.1,2.3c7.6,0.3,15.3,0.4,22.9,0.4       C1335.7,619.7,1338.4,619,1341,620z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43F46"),
                d:
                  "M1253,623c1.7,0.7,3.3,1.3,5,2c-2.2,3.9-5.2,1.5-8,1c-0.7,0-1.3,0-2,0c-1.4,0-2.9,0-3-2       c-1.9-1.5-4.1-1-6.3-1c-17.5,0-35,0-52.5-0.1c-2,0-4.5,0.9-5.7-1.8c2-3.7,5.9-3.3,9.1-3.4c5.9-0.1,11.7,1.1,17.7-0.1       c2.6-0.5,5.9-0.3,8.7,0.2c9.4,1.6,18.9,0.7,28.4,0.6C1247.9,618.8,1251,619.9,1253,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93C4A"),
                d:
                  "M1250,626c2.7-0.5,5.6,1,8-1c0.3,0.3,0.7,0.7,1,1C1256,629.9,1253,628,1250,626z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921927"),
                d:
                  "M368,325c0.7,0.3,1.4,0.5,2.1,0.8c1.1-0.2,2.4-0.8,2.9,0.6c0.3,0.7-0.7,1.3-1.4,1.7       c-7.4,1.5-15.1,1.7-22.4,4c-2.8,0.5-5.6,1.6-8.5,0.8c-1-0.3-2-0.7-2.7-1.5c-0.4-0.5-0.4-0.9,0-1.4l0-0.1       c3-9.1,10.5-6.8,16.9-6.2C359.3,324.2,363.6,324.8,368,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9A9E"),
                d:
                  "M370.8,327.1c0.6-0.2,1.1-0.4,1.7-0.6c-0.8-0.2-1.6-0.5-2.4-0.7c1.1-1.2,2.6-0.6,3.9-0.9       c0.6,0.5,2.3-0.9,2,1.2c-0.1,6.8-0.2,13.6-6.6,18.2c-1.7,0.5-3.3,1.1-4.5,2.5c-1.7,0.5-3.6,0.4-4.8,2       c-5.3,2.8-10.4,6.3-16.9,5.7c-0.4-0.3-0.6-0.8-0.6-1.3c1.7-3.3,5.2-3.6,8.1-5c1.7-0.9,3.3-2.1,5-3c3.4-1.7,6.8-3.2,10-5.3       c3.6-2.4,5.8-5.4,4.7-9.9C370.3,329,370.3,328,370.8,327.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921A2F"),
                d:
                  "M368,325c-7,1.5-14.1-0.4-21.1-0.4c-3.2,0-5.1,0.1-6,3.2c-0.4,1.5-1.4,2.2-2.9,2.2       c0.6-3.2-1.9-4.7-3.5-6.6c0.2-0.3,0.4-0.6,0.6-0.7c8.3-2.9,16.4-1,24.5,1.1c2,0.5,4.3,0.2,6.4,0.2       C366.7,324.3,367.4,324.7,368,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAAEB3"),
                d:
                  "M369,344c4.3-4.7,6.5-10.2,5.7-16.7c0-0.3,0.9-0.8,1.4-1.2c0.2,0.2,0.4,0.5,0.7,0.7       c2.4,2.7,2.4,2.7,4.3,0.2c5.9,0.7,9.6,4,10.6,9c0.4,1.9,0.3,2.7-1.9,2.8c-0.7,0-1.7,1.1-0.7,2.3c-0.4,3.2-3.6,1.6-5.1,3       c-2.2,0.8-4.6,0.8-6.8,2.2C374.1,348,371.2,346.5,369,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C04C59"),
                d:
                  "M335,333c0.3,0.4,0.6,0.7,0.9,1.1c2.1,1.5,2.4,3.7,2.1,6c-0.3,1.1-0.6,2.2-2.1,2.1       c-1.4-1.8-2.1-3.8-1.1-6.1c-0.3-0.3-0.6-0.7-0.9-1c0-0.7,0-1.3,0-2C334.3,333,334.7,333,335,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1932"),
                d:
                  "M297,352c0-1.2,0-2.5,0-3.7c1.5-0.3,0.9,1.6,2,1.7C299.3,351.6,298.6,352.3,297,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A91A32"),
                d:
                  "M334.9,336c0.4,2,0.8,3.9,1.3,5.9c1.6,2.2,2.1,4.7,1.8,7.4c-0.3,1-0.7,1.9-1.6,2.4       c-1.3,0.7-1.7-0.2-1.9-1.3c0-0.1-0.3,0.5-0.3,0.7c-0.6,3.5-3.2,4.4-6.2,4.6c-3.1,0.3-6.2,0.9-9.2,1.8c-3.9,1.2-6.8,0.3-8.7-3.5       c0-0.7,0-1.3,0-2c1-1.9,1.2-4.3,4.4-4.3c1.9,0,1.8-2.4,2.6-3.7c-0.4-1.2-0.8-2.4-1.2-3.6c1.6-1.3,4.7,1,5.2-2.4       C325.8,338.7,330.1,335.8,334.9,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A71B37"),
                d:
                  "M310,354c4,5.1,9,2,13.4,1.3c4.4-0.7,10.6,0.4,10.7-6.6c2.1-0.9-0.5,4.9,3,1.2c0.4-0.3,0.9-0.3,1.3,0.1       c0.9,1.4,0.4,2.8-0.2,4.1c-0.5,0.9-1.1,1.6-2.1,1.8c-5.5-1.1-10,2.7-15.2,3.2c-5.1,0.5-9.6,3.5-14.7,3.9       c-0.7-0.5-3.3,0-1.8-1.1C307,359.7,308.2,356.7,310,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A71B37"),
                d:
                  "M317,344c-0.5,2.3,0.4,5.6-4.1,4.9c-0.8-0.1-1.9,2-2.9,3.1c-0.1-1.3,0.3-3.5-0.3-3.8       c-2.1-1.2-2-2.6-0.7-3.9c1.4-1.4,3.8-0.7,4.4,0.4C315.7,348.8,315.8,343.8,317,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961831"),
                d:
                  "M297,352c1-0.4,1.6-1,2-2c1.6,1.2,0.5,2.5-0.4,3.2C297.9,353.8,297.4,352.7,297,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8858C"),
                d:
                  "M312.8,371.7c0.4-0.4,0.9-0.9,1.3-1.3c7.1-3.5,13.1-8.9,20.7-11.3c1,3.1-0.5,5.3-2.5,7.3       c-1,0.6-2.2,0.8-3.3,0.8c-3.1-0.1-4.5,1-5.2,4.4c-0.9,4.9-4.8,5.9-8.5,2.9c-0.2-0.7,0-1.3,0.2-1.9c0.1-0.3,0.3-0.5,0.6-0.3       c0-0.1,0-0.2,0-0.2c-0.5,0-0.5,0.5-0.8,0.8C314,373.7,312.8,374.2,312.8,371.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("642028"),
                d:
                  "M331.9,366c1.8-2,1.7-4.8,3-6.9c1.3-0.7,1.1-1.9,1.1-3.1c0.4-0.6,0.8-1.3,1.1-1.9       c0.4-0.4,0.8-0.4,1.2-0.1c0.4,0.5,0.6,1.2,0.7,1.9c0.1,0.7,0.1,1.3,0.1,2c0,0.4-0.1,0.9-0.1,1.3c-0.1,0.4-0.2,0.8-0.4,1.2       c-0.6,1.2-1.1,2.3-1.6,3.5c-0.2,0.4-0.4,0.8-0.6,1.2c-1.7,2.1-1.4,5.9-5.2,6.2c-0.1-0.5-0.1-0.9-0.2-1.4       C329.7,368.1,330.5,367,331.9,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1718"),
                d:
                  "M338.1,354c-0.3,0-0.7,0-1,0c0.6-1.3,1.1-2.6,0.8-4.1c-0.9-3.3-0.5-6.7-0.8-10.1       c-0.4-1.9-0.8-3.9-1.1-5.8c2.3-1.6-0.2-3.4,0.1-5c0.6,0.3,1.3,0.7,1.9,1c0,0.3,0,0.6,0,1c1,1.2,1.4,2.8,2,4.2       c1.4,4.5,1.5,9.2,1.2,13.9C341.1,351.2,341,353.5,338.1,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45D67"),
                d:
                  "M616.5,306.4c-1.5,0.8-2.5,0.8-3.6,0.2C613.8,305.6,614.9,306,616.5,306.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD555F"),
                d:
                  "M687.8,294.6c-0.9,0.6-1.2,1-1.6,1c-0.8,0.1-1-0.5-1.1-1.2c-0.2-1,0.6-0.4,0.9-0.4       C686.4,294.1,686.9,294.3,687.8,294.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15B64"),
                d:
                  "M733.1,293.9c1.2,0,2.5,0,3.7,0c4.3,2.1,8.8,2.5,13.5,2.1c3.1-0.3,5.8,0.7,8.6,1.7       c1.8,0.7,4.2,1.1,6.1-0.7c9.2,1.3,18.4,0.9,27.7,1.3c1.7,0.1,4.9-0.9,5.3,3.2c0.1,1.2,3.9,0.3,6,0.5c0.6,0.7,0.6,1.4,0.2,2.2       c-2.2,1.6-4.7,1.1-7,0.8c-1.6-0.2-3.2-0.4-4.7,0.5c-6.5,1.3-12.6-2.1-19.1-2c-4.4,0.1-8.8,0.1-12.9,2.1c-0.6,0.3-1.6,1-1.7,0.6       c-2-5.8-7.1-1.2-10.2-3.2c-4.4-3.3-10.8-3.8-14.9-1.3c-0.2,0.1-0.4,0.1-0.7,0.2c-1.5-0.9-3.1-1.3-4.8-1       c-2.1,0.4-3.9,0.5-5.1-1.7c-0.8-1.4-1.9-1.5-2.5,0c-0.4,1.1-0.2,2.5-1.8,2.3c-1.6-0.3-1.8-1.8-1.8-3.1c0-0.8,0-1.7,0-2.5       c4.1,0,8.2,0,12.3,0C731,296,732.8,296.2,733.1,293.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C96776"),
                d:
                  "M637,286.9c1.7,0,3.4,0,5-0.1c2.3,0.1,4.6,0.2,6.9,0.3c0,0.3,0,0.5,0.1,0.8c-4,0-8,0-12,0       C637,287.6,637,287.3,637,286.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E6646C"),
                d:
                  "M749,302c1.9,1.7,3.9,0.2,5.6-0.2c3.6-0.8,4.6,0.2,3.9,4.3c1.4-3.5,3.1-3.2,6-3.1       c3.5,0.1,7.1-0.3,10.8-0.4c5.8,0,11.1,2.5,16.7,2.4c2-1.8,4.1-0.4,6.1,0.1c4.9,1.1,10.1,0.7,14.9,2.6c0.7,0.9,0.7,2.2-0.2,2.6       c-3.3,1.4-6.6,3.9-10.1,3.6c-3.5-0.3-6.8-0.1-10.3,0.1c-2.8,0.2-5.9,0.1-8.3-1.2c-7.4-3.9-14.2-2.8-21,1.2       c-5.9,0.9-11.8-0.1-17.7,0.2c-4.1,0.2-8.2,0.3-12.3,0.8c0.6-4.3-1.2-5-5.4-4.9c-8.2,0.2-16.4,2.2-24.5,1.6       c-3.4-0.3-8.1,0.9-10.9-3.1c-0.1-0.2-1.3,0.1-1.7,0.5c-1.9,1.5-3.7,1-5.6,0c-0.7-4.4,1.7-6.2,5.3-4.9c5.9,2.1,12-1,17.8,1.3       c0.7,0.3,2-0.9,3-1.5c1.7-0.9,3.8-1.8,5.2-0.6c5.3,4.8,10.6-1.3,15.9,0.2c0.1,0,0.6-1,0.9-1.6h0c3.7-1.1,7.6-1.9,11.3-0.4       C746,302.3,747.6,300.8,749,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E96970"),
                d:
                  "M763,314c3.4-4.9,13.6-6.9,19.1-3.8c4.9,2.8,9.9,4.8,15.2,0.8c0.3-0.2,1-0.1,1.2,0.1       c5.6,4.9,9.4-2,14.2-2.2c0.1,0,0.2-0.6,0.3-0.9c1.1-1.3,2.8-1.6,4.1-2.6c0.9-0.4,1.8-0.4,2.8-0.1c2.1,1.4,5,1.4,6.1,4.9       c0.8,2.3,3.8,1.7,6.1,0.8c5.6-0.3,11.3-1.1,16.8,1.1c2.9,1.2,5.4-1.6,8.3-0.8c0.4-0.5,1,1.7,1,0.1c0.1-1.9-0.8-3.9,2-4.4       c0.8,0.8,0.9,1.8,1.1,2.8c0.2,2.3,0,4.6,0.3,6.9c0,0.5-0.2,1-0.6,1.4c-3.2,1-3.9,0.8-9.1,0.4c-5.9-0.4-12,0.4-17.9-0.6       c-11.2-1.8-22.6-1-33.8-2.9c-5.7-0.9-11.3,0-17-0.4c-1.9-0.1-4.3,0.1-6.5-0.3c-1.2-0.2-2.3-0.5-3.3,0.3       c-2.1,1.6-4.1,2.7-6.2-0.2C766.1,312.8,764.1,317.3,763,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB747D"),
                d:
                  "M860,330c-6-2.1-12.4-0.9-18.6-1.8c-11-1.7-22.2-2.4-33.4-3.3c-5.6-0.5-11.2-1.4-16.9-1.1       c-2.2,0.1-4.1-1-6.1-1.8c1.6-3.4,4.9-1.5,7.1-1.7c5.1-0.5,10.4-0.4,15.5,1.4c0.5,0.2,1,0.3,1.5,0.3c15-0.7,29.8,3,44.9,2.4       c2.9-0.1,5.6-0.7,7.2-3.5c0.2,0.2,0.4,0.5,0.6,0.7c0.8,2.9,1.4,5.7-0.7,8.4C860.7,330,860.3,330,860,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761819"),
                d:
                  "M860.1,309.7c0-0.9-0.1-1.8-0.1-2.7c-0.6-0.7-0.6-1.4,0-2c0.3-1.3-0.3-3.1,2.1-2.9       c0.6,2.3-0.3,4.9,0.9,7.1c1.8,1.5,1.3,3.6,1.5,5.6c0.1,2.7-0.3,5.5,0.6,8.2c0.4,1.7,0.4,3.4,0,5c-0.9,2,0,4.6-2.1,6.2       c-0.2-0.1-0.4-0.3-0.7-0.3c-1.7-4.2,0.2-8.7-1.1-13c0,0,0,0,0,0c-0.1-1-0.1-1.9-0.2-2.9c0-0.3,0-0.7,0-1       C859.9,314.6,861.1,312.1,860.1,309.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB747D"),
                d:
                  "M784,322c-1.3,0-2.7,0-4,0c-2.3,0-4.7,0-7,0c-1.1-1.1-2.9,0.1-4-1C774.1,319.9,779.2,318.1,784,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7077"),
                d:
                  "M769,321c1.4,0.2,2.9-0.5,4,1c-3.6-0.5-7.5,1.1-11-1C764.3,321,766.7,321,769,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7077"),
                d:
                  "M762,321c-2.3-0.4-4.9,0.9-7-1C757.3,320.4,759.9,319.1,762,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB6E77"),
                d:
                  "M711.6,315.8c1.8-2.2,2.8-3.2,4.4-2c0.3,0.2,0.6,1,0.4,1.3C715.4,316.8,713.9,315.7,711.6,315.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661B1F"),
                d:
                  "M862.8,334.3c0.6-2-0.7-4.4,1.1-6.3c1.9,1.6,2.1,3.8,2.3,6c-0.1,3.2,0.5,6.3,0.9,9.4       c0.1,0.8,0.1,1.5,0.1,2.3c0,1.9-0.2,3.8,0.4,5.7c0.1,0.2,0.1,0.5,0.2,0.7c0.1,0.5,0.2,0.9,0.3,1.4c0.1,2,0.2,3.9,0.7,5.8       c0.1,1.1,0,2.1-0.7,2.9c-0.8,0.4-1.5,0.4-2.3-0.1c-1.4-1.7-0.9-4-1.6-6c-0.3-2,0.8-4,0-6c-0.4-2.2-0.7-4.3-1.1-6.5       c-0.3-0.1-0.4-0.3-0.3-0.5c0.1-0.2,0.2-0.3,0.3-0.3c-0.1-1-0.2-2-0.3-3C862.8,338.1,862.8,336.2,862.8,334.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC7077"),
                d:
                  "M861.1,320.9c1.5,4.2,0.6,8.7,1.1,13c-1.8-0.9-1-2.6-1.2-4C861,326.9,861.1,323.9,861.1,320.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E38F95"),
                d:
                  "M863.1,343c0.2,0.2,0.2,0.5,0.1,0.8c-0.4,1-1.1,1.8-2.1,2.2c-0.3-2.1-1.9-1.9-3.4-2       c-3-0.2-5.9,0.7-8.9,0.9c-13.4,0.6-26.4-2.7-39.7-4c-5.5-0.5-11-1-16.5-1.1c-1.7,0-2.9-0.2-3.6-1.8c17.3,1.3,34.7,1.5,52,3.2       c5.5,0.6,11.1,1.5,16.8,0.8C859.6,341.8,861.4,342.1,863.1,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC232C"),
                d:
                  "M864.3,350.2c1.2,1.8,0.5,3.8,0.9,5.8c0.6,2,0.7,3.9-1,5.5c-2.6,1.3-5.3,0.8-8,0.8       c-4.3-1.4-9,0.2-13.3-1.4c-3.6-1.5-8.2,0-11.1-3.6c0.6-1.4,2-0.4,2.8-0.8c-3.1,0.3-3.7-3-5.7-4.3c0.3-0.4,0.7-0.6,1.3-0.6       c3.7,0.2,7.4-0.4,11.1,0.4c6.7,0,13.5-0.4,20.2,1.1C864.5,353.8,864,351.9,864.3,350.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD2C34"),
                d:
                  "M841.2,351.9c-4.1,0-8.1,0.1-12.2,0.1c-1.9,1.8-4.3,1.5-6.6,1.5c-5.1,0-10.3,0-15.4-0.1       c-9.5-2.2-19.3-1.2-28.8-3.2c-2.1-0.3-4.9,0.8-5.6-2.5c2.3-2.3,4.9-1.1,7.4-0.8c14.3,1.2,28.6,2.2,42.9,3.7       C829.1,351.2,835.2,350.1,841.2,351.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3B"),
                d:
                  "M780.1,346.9c-2.3,0.5-5-0.9-7.1,1.1c-3.6,2.8-7.4,0.5-11.1,0.4c-8.9-0.5-17.6-2.6-26.4-3.4       c-1.8-0.7-4-0.4-5.5-2.1c0-0.7,0-1.4,0-2c14,0.8,27.9,3,41.8,4.7C774.6,345.9,777.6,345.2,780.1,346.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3B"),
                d:
                  "M723.1,339.9c-2.7-0.2-5.6,1-8.1-0.9C717.7,339.1,720.5,338.5,723.1,339.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92F3B"),
                d:
                  "M730.1,341c-2.4-0.3-4.9,1-7-1.1C725.4,340,727.9,339.4,730.1,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831727"),
                d:
                  "M690,342c0.3,0,0.7,0,1,0c3.8,3.2,8,4.7,13.1,3.5c6.9-1.6,9.5-0.1,12.1,6.5c-4.7,1.9-9.6,3.7-14.6,1.5       c-2.5-1.1-1.9,1.7-3.3,1.8c-1.5-1.8-3.7-1.1-5.5-1.7c-2.7-0.7-5.1-2.5-8.1-1.7c-1.2,0.3-2.3,0.3-3.5,0       c-6.2-3.2-13.1-3.7-19.8-4.9c-1.3-0.2-1.8,0.4-2.2,1.3c-2.8,1.8-4.6-1.5-7-1.4c-0.6,0-1.3,0-1.9-0.1c-1.2-0.3-2.4,0-3.7-0.2       c-0.4-0.2-0.7-0.4-1-0.8c-0.2-1.2,0.3-2.2,0.7-3.3c3.1-5.1,5-5.6,11.7-3.1c1.6,0.6,2.9,2.2,4.7,0.3c0.3-0.3,1.1-0.3,1.4,0       c4.1,3.8,8.9,1.9,13.5,1.6c0.8-0.1,1.7-0.1,2.4,0.3c3.7,1.8,4.2,1.9,7.2,1.1C688.1,342.3,688.9,341.5,690,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M716,352c0.6-1.8-6.5,0.2-1.9-3.8c0.4-0.4-1.4-0.9-2.2-1.3c-4.8-2.5-9.4,1.1-14.3,0.3       c-2.7-0.4-4.2-3.3-7.2-2.6c-0.4,0.1,0.3-1.7,0.5-2.6c4.5-3.7,10-2,15-3c1.4,0.5,3.8-1.4,4.4,1.9c0.1,0.6,3.1,1.3,4.6,1       c5.2-0.9,10,0.9,15.1,1.1c1.7,0.3,3.6-0.6,5,1c-0.2,1.6,0.9,2.3,2.1,3c1.5,0.9,2.8,1.9,2.4,3.9c-0.5,2.1-2.3,2.3-3.9,2.3       c-6.1,0.2-12.2,0.9-18.3-0.3C716.8,352.8,716.3,352.4,716,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M690,342c-3.4,4.3-8,1.2-12,2c0.1-1.5,1.4-0.7,1.9-1.4c-2.1-2.7-3.9,0.8-6.2,0.5       c-2.1-0.3-5-1.2-7.5,0.4c-1.3,0.9-2-0.1-1.6-1.8c0.4-1.8-1.6-2.3-1.8-1.3c-1.1,5.4-2.4,1.8-4,0.4c-3.1-2.6-9.4-1.4-11.7,2.1       c-4.1,1.9-6.8,1-8.8-2.8c0-0.5,0.3-1.1,0.1-1.4c-2.1-4.4-2-4.6,2.6-5.7c4.2,0,8.5-0.8,12.1,2.3c2.5-4.6,4.2,1.5,7.2,0.7       c2.6-0.7,6.3-0.6,9.5,0.2c0.2,0,0.2,0.6,0.2,1.1c-0.4,0.8,0.5,0.7-0.1,0.5c0,0,0-0.1,0-0.3c0.3-0.6,0.8-0.2,0.2-0.4       c-0.1,0-0.1,0.1-0.1,0.2c6.2-0.4,12,0.8,17.6,2.8c1.8,0.7,2.3-2.3,3.9-0.4C691,340.3,690.5,341.2,690,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881822"),
                d:
                  "M641,333c-4.5,1.2-2.5,4.3-2,7c-1.5,1.8-1.8,3.7-0.5,5.8c1.2,1.9,1,3.7-0.4,5.4       c-1.5,0.3-2.1-0.9-2.9-1.8c-1.4-2.6-2.4-5.3-2.2-8.4c-0.5-3.1,0.8-6,1-9C636.2,333.6,639,330.4,641,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1826"),
                d:
                  "M558.1,325c1.6-0.7,3.3-1.4,4.9-2.1c3.5,2.6,7.6,1.9,11.5,2.1c5.5,0.2,10.9,1.5,16.5,1.1       c1.9-0.1,3.6,0.5,4,2.8c0.4,1.9-1.4,2.1-2.3,3c-1.6,1.9-2.6,3.2-5.2,0.4c-2.6-2.8-7.3-1.6-10.3-0.6c-3.4,1.1-6.3,0.9-8.9-0.4       c-3.7-1.8-7.9,0.4-11.4-2.1c-0.8-1.1-0.6-2.3,0.1-3.4C557.3,325.7,557.7,325.3,558.1,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1824"),
                d:
                  "M592,331c1-0.7,2-1.3,3-2c5.9-1.7,11.7-1.3,17.6,0c0.8,0.2,1.5,0,1.9,1.1c0.9,2.7,2.4,2,3.3,0.1       c1.1-2.1,2-1.6,3.2-0.2c0.4,3,0.7,6,1.1,9c0.3,0.4,0.6,0.9,0.8,1.4c0.3,1.3,0.3,2.6-0.7,3.7c-0.5,0.1-1.2,0.2-1.3-0.2       c-2.1-5.3-6.7-6.6-11.6-7.4c-2.7,1.1,2.2-1.9-1.1-1.8c-4.6,0.1-9.3-1.2-14.1-1.5C593.1,333,591.7,332.7,592,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A25"),
                d:
                  "M622,340c0-0.3,0-0.7,0-1c2.2,1.1,4.1-3,5.7-0.9c1.6,2.2,3.8,4.6,3.3,7.9c0.2,2.3,2.2,4.2,1.2,6.7       c-2.5,3.3-5,3.3-7.5,0C623.4,348.6,625.7,343.7,622,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A21A2F"),
                d:
                  "M632,352c-0.7-1.4-1.4-2.8-2.2-4.2c-0.9-1.5,0.3-1.5,1.2-1.8c1.7-1.4,0.7-3.3,1-5c0.3,0,0.7,0,1,0       c1,2.7,2,5.3,3,8C635.8,351.5,634.8,352.9,632,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911925"),
                d:
                  "M546,320c1,0,2,0,3,0c-0.7,0.7-1.3,1.3-2,2c-1.4,2.1-3.7,2.7-6,3.2c-6.2-1-10.5,3.6-15.7,5.6       c-5.8-1.2-10.8,1.7-16,3.5c-1.4-1.1-1-2.3-0.2-3.6c-3.4,0.8-7-0.5-10,2.1c-1.6,1.4-4.6-2.2-6.1,1.2c-0.1,0.2-0.7,0.1-0.9-0.2       c-4.1-6.9-10.4-2.8-15.7-3.1c-1.6-0.1-3.3,0.7-4.6-0.8c-0.5-3.8,3.7-2.8,4.9-4.8c4.8-4,10.6-4.7,16.6-4.8       c10.6,0.7,21.2,1.1,31.7,1C531.8,321.3,539.1,322.4,546,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B11F2B"),
                d:
                  "M541.1,324c2-0.7,4-1.4,5.9-2c2.1,0,4.3,0.3,6.4-0.1c2.8-0.5,3.9,0.9,4.7,3.1c0,0.3-0.1,0.6-0.1,0.9       c-3.8,3.8-8.7,6-13.1,8.8c-1.1,0.7-2.4,1.2-3.8,0.6c-0.1-2.3-1.6-5.3,2.9-5c0-0.5-0.4-1.1,0-1.6c2.7-1.5,6.2-1.1,8.5-3.7       c-4.4-0.7-7.9,1.5-11.4,3.6c-6.4,4.3-13.4,7.2-20.9,9.1c-1.5,0.5-2.7,2.2-4.5,1.2c-0.6-1.3-0.1-2.4,0.7-3.4       c2.2-2.5,5.2-3.6,8.3-4.4C530.2,328.7,535.2,325.5,541.1,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5626A"),
                d:
                  "M869,312c4.1-0.3,7.4-3.2,12.1-2.2c3.6,0.8,7.6,0.2,10.7,3c0.5,0.5,1.8,1,2.2,0.7c4.8-3,10-0.8,15-1.5       c5.3-1.6,10.7-1.6,16,0c0.8,0.2,2,0.3,0.5,1.3c-2.1,1.4-4.6,0.3-6.8,1.1c2.3,3,6.3,3.6,9.5,1.2c1.2-0.9,2.2-2,3.2-0.4       c1.3,2,2.6,1.5,4.2,0.6c0.7-0.4,1.6-0.9,2.3-0.3c4.2,3.6,9.1,2.5,13.9,2.5c1,0,2.3,0.1,2.5,1.2c0.4,1.8-0.8,2.7-2.6,3       c0.9,1.3,2.5,2.1,3,1.3c2.1-3.7,6.4-1.8,9-4c0.6-0.5,1.7-0.7,2.4-0.5c3.9,1.2,8-0.2,11.6,0.9c4.1,1.2,8.7,0.3,12.7,3.6       c2.8,2.3,6.8,0.2,9.6-4.1c0.4,3.9,2.9,5.5,3.9,8.7c1.6-3.2,2.8-6.6,5-0.9c0.5,1.3,3.3,3,5.6,2.6c4.6-0.9,4.6,3,4.1,4.9       c-0.6,2.3-2.2,5.9-6.3,3.6c-1.1-0.6-2.2-0.5-3.1,0.7c-1.4,1.7,0.5,2.7,0.9,4c-0.2,0.2-0.4,0.4-0.6,0.6c-1.5,0.7-3,0.6-4.5-0.2       c-1.1-1-2.1-2-3.8-2c-3.2,0.1-6.2-0.4-9.3-1.1c-1.2-0.3-2.7,0.6-3.3-1.2c-0.6-1.6-0.1-2.9,1.5-3.7c-5.7-0.8-11.8,1.4-17.2-1.9       c-4.8-5.3-4.8-5.3-11.5-1.5c-2.4,1.3-9.3-0.1-11.4-2.3c-5.9-6.1-12-9.6-21.5-7.7c-4.9,1-11.1-0.2-16.6-1.5       c-4.3-1.1-8.6-2.7-12.8-4.2c-3.7-1.3-8.4,0.2-12.7-1c-3.9-1-7.8-2.2-12.1-0.6c-1.6,0.6-4.8,1.1-5.6-2.3       C868.7,312.4,868.9,312.2,869,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5760"),
                d:
                  "M1010,343c5-0.8,9.8,2.5,15.1,0.5c-1.8-2.4-1.8-5.9,0.9-6.9c3.4-1.3,7.6-1.4,11,1.4       c1.6-1.4,3.6-0.9,5.5-1c1,0,2-0.1,2.9,0.2c0.6,0.2,1.3,0.4,1.4,1.2c0.1,1.1-0.8,1.3-1.6,1.5c-1.4,0.5-2.9,0.3-4.4,0.5       c-1.4,0.2-3.4,0.1-3,2.3c0.3,1.6,1.9,1.8,3.2,1.5c3.3-0.6,6.6,0,9.9-0.1c1.4-0.1,3.7-0.4,2.9,2.5c-2,1.8-4.6,1.8-7.1,1.7       c-12.1-0.2-24.1,1.2-36.1,1.6c-1.9-0.5-4-0.6-5.8-1.3c-0.6-0.3-1.1-0.7-1.7-1c-1.4-0.8-4.1-0.7-3.3-3.2c0.7-2,2.8-1.7,4.7-1.3       C1006.4,343.6,1008.2,343.9,1010,343L1010,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC575F"),
                d:
                  "M1043,338c-2,0-4,0-6,0c0.1-0.8,0.5-1.9,1.3-1.8c7.2,1.1,13.6-3.3,20.7-3.2c3.7,0.3,7-1.4,10.4-1.8       c3.3-0.4,7-1.1,10.6-0.7c2.2,0.2,4.3,0.2,5-2.5c2.7-2,5.7-1.4,8.7-1.1c1.6,0.3,3.1,2.7,5,0.4c1.2-0.4,2.4-0.3,3.5,0.3       c1.1,1,2.5,2,1.7,3.7c-0.9,1.8-2.7,1.4-4.3,1.6c-10,1.4-20.2,0.1-30,2.8c-2.4,0.8-5.2-0.6-7.5,1c-0.4,0.2-0.9,0.3-1.4,0.4       C1054.8,338.1,1048.9,337.9,1043,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75F67"),
                d:
                  "M960.9,309.1c1.4,0,2.8-0.1,4.2-0.1c2.6,0.1,5.3,0.2,7.9,0.3c0,0.2,0,0.5,0,0.7c-0.2,1.7-1.3,2.1-2.8,2       c-8.8,0-17.6,0-26.3,0c-1.5,0-2.7-0.2-2.9-2c3.4-1.8,7.1-0.9,10.6-0.7C954.8,309.5,957.9,309.9,960.9,309.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5626A"),
                d:
                  "M863.2,315.1c-0.1-2-0.2-3.9-0.3-5.9c0.8-2.2-1.8-6.1,3.2-6.3c0.6,0,1.3,0.1,1.9,0.1       c-1.9,2.3-1.4,5.3-2,8c-0.7,1.8,0.8,3.7-0.4,5.4c-0.3,0.4-0.6,0.7-1.1,0.8C863.2,317,863.7,315.7,863.2,315.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5F62"),
                d:
                  "M925,312c-5.3,0-10.7,0-16,0c0.2-1.1,0.6-1.9,1.8-1.9c4.1,0,8.2,0,12.3,0       C924.4,310.1,924.8,310.9,925,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45667"),
                d:
                  "M960.9,309.1c-6.6,2.1-13.3,0.3-19.9,0.9c0-0.7,0-1.4,0-2.1c1,0,1.9-0.1,2.9-0.1       c2.7,0.1,5.4,0.2,8.1,0.3C954.8,309.9,958,308.5,960.9,309.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7079"),
                d:
                  "M865,317c0.3-2-0.8-4.2,1-6c0,0.3,0,0.7,0,1c0.8,0.6,1.4,1.3,1.7,2.3c0.2,1.6,0.1,3.1-2.1,3.1       C865.4,317.3,865.2,317.1,865,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5626A"),
                d:
                  "M867,314c-0.8-0.4-1-1.2-1-2c1-0.3,2-1.6,3,0c0,0,0,0,0,0c-0.7,0.6-0.3,1.6-0.9,2.2       C867.7,314.4,867.3,314.4,867,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05461"),
                d:
                  "M1095,328c-3.3,0-6.7,0-10,0c0-1.3,0-2.7,0-4c0.8-0.7,1.7-1.3,2.7-1.3c7.4,0.4,14.4-2.2,21.7-2.2       c16.6,0.1,33.2,0,49.8,0c5.1-0.1,10.1,0.2,15.2,0.2c1.9,0,4.8,0.1,2.9,3.6c-0.7,0.5-1.5,0.8-2.4,1c-14.3,0.1-28.7,0.6-42.2-0.2       c1.2,0.2,3.6,0.2,1.4,3.3c-3.4,1.8-7.2,1.3-10.7,1.3c-7.2-0.1-14.5,1.1-21.5-1.7c-1.3,0-2.7,0-4,0       C1097,328.9,1096,328.8,1095,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7585F"),
                d:
                  "M1177,324c0.9-2.2-0.6-2-1.9-2c-5,0-10,0-15.1,0c-1.7-1.4-3.8-1-5.8-1c-15.8,0-31.7,0-47.5,0       c-1.9,0-4,0.6-5.7-1c0-0.7,0-1.3,0-2c1.9-1.6,4.1-1,6.2-1c21.6-0.1,43.2,0,64.7,0c4.3,0,8.6-0.8,12.9-0.4       c1.8,0.2,3.5,0.6,4.3,2.6c0.1,0.6-0.1,1-0.6,1.3c-1.8,0.8-3.8,0.9-5.2,3.1C1182,325.8,1179.3,325.7,1177,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC585C"),
                d:
                  "M1101,320c18.1,0,36.1,0,54.2,0c1.7,0,4.2-1.1,4.8,2c-15.9,0-31.8,0.2-47.7-0.1       c-9.2-0.2-18,3.5-27.3,2.1c-0.3-2.8,0.6-4.2,3.8-4C1092.8,320.2,1096.9,320,1101,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7596C"),
                d:
                  "M1186,318c-28.3,0-56.7,0-85,0c-10.1,0.5-20-2.2-30-2.9c2,0,4-0.1,6-0.1c3,0,6,0,8.9,0       c1.4,0.1,2.7,0.2,4.1,0.3c8,1.8,16.1,0.2,24.2,0.9c1.6,0.9,3.3,0.4,4.9,0.4c16.1,0,32.2,0,48.3,0c4.3,0,8.6,0.1,12.9-0.6       C1182.3,315.6,1185.1,314.7,1186,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33E47"),
                d:
                  "M1224,274c-2.1,1.9-5.5,2.5-6,6c-0.9,1.2,0.1,3.8-2.6,3.7c-0.5,0-1.3-0.4-1.4-0.2       c-3.7,5.4-8.2,0.9-12.2,0.8c-1.7,0-5,0.1-5.2-2.7c-0.3-3.1-0.2-6.4,2.4-8.8c0.9-0.8,1.9-1.4,3-1.7c2.7-0.6,5.5-0.2,8.3-0.5       c4.7,0.3,9.5-0.7,14.1,0.7C1225.8,272.4,1225.2,273.2,1224,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721622"),
                d:
                  "M1247.9,293.9c-1-0.3-2-0.6-2.9-1c-0.4-0.5-0.8-1-1.2-1.5c-0.5-0.7-2.3,0-1.8-1.6       c0.4-1.2,1.8-0.2,3-1.2c-5.5-0.9-5-5.5-6.3-9.1c2.8-0.5,2.7,3.3,5,3.3c0.1-2.5,0.2-2.6-2.4-4.7c-1.3-1.1-1.9-2.5-1.3-3.8       c0.3-0.7,1.8-2.2,2.9,0.2c0.4,0.9,1.7-0.5,2.2-1.2c0.8-1.3-0.5-1.2-1.2-1.4c-0.9-0.3-1.9-0.6-2.8-0.8c0-0.2-0.1-0.5-0.1-0.7       c0.6-1,1.5-1.2,2.5-1.3c2.6,0,4.8,0.9,7,2.2c4.8,3.6,1.5,7.8,0.9,11.8c-0.2,1.3-1.9,1.9-1.5,3.5c0.2,0.9,0.3,1.9,0.3,2.9       C1249.9,291.1,1249.7,292.9,1247.9,293.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("932231"),
                d:
                  "M1215,283c2.1,0.1,1.7-2.3,2.9-3.1c0.4,1.6-1.1,5,3.1,2.7c2.8-1.5,6.3,1,5.7,4.3c-0.6,3-0.3,6-0.8,9       c-3.1-2.9-6.9-1.7-10.4-1.9c-1.8-0.1-3.6,0-5.5,0c0-0.3-0.1-0.6,0-1C1210.9,289.3,1211.1,285.3,1215,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861728"),
                d:
                  "M1224,274c0.3-0.7,0.7-1.4,1-2.1c-0.6-0.5-1.8-0.3-1.9-1.3c-0.1-1.2,1-1.6,1.9-1.7       c3.5-0.6,7.1-0.2,10.7-0.3c2.1,0.1,4.3,0,5.4,2.4c0,0,0,0,0,0c-2.2,1.8-4.8,2.8-5.8,6.3c-1,3.6-4.2,3.6-6.7,0.3       C1227.2,275.9,1225.8,274.8,1224,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962E3D"),
                d:
                  "M1235.9,283.2c0.3-0.8,0.1-1.8,1.1-1.4c0.4,0.2,0.8,1,0.9,1.5c0.1,0.6-0.2,1.4-1,1.1       C1236.4,284.3,1236.1,283.6,1235.9,283.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85662"),
                d:
                  "M701,135c0-1,0-2,0-3c6.6-0.1,13.4,2.5,19.5-2.2c0.4-0.3,1-0.6,1.4-0.5c7.8,2.7,15.1-3,22.8-1.3       c5.3,1.1,10-1.9,15.1-2.2c1.5-0.1,2.2-1.4,2.3-2.8c5.3,3.9,10.7,4.2,16.4,0.9c0.5-0.3,1.5-0.7,1.8-0.5c2.8,1.8,5.3,0.4,8.1,0       c10.3-1.5,20.6,2.3,31.1-0.8c2.8-0.8,7-1,10.6-0.5c17.3-0.3,34.6-0.7,51.8-1c1.7,0,3.7-0.7,5.1,1c-2.6,0.8-5.2,1.1-7.9,1       c-15.5-0.3-30.9,0.5-46.3,1.3c-17.2,0.8-34.4,1.6-51.6,2.7c-0.7,0-1.5,0.6-2.2,0.9c-13.8,0.2-27.3,3-41,4       c-3.6,2.2-7.8,0.8-11.7,1.5c-7.1,1.4-14.4,1.7-21.6,2.4C703.4,136.1,702,136.1,701,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA616E"),
                d:
                  "M941,125c2.4-1.9,4.8,0.1,7.2,0c10.1-0.2,20,0.8,30,2c1.6,0.2,3.2,0.7,4.8,1c0.3,0.4,0.3,0.9-0.1,1.2       c-2.6-0.1-5.2-0.2-7.8-0.3c-3.3-1.7-6.8-0.5-10.2-1c-2.5-1.2-5.4,0.3-7.9-0.9c-2-0.1-3.9-0.1-5.9-0.2c-3.2-1.7-6.7-0.4-10.1-1       C941,125.6,941,125.3,941,125z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85662"),
                d:
                  "M887,122c5.7-1.1,11.6,0,17.2-1.8c2.2-0.7,3,1.9,4.8,1.8C901.7,123.6,894.3,123.7,887,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D95762"),
                d:
                  "M920,122c0.9-2.7,1.4-2.9,1.7-2.1c1.2,3.6,4,1.9,6.2,2.1c2.5,0.2,5.4-1.2,7.1,1.9       c-3.4,0-6.9-0.1-10.3,0.1C922.7,124.1,921.2,123.4,920,122z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54759"),
                d:
                  "M924.9,125.8c0.1-0.2,0.1-0.5,0-0.7c3.7,0.3,7.5-1.1,11.1,0.9C932.3,125.9,928.6,125.8,924.9,125.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B23F4C"),
                d:
                  "M813.1,127.1c0,0.2-0.1,0.5,0,0.7c-2.6,0-5.2,0.1-7.8,0.1C807.7,126.2,810.5,127.3,813.1,127.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93F4B"),
                d:
                  "M1270.9,311.9c0.6,0.1,1.3,0.2,1.9,0.3c1.3,0.6-1.8,0.4-0.1,1.6c4.7,3.5,10.1,3,15.3,2.7       c11.1-0.7,22.1-1.9,33.2-2.3c13.4-0.4,26.6-1.6,39.9-2.6c0.3,0,0.6,0.2,0.9,0.4c1,0.7,2,1.3,3,2c0,0.2,0.1,0.5,0.1,0.7       c-2.4,3.7-5.5,5-9.7,2.9c-0.6-0.3-1.3-0.3-2-0.2c-9.7,1.3-19.6-0.3-29.3,2.5c5.4-0.8,10.4,1.2,15.6,1.7       c1.4,0.1,2.7,0.2,3.9-0.2c5.8-2,11.7-1.2,17.6-0.4c3.5,0.5,6.9-0.8,10.4-0.5c2.2,0.2,4.5,0,4.5,3.3c-0.5,0.8-1.2,1.1-2,1.3       c-25.7,1.5-51.3,3.3-77,4.6c-4.3,0.2-8.6,1-12.9,1.5c-3.8,0.5-7.6,0.8-11.4-0.2c-2.8-2.2,0.1-2.4,1.1-3.3       c0.5-0.2,0.9-0.4,1.4-0.5c2.8-0.5,5.6,0,8.4-0.4c2.9-0.4,6.3,0,7.3-4.2c0.4-1.6,2.1-2.5,3.3-2c-5.5,2-12.1-0.5-18.2,2.1       c-0.5,0-0.9,0-1.3-0.2c-1.9-1.2-3.9-1.9-6.1-1.3c-1.3,0.4-2.6,0.9-3.3-0.9c0.9-2.4,0.9-4.6-1.7-6c-0.5-1.9,1.4-1.4,2.1-2.1       C1267.6,312,1269.3,312,1270.9,311.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE4C56"),
                d:
                  "M1362,312c-8.1,1.9-16.4,2.6-24.6,2.7c-17.4,0.4-34.7,3-52.1,3.1c-4.5,0-9.9,1.8-13.2-3.5       c-0.6-1-1.9,0.6-2.9,0.9c0-3.1,2.9-1.5,3.6-3c6.7-0.1,13.4-0.2,20.1-0.3c8.7,0,17.5-0.3,26.2,0.2c12.9,0.7,25.7-0.5,38.5-1.4       C1359.2,310.6,1360.7,310.7,1362,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B93F4B"),
                d:
                  "M1366,310c2.1,0,3,1.5,4,3c-1.3,2.2-2.7,3.6-4.9,0.9c0,0,0,0,0,0C1366.1,312.9,1363.8,310.9,1366,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4515E"),
                d:
                  "M472,185c4.7-3.9,11.1-4.2,16.1-7.4c0.8-0.5,2.8,0.6,4.1,1.3c2.3,1.1,4.6,3,5.2-1.6       c0.3-1.9,2.1-1.1,3.3-1.2c4.1-0.4,8.3,0.9,12.3-1c0.8-1.3,3.1-1.5,2.8-3.6c0.7-0.3,1.4-0.3,2.1-0.2c0.9,0.2,1.7,0.7,2.2,1.5       c0.5,0.8-0.6,1.5-0.1,2.3c-8.9,3.7-17.9,7.4-26.8,11c-4.8,1.2-8.8,4.4-13.5,5.7c-1.2,0.3-2.4,1.4-3.7,0.2       C474,190.1,473.4,187.3,472,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15A68"),
                d:
                  "M520,175c-3.4-0.7,0.6-1.3,0-2c2.5-2.6,5.4-4.3,9.1-4.3c3.3,0,5.7-2.4,8.6-3.6c3.3-1.3,6.3-2.4,9.9-2.4       c3.2,0,6.6-0.7,9.4-2.8l0,0c5.4-2.5,11.3-2.6,17-4c0.7,0,1.3,0,2,0c3.3-3.3,7.6-2.7,11.6-3.3c2.5-0.1,5-0.2,7.4-0.5       c1.5-0.2,3.5-0.7,3.9,1.8c-8.5,2.5-17.6,2.8-26,6c-14.4,2.5-28.4,6.4-42,11.9C527,171.9,523.8,174.4,520,175z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C25E6B"),
                d:
                  "M472,195c1.1-1.4,2.5-1.4,4-1c0.4-0.3,0.7-0.3,1.1,0.1c-4,3.3-9.6,4-13.2,7.9c-0.9,0.1-1.8,0.1-2.8,0.2       c-0.2-0.2-0.3-0.4-0.5-0.5c-0.3-1.8,1-2.4,2.1-3.2c1.7-0.7,3-1.9,4.5-3C468.8,194.6,470.4,195.1,472,195z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE5F6E"),
                d:
                  "M477.1,194c-0.4,0-0.7,0-1.1-0.1c0-0.7,0-1.3,0-2c4-0.8,7.9-2.2,11.3-4.5c2-1.4,3.8-1.5,5.9-1.4       C488.3,189.7,482.4,191.2,477.1,194z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781525"),
                d:
                  "M1380.8,344.7c0.9,2.5,1.4,5.1,1.2,7.7c-0.7,7.6,1.7,15,0.9,22.6c-0.6,0.3-1.1,0.1-1.4-0.4       c-1.1-2-0.7-4.3-1.1-6.4c-0.5-1.7-1.8-1.8-3.2-1.5c-10.2,2.2-20-1.2-30-1.7c-2-0.1-3.9-0.5-5.9-0.6c-1.4,0-2.8-0.1-4.2-0.4       c-2.9-1.1-6-0.4-9-0.8c-1.4-0.2-2.5-0.7-3.3-1.9c-1-0.3,1.5-1.7-0.5-1.6c-9.5,0.5-18.6-2.4-28-2.6c-6.6-0.2-13.1-2.5-19.3-5.1       c0.4-3-0.8-4.2-3.9-4.1c-3.7,0.2-7.5,0.1-11.5,0.1c0.8-2.6,1.7-1.1,2.4-1.1c1.3,0,2.5-0.3,2.5-1.8c0-1.4-1.4-0.9-2.4-1.1       c-1.8-0.4-3.6-0.3-5.4,0c-3.4,0.7-2.6-1.2-1.8-3c3.4-3.5,7.7-2.2,11.8-2c2.5,1.6,4.6,4.2,8.2,2.7c0.7-0.3,1.5,0.4,2.3,0.7       c0.7,0.2,0.4,3.4,2.3,0.5c0.8-1.3,3,1.3,4.7,1.8c4.2,0.2,7.3,4,12,3.2c1.4-0.2,2.7-0.3,4-0.9c1-0.5,2.4-1,2.6,0.9       c0.1,1-1.3,3.7,0.8,0.4c0.4-0.6,1.2-0.9,1.7-0.6c4.7,2.6,9.8,0.6,14.6,1.4c1.1,0.2,3.4-0.3,2.5,2.3c-2.2,0.5-4.5,0.1-6.7,0.3       c0.1,0.1,0.2,0,0.3,0c2.2-0.2,4.4,0.5,6.6-0.4c0.6-0.8,1.5-2.2,2.2-1.7c3,2.4,6.4-1.5,9.3,0.7c1.1,0.8,1.7-0.5,2.5-0.9       c1.4-0.6,2.8-1.3,4.2-0.2c2.8,2.1,5.6,2.5,8.7,0.8c1.2-0.7,2.7-1,3.8-0.1c3.5,3.1,6.6,1.2,9.2-1.1c1.4-1.3,2.3-1,3.3,0       c1.1,1,1.6,2.6,2.8,3.5c1.4,1,2.7,2.7,4-0.5c1-2.4,2.1-2.1,3.6,0.5c-0.5-4.8-0.5-4.8,0.9-7.4       C1379.9,344.5,1380.3,344.5,1380.8,344.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5A64"),
                d:
                  "M1270,340.1c-4.4-0.1-8.7-0.3-13,0.9c-0.6-0.1-1.2-0.3-1.8-0.4c2.6-1.6,3.9-4.3,5.8-6.5       c1.1-1.3,2.6-2.4,4.3-2c9.5,2.2,19.1-0.5,28.7,0.5c3.4,0.4,7-0.3,10.4,0.5c1.1,0.3,2,1,2.9,1.8c0.7,0.7,1.4,1.6,1,2.6       c-0.5,1.3-1.7,1.2-2.9,1c-4.5-0.5-8.9-0.4-13.1,1.9C1284.8,342.1,1277.4,342.1,1270,340.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751520"),
                d:
                  "M1277,352c5.6-0.1,10.7,1.5,15.6,4c0.4,0.2,1,0.1,1.5,0c11.4-0.8,22.4,2.9,35,2.7       c-2.1,1.2-3.1,1.7-4.1,2.3c-1.8,1.8-4,1.5-6.1,1.2c-12.1-1.8-24.4-2.3-36.5-4.1c-2.7-1-5.5-0.6-8.3-0.7c-1.7,0-3.4,0-5-0.4       c-4.6-1-9.2-1.7-13.9-1.8c-2.9-0.9-6-0.4-8.8-1.6c-0.5-0.3-0.7-0.7-0.7-1.2c1.7-3,5.3-0.1,7.3-2.3c5.6,2.9,11.9,1.5,17.8,3.2       C1272.4,353.7,1274.7,351.5,1277,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61141F"),
                d:
                  "M1253,350c-0.1,0.7,2.6,1.7-0.2,2c-2.3,0.2-4.6,0-6.8,0.1c-4.4,2.2-8.9,1.8-13.4,0.7       c-1.5-1-0.8-2,0-2.9c4.2-0.6,7.9-3.5,12.4-2.8c0.7,1,1.7,1.3,2.6,0.6C1250.9,345,1252.2,346.9,1253,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C4A50"),
                d:
                  "M1245,347c-4.1,0.8-7.8,3.2-12,3.2c-1.5,0.6-2.9,1.1-4.2-0.4c5.8-2.9,12.6-2.7,18.3-5.8       c0.7,0,1.3,0,2,0C1248.5,346.1,1246,345.6,1245,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34D5C"),
                d:
                  "M1186,318c-1.7-1.7-3.8-0.9-5.7-1c-20.3-0.1-40.6,0-61-0.1c-1.7,0-3.7,0.8-5.2-0.9       c1.6-0.1,3.3-0.1,4.9-0.2c19.2,0,38.5,0,57.7,0c7-1.1,14-1.5,21-0.1c1.2,1.9,0.8,3.6-1,4.6c-2.6,1.3-5.3,1.6-7.8-0.4       C1188.4,318.7,1187.4,318,1186,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF8584"),
                d:
                  "M1197.9,317c-4-2.3-8.4-0.6-12.6-1c-2.8-0.3-5.7-0.1-8.5-0.2c7.2-3.4,14.7-1.5,22.1-1.8       c3.8,2.2,5.2,6,4.6,9.8c-0.9,5.6,0.2,10.8,1.5,16.1c-2.7,0.1-2.7-2.5-3.9-3.9c-2.2-3.1-1.9-6.5-1.4-10       C1199.9,322.9,1199.4,319.9,1197.9,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05968"),
                d:
                  "M1239,220c1.4,0.6,2.2,2.1,4,2c6,3.1,11.8,6.3,17.2,10.6c5.1,4.1,11.1,8,18,9.5       c1.9,0.4,4.3,0.9,3.7,3.9c-1,0.9-2.1,0.6-3.2,0.1c-4.8-0.9-7.7-5.5-12.6-6.2c-6.2-4.9-13-8.8-20.2-12.1       c-4.3-4.4-10.6-5.7-15.1-9.8C1235.5,215.9,1236.8,216.2,1239,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05D69"),
                d:
                  "M1278.8,246.1c1.1,0,2.1-0.1,3.2-0.1c3,2.2,7.3,3,9.5,5c2.9,2.7,5.3,2.9,8.5,3c0.2,0.1,0.4,0.2,0.6,0.2       c0.8,0.6,1.6,1.2,2.3,2c1.2,1.5,2.9,2.4,4.1,3.8c1.8,1.5,2.1,3.6,2,5.8C1298.9,259.2,1288.9,252.7,1278.8,246.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A15B5B"),
                d:
                  "M1331.9,283.1c2.2-0.1,3.3,1.2,4,3.1C1334.2,285.7,1332.8,284.7,1331.9,283.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45F67"),
                d:
                  "M859.9,305c0,0.7,0,1.4,0,2c-1.7,1.6-0.6,3.8-1,5.6c0,0.1-0.2,0.2-0.2,0.3c-0.2-0.3-0.5-0.7-0.7-1       c-2.9-2.3-6.1-2.8-9.7-1.6c-4,1.3-8.2,0.3-12.3,0.6c-1.7,0.1-3.7-0.9-5,1c-3.3,1.6-5.6,0.5-6.6-2.8c-0.6-2.1-4-0.7-4.4-3.2       c1-1.3,2.5-1,4.1-1.4c-3.2,0.2-6.6,1.4-8.1-2.6c-0.6-0.5-1.3-0.9-1.9-1.4c6.3,1.8,12.6,2,19,0.3c0.3,0,0.6,0,0.9,0       c0.4,0.8,1.2,1,2,1c1.3,2.6-0.9,2.4-2,3c3.1-1,6.7,0.9,10-1c1.6-2.9,4.4-2.3,6.6-1.5c2.5,0.9,4.5,3.8,7.7,1.4       C858.5,303.8,859.4,304.6,859.9,305z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD5F62"),
                d:
                  "M816,302c3.2,3.1,7.6,1.5,11.3,3.2c-2.4,0.3-4.8,0.5-7.2,0.8c-1,0-2,0-3,0c-1,1-2.2,1.1-3.5,0.7       c-2.5-1.7-5.2-2.8-8.3-2.1c-0.5-0.1-0.9-0.3-1.2-0.6c0-0.7,0-1.3,0-2c0.3,0,0.7,0,1,0c1.7-0.7,3.3-0.7,5,0       C812,302,814,302,816,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15B64"),
                d: "M810,302c-1.7,0-3.3,0-5,0C806.7,300.5,808.3,300.5,810,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC5A68"),
                d:
                  "M1133.9,170.1c6.3-1.8,10.6,3.5,16.1,4.7c4,0.9,7.8,2.5,11,5.2c5-0.9,7.3,3,10.4,5.6       c0.1,0.5-0.1,1-0.4,1.4c-10.4-4.7-20.8-9.4-31.2-14.1c-1.2-0.5-2.5-0.8-3.8-1.1C1135.3,171.2,1134.6,170.6,1133.9,170.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25869"),
                d:
                  "M1216,206c0.3,0,0.7,0,1,0c4.3,1.9,7.6,5,11.4,7.7c1.1,0.8,1.7,2.1,0.6,3.4c-8.3-4.3-16.7-8.7-25-13       c-1-0.7-2-1.4-3.1-2.2c1.2-1.5,2-1.9,4-0.6c1.5,0.9,3.1,2.3,5.1,2.6C1212.2,204.2,1214.1,205.1,1216,206z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE5668"),
                d:
                  "M1171,187c0-0.3,0-0.7,0-1c2.4-1.2,4.6-1.3,6.6,0.8c1.9,2,4.8,2,6.9,3.5c1.1,0.8,3.6,1,2,3.5       c-0.2,0.1-0.4,0.2-0.6,0.3C1180.5,192.8,1175.9,189.4,1171,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E25466"),
                d:
                  "M1194,194c0.1,0.7-2.7,1.7,0.2,1.9c2.9,0.2,3.6,1.5,2.8,4.1c-3.8-1.8-7.8-3.1-11-6c0,0,0.1-0.1,0.1-0.1       C1188.7,192.4,1191.3,192,1194,194z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1523"),
                d:
                  "M1228.8,349.9c1.4,0.1,2.8,0.2,4.2,0.4c-0.3,0.6-0.6,1.2-0.9,1.8c-0.1,0.1-0.2,0.2-0.3,0.3       c2.6,0.9,5.3,2.7,5,5.2c-0.2,1.7-3.8,1.9-5.7,3.1c-1.3,0.7-3.3-0.6-2.9,2.8c0.3,2.2-3,1.8-4.9,1.8c-3,0-6.2-1.2-8.7,1.6       c-5.8,0.3-11.5-0.7-17.1-2.2c-1.6-2.2,1.3-2,1.7-3.1c-2.2-1.1-5-1.9-2.6-5.3c0.4-0.6-1-1.2-1.2-2.6c-0.6-4.3,1.5-4.6,4.5-4.5       c0.7,0,1.3-0.3,1.9-0.5c2.1-0.4,4.4-0.1,5.9-2c3.5,1.1,6.8,2.8,10.4,3.5C1221.7,349.9,1225.2,349.9,1228.8,349.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B6768"),
                d:
                  "M1218.1,349.9c-4.2,1.1-7.5-1.7-11.1-2.9c-2.7-1-4.1-3.2-5.1-5.7c-0.3-1.6-1.2-3.2-0.4-5       c0.2-0.2,0.3-0.3,0.5-0.5c1,1.4,2,2.7,2.9,4.1C1206.9,346.6,1213.3,347.2,1218.1,349.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("914C4E"),
                d:
                  "M1247.9,293.9c0.4-1.6,0.7-3.3,1.1-4.9c0.9-0.8,0.9-1.9,1.1-3c1.3-2.9,2.3-5.8,2.7-8.9       c0.2-1.7,1-3.7-1.4-4.7c-1.3-1-1.1-2.8-2-4c-2.4-3.8-4.7-7.7-9.7-8.5c-1.8-0.9-3.7-1.8-5.4-3c-3.4-2.3-6.9-4.4-10.7-5.9       c-0.4-0.2-0.9-0.4-1.3-0.6c-0.8-0.8-2.4-1.2-1.2-2.8c1-0.2,1.9-0.3,2.8,0.3c1.7,0.7,3.4,1.3,5,2c2,1,4,2,5.9,3       c1.8,1.6,4,2.8,6,4c1.8,1.8,4.4,2.1,6.4,3.7c7.8,6.2,10.4,13.6,6.6,22.9c-1.7,4.3-2.5,9-5.9,12.5       C1248,295.4,1248,294.7,1247.9,293.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935F62"),
                d:
                  "M1241,257c-2.6-0.4-4.7-1.6-6-4C1237.5,253.6,1239.5,254.9,1241,257z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3944"),
                d:
                  "M1215,283c-1.7,3.3-3.3,6.7-5,10c-0.2-0.8-0.3-1.6-1.5-1.3c-5.5,1.4-11.2,0.7-16.6,0       c-4.5-0.6-9.6,1.2-13.6-2.3c-0.3-0.3-1.5,0.4-2.3,0.6c-1,0-2,0-3,0c-0.9-1-0.5-2.2,0.5-2.4c6.9-1.5,9.9-7.7,14.9-11.5       c2.2-1.2,3.9-3.1,6-4.4c0.4-0.2,0.8-0.4,1.3-0.5c0.5-0.1,0.9-0.2,1.4-0.2c0.5,0,0.9,0,1.4,0c1,0.1,1.9,0.3,2.5,1.1       c-3.2,2-3.8,5.8-3.4,8.6c0.4,2.8,4.9,3.8,6.9,3.1c3.4-1.3,3.7,1,4.9,2.4C1211.5,285.5,1210.7,279.7,1215,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1229,217.2c-1.2-5.3-7.5-5.2-10-9.1c-0.5-0.8-1.3-1.4-2-2c0.9-1.1,1.9-2.2,3.5-4.1       c-0.2,3.2-0.2,5.7,2.9,6.4c2.2,0.5,2.8,3.4,6.2,3.3c2.3-0.1,5,1.2,7.8,0.9c4.4-0.4,0.3,2.9,1.5,4c1.2,0.6,2.3-2.2,3.4-0.4       c1.3,2.2-1.4,1.5-2.1,2.3c-0.4,0.5-0.8,1-1.2,1.5c-2.2-2.9-5.3-1.8-8.1-2C1230.1,218,1229.4,217.9,1229,217.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M701,135c8.9-0.5,17.8-1.1,26.7-2.6c3.4-0.6,6.9-0.3,10.3-0.3c0,0.4,0,0.7,0,1.1       c-0.3,0.3-0.7,0.6-1,0.9c-3.3,0.2-6.8-0.6-10,0.9c-1.6,0.1-3.3,0.2-4.9,0.3c-4.4,0.5-8.8,0.3-13.1,1.7       c-0.6,0.1-1.3,0.1-1.9,0.2c-1.7,0-3.3,0-5,0c-1.1,0.5-2.4,1-2.9-0.4C698.6,135.4,700.3,135.5,701,135L701,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M664.9,142.9c-1.3,0.1-2.6,0.2-3.9,0.3c-7,1-13.9,1.9-20.9,2.9c-1.3,0.3-1.4-0.4-1-1.4       c4-2.1,8.4-2.8,12.9-3.2c13.1-0.7,25.6-5.2,38.8-5.6c2.5-0.1,5.7-1.8,7.2,2c-3.5,1.1-7.4,0.2-10.7,2c-4.1,0.4-8.1,0.8-12.2,1.1       C671.7,141.8,668.1,141.5,664.9,142.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4606D"),
                d:
                  "M639,145c0.4,0.4,0.7,0.7,1.1,1.1c-5.5,2.1-11.7,1.5-17.1,3.8c-4.2-0.3-8,1.1-12,2.1       c-2,0.1-4,0.1-6,0.2c0.1-3.1,2.7-3,4.7-3.3c9.5-1.4,18.9-3.3,28.3-5.1C638.8,143.6,639,144.2,639,145z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90393E"),
                d:
                  "M1266,312.1c-0.6,0.6-1.3,1.2-1.9,1.9c-4.1,2.8-4.1,2.8,0.1,6.4c-0.3,1.2-1.3,1.5-2.3,1.7       c-1.2,0.1-2.2-0.3-3.1-0.9c-2.2-1.7-4-3.6-3-6.6c1.1-3.2,4.2-2.5,6.7-2.6C1263.7,311.9,1264.9,312,1266,312.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C474F"),
                d:
                  "M1258.8,321.1c1.1,0,2.1-0.1,3.2-0.1c4.6,2,5.2,3.4,3.3,8.2c-3.6,2.1-3.4-1.4-4.4-3.1       C1260.2,324.4,1259.5,322.8,1258.8,321.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D3039"),
                d:
                  "M1260.9,326.1c1.9,0.2,1.2,4.1,4.1,2.9c1.1-0.8,1.8-0.4,2.3,0.8c-0.2,0.8-0.6,1.4-1.3,1.8       c-1.7,0.2-3.2,1.5-5,0.6c-0.1-1.4-0.1-2.8-0.2-4.3C1260.9,327.3,1260.9,326.7,1260.9,326.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C86370"),
                d:
                  "M441.9,213.9c-0.3-0.3-0.6-0.6-0.9-0.9c-0.4-1.4,0.5-2.3,1.4-2.9c4.3-2.7,8.3-5.7,13.4-6.8       c0.8,0.2,1.4,0.6,1.2,1.6C451.9,207.9,446.9,210.9,441.9,213.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C25E6B"),
                d:
                  "M457,204.9c-0.3-0.3-0.6-0.6-1-0.9c0.5-3.5,2.5-3.3,5-2c0,0,0.1,0.1,0.1,0.1       C460.2,203.8,458.5,204.2,457,204.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45560"),
                d:
                  "M639,145c-10,1.3-19.6,4.4-29.7,5.2c-1.5,0.1-3.3,0.4-4.3,2c-1,0.6-2.1,1.2-3.1,1.8c-1,0-2,0-2.9,0       c-4-1.8-8,1.2-12,0.1c0.3-3.5,1.5-6,5.8-5c1.1,0.3,2.5,0.4,3.4-0.2c4.4-3,8.8-3.8,13.8-1.1c1,0.6,2.3-1.6,4.1-1.9       c3.6-0.7,7.3-1.3,11-1.9c0,0,0,0,0,0c6.5,0.2,12.6-2.1,18.9-3.2c3-0.6,6.1-0.5,9.1-0.8c0.7,1.4-0.2,2.1-1,3       C647.5,142.5,643.5,145.2,639,145z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD5F62"),
                d:
                  "M844,304c0,0.6,0,1.8,0,1.8c-4.8,0.2-9.6,0.6-14.8-0.2c1.9-3.1,6.1,0.3,6.8-3.6c0.3,0,0.7,0,1,0       c1,1.6,2.9-0.1,4,1C841.7,304.2,842.9,304,844,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45F67"),
                d:
                  "M841,303c-1.3-0.5-3.4,2.5-4-1C838.4,302.1,839.9,301.5,841,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85F6D"),
                d:
                  "M1059,142c3.2,1.7,7.3,1.3,10,4.2c-6.9-1.7-13.8-3.3-20.7-5.2c-2.1-0.6-4.1-1.1-6.3-1.1       c-3.6-1.3-7.4-2.2-11.3-2c-0.8-1.5-2.7-0.8-3.7-1.9c-0.5-0.6-1.6-0.9-1-2C1037,136.7,1048,139.3,1059,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24C54"),
                d:
                  "M1159.3,254.1c-0.1-0.7-0.2-1.5-0.3-2.2c0.7-1,1.3-2.1,2.8-1.9c11.1,1.3,22.1,3.1,32.8,6.6       c0.5,0.1,1,0.3,1.5,0.4c2.3,1,5,1,7.1,2.7c0.3,0.5,0.2,1,0,1.4c-0.5,0.4-1.1,0.6-1.7,0.8c-1.3,0.2-3.3-1-3.3,1.7       c-5.8-0.3-11.4-1.7-17.2-1.5c-1.3,0-2.7-0.4-3-2c2.9-2.6,6.1,0,8.8-0.7c-6.8-0.2-13.9-1.1-21-2.2       C1163.2,256.9,1160.6,256.8,1159.3,254.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791722"),
                d:
                  "M1195,258c-9.9-2.6-19.7-5.3-30-6.1c-1.4-0.1-2.5-0.7-3.3-1.9c0.4-0.4,0.8-0.7,1.2-1.1       c2.2-0.2,4-2,6.3-1.6c4.9-0.7,9.8,1.6,14.8,0.2c4.6-1.3,6.6,3.1,9.8,4.6C1195.4,252.9,1193.3,256.2,1195,258z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2E35"),
                d:
                  "M1169,248c-2.2-0.5-3.7,3-6.1,1c1.3-2.4,3.9-2.2,5.9-3.1c0.7,0.1,1.4,0.1,2.1,0.2       C1171.5,247.9,1169.6,247.3,1169,248z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1721"),
                d:
                  "M1169,248c0.7-0.6,1.3-1.3,2-1.9c1.6-0.4,3.2-0.8,4.9-1.2c9.7-2.2,19.3,0.5,29,0.4       c1.3,0,2.6,0.7,3.4,1.8c0.4,1.1,0,1.9-1.1,2.3c-0.9,0.4-1.9,0.2-2.9,0.1c-2-0.1-5.3-1.2-5.4,1.4c-0.2,2.6,3,1.2,4.8,1.4       c1,0.1,2.1-0.1,2.6,1c0.8,1.7-0.6,2.7-1.6,3.8c-2.7,2.4-5.8,0.9-8.7,0.9l-0.4,0c0,0-0.4-0.1-0.4-0.1c0-1.6-4.4-1.4-1.7-4.3       c0.6-0.7-0.2-1.8-1.6-1.7c-1.2,0.1-2.7,0.1-3.1-1.1c-0.9-2.6-2-3.2-4.6-1.7c-4.4,2.5-9.2-3.6-13.8,0.2       C1170.3,249.4,1169.5,248.5,1169,248z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2E35"),
                d:
                  "M1208,248c-2-2-4.5-0.9-6.8-1.2c-8.4-1.3-16.9-1-25.3-1.9c6.3-3.9,13.3-2.6,20.1-2.9       c4.3,0.7,8.7,1.4,13,2c0.3,0,0.6,0,1,0c3.9,0.6,8,0.9,11,4c0.7,0.7,1.4,1.3,2,2c-0.7,1.3-2,1.7-3.3,2       C1215.4,251.9,1211.5,250.4,1208,248z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76270"),
                d:
                  "M1003,132c4-2.4,8.1-0.6,11.6,0.6c1.3,0.5,4.4-2.7,4.4,1.4c-0.7,0.6-1.4,0.6-2.2,0.1       C1012.1,134.1,1007.6,132.9,1003,132z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD6F78"),
                d:
                  "M1016.8,134.1c0.7,0,1.5-0.1,2.2-0.1c2.3,0,4.6,0,7,0.1c0.3,0.7,0.7,1.3,1,2c-3.3-0.4-6.6-0.8-9.8-1.2       C1017.1,134.6,1016.9,134.4,1016.8,134.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0343F"),
                d:
                  "M1189,276c-4.1,4.7-7,10.9-14.2,12c-1.2,0.2-1.7,0.8-1.8,1.9c-3.7,0.7-4.1-5.1-8-4       c-1.3-2.1-1.8-4.5-2-7c0.3-0.4,0.7-0.5,1.2-0.4c3.1,2.3,3.9-0.3,5.1-2.3c0.5-0.5,1-0.9,1.7-1.1c2.1-0.1,4.2-0.5,5.8,1.7       c1.1,1.6,3,0.7,4.5,0.5c2.4-0.3,4.6-1.6,7.1-1.8C1188.6,275.7,1188.8,275.9,1189,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935F62"),
                d:
                  "M1221,248c-3.7-1.3-7.3-2.7-11-4c5.4-1.1,9.7,1.3,14.1,3.9C1223,248,1222,248,1221,248z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB626B"),
                d:
                  "M1261,332.1c1.7-0.4,3.3-0.8,5-1.2c1.9-0.9,3.8-2,6-0.9c18.3-1.3,36.7-2.7,55-3.9       c10.1-0.7,20.2-0.8,30.3-1.5c5.9-0.4,11.8-1.1,17.7-0.6c2.4,3.4,2,5.2-1.7,5.8c-4.2,0.7-8.5,1.7-12.8,1.5       c-16.7-0.5-33.2,1-49.7,3.3c-2,0.3-4,0.5-5.8-0.7c-9.7,0.6-19.4-1-29.2,0.7c-2.5,0.4-5.4,0.1-7.7-0.8c-2.6-1.1-4.8-0.5-7.2,0.1       C1261,333.4,1261,332.8,1261,332.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B84553"),
                d:
                  "M957,127.1c2.6,0.2,5.4-0.9,7.9,0.9c-2.6-0.1-5.3-0.1-7.9-0.2C957,127.5,957,127.3,957,127.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2331"),
                d:
                  "M1171,276c-0.3,0.3-0.7,0.7-1,1c-1.8,1.4-3.3,3.4-6,2c-0.3,0-0.7,0-1,0c-1.1-1.9-1-4-0.9-6       c0.6-0.6,1.3-1,2.1-1.1c9.2-3.9,18.9-2.1,28.5-2.1c1.4,0,3.1,0,3.3,2.1c-0.3,0-0.7,0.1-1,0.1c-1,0.7-2.3,0.6-3.4,1.2       C1184.8,274.6,1178,276.3,1171,276z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F1B28"),
                d:
                  "M1164,273c-0.6,0-1.3,0-1.9,0.1c-0.7-1-1.4-2-2-3c-0.9-4.3-1.9-8.5-2.8-12.8c0.3-0.1,0.6-0.1,0.9-0.2       c1.1-0.4,2,0.1,2.8,0.7C1166.9,260.6,1168.1,266.9,1164,273z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6373"),
                d:
                  "M982.9,129.2c0-0.4,0.1-0.8,0.1-1.2c4.4-0.1,8.8,0.7,13,2c0.3,0.2,0.4,0.4,0.3,0.6       c-0.1,0.2-0.2,0.3-0.3,0.3c-1,0-1.9,0-2.9,0.1c-3.4-1.8-7-0.5-10.5-1C982.7,129.7,982.8,129.5,982.9,129.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D85662"),
                d:
                  "M652,143c0.3-1,0.7-2,1-3c4,0,7.9-1.8,11.3-2c5.1-0.3,9.4-3.7,15-2.4c3.7,0.8,8.1-0.6,11.7-2.9       c3.6-2.3,7.5-1.3,10,2.3c-0.4,0.5-0.8,1-1.2,1.5c0.7,0.2,1.5,0.4,2.2,0.5c-0.8,1.1-2,0.8-3.1,1.1c-0.3,0-0.6-0.1-0.9-0.1       c-1.7-1.7-3.8-1-5.7-0.9c-9.7,0.7-19.3,2.5-28.8,4.2C659.7,142,655.7,141.6,652,143z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6575"),
                d:
                  "M996,130.8c0-0.3,0-0.6,0-0.8c1.7,0,3.3,0,5.2,0c-0.7,1.3-1.6,0.8-2.3,1.1       C997.9,131,997,130.9,996,130.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E16471"),
                d:
                  "M1159.3,254.1c9.2,3.2,19.1,3,28.5,6c-3.3,0-6.6,0-9.9,0c-4.4,2-8.4-0.2-12.6-1c-2.2-0.9-4.7-1-6.2-3.1       C1159.1,255.3,1159.2,254.7,1159.3,254.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24C54"),
                d:
                  "M1159.1,256c1.9,0.8,4.2,0.6,6,1.9c-1.7,1.5-3.4,1.2-5.1,0.1c-0.6-0.3-1.3-0.7-1.9-1       C1158.4,256.7,1158.7,256.3,1159.1,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C65260"),
                d:
                  "M461,202c-1.9,0.1-4-0.3-5,2c-5.2,2.7-10.7,4.8-15,9c-0.3,0-0.7,0-1,0c-1.3-1.3-2.7-2.7-4-4       c0.5-0.6,0.2-1.2,0-1.9c-0.6-1.9-1.3-4.1,0.6-5.5c2-1.5,4.1-0.5,5.8,1.1c2.6,2.3,4.4,1.9,6.4-1c1.7-2.5,3.5-5.4,7.8-4.5       c2.7,0.6,5-2.4,7.9-2.6c0.5,0.1,0.8,0.4,1,0.9c0.4,2.1-1.6,2.3-2.5,3.5C462.4,200,460.9,200.4,461,202z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4B58"),
                d:
                  "M465,195c-2.8,1.4-5.8,4.3-8.2,3.9c-3-0.6-3.9,1.4-5.7,2c-2.5,0.7,0.1,1.7-0.5,2.5       c-1.5,2.1-6.1,2.7-8.2,0.9c-1.4-1.2-2.7-3.1-4.6-2.1c-1.8,0.9-1.1,3-0.8,4.7c0.1,0.9-0.1,1.6-0.9,2.1c-1.7-2-3.6-3.9-6-5       c0-0.3,0-0.7,0-1c1.1-1.6,2.1-3,4.4-3.4c5.6-1,10.4-4,15.1-7.1c1.1-0.7,2-1.6,3.6-0.9c3.7,1.8,5.4-0.1,5.9-3.6c0,0,0,0,0,0       C462.5,189.1,465,190.9,465,195z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6770"),
                d:
                  "M429,216c6.6,1.3-1.6,3.4,0,4.4C429,219.3,429,217.6,429,216C429,216,429,216,429,216z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B91D29"),
                d:
                  "M430.8,330.2c-1-1.2-1.7-2.5-1.7-4.2c7.6-4.1,15.9-6.1,24.4-5.8c5.4,0.2,10.1-3.4,15.5-2.2       c0.4,0.5,0.3,0.8-0.3,1.1c0.9,0.2,0.8-0.8,1.3-1.1c0.7,0,1.3,0,2,0c1.2,0.9,2.9,1.4,2.3,3.4c-0.5,1.6-2.1,1.2-3.4,1.5       c-3.9,0.9-7.5,2.9-11.6,2.7c-7.2,1.9-14.8,2.3-21.8,5.2C435.3,331.7,433,330.2,430.8,330.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72534"),
                d:
                  "M459,324c5.2,1.2,9.3-3.6,14.4-2.5c0.6-1.7-1.2-2.3-1.5-3.5c2,0,4,0,6.1,0c5,0,10,0,14.9-0.1       c0.3,0,0.7,0.1,1,0.1c0.3,1.3-0.4,2-1.5,2.6c-10.2,0.5-19.6,4.9-29.6,5.9c-0.5,0.1-1,0.1-1.6,0.1       C460.2,326.1,458.8,325.8,459,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72534"),
                d:
                  "M470,318c-0.2,2-1.5,2.2-3.2,1.7c0.8-0.6,1.5-1.2,2.2-1.7C469.3,318,469.7,318,470,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971C2C"),
                d:
                  "M492.9,320c0.4-0.6,0.7-1.3,1.1-1.9c17.3,2.4,34.6,2,52,2c-5.3,1.7-10.5,4.2-16.1,1.4       c-2.2-1.1-2.4,2.2-4.1,1.4c-5.2-2.3-10.8-1.2-15.8-0.8c-5.6,0.5-10.7-1.4-16-1C493.6,320.7,493,320.6,492.9,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B32532"),
                d:
                  "M459,324c0.7,0.6,1.3,1.3,2,1.9c-2.1,3.1-5.7,2.4-8.6,3c-6.6,1.3-13.1,3.6-20,3.8       c-0.5-0.1-0.9-0.3-1.3-0.7c-0.1-0.6-0.2-1.2-0.3-1.8c3.7-0.7,7.6-0.4,11.1-2.2C447.3,325.3,453.6,326.5,459,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A64450"),
                d:
                  "M431.1,332c0.3,0,0.6,0,0.9,0.1c0.4,0.3,0.7,0.7,1,1c2.6,6.9,6.6,13.3,8.4,20.6       c-0.2,0.8-0.7,1.3-1.5,1.5c-3.9-7.1-6.4-14.9-9.8-22.2C430.5,332.6,430.8,332.3,431.1,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2B1B4"),
                d:
                  "M383,343c1.5-2.1,4.5,0.1,6-2c3.3-0.7,6.7-1.3,10-2c1.7,0.9,3.3,2.4,5,0c1.5-3.5,3.4-4.6,6-1       c0.1,0.5,0.3,1,0.2,1.4c-1.4,7,2.9,7,7.8,6.5c0,0,0,0,0,0c1.1,1.1,1.6,2.3,1.4,3.8c-0.1,2.6,0,5.2-0.4,7.8       c-1,5.7-5.6,8.3-10.8,5.8c-2.8-1.3-5.5-0.5-8.2-0.7c-3.6-1.4-5.6-5.3-5.6-8c0.1-6.9-5.5-7.6-9.2-10.5       C384.5,343.7,383.6,343.7,383,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAAEB3"),
                d:
                  "M404,339c-0.5,1.5-1.1,3-1.8,4.9c-1.7-1.5-1.3-4-3.2-4.9C400.7,339,402.3,339,404,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2ACB2"),
                d:
                  "M400,362c3.6-0.7,6.9-1.2,10.4,1.6c1.5,1.2,5.2-1.1,6.6-3.4c1.5-2.7,1.9-5.8,0.2-8.7       c-0.3-0.4-0.7-0.9,0-1.2c0.6-0.2,1.3-0.2,1.9-0.2c1.1-1,2.1-2.4,4-2c0,0.7,0,1.3,0,2c0.3,2.9-0.1,5.5-1.1,8.5       c-1.2,3.6,1.5,7.5,1.3,11.4c-0.1,1.6,0.5,3.2-0.8,4.6c-1.3,1.2-2.5,2.4-3.9,3.5c-5.9,1.6-11.9,1.7-17.9,0.8       c-0.1-0.1-0.4-0.3-0.4-0.3C403.5,372.9,398.7,367.5,400,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA5AB"),
                d:
                  "M422,374c1.3-3.1,0.5-7.3-0.5-9c-3.3-5.3,1.5-9.2,0.8-13.8c-0.1-0.4,0.5-0.8,0.7-1.2c3.9,1.6,7.2,4,9,8       c0.9,2,0.8,4.2,1.1,6.3C434,370.8,428.8,375.3,422,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91202B"),
                d:
                  "M426.2,334.9c2.9,3.9,4,8.6,5.8,13c0.2,1.1-0.2,1.6-1.4,1.3c-4.1-4.1-10-5.5-13.9-9.8       c-1.4-1.5-2.3-2.5,0.2-3.5c0,0,0.3,0.3,0.3,0.3C420.5,337.6,423.4,336.3,426.2,334.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4A3AA"),
                d:
                  "M422,374c10-2.8,10-2.8,10-16c2.2,0.9,0.5,2.7,1,4c1.9,2.4,0.9,5.7,2.9,8.2c0.7,0.8-0.6,1.7-1.4,2.3       c-1.2,0.8-2.1,1.6-1.3,3.2c0.7,2.5-0.8,3.3-2.8,3.6c-1.8,0.3-3.6,0.2-5.4,0c-2-0.7-4.6,0.2-6-2.2C419,375,420.7,374.7,422,374z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0939A"),
                d:
                  "M432,375c-0.9-0.2-2.4-0.4-1.1-1.7c1.1-1.1,2.7-1.7,4.3-2.6c-3.8-2.3-1.7-5.8-2.2-8.7       c1.4,0,2.9,0.1,3-1.9c0.4-0.4,0.8-0.4,1.3-0.2c1.5,2.2,2.3,4.7,3.4,7.1c0.3,0.9,0.3,1.9-0.1,2.8c-0.9,1.3-2.2,2.2-3.2,3.3       C435.5,373.4,434,375,432,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7747A"),
                d:
                  "M436.8,360c-0.3,0-0.5,0.1-0.8,0.1c0-0.3,0-0.7,0-1c0.8-1.9-1.5-2.9-1.5-4.6c-0.6-2.1-3-3.7-1.8-6.3       c0.4,0,0.8-0.1,1.2-0.1c3.7,6.8,5.8,14.4,10,21c0.1,0.5,0.2,1.1,0.2,1.6c0.4,0.9,0,1.4-0.8,1.6c-2.8-1.1-1.9-4.3-3.5-6.1       C438.8,364.1,438,362,436.8,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA5AB"),
                d:
                  "M423,348c-1.1,1.1-2.1,2.4-4,2c-0.7-1.2-1.2-2.5-1-4C419.8,346.4,422.4,344.8,423,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E343D"),
                d:
                  "M432.7,348.1c0.8,2.3,1.6,4.6,2.4,6.9c-0.4,0.3-0.8,0.3-1.2,0c-1.1-1.9-2.2-3.9-3.3-5.8       c0.5-0.4,0.9-0.8,1.4-1.3C432.2,348,432.5,348.1,432.7,348.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB5860"),
                d:
                  "M433.9,355c0.4,0,0.8,0,1.2,0c0.8,1.2,2.6,2.3,0.8,4C435.3,357.7,434.6,356.4,433.9,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931A1D"),
                d:
                  "M426.2,334.9c-0.3,0.2-0.7,0.2-0.8,0.5c-2.2,5.8-5.3,2.7-8.2,0.9c2.7-1.6,5.6-2.6,8.6-3.3       C426,333.6,426.1,334.3,426.2,334.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M440.9,354.1c-2.8-7.1-6.6-13.7-8.8-21c2.5-0.8,3.3,1.2,3.9,2.8c1.3,3.2,3.1,5.8,5.8,7.7       c-0.4-1.7-1.2-3.4-3-4.5c-1.6-1-2.9-2.6-2-4.6c0.8-1.8,2.8-1.5,4.4-1.6c2.1-0.1,4.3,0.1,6.4-0.2c1.5-0.2,3.2,0,4.3-1.1       c3.2-3,6.5-3.7,10.3-1.4c1.3,0.8,2.1-0.4,3.2-0.7c2.3-0.6,4.5-1.1,6.6,0.6c4.7-0.6,9.3-1.7,14-1.5c2.6,0.1,8.2-1.7,6.3,5.1       c2.5-1.3,1.1-3.7,2.8-5.4c1.2,1.6,1.5,6.7,5,2c0.7-0.9,3.5-0.1,5.3-0.4c3.7-0.6,5,0.6,3.7,4.3c1.8,2.6,0.9,4.3-2,5       c-1.6,0.4-2.9,1.4-4.5,1.6c-3.3-0.2-6.9-1.8-9.6,1.7c-0.5,0.6-1.6,0.6-2.4,0.2c-2.2-1.4-0.5,0.2-0.6,0.6       c-0.2,2-1.8,1.9-2.9,1.5c-2.3-0.7-4.1-1.1-5.7,1.6c-0.7,1.1-3,1.9-4.4,1.9c-5.6,0.2-7.8,4.2-9.9,8.3c-2.4,0.8-5.4,1.1-4.7,4.9       c-4,3.9-9.4,5-14.3,7.2c-0.8,0.1-1.5,0-2.1-0.6c-0.3,0-0.6,0-1,0c-0.3-1.1-0.6-2.2-0.8-3.2       C444.4,360.8,440.5,358.1,440.9,354.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1525C"),
                d:
                  "M440.9,354.1c0.6,3.7,4.8,6.3,3.3,10.7c-1.6-3.1-3.4-6.2-4.3-9.6C440.2,354.8,440.6,354.4,440.9,354.1z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA4A54"),
                d:
                  "M1129,160c-1.1-1.3-2.8-2.1-3-4C1128.6,156.1,1129.1,157.8,1129,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E4555F"),
                d:
                  "M1307,260c-2.8,0.1-4.2-1.6-5-4c-0.3-1-1.4-1.2-2-2c0,0,0,0,0,0c-0.3-1.5-2.5-1.6-2.6-3.5       c2.1-0.8,3.5,1.3,5.3,1.3c4.8-0.1,8.6,2,11.6,5.7c0.7,0.9,1.8-0.2,2.7-0.5c6.3,1.3,11.5,4.9,17,8c0.6,1.9,2,2.8,3.8,3.6       c2.2,1,3.8,2.7,3.2,5.4c-4.7,0.2-7.1-4.5-11.8-5c-7.8-0.7-13.5-6.8-20.5-9.7C1308,259.1,1307.4,259.4,1307,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF4C57"),
                d:
                  "M1248,218c2.4-1.4,3.2-0.4,3,2C1248.3,221.9,1248.6,219.2,1248,218z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D9525C"),
                d:
                  "M1194,194c-2.7,0-5.3,0-7.9,0c0.1-0.5,0.3-1.4,0.2-1.4c-5.3-1.7-9.2-6.6-15.3-6.6       c-3.4-1.9-6.2-4.8-10-6c0-0.7,0-1.3,0-2c3.2,0.2,7-1.2,8.7,3.4c0.5,1.4,2.6-0.1,4.1,0.6c3.7,1.6,7.2,3.4,10.3,6       c2.5,0.1,4.9,0.5,7,2C1193.4,190.3,1193.7,192.2,1194,194z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E44856"),
                d:
                  "M1191,190c-2.5,0-5.2,0.6-7-2c2.3-3.2,4.7-2,7,0C1191,188.7,1191,189.3,1191,190z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d:
                  "M1216,206c-2.3,0.3-4.6,0.5-6-2l0,0c1-0.8,2-0.8,3,0C1214.4,204,1217.4,201.8,1216,206z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD5A59"),
                d:
                  "M1213,204c-1,0-2,0-3,0c0.1-0.8,0.2-1.7,1.3-1.8C1212.6,202,1212.9,203,1213,204z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1835"),
                d:
                  "M285,391c0,1.3-3.2,0.3-1.9,2.5c0.6,1,2.1,2.4,3.1,0.9c0.9-1.3,1.3-1.3,2-0.2c0.8,1.3-0.2,1.6-1.3,1.9       c-1.2,0.3-2.7-0.6-3.7,1.5c3.4-0.2,6.6-0.3,9.7-0.5c-6.4,2.6-13.4,1.6-20,3c-4.2,0.4-0.8-5.2-4.2-5.4c0.7-0.5,1.5-1.1,2.2-1.6       C275.6,392.1,280.2,390.8,285,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("50131C"),
                d:
                  "M125,481c0,2.7,0,5.3,0,8c-1.9-0.3-3.2-0.9-2.4-3.2c0.6-1.6,0.9-3.2,1.4-4.8       C124.3,481,124.7,481,125,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE545F"),
                d:
                  "M465,195c-1.5-2.7-3.4-5.2-6-7c2.8-0.3,5.7-1,8,1.5c1.7,1.8,3.3,3.7,5,5.5c-1.4,1.7-3.3,0.8-5,1       c-0.7,0.6-1.3,0.6-2,0C465,195.7,465,195.3,465,195z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("935659"),
                d:
                  "M1800,308c1.2,1.9,3.8,0.1,5,2c-4-0.6-8.5,1.5-12-2C1795.3,308,1797.7,308,1800,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0565E"),
                d:
                  "M1787,312c6.7-1.6,13,1.3,19.4,2.4c11,1.9,22.1,2.4,33.1,4.3c2.2,0.4,4.2,2,6.5,1.2       c0.3,0.4,0.3,0.9-0.1,1.3c-1.2,0.8-2.7,1.2-3.8,0.5c-1.7-1.2-2.2,0.8-3.4,0.9c-15.9-2.4-31.8-5.3-47.7-7.8       c-1.3-0.2-2.6-0.5-3.7-1.3C1786.8,313.1,1786.7,312.6,1787,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A7575B"),
                d:
                  "M1846,321c0-0.3,0-0.7,0-1c3-3.1,6.6-0.4,8.8,0.4c5,1.8,10.5,0.9,15.2,3.6c1.3-1,2.6,0.2,3.8,0       c3.8,0.1,7.5,0.8,11.2,1.7c0.6,0.7,0.6,1.5,0.2,2.4c-0.6,0.6-1.4,0.9-2.3,0.9c-11.2-1.7-22.3-3.7-33.4-5.8       C1848.1,323,1846.6,322.7,1846,321z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE545C"),
                d:
                  "M1787,312c0,0.3,0,0.6,0,0.8c-5.6,1.6-10.9,0.4-16-2.1c1.5-1.4,3.3-0.6,5-0.8       C1779.7,310.4,1783.5,310.2,1787,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4585C"),
                d:
                  "M1873,325c-1-0.3-2-0.7-3-1c0.4-0.8,1.2-1,2-1c1,0,2,0,3,0c0.5-0.1,1,0,1,0.5c0,0.4-0.3,0.8-0.8,0.9       C1874.4,324.5,1873.6,324.4,1873,325z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B252E"),
                d:
                  "M1771,310.8c5.3,0.7,10.7,1.4,16,2.1c17.7,3,35.3,6,53,8.9c3.3-0.5,6.4-0.3,9.2,1.8       c-0.4,1.2-1.4,1.7-2.5,2c-6.6-0.2-13-2.3-19.5-3.2c-13.3-2.3-26.7-4.5-40.1-6.6c-9.1-1.4-18.3-2.4-27.5-3.9       c-1.6-0.5-3.2-0.8-4.8-0.7c-8-1.3-16.4-0.3-23.8-4.5c0-0.3,0-0.6,0-1C1744.5,306.7,1757.7,309,1771,310.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C4424C"),
                d:
                  "M1685,308c-0.7,0-1.3,0-2,0c-4.3-1.2-8.7-0.7-13-1c-5.8-2.1-11.9-0.8-17.8-1.3       c-7.7-0.6-15.5-0.8-23.2-1.7c-0.5-1.9-1.4-2.8-3.6-2.8c-3.9,0.1-7.9,0.7-11.7-0.6c-0.9-0.7-1.4-1.5-0.6-2.6       c2.8-0.4,5.8,1.9,9.2-1.5c-7.5,0-14.3,0-22,0c1.9-2,3.9-0.9,4.7-2.3c6,0.3,12,0.6,18,0.9c5.5,1.8,11.3,0.8,16.9,1.9       c1.7,0.3,3.6,0.1,5.2,1c7.2,2.8,14.8,2.6,22.4,3c1,0.1,2,0,3,0.1c1.1,0.1,2.6,0.1,2.5,1.7c-0.1,1.1-1.8,0.4-2.3,0.9       c10.8-2.4,21.6,0.3,32.4,2c1.3,2.4-0.2,2.7-2.2,3C1695.4,309.6,1690.3,307.9,1685,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF4652"),
                d:
                  "M1703,306c-11.3,0.4-22.4-3.6-33.9-1.7c0.2-2.3,2.6-0.4,2.8-2.2c-8.1-0.5-16.3,0.9-24.1-2       c-1.3-0.5-2.7-0.3-2.8-2.1c10.8,0,21.3,2.1,32,2.9c18,2,36,4,54,6c8,1.1,16,2.1,23.9,3.2c-0.2,3.6-3.4,3.1-5.2,2.9       c-3.2-0.4-6.2-0.6-9.4,0c-1.1,0.2-2.2-0.3-3.2-0.9c-0.9-0.6,1.6-1.8-0.2-1.3c-5.1,1.3-10.1,1.5-15.1-0.6       c-4.3-1.8-8.9,0.6-13.2-1.2c-1-1.3-2.4-1.8-4-1.9C1704,306.9,1703.5,306.5,1703,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("995052"),
                d:
                  "M1947,339c0,0.3,0,0.7,0,1c-1,1.2-2.4,1.2-3.8,1.2c-0.8,0-1.6-0.2-2.3-0.5c-2.4-1.7-5.1-2.2-7.8-2.9       c-3.1-0.8-6.5-1.2-8-4.7c0.7,0,1.3,0,2,0C1934.5,332.2,1940.2,337.3,1947,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A55559"),
                d:
                  "M1925,333c3.7,1.9,7.3,3.9,11.7,4.2c1.8,0.1,3.5,1,4.3,2.8c-0.7,0.9-1.8,1.2-2.9,1.3       c-8.5-1.4-17.3-2.4-25.2-6.1c-3.9-1.8-8.6-1.1-12-4.3c-0.2-0.6,0-1.1,0.5-1.4c1.9-0.8,3.8-0.3,5.6,0.5       C1913.1,330.1,1918.8,333.1,1925,333z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C5256"),
                d:
                  "M1907,330c-2,0-4,0-6,0c-5.6-0.2-10.9-1.8-16-4c-4.1,0.6-8-0.8-12-1c0-1.3,2.5-0.2,2-2       c0.2-1.8,1.4-2.3,2.8-1.8c8.5,3.3,17.5,4.8,26.3,7C1905.1,328.5,1906,329.4,1907,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF454E"),
                d:
                  "M1549,304c-8.3,0.1-16.6-0.4-24.9,0.9c-0.9,0.1-1.6-0.1-2.1-0.9c5.5-2.1,11.4-1.3,16.9-2.1       c4.7-0.7,9.8,0.1,14.5-2.1c1.5-0.7,4-4,6.2-0.3c0.3,0.5,1.4-0.3,1.4-0.9c0.1-2.9,2-2.4,3.9-2.8c2.3-0.6,3.7,0.5,5.5,0.8       c6,1.2,12.5,3.5,18.5-0.6c3.8,2,8.1,0.9,12.1,1.9c1.2,0.3,2.6,0.1,4,0.1c1.6,3.6-0.3,4.6-3.4,4.5c-13.8-0.7-27.6,1-41.4,0.6       C1556.5,303,1552.6,302.6,1549,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74148"),
                d:
                  "M1549,304c2.3-3.7,6.2-1.7,8.9-1.7c12.6,0.1,25-1.3,37.6-1.4c2,0,4.7-0.4,5.8,0       c3.9,1.6,3.4-0.8,3.7-2.9c0.3,0,0.7,0,1,0c2.3,2.3,5.3,1.3,8,2c5.7,0,11.5,0,17.2,0c0.7,2.5-2.8,1.9-2.2,4       C1602.3,304,1575.7,304,1549,304z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF454E"),
                d:
                  "M1614,300c-5.3,1.4-7.1,1-8-2c2.3,0,4.7,0,7,0C1613,298.8,1613.2,299.6,1614,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B192C"),
                d:
                  "M1965,632c1.3,0,2.7,0,4,0C1967.7,635.5,1966.3,632.7,1965,632z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53B47"),
                d:
                  "M1468,306c3.4,3.6,7.9,2.8,12.1,3c-2.9,1.7-6,0.6-9.1,1c-1.7,0.2-3.6-0.5-5.1,0.9       c-3.6,2.8-8,1.3-11.9,1.8c-5.8,0.8-11.8,1.2-17.6,1.6c-4.1-0.3-8.1,0.5-12.7,1.4c1.6,0,2.5,0,3.5,0c0.8,0,1.5,0.2,2.2,0.4       c3.7,0.8,7.3,0.8,10.9-0.2c1.1-0.3,2.3-0.3,3.5-0.4c5.3,0,10.6,0,15.8,0c1.8,0,3.7-0.2,5.2,1c0.3,3.4-2.4,2.4-4,2.6       c-5.9,1-11.9,0.4-17.8,0.8c-17,1.1-34,2.6-51.1,3.3c-2.6,0.1-5.3,0.3-7.9-0.4c-3.4-2.6-4.6-7.4-9-8.9c-1.3-0.7-2.3-1.7-2.9-3       c0-0.3,0-0.7,0-1c2.4-1.3,4.1,0.8,6.2,1.2c4.5,1.6,8.9-0.3,13.3-0.2c9.8,0.3,19.6-0.6,29.3-1.3c10.9-0.7,21.9-1.1,32.7-2.3       c2-0.2,4.3,2.5,6.3-0.7c0.6-0.9,3.4-0.7,5.2,0.2C1466,306.7,1467,306.4,1468,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC545D"),
                d:
                  "M1377,312c-1.7-0.7-3.3-1.3-5-2c1.8-1,0.6-2.7,1-4c3.2,3,6.9,0.9,10,0.3c11.6-2.4,23.3-2.1,35-2.4       c5.6-0.1,11.3-0.7,16.8-2c2.8-0.6,2.8,3.5,5.3,2.1c1.7,0,3.3,0,5,0c-3.2,1.2-6.4,1-9.8,1c-3.5,0-7.2,0.7-10.8,1.2       c-6.2,0.8-12.5-0.2-18.6,0.9c-8,1.5-16.2,0.2-24.2,1.5c-1,0.2-1.5,0.4-1.6,1.3C1379.3,311.1,1378.1,311.5,1377,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D3636A"),
                d:
                  "M1382.1,328c-0.1-0.6-0.2-1.3-0.3-1.9c-0.4-0.8-0.4-1.6,0.1-2.4c0.8-0.4,1.6-0.4,2.4,0       c3.8,2.4,8.1,3.1,12.4,2.7c15.2-1.6,30.4-2.6,45.7-3c6.1-0.2,12.2-1.2,18.3-0.4c6.1,0.7,12.2,0.7,18.3,0.3       c6-0.4,11.2,2.6,16.8,4c1.6,0.4,2.3,1.9,0.7,3.4c-2.2,1.1-4.5,0.9-6.8,0.9c-10.3,0-20.5,0-30.8,0c-1.8,0-3.6,0.4-5.4,0.8       c-0.6,0.1-1.2,0.1-1.7,0c-5-1.7-10.1-0.6-15.1-0.9c-2.7,0.1-5.4,0.1-8.1,0c-13.6,0.1-27.1,0.3-40.7,0.1       C1385.4,331.3,1382.8,331.3,1382.1,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE6874"),
                d:
                  "M1380.8,344.7l-0.5,0.1c-6.7-1.1-13.4-1.6-20.2-1.4c-2.2,0.1-4.3,0-6.3-1c-3.5-2-7.3-0.9-11-1.1       c-1.6,0-3.2,0.6-4.8,0.4c-1.8-0.6-3.9-0.2-5.2-2c0.2-2.1,1.8-2.6,3.4-3c1.1-0.3,2.6-0.4,2.9-1.6c1.3-4.9,5.2-4.2,8.8-4.2       c7.8,0.1,15.6,0,23.3-0.1c2.6,0,4.6-0.9,5.3-3.5c0.4-1.4,0.7-2.6,2.5-2.3c1.8,3.9,0.1,8.3,1.9,12.2       C1380.8,339.7,1380.8,342.2,1380.8,344.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF636D"),
                d:
                  "M1379,325c-2.4,1.6-1.2,5.3-4,6.8c-0.7,0.4-0.6,1.6-2.1,1.2c-9.6-2.2-19.3-0.4-29-1c-1-0.1-2.5,0-2.5,1       c0.3,5.2-3.4,4.9-6.8,5.3c-0.6,0.1-1.1,1.1-1.7,1.7c-1.5,1.5-3.4,1.2-5.2,0.9c-8.9-1.3-17.8-0.2-26.7-0.6c-0.9,0-1.7,0.1-2.6,0       c-1.6-0.2-3.3,0-4.9-0.8c-0.2-0.2-0.4-0.4-0.6-0.6c4.6-2.8,9.5-2.8,14.6-1.2c0-2.2-2.3-2.3-2.5-3.8c19.3-3,38.6-4.6,58.2-4.1       c3.4,0.1,6.8-0.8,10.2-1.2c3.7-0.5,2.4-2.7,1.6-4.7c0.3-0.3,0.7-0.7,1-1c1.4-1,2.2-0.2,2.9,1C1378.9,324.3,1379,324.7,1379,325       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53D48"),
                d:
                  "M1378.9,324c-1-0.3-1.9-0.7-2.9-1c-1.4-1.8-3.5-1.5-5.3-1.3c-6.9,0.6-13.8,0.7-20.6-0.9       c-1.1-0.2-1.4,0.8-2.1,1c-6.5,1.8-12.7,0.8-19-1c-2.6-0.8-5.8,1.5-8.2-1.6c0.3-0.3,0.6-0.9,0.9-0.9c6.9,0.1,13.7-2.9,20.2-1.9       c5.9,0.9,12-2.8,17.6,1.3c0.6,0.4,2.2,0.3,2-0.5c-1-3.7,2.7-1.7,3.5-3.1c2,1.6,3.3-0.5,4.9-0.9       C1374,315.9,1377,319.5,1378.9,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C26B74"),
                d:
                  "M1382.1,328c1.2,1.7,2.9,2.2,4.9,2c1.4,3.6,1.2,7.3,0.7,11c-0.4,1.3-1.3,2-2.5,2.4       c-0.8,0.1-1.5,0.1-1.9-0.7c-0.4-4.2-0.9-8.5-1.3-12.7C1382,329.4,1382,328.7,1382.1,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA414C"),
                d:
                  "M1382.1,324c-0.1,0.7-0.2,1.4-0.3,2.1c-1-4.8-3.6-8.6-6.9-12.1c4,0.3,7.6,3.9,8.1,7.9       C1383.7,323.1,1382.6,323.4,1382.1,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1A25"),
                d:
                  "M1977,459c-2.5,0.7-5.9-0.8-7,3c-3.5-1.5-6.3-4.7-10.7-4c-0.3,0.1-0.7,0-1-0.1       c-11.7-6.5-23.6-9.8-36.3-9.9c-2.7,0-5.4-2.8-8.1,0c-6.1-2.5-12.4,1.8-18.5-0.7c-9.4,5.5-20,0.9-29.8,3.3       c-0.2,0-0.5-0.4-0.7-0.6c-0.2-4.2,1.4-5.6,4.9-4.3c1.4,0.5,2.4,0.7,3.7-0.1c1.7-1,3.6-1,5.3,0c4.1,2.4,5.2,0,5.8-3.4       c0.4-0.3,0.8-0.5,1.3-0.5c6.6,2.3,12.6-1.2,18.9-2.2c2.3-1,4-2.8,7.2-0.7c1.6,1,5.6-0.5,8.5-0.9c6.5,1.4,12.6,4,19,5.8       c7,2.5,14.2,4.3,21.3,6.4c2.1,0.8,4.4,1.1,6.5,2c3.6,1,7.3,1.8,10.9,3.1c1.1,0.5,2.4,0.9,2.9,2.3       C1980.3,459.5,1978.1,457.7,1977,459z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A01A24"),
                d:
                  "M1885,442c-0.6,1.8,2.1,4-0.3,5.4c-2.1,1.2-4.3,0.9-6.3-0.9c-1.1-1-3.4-1.1-4.2-0.2       c-2,2.3-2.9,1.9-5.4,0.2c-2.3-1.6-2.7,2-3.8,3.5c-2.2-1.4-4.8-0.1-7-0.1c-5.7,0.1-6-2.9-6-6.9c0.3,0,0.7,0,1-0.1       c3.1-2.5,6.9-1.6,10.1-1.1c5.9,1,11.5,0.4,17.2-0.5C1881.9,441.2,1883.6,440.7,1885,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M1996,478c-2.8,3.8-8,5.4-9.2,10.6c-0.2,1-0.6-0.4-0.8-0.8c-0.3-0.4-0.4-0.9-0.6-1.3       c-2.6,4.2-3.8-3.8-6.3-0.7c-0.1,0.1-0.5,0.1-0.8,0.1c0.1-0.6,0.2-1.3,0.2-1.9c0.1-2.7,0-2.7-2.9-1.7c-1.6,0.5-1.8-2.2-3.5-1.6       c0.9-5.4-2.4-7.6-6.8-8.9c-0.2-0.1-0.2-1.2-0.3-1.9c0.3,0,0.7,0,1,0c3.3,0.2,6.3,1.4,9.2,2.8c1.7,0.8,3.8,0.8,5.7,0.2       c0,0.3,0,0.7,0,1c1,1.3,1.8,1.9,4,1.5C1988.8,474.9,1992.8,474.9,1996,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851724"),
                d:
                  "M1996,478c-4.2-0.3-8.1-3.2-12.8-0.3c-2.2,1.4-2-2-2.2-3.7c0.7,0,1.3,0,2,0c3.8,0.8,7.7,0.3,11.5,1       c3.3,0.6,2.9-1.6,2.2-3.7c-0.3-0.4-0.5-0.7-0.8-1.1c-1.9-2.5-2.7-4.9,0.7-7c2.6-0.3,4.8,1.1,5.7,3c1.5,3.2,4.2,4.7,6.9,6.5       c0.2,2.1-1.4,2.9-2.7,4c-1.5,0.6-2.6,2.5-4.5,1.2l0,0c-1.7-0.7-3.3,1.9-5,0l-0.5,0L1996,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911927"),
                d:
                  "M1997,470c2.7,1.4,1.5,3.6,0.9,5.5c-0.9,2.6-2.6,0.8-4.1,0.6c-3.7-0.4-7.4-0.5-10.8-2.1       c5.5-0.6,9.2-5.2,8-10c-1.5-1.9-4.5-3.5-1.6-6.5c6.3,0.6,7.6,1.8,6.6,6.5C1994.7,466.3,1995.1,468.3,1997,470       c-0.5,0.4-0.8,0.9-1.1,1.5C1996.3,471,1996.5,470.4,1997,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6212B"),
                d:
                  "M1989,458c0.1,2.2,0.9,4.2,2,6c-4-3.4-8.7-5-14-5c0.7-1.3,2.1-0.7,3.2-1.3c-0.7-0.6-1.5-1.1-2.2-1.7       c0.2-0.8,0.7-1.3,1.4-1.6c1-0.3,2-0.3,3-0.1C1984.7,455.3,1988.2,454.2,1989,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A41B2E"),
                d:
                  "M1979,470c-0.3,0-0.7,0-1,0c1.9-2.1,3.8-4.3,6.9-1.9c1.1,0.8,1.4,2,0.7,3c-0.9,1.2-1.8,0.2-2.3-0.6       C1982,468.2,1980.4,470.2,1979,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B21B2B"),
                d:
                  "M1885,442c-10.6,3.3-21.3,1-32,1c-0.4-0.3-0.8-0.8-1.2-0.8c-5.8-1.1-6.1-1.9-2.8-7.1       c1.5-0.4,2.7-1.5,4.3-1.8c2.1-0.1,4.2,0.5,5.5,1.9c2.2,2.6,6.2,1.6,7.9,4.6c0.2,0.3,0.2,0.3,0.5,0c2.8-2.7,6.5-3,9.8-4.3       c4-1.6,7.7-2.1,11.8-2.3c0.2-1.8-1.4-4.1,1.3-5.3c5.8,0.1,10.2,4.4,15.8,5.2c0.9,0.8,3.3-0.7,3,2c-7.9,1.4-15.2,4.9-22.9,7       C1885.7,442,1885.3,442,1885,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B72B39"),
                d:
                  "M1853,434c-1.1,1.2-2.2,2.4-4,1c-0.3,0-0.7,0-1,0c2.2-2.5,5.4-3.3,8-5c3.9,0.5,7.5-0.2,10.9-2.3       c0.3-0.2,0.7-0.4,0.7-0.5c-1.6-5.3,2.9-2.2,4.4-3.1c0,0,0,0,0,0c4.2,1.4,4.3,1.8,1.6,4.9c-2.3,2.6-4.7,4.7-8.5,3.7       c-1.4-0.4-2.6,0.1-3.7,0.8C1858.7,435.3,1855.7,432.5,1853,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD5863"),
                d:
                  "M1835,425c-8-1.9-15.8-4.4-24-5c-1.1-0.1-2.3,0.2-3-1c0.4-1.5-0.8-1.5-1.6-1.9c-2.2-0.8-3-2.4-2.6-4.7       c0.4-2.2,1.6-4.3,3.7-4c9.1,1.2,17.9-3.1,27-1.6c1,0.2,2,0.3,2.6,1.2c0,0.7,0,1.3,0,2c0,2,0.1,3.9-0.8,5.8       c-0.4,0.7-0.8,2.2-1.2,1.8c-3.6-2.8-5.1,2.6-8,1.8C1835.2,420.6,1836.3,421.3,1835,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF5760"),
                d:
                  "M1837,408c-6.1,0.5-12.4-1.1-18.4,1.8c-2.3,1.1-5.6,0.3-8.3-0.3c-2.1-0.4-3.8-0.3-4.8,1.3       c-0.7,1.1-1.4,2.9-0.5,4.2c1,1.6,2.7,1.6,4.4,1.1c0.8-0.2,1.6-0.2,2.2,0.8c-0.6,1.6-2.5,1.2-3.6,2.1c-6-1-12-2-18-3       c0-0.3,0-0.7,0-1c-0.3-0.9-0.7-1.8-1-2.6c-5.3,3.3-7.3-3.8-11.6-3.9c-0.6,0-2.6-1-1.2-2.4c0.9-1,1.9-0.9,2.5,0.8       c0.6,1.8,1.9,1.1,2.1-0.2c0.3-1.7,1.2-2.6,2.2-3.7c9.1-3.6,18.9-3.9,28.2-6.8c2.8-0.9,5.9-0.6,8.6,1.2c4.8,3.2,11,3.6,15.3,7.9       c1.4,1.4,2.2-1.7,3.8-1.3C1837.2,404.8,1841.6,408.6,1837,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7333F"),
                d:
                  "M1861,433c0.5-2.8,2.7-2.3,4.2-1.7c5.2,2.2,6.4-2.9,9-5c1.3-1-2-1-2.2-2.3c2.8,0.5,5.3-0.9,8-1.1       c3.5,0.8,7,1.6,9.7,4.1c-3.4,0.6-6.3,2.3-8.9,4.5c-5.4,4.6-12.3,2.9-18.5,3.9C1860.8,435.7,1860.6,434.3,1861,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1213,455c-0.1,1,0.2,2.3-0.3,2.9c-1.6,1.9-1.1,2.1,1.1,2.7c4.6,1.1,1.7,5.4,3,8.1       c0.2,0.4,0.7,1.9,0.6,3c-3.3-0.2-3.8-3.6-6-4.7c-0.3-0.1-0.4-0.8-0.3-1.1c0.4-1.1,2.6-1.8,1.2-3.2c-1.6-1.6-2.9,0.7-4.5,1       c-0.2-1-0.1-2.2-0.6-2.7c-1-1.1,0.2-3.6-2-3.4c-0.7,0.1-1.4,1.8-1.1,3.5c0.3,1.7-1.6,0.9-2.3,0.3c-2.7-2.4-4.7-3.4-8-0.1       c-1.5,1.5-5.6,2.6-7.5-1.5c-0.8-1.8-1.4-2-2.2,0.4c-0.8,2.4-3.6,0.1-5.7,1.3c-2.7,1.6-1,2.2-0.3,3.3c-2.5,1.6-3.9-2.4-6.7-1.1       c1.6,1.9,3.6,2.9,5.7,3.8c0.7,0.3,0.8,1,0.5,1.7c-0.2,0.6-0.9,0.7-1.2,0.3c-2-3-3,0.7-4.5,0.7c-1.8,4.4-5.2,4.3-9.5,4.9       c-9.8,1.3-19.4-3.5-29-0.3c-1.9,0.6-4,0.1-5.9-0.1c-1.2-0.1-2.3-0.6-3.5-0.4c-11.2,1.8-22.6-0.4-33.8,1.1       c-2.6,0.3-5-0.1-6.2-3.1c-0.4-1.4-0.3-2.7,0.2-4c0.9-1.6,2.2-2.4,4-2.6c7.7-0.9,15.1-3.2,22.7-4.7c9.6-1.4,19-4.2,28.5-6.1       c11.9-2.9,23.8-5.6,35.9-7.9c1.3-0.3,2.6-0.7,3.8-1c2.8-0.9,5.7-1.2,8.5-1.9c2-0.3,4,0.2,5.9-0.9c9-2.6,17.9-5.1,27.3-5.5       c3,1.9,3.3,4.6,1.4,7.3c-1.4,2-7,2-8.5,0.1c-1.1-1.5-2-1.1-2.7-0.1c-1.9,3-5,3.6-8.6,4.6C1206.8,450.2,1209.1,454.1,1213,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C28"),
                d:
                  "M1085,472c1.2,2.6,3.5,2,5.6,1.9c7.3-0.3,14.6-0.6,22-0.9c1.6-0.1,3.3-0.3,4.8,0.9       c1.6,1.3,2.8,1.6,3.4-0.9c0.2-0.8,1.3-1.1,2.1-0.8c6.4,2.4,12.7,0.5,19-0.2c2.5-0.3,5.1,0.2,7.3,1.1c5.7,2.4,11.5-0.9,17.3,0.7       c2.5,0.7,3.5-2.7,5.5-3.8c-0.5,5.6,4.4,2.8,5.7,2.7c4-0.4,7.8,0.8,11.7,0.9c7.2,0.2,14.5,0.9,21.7-0.6l0,0c2,0.7,3.9,0.1,5.9,0       c1.7-0.1,4.2-3.5,4.9,1.2c0.1,0.9,1.1-0.3,1.5-0.2c2.5,0.4,5.4-2.3,7.5,1c0.2,0.3,1.4,0.3,1.9,0c5.6-3.8,11.7-0.9,17.6-1.4       c3.5-0.3,6.9-0.7,9.9,1.5c0.3,0.4,0.5,0.8,0.6,1.2c-0.1,2.2-0.5,4.1-3.4,3.1c-5.4-1.8-10.6-1.3-15.4,1.9       c-3.2,4.8-8.1,2.1-12.2,2.5c-1.6,0.1-3.3-0.2-4.9-0.7c-9.6-1.4-19.3-0.4-29-1.5c-12-1.3-24.2-0.8-36.3-0.3       c-2.2,0.1-4.7,0.5-4-2.3c0-1.5-1-0.7-0.3-0.9c0.3-0.1,0.4,0,0.4,0.3c0.2,2.6-0.8,4.2-3.7,4c-8.3-0.6-16.6,0.8-24.9-0.1       c-1.7-0.2-4-1.5-5.3,1.3c-0.4,0.8-1.4,0.6-2.2,0.2c-4.4-2.1-9.1-0.5-13.6-0.8c-7.1-0.5-14.2,2.6-21.2-0.7       c-0.5-0.2-0.9-1-1.6-0.4c-4.3,4-9.2,2.9-14,1.3c-6.2-2.1-12.5,0.2-18.7-0.4c-2.2-0.2-4.8,0.7-5.6-2.5c3.8-2.2,8.1-2.7,12.2-3.5       c1.4-0.3,3,0,4.3-1c6.8-1.5,13.5-3.6,20.6-2.9C1083.2,472.9,1083.7,471.2,1085,472z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1325,442c0,2,0.2,4,0,6c-0.6,4.7,3.2,4.7,6,5.8c0.5,0.2,1.1,0.4,1-0.8c-0.3-3,2.5-1.4,3.7-2.2       c1.9,3.2,5.3,0.1,7.2,2.7c1.6-2.8-2.3-2.1-1.4-3.9c0.7-1.4,1.7-2.5,3.4-2.3c0.7,4.1,0.5,6.3-5.1,7.5c-4,0.9-7.2,2.3-11.2,0.5       c-1.4-0.6-3.4-1.1-4.2,1.6c-0.6,2-2.7,0.7-4,0.5c-4.4-0.5-9.5,1.9-13.1-2.8c-0.1-0.1-0.4-0.2-0.4-0.2       c-3.6,3.7-7.1-0.3-10.6-0.1c-1.4,0.1-3.4,0.7-2.1,3.3c0.5,1.1,0.7,2.7,0.3,3.8c-0.4,1.1-1.4,2.4-2.9,2.4       c-0.6,0-1.4-0.4-1.7-0.9c-1.2-1.6,0.8-1.8,1.3-2.6c0.7-0.9,0.8-1.7,0.3-2.7c-1.8,0-1.9,1.9-3,2.4c-0.7,0.4-1.9,1.1-2.2,0.8       c-2-1.7-3.3-4.2-6.8-2.9c-2.7,1-5-1.2-7.1-2.5c-2.4,0.3,0.7,4.2-2,3.3c-1.6-0.6-4.6-1.4-4.4-4.3c0.3-3.7-2.4-4.5-5-5.3       c-1.9,1.2-2.8,0.1-3.3-1.6c3.8-1.3,2.8-6.9,6.9-8c0.5-0.2,0.9-0.3,1.4-0.3c4.9-2.2,9.9-2.1,15.1-1.3c4.3,0.7,8.1-1.3,12.2-1.8       c1.3-0.3,2.6-0.4,3.9-0.3c8,0.9,15.7,3.8,23.8,4C1322.6,439.8,1324.3,440.1,1325,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1336,424c2.6-0.5,4.3,1.1,6.4,2.2c3.7,1.9,7.8,0.8,11.7,0.6c1.5-0.1,2.2-0.7,2.5,1.4       c0.2,1.3,2.5,1.8,3.3,1.3c3.8-2.2,7.2,0.8,10.8,0.6c3.5-0.2,1.5,4,4,5.3c0.7-1.9,1.5-4.3,4.4-3.1c2.3,1,2.8,3,2.8,5.3       c0.1,2.5,0.9,4.9,0.9,7.4c0,3.1-0.7,5.3-5.1,4.2c-4.4-1.1-9.2-2.4-13.8-0.1c-6.8,0.1-13.3-1.9-19.8-3.4       c-6.1-1.4-12.4-1.5-18.2-3.6c-2.6-5-8.1-3.4-12.1-5.3c-1.8-0.9-4.4-0.3-5.6-2.5c-0.4-1.1-0.5-2.3-0.8-3.4       c-0.6-2.9,0-4.5,3.5-3.8c2.4,0.4,5,0.9,6.8-1.7c0.3-0.4,1-0.9,1.2-0.6c2.7,3,6.2-0.6,8.7,1C1331.3,427.8,1333.5,425.9,1336,424       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1213,455c-1.5,0-3,0.2-4.5-0.1c-1.1-0.1-4.6,1.1-1.7-2.2c-1.9-1.1-3.5-2.9-6.1-2.1       c-0.1-1.9,1-2.3,2.3-2.7c2.6-0.9,5.6-0.9,6.7-4.5c0.5-1.6,3.1-1.8,4.9-1.2c2.4,0.8-0.9,2.5,0.3,3.6c8-3,8-3,5.9-7.8       c2-2.2,4.9-2.1,7.5-2.9c0.5-0.1,1-0.2,1.5-0.3c1.2-0.1,2.4-0.4,3.6-0.8c3-0.4,5.8-1.7,8.9-0.9c2.2,1.5,2.2,1.5,1.7,4.3       c-0.1,0.4,0.4,0.3,0.4,0.3c0.6-0.2,0.8,2,1.7,0.4c1.7-3,3.9-1.5,6-0.5c1.7,0.8,3.2,1.6,5.2,1.1c1.6-0.5,3-0.1,3.7,1.6       c0.8,1.8,0.2,3.1-1.4,4.2c-1.1,0.7-2,1.7-2.6,2.9c-1.4,0.9-3,1.3-4.6,1.6c1.4,0.3,3.8-1.7,4.2,0.3c0.4,1.7-0.4,4.4-1.9,5.8       c-1.2,1.1-3.2,2.5-4.4-0.3c-0.2-0.4-0.3-1.2-0.8-0.9c-4.7,2.9-4.6-1.5-5.6-4.4c-3.1,6.5-3.4,6.6-9.7,3       c-0.6-0.3-0.5-1.2-0.6-1.3c-3,0.8-2.3,6.9-7.1,3.8c-0.7,1.8,0.1,3.6,0.2,5.4c0.1,1.2,0.4,2.8-1.7,2.8c0.3-2.3-3.6-0.4-3-3       c0.3-2.4,1-4.8,1.5-6.9c-3.1,3.5-6.4,0.4-9.7,0c-0.4,0-0.6-0.7-1.2-0.4c0.4,0.3,0.5,0.8,0.3,1.2       C1213,454.3,1213,454.7,1213,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1225,463c2.2-2.3-1-4.7,0-7c0.4-1.1-1-2.7,1.1-3.3c2.6-0.7,1.5,2,3,3.1c-0.3-3.2,3.4-3.9,3.5-6.8       c0-1,1.4-0.7,1.4-0.6c-0.4,4.2,3.6,3.1,5.3,4.7c0.5,0.5,0.5,1.5,1.8,1.7c2.2-1.3-3.5-7.4,3.3-6.2c4.2,0.7,0.9,3.3,1.3,5.1       c2.5,1.2,2.8-2.2,4.3-2.3c3.7-0.2,0.6,2.7,1.5,3.9c4.1,0,2.4-4.5,5.9-6.1c-3.8-0.2-6.7,2.4-9.5-1.2c3.4-0.2,6.3,0.1,9-1       c0.3-0.3,0.7-0.3,1,0c0.6,1.3,1.6,2,3,2c0.7,1.2,1.2,2.5,1,4c0,1.1,1.6,1.7,1,3c-1.9,1.2-0.1,3.9-2.3,5.4       c-0.6-1.8-1.2-3.6-1.7-5.4c-2.9-1.1-4,0.8-5,3c-0.5,1.2-0.9,2.5-1.5,3.7c-0.3,0.5-1.1,1-1.6,0.9c-7.3-1.3-14.3-1-20.4,0.4       c-3.9,0.9,0.2,3.8-2.1,5.3C1228.2,466.6,1223.6,466.7,1225,463z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741523"),
                d:
                  "M1260,476c0-0.3,0-0.7,0-1c6.6-2.3,13.3-3.1,20.2-2.1c2.4,0.4,4.8-0.8,7-1.2c4.6-0.9,8.2,3.3,12.6,1.5       c2.4-0.9,5-1.9,7.5-1.7c4.1,0.4,8.1,1.9,12.2-0.3c0.7-0.3,1.3,1.3,0.6,2.5c-0.7,1.2-0.7,1.5,1.4,1.3c3.7-0.4,7.8-0.3,11.1-1.8       c2.6-1.2,3.5,0.9,5.3,0.9c0.6,0.8,2.1,0.1,2.2,1.5c-0.7,1.5-2,1.6-3.4,1.6c-7.4,0.2-14.8,0.3-22.1,1.7c-2.2,0.4-3-1.7-4.4-2.1       c-2.3-0.6-4.9-0.4-7.4,0.2c-6.6,1.6-13.1,1-19.6-0.3c-3.2,3.4-6.7,0.1-10.1,0.6c-3.9,0.6-7.8-1.6-11.8-0.1       C1260.9,477.4,1260.3,476.6,1260,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70141E"),
                d:
                  "M1340,475c-0.8,0-1.6-0.2-2-1c4.8,0,9.7,0,14.5,0c2.9,0,4.5-1.5,6.9-3.1c3.2-2.2,7.3-5.2,11.9-4.9       c4.1,0.2,7.9,0.2,10.9-4.3c0.7,2.6,1.3,4.5,1.8,6.3c-10.2,2.8-20.4,5.6-30.6,8.3c-1.4,0.4-2.9,0.5-4.4,0.7       C1346.2,475.6,1342.3,479.1,1340,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1309,434c4.9,2.4,10.6,1.8,15.6,4.3c1.8,0.9,2.7,1.8,1.4,3.7c-0.3,0-0.7,0-1,0c-9.3-1.7-18.7-3.4-28-5       c-0.9-0.7-2.9-0.6-2-2.6c0.4-1,1.4-2.2,2.1-1.7C1300.9,435.3,1305.2,431.8,1309,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1213,454c-0.7-0.4-1.3-0.9-2.8-1.9c3.5-0.1,6.1,0.1,8.7,1.2c1.7,0.8,1.8,0.6,2.9-1.8       c0.2-0.3,0.7-0.6,1.1-0.7c0.5-0.2,1.1,0.1,1,0.7c-0.4,2.9,1.6,6.4-1.9,8.6c-3.8,2.3-5.9-0.3-7.8-2.9       C1213.6,456.3,1214.2,454.7,1213,454z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1303.5,463.5c-0.2,0.2-1.1,0.9-2.1,1.5c-1.3,0.8-1.8-0.5-2.3-1.1c-0.9-1.1-1.5-2.5-2.2-3.7       c-0.6-1.1-0.6-2,0.8-2.1c1.1-0.1,3.4-0.7,2.9,1.3c-0.8,3.1,0.2,2.6,2.2,1.8C1303.3,460.9,1303.7,461.7,1303.5,463.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1254,459c-1.2-3.2,2.1-3.1,3.4-4.4c0.9-1,1.4,0.5,1.6,1.4C1256.9,456.2,1255.5,457.7,1254,459z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1263,456c0.5-1.3-4.1-0.9-1-3c2.6,0.5,2.2,2.3,1.7,4c-0.2,0.6-0.9,0.4-0.4-0.1       C1263.3,456.8,1263.1,456.3,1263,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1280.1,463.2c-0.4,0.2-1,0.6-1.5,0.6c-0.7,0.1-1.4-0.4-1-1.2c0.2-0.4,1.1-0.5,1.7-0.6       C1279.8,462,1280.3,462.2,1280.1,463.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741523"),
                d:
                  "M1314.4,467.8c1-2.1,2.2-1.7,3.6-1.8C1317.2,467.6,1315.9,467.4,1314.4,467.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C28"),
                d:
                  "M1211,473c-0.7-0.1-1.5-0.3-2.2-0.4c0.2-0.4,0.3-1,0.6-1.1C1210.8,471,1210.8,472.1,1211,473       C1211,473,1211,473,1211,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1364,449c1.7,0.2,3.6-0.7,5,1C1367.3,449.8,1365.4,450.7,1364,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1309,434c-3.7-0.5-7.6,3.3-11.3-0.2c-0.6-0.5-1.2-0.3-1.7,0.3c-1.1,1.5,0.5,2,0.9,2.9       c-1.3,0-2.7,0-4,0c-2.3,0.9-4.3,0.4-6.1-1.2c0.4-1.5,0.8-3-1.7-2.5c-0.4,0.1-0.9,0.1-1.3,0c-3.6-2.3-7.1-3.3-10.4,0.4       c-0.8,0.2-1.6,0.3-2.5,0.1c-7.7-1.6-15.4-1.7-23.1,0.2c-1.6,0.4-3.3,0.4-4.9,0.1c-3.3,0.3-6.7,0.7-10,1c-1.4-0.8-2.1,0.3-3,1       c-0.3,0-0.7,0-1,0c-2.7-2.7-6.2-1.2-9.2-1.4c-2-0.1-3.5-0.3-4.8-1.8c-0.3-0.4-0.5-0.8-0.7-1.2c-0.3-1.2-0.3-2.3,0.4-3.4       c0.1-0.5,0.9,0,1-0.6c-0.3,0.1-0.6,0.2-0.8,0.5c-1.2,0.5-2.5,0.4-3.6,0.8c-0.3,0.1-0.7,0.1-1,0c-1.4-0.2-2.7-0.5-2.7-2.3       c-0.7,0.5-1.2,1.2-2.1,1.6c-1.2,0.5-2.6,0.7-3.7,1.4c-2.3,1.3-4,1.3-6.1-0.9c-3-3.1-6.7-1.9-8.1,2.1c-0.7,2-2,2.2-3.5,1.7       c-1.8-0.6-3.3-1.6-2.9-3.9c0.2-1.1,1.5-1.6,1.7-2.8c-2.5,1.6-5.2,1.5-7.8,1.1c-1.7-0.3-3.2-0.5-4.9-0.1c-2.4,0.6-5,1.1-6.8-0.9       c-2.1-2.3-0.4-4.7,1.1-7.4c-1.6,1.7-1.7,3.4-2.6,4.7c-1.5,2-2.3,0.8-4.9,2c-2.9,1.3-3.5,0.5-4.6-1.4c-0.2-0.3-0.4-0.6-0.7-0.7       c-0.9-0.6-1.8-0.8-2.8-0.6c0.1,0,0.3,0,0.3,0c2.6,0.2,2.9,1.5,1.5,3.3c-1.3,1.7-2.8,3.1-5.4,2.8c-3.4-0.4-3.4-3-4.1-5.3       c-0.5-0.7-1.3-0.8-2-0.9c0.6,0.3,1.4,0.2,1.9,0.7c0.3,0.4,0.3,0.8,0,1.2c-4,2.1-7.7,4.6-12.9,3.2c-2.4-0.7-3.8,2.8-6.3,3.7       c-2.3,0.9-4.4,1.8-4.3-1.9c0.1-2.3-1.3-2.2-2.7-2.6c-2.5-0.5-5,0-7.4-0.1c-4.1-0.1-8.2,0.7-10.9-2c0.3,0,1.3,0.6,1.4,1.6       c0.2,1.3-1.1,1.4-2,1.7c-2.3,0.5-4.7,2.2-7.1,0.1c-1.1-0.9-1.8-0.3-2.6,0.3c-1.3,1.1-3.1,1.6-4.1,0.7c-2.2-1.9-4.4-0.5-6.6-0.8       c-2.7-0.3-5-0.6-4.2,3.6c0.4,2.1-2.1,2.4-3.7,2.5c-2.5,0.2-3-2.1-4-3.7c-0.2-0.4,2.6-2.9-0.9-1.4c-2.9,1.3-4.7-0.6-5.3-3.5       c-0.2-1.2,0.3-2.8-2.3-2.9c3.1,3.5,1,4.8-1.9,5.9c-8.5,3.4-8.5,3.5-15.6-3.9c-2.2-2.3-5,1.2-7.3-0.8c-0.4-0.4-1,0.1-0.4,0.2       c0,0,0.1,0.6,0.3,0.9c0.2,0.4,0.3,0.8,0.3,1.3c0.6,1.9-1,4,1.4,5.7c1.4,1,0.2,2.3-1.4,2.6c-1.4,0.3-2.9-0.5-4.3,0.3       c-1.1,0.5-2.2,0.9-3.3,0c-0.7-1.2,0.9-4.6-3-2.6c-1,0.5-4.1-0.2-3.6-2c0.4-1.5,0.2-5.4,3.6-4.1c-3,0.1-6.2,1.9-9.8,2.2       c-0.9,0.1-2.4,0.5-1.5,1.8c2,2.7-0.8,3.3-1.8,4.7c-0.2,0.4-0.5,0.8-0.7,1.2c-0.7,1.1-1.7,2-3.1,2.4c-0.4,0.1-1.1-0.2-1.3,0.2       c-1.7,3-1.7,3-5.5,1.4c-0.7-0.3-1.7-1.2-2-0.2c-1.2,3.5-6,1.4-7.2,4.9c-0.3,0.9-1.9,0.6-2.3-0.6c-0.5-1.5-1.6-2.4-2.7-3.4       c-0.3-0.4-0.6-0.8-0.8-1.2c-2.4-4.7-4.5-5.3-8.8-2.7c-3,1.8-6.4,2.5-9.7,3.2c-1,0.2-2.1,0.5-2.9-0.2c-4.9-5-11.6-4.3-17.7-5.7       c-0.8-0.9-0.3-1.7,0.1-2.5c2.5-1.3,2-4.1,2.9-6.2c7-1.3,13.7-4.1,20.9-3.4c2.1,1.4,0.6,2.3-0.7,2.6c-2.8,0.8-5.6,1.8-8.6,1.6       c0.1,0.4,0.9,0.1,1.2,0.6l13.9-0.2c2.5-1.5,4.7-4,8-1.9c3.5-5,8.9-2.9,13.5-3.6c1.8-0.3,2.6-1.9,3.4-3.4       c7.1-2.4,14.6-2.6,22-3.8c21.9-3.8,44-6.3,66-10c1.9-0.3,3.9-0.4,6.1-1.7c-7.7-1.1-14.9-1.8-21.8-4.2c-0.3-5.6,4.6-9.1,9.6-8       c4.6,1,9.7,4.2,14.3-0.4c0.3-0.3,1.8,0.6,0.7-0.9c-0.8-1-1.8-2.4,0.1-3.3c1.6-0.8,3.1,0.1,3.9,1.4c1.5,2.7,4.2,4.2,6,6.5       c1.7,2.1,4.9-1.1,5.2,0.8c-0.2-2.3-2.9-5.7-1.2-9.8c7.2-0.4,14.1,1.2,21.1,2.4c0.5,0.1,1,0.2,1.5,0.3c3.9,0.7,7.9,1.3,11.8,1.7       c0.9,0.1,1.8,0.5,2.7,0.8c1.2,0.6,2.5,0.8,3.8,0.7c0.5,0,0.9,0.1,1.4,0.2c1.7,0.3,3.4,0.2,5,0.5c8.3,2.7,16.5,0.1,24.7-1       c17-2.3,33.9-4.6,51-6.3c0.7-0.1,1.3,0,2,0.1c2.7,1.4,5.6,4,7.7-0.8c2.9-1.7,6.2-1.9,9.4-2.4c1,0,2,0.2,2.9,0.7       c0.5,3.8-3.3,2-4.5,3.5c3.6,2.1,0.9,3.1-0.7,4.6c-1.6,1.6-5-0.9-5.4,2.9c0.4-3,2.9-1.8,4.4-2.3c2-0.7,4-0.2,5.7,0.9       c2.4,1.4,3.1,3.3,1.2,5.9c1.5-1.6,5.4,0.5,5-4.1c-0.1-1.4,2.7-3.1,5.3-2c5.9,2.4,5.9,2.3,2.1,9.7c0.8-0.5,1.9,1.2,2.6-0.3       c0.2-0.4,0.5-0.7,0.9-0.9c1.5-0.7,3.2-0.7,4.8-1.5c0.9-0.4,2.3-0.8,2.8,0.1c1.7,3.3,5.9,2.6,8,5.8c1.7,2.6,4.4,0.6,5.7-1.1       c2.6-3.3,3.5-2.5,3.8,1.1c0.2,2,1.8,3.4,3.4,2.9c3.8-1.3,7.5,0.8,11.2-0.3c3.9-0.1,7.7,1,11.6,0.9c1.6,0,3.2-0.1,3.9,1.8       c0.3-0.3,0.4-0.6,0.5-0.9c0.7-1.6-3.3-3.5,0.4-4.8c1.5-0.5,7.4,2.7,7.9,4.3c0.9,2.8-1,3.9-3.2,4.5c-3.4,1-6.6,3-10.4,0.8       c-2.2-1.2-3.2,1.8-5,2.4c-0.9,0.3,0.7,1.1,1.1,1.7c1.3,1.8,1.8-2.1,3.2-0.7c0.8,0.7,1.2,0.6,1.2-0.6c1.3-0.8,2.6-0.9,3.8,0.2       c-0.2,1.5,0.3,2.8,1,4c-2.1,0.5-2.9,2.4-0.7,2.6c3.9,0.4,7.6,3.3,11.7,1.4c-1.6,2.4-1.6,2.3-4.5,3.1c-0.5,0.1-0.6,1.9-0.9,2.9       c-1-3.5-3.2-4.5-6.3-2.5c-2.9,1.8-3.7-0.8-5-2.5c-2.7,5.8-7.1,3-11.1,2.8C1308.5,429.9,1308.8,431.9,1309,434z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771527"),
                d:
                  "M1324,416c-1.4,0.1-2.9-0.5-4,1l0,0c-3.7-0.7-2.4,3.1-3.9,4.7c-2-1.4,0.2-6.1-4.1-5       c-0.1-0.4-0.2-0.9-0.2-1.3c0-1.2,7.3-4.6,8.4-4c2.2,1.3,10.7,0.4,12.1-1.4c0.5-0.7,0.8-2.1,0.2-2.2c-3-0.2-4-4.6-7.7-3.6       c2.7,2.7,2.7,2.7-0.8,7.3c-1.8-0.6,0.4-4.2-1.3-3.1c-2.7,1.7-6.6-3.3-7.8,2.1c-1.5-1.3-0.3-3.3-1.6-4.1       c-2.4,0.4,0.4,3.2-1.9,3.3c-1.7,0.1-1.1-2.3-2.4-2.8c-2.2-2.9-0.7-5.7,0.5-8.4c0.5-1.3,1.8-2.1,3.3-1.5       c5.8,2.6,11.8,3.8,18.1,3.6c7.7-0.2,15.3,0.7,23,0.7c2.7,0,4.1,2.9,6.2,2.3c3.6-1,7.3-0.6,10.8-1.7c1.1-0.4,2.2-0.8,3.4-0.7       c4.9,0.5,4.9,0.5,4.8-4.6c0-2.9,2.1-4.3,4.1-5.8c1.1,0.8,0.9,2,0.9,3.1c0,10.4,0,10.2-10.4,12.1c-15.4,2.8-30.8,5.9-46.1,9       C1326.3,415.3,1325.5,417.1,1324,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1332,421c-1.7-0.2-3.6,0.7-5-1C1328.7,420.2,1330.6,419.3,1332,421z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861828"),
                d:
                  "M1383.2,342.8c0.6,0.1,1.2,0.2,1.7,0.3c2-0.9,4-1.6,6.2-1.4c24.8,1.5,49.6,1.8,74.2,5.1       c2.5,1.3,6.2-0.2,7.7,3.2c-0.7,1-1.8,1.8-2.9,1.8c-10.9,0-21.2,5.3-32.3,3.4c-3.7-1.7-7.3-3-10.9,0.3c-0.8,0.8-2.2,0.4-3.4,0.3       c-2.6-0.3-4.5-2.5-7.8-1c-2.8,1.3-6.5,0.1-9.7,0.6c-5.1,1.2-10-1.9-15.1-0.5c-1.1,0.3-6.8-7.1-6.7-8.3c0.4-2.7,2.5-1.3,3.7-1.7       c-1.5-0.6-3.4,0.8-5-0.7C1383.2,343.6,1383.2,343.2,1383.2,342.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771624"),
                d:
                  "M1383.1,344c2.6,0,5.2,0,8,0c-1.6,2.6-5.5-0.1-5.7,2.5c-0.1,1.5,3.1,3.1,3.8,5c1.8,5.1,5.8,0.3,8.6,2.1       c1.8,1.1,5.4,1.3,8.1,0.4c2.7,4.1,1.3,7.2-3.8,7c-4.8-0.2-8.8,1.9-13.2,3c-1,0-2,0-3,0c-0.3,0-0.6,0-1,0       C1384.4,357.3,1383.7,350.6,1383.1,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1383,390.9c0.9,3-4,3.1-3,6.1c-2.1,3.1-4.5,2.3-6.4,0.1c-3-3.5,1.4-4.1,2.7-5.9       c2.7-3.3,1-7.3,1.4-10.9c0.3-2.9,0.8-5.3,4.4-5.3c0.3,0,0.6,0,0.9,0C1383,380.3,1383,385.6,1383,390.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801722"),
                d:
                  "M1389,364c2.7-2.4,6.1-3.1,9.4-3.9c0.6-0.1,1.3-0.1,2,0c4.5,0.5,6.5-1.4,5.6-6c4.1,0,8.1,0,12.2,0       c0-1.4-2.1-1.5-1.2-2.6c0.5-0.7,1.6-0.2,2.2,0.5c3.4,3.8,7.1,3.9,10.7,0.6c3.3-3,4.9,0.6,7.1,1.6c1.1,2-0.4,2.7-1.8,3.1       c-1.7,0.5-3.4,1.1-5,1.9c-3.7,1.8-7.7,2.6-11.9,2.4c-2,0-4.1-0.2-6.1,0.6c-3.7-0.2-7.5,1.7-11.2,0.1c-1.4,0.1-3-0.5-4,1       C1394.3,363,1391.8,364.5,1389,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A24"),
                d:
                  "M1522,377c-1.7,1.8-4,0.7-6,1c-5.3,0-10.7,0-16,0c-5.4-0.7-10.3-2.9-14.8-5.9c-0.9-0.6-2.1-2.3-2.7,0.4       c-0.2,0.7-1.4,1.3-2.1,0.9c-4.3-2.1-10,0.6-13.7-3.7c-0.6-0.7-1.1-0.8-1.8,0.2c-0.7,1.1-2.2,1.1-3.2,0.5c-3.5-2-7-2.7-10.8-1.1       c-0.8,0.3-1.7,0-2.1-0.9c-0.4-0.9,0.2-1.5,0.9-2c0.8-0.5,1.8-0.8,2.2-1.9c-0.9,1.5-2.7,1.7-3.6,3.1c-0.5,0.8-1.4,0.9-2.1,0.3       c-0.6-0.5-0.8-1.4-0.4-1.8c2.9-2.5-0.5-3.4-1.2-5c1.2-3.5,4.5-3,7.2-3.7c3.2,0.8,6-0.7,8.8-1.7c0.4-0.2,0.9-0.3,1.3-0.4       c1.3,0.2,2.9-0.4,3.7,1.2c0.4,2.3,1.3,3.5,4,2.7c4-1.1,8.1-0.5,12.2-0.5c2.1,0,3.8,0.8,5.1,2.5c0.8,2.5,4.6,2,5,5.4       c0.1-1.8-1.2-3.1-0.3-4.6c0.3-0.3,0.7-0.6,1.2-0.7c4.6-0.8,5.2,4.2,8.3,5.6c0.7,0.1,1.6,0,1.9,0.4c3.9,4.8,9.7,4.3,15,5.5       c0.9,0.2,2,0.4,2.2,1.7c-1.8,2.2-4.2,1.9-6.3,1.8C1516.3,377.5,1519.4,374.5,1522,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951924"),
                d:
                  "M1445,361c1.2,2.2,3,0.7,4.7,0.6c-0.1,2.6-3.1,3.2-3.4,6c2.9-0.9,4.4-2.9,6.2-4.8       c3.1,4.1-3.1,3-2.9,6.4c5.2-4.5,9.7-0.8,14.2,1c1.3-1.6-1-2.2-0.1-3.5c2,1,4,1.8,5.5,3.8c1.4,1.9,3.9-1.4,6.1,0.8       c0.7,0.7,3.7-0.7,5.2,1.4c0.1,0.1,1.4-0.4,1.7-0.8c1.2-2.1,1.6-2.4,3.9-0.7c4.3,3.2,9.7,4,14.1,6.9c-0.8,2.7-3.2,2.6-4.7,1.8       c-2.9-1.4-6.3-1.1-8.9-2.3c-3.3-1.5-6.4-1.2-9.6-1.6c-8.6-1-17.2-1.6-25.6-3.5c-0.8-0.2-1.6-0.5-2.4-0.5       c-9.2,0-18.2-1.8-27.1-3.8c-2.7-0.6-5.7-0.4-8.4-0.1c-3.1,0.4-3-1-2.3-3.2c0-0.5,0.1-1.2,0.4-1.4c2.4-1.2,5.7-2.7,7.6-2.2       c5.3,1.5,10.8,1.1,16,2.2c1.1,0.2,1.9,0.2,2.8-0.5c3.1-2.6,4.6-1.1,5.6,2.4C1442.5,361.6,1442.5,361.6,1445,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A2A"),
                d:
                  "M1445,361c-0.8,0.2-2,0.3-1.4,1.4c1.3,2.6,1.4,2.5,0,4.7c-1.2-0.5-1.3-1.7-1.6-2.7       c-0.6-2.2-2-2.4-3-0.6c-1.8,3-3.5,2.4-5.5,0.3c-0.5-0.5-1.6-1-2.2-0.9c-3.8,1.2-4.9,1.5-9,0c-4.2-1.5-7.7,0.6-11.3,1.8       c-1.1-0.5-1.5-2.6-3.2-1.6c-1.8,1,1.2,2.2,0,3.7c-1.7-1-3.5-1.7-5.6-1.6c-3.1,0.1-1.8-1.9-1.2-3.4c3.6-1.1,7.3-0.6,11-1       c1.9-1.2,4.2,0.3,6-1c4.2,0.5,8.1-0.9,12-2c10.7-2.5,21.5-3.7,32.4-4.6c1.6,1.1,0.7,1.9-0.4,2.6c-0.3,0-0.7,0-1,0       c-2.9,1.2-5.9,1.8-9,2C1450,359.8,1446.8,358.9,1445,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD5C66"),
                d:
                  "M1644,382c2.8,0,5.5,0,8.5,0c-0.6,3.7-3,4.9-5.5,6c-5.6-1.8-11.1-0.9-16.9,0.3c0.4-2.2,2.5-0.5,2.9-2.1       c-3.9-0.8-8.8-1.4-11.7-0.7c-6.1,1.5-12,0.6-17.9,1.1c-0.4,0-0.9-0.4-1.3-0.6c-1.4-1.8-3.3-0.9-5-1c0,0,0,0,0,0       c0.1-3.8-1.7-5.2-5.5-5.1c-4.9,0.2-9.9,0.2-10.8-6.5c-0.2-1.5-1.7-1.4-2.8-1.4c-4,0.1-7.3-2.1-11-3c0.2-0.2,0.3-0.3,0.5-0.5       c1.7-0.9,3.8-0.6,5.6-1.3c1.4-0.4,2.8-0.6,4.2-1.1c2.4-0.4,4.8-1.5,7.3-1.1c0.5,0.1,0.9,0.3,1.3,0.6c0.3,0.4,0.5,1.3,0.7,1.2       c6.2-0.6,10.6,3.1,15.5,6c3.8,2.3,8.5,2.2,12.7,3.7c5.4,1.8,10.8,4.9,17.2,2.6c2.4-0.9,5.6,1.3,8.6,0.3       C1642.3,378.9,1643.2,380.7,1644,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6F76"),
                d:
                  "M1565,370c-8.1,0.3-15.8,3.1-23.9,4c-0.8-0.3-1.5-0.6-2.3-0.9c-0.3-0.4-0.4-0.8-0.3-1.3       c1.1-2.5-0.6-4.2-1.8-6.1c-0.1-0.5,0.1-0.9,0.3-1.3c1.5-2.2,0.3-3.6-1.3-5.1c-1.8-1.7-3.5-3.4-3.5-6.2c2.1-3.5,3.8-1,5.3,0.5       c3.5,3.2,6.3,7.2,10.7,9.5c4.3,2.3,8.7,4,13.7,3.5c1.6-0.2,3.3-0.1,4.8,0.9c0.4,0.4,0.5,0.9,0.2,1.4c0,0,0,0,0,0       C1566.2,369,1565.4,369.2,1565,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1462,356c0.3-0.7,0.7-1.3,1-2c3.4-2.3,7.4-2.2,11.3-2.7c2-0.3,3.8-0.6,5.7-1.1       c1.6-0.4,3.1-0.5,4.7-0.3c0.5,0.1,1,0.2,1.5,0.4c10.3,3.1,20.8,5.6,30.8,9.7c5.5,2,10.9,4.3,15.9,7.5c1.3,0.9,3,1.4,3.5,3.2       c-0.1,2.3-2.4,2.8-3.4,4.3c-3.4,2.1-7.6-0.1-11,2c-3,0-5.9,0-10.1,0c3.4-1.5,6.2-1,8.1-3c-1.2-2.7,0.8-2.6,2.4-2.8       c1.6-0.1,3.2,0.8,5-0.2c-9.8-2.3-18.8-6.9-28.7-9c-6.9-1.8-13.2-6-20.8-5.5c-2.4,0.2-4.9,0.4-7.3,0.5c-2,0.1-3.9,0.4-5.6-1.1       C1464,356.3,1463,357.6,1462,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1A2B"),
                d:
                  "M1545.9,377.1c1.4,0.8,3,1.4,3.9,2.9c-1,1-1.9,2.5-3.6,0.8c-1.4-1.4-3.4-1.8-5.5-2.1       C1541.9,376,1544.7,379.2,1545.9,377.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02534"),
                d:
                  "M1533,375c-0.7-2.7,2.1-2.7,3.1-4.1c1.4-0.8,2.3-0.2,2.9,1.2c0,0.4-0.1,0.7-0.1,1.1       C1537.5,375.5,1535.1,375,1533,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB616B"),
                d:
                  "M1597,385c2-1.1,3.8-1.6,5,1C1600.4,385.2,1598.5,386.4,1597,385z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2545D"),
                d:
                  "M1779,400c0-0.2,0-0.4-0.1-0.5c-1.2-1.6-13.7-3.2-14.9-1.9c-2,2.2-4.4,1.5-5.9,0.1       c-3.5-3.3-7.9-4.8-12.1-3.3c-3.3,1.2-2.5-3.5-5-3.5c3.1-4.7,6.3-9.1,13-7.9c0.5,0.1,1.1,0,1.3-0.5c2.5-4.7,6.5-2.7,10.1-2.2       c2,0.3,3.9,0.5,5.9,0.3c1.3-0.1,2.6-0.8,2-2.1c-1.9-4,0.6-4,3.3-4.2c0.8-0.1,1.5-0.7,2.2-1c1.4-0.5,2.7-1.1,4.2-0.5l0,0       c0.8,0.9,1.9,1.6,1.2,3c-0.9,1.2-2.5,0.5-3.8,1.8c2.4,2,5.2,3,8.2,3.5c1.6,0.4,3.3,0.8,2.6,3.1c-0.3,3.2,2.2,2.3,3.7,2.4       c3.1,0.1,5.9,0.6,7.9,3.3c-0.6,3-3.1,1.5-4.8,2c-3.2,1-7.9-2.7-9.6,3.1C1783.7,393.4,1782.7,399.3,1779,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB5860"),
                d:
                  "M1803,390c-3.7-1.3-7.3-2.6-11.3-2c-1.2,0.2-2.4-0.1-2.6-1.6c-0.2-1.4,0.5-2.2,1.9-2.3       c2.6-2.2,5.7-0.5,8.5-1.2c1.9,0.1,3.8,0.4,5.6,1.2c0.9,0,1.9,0.1,2.8,0.1c0,0.8,0.2,1.6,1.1,2c-1.2,1.4-4.7,0.5-4,3.9l0,0       C1804.3,390,1803.7,390,1803,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2545D"),
                d:
                  "M1805,390c0.9-0.2,1.1-2.1,2.1-1.3c0.5,0.4,0.4,2.6,0,2.9C1805.6,392.5,1805.2,391.2,1805,390       C1805,390,1805,390,1805,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2545D"),
                d:
                  "M1773,402c0.3-2.7,2.4-1.8,4-2C1776.7,402.7,1774.6,401.8,1773,402z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF505A"),
                d:
                  "M1779,374c-1.1,2.7-3.5,1.8-5.5,1.8c2.8,6.1,2.7,6.2-3.6,6.2c-2.2,0-4.2-0.5-6.4-0.9       c-5.7-1-5.7-0.9-8.1,4.3c-7.3-4.5-9.9,3.1-14.4,5.6c0-0.3,0-0.7,0-1c1.3-3.4,0.2-3.9-3.3-4c-5-0.1-10.8,1.8-14.7-3.5       c-0.5-0.6-1.2-1.3-2.1-0.7c-1.5,1,0.4,2.5-0.7,3.8c-2.5-0.4-2.9-4.6-6.2-3.7c-2.3,0.6-4.7,2.2-7.3-0.1c0.8-1.4,2.6-0.4,3.3-1.2       c1.4-1.4-0.2-1.4-1-1.7c-0.1-0.6,0.1-1.1,0.7-1.5c7.6-2.5,15.6-2.9,23.5-3.8c11.7-1.3,23.3-3.3,35-4.7c2.3-0.3,4.6-0.6,6.9,0       C1777.2,370.1,1778.1,372,1779,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB4C55"),
                d:
                  "M1709,378c0,0.3,0,0.7,0,1c-9.3,1.3-18.7,2.7-28,4c-5.9,2-11.2-2.9-17.1-1.5c-0.9,0.2-0.8-1.5-0.9-2.5       c1.3-1.4,2.6-0.2,3.6-0.4c-0.7-0.3-2.4-0.3-2.2-2.2c0.1-1.4,0.9-2,2.3-1.9c1.6,0.4,3,1.4,4.8,0.6c1.4-0.7,2.7-0.6,3.2,1.1       c1.3,3.7,4.2,2.9,6.6,2.2c3.4-1,6.6-1.2,9.6,0.5c2.4,1.3,2.5-1.6,3.9-1.5c4.6,0.2,9.2-1.3,13.7,0.3       C1708.7,377.7,1708.8,377.8,1709,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54B57"),
                d:
                  "M1667,375c-2.2,2.1-2.2,2.1,2.1,4c-2.5,0-4.3,0-6.1,0c-2.8,1.9-6,0.8-9,1c-1.8-2.7-4.8-0.9-7-2       c-0.3,0-0.7,0-1,0c-1.5-1-2.7-2.5-4.8-2.2c-0.6,0.1-1.3-0.2-1.9-0.5c-9.5-4.2-14.2-5.4-25.4-3.6c-5.8,0.9-8.8-2.1-12.3-5.2       c-1.3-1.1-0.4-2.1,0.6-2.8c1.4-1,3.2-0.8,4.6-1.7c2.5-1.3,5.4-1.2,8.1-1.9c1.3-0.2,2.5-0.2,3.7,0.1c5.3,3.9,11,0.6,16.5,0.8       c7.3,0.3,12.6,4.1,17.6,8.2c1.3,1,1.6,0.4,2.4,0.5c2.4,0.1,5.1-0.8,6.6,2.1C1662.7,374,1666.6,371.8,1667,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8515D"),
                d:
                  "M1607,363c-1.2,2-4,0-5.3,2.3c2,1.1,4.3,1.7,5.1,4.5c0.5,1.7,3.1,0.8,4.6,0.8c7.2-0.3,14.2-1.6,21.4,1       c3.7,1.3,0.1-2.7,1.9-3.8c1.4,0.6,1.7,2.2,2.2,3.6c0.8,2.5,2.9,4,4.8,3.3c4-1.5,3.9,0.8,4.2,3.3c-0.7,1.3-1.3,2.7-2,4       c-1.9-0.4-3.7-3.4-5.9-0.4c-0.2,0.3-1.1,0.4-1.4,0.2c-3.2-2.9-6.5-1-9.9-0.6c-5.6,0.7-10.2-3.5-15.6-4.3       c-6.7-1-12.4-4.3-18.1-7.8c-0.5-0.3-4.5-3.6-6.1,0.6c0,0.1-1.1,0.1-1.3-0.1c-1.3-1.3-0.1-2.4,0.3-3.6c4.9-3,10.7-3.1,16.1-4.3       C1603.8,361.7,1605.6,361.6,1607,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C8515D"),
                d:
                  "M1647,378c2.7-0.7,6-3.4,7,2C1651.7,379.3,1648.5,381.7,1647,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44D57"),
                d:
                  "M625,144c-4.1,0.4-7.9,2.2-11.6,3.5c-3.8,1.3-6.1,1.4-9.2-0.6c-0.8-0.5-3.1,0.4-4.1,1.3       c-1.8,1.7-3.6,2.6-6.2,2c-3.3-0.7-5.6,0.8-7,3.8c-3.9-0.8-7.2,1.8-11,2c-0.9-3.5,1.1-3.6,3.8-3.7c2.9-0.1,6.3,1,7.1-4.1       c0.6-3.6,5.5-3.5,8.2-3.8c6.4-0.6,12.5-2.8,19-2.5C618.1,141.9,621.1,144.8,625,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24F5A"),
                d:
                  "M557,160c-0.6,4-4.6,3.8-6.6,3.7c-6.8-0.4-12.1,3.4-18,5.3c-4.1,1.3-8.2,2.9-12.4,4       c-0.7-0.3-1.3-0.7-2-1c-0.7-0.3-1.3-1.5-2,0c0.5,2.5-1.8,2.2-3,3c0-0.5-0.2-1.1-0.1-1.5c1-2.4-4.2,0.1-2.4-3.3       c1.6-3,5.3-4.1,6.7-3.6c4.3,1.5,8.5-2.2,12.5,0.5c0.8,0.5,1-0.4,1.5-0.8c4.3-3.9,8.2-7.7,15.3-5.4       C549.2,161.7,553.5,160.1,557,160z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24F5A"),
                d:
                  "M574,156c-0.4,0.7-0.9,1.9-1.2,1.9c-5.4-0.4-10.3,3.1-15.8,2.1c0.1-2.4-2.6-1.5-3.7-3.3       C560.3,155,567.1,154,574,156z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4A54"),
                d:
                  "M625,142c0.2-1.6,1.1-2.2,2.6-1.8c0.3,0.1,0.8,0.8,0.7,0.9C627.6,142.6,626.1,141.8,625,142       C625,142,625,142,625,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E151A"),
                d:
                  "M1566,307c17.2,0,34.3-0.4,51.4,0.2c24.4,1,48.8,1.9,73,4.9c5.5,0.7,11.3-0.3,16.7,1.8       c-1.1,1.3-2.6,1.5-4.1,1.4c-4.5-0.3-8.8,0.5-13.1,2c-12.4-1-24.8-1.5-37.1-2.7c-1.7-0.2-3.3-0.2-5-0.2       c-8.2-0.2-16.4,0.4-24.6-0.3c-4.7-1.3-9.6-0.6-14.4-0.6c-11.7-0.2-23.2-3.2-35-2c-1.8-0.1-3.5,0-5.3-0.6       C1567,310.1,1565.6,309.2,1566,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4149"),
                d:
                  "M1709,308c0.6,0.3,1.2,1,1.7,0.9c5.6-1.1,10.9-0.3,16.4,1.3c4,1.2,8.7,0.2,13.1,0.2       c-0.7,0.3-1.4,0.6-2.1,1c5.2-1,10.4,0.4,15.6,0.1c0.5,0,0.9-0.9,1.3-1.4c1.5,0,3-0.4,4.2,0.8c1.7,2.7,4.5,1.7,6.8,2.1       c9.2,1.5,18.6,1.8,27.8,4.1c3.9,0.9,8.3-0.3,12,2.2c0.9,1,1.6,2.1,1.6,3.5c-0.3,0.5-0.7,0.8-1.3,0.9       c-5.6-0.6-11.3,0.3-16.9-0.8c-1.3-1.6-3.1-2.2-5-2c1.4,0.3,3.3-0.1,4.2,1.7c-0.1,0.6-0.4,1-0.9,1.2c-1.8,0.8-3.5,0.2-5.4,0       c-11.6-1.7-23.2-3.1-34.9-4.5c-0.6-0.1-1.1-0.2-1.7-0.3c-2.1-0.7-4.2-0.3-6.3-0.6c-1.6-0.2-3.8,0.4-4.2-2.2       c0.6-0.5,1.3-1,2.8-2.1c-5.4,0.9-9.6-1.2-14.5-0.2c-4.1,0.8-8.3-2.7-12.8-1.8c-0.6,0.1-0.4-0.6,0.1-0.8       c0.4-0.2,0.9-0.3,1.3-1.1c-5.3,0-10.6,0-15.9,0c-3.8,0-7.4-0.7-11-2c2.1-1.8,4.3-0.8,6.5-0.3c4,0.9,7.8,0.2,11.5-1.6       c0.7,0,1.3,0,2,0C1705.8,307.7,1708,306.6,1709,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B141E"),
                d:
                  "M1690,316c5.4-2.9,11.4-1.8,17.1-2.1c3.6,0.1,7.4-0.6,10.9,1c9.2,2,18.7,2.4,28.1,3l0,0       c0.9,0.9,2.1,1.4,3.2,1.2c3.9-0.5,7.3,1.8,11.2,1.8c8.7,0,17.3,1.6,25.8,4c1.3,0.4,2.6,0.2,3.9,0.4c3.1,0.4,6.8-0.8,9.2,2.5       c2.5-3,4.4-0.5,6.8,0.5c2.4,1,5.2,0.7,7.9,0.9c0.7,0,1.5,0.1,2.1,0.4c1.6,1.3,3.7,1.3,5.5,1.7c3,0.6,6.1,1.2,9.2,1.7       c2.3,0.4,3.3,1.6,1.1,3.6c-5.5,1.1-10.7-0.7-15.9-1.5c-13.3-2.9-26.9-4.1-40.2-6.8c-9.3-1.8-18.8-1.9-28.1-3.8       c-2-0.4-4.3-1.1-6.3,0.1c-1.6,0.4-3.1,0.6-4.3-0.7c-6.8-2.4-14-2.6-21.1-3.4c-7.5-0.9-15.1-2.1-22.7-2.2       C1691.8,318.2,1690,318.2,1690,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972837"),
                d:
                  "M1568,310c1.6,0,3.3,0,4.9,0.1c-0.9,3.3-3.7,2.3-5.7,2.3c-12.7-0.3-25.3,1.6-38,1.1       c-1.5-0.1-3,0.2-4.4,0.7c-7.9,0.6-15.8,0.2-23.8,0.3c-2.5,0-5-0.1-7.5,0.1c-0.6,0-1.1-0.2-1.5-0.5c-0.5-3.1,0.5-4.3,4-4       c10.6,0.7,21.2-1.9,31.8-0.7c0.1-1.7-1.7-1.2-1.9-2.2c4,0,8,0,12.1,0c4.1,1.9,8.5,0.6,12.8,1       C1556.6,308.5,1562.5,307.6,1568,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811723"),
                d:
                  "M1568,310c-8.8,0.4-17.5-1.6-26.3-1c-1.6,0.1-3-0.3-3.7-1.9c9.3,0,18.6,0,28-0.1       C1566.7,308,1567.3,309,1568,310z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1746,318c-2.9,1.6-5.8,0.4-8.7,0c-6.5-1-13.4,1.2-19.4-3c5.7-0.5,11.3,0.9,17,1.1       C1738.4,318.2,1742.6,315.8,1746,318z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4149"),
                d:
                  "M1670,307c1.5-3.3,4.5-1,5.6-0.5c2.5,1.2,5.7-2.3,7.4,1.5C1678.7,307.9,1674.2,308.5,1670,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C3434E"),
                d:
                  "M1377,312c0.1-2,1.5-2,3-2c4.7,2.5,9.4-0.1,14.1-0.2c14.8-0.2,29.7-1,44.5-1.9       c7.2-0.4,14.5-1.3,21.7-1.9c1.6-0.1,3.4-0.6,4.7,0.9c-13.9,3.6-28.3,1.6-42.4,3.8c-5.2,0.8-10.5,1.2-15.7,1.1       c-8.6-0.1-17.2,0.6-25.8,1.1C1379.7,313,1378.1,313.4,1377,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53B47"),
                d:
                  "M1477,307c1.3,0,2.6,0,3.9,0c-1.7,1-3.3,1.6-4.8,0C1476.3,307,1476.6,307,1477,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B171D"),
                d:
                  "M1492.1,314c0.3,0,0.6,0,0.9,0c2.2-1.2,4.8,0.4,7-1c8.3,0,16.7,0,25,0c1.5-0.2,3.5-1.9,3.7,1.4       c-4.1,1.7-8.5,1.8-12.7,1.8c-15.6,0-31.2,1.9-46.8,1.3c-8.7-1.5-17.4-1.3-26.1-0.5c-1,0-2,0-2.9,0.1c-3.7,0.7-7.4,0.7-11.1,0       c-0.6,0-1.3,0-1.9,0c1.5-3.6,4.7-2.6,7.1-2.3c5.4,0.7,10.7-0.8,14.6-0.4c-2.3,0.2-6.1,0.1-9.8,0.5c-1.4,0.1-3.5,0.6-3.8-1.8       c10.3-0.6,20.5-2.4,30.8-2.1c1.1,0.1,2.3-0.2,3.1,1c-0.1,0.1-0.3,0.4-0.3,0.4c-0.5-0.3-0.6,0.2-0.3,0.2       c3.5-0.1,6.9,0.1,10.4-0.4c2-0.3,4.3-0.8,6.2,0.8C1487.3,313.6,1489.6,314.3,1492.1,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F2B3E"),
                d:
                  "M1484.9,313c-6.6,0-13.2,0-20.1,0c1.2-1.7,2.9-0.6,4.1-1c6,0.7,11.9-1.8,18.2-0.6       C1486.3,311.9,1485.6,312.4,1484.9,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE7C86"),
                d:
                  "M316,372c0,0.7,0,1.3,0,2c-1.7,1.6-2.9,3.4-2.6,5.9c0.2,1.8-0.4,3.5-1.4,5.1c-5.4,3-11.1,3.7-17,2.1       c4.6-6.7,11.1-11.1,17.9-15.3C313.7,373.5,314.9,372.4,316,372L316,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D38D94"),
                d:
                  "M331,371.1c2.7-1.7,2.8-5.1,4.9-7.1c1.3,0,2.4,0.6,2.4,1.9c-0.1,5.3,0.9,9.9,6.5,12.1       c0.3,0.1,0.3,0.6,0,0.8c-0.2,0.2-0.5,0.3-0.8,0.1c-4.4,1.8-7.9,5.8-13,6c-2.1-0.9-1.5-2.4-0.8-3.9c-2-1.3-4.6,2.5-6.1-1       C326.3,377,329.8,375,331,371.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D18991"),
                d:
                  "M312,385c-3.9-0.7,2.4-2.6-0.4-3.5c1-2.8-0.7-7.1,4.4-7.5c2.5,1.6,7.2,0,6.9-2.6       c-0.7-5.8,2.9-5.4,6.5-5.4c0.8,0,1.7,0,2.5,0c-0.3,1.2-0.7,2.5-1,3.7c-4.2,3.4-6.9,8.4-11.6,11.3       C316.9,382.5,314.8,384.4,312,385z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE848C"),
                d:
                  "M324.1,380.2c2.8,1.1,5.5-1.9,8.5,0.1c0.2,1.6-4,2.2-1.6,4.7c-2,0.3-4,0.7-6,1c-1.7-1-4.9,1.8-5.4-2.2       C321.1,382.6,322.6,381.4,324.1,380.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3644"),
                d:
                  "M653,624c-5.2-2.1-10.5-2.7-15.9-1.1c-0.1-3.4-1.9-5.2-5.2-4.9c-4.7,0.5-6.1-1.9-5.8-6       c-0.2-1.3-0.3-2.7,0.6-3.8c0.8-1,1.6-2.3,3.1-2.2c1.6,0.1,2,1.5,2.3,2.8c0.4,1.4,0.2,3.4,2.1,3.6c1.9,0.2,1.6-1.8,2-2.9       c0.6-1.7,1.7-1.8,3.1-1.3c1.6,0.5,3.2,0.7,5.3,0.8c-0.9-3.2,0.1-5.3,3.6-5.1c1.6,0.1,2.4-0.1,3.2-1.9c0.7-1.8,3.2-1.2,5-1.3       c4.5-0.2,8.6,0.3,13.1-2.5c3.5-2.2,9.5-1.3,14,0.5c2,0.8,3.4,1,5.4,0.9c3-0.1,2.7-1.5,3.1-3.4c0.9-4.4,5.4-3.7,8.3-5.2       c1.8-0.9,5.1-0.7,5.4,0.9c0.5,4.1,3.3,2.5,5.3,3c3.3,1.1,7.6,0,9.9,2.5c3.3,3.5,7.1,3.4,11.1,3.7c0.5,0.1,0.9,0.4,1.3,0.6       c0.3,0.3,0.6,0.7,0.8,1.2c4.6,5.1,10.2,8.6,17,10c1.5,0.3,3.2,0.4,3.7,2.1c1.5,5.1,5.7,5.4,9.9,5.8c3.8,0.4,3.8,0.4,4.4,3.3       c-1.3,0-2.7,0-4,0c-5.3,0-10.7,0-16,0c-0.5-0.4-1-0.8-1.7-0.9c-13.6-1-27.2-2.5-40.8-1.7c-3.6,0.2-7,1.4-10.4,2.6       c-13.7-0.3-27.5,0.8-41.2-0.9c0-0.4,0-0.8,0-1.3c4.5,0,9.1,0,13.6,0c0-0.5,0-0.9-0.1-1.4c-5.7,0-11.5,0-17.3,0       C651.5,621.6,653.3,622.3,653,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M711,596c-1.8,0-3.7,0-5.5,0c-1,0-2.1,0-2.3-1.3c-0.3-1.8,2.2-0.2,2.2-2.1c-3.1-1.4-5.7,0.6-8.6,1.2       c-4.7,1-3.8,4.1-3.9,7.6c-3.2-1.8-5.7-1.5-6.9,2.2c-2.1-2.7-2.9-7.1-7.4-3.3c-0.7,0.6-1.8-0.5-2.6-1.1c-0.7-0.5-6.6,1-7.3,1.6       c-2.8,2.6-6.2,1-9.4,1.5c-2.4,0.3-4.9,0.1-7.7,0.1c0.4,1.2,0.9,2.4,1.3,3.7c-3.5,0.1-10.7-4.8-6.1,5.5c-3.2-2-6.6-0.8-9.5-2.4       c-1.9,1.3,1.3,5.1-2.2,5.4c-5.7,0.5-3.7-4.9-5.1-7.8c-2.4,1.2-3.1,3.5-4.3,5.3c-1.3,0-2.7,0.1-4,0c-1.6-0.2-3.2-0.4-1.5-2.6       c0.6-0.8,0.6-2-0.2-2.7c-0.9-0.9-1.8-0.3-2.5,0.5c-0.8,0.8-1.8,1.1-2.5,0.1c-0.6-1-0.5-2,0.6-3c1-0.9,0.8-1.1-1-2.1       c-0.1-1-3.4-2-0.2-2.9c2.6-0.7,2.1-2.4,2.2-4.1c-0.2-0.5,0.1-1.3,0.4-1.2c8.1,1.6,16.3,1.5,24.5,1.1c1.7-0.1,3.3,0.4,3.6,2.6       c0.3,2.5-0.9,3.3-3.2,3.5c2.2,0.1,4.1-0.1,3.4-3c-0.5-2,0.8-2.7,2.4-3.1c4.7-1.2,9.2-2.9,14.2-2.2c2.5,0.3,4.3-0.2,5.6-2.9       c1.3-2.6,2.1-2.5,5.6-1.2c-1-0.8-2.4-0.8-3.5-2c1.4-2.1,3.6-2.2,5.2-1.4c2.9,1.7,5.9-0.3,8.6,0.7c1.5,0.5,0.5-0.6,0.6-0.8       c0.5-1.3,1.8-2.3,2.6-1.7c3.9,3,8.8-0.2,12.7,2c1,0.4,0.7,1.9,2.5,2.2C706.9,588.2,709.9,591.2,711,596z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M573,506c1.3,5.8,0.4,7.2-5,8c-0.9-1.2-4-1.9-0.8-4.1c0.4-0.3,2.5-3.3-2-5.1       C569,505.2,570.8,507.3,573,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M574.8,494.9c-2.2-0.7-2.3-1.9-2.5-3.6C574.4,491.9,574.5,493.1,574.8,494.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721424"),
                d:
                  "M599,548c1.3-1.6,0.5-3.3,0.1-4.9c-0.7-2.7,0.1-3.8,2.9-2.7c1.2,0.5,2.6,2.2,3.2-0.6       c0.5-2.3-0.2-3.6-2.6-3.7c-2-0.1-3.9,0-6.3,0c1.5-1.5,3.1-0.9,4.5-1c1.9-0.1,3.9-0.1,4.8-2c1.1-2.3-2.8-1.6-2.5-3.6       c3.8-0.4,3.8-0.4,5.7,12.6c2.5-4.3,0-8.8,1.8-12.6c1.4,0.8-0.2,2,1,2.9c1.4-2.7,3.6-3.3,6.4-1.9c-0.7,1.3-2.6-0.2-3.5,1.8       c3.6,0.5,6.6-0.7,9.5-2.2c-1-3,1.9-4.9,3-3.9c2.6,2.3,6-0.1,8.3,2.3c1.4,1.4,3.1,0.4,4.7,0.4c0.7-0.1,1.5-0.1,2.2-0.1       c0.8,0,1.5,0,2.3,0c1.8,0,3.6-0.1,5.4,0.3c1.5,0.4,2.9,1.1,3.9,2.3c2.4,3.3,5.3,3.6,8.4,1.2c1.3-1,3.1-2.2,4-1.3       c2.7,2.7,6.1,0.2,8.8,1.8c0.3,0.2,1,0.8,1,0.3c0.5-5.8,4.2-2.1,6.1-1.7c5.5,0.9,11,2.5,16.7,2.3c1.8-0.1,3.2,0,3.9,2.2       c1.1,3.2,3.4,3.2,6.4,2.4c4.5-1.2,9-1.2,13.9-0.1c3,0.7,6.8,1.3,11.1-0.3c6.2-2.5,13.8-2.3,20.6,0.6c-0.1,2.6-2.2,2.5-3.9,2.9       c-2.1,0.5-4.2,0.8-6.3,1.5c-0.8,0.2-1.6,0.4-2.4,0.4c-4,0.4-8,0.9-11.9,1.8c-13.6,3-27.4,5.4-41.1,8.3       c-4.2-0.2-8.1,2.3-12.1,1.3c1.1,0.7,1.6,2,1.7,3.5c0,0.5-0.2,1-0.5,1.4c-4.9,3.3-10.2,1.4-15.3,0.9c-5.2-0.6-9.8-3.3-15.1-4       c-3.1-0.4-5.8-0.6-8.7,0.4c-3.8,0.7-7.4,0.2-11.3-0.7c-5.7-1.4-11.7-1-17.5-2c-0.6-0.1-1.5,0.5-1.9,0c-2.2-3.1-5.9-3.3-8.9-4.9       C598.9,549.1,598.9,548.5,599,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M640,530c-2.3,0-4.9,1.4-6.5-1.7c-0.6-1.2-1,0.2-1.6,0.4c-1.1,0.4-2.7,1.1-3.8,0       c-2.3-2.1-2.3-2.1-4.1,1.4c-1.8-1.3-0.4-3.5-1.3-5c-0.1-0.1-0.8,0.2-0.9,0.1c-3.3-5.3-7.9-3.2-12.2-2c-1.7,0.4-3.2,2.2-4.3-0.6       c-0.1-0.2-0.6-0.4-0.9-0.3c-5.6,2.2-11.8-0.3-17.3,2.3c-1.1,0.5-2.2,1-3.2,0.1c-0.6-0.5-0.2-1.2,0.4-1.6c1-0.8,0.7-3.3,3-2.5       c0.7,0.2,0.9,1.4,1.8,1c0-1.6,0-3.1,0-4.5c0-2.4,0.2-4.8-3.3-2.3c-1.1,0.8-2,1.1-1.3-1.3c0.6-2.2-3-0.8-3.9-2.4       c0.9-1.2,2.2-1,3.2-0.7c3.5,1.3,5.5,1.1,5.7-3.5c0.1-2.2,2.5-3.7,5.3-3.3c2.7,0.4,5.4,0.6,8.1,1c-0.6-7.7-6.9,0.3-8.9-3.4       c3.7-3.1,7.3-4.7,11.3,0.3c-2.8-4.2-0.5-8.2-0.1-12.2c0-0.3,0-0.7,0-1c4.5,4.4,9.6,6.8,16,6c2,1,4.1,1.6,6.2,0.9       c1.3-0.4,4.4-0.3,1.7-3.5c-1.3-1.6,1-3.3,2.6-4c2-0.9,4.2-1.1,6,0.8c1,3.2,1.2,6.5,0.4,9.7c-0.4,0.3-0.8,0.5-1.3,0.5       c-0.7,0.1-1.2-1.1-2-0.3c0.6,1.7,0,2.6-1.7,2.8c-0.4,0.1-0.9,0.1-1.3,0.1c-3.7-1.7-6.6-0.5-9.1,2.3c-1.1,1.3-2.7,1.7-4.1,2.5       c-4.2,2.3-4.8,0-5.3-3.2c0.2,6.7,3.8,12,8.6,13c7.4,2.5,15.4,3,22.5,6.6C641.9,524.4,640.9,527.2,640,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1624"),
                d:
                  "M599,548c1,1.5,2.8,1.3,4.1,1.4c3,0.2,5.1,1,5.3,6.2c1.9-4.4,3.4-5.8,5.6-2.8c0.4,0.6,1.4,1.2,2,1.1       c7.8-1.3,15.2,2.9,22.9,2.1c1,0.7,1.9,1.3,0.6,2.5c-7,2-14.2,0.2-21.3,0.7c-13.7,1-26.4-1.8-37.4-10.5c-1.4-1.1-2.6-2.1-3-3.8       c1.1-1.8,2.2-3.8,3.8-0.4c1,2.2,5,0.5,5.1,3.9c1.5-0.2,1.4-1.6,2.1-2.5c0.3,0,0.7,0,1,0c1,0.4,2.1,0.3,3,1       C594.8,548.8,596.8,548.9,599,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821728"),
                d:
                  "M593,547c-1.3,0.5-2.8,1.6-3-1c1.1-1.4,2.7-1.3,3.9-0.7C594.7,545.6,593.1,546.3,593,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3340"),
                d:
                  "M665,569c-3.2,2.4-6.8,1.8-10.4,2.2c-5.2,0.6-10.8-0.6-15.4,1.2c-3.4,1.4-6.7,3.1-10.3,4.4       c-2.9,1-7.5,0.3-8.6-2.1c-2.2,0.9-0.9,4.3-3.5,4.8c-1.4-0.8,0.7-2.3-0.7-3.1c-2,0.6-1.6,3-3.1,4.4c-1.2-1.1,0.1-4.6-3.5-3.2       c-1.7,0.7-1.3-1.6-0.9-2.9c0.3-1.2-0.1-2.2-1.2-2.3c-1.4-0.2-1.2,1.2-1.4,2.1c-0.2,1,0.7,2.6-1.2,2.6c-2,0-3-1.2-2.7-3.2       c3.7-1.1,0.2-4.4,2.3-6.3c0.6,2.7,2.8,3.6,5,2.9c6.8-2,13.6-0.5,20.5-0.6c2.4,0,4.7,0,5.7-2.8c0.6-1.6,1.8-1.3,3.2-1.3       c3.8,0.1,7.6,0.8,11.3-0.7c2.7-1.1,3.2,2.5,5.8,2.4C658.8,567.3,662.3,566.3,665,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962331"),
                d:
                  "M578,545c12.7,10.6,27.3,14.4,43.7,13c6-0.5,12.2,0,18.3,0c5.7-1,11.3-1.2,16,3       c-7.8-0.4-15.5-0.3-23.2,1.8c-2.1,0.5-4.5-0.4-6.8-0.7c-4.2,0-8.3,0.9-12.5,1.2c-7.1,0.6-14.3,0.2-20.8-3.9       c-3.3-2.1-7.1-3.2-10.6-5.6c-2.5-1.8-0.9-5.4-4.2-5.7c-0.3-1-0.7-2-1-3C577.4,545,577.7,545,578,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("731520"),
                d:
                  "M656,561c-5.1-2.1-10.7-1.7-16-3c-0.3-0.7-0.7-1.3-1-2c2.7-1.5,5.3-1.2,8.5-1c9,0.8,16.8,7.1,26.2,5       c1.4-0.3,2.9-0.3,4.3-1.1c1.5-0.3,2.4-1.5,3.4-2.5c0.9-0.3,1.8-0.3,2.6,0.3c0.7,2.3,0.7,2.3,2.6,4.2c1.2-1.3-2.2-2.3-0.2-3.5       c1.2-0.6,2.4-0.7,3.7-0.7c2.5,0.5,5.3,0.3,7,2.7c-0.5,2-2.8,1.4-4.3,3.2c7-0.4,13.6-0.4,20.1,0.7c1.5,0.2,3.4-0.4,3.3,2.4       c0,0.9,1.8,0,2.6,0.6c2.5,1.9,0.3,2.4-1,2.7c-2.6,0.6-5.2,0.3-7.8,0.2c-0.5,0-1-0.1-1.5-0.2c-2-0.8-4.2-0.8-6.3-1       c-0.4-0.1-0.9-0.2-1.3-0.3c-1.4-0.6-3-0.6-4.5-0.9c-0.4-0.1-0.9-0.2-1.3-0.3c-1.8-0.5-3.6-0.3-5.4-0.3c-1,0-2-0.2-2.9-0.4       c-1.8-0.6-3.6-0.4-5.4-0.5c-4.2-0.3-8.4-0.3-12.3-2.4C664.8,561.7,660.5,561,656,561z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("99313D"),
                d:
                  "M683,574c-3.7-2.3-7.3-4.7-11-7c-1-0.7-2-1.3-3-2c3.9-2.6,7.8-0.2,11.5,0.2c12.2,1.3,24.4,2.8,36.3,5.7       c1.2,3.4-1.5,4.3-3.6,4.2c-5-0.2-10.3,1-15.1-1.4c-0.8-0.4-1.9-1.1-2.7-0.2c-0.9,1-0.4,2.2,0.2,3.2c0.8,1.4,2.4,2.4,2.2,4.3       c-0.1,0.5-0.3,0.9-0.7,1.3C691.8,580.4,686.7,578.5,683,574z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53747"),
                d:
                  "M717,572c-14.8-2.3-29.7-4.6-44.5-6.9c-1.1-0.2-2.3-0.1-3.5-0.1c-1.2-0.2-2.5-0.3-3.3-1.9       c1.2-0.1,2.3-0.1,3.3-0.2c4.3,0.4,8.6,0.7,12.9,1.1c1.5,1.1,3.5-0.1,5,0.9c1,0,2,0,3,0.1c1.9,1.3,4.2-0.3,6,1l0,0       c1.5,1.2,3.5-0.2,5,1l0,0c2.2,1.4,4.8-0.3,7,1c0.3,0,0.6,0.1,0.9,0c3.6,1,7.2,0.4,10.8,0.9c1.4,0.2,2.7,0.2,3.4,1.5       c-0.1,1.4-1.2,1.8-2.2,2.3C719.5,573.1,718.2,573.1,717,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43642"),
                d:
                  "M683,574c4.7,2.7,9.3,5.3,14,8c2.5-0.6,4.2,0.5,5.2,2.6c-0.4,1.1-1.2,1.4-2.3,1.4       c-2.6,0-5.3,0.2-7.9-0.1c-1.5-0.2-3.9,1.7-4.4-1.7c-0.1-0.5-2.5,0-2.7,1.8c-0.1,1.2,0.3,2.6-1.1,3.9c-1-1.2-0.4-6.5-3.7-1.8       c-0.8,1.1-1.7-0.2-2.5-0.7c-2.1-1.3-4.3-1.7-6.9-1.1c1.9,1.2,3.4,2.6,5.8,2.5c-1.3,1.5-2.6,1.3-4,0.3c-2.6-1.8-4.3,0.3-4.1,2.1       c0.5,3.7-1.8,3-3.5,2.8c-5.8-0.5-11.4,0.8-16.9,2.1c-0.9,0.2-1.4,0.4-1.6,1.5c-0.9,5-2.7,5.7-9,3.4c1.7-1.4,3.6-0.7,5.3-0.9       c1.3-0.2,2.3-0.5,2.2-2.1c-0.1-1.5-1.1-1.9-2.4-1.9c-0.5,0-1-0.1-1.5,0c-5.7,1.4-11.6-0.8-17.1,0.3c-2.9,0.6-4.3-2.9-6.9-1.3       c-0.8,0.3-1.6,0.4-2.3,0.8c-1,0.6-1.9,1.7-3,0.7c-1.1-1.1,0.1-2.1,0.6-3c0.7-1.2,1.6-2,0.3-3.4c-2.1-2.4,1.3-2.6,1.8-3       c1.7-1.3,1.3,0.7,1.5,1.6c1.2,4,4.4,2.4,7,2.4c1.5,0.7,3.2,1.3,2.9-1.3c-0.6-6,3.7-7.5,7.8-8.3c3-0.5,5.4-1.9,8-3.1       c1.3,0.8-0.6,3.2,1,3.2c3.5,0,2.7-4.1,4.6-5.8c2.5,0.5,0.6,2.4,1.1,3.8c0.5-0.1,1-0.1,1.3-0.3c3.7-2.6,7.3-0.5,11,0       c1.6,0.2,4.1,2.5,3.7-1.7c2.8,1.5,3.5-4.6,7.1-1.7c1.3,1.1,4.2,0.7,6.1-0.9C679.3,573.6,681.2,574.1,683,574z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43642"),
                d:
                  "M622.9,591.2c-1.3-1.9-1-3.2,0.2-4.7C624.7,588.3,623.6,589.6,622.9,591.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43642"),
                d:
                  "M618.1,588c0.6-0.4,0.9-0.8,1.3-0.8c0.3,0,0.6,0.4,0.9,0.7c-0.3,0.3-0.6,0.7-1,0.8       C619,588.7,618.6,588.3,618.1,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1722"),
                d:
                  "M1997.1,363.9c1.6,0.7,3.3,1.5,4.9,2.2c0.5,1.6,1,3.1,1.9,4.6c1.4,2.3,1.9,4.7-0.1,6.9       c-2.1,2.3-4.4,3.9-7.9,2.7c-7.2-2.5-14.2-5.5-20.9-9.3c-4.7-2-9.3-4-14-6c-2.6,1.1-4.6-0.7-6.8-1.3c-1.3-0.7-2.5-1.5-3.2-2.8       c1.8-5.2,5.7-2.3,8.9-2.2c1.5-0.4,2.6-1.8,4.3-1.4c2.4,2.1,2.4,2.1,1.1,4.7c0.9-0.3,1.1-1.6,1.5-1.6c3.5-0.1,2.5-2.1,2-4       c-0.3-1.2,0.5-1.8,1.5-2.2c2.9-0.6,5.2,1.4,7.9,1.9C1984.6,358.3,1991.2,360.1,1997.1,363.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1A26"),
                d:
                  "M1975,371c4.8,0.7,9.2,2.8,13.3,5.1c3.1,1.8,6.5,1.9,9.5,3.5c2.3,1.2,3.7-1.7,5.3-3       c1.8-1.5,0.9-3.5-0.1-5.4c-0.8-1.5-3.7-3-1-5.2c5.5,1.6,10.9,3.5,16,6c0.2,2,0.3,4.1-1,5.9c-6.7,3-13.3,6.1-20,9.1       c-4.7-3.9-9.8-6.8-17.3-6.8c2.3,2.5,4.5,1,5.9,2.9c-1.5,1.4-3.2,0.7-4.7,0.9c-3,0.1-5.9,0-8.5-1.5c-0.1-1.5,3.2-0.4,1.6-1.9       c-1-0.9-2.5-2-3.9-2.6c-1.7-0.7-3.9-1.4-2.9-3.7c0.8-1.9,2.6-2.9,4.9-1.3C1972.6,373.2,1976.8,375.6,1975,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F2431"),
                d:
                  "M1954,363c2.6-0.3,4.5,1.9,7,2c0.8,4.4-2.5,0.2-3.1,1.6c0.6,1.7,1.3,3.6,2,5.8       c-4.8-1.2-6.1,6.1-10.9,3.6c-2.3-2-5.4-1-8-2c-0.5-1.4-3.4-0.9-2.9-2.8c0.5-2,2.7-2.3,4.5-2.2c2.7,0.2,5.2-0.3,8.1-0.7       c-2.1-2.9-2.1-4.8,2.2-4.2C1953.9,364.2,1953.8,363.5,1954,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1A26"),
                d:
                  "M1965,382c1.1-1.3,2.5-1.2,4.1-0.6C1967.7,382.5,1966.3,381.8,1965,382C1965,382,1965,382,1965,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671720"),
                d:
                  "M1824.9,357l-0.5,0l-0.4-0.1c-2.1-2.2-5.1-0.8-7.4-2.1c-1.3-0.7-3.1-1.2-2.8-3c0.3-2.1,2.3-1.5,3.7-1.4       c2.5,0.2,5,0.3,7.4-0.6c0.9-0.3,2-0.8,2.9-0.1c5,3.7,11.2,2,16.7,3.6c0.3,0.1,0.5,0.2,1-0.3c3.8-3.7,5.8-3.3,7.3,1.3       c0.1,0.2,0,0.5,0.4,0.5c6,0,11.9,3.3,18.1,1.2c0.6-0.2-0.2,0,0.4-0.3c1.5-0.7,2.5,0,3.4,1.1c0.9,1,1.9,1.8,3,2.6       c3,2.2,6.1,3.5,9.5,0.5c4.8,0.8,9.5,2,13.5,5.1c2.1,1.7,5.7,0.9,7,4c-13-2.2-26-4.6-39.1-6.5c-11.9-1.7-24-3-35.9-4.4       c-0.7-0.1-1.3-0.2-2-0.3C1829,356.9,1826.8,358.1,1824.9,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852F37"),
                d:
                  "M1907,365c-0.3,0-0.7,0-1,0c-0.9-1.3-2.2-1.1-3.5-1.1c-1.4,0-3,0.4-3.7-1.4c0-0.3,0.2-0.5,0.6-0.5       c-0.6-0.3-0.6,0.5-1,0.5c-7.1-3.3-14.8-4.9-21.9-8.1c-0.6-1.3-1.2-2.7,1-2.9c1.8-0.1,3.7-0.4,4.8,0c-5.9,0.1-11.9-1.8-17.8-4.5       c-1.1-0.5-2.3-0.5-3.4-0.8c-1.8-0.8-3.9-0.8-5.7-1.6c-1.9-0.8-1.6-1.8,0.1-2.6c2.1-0.6,4.3-0.4,6.4-0.4       c4.3,0.2,8.4,1.5,12.6,2.6c0.4,0.2,0.7,0.6,0.9,1.1c0.1,0.7-0.8,0.9-0.9,1.5c3.2-1.7,6.5,1.9,9.7-0.2c0.8,0.1,1.4,0.5,1.9,1       c3.2,3,7.6,3,11.4,4.2c5.3,1.5,10.4,3.1,14.7,6.9c-0.3,3.2-2.5,2-5.2,1.8c3.7,1,6.8-0.2,9.5,0.9c1.5,0.6,4,0.8,1.8,3.4       C1914.5,366.3,1910.7,364,1907,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2B36"),
                d:
                  "M1907,365c3.9-2.1,8-0.5,12-1c1.5-0.8,2.9,0.2,4.2,0.6c1,0.3,2.4,0.9,2.8,0.2c3.8-6.8,9-1.8,13.5-1.7       c2.6,0.1,5.1,3,7.8-0.1c0.5-0.6,1.9-0.1,2.9,0c1.8,0.1-0.4-1.2,0.5-1.5c0.1-0.2,0.3-0.4,0.4-0.5c1.4,0,2.4,0.7,3,2       c-0.1,0.7,2.2,1.3,0.3,1.9c-1.3,0.4-2.9,0.1-4.5,0.1c0.9,1.8,3.9,1,3.4,3.3c-0.6,2.2-3,0.8-4.1,1.4c-3.3,1.8-7.2-1.4-10.3,1.6       c0.4,1.2,3.7,0,2.2,2.7C1929.7,371,1918.3,368,1907,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842632"),
                d:
                  "M1899,362c1.3,1.5,3,1.2,4.6,0.6c2.6-0.9,2.3,0.9,2.4,2.4c-1.7,0-3.4,0-5,0c-4.6-1.4-9.3-2.7-13.9-4.1       c-3.8-1.6-8.3-1.6-11.4-5c-0.2-1.1-0.3-2.1,1.3-2C1884.5,356.1,1892.2,357.8,1899,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC2230"),
                d:
                  "M1861,433c0.9,0.2,0.2,2,1.3,1.7c7.3-2,15.9,0.1,21.5-7.1c1.6-2.1,4,0,6-0.5c0.1,0.3,0.3,0.6,0.3,0.9       c0.8,2-2.2,4.8,1.6,6.3c-5.3,1.3-11.8-2.2-14.9,4.8c-1.9-3.3-6.7-1.7-11.4,4.6c2.7-7.3-3.3-2.6-4.6-5.1       c-1.4-2.8-4.7-3.9-7.8-4.5C1855.3,430.3,1858.4,434.2,1861,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97072"),
                d:
                  "M1909.1,435c-1.1-0.6-2.1-1.3-3.2-1.9c1.4-0.6,2.8-1.3,4.1-1.9c6.4-0.2,11.1,4.1,16.7,6       c1.1,0.4,2,1.1,3.1,1.3c3.7,1,7.6,1.7,10.4,4.8c0.2,0.9-0.5,1.3-1.2,1.6c-6.3-2-12.5-4-18.8-6c-3.6-1-7.5-1.2-10.8-3.3       C1909.3,435.3,1909.2,435.1,1909.1,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD3239"),
                d:
                  "M1930,439.1c-6.7-2.6-13.3-5.3-20-7.9c-1-0.4-1.9-0.9-2.9-1.3c5.1-0.7,9.4,1.7,14,3.3       c2.3,2.8,6.2,2.8,8.9,4.9C1930.5,438.4,1930.5,438.7,1930,439.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841A24"),
                d:
                  "M1982,455c-1,0-2,0-3,0c-3.9,0.4-7.1-2.1-10.9-2.2c-2.1-0.9-4.2-1.7-6.4-2c-3.3-1.3-6.8-1.6-10-3.1       c-1.2-0.9-3-1.6-1.7-3.6c4.8-1.9,9.2-0.2,13.2,1.8c2.7,1.3,5,1.8,7.8,1.1c0.2,0,0.5-0.1,0.7-0.1c4.6-0.4,8.6,1.7,12.6,3.4       c1.2,1,3.4,1.7,2.5,3.6C1986,455.7,1983.6,454.4,1982,455z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("98212E"),
                d:
                  "M1950,444c-0.2,1.5,1.3,1.9,2,2.9c-4.5,1.1-8-1.5-11.7-3.2c-3.5-1.5-6.9-3.1-10.4-4.6       c0-0.4,0-0.7,0-1.1c5.1,0.1,9.7,1.5,14,4.2C1945.8,443.4,1947.8,444,1950,444z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("954046"),
                d:
                  "M1966.9,442.2c4.4,2.3,9.5,2.3,14.1,3.9c0.2,0.5,0,1-0.4,1.3c-3.2,0.7-6.4-0.9-9.6-0.4c0,0,0,0,0,0       c-2.8-2.7-6.5-3.5-10-4.9C1963,442.1,1965,442.1,1966.9,442.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B16063"),
                d:
                  "M1981,447c0-0.3,0-0.6,0-1c5.3,0,10.7,0.1,16,0.1c0.2,0.5,0.1,0.9-0.2,1.2c-0.8,0.4-1.6,0.5-1.9,0.3       c5.1,2.6,10.3,6,12,12.6c-2.3,0.9-3.7-0.6-5.2-2c-5.7-5.5-12-9.9-20.2-10.8C1981.3,447.3,1981.2,447.2,1981,447z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("654D4E"),
                d:
                  "M1997.1,446.8c0-0.2,0-0.4-0.1-0.6c2.8-0.7,5.7-0.9,8-3.1c1.7-0.7,3.3-1.4,5-2c-0.5,3.5-3.7,3.8-6,4.7       c-2.6,1.1,0.1,1.4,0,2.1C2001.4,449.7,1999.2,448.7,1997.1,446.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B34A57"),
                d:
                  "M1813,356c-0.4,0.7-0.7,1.3-1.1,2c-8.5,0.1-17,0.8-25.1,3.9c-2.4,1.2-4.5,3.1-7.5,2.6       c-1.1-0.8-0.5-1.7-0.2-2.6c1.1-6.1,6.6-6.4,10.9-8.2c4.8,0.6,9.7,2.5,14.6,0.4c0.4-0.3,0.8-0.4,1.3-0.5       C1808.3,354.1,1810.9,354.5,1813,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E2225"),
                d:
                  "M1779.2,364.2c2.5-0.9,4.8-2.6,7.7-2.4c0.4,0.4,0.8,0.7,1.1,1.1c-6.8,2.7-6.8,2.7-3.9,8       c-0.4,0.4-0.7,0.8-1.1,1.2c-2.4,0.3-3.4-1.5-4.6-3.1c-0.3-0.7-0.5-1.4-0.5-2.2C1778,365.8,1778.2,364.8,1779.2,364.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701422"),
                d:
                  "M1872,356c-0.2,1.2,0.4,2.9-1.9,2.5c-6.8-1-13.8-1.3-20.3-3.9c0.5-2.5,2.9,0.5,3.6-1.6       c-1.9-1.8-4.4-1.4-6.4-0.9c-7.5,1.9-7.7,3-17,0.5c-5.3-1.4-10.3,1.2-16.1-2.2c1.8,3.8,4.4,4.1,6.4,4.1c2.1,0,3,0.9,3.9,2.4       c-1,0.4-2.1-1-3.1,0c-1.5,0.4-2.8-0.2-4-0.9c-0.9,0-1.8-0.1-2.7-0.1c-3.2-0.8-6.3-1.8-9.3-3.3c-0.6-0.4-1-1-1.2-1.7       c-0.6-0.5,1.9-1.4-0.2-1.8c-3.3-0.7-6.4-2.2-9.8-2.8c-8.4-2.2-16.7-5-25.3-6.9c-1.6-0.4-3.2-0.9-3.8-2.8       c1.3-2.6,3.8-1.7,5.9-2.1c11.5,1.6,23,2.3,34.4,4.9c8.6-0.3,17.5-2.1,25.1,4c5.2-0.6,9.4,4.7,15.2,2.1c3-1.4,6.3,2,9.7,0.8       c6.4,0,12,1.9,16.2,7C1871.8,354.1,1872.1,355,1872,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD4750"),
                d:
                  "M1805,351.9c3.2,1,6.4,1.9,9.2,4c-0.4,0-0.8,0.1-1.2,0.1c-3,0.8-5.4-1.2-8-2       C1804.5,353.3,1804.5,352.6,1805,351.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671720"),
                d:
                  "M1816.9,356c1.5-0.2,2.8,0.2,4,0.9C1819,359.2,1818,357.4,1816.9,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701422"),
                d:
                  "M1824.9,357c2,0.2,4.2-0.8,6,0.8C1828.9,357.8,1826.8,358.4,1824.9,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D55565"),
                d:
                  "M1805.1,384c-2,0-4,0-6.1,0c-2.9-1-5.8-2.2-8.6-3.4c-0.7-1.3-1.8-2.5-1.8-4.1c0.1-0.2,0.3-0.4,0.4-0.5       c1.9,0.7,3.9,1.5,5.8,2.2C1797.7,381,1802.2,381.1,1805.1,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15661"),
                d:
                  "M1779,369c1.3,1,2.6,2.1,3.9,3.1c0.1,0.3,0.1,0.5,0.1,0.8c-1.2,0.8-2.6,1.3-4.1,1.2       c-2.4-0.3-2.7-2.2-3-4C1776.7,368.6,1777.6,368,1779,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15661"),
                d:
                  "M1784,376c-0.3-1-0.6-2.1-0.9-3.1c2.1,0.7,4.2,1.6,5.9,3.1c0,0-0.1,0.1-0.1,0.1       C1787.3,377.3,1785.6,377.4,1784,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C78283"),
                d:
                  "M1997.1,446.8c2.3,0.4,4.6,0.7,7,1.1c1.4,0.3,2.8,0.7,4.1,1c-1.1,0.2-2.2,0.4-3.3,0.6       c1.7,2.3,0.3,5.4,2.2,7.8c1.3,1.6,4.1,2,4,4.7c-1,1-2,0.5-3.1,0.1c-0.4-0.2-0.7-0.5-1.1-0.8c-0.2-0.4-0.2-0.8,0-1.2       c-3.5-5.9-8.5-9.9-15.4-12.8C1993.7,447.1,1995.4,446.9,1997.1,446.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("832730"),
                d:
                  "M2017,378c0-2-1-4.2,1-5.9c2.3,0.4,4.3,1.4,6.2,2.7C2022.1,376.5,2019.7,377.6,2017,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60151D"),
                d:
                  "M2054,474.1c2.6,3.1,1.3,6.5,1,9.9c0.4,0.8-0.1,1.3-0.7,1.8c-0.9,0.4-2.4,0.8-2.5-0.3       c-0.3-5.2-3.8-4.1-7-3.9c-1.6-0.3-2.6-1.5-3.3-2.8c-2.4-5-6-7.7-11.7-7.2c-0.6,0.1-1.3-0.3-1.9-0.6c-2.3-0.8-5-0.2-7.1-1.7       c-1.8-0.7-4.7-1-1.5-3.7c1.1-0.1,2.1-0.1,3.1,0.3c3.4,1.4,7,2.2,10.6,2.8C2040,470.4,2047.2,471.4,2054,474.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641B22"),
                d:
                  "M2022.4,465.9c-1.1,0-2.3,0.1-3.4,0.1c-3.1,1.5-5.7,1.9-5.9-2.7c0.6,0,1.2,0,1.9-0.1c1,0.4,2,0.7,3,1.1       C2019.4,464.8,2020.9,465.4,2022.4,465.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C151D"),
                d:
                  "M2013.1,463.3c1,3,3.5,2.9,5.9,2.7c-1,3.7,2,1.3,3,2c0.4,5.5,3.7,2.3,6,2c4.2,0.6,8.7,0.1,12.1,3.9       c1.9,2.2,1.9,5.7,4.9,7.1c0.2,1.5-0.8,1.5-1.8,1.5c-3.5-1.3-6.7-3.3-10.4-4.3c0.8-0.8,2.1-1.1,1.7-2.3       c-0.1,0.7-0.7,1.6-1.6,2.2c-0.5,0.4,0,0.3-0.4,0.2c-3-0.4,0.6,4.5-2.9,3.5c-2.1-0.6-2.4-3.3-4.1-4.2c-4.3-2.1-8.8-3.8-13.6-4.2       c-4-2.5-7-6.1-10-9.6c-1.1-1.4,0.2-2.3,1.6-2.8c1.5-0.5,2.9,0.6,4.3,0.2c1,0.2,2,0.5,3.1,0.7       C2011.7,462.4,2012.4,462.8,2013.1,463.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93333C"),
                d:
                  "M2054.1,485c0.3-0.3,0.6-0.7,0.9-1c2,0.2,1.5-6,5-2c1.8,3,1,5.2-1.9,7c-1.6,0.9-3.4,1.7-3.6,4.2       c-0.2,1.5-2.2,1.8-3.7,1.8c-2.2,0-4.2-0.1-5.6,2.2c-0.6,0.9-1.8,1.1-2.7,0.7c-5-2.3-9.1,0.8-13.4,2.1       c-3.7,0.9-6.6,5.3-11.1,2.3c-0.2-0.4-0.3-0.9-0.2-1.4c0.9-1.2,2.1-1.9,3.3-2.8c3.3-1.5,6.8-2.6,10-4.2c4.4-1.7,9-2.5,13.5-3.7       C2048.3,489.5,2051.5,487.8,2054.1,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA5359"),
                d:
                  "M1991,357c0,1,0,1.9,0,2.9c-4.6,0.2-8.4-2.5-12.8-3.4c-3-1.3-6-2.5-9-3.8c-1.4-1.1-3-2.1-4.3-3.4       c-0.2-0.4-0.2-0.9,0.1-1.3c4-2.4,6.7,1.3,9.6,2.6C1980,353.1,1985.7,354.6,1991,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A65157"),
                d:
                  "M1943,340c1.3,0,2.7,0,4,0c4.5,1,9.3,1.4,12,6c-0.1,0.2-0.2,0.4-0.3,0.6c-2,2-3.7,0.4-5.3-0.6       c-2.4-1.5-4.9-2.9-7.8-2.8c-0.7-0.1-1.4-0.3-2.1-0.6C1942.6,341.9,1942.2,341.1,1943,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A65157"),
                d:
                  "M1965,348c0,0.3,0,0.7,0,1c-2.2,1.9-5.3,0.4-6-3c0,0,0,0,0,0C1962.2,344.3,1964,344.9,1965,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A54148"),
                d:
                  "M2029,506c0,4,0,8,0,12c-3.3,0-6.7,0-10,0c-0.8-3.5-2.4-1-3.4-0.3c-3.9,2.6-8,3.9-12.6,2.3       c-0.9-2.7,0.7-4,2.8-5.3c1.6-1,3.9-0.5,5-2.4C2013.4,509.5,2026.2,505.1,2029,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0444C"),
                d:
                  "M2046,578c-1-1.3-2-2.7-3-4c-0.7-3.8,0.6-7.5,0-11.5c-0.4-2.5,3.2-2.3,5.8-1.2       c-1.4-1.1-1.1-2.6-2.1-3.4c-1.2-1-2.3-2.1-3.3-3.2c-1.5-1.5-3.4-2-5.4-2.5c-2.5-1-4.1-2.8-4.6-5.3c-0.9-4.2-3.5-8.1-2.5-12.7       c0.3,0,0.9,0.1,0.9,0.1c1.2-4.5,5.2-3.5,8.3-4.3c0.6,3.5,2.7,0.5,4,1c1,1.5,0.8,4.1,3.6,4.1c0.8,0,1,0.6,1,1.4       c-0.1,4.8,1.4,6.2,5.7,5c5.7-1.5,5.8-1.3,6.5,4.6c0.6,5.6,0.3,10.5-4.8,14.2c-1.1,0.8-1.7,3.1-1.5,4.5c0.6,3.2-0.6,4.7-3.6,5.2       c-0.9,0.1-1.3,0.5-1.5,1.6c-0.6,3.7-0.7,3.7-3.9,1.1C2044.6,574.6,2046.5,576.2,2046,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D46"),
                d:
                  "M1965,554c-3-0.3-6-0.6-8.9-1c3.8-5,3.8-5-2.1-6.9c-2.6-0.8-5.3-1.5-8-2.2c-1.1-3.3,1.3-3.3,3.2-3       c3.9,0.7,7.2,0.2,9.6-3.3c1.5-2.1,4.4-1.2,6.3-2.6c3.6-2.8,6.7-6.1,10.7-8.3c2.8-0.5,5.6-1.5,8.5-0.3c1.5,0.6,1.8-0.8,2.4-1.8       c2.6-4.8,6.1-4.7,9.2,0.4c-2.3,4.1-7.4,4.1-10.4,7.2c-1.2,1.2-3.4,1.6-3.6,3.8C1975.9,541.6,1968.8,546.2,1965,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3942"),
                d:
                  "M1996,525c-1.4-2.6-4.7-1.1-6.4-3c-0.6,0.9-1.4,1.7-1.6,2.7c-0.9,4-3.4,3.4-6.3,2.7       c-0.5-0.1-3.6-4-2.6,1.1c0.1,0.4-1.8-1.4-3.1-1.5c-1-0.8-1.3-1.9-1.4-3.2c0.4-2.1,2.5-0.7,3.4-1.8c1.7-0.3,3.6,0.7,5-0.9       c2.2-0.9,4.5-1.7,6.6-2.8c5.5-1.6,9.6-5.8,14.8-7.9c2.2,0.3,4.3-0.5,6.4-0.9c2.9,1,0.2,2.4,0.2,3.5c-0.3,0.7,2.1,2.3-0.4,2       c-4.3-0.6-6.3,1.6-7.6,5c-2.1,0.5-4.2,1-3,4C1998.5,523.8,1997.2,524.3,1996,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EBE6E6"),
                d:
                  "M2030.8,534.2c0.8,3.2,1.6,6.4,2.3,9.7c0.7,3.6,2.2,6.6,5.8,8.2c1.8,0.2,2.8,1.4,3.5,2.8       c0.2,1.5-0.8,2.5-1.7,3.5c-0.4,0.5-0.9,1-1.3,1.5c-2.2,3.1-5,5.8-6.7,9.2c-0.6,0.7-1.4,1.3-2.4,1.1c0.7-5.3,4.4-8.8,7.7-12.4       c1.5-1.7,2.3-3.1,0-4.3c-4.4-2.2-5.4-6.4-6.7-10.5c-4.2-12.7-3.6-11-17.9-14c-1.4-0.3-3,0.4-4.2-1c0.5-1,1.4-1.4,2.3-1.9       c0.2,0.1,0.3,0.1,0.5,0c5.2,1.3,10.7,1.4,15.2,4.7c1,0.8,1.9,1.6,2.9,2.4C2030.2,533.5,2030.5,533.9,2030.8,534.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3444F"),
                d:
                  "M1965,554c0.1-2.6,0.8-4.4,2.9-6.8c3.1-3.5,8.3-5.1,9.7-10.2c0.5-1.9,3-0.7,4.5-1c-0.3,1-0.7,2-1,2.9       c-1.6,1.7-3.3,3.4-4.9,5c-3.3,3.3-7.1,6.2-9.9,10.1C1965.8,554.4,1965.4,554.3,1965,554L1965,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A7A78"),
                d:
                  "M2027,530.9c-5.1-1.6-10.6-1.8-15.2-4.7c0.5-0.1,0.9-0.2,1.4-0.4C2018.4,525.8,2023.7,525.7,2027,530.9       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A7A78"),
                d:
                  "M2011.3,526.1c-0.2,1.3-1.2,1.6-2.3,1.9c-4-1.1-8-1.6-12,0c2.2-3.4,5.6-1.6,8.4-2       C2007.4,525.8,2009.4,526.1,2011.3,526.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3D45"),
                d:
                  "M2031.9,568.8c1-4.2,4.3-6.7,7-9.6c1.9,0.5,3.6,0,5.2-0.8c0.9-0.5,1.7-1.3,2.9-1.4       c2.8,0.1,2.7,3.1,2.6,4.2c-0.1,1.6-2.1,0.1-3.2,0.2c-1.6,0.2-4.1,0-2,3.2c2.2,3.3-0.9,6.3-1.4,9.5c-1,0.4-1.6,1-2,2       c0,6.2-5.1,6-9.1,7.2c-1.5-2-0.5-3.9,0.5-5.5c1.8-2.7,1.6-4.8-0.9-6.8C2031.4,570.2,2031.5,569.5,2031.9,568.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB444C"),
                d:
                  "M2032,583c1.1-0.9,2.1-2.4,3.7-2.3c3.6,0.3,4.4-2.3,5.4-4.7c1.1,4-1.9,7.9-0.3,12.1       c0.4,1.1-0.8,2.8-2.7,2.9c-2.2,0.5-4.2-1.4-6.8-0.2c-2.9,1.4,0.7-3.5-2.2-2.8C2028,585.1,2029.2,583.6,2032,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A84F56"),
                d:
                  "M2050,602c-1.9-1.8-0.6-3.9,0-5.9C2050,598.1,2050,600,2050,602L2050,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F393F"),
                d:
                  "M2011,513c-1.8-1,1.8-2,0-3c0.7-1.5-1.7-1.9-1.2-3.4c2.2-2.4,4.3-5.1,8.2-4.6c4.1,1.9,7-3.2,11-2       c0,1,0,2,0,3c-0.3,1,1.1,2,0,3c-3.2,0-6.3,0.5-8,3.6c-0.9,1.6-1.8,0.6-2.8,0.8C2015.7,510.8,2012.8,510.5,2011,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C05E67"),
                d:
                  "M1978,356c4.5,0.7,8.9,2.1,13,3.9c2.3,1,4.7,2,7,3c-0.3,0.3-0.7,0.6-1,1c-6.4-2.3-12.7-4.6-19.1-6.9       c-0.3-0.2-0.3-0.5-0.3-0.7C1977.8,356.1,1977.9,356,1978,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821E2A"),
                d:
                  "M2032,583c-1.2,1.5-2.8,2.9-3,5c-1.3,2-2.7,4-4,5.9c-0.8-0.4-0.9-1.2-1-2c-1.4-1.7,0.2-3,0.7-4.4       c1.5-4.1,3.2-8.2,4.8-12.3c0.8-1.5,0.4-3.7,2.7-4.2c3.6,0.5,4.2,2.4,2.4,5.3C2033.3,578.4,2031.9,580.4,2032,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A56C70"),
                d:
                  "M2030.1,575.1c-0.7,6.1-4.9,10.9-6.2,16.9c-2.7,2-1.7,6.4-5.2,8c3.3-8.4,6.6-16.7,9.9-25.1       C2029.2,574.5,2029.7,574.6,2030.1,575.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A46A6C"),
                d:
                  "M1965,554c0.3,0,0.6-0.1,0.9-0.1c0.5-0.3,0.9-0.2,1.3,0.1c-6.7,9-14,17.5-22,25.4       c-0.1-0.5-0.1-1-0.2-1.4C1951.7,570,1958.3,562,1965,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B3525A"),
                d:
                  "M1967.2,554c-0.4,0-0.8-0.1-1.3-0.1c1.4-5.3,6.2-7.1,10.1-9.9C1973.7,547.8,1970.6,551.1,1967.2,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B18485"),
                d:
                  "M2030.1,575.1c-0.5-0.1-1-0.2-1.5-0.3c0.5-1.5,1-3.1,1.5-4.6c0.6-0.4,1.2-0.9,1.7-1.3       c0.1,0.7,0.2,1.5,0.3,2.2C2031.5,572.4,2030.8,573.7,2030.1,575.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B1829"),
                d:
                  "M1927.2,526.2c2.6-1.9,4.3-0.9,5.3,0.6c1.5,2-1,3.2-1.6,4.7c-0.7,1.6-1.6,0.2-2.3-0.2       c-0.9-0.5-1.1-0.8,0.1-1.5C1933.5,527.3,1928.7,527.3,1927.2,526.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1914,525c-1-1.2-2.7-2.2-1-4C1913.1,522.4,1916.1,523.1,1914,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B1353F"),
                d:
                  "M1975,524c1.2,0.7,1,1.9,1,3c0.1,3.9-4.5,2.6-6.1,5.5c-1.3,2.4-4.3,6.2-8.8,4.8       c-0.8-0.2-1.5,0.6-1.8,1.4c-1.9,5-6.2,4.2-9.8,3.5c-2.2-0.4-3-0.3-3.5,1.7c-2-0.7-4-1.3-6-2c0.7-0.7,1.3-1.3,2-2       c3.4-4.2,8.4-5.9,13-7.9c5.2-2.2,10.5-4.1,15.3-7C1971.7,524.2,1973.2,523.5,1975,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1925"),
                d:
                  "M1975,524c-10.5,6.4-22.4,9.9-33,16c-1.5,0.1-2.9-0.2-4.2-1.3c3.4-2.4,6.2-5,10.8-5.7       c3.1-0.4,6.7-2.2,8.4-5.9c1.6-3.6,5.6-2.1,8.3-2.9c2.9-0.8,5.8-1.4,8.7-2.3c1.3,0,2.7,0,4,0C1977,522.7,1976,523.3,1975,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761523"),
                d:
                  "M2021,499c-0.6,1.3-1.6,2-3,2c-3.9,1.9-7.9,3.5-11.7,5.4c-1.3-0.5-2.1-2-4.2-0.4       c-2,1.5-5.1,1.1-4.1-3.1c1.2-3.2,2.7-6.4,5.3-8.7c3.4-3.2,4.1-8.3,8.5-10.8c1.8-1-0.2-1.8-1.3-2.5c-2.3-1.4-5.3,0-7.5-1.9       c1.4-0.6,2.1-1.9,3-3c1-1,2-2,3-3c1-0.7,2-0.7,3,0c0.6-0.3,1.4-0.9,1.8-0.7c5.2,2.5,12.5,1,15.2,8.2c0.2,0.4,0.7,0.6,2.2,1.9       c-2.2-3.9-1.7-5.3,1.8-4.3l0,0c0.2,0.2,0.5,0.6,0.7,0.6c2.9-0.2,6.7,1.1,9.3,3.4c1.4,2.6,0.8,4.4-2.3,5.2       c-3.7,0.9-7.5,2.9-11.3-0.4c1.3,2.1,1.8,4.2-0.4,5.6c-1.7,1.1-3.5,3.7-5.9,0.9c-0.3-0.6-0.8-1.6-1.2-1.4       c-2.2,0.9-4.4,1.9-6.6-0.7c2.2,3,5.3-0.2,7.6,1.7C2023.9,495.4,2020.1,496.5,2021,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851728"),
                d:
                  "M1998,503c1.6-0.1-0.8,3.1,2.6,2.6c2.8-0.5,1.4-2.3,2.8-3.9c-0.1,2.5,2.5,2.3,2.6,4.3       c-3.2,2.7-7.1,4.4-9.4,8.5c-1,1.9-5.1,1.8-6.6,4.5c-1.9,2.3-4.5,1.9-7,2c3.8-2.9,6-6.9,8-11.1       C1994.6,509,1995.6,505.2,1998,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M2006,476c0.2,2.2-0.8,3.2-3,3c-0.3-0.3-0.7-0.7-1-1C2003.3,477.3,2004.7,476.7,2006,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781524"),
                d:
                  "M1997,478c1.7,0.7,3.3-1.8,5,0C2000.3,478.8,1998.7,481.5,1997,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD363F"),
                d:
                  "M696,624c2.6-2.9,6-3.9,9.7-4c7.1-0.1,14.2,0.1,21.4-0.1c7.1-0.2,13.9,2.6,21,2.4c0.3,0,0.6,1,0.9,1.6       C731.3,624,713.7,624,696,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A22F3D"),
                d:
                  "M733,603c0-0.3,0-0.6,0-1c1.3-1.5,3.1-1.2,4.8-1.4c1.7,0,3.3,0,4.9,0.7c1.9,1.9,3.9,3.5,6.5,4.3       c6.9,2.1,12.5,6.5,18.1,10.8c2.2,1.7,4.7,2.3,7.5,2.3c2.2,0.1,4.8-0.4,6.1,2.3c3,2,6.4,0.6,9.6,1c1.9,0.3,3.9-0.5,5.7,0.6       c0,0.5,0.1,1,0.1,1.4c-7.1,0-14.3,0-21.4,0c-0.3,0-0.7,0-1,0c-6.7-2.9-13.5-5.4-19.8-9.7c-4.7-3.2-10.7-4.9-15.8-7.8       C736.5,605.4,734.4,604.7,733,603z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73945"),
                d:
                  "M733,603c10.1,4.2,19.7,9.5,29.1,14.9c3.9,2.2,8.5,2.9,11.8,6.1c-1.7,0-3.3,0-5,0       c-0.2-2.1-1.9-2.2-3.3-1.9c-3.7,0.7-6.6-1.4-9.9-2.2c-0.6-0.1-1.5-0.7-1.5-1.1c0.1-6.7-5.3-4.8-8.8-5.5       C744.1,613,733.5,604.6,733,603z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5A1A6"),
                d:
                  "M369,388c-6.8-1.1-13.5-0.3-20,2c-0.2,0-0.3-0.1-0.5,0c-3.3,0.2-4.7-2.7-5.5-4.8c-0.4-1,3.2-1.6,5-2.1       c1.6-1.8,3.8-2,6-2.4c7-1.2,14.1-1.1,21.1-2c2.3,0.1,4.7-0.2,7,0.6c2.4,2.9-0.6,3.9-2,5c-1.2,1-2.9,1.4-2.8,3.4       C374.7,390,371.9,389.8,369,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8969C"),
                d:
                  "M354,382c-2,0.3-4,0.7-6,1c-1.5-1.1-3.5-1.8-4-4c-6.1-3.4-6.1-3.4-6.5-13.2c0-0.6-1-1.2-1.5-1.8       c0,0,0,0,0,0c0.9-1,1.5-2.6,3.2-2.4c3.4,0.6,5.3,2.6,6.7,5.9c1.8,4,3.8,7.9,8.1,10.1C356.7,378.8,356.1,380.5,354,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DFA3A9"),
                d:
                  "M369,388c2.6-0.9,6.2,2,8-2c1.3-1.3,2.8-1.1,4.3-0.8c0.8,0.3,1.6,0.8,1.6,1.7c0.1,1.9-6.9,8.4-8.9,8.4       c-3,0.1-6.2-0.7-9.1,0.7c-2.1,0-4.1-0.2-6,1c-0.7-1.4-0.5-2.9,1.2-2.8C365,394.5,366,390,369,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E5ABAF"),
                d:
                  "M365,396c2.1-3.6,5.8,0,8.3-1.7c0.4-0.2,1.6,0.6,1.8,0.4c2.1-3,5.3-5.3,6.9-8.7c4.8-1.9,9.7-3.4,15-2       c1.2,0.8,2.4,2.2,3.6,2.2c3.1-0.1,0.7,1.6,1,2.3c1.2,2.5-0.9,1.5-1.6,1.5c-4.7,0.1-9.5-0.7-13,3.7c-0.4,0.4-2.4,1.3-3-1       c-0.4-1.4-2.3-0.9-2.6,0c-0.5,2-2.5,2-3.5,3.2C373.7,396,369.3,396,365,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA1B28"),
                d:
                  "M445,378c-0.4,3.8-4,7.3-0.4,11.6c1.3,0.2,0-4,2.3-2.5c1.2,0.8,1.8,2.4,2.1,4.2       c0.7,5.1-1.5,3.8-5.2,4.1c-7.8,0.6-15.6-0.1-23.3,0.8c-2.9,0.3-5.5-0.7-8.6-0.2c1.2-2.8,3.5-4,5.1-6c3.9-3.2,8.8-4.8,13.2-7.2       c1.3,0,2.5-0.4,3.6-1.2c0.4-0.2,0.8-0.2,1.3-0.2c3.5,0.3,5-3.2,8-4C443.8,377.3,444.5,377.5,445,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD2C34"),
                d:
                  "M435,382c-0.3,0-0.7,0-1,0c-0.8,1-2.1,1.2-3,2c-3.5,0.5-6.2,2.8-9.1,4.4c-1.6,0.9-3,1.8-4.9,1.6       c-2.1-0.5-3.4,1.1-5,1.9c-0.6-0.7-0.6-1.4,0.1-2.1c2-1,4-2,5.9-3c5.1-3.6,11-5.7,16.3-9.1c0.9-0.5,1.9-0.5,2.8,0.1       C438.3,380.1,436.4,381,435,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45760"),
                d:
                  "M443.1,371.9c0.3-0.4,0.7-0.9,1-1.3c2.3,4.7,4.7,9.5,7,14.2c0,0.5-0.1,0.9-0.2,1.4       c-2.7-2.1-3.2-5.5-5.1-8.1c-1.3-0.9-2.3-2.1-2.8-3.6C442.8,373.6,442.4,372.7,443.1,371.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7313A"),
                d:
                  "M443.9,374c0.7,1.4,1.3,2.7,2,4.1c0,0-0.5,0-0.5,0s-0.5,0-0.5,0c-0.7,0-1.3,0-2,0       c-1.5,0.3-3,0.5-4.2-0.9c-0.2-0.7,0.1-1.3,0.5-1.8c0.8-0.7,1.7-1.5,2.7-1.9C442.8,373.4,443.4,373.5,443.9,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62736"),
                d:
                  "M395.6,393.9c3-1,6.1-2.1,9.4-2.1C402.7,396.3,398.6,393,395.6,393.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53038"),
                d:
                  "M412.1,389.9c0,0.7-0.1,1.4-0.1,2.1c-2.4,0-4.7,0-7.1,0C407.1,390.6,409.5,389.8,412.1,389.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A1321"),
                d:
                  "M549,388.1c0.7,3.6,4.7,0.5,6,2.9c-4.1,0.6-7.7,3.1-12,3c-3,0-5.9-0.1-8.9,0c-4,0.1-7.4-0.2-10.9,3.7       c-4.1,4.7-11,4.6-17.2,3.3c0.4-2.7-4.1-1.1-3.4-3.6c0.7-2.3,3.5-0.8,5.1-1.9c0.9-0.6,1.2-1.5,1.3-2.5c2.3-2.2,5.3-1.3,8-1.6       c5.5-0.8,11.1-0.9,16.6-0.6c4.4-1.3,9.3,0,13.5-2.5c0.4-0.3,0.8-0.5,1.2-0.6C548.6,387.9,548.8,388,549,388.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M509.9,414.8c1.4,0,2.9,0,5.6,0C512.8,416.4,511.3,416,509.9,414.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C1120"),
                d:
                  "M513.7,422.5c-0.3-0.5-0.6-0.9-0.6-1.2c0.1-0.4,0.5-0.6,0.8-0.9c0.3,0.3,0.7,0.6,0.7,0.9       C514.6,421.7,514.2,422,513.7,422.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871A2C"),
                d:
                  "M535,392c-8.7,0.4-17.3,0.7-26,1.1c-2.9,1.6-6,0.8-9,0.9c2.8-1.7,0.9-4.6,1.8-6.8       c4.2-1.3,8.6,0.1,12.8-1.1c3.4-1.1,6.9,0.5,10.3,0c3.1,0.1,6.1,0.2,8.9,1.7c0.5,0.4-0.4,1.3,0.8,1.6       C536.6,389.8,536.5,391,535,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931D2E"),
                d:
                  "M501,388c3.4,2.5,3.2,4-1,6c-2,0-4,0-6,0.1c-3.8-0.7-7.3,1-11,1c-0.8,0.7-1.8,0.5-2.8,0.4       c-1.1-1.6,0.4-2.1,1.3-2.3c3.1-0.8,5.4-2.9,7.7-4.8c1.5-0.6,3-0.9,4.5-1.3C496.3,386.7,498.8,386,501,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881821"),
                d:
                  "M480,395c1,0,2,0,3,0c-3.7,4.5-9.5,2.6-14.1,4.8c-2,1-4.1-2.9-6.9-1.8c-0.8-0.4-1-1.2-1-2       c1.7-1.7,3.9-1.4,6-1.5c2.7,0.4,5.2-0.8,7.9-0.8C476.7,393.7,478.6,393.5,480,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B21F2F"),
                d:
                  "M457.1,390c-1.3-2.4-2.6-4.7-3.9-7.1c0.5-2-2.3-3.3-1-5.4c2.3-1.7,3.9-0.3,4.8,1.6       c2,4.8,5.1,3.2,8.4,1.8c2.3-1,3.8-3.4,6.5-3.4c1.2,0.3,2.3,0.8,2.4,2.3c-0.6,1.3-1.9,2-3,2.8c-3.9,3.1-8.4,5.3-12.8,7.6       C457.9,390.4,457.5,390.3,457.1,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE232F"),
                d:
                  "M467,396c-2,0-4,0.1-6,0.1c-0.7-1.8-3-2.8-3.1-5c1.5-1.4,3.5-1.3,5.2-1.9c1.3-0.3,2.7-0.4,4-0.4       c2.6,0.1,5.3-0.3,7.9,0.4c0.9,0.2,2.2,0.5,1.7,1.8c-0.5,1.3,2,4.3-2.1,3.8C472,394.2,469.6,395.6,467,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3C46"),
                d:
                  "M452.1,378c0.1,1.7,2.6,2.9,1.1,4.9c-2.6-4.9-5.7-9.5-7.2-14.9c0.7,0,1.4,0,2,0c1,0.7,1.3,1.9,1.8,2.9       C450.5,373.3,452.7,375.2,452.1,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1F2E"),
                d:
                  "M463,390.1c-1.5,1.6-3.4,0.7-5.1,0.9c-0.3-0.3-0.5-0.7-0.8-1c0.3,0,0.6,0,0.9,0       C459.7,389.1,461.3,388.4,463,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EAAAB0"),
                d:
                  "M397,384c-5,0.9-9.9,2.3-15,2c-1.7,0-3.3,0-5,0c-1.2-0.3-2.6-1.5-0.6-1.7c3.4-0.2,4.7-2.5,6.6-4.3       c3-2.6,6.7-3,10.5-3c2.1,1,4.6-0.8,6.5,1c6.4,0,12.7,0.2,19-1c1.5,1,3.5-0.4,5,1c0.7,4-1.5,5.6-5,6c-0.7,0-1.3,0-2,0       C411.7,380.2,401.4,380.2,397,384L397,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EF9AA0"),
                d:
                  "M419,384c2-1.7,4.4-3.1,5-6c2.1,0,4.2-0.1,6.3,0c2.6,0.1,2.7-1.2,1.7-3c1.5-1.1,2.6-3.2,5-2       c2.7-1.4,3.1-1,3,3c-0.4,0.3-0.7,0.7-1.1,1c-0.3,1-0.8,1.5-1.9,1.2c-5.8,1.1-9.7,6-15.3,7.5c-1.2,0.3-2.5,0.8-3.7,1.2       C418.3,385.9,418.7,384.9,419,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7B2B5"),
                d:
                  "M397,384c-0.3-2.9,0.6-4.2,3.8-4.1c3.8,0.2,7.5,0.2,11.3,0c3-0.2,4.6,1,4.9,4       C410.3,384,403.7,384,397,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761527"),
                d:
                  "M627,384c-7.8-2.9-16.1-1.1-24-3c3.8-2.4,8.1-2,12.3-2.6c2.8-0.4,5.5-0.6,8.2-1.4c2.7-2,5.1-1.6,8.5-1       c5.4,1,11.3,0.7,16.9-0.8c15.1-1.3,30.2-2.4,45.3-3.7c5.9-0.5,11.8-1.5,17.8-1.4c5.6,3.3,11.6,0.9,17.4,0.9       c4.9,0,9.8-1.7,14.7,0.2c5,0.3,10-1,14.9-0.4c1.9,0.2,4.8-0.3,4.1,3.3c-2,0.5-4.1,1-6.2,0.9c-17.2,0.5-34.3,3-51.5,3.7       c-10.8,0.5-21.6,1.8-32.4,2.2c-13.7,0.6-27.4,2-41.1,3.1c-3.9,0.7-3.1-2.2-3.5-4.8C628.3,381.2,629.1,383.2,627,384L627,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661320"),
                d:
                  "M757,375c1.9-1.2,3.9-1,6-1c3.6-2.3,7.7-2.1,11.6-2.4c10.8-0.8,21.5-2.1,32.3-2.1c1,0,2-0.2,2.9-0.5       c11.6-0.5,23.1-1.9,34.8-2.6c6.9-0.4,14-0.2,20.8-1.7c1.4-0.1,2.1,0.5,2.3,1.8c0,0.6-0.3,1.1-0.7,1.5c-0.3,0.4-0.8,0.8-0.8,1.2       c0.2,5.5-1.2,10.5-5.1,14.8c-1.5-2.6-4.9-2.8-8.4-4.7c2.4-0.6,5.5-0.2,3.6-3.7c-1.5-2.8-1.5-3-4.9-1.2c-0.5,0.3-0.8,0.2-1.2,0       c-7-3.9-7-3.9-13.4-1.6c0.1,1,1.1,1.2,1.7,1.7c0.8,0.6,1.8,1.3,0.6,2.3c-0.8,0.7-2.3,0.6-2.6-0.4c-2.2-6.2-5.6-3.1-8.8-1.3       c-0.1,0.1-0.3,0.1-0.5,0.1c-1.4,0.4-2.8,1.6-4.2,0.2c-0.2-0.2-0.3-1-0.2-1.3c0.9-1.5,2.4,0.1,3.5-0.5c0.1-1.4-0.8-1.4-1.6-1.4       c-8.2,0-16.6-1.4-24.4,0.4c-7,1.6-14.2,0.4-21,3.2c-3.2,1.3-8.2-2.5-11.2-0.3C763.9,378.4,760.7,375.1,757,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("420F15"),
                d:
                  "M867,368c0-0.3,0-0.7,0-1c1.9-0.4,2.5,0.9,3.1,2.2c2.2,6.4,2.1,13.2,3.3,19.8c2.3,17.6,5.8,35.1,6.6,53       c0.3,1.7,0.5,3.5,0.4,5.3c-0.7,2.6,1.5,6.2-2.4,7.8c-1.3-4.2-1.9-8.6-2-13c-1.6-12.1-2.8-24.2-4.4-36.3       C869.8,393.2,867,380.8,867,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M775.4,446.9c-2.7,3.4-4.4,5.3-7.8,3.6c-0.9-0.5-2.5,0-2.1-1.6c0.3-1.1,2-2,2.7-1.4       C770.3,449.2,772.2,447.8,775.4,446.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721524"),
                d:
                  "M627,384c0.5-1.7,1-3.4,1.5-5.2c1.1,1.9,0.5,4.8,3.5,5.2C630.3,386.1,628.7,383.8,627,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661320"),
                d:
                  "M848.1,373.2c-2.2,0.9-3.6,2.1-6.2,0.5C844.1,373.1,845.3,371.7,848.1,373.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M686.1,386.1c-1.8-0.5-3.5-1-5.2-1.5C682.9,384.2,685.1,383,686.1,386.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M811.9,390.9c-1.8,1.4-2.7-0.4-4.7,0.5C809.2,389.5,810.4,389.9,811.9,390.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M797,388.8c0.5,1.3,0.9,2.3,1.3,3.2c-0.4,0.1-1,0.4-1.2,0.3C796,391.6,795.7,390.6,797,388.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M812,446c-0.9,0-1.9,0-3,0C811.4,443.9,811.4,443.9,812,446C812,446,812,446,812,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M815.4,391.3c0,0.6,0.3,1.4-0.6,1.5c-0.4,0-1.1-0.4-1.1-0.5c0.1-0.8,0.3-1.7,1.2-1.9       C815.4,390.2,815.4,390.9,815.4,391.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M819.1,392.8c-0.4-0.5-0.8-0.8-0.9-1.1c0-0.4,0.2-1.1,0.4-1.2c0.7-0.3,1.2,0.3,1.1,0.9       C819.8,391.9,819.4,392.2,819.1,392.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M790.4,445.1c0.4,0.5,0.6,0.8,0.9,1.1c-0.3,0.2-0.7,0.6-1,0.5c-0.3-0.1-0.6-0.5-0.9-0.8       C789.7,445.7,790,445.5,790.4,445.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661320"),
                d:
                  "M772.6,379.3c-0.3,0.2-0.7,0.5-1.1,0.6c-0.5,0-1-0.3-0.7-0.9c0.1-0.3,0.5-0.5,0.8-0.6       C772.1,378.3,772.5,378.5,772.6,379.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M806.5,388.3c-0.3,0.1-0.8,0.4-1.1,0.3c-0.3-0.2-0.5-0.7-0.7-1.1c0.3-0.1,0.6-0.3,0.9-0.3       C806.2,387.2,806.6,387.4,806.5,388.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M827.8,441.1c-0.4-0.3-0.7-0.6-1-0.8c0.3-0.3,0.6-0.8,0.9-0.9c0.2-0.1,0.6,0.4,1,0.6       C828.3,440.3,828.1,440.6,827.8,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M741,473c-0.4,1-1.3,2-0.3,3.7c1.7-2,3.7-3.2,6.4-2.8c1.2,0.2,2.3-0.5,2.7-1.8c1.5-4.7,4.6-4.5,8.8-2.7       c-2.9,1.7-2.7,4-2.4,6.7c3.6-4,8.5-1.1,12.4-2.8c-0.6-2.4-3.3-0.4-4.1-2.5c1.4-1.1,3-1.1,4.3-0.2c1.8,1.3,5.2-1.2,5.7,2.6       c0.7-0.3,1.9-0.6,2.1-1.1c0.8-2.9,4.5-4.1,3.8-8c-0.6-3.4,2.7-3.1,4.9-3.3c4.2-0.3,8.4-2.7,12.4,0.7c0.7-1.8-0.9-3.9,1-4.9       c1.8-1,2.5,1.1,3.5,2c1.7,1.5,3,1.5,3.8-0.7c0.6-1.6,1.7-2.5,3-1.9c4.6,2.2,6.9-1.4,9.9-3.4c0.9-0.6,2-2.1,2.8-0.3       c0.8,1.6-1.2,0.9-1.8,1.4c-0.6,0.5-1.7,0.8-0.9,1.8c0.6,0.8,1.6,1.3,2.7,0.7c3-1.8,6-3.7,9.3-5.7c0,3.1-0.1,5.6-4.2,5.6       c-1.3,0-2.7,0.6-3.2,2c-0.2,0.5,0,1.6,0.4,1.8c1.6,0.9,0.8-0.6,1-1.1c0.3-1,1-0.8,1.5-0.5c1.8,1.1,1.5,2.8,0.8,4.5       c3-0.2,1.4-2.7,2.5-4c1.3,1.7,1.8,4.3,5.5,3.8c-3.5-3.1-3.7-5.5,0.9-6.8c1.5-0.4,2.2-1.3,1.6-3c-0.4-1.2-1.6-2.9,1.1-3.4       c2.1-0.4,5.5,1.3,6.5,1.6c1.8,0.6,2,1.7,2.3,3c1-0.7,0.2-2.2,1.8-2.7c0.3,2,0.7,3.9,1,5.7c2.4,1.1,3.6-4.9,6.2,0.2       c0.2-3.3-0.9-4.9-2.7-6.3c-0.7-0.5-0.9-1.4-0.3-2.2c0.1-0.2,0.6-0.3,0.8-0.3c3.8,0.5,4.5-0.5,3.8-5.5c0-0.3,0-0.5,0-0.8       c2.1,2,2.1,2,1.1,6.6c1.4-0.1,1.5-1.3,1.7-2.3c0.3-1.1,0.2-2.6,1.9-2.3c1.5,0.2,3.4,0.7,3.6,2.2c0.4,2.4-1.9,0.4-2.2,0.9       c-0.8,1.3-1.5,3.2-0.6,4.4c1.3,1.8,2.1-0.3,3-1.1c2.1-2,2-2,3.2,0.5c0.9,1.9,3.1,2.5,4.3,4.5c3.1,5.1,2.3,11.2,4.8,16.3       c4.2,2.6,3.3,6.5,2.7,10.3c-0.8,1.3-1.7,0.9-2.5,0.1c-1.2-1.4-3-2.3-4.1-3.8c-0.2-3.9-5.2-5.6-4.1-10.1c-1.7,2.3,0,6.5-4.4,6.4       c-4.5-0.1-3.4-3.8-4-6.7c-0.9,3.2-2.9,4.9-6.2,4.6c-3-1.5-5.5,0.4-8.2,1.4c-4.1,2-8.5,1-12.8,1.1c-1.1,0-1.6-0.1-2.6,1.2       c-1.7,2.2-4.5,4.5-8.3,3.7c-1-0.2-2.8-0.5-3.1-0.7c-4.6-2.2-7.8,3.1-12.2,1.9c-4.4-1.2-9.1,1.6-13.6-0.3       c-0.9-0.4-2-0.4-2.9,0.2c-3.1,2.2-6,1.1-8.8-0.7c-0.9-0.1-1.7-3.8-2.8-0.2c-2.3,1-4.7,1.9-6.9,3.1c-8.1,1.4-16.3,2-24.5,2.6       c-0.7,0,0.1,0.2-0.5,0c-10-3.9-20.1,1.8-30.1-0.3c-1.5-0.3-2.9,0.8-4.3,0.9c-2.9,0.3-6.1,2.3-8.7-1c-0.5-0.7-1.7-0.7-2.3-0.3       c-5.8,3.7-12.3,1.4-18.4,2.6c-2.5,0.5-2.3-2.8-4.3-2.6c-2.3-0.8-7,2.7-6.1-3.6c0.1-0.9-0.7-0.1-1-0.1c-2.4-0.1-2.3-1.6-1.8-3.4       c-1.1,0.8-0.9,1.8-0.8,2.8c0.2,1.4,1.1,3.1-0.6,4c-1.7,0.9-2.4-0.8-3.6-1.5c-1.8-1-4.2-1.2-6.2-1.3c-2.6-0.1-2.2-1.9-2.7-3.2       c0.7-1.7-3.2-1.4-1.6-3.3c1.2-1.5,3.4-1.3,5.1-1.3c2.1,0-0.3,2,1.2,2.8c3.1-3.8,7.6-3.7,12-3c4.6,0.8,8.9,1.2,12.5-2.7       c1.2-1.2,3.1-2,5.8-0.9c-2.5,0.8-4.6,1.5-5.6,4c2-0.1,3.4-2.1,5.8-0.5c1.6,1.1,4-0.5,5.4-2.5c0.6-0.8,1.1-1.8,2.3-1.3       c1.2,0.4,1,1.6,1,2.5c0,3,0.2,5.5,3.9,2.5c1.5-1.3,1,0.5,1.4,0.8c1.3,1.4,2.8,0.9,3.1-0.5c1-4.1,2.6-1.6,4.8-1.2       c3.2,0.6,6.4,1.8,9.8,1.6c1-1.7,3.2-1.5,4.8-3c-2.2-1.9-4-3.1-7.1-1.5c-0.8,0.5-2.9,2.8-4.2,0.7c-1.1-1.9-3.2-4-0.9-6.6       c1.4,3.4,4.2,4,7.2,1.6c3.3-2.7,8.6-1.7,10.5,2.1c-1,1-2.6-1.1-3.5,0.6c-0.2,0.3-0.1,1,0.1,1.3c1.2,1.2,2.4,0.1,3.7,0.1       c2-0.1,2-2.5,3.6-2.9C740.6,469.8,739.3,472,741,473L741,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1624"),
                d:
                  "M658,479c2.2,2.2,4.7,3.5,7.7,1.9c2.4-1.3,2.7,0.5,2.7,1.9c0,1.2-0.1,1.9,1.4,1.6       c2-0.3,0.6-1.4,0.5-2.1c-0.8-3.6,0-5.9,4.3-5.5c0.5,1.9-2.3,1.9-1.9,3.7c2.4,1.3,3.1-1.4,5-1.9c0.5,2.4-3.2,3-2.3,5.5       c1.9-1,3.9,1.8,5.8-0.1c2.2,2.6,2.3,3.8-1.7,4.9c-3.2,0.9-6.1,2.2-9.5,1.1c-7.8,0.1-14.9,2.3-21.3,6.9c-0.3,0.3-0.6,0.6-1,0.9       c-2,1.5-4.2,0.4-6.3,0.6c-1.5,0.1-3.2,3.4-4.3-0.4c0-3.3,0-6.7,0-10c3.8-4.6,5.6-5.1,10.3-2.5c2.4,1.3,4.5,2.6,5.3-1.7       c0.4-1.9,1.7-4,4.4-3.8C657.3,479.7,657.7,479.3,658,479z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M657,480c-1.5,1.5-3.8,2.8-3.8,5.1c0,4.9-4.1,3.7-5.2,2.5c-4.2-4.7-7.5-1.4-11.1,0.5       c-2.8,0-5.8-0.7-7.5,3c1-0.1,1.9-0.2,2.9-0.3c-2.5,6.4-7.3,7.8-11.4,3.3c-0.9-3,4.4,0.9,2.7-2.2c-1.1-2-4.2-1.8-6.4-2.3       c-1.1-0.3-2.5,0.9-4-0.5c4.6-2.5,9.5,0.5,14.1-0.7c-0.8-2.2-2.7-0.6-3.8-2.2c3.2-4.1,8.4-0.7,13.1-3.4c-3.6-0.1-5.9-1-7.7-2.7       l0,0c2.5-1.4,4.8-1.5,7.5,0c3.3,1.9,6.6-1.7,7-3.1c1.2-4.2,3.4-2.2,5.5-1.9C652.5,475.4,655.5,476.5,657,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("511115"),
                d:
                  "M880.9,483.1c0.2-3.8,0.2-7.6-1.9-11.1c0.3-5.7-1.7-11.3-1-17c2-2.5,0.5-5.4,1-8c2.7,0.3,2,2.6,2.3,4.1       c0.6,2.4,0.3,4.9,0.7,7.3c1.2,8.8,1.9,17.7,2.9,26.6c0.5,2.4,0.3,5,1.1,7.4c0.5,6.6,1,13.1,2.1,19.6c0.8,9.6,2,19.1,3.2,28.6       c0,1.8,0,3.5-0.4,5.3c-1.4,2.9,0.5,6.6-2.1,9.2c-2.6-0.8-2.1-3-2.3-4.9c-0.3-3.9,0.4-7.9-0.5-11.8c-0.6-2.4-0.2-5-1-7.4       c-1.2-6.6-1.3-13.3-2.2-20c-0.2-2.4-0.7-4.7-1.1-7.1c-0.1-2.9-0.4-5.8-1-8.7c-0.1-2.3-0.5-4.6-0.9-6.8       C879.6,486.6,878.6,484.5,880.9,483.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M741,473c-0.2-2.3,0.5-4.6-0.5-6.8c-0.7-1.6,0.4-1.4,1.3-1.7c1.5-0.5,1.7,0.2,1.6,1.4       c-0.2,3,0.3,4.4,3.2,1.6c0.8-0.8,2.2-0.5,2,0.9c-0.2,1.2,1.2,3.2-1.3,3.6C745.2,472.3,743.1,472.6,741,473L741,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M696.8,469.8c0,0.1-0.1,0.8-0.9,0.9c-0.7,0.1-1.5,0.1-1.2-0.8c0.2-0.6-0.4-1.7,0.7-1.8       C696.1,468.1,696.7,468.5,696.8,469.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M673,470c-0.8,1.3-1.6,2.5-3.6,1.3C670.1,469.3,671.8,470.3,673,470L673,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M692.5,467.3c-0.1-1.1,0.6-1.2,1.2-1.2c0.6-0.1,1.4-0.3,1.5,0.6c0.1,0.5,0.3,1.4-0.7,1.3       C693.8,468,692.9,468,692.5,467.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M687.5,468.9c-0.7-0.2-1-0.5-0.7-1c0.2-0.3,0.8-0.6,1.1-0.5c0.2,0,0.4,0.6,0.6,1       C688.2,468.6,687.8,468.8,687.5,468.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631222"),
                d:
                  "M538.2,403.1c3.5-2.7,6.7-2.3,10.1-3.4C545.7,402.1,545.7,402.1,538.2,403.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631222"),
                d:
                  "M525.9,409.7c-0.7,2.5-1,4.1-2.4,5.1c-0.5,0.4-1.3-0.3-1.3-1C522.1,411.6,523.5,410.9,525.9,409.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631222"),
                d:
                  "M529,406.7c-0.4,1.1-0.7,1.9-1.7,1.6c-0.7-0.2-1.2-0.8-0.8-1.5c0.3-0.4,1-0.6,1.6-0.8       C528.8,405.8,529.3,406.1,529,406.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M556.3,394.3c0.8-0.4,1.2-0.7,1.5-0.7c0.6,0.1,1.4,0.2,1.3,1.1c0,0.1-0.9,0.3-1.3,0.3       C557.4,394.9,557,394.6,556.3,394.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101E"),
                d:
                  "M585.7,391.9c-0.3,0.3-0.7,0.7-0.7,0.6c-0.3-0.3-0.8-0.6-0.9-0.9c-0.1-0.5,0.1-1.1,0.8-0.8       C585.3,391,585.5,391.5,585.7,391.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M629,480c-1,1.2-2.2,1.4-3.3,0.4c-0.5-0.4-0.3-1.2,0.3-1.6C627.6,477.4,628,479.6,629,480       C629,480,629,480,629,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671321"),
                d:
                  "M625,378c-7.2,2.2-14.6,2.4-22,3c-9.5,0.9-19.1,0.7-28.4,2.7c-2.2,0.5-3.9-0.2-5.5-1.4       c1.3-2.6,4.3-2.9,6.4-4.4c4-2,7-5.6,11.4-7c10.4-1,20.7-1.9,31.1-2.3C626.3,368.2,627.6,369.9,625,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B35264"),
                d:
                  "M576,378.9c-2.3,1.1-4.6,2.2-6.9,3.3c-2.4,0.8-4.8,1.7-7.1,2.5c-0.7-0.3-1.3-0.7-1-1.6       c4.4-2.7,8.9-4.9,14-5.8C575.6,377.6,576.2,378,576,378.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD6574"),
                d:
                  "M560.8,383.9c0.4,0.3,0.7,0.6,1.1,1c-4.3,1.1-8.6,2.2-12.9,3.3c0,0,0-0.4,0-0.4c-1-0.5-2.8,0.7-3.2-1.3       c1.8-2.6,5-1.2,7.2-2.3C555.6,383.8,558.2,382,560.8,383.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43745"),
                d:
                  "M1382,582c-1.4,1.8-0.1,2.9,1,4c-0.2,7.7-0.8,8.3-8.3,5.8c-0.7-0.2-6.5,1.1-2.4-3.4       c0.8-0.9-0.6-1.2-1.3-1.5c-2.2-1-4.9-1.7-6.7-0.6c-2.2,1.4-2.8-0.4-3.9-1.1c-1.6,1.2,0.7,3.1-1.3,4.1c0,0-0.6,0-0.6-0.1       c-0.9-3.3-2.5-4.3-5.7-2.1c-2.3,1.5-4.8,2.5-7.6-0.1c-2.4-2.2-5.8-0.8-8.7-0.9c-2.8-0.2-5.6,0-8.4,0c-0.7-1.4,0.5-1.9,1-2.7       c0.4-0.6,0.8-1.2,0.3-1.8c-0.7-0.8-1.8-0.6-2.2,0c-3,4.6-7.4,2.6-11.3,2.6c-2,0-3.8,1.5-5.9,0.6c0.2-1.3,2.6-0.7,2.1-2.1       c-0.4-1.3-2-0.4-3.1-0.6c-0.6-2.5,3.5-1.4,2.9-3.9c0.8-0.8,1.7-0.5,2.6-0.6c3.5,0,6.9-1.3,10.4-1c8.9,0.4,17.8,1.1,26.6,1.7       c4,0.3,7.2,1.4,10.7,2.7c0.5,0.1,0.9,0.2,1.3,0.4c3.7,0.7,7.6,1.1,11,3c1.6,0.9,3.2,0.9,4.3-1       C1379.6,582.2,1380.3,580.8,1382,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62F3D"),
                d:
                  "M1303,584c-1.3,0-2,0.7-2,2c-3.1,2.6-7,0.6-10.3,1.8c-0.5,0.1-1.1,0.2-1.6,0.3c-4-0.2-7.9-1-11.9-0.7       c-29.6-2.6-59.1-6.9-88.7-9.3c-3.8-0.9-7.8-0.6-11.5-2c-2.8-0.8-5.6-1.4-8.5-1.7c-1.8-0.2-3.6-0.4-4-2.7c0.5-3.2,2.9-2.5,5-2.4       c7.1,0.5,14.1,2.1,21.2,2.9c5,0.6,9.9,0.6,14.9,0.6c8.5,0.1,16.5,3.2,24.9,3.9c8.5,0.7,17.1,2.2,25.6,2.8       c6.7,0.5,13.3,3.6,20.2,2c0.5-0.1,1-0.1,1.5-0.1c6.7,2.2,13.5,3.3,20.4,0.9c1-0.2,2-0.3,3.1-0.2       C1302.1,582.3,1303.3,582.5,1303,584z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912D3B"),
                d:
                  "M1290,587c3.5-2.1,7.4-0.5,11-1c7.8,0.6,15.9,0,23.3,2.1c8.9,2.6,18.1,2.6,26.9,5.1       c0.9,0.3,2.2,0.9,2.8,0.5c5.2-2.7,3,1.3,3,3.2c-6.1,1.7-11.5-1.8-17.3-2.1c-8.6-0.5-17-3.4-25.8-2.6c-1.7,0-3.4,0-5-0.3       c-0.5-0.1-0.9-0.2-1.4-0.4c-2.6-1.6-5.6-1.2-8.4-1.5c-0.5-0.1-1-0.2-1.5-0.3C1295.1,588.8,1291.8,589.8,1290,587z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("892837"),
                d:
                  "M1314,591c14.6-0.1,28.8,3.1,43,6c0.3,0,0.6,0,1,0c2.5,0,5,0.3,7,2c-2.7,0.9-5.3-0.5-8,0       c-4.5,1.7-8.8-0.3-13.1-1c-4.6-0.8-9.1-1.7-13.7-1.9c-2.2-0.6-4.4-1.4-6.7-1.5C1320.3,593.4,1316.1,594.9,1314,591z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62F3D"),
                d:
                  "M1312,579c1.3,0.2,1.9,0.7,0.5,1.6c-1,0.7-2.7,0-3.5,1.4c-0.9,2-3.1-1-4,1c-1.9,0.1-1.5-1-1.2-2.2       C1306.3,579.4,1308.7,577.1,1312,579z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43745"),
                d:
                  "M1304,581c0,0.8,0.2,1.6,1,2c0.5,0.8,0.9,1.6,1.5,2.6c-1.7,0.3-2.6-0.6-3.5-1.6c-0.4-0.8-1.2-1-2-1       C1301,580.8,1302.3,580.6,1304,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82181F"),
                d:
                  "M1364,613c-5.5,1.8-11.5,0.1-17,2c-1.3,0-2.7,0-4,0c-1.3,0.9-2.7,0.8-4,0c-0.6,0-1.3,0-1.9,0       c-1.4-0.8-2.9-0.5-4.4-0.4c-16.3,0.7-32.5-1.6-48.8-1c-0.7,0-1.3-0.1-1.9-0.5c-3.3,0-6.5-0.1-9.8-0.1c-7.1-1-14.2-0.3-21.3,0.5       c-13.7-1-27.5-1.7-41.2-2c-2.3,0-4.7,0.5-6.6-1.3c-0.7-1.7,0.7-2,1.6-2.7c1.9-0.8,3.8-0.7,5.8-0.3c2.2,0.7,4.4,0.8,6.7,0.1       c3.7,0.2,7.5-0.9,11.2,0.2c0.8,0.1,0.5,2.5,2.2,1.1c0.9-0.8,2-1.2,3.2-1c4.9,1.5,9.8,1.2,14.8,1.2c15.4,0,30.8,0,46.2,0       c4.7,0.1,9.4-0.1,14.2,0c16.8,0.3,33.5,1.4,50.3,1.9c1.7,0.1,3.3,0.3,4.7,1.5C1364,612.3,1364,612.6,1364,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93441"),
                d:
                  "M1253,623c-2.7-1.3-5.3-2.7-8-4c-0.6,0.4-1.2,0.5-1.8,0.2c-1.3-0.6-3.2-1.2-3.1-2.7       c0.1-1.7,2.1-1.7,3.5-1.9c0.6-0.1,1.3-0.1,1.9-0.1c4.9-0.2,9.7,0,14.5,1.4c6.7,0.3,13.3,0.7,20,1c1.3-0.9,2.7-0.9,4,0       c16.3,0.7,32.6,1.4,49,2c0.3,0.2,0.5,0.4,0.4,0.6c-0.1,0.2-0.2,0.3-0.3,0.3c-20.1,0-40.3,0.2-60.4-0.1       c-4.4-0.1-8.9,0.5-13.3-1.6c-1.6-0.8-3.9-0.7-5.8,0.4c0.4,2.4,3.1,0.5,3.9,2.5C1256.6,622.9,1253.9,621.2,1253,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1282,613c17.4,0.4,34.9,0.7,52.3,1.1c1,0,2,0.1,2.8,0.9c-17.5,0.8-34.9-1.3-52.4-1       C1283.7,614,1282.7,613.9,1282,613z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1260,616c-5,0-10,0-15,0c-0.3-0.4-0.3-0.8,0-1.2c1.1-0.9,2.5-1,3.8-0.9c1.5,0.1,2.1-0.6,2.2-1.9       c7.1,0.4,14.2-0.9,21.2,0.9c-5.2,0-10.4,0-15.8,0C1257,615.7,1259.4,614.4,1260,616z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1333,620c0-0.3,0-0.6-0.1-1c6.3,0.5,12.8-1.2,19,1c-3.7,0-7.3,0-11,0C1338.3,620,1335.7,620,1333,620z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1373,621c-4-0.5-8.1,1.1-12-1C1365,620.5,1369.1,618.9,1373,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1284,617c-1.3,0-2.7,0-4,0C1281.3,614.6,1282.7,614.6,1284,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB404B"),
                d:
                  "M1339,615c1.3,0,2.7,0,4,0C1341.7,617.6,1340.3,616.4,1339,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1422"),
                d:
                  "M1364,612c-18.4,0.3-36.6-1.8-55-2c-0.6-0.6-0.5-1.3-0.1-2c6.5-0.6,11.4-3.9,15.9-8.5       c2.7-2.8,4.6-2.4,9.5-1.1c-1.6-1.4-5,0.6-5.7-2.9c0.1-0.2,0.3-0.4,0.4-0.6c9.6-0.5,18.7,2.7,28,4c3.8,1.4,7.9,2,11.2,4.6       c0.9,0.7,2.1,1.2,1.5,2.7c-1,2.3-1.5,0.4-2.1-0.3C1367.2,608.4,1363.9,609.2,1364,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3746"),
                d:
                  "M1363.1,581.8c-2.4,0.1-4.9,0.4-6.1-2.3c-0.2-0.4-0.7-1.1-0.8-1.1c-7,3.6-13.8-0.7-20.8-0.5       c-3.5,0.1-7,0-10.5,0c-0.6-1.4-2-1.9-3-3c4.2-2,8.5-3.8,13-5c6.9-2.5,14.1-3,21.3-2.3c2.9,0.3,4.7-0.1,5.9-2.9       c0.9-2,2.8-3.9,4.8-4.1c3.2-0.4,4-2.5,5-4.8c4.3-3,10.3-2.6,14-7c-4.6,10.6-2.9,21.9-4,33c-0.2,0-0.4,0-0.5,0.1       c-2.5,6-6.3,4.6-10.5,2C1368.6,582.6,1365.4,583.7,1363.1,581.8c0.5-0.7,1.7-0.3,2.4-0.8       C1364.7,581.3,1363.6,581.1,1363.1,581.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1384,525c0,2.2-0.4,4.4,0.1,6.5c1,5-2.3,9.1-2.4,13.8c0,0.8-1,2.3-1.5,2.3c-6.5-0.2-10.6,5.2-16.3,7.1       c-3.5,1.1-4.4-1.1-6.3-2.3c-0.8,6.5-5.1,8.4-13.3,9.1c-5.4,0.4-11.2,2.4-15.2,7c-0.5,0.6-0.9,1.7-1.7,1.5       c-4.4-1.4-8.3,3.1-12.9,1c-3.3-1.5-1.9,1.8-2.3,3.2c-1.9,1.6-5.2,0.9-6.2,4.2c-0.3,1.1-2.1,1.3-3.4,0.2       c-4.4-4.1-9.6-4.1-15.2-3.4c-5.2,0.6-10.6,1.6-15.1-3.1c-1.7-1.8-5.2-0.2-7.7-0.8c-2.9-0.7-4.8,0.1-5.3,3.1       c-1.9-0.6-2.3-1.8-2.7-2.8c-0.8-2-2.1-2.2-3.9-1.4c-3.8,1.6-7.5,2.6-9-3.1c-0.4-1.6-1.9-1.5-3.4-1.1c-4.9,1.3-7-0.1-7.7-5.4       c-4.8,2.2-9.6,4.1-14.7,5.1c-3.6,0.7-5.1-0.3-4.8-4c0.1-0.7-0.1-1.3,0-2c0.5-3.8-0.7-5.1-4.3-2.8c-0.5,0.3-1.3,0.1-1.9,0.5       c2.2-0.3,4,0.4,5.3,2.1c0.9,1.2,0.8,2.5,0.2,3.8c-0.6,1.2-1.6,1.6-2.9,1.4c-4.4-0.8-9.5,1.3-13.3-2.7c-0.2-0.2-0.6-0.1-1-0.1       c-1.6,0-3.8,2.3-4.5-0.7c-0.7-2.8,0.6-5.2,3.4-6.4c0.4-0.2,1,0.1,1-0.7c-1.3-0.4-2,0.9-3,1.3c-1.5,0.7-2.2,4-4.1,2.4       c-1.9-1.6-3.4-4.2-2.1-7.1c0.3-0.6,0.6-1.2,0.9-1.7c-0.7,1.2-1.5,2.3-1.8,3.7c-0.6,2.5-2.4,2.9-4.1,1.5       c-1.8-1.5-2.5-0.8-3.9,0.4c-3,2.7-8.4,2.6-11.5,0.2c-1.2-0.9-1.5-2.2-1.1-3.6c0.4-1.4,1.4-2.3,3-2c0.5,0.1,1,0.3,1.5,0.3       c2,0.1,4.8,2.2,5.5-0.8c0.6-2.6,2.4-6.5-2.4-7.9c-1.3-0.4-2.5-1.1-2-2.9c4.1-3.6,9.2-4.8,14.4-5.7c4.5,0.7,8.6,0.1,12.1-3.1       c0.4-0.3,0.8-0.5,1.3-0.5c5.4,1.1,10.8,1.6,15.6-1.9c2-1.5,4.9,0.1,6-1c1.3-1.3,0.9-4.2,3.9-4.1c3.2,1,6.6,1.8,6.4,6.3       c0,0.7,0.5,1.7,1,1.5c4.1-1.1,7,3.9,11.3,2c1.5-0.7,3.3-0.3,4.8,0.6c1.4,0.7,2.8,1.2,4.3,0.7c4.9-1.4,10.2-0.5,15-2.6       c0.8-0.3,1.6-0.8,2.4-0.6c7.1,2,13-1.3,19.1-4c2.9-1.2,4.4-0.8,4.7,1.5c-0.3-0.6-0.4-2.1,0-3.4c0.9-2.5,3.2-3.3,4.5-1.3       c2.9,4.4,5.9,2,8.5,0.6c7.3-4,15.1-3.2,20.5,2.7c1.1,1.1,2.2,1.4,3.5,1.5c2.9,0.3,4,2,3.7,4.9c0.7-2.4,1.8-4.8,4.3-4.1       c4.2,1,1.4,4.8,2.2,6.8c0,1.1,0.9,0.4,0.3,0.6c-0.1,0-0.2-0.1-0.2-0.4c-0.3-2.7,1.1-5.5-0.8-8.2c-0.6-0.9,0.5-2.1,1.5-2       c3.4,0.4,6.4-1.8,9.8-1.3c1.3,0.2,2.6,0.4,4,0c4.5-1.2,4.8-1,5.5,4c2.1-2.3,5-2.4,7.7-3c2.9-0.7,4.8-2.1,5-5.3       c1.1-2,2.3-3.1,3.9-0.4c0.6,1.1,1.4,2.2,2.7,1.5c4.1-2.3,4.5,0.1,4.4,3.3C1383.1,524,1383.5,524.5,1384,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1170,538c0.2,0.3,0.3,0.7,0.5,0.8c6.5,3,6.8,3.6,5.5,10.9c-0.2,1.4-0.6,2.3-2.2,1.6       c-2-0.8-4.4,0.2-6.2-1.3c-1-0.9-1.9-0.4-2.3,0.8c-0.4,1.1-0.4,2.3,1,3c5,2.7,8.4,1.8,11.7-3.1c0.3-0.4,0.7-0.6,1.5-1.2       c0.8,1.8,1.5,5,3.2,4c2.4-1.5,3.3-4.8,3.3-9c3.6,4.3-2.3,9.7,3,12.5c-0.2-3.1,3.7-2.4,4.9-4.8c0.6-1.1,1.8-0.3,2.6,0.3       c0.9,0.7,0.8,1.8,0.7,2.8c-0.2,1.9-1.3,0.4-2,0.5c-3.6,0.3-3.1,3.3-3.6,6.1c3.9-5.1,6.5-0.4,9.2,0.9c2,0.9,3.3,2.3,4.7-0.6       c0.7-1.4,1.9-1.2,2.9-0.3c1.1,1,2.2,3.4,3.6,0.5c1-2.1-0.9-3.4-2.6-4.1c-1.8-0.6-4,0.1-5.6-2.3c2.9-0.2,5.6,0.2,7.7-2.2       c1.3-1.5,2.6-0.4,3,1.5c0.5,2.2,0.2,4.4-0.6,6.3c-1.3,3.1,1.4,3.5,2.3,2.8c2.9-2,7.1,0.9,9.7-3c0.9-1.4,4.1-1.4,6.1-2.8       c1.4-1,3.2,1.2,3.5,2.6c0.6,3.7,0.8,3.7,4.5,3c2.1-0.4,5.4-1.5,5.4,2.8c0,3.9,3.1,3.7,4.8,2.6c4.8-3,7.6-2.2,8.8,4       c-0.3-4.5,1.2-5,4.8-3.8c2.4,0.8,5.3,0.1,7.9,0.2c1.4,0.1,3.4-0.9,3.2,2.3c-0.1,1.7,3.4,0.3,4.2,2.3c3.8-2.1,8.4-1.1,12.3-1.5       c3.1-0.3,9.4-1.4,11.8,4c0.9,1.9,2.4,1,2.5,0.3c0.2-5.2,4.1-3.1,6.6-3.5c0.8,0.9-1.6,4,2,3c0.3,0.2,0.4,0.4,0.3,0.7       c-0.1,0.2-0.2,0.3-0.3,0.3c-0.8,0-1.6,0.2-2,1c-2.9-0.4-5.1,2.4-8,2c-1,0.7-2,1.3-3,2c-1,0-2,0-3,0c-0.5,0.5-1.2,0.5-1.9,0.5       c-1.9,0-2.7-1.5-3.8-2.7c-1.7,3.3-4,1.1-6,0.7c-2.5-0.4-5,0.1-7.5,0c-0.7,0-1.3,0-1.8,0.5c-3.6-2.5-7.8-2.4-11.9-2.8       c-12.9-1.3-25.8-3-38.7-4.9c-8.6-1.2-17.5-1.9-26.3-1.3c-1.3,0.1-2.5,0.6-3.8-0.3c-4.7-3.3-10.2-1.9-15.4-2.2       c-2-0.1-4.2,0.4-5.9-0.4c-4.8-2.4-10.5-1.4-15.1-4.2c-1.8-1.1-4.2-0.6-6.4-0.6c-1.5,0-3.1,0.6-4.5,0.1       c-6.7-2.5-13.4-0.5-20.2-0.6c-3.9-0.1-8,0.1-10.2-4.2c-0.7-1.4-2.3-1.1-3.6-0.9c-1.6,0.2-3.6,0.9-4.3-1.3       c-0.6-1.8,1.4-2.4,2.5-3.3c1.5-1,3.2-1.6,4.9-2.1c9-2.3,17.6-5.7,26.3-9c3.4-1.3,6.9-2.2,10.4-3.2c3.2-0.7,6.3-1.3,9.3-2.7       C1165.9,537,1168.1,536.2,1170,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1384,525c-3.2-0.5-1.4-3.2-2.2-4.8c-2.6,0.6-6.2,5.2-6.8-1.8c-0.1-0.7-0.5-0.8-1-0.5       c-0.4,0.2-0.6,0.7-0.9,1.1c-2.2-1.3-4,1.7-6.2,0.7c-2.6,5.4-6.3,2.3-9.4,0.9c-1.5-0.7-2.1-2-2.8,0.5c-0.4,1.3-2.1,2-2.6,0.9       c-1.1-2.5-3.7-2.5-5.2-4.1c-1.1-1.2-1.8-2.2-1.3-3.9c-1.2,1.5-1.9,2.9-3.5,3.7c-0.7,0.4-2,1.2-2.2,0.8       c-2.1-4.4-5.1-0.9-7.7-1.2c-1.3-0.2-2-0.5-2.8,0.9c-1,1.7-2.4,1.4-3.8,0.2c-2.4-1.9-4.7-3.8-6.2,1c-0.6,1.8-2,0.7-2.8,0.1       c-2.5-1.8-5.1-2.2-7.9-0.7c-0.4,0.2-1.1,0.5-1.4,0.3c-4.2-2.6-8.6-1.8-13.3-1.3c-3,0.3-6.3-2.4-8.9,1.2       c-0.2,0.3-0.6,0.3-0.9,0.1c-3.5-3.3-4.6,0.9-6.3,2.3c-2.8-1.4-1.1-3.9-2.2-5.7c-5.6,2.3-10.7,1-15.2-2.7       c-0.7-1.5-0.7-3.1-0.4-4.7c0.1-0.5,0.4-1,0.7-1.5c1.7-1.6,3.8-1.9,6-2c3.6-0.4,7.8,1.5,10.6-2.6c0.4-0.3,0.8-0.5,1.2-0.6       c1.9,0.7,4-0.6,5.8,0.6c0.7,1.2,0.6,3,2.9,2.6c4.7-0.7,9.5-0.7,14.2-0.8c3-0.1,6.1,0.4,9.1,0.7c5.7,0.5,11.2-0.2,16.8-1.1       c1.3-0.2,2.7,0.2,3.9,0.8c3,1.4,5.9,2.7,8.4-0.7c0.4-0.6,1.4-0.9,1.7-0.3c2.9,4.8,8.8,0.3,12,4.1c0.4,0.4,1.4,0.4,1.9,0.1       c5.4-2.8,12,0.4,17.3-3.3c0.3-0.2,0.8-0.3,0.9-0.2c4.8,4.4,6.5-0.4,9-3.3c3.7,4.1,0.8,9.2,2.5,13.4c0,0,0,0,0,0       C1385.3,517.7,1384.8,521.4,1384,525z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC3642"),
                d:
                  "M1372,556c0.5,2-0.6,4.1,1.2,6.3c-4.8-3.6-8.9,0.3-9.5,2.6c-1.6,6.3-6.2,4.5-9.6,4.3       c-4.1-0.3-8.2-0.9-12.3,0c-2.3,0.5-4.5,0.7-6.9,0.7C1347,564.6,1359.3,559.8,1372,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62F3D"),
                d:
                  "M1314,578c0-0.3,0-0.7,0-1c2.7-0.7,5.3-1.3,8-2c1.9,0.1,2.9,1.1,3,3       C1321.3,576.8,1317.7,578.7,1314,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1C29"),
                d:
                  "M1340,475c2.7,2.1,6.3-0.3,9,2c-1.7,0.3-3.4,0.8-5.2,1c-1.7,0.2-1.1,1.2-0.8,2c-1.9,4.3-6.2,2.9-9.5,4       c-2.5-2.6-5-1.6-8-0.6c-3.5,1.1-7.6-1.2-11.2,1.2c-1.7,0.6-3.7,1.8-5.2,0.6c-4.5-3.4-9.2-1.9-13.7-0.6c-2.4,0.7-4.4,0.8-6.5-1       c-1.4-1.3-3.2-1.8-4.9-0.2c-1.1,1.1-2.4,1.3-3.7,0.8c-3.7-1.5-8-1.1-11.2-0.1c-7,2.1-13.9,0.2-20.7,1c-3.6,0.4-7.1-0.3-7.4-5.1       c4.2-3,9.1-2.8,13.8-3.2c0.7-0.1,1.3-0.1,1.7,0.5c3,4.6,2.4-0.7,3.5-1.3c6.8-0.8,13.6-0.7,20.2,1.4c2.9,0.9,0.8-2.1,1.4-2.6       c5.4,1.9,10.7,2.1,16.1,1.8c4.1-0.2,7.9-2.4,12.2-0.9c0.8,0.3,1.9-0.9,2.8-0.1c1.7,1.4-0.9,1.2-0.8,2c0,0.2,0.8,0.5,1.1,0.4       c8.6-2.5,17.4-1.6,26.1-2.3C1339.5,475.6,1339.8,475.2,1340,475z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1D2B"),
                d:
                  "M1384,477c-0.3,2.4,0.4,4.7,1,7c-6.5,4.7-13.6,5.1-21.4,4.3c-3.7-0.4-7.6,0.1-11.5-0.9       c-3.3-0.8-4.8-2.2-3.3-5.5c2.5-1.6,5.3-2.8,8.2-3.8C1366.1,479.2,1375,477,1384,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("982332"),
                d:
                  "M1357,478c-1.9,2.8-4.8,3.8-8,4c-1.4,3.3-4.6,2.9-7.2,3.9c-0.6,0.3-1.3,0.6-1.9,0.9       c-2.2,0.7-4.6,0.2-6.6,1.6c-0.5,0.1-0.9,0.2-1.4,0.1c-1.6-0.9-3.7-0.9-5-2.6c0.9-3.4,4.2-1.7,6.2-2.8c3.3-1.3,7.1-0.6,10-3       c3.8,0.3,7-2.3,10.8-2.5C1355,477.4,1356,477.6,1357,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF303D"),
                d:
                  "M1385,514c-2-3.8-0.6-8.1-2.7-12.5c0.2,4.2-3.5,4.4-5.4,6.4c-0.5,0.6-1.7,0.8-1.8-0.5       c-0.3-4.5-2.8-1.7-4.2-1.1c-2.8,1.1-6.5,1.4-11.6,0.3c-0.9-0.2-0.9,0.7-1.4,1c-2.3,1.3-4.9,3-7-0.2c-0.9-1.3-1.7-1.3-2.9-0.7       c-3.3,1.6-6,1.6-6.8-3.1c-2.1,3.7-5.5,4.5-9,2.5c-3-1.7-6-2.8-7.9,1.7c-1.9-1.9-3.2-5.9-5.8-1.1c-0.7,1.4-1.5,0-2.4-0.1       c-3-0.4-6.1-1.8-9.2-0.4c-1.2,0.5-2.4,1-3.4-0.6c-0.9-1.4-1.9-1.8-2.8,0.2c-0.6,1.2-1.9,2.5-2.2-0.4c0-0.4-0.5-0.7-0.8-1       c-2.8,3.5-6.7,0.1-9.9,1.5c-3.9,1.7-4.8-0.3-3.9-3.8c2.6-1.7,5.5-2.6,8.5-3.2c3.3-0.1,6.6,0,9.9,0c2.4,0,4.4-0.5,6.4-1.9       c3.4-2.3,7.5-1.7,11.4-2c1.4-0.1,2.9,0.4,4.2-0.7c0.3-0.3,0.7-0.4,1.1-0.5c1,0.2,2,0.3,2.8-0.6c4.3-2.5,8.7-0.8,12.7,0.5       c3.5,1.1,7.4,0.5,10.7,3.2c1,0.8,5.2-1.4,8.1-1.8c2-0.3,4-1.3,5.1,1.3c0.4,0.9,1.2,1.1,2.1,1c6-0.7,12.2,1.2,18.1-1.2       c1,1.2-0.2,3.4,2,4c0,0.3,0,0.7,0,1c-0.6,0.6-0.3,1.7-0.9,2.1c-2.4,2,1,1.1,0.9,1.8c0,0.3,0,0.7,0,1       C1383,507.8,1385.9,511.4,1385,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92A36"),
                d:
                  "M1326,494c-0.3,0-0.7,0-1,0c-1.6-0.5-2.6-1.5-2.3-3.3c0.2-1.1,1.3-1.4,2.2-1.7c1.4-0.5,3.7,1.4,4.4-1.6       c0.1-0.5,1.8,0,2.7,0.6c0.3,0,0.7,0,1,0c2.3-0.3,4,0.6,5.7,2c-1-1.8-0.2-3,1.3-4c0.3-0.3,0.7-0.7,1-1c4,3.8,9.4,5.3,14.2,4.7       c3.6-0.5,7.2-0.2,10.7-0.6c2.5-0.3,4.9-0.4,7.3,0c2.9,0.6,5.7,1.5,8.3-1c0.9-0.9,1.8,0,2.4,0.9c1.4,2.2,0.9,4.6,1,7       c-1.8,4.6-6.2,2.2-9.1,2.8c-2.1,0.4-5.2-0.3-8-0.3c-0.7,0-4.9,2.5-4-2.1c0.1-0.7-0.8-1.3-1.4-0.9c-2.8,2-6.9-0.7-9.2,2.8       c-0.4,0.6-1.6,1.7-1.9,0.9c-1.7-4.4-6-2.6-8.9-3.9c-4.5-2-9.4-3-14.4-1.2C1327.3,493.9,1326.7,493.9,1326,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A32431"),
                d:
                  "M1384,489c-0.6-0.1-1.7-0.5-1.8-0.3c-2.8,5-6.3,2.4-9.8,1.1c-0.8-0.3-1.9-0.2-2.9,0       c-3.4,0.7-6.8-0.2-10.1-0.1c-1.8,0-4.4,1.9-6.7,1.2c-4.2-1.3-10,0.3-11.8-5.9c2.5-1.5,5.7-1.1,8-3c1.3,1-0.7,4.3,1.7,3.8       c3.7-0.8,6.8,4.6,10.5,0.7c0.7-0.7,1.2-1.6,2.4-0.8c5.2,3.6,10.5,1.5,15.8,0c1.9-0.5,3.5-2,5.6-1.8       C1384.1,485.5,1383.9,487.2,1384,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1387,505c-5.6-1.3,0.5-2.7,0-4C1387,502.3,1387,503.7,1387,505z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43341"),
                d:
                  "M1027,622c-7.3,1-14.7-0.5-22,0c-17.6-0.1-35.3,0.4-52.9,0.1c-18.1-0.3-36.2-0.1-54.4-0.1       c2.4-6.9,0.9-13.5,1.3-20c2-1.8,7.7-2,10-0.1c3.6,2.9,8.1,2.5,12.2,3.3c2,0.4,3.9,0.1,4.9,2.4c1.4,3.3,3.9,3.6,7,2.5       c1.6-0.6,3.7-1.9,3.9,1.4c0.1,1,0.3,0.7,0.7,0.3c3.8-4.6,8.9-2.8,13.5-2.4c3.8,0.4,6.8-0.2,9.8-2.5c1.1-0.9,2.2-2.5,3.8-1.6       c1.7,0.9,0.5,2.7,0.6,4.4c2-3.2,4.4-2.2,6.4-0.5c1.7,1.4,3.3,2,5.4,1c0.7-0.4,2.2-0.7,2.3-0.2c0.7,3.5,2.9,1.1,4.4,1.2       c3.6,0.3,5.4,2.8,6.9,5.7c0.4,0.5,0.8-0.8,0.3-0.3c-0.2,0.2-0.2,0-0.4-0.2c-1.8-2.4-0.2-3.1,1.7-3.9c3.4-1.3,7.2-1.2,10.6-2.7       c4,1,7.7,2.8,11.2,4.9c1.6,1,3.1,1.9,5.1,1.6C1022.7,616.9,1025.9,618,1027,622z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73242"),
                d:
                  "M1003,610c-1.7,3.8-6.2,0.5-8.3,3.3c-1,1.3-3.8-1.4-4,1.3c-0.1,2,3,0.7,3.9,2.9       c-2.4,0.6-4.1,0.9-5.7-1.8c-1.7-2.7-4-5.5-7.8-2.5c-0.7,0.6-0.8,0.4-1.9-2.9c-2.8,1.9-5.6,3-8.2-0.5c-0.7-1-2-0.4-3.9,0.8       c-1,0.6-1.9-0.1-2.8-0.6c-2.6-1.6,1.6-2.6,0-4.4c-1.5,0.3-2.1,2.1-3.4,2.8c-2.8,1.4-5.2,2.9-9.2,2.1       c-5.6-1.2-12.5-2.6-15.7,5.3c-2-2.4-0.1-3.8,0.6-6.3c-3.2,2.1-7.2,4.1-8.6,2c-3-4.3-6.8-4.9-11.2-5.7c-1.6-0.3-2.8-2.4-4.7-0.2       c-0.5,0.6-2.1,0.9-2.5-0.4c-2.2-5.8-7-2.7-10.7-3.2c-2.3-0.2-3.4-1.6-2.8-3.6c0.6-1.9-0.5-3.1-1-4.5c1-0.8,2.1-0.7,3.2-0.2       c1.7,2,3.8,3.1,6.5,2.9c2.9-0.2,5.6,0.6,8.3,1.3c4.5,1.3,9,1.7,13.8,1c5.2-0.8,10.5-0.5,15.8,0.9c6.3,1.7,12.9,0.1,19.4,0.5       c8.8,0.5,17.6,0.3,26.5,0.2c1.3,0,2.5,0.1,3.8,0.5C996.4,603.5,999.9,606.5,1003,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404B"),
                d:
                  "M898,594c-1-0.1-1.9-0.1-2.9-0.2c-0.1-0.7-0.1-1.3-0.2-2c0.1-0.6,0.1-1.1,0.2-1.7       c4.5-2.5,9.1-0.7,13.6-0.3c10.7,1,21.4,1.7,32.1,2.8c6,0.6,12.2-0.2,18,2.2c0.5,2.1-1.3,2.3-2.3,2c-2.2-0.7-1.3,1.4-2.1,1.9       c-1.9,1.4-4.1,1.3-6.2,0.9c-14.9-2.4-29.9-2-44.9-3.7C901.5,595.8,899.6,595.4,898,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3340"),
                d:
                  "M781,621c-2.3-1.4-4.8-0.9-7.3-1c-3.7-0.1-6.1-2.7-9-4.1c-4.6-2.3-7.8-6.6-13-8.1       c-3.2-0.9-7.8-0.9-8.7-5.8c3-0.4,5.6-1.3,6.8-4.7c0.7-2.1,2.9-2.5,5-2.4c2.1,0.2,4.3,0.1,6.4-0.2c2-0.2,3-1.2,2.8-3.3       c-0.5-4.6,0.6-7.6,6-6.8c0.3,0,0.6-0.7,1-1.1c3.2-1.2,6.7-1.3,9.9-2.6c2.4-0.9,4.4,0.6,5.7,1.8c-0.3-0.2-1-0.8-0.8-1.9       c0.6-0.5,1.3-0.7,2-0.7c1.7,0.3,3.5,0.4,5.3,0.5c0.8,0.1,1.6,0.2,2.3,0.4c4.2,1.2,8.5,1.4,12.8,1.9c4.9,0.6,9.7,1.5,14.7,1.6       c2.2,0,4.2,0.5,6.1,1.7c4.7,5.1,10.9,4.7,16.9,4.5c3.6-0.1,7.2-0.2,10.8-0.2c2,0,4,0.1,5,2.3c0.4,3.1,2.3,4.5,5.4,4.8       c2.5,0.3,4.9,0.8,7.4,1.3c1.7,0.3,2.7,1.5,2.5,3.2c-0.2,1.4-1.4,1.4-2.6,1.1c1.3,1.6,2.4,3.2,3.5,4.6c0.1-0.4,0.1,0.6,0.1,0.4       c0.4-5.7,4.9-5.1,8.6-5.8c1.5,5.2-0.4,10.3-0.7,15.4c-0.1,0.1-0.4,0.2-0.4,0.3c-1.9,9.1-8.9,7.7-15.4,7.5       c0.3-1.4,1.6-1.2,2.5-1.5c1.1-0.4,2.3-0.3,3.4-0.3c1.4-0.1,2.8-0.2,2.7-2.1c-0.1-1.9-1.5-1.9-2.9-1.9c-0.7,0-1.3,0-2,0       c-29.4,0-58.9,0-88.3,0C784.1,620,782.3,619.5,781,621z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3946"),
                d:
                  "M886,618c-2.7-5.3,1.1-10.7,0-16c2.9-2.1,2-5.8,3.5-8.5c0.7-0.8,1.5-1.3,2.5-0.5       c-0.9,9.4-1.4,18.8-4,28C887.3,620,886.7,619,886,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3945"),
                d:
                  "M1027,622c-2.5-1.9-4.6-4.6-8-5c-4.2-1.8-7.9-4.6-12.1-6.3c-1.4-0.6-2.5-1.6-3-3.1       c-0.5-1.7-1.8-2.7-2.9-3.9c-0.6-0.7-1.5-1.5-0.8-2.6c0.5-0.8,1.6-1,2.2-0.6c3.7,2.1,5.7-0.7,8.2-2.5c6.3-0.1,12.6,0.4,18.8,0.9       c7.9,0.7,15.9-0.1,23.7,1.7c4.2,0.1,8.5-0.4,12.6,0.5c0.8,0.4,1.5,0.9,1.5,1.9c-3.1,2.4-6.5-0.4-9.1,0.5       c4.6,0.7,10.2-1,14.9,0.5c7,2.3,13.7-0.5,20.3,0.8c9.6,1.9,19.6,0.4,29.1,3.2c2.6,2.9-1.2,4.3-1.8,6.6c2.6-0.1,2.2-2.9,3.8-3.7       c0.5-0.1,0.9,0.1,1.3,0.4c1.3,2.1,2.9,3.3,5.6,3.1c2.7-0.2,5.4,0.2,5.7,3.9c-0.4,2.5-2.2,2.7-4.1,2.2c-7.2-1.9-14.1,0.3-21,1.9       c-1.7,0.4-3.3,0.3-3.2-1.8c0.2-3.5-2.1-3.3-4.3-3.2c-4.7,0-9.3-0.3-14-0.3c0.2,0,0.5,0,0.8,0.1c1.8,0.5,4.9-0.7,4.9,1.9       c0,2.9-3.2,2.2-5.2,2.3c-6.3,0.1-12.5-0.7-18.8-1.2c-7.8-0.7-15.7-0.3-23.5-1.3c1.8,0.3,3.8-0.2,4.7,2c0.4,1.1-0.4,1.8-1.5,2.3       c-8,1-16,1-23.8-1C1027.7,622,1027.4,622,1027,622z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B03D47"),
                d:
                  "M1028,622c8.3,0,16.7,0,25,0c13.2,0.9,26.4,0.2,39.6,0.4c2,0,4-0.1,5.9,0.3c1.6,0.4,3.4,0.8,2.5,3.2       c-14.4,0-28.8,0-43.2,0.1c-1.7,0-4.2-1.1-4.9,1.9c-4,0-8,0-12,0c-2.9-0.8-5.6-2.1-8-3.9C1031.2,623.6,1029.4,623.4,1028,622z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A93C4A"),
                d:
                  "M1033,624c3.2,0.2,6,1.4,8,3.9C1037.6,628.2,1034.4,627.9,1033,624z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M887.1,538c2,3.4,0.4,7,0.9,10.5c0.3,2.2-0.8,4.6,1,6.5c1.4,1.2,1.3,2.9,1.4,4.6c0,1.8-0.1,3.6,0.5,5.3       c0.6,4.1,1.4,8.3,1.4,12.5c-0.1,1.7,0.2,3.3,0.1,5c-0.1,0.2-0.2,0.4-0.3,0.6c-0.8,0.4-1,1.2-1,2c-1.3,1.3-3,1.4-4.6,1.2       c-6-0.8-12.1-0.8-18.1-2.1c-6.3-1.4-12.9-0.3-19.2-1.6c-4.2-0.9-8.5-1.1-12.8-1.4c-7.2-1.5-14.6-2.1-21.9-2.6       c-1.8-0.1-3.6-0.3-5.3-1.1c-1.4-0.9-3-1-4.5-1c-25.6-2.8-51.1-6.8-76.5-11.1c-1.2-0.2-2.3-0.4-3.1-1.4c-0.3-0.9,0.2-1.9,0.9-2       c4.8-0.7,8.6-3.4,12.6-5.8c2.1-1.3,2.6-0.7,2.5,2.9c1.2-1.2-0.3-3.1,1.4-4c2.3,1,0.3,2.9,1.1,3.9c0.4-0.9-0.8-3,1.5-3.2       c1.4-0.1,1.8,1.2,2.1,2.4c0.3,1.1,0.5,2.3,1.5,3c0.3,0.3,0.5,0.7,0.7,1.1c-0.1,0.5-0.2,0.9-0.8,1c0.4,0.6,0.9,0.2,1.1,0       c1.8-2.1,2.3-5.1,4.4-7.1c2.8-0.5,2.3,1.6,2.5,3.4c0.1-2.1,0.5-4.3-2.7-3.1c-1.3,1.1-3,2.4-3.9,0c-0.7-1.7,1.2-2.5,2.6-3       c5.2-2.1,7.7-0.6,8.6,5.2c0.3,1.8,2.1,3.5,1.3,4.5c0.3-1.6,1.5-4,2.8-6.3c0.3-0.4,0.6-0.7,1-1c3-0.4,4.2,1.9,5.6,3.8       c0.4,0.1,0.8,0.2,1.2,0.4c2.4,1.3,5.2-2.4,6.8-0.1c-2.1-2-1.1-4.2,1.7-6.2c0.4-0.2,0.9-0.3,1.4-0.3c1.1,0,2.3,1.2,3.2-0.2       c0.9-1.4-0.5-2.1-1.3-2.8c-1.1-1-2.9-1.4-3.4-2.8c-1.6-4.2-2.8-4.4-5.3-0.4c-1.6,2.5-7.5,0.8-9.4-2.4c-1,1-0.4,4.2-2.6,3.1       c-2.3-1.1-6.5,3.7-6.9-2.4c-0.1-2.2-1.8-0.9-2.6-0.6c-3,1.3-5.9,0-8.9-0.2c-1.5-0.1-2.6-0.8-1.5-2.6c2.2-1.4,4.7-1.9,7.3-2       c1.4-0.1,2.6-0.3,2.8-2c6.1-2.5,12.5-2.7,19-1.8c1.7,0.3,3.5-0.1,5.3,0.1c2.2,0.4,4.5,0.8,6.6,1.3c5.1,0.6,10.3-0.8,15.3,0.8       c1.6,0.5,3.3,0.6,4.5,1.9c0.9,1.2,2.1,1.5,3.5,1.4c5.1-0.5,10,0,14.9,1.8c2.5,0.9,5.5-1,8.3-0.7c1.5,0.2,3,0,4.4,0.5       c1.3,0.5,1.8,1.5,1.5,2.8c-0.4,1.7-1.6,1.2-2.8,0.9c1.2,0.6,2.5,1,2.8-0.7c0.8-4.7,2.8-2.5,4.5-0.8c1.7,1.7,3.5,2.4,5.8,1.8       c3.6-0.8,7.3,0.3,10.9,0.2c0.9,0,1.4,0.4,2.6-0.3c3.6-2.2,5.4-0.7,5.2,3.9c1-4.5,4.3-5.8,9.8-2.5c4.2,2.5,6.5-1.4,9.8-1.3       c-0.1-0.5-0.2-1-0.3-1.5C885.8,543.1,884.9,540.3,887.1,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621220"),
                d:
                  "M895,586c0.6-1.3,2.1-0.7,3.5-1.9c-4.8,0.7-2.5-3.7-4.5-5.1c-2-0.2-1.1-1.7-1.3-2.7       c0.1-1.5,0.1-2.9,0.8-4.3c2.1-2,4.7-2.9,7.5-3.6c0.3-0.8-0.3-1.2-0.5-1.8c-0.5-1.6-1-3.9,0.8-4.4c1.9-0.5,4.3,0.5,5.2,2.9       c0.8,2.2-1.4,6.2,4,5.4c2.2-0.3,4.7,2.9,6.7-0.7c0.4-0.7,1.5-0.6,2.3,0c0.9,0.6,0.5,1.5,0,2.2c-0.6,0.9-0.4,1.9-0.9,2.8       c0.8-1.1,0.4-3.4,2.6-3.1c1.4,0.2,1.7,1.5,1.7,2.7c0,5.1,4.8,3.3,7.1,5.1c-0.6-2.4-2.7-2.2-4.5-2.6c-1.7-0.4-2.5-1.5-2.4-3.3       c0.2-1.8,1.5-2.6,3.1-2.6c2.5-0.1,5,1,7.7,0.4c0.5-0.1,0.9,1,1.5-0.4c0.9-2.1,2.4-1.6,3.2,0.1c1.6,3.1,5,3,7.5,4.5       c0.7,0.4,2.2,0.6,2.4-0.7c0.2-1.6,0.7-2.7,2.4-2.4c1.8,0.3,3.8,1,4.8,2.5c1.8,2.8-1.9,2.8-2.9,5c2-0.8,4-1.2,4.9,0.9       c0.8,1.8-0.6,3.1-1.8,4.3c-3,3-4.3,3.2-7.9,0.6c-3.6-2.5-7.6-0.7-11.4-1.3c2.2,0.6,4.4,0.5,6.6,0.2c1-0.2,2.3-0.5,2.9,0.1       c5.7,4.9,12.3,2.1,18.5,2.3c1.4,0,2.6,0.2,3.3,0.4c1.2,0.5,0.9-0.8,0.8-0.2c0,0.2-0.2,0.3-0.4,0.2c-1.4-0.5-3.3-0.7-2.8-2.8       c0.4-1.7,2-1.4,3.4-1.1c2.9,0.6,4.4-0.2,3.1-3.4c-0.9-2.2,0.6-3.1,2.1-3.8c1.4-0.7,3-1.8,4.1,0.7c0.9,2,2.9,0.9,3.8,0.5       c3.1-1.4,6.7-0.8,9.7-2.6c2.1-1.3,3.9,0.7,5.4,1.7c1.9,1.3-0.2,2.5-0.9,3.5c-1.4,1.9-1.5,4.1-1,6.2c0.6,2.7-0.8,3.2-2.7,3       c9.2-0.9,9.2-0.9,9.2,3.8c-6.4,3.9-13.1,1-19.5,0.7c-12.6-0.7-25.1-2.1-37.7-2.6c-3.8-0.2-7.6-1-11.3-1.5       c-8.1-1.1-16.2-0.5-24.2-1.3C904.6,586.5,899.3,588.7,895,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9424C"),
                d:
                  "M892,593c-0.8,0-1.5,0.2-2,1c-0.5,0.3-1,0.5-1.5,0.4c-17.2-1.4-34.3-3.3-51.5-5.1       c-2.8-0.3-5.7-0.5-8-2.3c-6.9-1.7-14.2-0.6-21-3c-4.3-0.8-8.7-1-13-2c-0.7,0-1.3,0-2,0c-1.5-1.2-3.5,0.2-5-1c-0.7,0-1.3,0-2,0       c-2.3,0.8-4.7,0.5-7,0.2c-0.9-4.1,2.3-3.1,4.3-3.5c1.1,0,2.2,0.1,3.3,0.3c2.2,0.8,4.6,0.6,6.9,0.8c0.5,0,1,0.1,1.5,0.3       c2.3,0.9,4.8,0.5,7.2,0.9c0.5,0.1,1,0.2,1.4,0.3c2.4,0.7,4.9,0.3,7.3,0.5c0.8,0,1.5,0.2,2.2,0.4c1.7,0.6,3.5,0.5,5.2,0.5       c1.8,0,3.7,0,5.5,0c1.6,0,3.2,0,4.8,0.4c2.1,0.8,4.2,0.6,6.4,0.7c0.8,0,1.7,0.2,2.5,0.4c15.7,1.6,31.4,2.7,47.1,4.4       c2.5,0.3,5,0.2,7.2,1.6C891.9,590.4,891.9,591.7,892,593z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M891.9,589.1c-11.7,0.1-23.3-1.9-35-2.8c-6.7-0.5-13.4-0.7-20-2.3c3.3-2.4,6.6,0,9.7-0.4       c-5.7-1.1-11.9-0.2-17.9-1.3c-1.7-0.3-3.6-0.2-2.4-2.8c3.2-0.3,6.5-0.3,9.6,0.4c10.7,0.8,21.4,1.2,32,2.6c7.7,1,15.3,2,23,2.4       C891.8,586.3,892.2,587.6,891.9,589.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B171F"),
                d:
                  "M895,586c4.7,0.6,9.7-1.7,14,1.9c16.9,1.3,33.8,2.7,50.6,4.1c4.6,0.4,9.2,1,13.8,0.9       c1.2,0,3.1-0.3,3.3,1.4c0.2,1.7-1.7,1.6-2.8,2.2c-0.8,0.4-1.6,0.5-2.4,0.7c-4.2,0-8.5,1.4-12.4-1.3c-4.9-1.9-10.1-1.1-15.2-1.6       c-16.2-1.8-32.6-2.8-48.9-4.1C895.1,588.8,895.1,587.4,895,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3B0F12"),
                d:
                  "M894,577c-0.1,0.7-1.1,1.3,0,2c0,2.6,0,5.2,0,8.5c-1.3-1.7-1.9-3-2-4.5c0,0,0,0,0,0       c0.2-1.8-0.5-3.4-1-5c-0.3-4.3-0.7-8.7-1-13c-1.1-1.5,0.2-3.5-1-5c0-1.7,0-3.3,0-5c0.5-3-1-6.2,1-9c0.2,0.2,0.3,0.3,0.5,0.5       c0.3,0.6,0.5,1.3,0.6,2c0.3,3,0.8,5.9,2,8.7c0.8,4.2,1.7,8.4,1.2,12.7C893.6,572.2,892.9,574.6,894,577z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63C44"),
                d:
                  "M1101,626c-0.6-3-3.1-1.9-4.9-1.9c-12.8-0.1-25.5,0-38.3-0.1c-1.7,0-4.2,1.1-4.8-1.9       c-0.3-2.5-2.3-1.9-3.8-2c-1.8-0.2-3.9,0.5-6.6-1.4c4.2-0.6,7.4-1.8,10.4-1.3c3.7,0.7,7.4,1.4,11.1,1.1c9.1-0.8,17.9,2.5,27,1.5       c1.5-0.2,3.2,0.4,5.2-1.3c-4.1-0.4-7.3-0.7-10.8-1.1c1-2.4,2.7-1.5,4-1.6c5.8-0.1,11.6,0,17.5,0c2.3,0,4,0.7,3.5,3.4       c-0.1,0.8-1.8,1.4-0.3,2.3c0.8,0.5,1.5-0.3,2-1c0.9-1.5,2.1-1.9,3.8-1.3c1.5,0.5,4.2,3.5,3.8-1.5c-0.1-1.2,1.1,0,1.8,0       c4.6,0.4,9.2,0.2,13.6,1.7c0.1,0,0.5-1.1,0.8-1.6c4.4-2.2,9-0.7,13.5-0.2c2.6,0.3,5.4,1.4,7.8,0.7c6.8-2.1,13.4,1,20.1,0.3       c1.3-0.1,2.7,0.2,3.6,1.3c0.6,3.1,3.1,1.9,4.9,2c18.1,0.1,36.2,0,54.3,0.1c1.7,0,4.2-1.1,4.8,2c-27.3,0-54.6,0-81.8,0       c-10.6,0-21.2-0.8-31.6,0.2C1121.3,625.3,1111.2,626.2,1101,626z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3C46"),
                d:
                  "M1181,620c-5.8-0.7-11.9,1.7-17.4-1.8c-3.8,2.9-8.5,2.5-12.4,1.5c-5.1-1.3-10.2-0.5-15.2-1.7       c-0.7-2.7-2.9-2.9-5-2.4c-4.1,1-5.9-0.6-6-4.6c0.2-0.3,0.5-0.4,0.8-0.6c1.5-0.6-0.9-3.7,2.4-3.5c2,0.1,4.1,0.6,6.2,0.5       c3.8-0.1,7.9-1.5,11.7,0.4c1.2,0.8,2.8,0.6,4.1,1.1c-1.1-0.7-2.8,0-3.5-1.5c0.1-0.6,0.4-0.9,0.9-1.2c3.9-0.7,7.8-1.8,11.4,0.8       c0.4,0.5-0.3,1.4,0.1,1.4c7.4,1.6,15,2,22.6,1.9c14.5-0.3,29.1,0.1,43.6,1.6c5.7,0.6,11.5,0.3,17.1,1.6c1,0.2,1.9,0.5,2.6,1.3       c0,0.3,0,0.6,0,1c-1.3,0-2.6,0-5.2,0c2.7,1.1,3.4,2.9,5.2,3c-1.1,1.4-2.7,1.1-4.2,1c-8.5-0.8-17.1,1.7-25.4-1.3       c-3.3,3.3-7.1-0.8-11.2,0.9c-4,1.7-9.5,0.2-14.3-0.4C1187.1,618.7,1184.1,620.5,1181,620z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B21C2C"),
                d:
                  "M370.8,327.1c2.7,6.7,1.3,10.7-5.7,14.8c-2.8,1.6-5.9,2.8-8.9,4.2c-2.5,0.5-4.5,2-6.9,2.7       c-3.9,1.1-5.1,0.3-5.4-3.8c-0.2-2.3-0.8-4.6-1.3-6.8c-0.8-3.6,0-5.6,3.9-5.9c0.9-0.1,2-0.4,2.6-1.3       C356,328.4,363.5,328.1,370.8,327.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B02234"),
                d:
                  "M349,331c1.1,3.7-2.4,2.1-3.4,2.4c-1.9,0.5-2.5,0.5-2.2,2.9c0.4,3.3,1.9,6.4,1.4,10       c-0.3,2.7,2.3,1.7,4,1.3c2.4-0.6,4.5-2.5,7.2-1.6c-3.8,3.4-8.9,4.4-13.1,7c-1.5,1.1-2.4,3.3-4.8,2.9c0-0.7-0.1-1.3-0.1-2       c3.7-6.2,1.7-12.6,0.8-18.9c-0.1-1.2-1.5-2.8,1.1-3.1C343.1,332.5,346,331.3,349,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921A2F"),
                d:
                  "M340,332c-1.2,0.7-1,1.9-1.1,3.1c-1.3-1.1-0.8-2.7-0.9-4.1C338.9,331,339.6,331.2,340,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DA9CA3"),
                d:
                  "M354,382c0.6-1.7,2.7-4.3-1.6-3.6c-2,0.4-1.4-0.8-1.9-1.6c-2.1-3.7-5.8-6.4-6.6-11.1       c-0.3-2.1-3.4-2.3-5-3.7c-0.9-0.5-1.6-1.1-1.2-2.3c-0.1-0.3,0-0.5,0.2-0.7c3.2,1.2,1.7-1.8,2.4-2.8c0.6-1,1.5-1.7,2.6-2.1       c6.4-0.1,11.3-4.2,17-6.1c2.1-1.4,4.3-1.7,5.4,0.8c1.2,2.6-1,3.4-3,4.6c-3.3,2.1-5.9,4.7-10.4,4.5c-2.3-0.1-0.2,3-0.8,4.7       c2.2,0.3,3.5-0.9,4.8-1.7c5.1-3.2,9.8-2,12.9,2.9c1.8,2.9,3.1,6.1,5.6,8.7c1.8,1.9,3.3,4.8,0.4,7.5       C368,380.7,361,381.3,354,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DDA2A8"),
                d:
                  "M375,380c0.1-3.4,0.7-6.5-3.7-8.6c-1.4-0.7-2.5-5-3.9-7.6c-1.8-3.4-7.5-4.8-10.1-2.2       c-1.3,1.3-2.8,1.7-4.2,2.5c-2.4,1.4-2.7,1.1-3.4-2.3c-1.3-6.7,1.1-6.5,5.9-5.3c1.5,0.4,2.9-0.6,3.3-2.3       c0.2-1.3,0.8-2.1,2.2-2.2c1.5-0.2,3.9,0.5,3.6-2.1c-0.3-3.2-3.1-1.4-4.8-1.9c0.6-3.2,3.2-1.5,5-2c8.6,1.7,15.5,11.1,14.5,18.5       c5.1-3.5,15.7,2.9,16.8,8.3c0.5,2.4,0.4,4.3-2.3,5.1c-3.8-0.3-7.2,1.9-11,2C380.3,380,377.7,380,375,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA7AD"),
                d:
                  "M394,378c2.9-4.8,0.2-10-5.5-10.7c-0.6-0.1-1.2-0.5-1.6-1c-2.1-2.7-4.2-2.6-6.7-0.4       c-0.8,0.7-2.1,1.6-3.1,0.4c-1.3-1.6,0.5-1.8,1.3-2.4c0.4-0.4,1.1-1.4,1-1.4c-3.4-3.6-2.5-10-8.3-11.9c-2.5-0.8-3.4-3.8-6.1-4.5       c0.6-2.2,2.2-2.2,4-2c3.6,0.9,7.4,4.3,10.4-1.1c0.9-1.7,2.3,2.3,3.7,0.2c2,0.7,5.7-2,5.7,2.9c0,0.6,1,0.5,1.7,0.4       c3.7-0.4,4.7,1.9,4.5,4.9c-0.4,4.6,2.1,7.8,5.1,10.8c2.6,3.8,0.2,9.3,4.5,12.6c0.6,0.5-0.5,1.3-1.4,1.4c-1.4,0.1-2.5,0.7-3.1,2       C398,377.3,396,380.3,394,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D98990"),
                d:
                  "M343,354.1c0,1.3-0.7,1.9-2,2c-0.9,0.7-0.4,3.5-2.9,2c0-0.7,0-1.4,0.1-2.1c1.6-0.9,2.5-3.2,4.8-2.9       C343,353.4,343,353.7,343,354.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B63748"),
                d:
                  "M337.1,339.9c1.9,3.2,0.6,6.7,0.8,10.1c-0.3,0-0.5,0-0.8,0c-0.3-2.7-0.6-5.4-0.9-8.1       C336.4,341.2,336.8,340.5,337.1,339.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE7C86"),
                d:
                  "M316,372c0.5-0.9,1.4-1.4,2.3-1.3c0.6,0,0.4,0.7,0.2,1.1C317.7,372.9,316.9,372.3,316,372L316,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D38D94"),
                d:
                  "M338.1,358c1.5,0.1,1.8-1.5,2.9-2c-0.2,1.8,1.1,5.1-3,3C338,358.7,338.1,358.3,338.1,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D38D94"),
                d:
                  "M337.8,359.7c0.4,0.8,0.8,1.5,1.2,2.3c-1,0.7-2,1.3-3,2C336.1,362.3,336.7,360.9,337.8,359.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45F67"),
                d:
                  "M813,306c1.3,0,2.7,0,4,0c-0.3,2.7-2.4,1.8-4,2c-7.2,0.5-14-2.3-21-3c0.8-1.6,1.9-2.3,3.6-1.6       c2.7,1.1,5.6,0.4,8.4,0.7c0.3,0,0.7,0,1,0C807.6,305,810.9,303.1,813,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45D67"),
                d:
                  "M749,302c-2.2,0.2-4.7,3.5-6.6-0.5c-3,2.1-6.3,0.5-9.4,0.5c1.8-3,3.8-5.7,7.6-2.5       c0.3,0.3,1.2,0.5,1.4,0.3C745.5,296.8,746.9,300.7,749,302z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB606C"),
                d:
                  "M831,312c-2.3-0.7-2.1-1.6,0-1.9c2.4-0.3,5,0,7.4-0.1c3.9-0.2,7.7,0.3,11.6-1.5       c2.6-1.2,6.6-0.6,7.9,3.5C849,315.7,840,310.2,831,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E45F67"),
                d:
                  "M860.1,309.7c1.2,2.3,0.8,4.8,0.8,7.2C859.2,314.7,860.2,312.2,860.1,309.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE747B"),
                d:
                  "M865.1,334c-0.4-2-0.8-4-1.2-6c0-1.6,0-3.2,0-4.9c-0.4-0.4-0.4-0.9,0-1.4c0.5-0.2,0.9-0.3,1.4-0.2       c0.7,0.3,1.2,0.8,1.5,1.5c-0.4,4.4,2.3,5.8,6.1,6.3c3.1,0.4,6.2,1,9.1,2.4c0.6,0.3,1.1,0.7,1.8,0.8c10.2,0.4,19.6,5.6,30,5.3       c1.2,0,2.3,0.3,3.2,1.1c0.3,0.6,0.2,1.1-0.3,1.6c-6.4,1.7-13,1.9-19.6,2c-4.9,0.2-9.6-0.6-14.1-2.6c-4.8-2.1-10.6-0.5-15.1-4       c-0.2-0.2-0.9,0.2-1.3-0.3c-0.6-0.7-0.2-1.6-0.5-2.3C866.1,333.8,865.8,334.2,865.1,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E35C65"),
                d:
                  "M864.1,321.9c-0.1,0.4-0.1,0.8-0.2,1.2c-1.2-2.6-0.7-5.4-0.7-8.1c0.3,0.7,0.6,1.3,0.9,2       C865.3,318.6,865.4,320.3,864.1,321.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851725"),
                d:
                  "M868,362c0-1,0-2-0.1-2.9c0.8-0.4,1.5,0,2.2,0.5c5.9,2,11.9,1.4,17.9,0.2c9.2-1.9,18.5-1.4,27.7-1.4       c2.5,0,4.9-0.1,7.4,0c1.2,0.1,2.6-0.3,3,1.1c1.4,4.8,5.7,1.2,6.2,0.9c4.4-2.6,4.3-3.2,8-2.7c4,0.5,8.3-1.9,12,1.4       c0.3,0.7,0.3,1.5-0.1,2.2c-2.1,1.9-4.8,2-7.5,2.2c-6.2,0.5-11.8,2.9-17,6c-4.2-2.3-9.5,0.6-13.5-2.6c-0.1,1.8-1.4,2.2-2.9,2.3       c-4,0.3-8-2.1-12-0.1c-2.1-3.3-4.2-0.3-6.3,0c-7.6-0.7-15.1-1.8-22.7-1.9C867.8,366.1,867.3,364.3,868,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC939A"),
                d:
                  "M866.1,346c0-0.7-0.1-1.4-0.1-2c1.7-3.4,5-3,7.9-2.8c4,0.3,8,0.3,11.9,0.6c3.3,1.6,7,2,10.3,3.7       c1.7,3.6,1.3,4.5-2.8,4.7c-4.6,0.2-9.1,0.7-13.5,2.4c-4.3,0.1-8.7,1.5-13-0.6l0,0C865.8,350.1,867.1,347.9,866.1,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F172A"),
                d:
                  "M866,365c-1.4,2.3-3.9,1.8-5.9,1.9c-4.5,0.3-9,0.8-13.4,0.9c-12.3,0.2-24.4,2.6-36.7,2.3       c-1.5,0.9-3.1,0.4-4.7,0.4c-0.9,0-2.1,0.4-2.2-1c-0.1-1.1,0.9-1.6,1.7-2.1c8.4-0.3,16.6-2.1,25.1-1.9       c9.8,0.2,19.5-1.7,29.2-2.3c1.7-0.1,3.6-0.7,4.9-2.1c1-1.5,1-3.3,1.1-5c1.6,1.8,0.6,4,0.9,6C866.8,363,866.9,364,866,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE7F86"),
                d:
                  "M886,343c-4-0.2-8.1,0.3-12.1-0.7c-2.5-0.6-5.5-0.1-7.8,1.7c-0.8-3.3-1.1-6.6-0.9-10       c1.1-3.2,2.3,2.6,3.4,0c5,5.1,12.4,2.3,17.9,5.5c3.1,1.8,6.3,1.5,9.5,1.6c-0.9,3.3-3.6,2-5.7,2.3       C888.8,343.4,887.5,341.9,886,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB2B33"),
                d:
                  "M869,360c-0.3-0.3-0.7-0.6-1-1c-1.7-1.8-0.7-3.9-0.9-5.9c9.4-0.2,18.8,0.1,27.9,2.8       c0.4,2.5-0.2,4-3.2,3.6c-1.8-0.2-3.6,0.5-5.4,0.7C880.5,359.7,874.8,362,869,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E48085"),
                d:
                  "M895.1,356.9c-7.5-1.5-15.1-2.4-22.8-3c-1.8-0.1-3.6,0.2-5.3-0.8c0-0.4,0-0.7-0.1-1.1c4,0,8,0,12,0       c4-1.4,7.9-1.4,11.9,0.2c4.4,1.8,9.5,0.1,13.9,2.4c2.5,0.4,5.4-0.8,7.4,1.8C908.8,358.7,899.2,359,895.1,356.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M866,365c0-1,0-2,0-3c0.7,0,1.3,0,2,0c0.3,1.3,0.7,2.7,1,4c0.9,0.8,2.4,1.2,1.9,2.8       c-0.3,0.8-1.2,0.8-1.9,0.2c-0.4-1-1.1-1.6-2-2C867,366.2,866.8,365.4,866,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE7F86"),
                d:
                  "M866.1,346c1.5,1.8,0.7,4,0.9,6C865.7,350.1,866.1,348.1,866.1,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821721"),
                d:
                  "M864,361c-1.1,3.7-4.1,3.9-7.3,4c-11.3,0.2-22.5,1.6-33.8,2.1c-6,0.3-12,0.7-18,0.9       c-3.5,1.4-7,2.4-10.1-0.9c1.2-3.8,4.4-1.9,6.7-2.5c2.8-0.1,5.7,0.4,8.4-0.6c0.8-0.2,1.7-0.3,2.6-0.4       c14.1-1.1,28.3-1.7,42.4-2.6C858,361,861,361,864,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B12532"),
                d:
                  "M806,352c7.7,0,15.3,0,23,0c3.4-0.3,3.6,4.4,6.9,4.8c-1.3,0.1-2.6,0.1-4,0.2c-3.2,2.4-6.8,1.2-10.3,1       c-2.4-0.8-4.6-2-7.2-1.7c-3.9,0-7.8,0-11.8,0c-3,0.3-6,0.5-8.9-0.1c-1.1-0.2-2.6-0.3-2.7-1.7c-0.1-1.4,1.4-1.6,2.5-1.8       c2.1-0.4,4.2-0.5,6.3-0.1C802,353.2,804.1,353.5,806,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1C2F"),
                d:
                  "M810,365c-2.5,2-5.4,0.6-8,1c-0.1-2.2,1.9-2.4,3-3.5c5.3-1.4,10.8-1.4,16.2-1.8c2-0.2,4,0,5.9-0.7       c5.6-1.1,11.2,0.5,16.8,0.1c3.6,1.6,7.4-0.3,11,1c-6.6,2.3-13.6,2.2-20.3,2.7c-7.5,0.5-15.1,1.5-22.7,1.3       c-1.5-1.1-3.2-0.2-4.2-0.5C808.2,364.5,809.2,364.3,810,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90191D"),
                d:
                  "M844,360c-5.6,2.1-11.3,0.5-17,1c-0.4-0.2-0.8-0.4-1.2-0.7c-2.3-1.8-4.9-0.7-7.4-0.9       c-1.6,0-3.2-0.1-4.6-0.7c-2.1-1.6-4.6-1.1-7-1.3c-1.8-0.2-4.1,0.5-4.7-2.2c4.3,0,8.6,0,12.9,0c1.8,1.5,4.2,0.8,6.1,1.9       c3.6,0,7.3,0,10.9,0C835.7,359.3,840.2,358.2,844,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B01E2B"),
                d:
                  "M806,352c-0.5,2.8-2.7,2-4.3,1.9c-3.3-0.1-6.5-0.3-9.8,0.3c0.4,1.1,1.4,0.6,2.1,0.8       c-1.4,3.7-4.7,1.8-7.1,2.4c-9.9,0-19.8,0-29.7,0c-1.5,0-3.3,0-4-1.4c-0.9-1.9,1-2.8,2.2-3.8c0.4-0.4,0.9-0.6,1.5-0.9       c5.6-0.8,11.2-1,16.8-1.2c1.8-0.1,3.7,0.2,5.3-1c3.7,1.6,7.7,0.6,11.5,1.3c0.3,0.1,0.7,0.4,0.9,0.3       C796.5,349.1,801.1,351.8,806,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("971A1F"),
                d:
                  "M779,349c-1.6,3.4-5,2-7.5,2.4c-4.7,0.8-9.7,0.4-14.5,0.6c-0.8-3.8,2.2-3.4,3.9-3       c3.5,0.8,0.2-1.6,1.1-1.9c3.6,0.6,7.3,1.2,11,0.9C774.8,349.8,777,348.7,779,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1823"),
                d:
                  "M762,347.1c0.7,0.8,1.4,1.7,2,2.5c-2.2,1.6-5.8-1.6-7.1,2.4l0,0c-4.8,2.8-10.2,2.2-15.5,2.7       c-6.9,0.7-13.8,1.9-20.8,1.6c-0.9-0.1-1.8-0.3-2.6-0.7c-1.3-0.9-2.2-2-1.2-3.7c6.2,0,12.4,0,18.7,0c1.2,0,2.9,0.4,3.1-1.6       c0.1-1.6-1.1-2.2-2.6-2.4c-1.3-0.1-2.8,0.1-3-1.8c-0.2-1.5,0.6-2.1,1.9-2.3C744.2,343.8,753,346.7,762,347.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M659,348c-0.2-1.1-0.4-2.2-0.6-3.4c7.5,2.7,15.9,1.6,22.6,6.4c0.8,0.7,2.3,1.1,2,2.5       c-0.3,1.5-1.8,1-2.9,1.2c-3.7,0.7-8.1-0.6-10.7,3.5c-0.4,0.3-0.9,0.6-1.4,0.8c-6.8,1.2-13.4,0.3-20-1.3       c-2.5-0.6-4.3-2.7-4.8-5.2c-0.4-2.4-0.6-5.3,2.7-6.4c0.3,0,0.7,0,1,0c1,1.1,2-0.8,3,0c0.7,0,1.3,0,2,0c0.9,2.4-3.1,4.3-0.6,6.7       c-0.2-2.4,0.5-4,3.3-2.7C657,351,658.5,350.6,659,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M646,346c-2.8,3.9-2.4,8.9,1.4,10c3,0.9,6.5,2.3,10.1,2.1c3.8-0.3,7.7-0.1,11.5-0.1       c0.3,0.5,0.2,0.9,0,1.4c-0.7,0.8-1.6,1.2-2.6,1.5c-1,0.3-2.1,0.4-3.2,0.5c-7.3,1.2-14.6,1.6-22,1.2c-2.6-3.4-4.7-7-3.3-11.6       c-0.5-1.6,1.2-3.2-0.7-5c-2.6-2.5-1.3-4.7,1.7-6c1.4,4.5,5.4,1.8,8,3C646.7,344,646.3,345,646,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80171F"),
                d:
                  "M669,359c0-0.3,0-0.7,0-1l0,0c6.4-1.9,13-3.1,19.7-3.4c3.1-0.1,6.2,0,9.3,0.4c1.3-2.8,2.6-3.3,5.5-1.7       c2.6,1.5,4.6-1.2,7.2-0.8c1.5,0.2,3.5-0.3,5.3-0.4c0.3,0,0.7,0,1,0c0.3,1,0.7,2,1,3c-0.4,0.4-0.8,0.7-1.3,0.9       c-1.8,0.4-3.7,0.6-5.6,1.2c-12.4,1.8-24.9,2.9-37.5,3.5C671.9,360.7,670.2,360.5,669,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M698,355c-0.4,0.3-0.8,0.8-1.2,0.8c-9.4-1.1-18.4,2.9-27.8,2.2c0.3-3.1,2-4.4,5-4       c2.8,0.4,5.4-1.8,8.7,0.1c-0.8-1.5-1.3-2.3-1.7-3.1c1.3,0,2.7,0,4,0c2.2,2.4,5.2,2,8,2c2.9,1.4,1.4-2.2,3.1-2.5       C697.5,351.5,696.9,353.7,698,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M659,348c-0.7,1.5,2.9,2.5,0.8,3.6c-2.2,1.1-4.8,0.7-6.7-1.2c-2.4,1,0.9,2.7-0.6,3.4       c-0.9,0.4-1.9,0-2.5-1c-1-1.6-1.3-3,0.2-4.5c0.7-0.7,1.2-1.5,1.8-2.3C655,344.4,656.3,348.7,659,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1527"),
                d:
                  "M693,353c-2.1,1.8-4.6,0.9-6.8,0.8c-1.8-0.1-1.8-1.4-1.2-2.8C688.3,349,690.4,352,693,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d: "M650,346c-1,0.1-2,3.8-3,0C648,345.7,649,344.4,650,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951E2D"),
                d:
                  "M670,337c0.6,1.1,0.8,2.2-0.3,3.1C668.5,338.9,669,337.9,670,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921929"),
                d:
                  "M638,351c1,3.7,2,7.3,3,11c-1.7,1.5-4.6,1.5-5.2,4.3c-1.4,3.1-3.1,5.1-6.2,1.7c-1.5-1.6-2.7-0.1-4,0.2       c-1.7,0.4-3.3,0.7-4.3-1.2c-0.9-1.8,0-2.9,1.6-3.4c1.4-0.4,0.7-0.8,0.4-1.5c-0.8-1.7-0.3-3.7-1.3-5.3c-0.5-0.8-0.8-1.7-0.8-2.7       c0.1-0.5,0.2-0.9,0.5-1.4c1-0.8,2-1.5,3.3-0.8c2.3,2.8,4.7,2.8,7,0c1.9-0.2,2.7-1.9,4-3C636.7,349.7,637.3,350.3,638,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841726"),
                d:
                  "M592,331c1.6,1.4,3.6,1.6,5.5,1.2c4.4-1,8.1,1.7,12.3,2c0.8,0.1-0.7,1.1-0.8,1.8       c-0.8,2.2-1.7,3.9-4.6,2.6c-1.9-0.8-4.2,0.2-6.3-0.4c-0.4-0.5-0.8-0.9-1.1-1.5c0.1,0.7,0.8,1.1,1.1,1.6       c-0.3,1.6-1.6,1.7-2.7,1.3c-5.9-2.4-11.8-1.7-17.7-0.4c-1,0.2-2.1-0.1-2.6-1c-1.2-2.6-1.6,1-2.5,0.3       c-6.6-1.4-13.6-0.9-20.1-3.3c-0.8-0.2-1.5-0.5-2-1.1c-0.4-4.9,2.9-5,6.3-4.9c4.3,0.2,8.7-0.2,12.9,1.5c4.8,2,9.2-1.8,14.1-0.7       c2.6,0.6,5.5-0.3,5.5,4C590.7,332.8,590,330.7,592,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C191F"),
                d:
                  "M557,329c-2.2,1.4-6.1,0.8-6,5c-2.6,1.6-5.6,2.2-8.6,2.8c-0.5-0.1-0.9-0.2-1.3-0.5       c-0.3-0.4-0.3-0.8-0.1-1.3c6.2-2,10.9-6.9,17-9.1C557.7,327,557.3,328,557,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M598,338c1.8-0.7,3.5-1.8,5.5-0.6c2.2,1.2,3.9,0.3,5.5-1.4c6.6-1,11,1.5,13,8c1.1,1.2,2.2,2.4-0.1,3.5       c-2.6-0.8-5-1.7-7.2-3.8c-2.3-2.3-6-1-9-1c-0.5,0-1.1,1-1.7,0.9c-6.4-1.3-12.7-1.4-19.3-1.1c-2.8,0.1-5.9-1.6-9.1-1.4       c-1.7,0.1-3.4-0.6-2.6-3c1.5-2.1,1.5-2.1,2.8-0.3c0.3,0.4,1.5,0.8,1.7,0.6c4-4.4,9.6,1.4,13.9-2.1c0.8-0.6,2,0.8,2.9,1.6       C595.4,338.8,596.6,339.7,598,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1B2E"),
                d:
                  "M622,347c1.1-1-0.3-2,0-3c0-1.3,0-2.7,0-4c3.9-0.7,1.7,3.9,3.9,4.6c-1.6,2.3,0.6,5.1-0.9,7.4       c-1,0.3-2,0.7-2.9,1C621,351,620.9,349,622,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8C1824"),
                d:
                  "M472,330c-3,0.3-6.4-1.1-8.5,2.4c-0.4,0.7-1.5,0.6-2-0.3c-2.6-4.2-5.4-2.8-7.9-0.1       c-1.8,1.9-4.2,1.5-6.3,1.8c-2.3,0.3-4.6,0-7,0.1c-1.1,0-2.6-0.5-2.8,1.2c-0.1,1.2,0.7,2.1,1.7,2.8c3.1,2.2,3.1,2.2,3.6,7.1       c-3.9-1.6-6.5-4-7.4-8.3c-0.3-1.5-1.2-3.4-3.3-3.8c0-0.3-0.1-0.7-0.1-1c9.7-2,19.4-4,29-6.1c0.3,0,0.7,0.1,1,0       c5,0.1,10-3.1,15,0C476.5,328.8,472.2,326.8,472,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871820"),
                d:
                  "M502,340c1.8-0.2,2.3-2.6,4.8-2.2c2.7,0.5,2-2.2,2.2-3.8c4.7-3.7,9.9-5.9,16-4c0.6,0.7,0.6,1.3,0,2       c-2.7,1.2-5.6,2.1-8,4c-3.7,3.5-8.8,4.6-13,7.2c-1.4,0.9-3.2,1.2-4.5-0.5C499.3,340.7,499.3,339.1,502,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961920"),
                d:
                  "M477,326c-5,0-10,0-15,0c10.2-2.8,20.4-5.4,31-6c0.4,0.3,0.7,0.7,1.1,1       C488.2,322.2,482.1,322.3,477,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("95191F"),
                d:
                  "M525,332c0-0.7,0-1.3,0-2c5-3,9.5-7.2,16.1-6C536.1,327.4,530.5,329.6,525,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B1A24"),
                d:
                  "M516,339c1.4-0.6,2.3-2.1,4-2c5.5-0.3,10.7-2.6,16.3-2.2c1.6,0.1,3.3-0.1,4.6,1.2l0.1,0       c-0.2,3.9-3.9,3.2-5.9,4.7c-0.5,0.2-1,0.3-1.5,0.4c-3.1,0.2-5.8,2.1-8.9,2.2c-2.4-0.1-4.3,0.9-6.4,2c-5.8,3-12.3,3.3-18.7,4.2       c-0.5-0.1-0.9-0.4-1.1-0.9c0.3-3.9,3.8-4.2,6.3-5.3C508.5,341.7,512.5,341,516,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB1B25"),
                d:
                  "M541,336c-3.6,1-7.3-1.1-11.4,1c-1.7,0.9-5.7,1.2-8.8,1.1c-0.3,0-0.6-0.7-0.8-1.1       c0.2-0.3,0.3-0.7,0.5-0.8c6.3-2,12.9-3.3,18.1-7.8c0.5-0.4,1.6-0.2,2.4-0.3c1.1,0,2.2,0,3,1c0.1,0.7,1.5,1.8,0.9,1.7       c-3.4-0.3-3,2.5-3.9,4.3C541,335.4,541,335.7,541,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D1B2B"),
                d:
                  "M516,339c0.8,1.8,1.2,2.4-1.7,2.9c-5.4,0.9-10.9,2.3-15.3,6.1c-1.4,1.2-2.9,1.4-4.6,0.6       c-2.4-3.5,1.2-3.7,2.7-5.1c0.9-0.5,1.8-1,2.9-0.5c4.8-0.2,8-4.3,12.5-5.3c1.6-0.3,3-1.1,4.5-1.7C516.7,337,516.3,338,516,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B11C23"),
                d:
                  "M544,329c-1.1,0-2.3,0.2-3-1c4.8-4.6,9.8-5.6,13.1-2.7C551.2,327.8,547.9,329.3,544,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E8666D"),
                d:
                  "M868,314c0-0.8,0.2-1.6,1-2c2.3,3,5.3,2.5,8,0.9c1.6-0.9,2.9-0.9,4.6-0.4c5,1.6,10,3.9,15.4,1.9       c3.6-1.3,6.2,1.4,7.6,2.9c3,3.1,3.7,1.1,5.5-1.3c0.9,3.3,2.9,4.2,6.1,4c3.7-0.1,7.3-0.2,11.1,1.2c2.1,0.7,6-1.6,9.3-1.3       c1.9,0.2,4.2-0.6,4.6,2.5c0,0.4,0.8,1,0.9,0.9c4.9-3.5,5.8,2,7,4c2.6,4.1,7,2.6,10.2,4.4c0.8,0.5,1.3-0.6,1.8-1.2       c4.9-4.9,9-4,12,2.4c0.1,1.6-1.2,2-2.2,2.1c-9.9,0.8-19.5-0.4-28.5-4.8c-3.7-4.6-8.9-3.4-13.5-2.8c-8,1-15.7-0.7-23.3-2.3       c-5-1-10-1.5-14.9-1.6c-4.3-0.1-8.1-3-12.6-1.2c-1.1,0.5-1.8-1.2-2.5-2.1c-1-1.3-2.3-1.7-4-1.4c-4.6,0.8-4.6,0.8-4-4       C867.6,314.5,867.7,314.3,868,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E76670"),
                d:
                  "M942,329c9,4.1,18.6,5.1,28.3,5c1,0,2-0.1,2.7-1c6.6,2.1,13.4,0.3,20.1,1.2c0.2,1.5-0.8,2.2-1.7,2.2       c-1.7-0.1-2.8,0.3-2.3,2.1c0.7,2.3,2-0.3,2.4,0c3.9,2.5,8.4,0.8,12.4,1.9c1.1,0.3,0.9,1.6,1,2.6c-0.2,0.1-0.5,0.3-0.7,0.4       c-9.1,0.6-18.2-0.6-27.2,1.8c-2.5,0.1-5.1,0.5-7.5-0.6c-1.2-0.9-0.7-1.6,0.3-2.2c1.3-0.8,2.8,0.3,3.6,0       c-6.8-3.2-15.6-0.3-22.2-6.1c-1.5-1.3-3.8-0.9-5.8-1c-1.9-0.1-4.1,0.1-5.2-2.1C939.9,331.4,940.1,329.9,942,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E35C65"),
                d:
                  "M1010,343c-1.4,1.7-3.3,0.7-5,1c-0.3-0.2-0.5-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c0,0,0,0,0,0       C1006.7,343,1008.3,343,1010,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB6C74"),
                d:
                  "M1010,349c11.9-1.2,23.8-2,35.7-2c2.8,0,5.6-0.1,8.3-1c4.4-2.2,9.3-1.8,14-2.3       c3.8-0.4,7.7,0.4,11.4-0.6c0.9-0.2,1.7-0.4,2.6-0.4c3.5-0.2,7,0.4,10.4-0.8c7.5-0.1,15-0.7,22.5-1.3       c16.5,0.1,32.9-1.6,49.3-2.8c1.5-0.1,3-0.2,4.3,0.6c1.1,0.8,0.5,1.5-0.2,2.2c-4.2,2.9-9.3,0.8-13.7,2.4       c-5.2,1-10.7-0.6-15.9,1.2c-9.8,2-19.8,1.5-29.7,2.2c-14.2,1.1-28.4,1.6-42.6,2.6c-7.6,0.5-15.2,1.3-22.8,1.3       c-2.6,0-5.2-0.3-7.8,0.6c-2.3,0.5-4.6,0.3-6.9,0.4c-3.7,0.2-7.5-0.5-11.2,0.7c-3.5,0.5-7.1,0.6-10.6,0       c-5.7-1.7-11.7,0.3-17.4-1.3c-0.6-0.3-0.9-0.8-1-1.4c0.3-0.6,0.7-1,1.3-1.3C996.7,346.9,1003.4,347.8,1010,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6525C"),
                d:
                  "M1080,344c-0.7,0.3-1.5,0.9-2.2,0.9c-8-0.6-15.9,1.2-23.8,1.1c-3.9-1.1-7.9-0.8-11.9-0.4       c-2.2,0.2-4.2,1.1-5.7-1.4c-0.6-1-1.7-1.7-0.9-3.1c1.4-2.2,3.6-2.1,5.8-2.1c1.5,0,3,0,4.6,0c-0.8-1.6-2.1-0.7-3-1       c5.9-1.5,12-1.7,18-2c-0.7,3.4-4.2,2.4-6,4.1c0.7,0.7,1,2.4,3.2,1.1c2-1.2,5.2-1.5,6.3,0.7c1.2,2.4,2.4,0.5,3.4,0.7       C1071.9,343.4,1076.2,341.5,1080,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D75E67"),
                d:
                  "M1005,343c0,0.3,0,0.7,0,1c-1.5,0-3,0-4.8,0c1.1,3,4.9,0.9,4.8,4c-5.3,1.4-10.7-0.5-16,1l0,0       c-4.4,3.1-8.5-0.5-12.7-1c-1.8-0.2-0.4-2.7,0.7-4C986.2,340.9,995.6,342.4,1005,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6A71"),
                d:
                  "M989,349c5.2-2.1,10.7-0.5,16-1c1.7,0.2,3.6-0.6,5,1C1003,349,996,349,989,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D34F59"),
                d:
                  "M1080,344c-6.5,0.1-13-0.4-19.7,0.5c0.7-2.2,2.8-0.9,3.9-2.1c-2.8-1.2-5.1-0.8-7.5,0.8       c-1.6,1-1.5,0.8-1.9-1.4c-0.3-1.5-2.3-0.1-3-1.3c2.5-2.7,6.5-2.3,9.1-4.5c0.3,0,0.7,0,1,0c2.3-0.4,4.7-0.1,7-1       c6.5-3.5,13.7-1.9,20.6-2.5c3.9-0.3,7.7-1.7,12-0.9c3.7,0.7-0.2-2.4,0.4-3.6c10.7,0,21.3,0,32,0c1.7-0.8,3.5-3.6,5.2,0       c-5.8,4.6-12.9,4.6-19.8,5.1c-4.9,0.3-9.9,0.5-14.8,1.1c-10.3,1.3-20.7,2.4-31.9,6.3c9.9-0.5,18.6,0.8,27.3-0.3       c4.9-0.6,9.9-1.2,14.7,0.4c0.5,0.4,0.5,0.9,0.2,1.4c-7.6,0.6-15.3,1.3-22.9,1.1c-3.3,1.3-6.8-0.4-10.1,1       C1081.3,344,1080.7,344,1080,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6525C"),
                d:
                  "M1069,335c-2.4,0.1-4.1,4.7-7,1C1063.8,332.3,1066.8,336.1,1069,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D34F59"),
                d:
                  "M1095,328c1,0,2,0,3,0c0.1,0.7,0.9,1.6-0.4,1.9C1096.2,330.2,1095.1,329.8,1095,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7079"),
                d:
                  "M864.1,321.9c0-1.6-0.1-3.3-0.1-4.9c0.3,0,0.6,0,0.9,0c0,0,0,0,0,0c1.2,1.7,1.5,3.3,0,5       C864.7,322,864.4,322,864.1,321.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA6B73"),
                d:
                  "M865,322c0-1.7,0-3.3,0-5c2-0.1,2-1.5,2-3c0.3,0,0.7,0,1,0c0,1.6,0,3.3,0,5.1c3.8-2.7,6.9-3.2,9.2,1.4       c0.2,0.4,0.9,0.9,0.9,0.9c3.9-3.8,7.3,0.6,11,0.7c6.8,0.1,13.5,1.3,20.3,2.6c8.9,1.8,18.1,2.1,27.2,1.2c2.5-0.3,4.6,0.2,5.5,3       c-0.7,1.2-1.2,2.5-1,4c-7.2-3.1-14.8,0.1-22.1-1.5c-2.3-0.5-4.5-0.7-6.6-2c-2.2-1.4-4.5-2.2-6.9-0.5c-0.7,0.5-1.7,0.9-2.3,0.4       c-6-4-12.7-0.9-19-1.8c-6.2-1-12-3-18-4.6C865.7,322.7,865.3,322.3,865,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D4545E"),
                d:
                  "M1139,328c-1.7-2.2-3.3,0.3-5,0c0.7-1.5,0.1-2-1.5-2c-2.3-0.1-4.6,0.6-6.8-0.5c0-0.5,0-1,0-1.5       c16.4,0,32.9,0,49.3,0c0.3,2.1-1.2,2.3-2.7,2.6c-2.7,0.4-5.3,1.5-8.1,1.1c-6.6,0.4-13,2.3-19.7,1.7       C1142.6,329.2,1140.6,329.7,1139,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84852"),
                d:
                  "M1165,327c3.2-1.5,7.1-0.6,10-3c0.7,0,1.3,0,2,0c2.5-0.4,6.1,1.8,6.4-3.4c0-1,3-0.4,4.6-0.5       c0.5,0.4,1.1,0.7,1.7,0.8c1.2,0.3,2.6,0.5,2.6,2.2c0,1.3-1,1.9-2,2.5c-0.8,0.5-1.7,0.9-2.6,1.2c-3.7,0.4-7.3,1.4-10.9,2.4       c-2.2,0.1-4.4,0.1-6.5,0.1c-1.9-0.2-4,0.2-5.4-1.5C1165,327.5,1165,327.3,1165,327z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B94B54"),
                d:
                  "M1188,326c1.2-0.9,2.3-1.7,3.6-2.6c-0.3-2-3.3-1.3-3.6-3.3c0.3,0,0.7,0,1,0c3-0.9,7.4,2.4,8.9-2.9       c3.7,2.1,3.2,5.6,2.9,8.9c-3.6,0.2-7.1,2.1-10.8,1.2C1189.2,327,1188.5,326.6,1188,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A24"),
                d:
                  "M1198,271.9c-0.4,0-0.7,0-1.1,0c-1.1-5.3,3.4-6.5,6.4-8.8c2.3-0.7,4.7-0.6,7.1-0.3       c5.2,3.2,11.4,1.7,16.9,3.3c3,0.9,6.1,0.3,9.1,0.6c0.8,0.1,1.5,0.3,2.2,0.7c0.4,0.3,0.6,0.8,0.6,1.3c-0.8,1.3-2.4,0.2-3.3,1.2       c-3.6,0-7.2-0.1-10.8,0c-2.8,0.1-0.3,1.2-0.3,1.9c-5,0-10-0.1-15.1-0.1C1206,271.3,1202,271.1,1198,271.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2331"),
                d:
                  "M1198,271.9c4-1.6,7.9-1.4,11.9-0.1c-3,0-6,0.1-8.9,0.1C1200,272,1199,272,1198,271.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6F262C"),
                d:
                  "M1251,272c2.3-0.1,2.9,1.1,3.1,3.3c0.3,4.3-2,7.8-3.1,11.7c-1.1,0.6-1.4-0.4-1.9-1       c1-2.9,1.8-5.8,2.5-8.8c0.6-2.3,0.1-3.8-1.6-5.2C1250.3,271.7,1250.6,271.7,1251,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E29093"),
                d:
                  "M1251,272c-0.3,0-0.7,0-1,0.1c-2.3-0.7-4.6-1.4-6.9-2.1c-1.1-1-2.9,0.4-4-1c-0.1-0.3-0.2-0.6-0.3-0.8       c0.6-3.1,2.9-2.1,4.8-2.1c2.1,0.6,4.5,0.4,6.2,2.1C1251.2,269.1,1253,270,1251,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791622"),
                d:
                  "M1239.2,268.9c1.4,0.1,2.8-0.1,4,1c-0.9,0.1-1.7,0.2-2.1,1c-1.5-1-3.2-1.1-5-1       C1236.8,268.8,1238,269.1,1239.2,268.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80313A"),
                d:
                  "M1249,286c0.6,0.3,1.3,0.6,1.9,1c0.1,1.3-0.6,2-1.9,2.1C1249,288,1249,287,1249,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D49"),
                d:
                  "M1275,322c2.6-2,5.7-2.3,8.8-2c5.2,0.5,10.4-1.3,15.6,0.4c-0.3,2.3-2,1.5-3.1,1.4       c-2.5-0.3-5.9-1.9-3.6,3.2c0.5,1.1-0.6,0.9-1.4,1.2c-5.3,2.2-10.9,1.6-16.4,1.7C1272.8,326,1274.9,324,1275,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A83D48"),
                d:
                  "M1275,322c0.5,0.9,0.4,3.6,0,6c0,0,0,0,0,0c-2.8,0-5,2.8-8,2c-0.4-0.8-1.2-1-2-1c1.1-3.4-0.1-6-3-8       c0.8,0,1.6-0.2,2-1c0.6-0.6,1.3-0.6,1.9-0.1c1,1.6,2,0.4,3,0.1C1270.7,321.7,1273.3,320.3,1275,322L1275,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("981D2F"),
                d:
                  "M1266,319.9c-0.6,0-1.3,0.1-1.9,0.1c-2.9,0.3-5-0.8-4.9-3.9c0.1-3.5,3.2-1.6,4.9-2.2       C1268.4,315.3,1268.8,316.5,1266,319.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D49"),
                d:
                  "M1267,330c2.5-1.5,5.1-2.5,8-2c-1,0.7-2,1.3-3,2c-1.9,1.1-3.9,1.1-6,0.9       C1266.3,330.6,1266.6,330.3,1267,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33D49"),
                d:
                  "M1275,322c-2-0.7-5,1.6-6-2C1271.2,320.1,1273.9,318.7,1275,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF4A54"),
                d:
                  "M516,172c-0.1-0.7-1.7-1.2-0.9-1.7c1.4-0.8,2.3,0.5,2.9,1.7C517.3,172,516.7,172,516,172z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE4B58"),
                d:
                  "M465,196c0.7,0,1.3,0,2,0c-0.3,2.4-2.2,2.6-4,3C462.4,197.2,465.1,197.5,465,196z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1338,341c1.3-0.3,2.5-0.6,3.8-0.9c4,1.4,8.2-0.6,12.2,1.1c7.4,1.9,15,0.3,22.4,1.7       c1.5,0.3,3.4-0.3,3.9,2c-2.6,2.3-0.6,5.4-1.5,8.1c-1.5,0.2-0.1-2.4-1.8-2.1c-0.8,0.1-1.6,0.4-1.6,1.5c0,3.6-2.1,3-4.1,2       c-2.3-1.3-3.6-3.7-5-6.4c0.3,3-0.3,4.9-3.3,4c-1.7-0.5-2.8-0.2-3.9,0.9c-0.4,0.4-1.7,0.5-1.7,0.4c-2.7-5-5.7-1.7-8.7-0.5       c-0.5,0.2-1.4,0.2-1.9,0c-1.7-0.9-1.7-1-2.5,0.9c-1.5-2.9-2.8-7.2-6.1-1.4c-0.6,1-1.6,0.8-2.5,0c-2.7-2.3-2.8-2.2-3.7,1.3       c-2.2-1.4-3.8-4.8-7.1-2.4v0c-3.4-2.1-7.2-1-10.7-0.8c-2.7,0.1-5.2,0.8-7.2-3.1c0.1,2.4-2.1,3.6-4.8,3.9       c-0.3-1.6,2.2-1.9,1.8-3.5c-2.4-1.2-3.2,5.8-6.1,0.9c-2.2,2.9-4.2,1.8-5.7-0.5c-1.6-2.5-5.7,1.2-6.4-2.9c0.4-1.9,5-4.5,6.7-3.2       c4.1,3.1,8.1,0.4,12.1,0.5c6.5,0.1,13.2-1.7,19.2,2.5c-0.4,2.5-0.4,2.5-4,2.5c2.3,0.3,4.4,0.5,5.8-1.6       c3.6-3.5,8.2-2.5,12.5-2.6c1.6,0,3.2,1.2,4.1-0.4c-5.2,0.1-10.9,1-16.5-1.1C1330,340.3,1334,340.2,1338,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1826"),
                d:
                  "M1382,375c-3.6,1.4-2.7,4.5-3.1,7.3c-0.5,3.2,2.2,7.2-1.9,9.7c-0.6-0.5-0.9-1.1-1.1-1.9       c-0.5-2.9,0.4-5.9-1-9.2c-3.3,2.3-4.9,8-10.2,4.7c-1.8-1.1-4.5-1.6-2.7-5.2c-2,1.9-3.8,2.7-6.3,2.3c-2.8-0.4-5.8-1.1-8,1.7       c-0.2,0.2-0.7,0.2-0.9,0.3c-1.2,0.7-3.2-3.3-4.1,0.9c-0.2,0.8-3.2,0.2-3.4-2c-0.1-1.5,0.3-3,0.6-4.4c0.1-0.7,0.1-1.2,0-0.5       c0,0-0.3,0-0.4,0.1c-0.7,0.3-1.5,0.3-2.2,0.2c-1-0.2-1.9,0.1-2.5,1c-0.2,0.4-0.5,0.7-0.7,1.1c-3,2.5-4.4,0.2-5.9-2       c1.7-4.2,4.6-6.1,9-6c3.8,0.2,7.5,1.1,11.2,1.2c2,0.1,3.8,0.3,4.5-2.4c0.6-2.1,3-2.3,4.7-3.2c0.4-0.2,0.9-0.4,1.3-0.5       c0.7-0.2,1.4-0.3,2.1-0.3c2.5-0.5,4.9-0.6,7.2,1c1.4,1,3.1,0.9,4.8,0.7c1.3-0.1,2.9-0.5,3.2,1.4c0.2,1.6-1,2.3-1.4,2.4       c0.9-0.3,1.7-1.3,2.1-3.4c0.4-2.4,1.8-5.2,5-1.9C1382,370.3,1382,372.6,1382,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87172A"),
                d:
                  "M1338,341c-3.6,0-7.2,0-10.8,0c0,0.3,0,0.7,0,1c6.1,0,12.2,0,18.6,0c-2.8,4.6-6.1,2-9.2,2.1       c-3.5,0.1-7,1.2-10.6,1.9c0,0-0.4-0.2-0.4-0.2c-0.4-0.3-0.6-0.7-1.1-0.8c0,0-0.5,0-0.5,0c-5.6-1.8-11.4-1.8-17.2-1.5       c-3.1,0.2-6.2,1.3-9.3,2c-0.6,0.2-1.5,0.7-1.8,0.1c-2.5-5.4-6.5-0.4-9.5-1.5c-0.1,0.3-0.1,0.6-0.2,1c-2.1,1.5-2.7-1.1-3.9-1.6       c-2.3,0.9,1.9,2.9-0.6,3.3c-1.2,0.2-3.3,0.1-2.4-2.9c0.4-1.3-2.5-1.7-3.9-0.9c-3.5,2-4.8,0.3-5.1-3c7.6-0.7,15.4,0.7,23-1       c0,0,0,0,0,0c1.7,0.8,3.5,0.7,5.2,0c0.6,0,1.1,0,1.7,0c7.2,0.9,14.5,0.2,21.8,0.4c2.1,0.1,4.3-0.4,6.4,0.4c1.7,0,3.3,0.1,5,0.1       C1334.6,340.6,1336.6,339.5,1338,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92192C"),
                d:
                  "M1282,357c11.9,0.8,23.8,2.2,35.6,3.7c2.4,0.3,4.9,0.2,7.4,0.3c1,0.3,2,0.7,3,1c2.8,2.3,6.2-0.7,9,1       c1.3,0,2.7,0,4,0c1.2,1.4,2.6,2.6,3.2,4.3c-0.5,1.4-1.6,1.3-2.9,1.2c-10.2-1.1-20.2-3.7-30.5-3.4c-3.3,0.1-6.6,0-9.6-1.9       c-0.4-0.3-0.5-1.1-0.5-1.1c-0.7,3.2-2.7,2.4-4.5,1.4c-2.6-1.5-5.4-1.4-8.2-1.4c-0.9,0-1.9-0.1-2.8-0.4c-3.6-0.6-7-3-10.9-1.4       c-2.9,1.2-4.4,0-5.2-2.7c-0.2-0.3-0.4-0.7-0.4-1.2c0.1-0.2,0.2-0.4,0.3-0.5c1.7,0,3.3,0,5,0       C1276.6,357.3,1279.5,355.7,1282,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92182D"),
                d:
                  "M1344,367c-2.6-0.1-3.1-1.8-3-4c6.8,0.8,13.7,1.3,20.5,2.4c4.8,0.7,9.4,0.8,14.2,0       c2.2-0.4,6-2.5,6.3,2.6c-2.5-1.3-4.2,0.1-4.1,2.2c0.1,2.3-1,3.5-2.6,3.5c-1.6,0-2.8,3.3-3.9,1.1c-1-2,2.1-1.2,3.1-2.1       c0.5-0.4,0.8-0.9,1.2-2.1c-5.5,3.4-9.4-3.9-14.7-1.5c-0.7-0.5-1.3-1.7-2,0c-0.3,0-0.7,0-1,0c-3.5,0.4-7-1.2-10.6,0.3       C1345.8,370.1,1344.8,368.2,1344,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1337,363c-2.9-1.4-6.4,3.2-9-1C1331,362.4,1334.2,361,1337,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1317,352c2.5-2,5.3-0.6,8-1v0C1322.5,353,1319.7,351.6,1317,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1316.6,352.6c-0.4,0-1,0.2-1.6,0.1c-0.2,0-0.6-0.8-0.5-1c0.4-0.7,1.1-0.4,1.6-0.1       C1316.3,351.8,1317.2,351.6,1316.6,352.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881827"),
                d:
                  "M1285,361c1,0,2,0,3,0c0.3,1.1-0.4,1.5-1.2,1.7c-2.5,0.6-0.1,2-0.3,3c-0.2,1.5,0.9-0.1,1.4-0.1       c2.4-0.2,4.9,0.6,7.2-0.9c1-0.6,2.7-0.5,3.4,1.1c0.7,1.6,0.2,3-1.5,3.7c-1.8,0.7-3.1,1.8-3.8,3.6c-0.6,0.5-1.2,0.6-2,0.5       c-2-0.9-3.8-2.5-6.1-0.7c-3,0.6-6,0.5-8.9,0.2c-0.5-0.1-1-0.2-1.4-0.3c-4.9-0.6-7.7-5-12.2-6.3c-2.5-0.7-4.6-2.2-7.4-2.4       c-2.9-0.2-4.3-2.4-2.9-5.4c0.8-1.6,1.4-3.4,2.7-4.7c4.8-0.1,9.5,0.1,14,2c0,0,0,0,0,0c-3.1,1.4-6.5-0.5-9.5,1.1       c0,0.1,0.6,0.2,0.9,0.5c0,0,0.4,1.6,0.8-0.2c0.4-1.9,3.6-1.4,4.7-0.7c1.3,0.8,2.1,0.1,3.1,0.2c0.9,0.1,2.7-0.1,2.4,0.8       c-1.1,3.3,1.4,2,2.6,2.2c1-0.4,1.5,0.1,2,0.8c0.7,1.1,2.8,1.2,4,0.3C1281.6,360,1283.3,360.3,1285,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1627"),
                d:
                  "M1255,354c0.3,1.9-0.6,3.4-1.7,4.9c-1.6,2.3,0.1,4.5,2,4.2c5-0.9,7.9,2.8,11.7,4.3       c2.7,1.1,5.1,3.4,7.9,4.6c-4.1,2.8-8.4,0.5-12.5,0.1c-7.5-0.8-15.1-1.6-22.6-2.7c-0.8-0.1-1.6-0.2-2.3-0.5       c-2.4-1.6-3.6-2.9-0.7-5.7c1.9-1.8,4.5-4.2,2.4-7.8c-0.8-1.4,0.3-2.2,1.5-2.5c1.7-0.5,3.5-0.8,5.3,0.1       C1249,353.2,1252.2,352.3,1255,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721426"),
                d:
                  "M1246,353c-2.1,0.1-4.3-0.4-6.1,1.3c2.5,4.1,2.2,7.6-2.4,10.1c-2.9,1.6,0.1,2.5-0.5,3.6       c-0.6,0.7-1.3,1.1-2.1,1.1c-6.7-0.3-13.5-0.7-19.9-3.1c-0.9-2.4-0.3-2.8,2.2-2.5c3.3,0.4,6.7,0.1,10.1,0.1       c0.3-2.4-2.9-0.8-2.7-3.2c2.6,2,4.2-4.2,7-0.2c1.8-2-2.1-2-0.7-3.7c1.9-0.3,3.1,2.7,5.4,1c-2.1-1.3-2.4-4.7-5.8-4.6       c-0.8,0-0.3-0.6,0.2-0.8c0.5-0.1,1-0.1,1.5-0.1c4.7,0,9.3,0,14,0C1246,352.3,1246,352.7,1246,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1282,357c-2.7-0.4-5.5,1-8-1C1276.7,356.4,1279.5,355,1282,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A24049"),
                d:
                  "M1190,326c3.6,0.9,7.2-1.7,10.8,0c-0.1,3.4-0.7,6.8,1.2,9.9c0,0-0.4,0.2-0.4,0.2c-1,1-2.2,1-3.4,0.5       c-0.6-0.4-0.7-1.4-1.8-0.9c-1.5,0.7-3.3,0.7-4.8,0.2c-2.2-0.8-5.3-0.9-5.8-3.8C1185.3,329,1187.5,327.3,1190,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E2515B"),
                d: "M1300,254c1,0.3,3.4-0.7,2,2C1300.7,256,1300,255.3,1300,254z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E15B64"),
                d:
                  "M813,306c-2.4-1.9-5.8,0.7-8-2C808.2,302.5,811,302.6,813,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1120"),
                d:
                  "M1215,366c7.4-0.6,14.6,2.5,22,2c0.7,0,1.3,0,2,0c5.7,2,11.6,2.1,17.5,3c4,0.6,7.5,2.3,10.8,4.5       c0.8,0.5,1.9,1.1,1.6,2.3c-0.3,1-1.5,1.1-2.5,1.4c-5.4,1.3-10.6,3.5-16.3,2.8c-3.3,0.7-6.7,1.3-10,2c-1.8,1.7-3.9,1.3-6,1       c-12.7,1.2-25.4,2.7-38.1,4.4c-10.4,1.4-20.9,2.9-31.3,4.4c-3.4,0.5-7.2-0.5-10.6-1.8c-1.5-1.2-3.5,0.2-5-1v0       c-1.3-0.4-2.7-0.4-4,0c-0.7-0.3-1.3-0.7-2-1c-0.6-0.5-1.5-0.9-0.9-2c0.2-0.3,1.7-1-0.2-0.6c-0.6,0.1-1.1-0.9-1.2-0.9       c-3.2,2-5.1,2.3-10.6,1.5l0,0c-0.4-0.4-0.9-0.4-1.3-0.6c-1.6-0.8-4.5,0.9-5-2c-0.4-2.3,1.4-4,3-5.4c4.2-3.6,9.1-5.2,14.6-5.2       c2.9,0,4.2,2.4,5.8,4.2c0.4,0.3,0.7,0.6,1.1,0.9c1.1,0.3,2.4,2.9,3.2-0.3c0.4-1.6,1.6-2.8,2.8-2.1c3.1,1.7,5.3-2,8.2-1.1       c1.5,0.4,1.8-1.1,2.4-2c0.7-1.2,1.6-2.8,2.9-2.1c1.8,0.8,1,2.5,0.4,3.9c-0.4,0.8-0.5,1.6,0.4,2.5c0.1-2.7,0.5-5.4,3-6.7       c1.7-0.9,1.8,1.3,2.8,2c0.1-0.6-0.5-0.8-0.7-1.2c-0.8-1.6-3.5-3.4-0.4-4.8c2.3-1.1,6.2-1.8,6.9,1.4c1.5,6,5.9,7,10.6,8       c-1.3-1.3-2.5-3-5.1-2.5c-1,0.2-2.4-0.6-2.1-1.6c1.1-4.6-3.4-4.2-5.3-6c-1.4-1.3-5-0.7-4.4-3.7c0.6-2.9,3.5-2.5,5.8-2.7       c4.3-0.2,8.5,0.4,12.7,1c1.8,0.2,3.6,0.6,4.7,2.3C1203,364.7,1209,365.3,1215,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751626"),
                d:
                  "M1197,364c-5.9-1.4-11.9-2-18-2c-0.5-0.4-1.3-0.6-1.3-1.5c0.2-1.3,1.4-1.5,2.5-1.8       c-1.1-0.9-2.2-0.2-3.3-0.4c-1.4-0.3-3.6,0.1-3.6-1.6c-0.1-1.8,2.1-1.6,3.5-1.8c1.8-0.3,3.1-1,3.5-2.9c0.5-2.6,2.4-3.7,4.7-4.5       c1.5-0.9-0.3-3.4,1.9-3.9c4.3,1.9,8.7,3.3,13.4,3.5c1,0.4,2.1,0.6,1.9,2.1c-1,4.1-4.7-1.2-6.2,1.9c-0.3,1.1,5.9,2.3-1.3,3.6       c2.4,0.4,3.4,0.6,4.4,0.8c-6.7,4.6,0.7,4.2,2.1,6.1C1200.5,363.3,1197.9,362.4,1197,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57131F"),
                d:
                  "M1202,349c-0.4-0.8-1.2-1-2-1c-1.8-0.7-4.4-0.6-4-3.7c0.4-3.2,2.4-4.3,5.4-4.1c0.6,0.2,1.1,0.5,1.5,0.9       c1.4,2,2.7,4,4.1,6c0.8,1.8,1.3,3.3-1.7,2.6C1204.2,349.4,1203.1,349.2,1202,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751626"),
                d:
                  "M1201.2,357c0.3,0.2,0.6,0.4,0.9,0.6c-0.5,0.3-1.1,0.6-1.7,0.8c-0.2,0.1-0.7-0.3-0.7-0.5       C1199.6,356.8,1200.5,357.1,1201.2,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("77212C"),
                d:
                  "M1202.9,341c-0.3,0-0.6,0-1,0c-3.1-1.9-5.4,1.4-8.3,1.2c-1.7-0.1-3.4,1.2-5.1,0       c-1.3-1.2-1.7-2.5-0.9-4.1c0.5-0.6,1.2-1,1.9-1.2c1.7-0.4,3.3-0.9,5-0.9c1.2,0.2,2.3-0.6,3.5,0c1.2,0,2.5,0,3.7,0       C1202.1,337.7,1202.5,339.4,1202.9,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F232D"),
                d:
                  "M1220,251c1-0.3,2-0.7,3-1c0,0,0,0,0,0c3.1,3.8,7.7,4.5,12,6c1.7,1,3.3,2,5,3c1.9,1.3,1.1,2.3-0.3,3.2       c-1.4,0.9-2.9,1.1-4.5,1.2c-0.7,0-1.4-0.3-2-0.8c-2.9-2.1-6.2-2.4-9.6-2c-4-0.4-7.2-1.9-8.1-6.3       C1216,252.1,1218.5,252.2,1220,251z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2E35"),
                d:
                  "M1235,262.9c1.1-2,5.8,0.5,5-3.9c5.5,0.7,8.3,4.2,9.9,9.1c-2-0.3-4.2,0.4-6-1c-1.2-1.2-3-0.4-4.3-1.4       C1238.1,264.7,1236.1,264.5,1235,262.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A2E35"),
                d:
                  "M1235,256c-3.9,1-7.1-1.7-10.7-2.3c-1.9-0.3-1.1-2.4-1.3-3.7C1227.8,250.5,1231.1,253.7,1235,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771623"),
                d:
                  "M1203.1,263.8c-1.7,3-5.8,4.1-6.1,8.1c0,0-0.5,0-0.5,0s-0.5-0.1-0.5-0.1c-10.1-1-20.2-2.9-30.2,1.2       c-0.5,0.2-1.2-0.1-1.9-0.2c0.7-5.5,3.1-11.5-4-15c1.7,0,3.4-0.1,5.1-0.1c4.3,0.7,8.6,1.5,12.9,2.2c7,1.5,14.2,0.8,21.1,2.8       C1200.7,262,1202.2,261.4,1203.1,263.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A0343F"),
                d:
                  "M1191,272c1.3,0,2.7,0,4,0c-1.9,1.5-2.8,4.5-6,4c0,0,0,0,0,0C1188.3,274,1190.1,273.2,1191,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891A21"),
                d:
                  "M1203,261c0-0.3,0-0.6-0.1-0.9c0.5-0.9,1.3-1.3,2.3-1.6c0.5-0.1,1-0.1,1.4,0c6.1,0.7,12.5-0.1,18.1,3.2       c1.4,2.1,0.1,2.9-1.7,3.3c-4.6,0.7-8.7-1.5-13.2-2C1207.5,262.6,1204.6,264.1,1203,261z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA868F"),
                d:
                  "M1203,261c2.1,1.5,4.5,0.7,6.8,1.2c0.7,0.4,1.8,0.4,0.9,1.7c-2.6,0-5.1,0-7.7,0c-1.2-1-2.7-0.6-4-0.9       c0.3-0.6-3.8-1.7,0.2-2C1200.5,260.9,1201.8,261,1203,261z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791722"),
                d:
                  "M1205,259c-0.4,0.8-1.2,1-2.1,1c-2.4-0.4-4.9-0.7-7.1-2c2.5-2.3,5.5,0.1,8.1-1.1       c0.2,0.1,0.4,0.2,0.6,0.3C1205.1,257.8,1205.5,258.3,1205,259z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63171F"),
                d:
                  "M1220,251c-0.7,1.8-2.5,2.1-4,3c-0.7,1.1-0.8,3-2.9,2.4c-3.2-2.8-6,1.4-9.1,0.5c0,0,0,0,0,0       c0-1.2,1-2,2.1-3.4c-2.7,0.2-4.7,0.4-6.7,0.4c-1.6,0-3.3-0.3-3.1-2.3c0.2-1.6,0.5-3.3,3.1-3.8c2.9-0.5,5.7,2.1,8.5,0.1       C1212.3,247.8,1215.7,251.2,1220,251z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("982F39"),
                d:
                  "M1191,272c0.1,1.7-1.5,2.6-2,4c-3.5,2.9-8.4,1.6-12.2,3.8c-0.2,0.1-1.1-0.4-1.1-0.5       c1.2-5.1-3.5-1.7-4.7-3.2c2.8-0.5,5.5-4,8.6-0.5C1182.7,272.1,1187.3,273.5,1191,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("982F39"),
                d: "M1164,279c2-0.7,4-1.3,6-2C1168.8,280.1,1168,284.2,1164,279z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DEA7AD"),
                d:
                  "M392,343.2c-0.3,0.5-0.4,1.2-0.7,1.3c-0.7,0.3-1.2-0.3-1.1-0.9c0-0.4,0.4-0.9,0.7-1       C391.1,342.5,391.6,342.9,392,343.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7828A"),
                d:
                  "M440,376c-1.3-0.7,0.2-4.2-3-3c0.1-1.8,1-2.9,2.9-3c2.6,0.3,3.1,1.7,2.2,4       C441.6,374.9,441.2,375.9,440,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA454D"),
                d:
                  "M442.1,374c0.2-1.9-1.2-2.8-2.2-4c0-0.9,0-1.8,0-2.8c-0.3-0.5-0.3-1,0.2-1.3c1.6,1.7,2.4,3.8,3.1,6       c0.3,0.7,0.5,1.4,0.8,2.1C443.3,374,442.7,374,442.1,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD5B61"),
                d:
                  "M440,365.9c-0.1,0.4-0.1,0.9-0.2,1.3c-1.5-2.2-2.9-4.5-3.1-7.2C438.8,361.4,439.5,363.6,440,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1621"),
                d:
                  "M500,343c-0.7,0.3-1.3,0.7-2,1c-3.5-1.7-3.2,2.4-4.9,3.3c-1.4,1.4-3.3,1.7-5.2,2.6       c2.2-0.5,4.3-0.9,6.5-0.7c4.6-0.3,9.3-0.5,13.9,0c3.9,0.4,7-0.7,9.5-3.2c2.1-2.1,4.6-3.1,7.3-4.1c3.2,0.2,5.7-2.8,9-2       c0.5,0.7,0.3,1.5,0.4,2.3c0.1,1.4,2.4,2,1.5,3.8c-2.6,1.5-5.4,1.7-8.3,1.5c-0.5-2.8-0.7-2.8-3.3-1c-1.7,1.2-3.8,2.2-3,5       c-0.4,1.6-1.4,2.6-2.9,3.2c-4.9,1.3-10.1-0.5-14.9,1.3c-0.5,0.2-1,0.2-1.6,0.1c-4.7-1.6-9.5-1-14.2-0.2c-1,0.1-2,0.2-2.9,0.3       c-1.2,0.1-2.3,0.5-3.5,0.2c-1.6-2-3.4-2.3-5.3-0.4c-1.4,0.8-2.8,1.1-4.4,1.2c-1.6,0-3.3,0.1-4.5-1.3c1.4-3.8,1.2-9.1,7.7-8.1       c1.4,0.2,5-3.7,5.9-4.7c1.2-1.5,3.2-0.7,4.8-0.6c1.1,0.1,1.9,1.8,3.6,1.1c-0.1-1.5-2-2.8-0.7-4.9c1.9,1.6,3.9,6.7,5.8,0       c0.2-0.6,5.3-0.5,7.9,1.1C500,340.1,500,341.5,500,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF2030"),
                d:
                  "M449,371c-1.2-0.7-1-1.9-1-3c4.2-3.2,9.5-4.3,14-7c2.1-2.6,5.1-3.3,8.2-3.8c1.4,0.2,2.4,0.8,2.2,2.4       c-5.4,3.8-11.8,5.7-16.8,10.1c-0.6,0.5-1.7,0.6-2,1.4C451.9,376.7,450.5,372.9,449,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("86181D"),
                d:
                  "M470,358c-2.7,1-5.3,2-8,3c-1.7-4.9-1.7-5,5-5c1.7,0,3.4,0,5,0C472.5,357.9,470.5,357.1,470,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B85E66"),
                d:
                  "M1849.1,323.9c-2.9-1.3-6-1.6-9.1-2.1c-0.2-0.7-0.8-1.9,0.7-1.4c1.8,0.6,3.6,0.5,5.3,0.6       c6.4,1.2,12.8,2.5,19.2,3.7c5.9,1.1,11.8,2.2,17.8,3.3c1.5,1.5,3.2-0.3,4.7,0.2c2.1,0.9,5.6,0.1,5.2,4.1       c-0.7,0.5-1.4,0.8-2.2,0.9c-3.7,0.4-7.1-0.8-10.6-1.3c-7.8-2.7-16-3.7-24-5.6C1853.7,325.7,1851,325.8,1849.1,323.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4585C"),
                d:
                  "M1893,332c-1.1-2.8-4.2-1.5-6-3c-0.5-0.7-1.5-0.3-2-1c0-0.7,0-1.3,0-2c5.7-0.1,10.9,1.8,16,4       c0,0,0,0,0,0C1898.7,332.3,1896.1,333.3,1893,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B85D64"),
                d:
                  "M1885,328c0.8,0,1.6,0.2,2,1c-1.4,0-3.2,1.4-4-1C1883.7,328,1884.3,328,1885,328z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0454D"),
                d:
                  "M1788,323c0-0.3,0-0.6,0-1l0,0c6.3,0.4,12.7-0.9,19,1c1.3,1,2.9,0.3,4.3,0.5c-1.4-0.3-3,0.4-4.3-0.6       c-0.7-1-1.3-2-2-3c3.1-0.9,6.4-2.8,8.9,1.2c4.7-2,9.3,1.6,14,0c6.4,1.2,12.8,2.4,19.2,3.6c7.6,0.2,14.9,1.5,21.7,5.1       c1.9,3.6,0.2,5.1-3.3,5.3c-1.8,0.1-3.5,0.1-5.3-0.1c-11.2-1.7-22.5-3.2-33.7-4.9c-0.6,0-1.1-0.2-1.7-0.3       c-8.6-1.1-17-3.1-25.6-3.9C1795.5,324.9,1791.1,326.2,1788,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF4953"),
                d:
                  "M1827.9,321.3c-4.7,2.2-10.1,1.1-14.2,0.1c-2.9-0.7-5.9-0.5-8.7-1.3c-2.7-2-5.8-2.8-8.8-1.4       c-3.3,1.5-4.9-2.1-7.9-1.9c-2.8,0.1-5.8-0.6-8.8-0.6c-5.8,0.1-11.2-2.9-17.3-2.3c-1.4,0.1-3.2-0.2-5.2,1.4       c0.7-2.2-0.2-4.1,2.2-4.3c15.3,1.5,30.5,4,45.7,6.5C1812.5,318.7,1820.2,320,1827.9,321.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801D23"),
                d:
                  "M1867.9,330c-6.8-2.4-13.9-3.6-20.9-5.1c0.5-0.8,1.3-0.9,2.1-1c10.4,1.8,21,3,30.9,7       c-0.2,0.2-0.4,0.4-0.6,0.6c-1.8,0.9-3.6,0.1-5.4-0.1C1871.9,331.2,1869.7,331.6,1867.9,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C4424C"),
                d:
                  "M1709,308c-0.7-1.8-5.1,3.5-4-2C1706.6,306.2,1708.7,305.3,1709,308z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B45960"),
                d:
                  "M1943,340c0,0.8,0.2,1.6,1,2c-1.9,1.8-3,1.5-6-2c1,0,2,0,3,0C1941.7,340,1942.3,340,1943,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B85D64"),
                d:
                  "M1938,340c2.4-0.5,3,4.4,6,2c0.7,0,1.3,0,2,0c0.9,2.4,3.1,2.6,5.1,3.3c0.9,0.3,1.8,1,1.8,2       c0,1.5-1.4,1.5-2.5,1.8c-5.8-0.4-11.2-2.7-16.7-4.2c-12.8-4.3-26.2-6.4-39.1-10.4c-1.5-0.5-3.5-0.1-3.7-2.4       c0.7,0,1.4,0,2.1-0.1c2.7-0.7,5.3-1.3,8-2C1913.1,334.2,1925.2,338.4,1938,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CC4E57"),
                d:
                  "M1469.2,316.1c20,0.2,39.8-1.3,59.8-2.2c1.4-1,2.8-1.1,4.2-0.1c0.5,0.9,0.5,1.7-0.2,2.5       c-2.6,1.7-5.4,1-8.2,1c-7.7,0.2-15.4-0.5-23,1.7c-9.1,1.1-18.2,0.5-27.3,1.4c-15.5,1.6-31.2,0.6-46.7,2.8       c-12.7,0.6-25.4,1-38.1,2.1c-2,0.2-4,0-5.7-1.3c-0.6,0-1.3,0-1.9,0c0.3-0.7,0.6-1.4,0.9-2c16-0.5,31.9-1,47.8-2.8       c9.8-1.1,19.7-0.8,29.5-1.2c1.6-0.1,3.4,0.5,4.7-1C1466.2,315.9,1467.9,317,1469.2,316.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831823"),
                d:
                  "M1435.1,313.1c4.7,2.2,9.8,0.1,14.7,1.5c-5.7,0.1-11.3,1.9-17.1,1.5c-1.9-0.1-4-0.8-5.7,1       c-2.2-0.1-4.5,0.5-7.7-1.2C1425.1,313.7,1430,313,1435.1,313.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831823"),
                d:
                  "M1469.2,316.1c-1.2,1.2-2.8,0.7-4.2,0.9c-7.3,0-14.7,0-22,0c3.8-2.1,7.8-0.7,11.7-0.9       C1459.5,315.8,1464.4,316.1,1469.2,316.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("831823"),
                d:
                  "M1428.9,317c3.7,0,7.4,0,11.1,0C1436.4,318.4,1432.6,318.5,1428.9,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D05762"),
                d:
                  "M1497,330c-0.2-0.5-0.3-1.3-0.5-1.3c-6.8-1.1-12.9-4.9-20.2-4c-5.1,0.6-10.3,0.7-15.3-0.6       c0.3-2.6,2.5-2.2,4.1-2.3c2.8-0.2,5.5,0,8.3-0.1c6.5-0.8,13.1-1,19.6-1c2.6,0.1,5.2,0.1,7.8,0c0.6-0.1,1.2-0.1,1.7,0       c4.7,0.1,9.3-0.1,14,0c2.2,0,4.4-0.1,6.6,0.2c0.5,0.1,1,0.2,1.5,0.3c1.5,0.7,3.2,1.3,4.3,2.5c2.2,2.3,4.2,3.4,7.2,1.1       c1.5-1.1,3.6-0.6,3.1,2c-0.6,3.1,1.2,3.2,3.1,2.8c3.7-0.7,6.3,0.5,7.6,4c0.7,1.8,1.6,1.6,3.1,1.4c4.7-0.6,5.3,0.1,4,4.6       c-0.4,1.3-1.3,2.3-1.9,3.5c-2,1.9-4.8,1.1-7.1,1.8c-0.8,0.1-1.5,0-2.1-0.4c-2.3-6.5-6.8-9.2-13.7-8.1c-0.3,0.1-0.7,0.2-1,0       c-7.7-4.7-17.1-2.8-24.9-6.6c-3.2-1.6-4.7,2-7.4,1.4C1498.2,330.9,1497.5,330.6,1497,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D16D77"),
                d:
                  "M1429,330c2.7,0,5.3,0,8,0c3.7,2.8,8.1,1.7,12.3,1.9c0.9,0,1.8-0.8,2.7,0.1v0c1.9,0.9,3.9,0.7,5.9,0.6       c7.4-0.3,14.8,1.5,22.2,0.1c1-0.2,2.1-0.2,3,0.2c9.2,4.9,19.7,5,29.4,8c4.9,1.5,5.9,2.8,4.7,6.5c-2.2,1.2-4.6,1.6-7,1.7       c-9.3,0.7-17.4-2.8-25.5-6.5c-5-2.3-10.4-1.7-15.7-1.5c-3.7,0.2-7.2,0-10.8-1.2c-7-2.2-14.3-2.5-21.6-1.9       c-4.3,0.4-8.6,0.3-12.9,0.2c-2.5-0.1-5-0.3-6.9-2.2c0.1-4.4,3.8-4.3,6.6-5C1425.2,330.6,1427.3,331.5,1429,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D16670"),
                d:
                  "M1517,347c0.4-6.2-5.2-4.6-8.1-5.5c-3.3-0.9-6.9-0.6-9.9-2.9c-1.3-1-2.9-0.7-4.3-0.7       c-3.6,0-7.3,0.6-9.9-3.1c-1.1-1.5-3.1-1.1-4.7-0.9c-8.1,1.2-16.1-0.6-24.2-0.1c-1.6,0.1-3.5,0.5-3.9-2c1.4-2.1,3.5-2,5.7-2       c13.1,0.1,26.2,0,39.3,0c0.7,0,1.3,0,2,0c4.8,2.2,9.8,4,15.1,4.7c3.2,0.4,6.3,0.3,9,3.1c2,2.1,5.7,0.6,8.6,1.5       c2.9,0.9,5.1,2,2.9,5.5c-1.7,2.4-4.1,2.5-6.7,2.5c-2,0-4,0-5.9,0.6C1520.2,348.2,1518.4,348.4,1517,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0636D"),
                d:
                  "M1474,323c-4.3,0.6-8.8-1.2-13,1c-8.1-0.4-16.2,1.6-24.2,1.2c-11.3-0.6-22.2,1.4-33.4,1.9       c-5.6,0.3-11.1,1.2-16.6-0.5c-1.6-0.5-2.8-0.7-2.8-2.6c14.7-0.8,29.3-2.1,44-2c2.7,1,5.2-0.3,7.7-0.5       c11.7-1.2,23.5,0.6,35.2-1.3C1472.6,319.9,1474.9,320,1474,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF6872"),
                d:
                  "M1429,330c-0.3,2.5-2.3,1.9-3.8,2c-3.3,0.2-6.2,1.1-8.2,4c-0.7,0.9-1.8,1.2-2.7,0.8       c-3.3-1.4-5.4-0.9-7.1,2.6c-1.3,2.7-4.2,2.1-6.5,0.6c-1.3-0.9-0.9-2,0.3-2.9c-4.4,2.5-8.4,6.2-14,4c-0.1-3.7-0.8-7.3,0-11       C1401,330,1415,330,1429,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D16670"),
                d:
                  "M1452,332c-4.5,3.8-9.8-1.2-14.5,1.1c-0.5,0.2-0.3-2-0.5-3.1c3.7,0,7.5,0,11.2,0       C1449.8,330,1451.7,329.6,1452,332z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CF636D"),
                d:
                  "M1354,341.1c-4.1-0.3-8.2,0.5-12.2-1.1C1345.9,340.5,1350.1,338.7,1354,341.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5A64"),
                d:
                  "M1328,339.9c-9.4-0.4-18.8,0.9-28.1-0.8c8.1,0,16.3-0.1,24.4-0.1C1325.5,339,1326.9,338.7,1328,339.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA5A64"),
                d:
                  "M1298.1,339.1c-1.7,1.1-3.5,1.1-5.2,0C1294.7,339,1296.4,339.1,1298.1,339.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D2737C"),
                d:
                  "M1387,341c0.3,0,0.7-0.1,1-0.1c4.3,0.1,7.5-2.7,11.1-4.4c2.1-0.9,3.9-0.5,5.2,1.6       c-0.9,1.7-2.7-1.3-3.7,1c2.4,0.6,4.6,2.9,6.1-1.7c0.8-2.4,3.2-5,6.6-2.1c1.1,1,2.5,0.7,3.8,0.8c8.5,2,17,0.6,25.5,0.3       c6.1-0.2,12.2,0.4,17.8,2.9c4.4,2,8.7-0.1,13.1,0.4c5,0.5,9.7,0.7,14.5,3c6.8,3.2,14.1,5.9,22,5.4c-0.1,2.4-2.1,2.1-3.6,2.3       c-5.5,0.9-11,1.4-16.5,0.8c-1.3,0.1-2.6-0.2-3.9,0c-0.3,0-0.7,0-1-0.1c-0.6-0.6-1.3-1.3-2.1-1.3c-5.7,0.1-11.2-1.8-16.9-1.6       c-15.1-1.2-30.1-3-45.2-3.4c-11.9-0.4-23.9-1.1-35.8-1.6C1385.7,342.4,1386.3,341.7,1387,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A01A24"),
                d:
                  "M1886,442c7.2-4,14.5-7.7,23.1-7c0,0,0,0,0,0c-0.4,2.8-4,2.1-4.8,4.4c-0.1,0.2-0.6-0.1-1,0       c0.6,0.1,1.3,0.1,1.8,0.6c-3.4,3.9-8.3,1-12.2,2.8c0.2,0.6,0.5,1.5,0.8,2.4C1891.5,443,1887.5,445.3,1886,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB1D2B"),
                d:
                  "M1905,440c-1.5-0.2-3.3,0.7-4.3-1.4c3.3-0.1,5.3-3.2,8.4-3.7c3.9,0.9,7.8,1.8,11.2,3.9       c-2.8,1-6.1-0.2-8.7,2c-0.2,0.1-0.9,0-0.9-0.1C1909.4,435.5,1906.7,441.3,1905,440z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC828A"),
                d:
                  "M1940.3,443.7c3.9,1.1,7.8,2.1,11.7,3.2c3.3,1.1,6.6,2.1,9.9,3.2c0.2,0.9,0.1,1.4-1,1       c-7.5-1.4-14.7-3.8-21.9-6.2C1939.5,444.5,1939.9,444.1,1940.3,443.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA3541"),
                d:
                  "M1967.9,452c3.9,0.2,7.5,1.6,11.1,2.9c-0.3,0.3-0.7,0.7-1,1c-3.7-1-7.3-2-11-3       C1967.2,452.6,1967.5,452.2,1967.9,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E3696F"),
                d:
                  "M1967.9,452c-0.3,0.3-0.6,0.6-0.9,0.9c-2-0.7-4.3-0.6-6.1-1.9c0.3-0.3,0.7-0.6,1-1       C1963.9,450.8,1965.9,451.4,1967.9,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771720"),
                d:
                  "M2012,473c-1,0-2,0-3,0c-2.8-1.5-6.9-1.1-7.5-5.9c-0.2-1.3-3-3.2-5.5-3.1c0.3-5-3.7-5.2-7-6       c-1.7-2.6-5.1-1.1-7.1-2.9c-0.1-4.9,3.6,1.9,4-1.7c0.6-1.4-1.7-1.1-2-2.3c1.2-1.3,2.8-1.3,4.4-1.5c0.5,0.1,0.9,0.2,1.3,0.5       c2.9,2.7,6.1,4.8,9.8,6.3c2.3,1.8,4.5,4,7.5,4.6c0.3,0.1,0.6,0.2,0.9,0.3c-1.5,1.6-3.9-0.1-5.4,1.5       C2005.7,466.2,2008.9,469.6,2012,473z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851724"),
                d:
                  "M1997,470c-0.2,1.4-0.3,2.8-0.5,4.2C1995.1,472.6,1993.6,471,1997,470L1997,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1140,456c-9.7,1.7-19.2,4.9-29,6c-4.7-0.6-8.7-3.2-13.9,1.1c-4.3,3.5-11.1,3.4-17,1.3       c-0.6-0.2-1.3-0.7-1.5-1.3c-1.1-4.8-4.9-4.4-8.4-4.6c-1.3-1.1-0.1-3.2-1.7-4.1c-0.6-2.7,0.8-5.2,0.6-7.9       c-0.1-1.1,0.2-2.5,1.7-2.7c1.8-0.3,2.1,1.2,2.5,2.5c0.4,1.2,0.2,2.7,1.5,4.1c2.1-2.6,5.8-1.6,8.1-4.5c1.5-1.9,8.2,2.5,8.6,5.7       c1.6-1.4,2.2-3.4,3.9-4.5c2.6-1.6,4.9-2.1,6.1,1.5c-0.2,0.3-0.4,0.5-0.7,0.7c0.2-0.1,0.4-0.3,0.6-0.5c0.6-4.8,0.6-4.8,4.8-2.9       c0.8,0.3,1.5,0.7,2.3,1c0.8,0.3,1.2-0.2,1.5-0.9c0.2-0.6-0.1-1.3,0-2c-0.8,0.2-0.5,1.3-1.3,1.5c-2,0.7-3.2-0.2-4.1-1.7       c-0.9-1.5-0.5-2.5,1.1-3.6c3.5-2.5,6.7-1,9.8,0.3c1.7,0.7,1.5,1.3-0.9,5.9c2.6-5,2.6-5.1-2.5-7.1c-1.5-0.6-2.7-1.3-2.7-3.1       c0-0.9,0.2-1.7,1-2.2c1.5-0.9,2.4,0.3,3.4,1.2c2.6,2.6,4.3,0.7,5.9-1.6c1.7,1.9,0.6,3.8,1.1,5.2c0-1.4-0.2-3.2,0.3-4.9       c2.1,0.5,2,1.7,2.2,2.8c0.2,0.9-0.4,1.8-0.4,2.7c1.2-2.4,3.7,2.2,5-1.1c0.9-2.1,3.7-0.8,5.4-1.8c4.3,2.4,8.4,4.1,13.4,1       c1.5-1,3.1,0.8,3.6,3c0.8,3.5,0.1,6.9-0.2,10.4c-1.5,2.6-3.5,2.6-5.7,1.2c-0.5-2.3,2.4-1.2,2.7-2.8c0.2-0.9,0.9-1.8,0.1-2.8       c-0.9-1-1.7-0.1-2.6,0c-0.7,0.1,0,0.4,0.1,0.3c0.9-0.7,2.1-0.6,2.4,0.4c0.7,2.3-1.1,3.1-2.8,3.8       C1143.2,453,1140.6,453.7,1140,456z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821729"),
                d:
                  "M1070,458c4.7-1.7,7.8-0.8,9.6,4.6c0.9,2.8,4.9,1.2,7.3,1.8c2.6,0.7,5.9-1.9,9.3-1.5       c2.2,0.3-0.2-1.6,0.8-2.5c2.1-1.8,11.9-1.6,14.2,0.6c0.1,0.1-0.1,0.6-0.2,0.9c-7.8,1.7-15.4,4.3-23.4,4.6       c-0.9,0-1.7,0.9-2.6,1.4c-0.6,0.6-1.1,1.4-1.9,1.6c-9.5,1.6-18.6,4.9-28.3,5.6c-0.5-0.1-1-0.3-1.5-0.6c-1-1-0.4-1.9,0.2-2.7       c4.8-1.8,9.7-3.5,14.3-5.9c3,0.8,5.8,0,9.3-0.7c-4.2-4.1-6.7-1.8-9,0.9c-2.8-1.6-5-1.2-6.4,1.9c-0.4,0.8-0.8,1.6-1.8,1.3       c-1.3-0.3-1.4-1.4-1.2-2.3c0.4-2.3-0.4-5.1,2.4-6.6c2.6-0.6,4.2-3.2,7-3.3C1068.8,457.1,1069.4,457.5,1070,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1628"),
                d:
                  "M1215,432c2.9,2.9,6.5,0.5,9.6,1.4c1.6,0.5,4.7-1.2,4.4,2.6c-2.7,0.7-5.3,1.3-8,2       c-9.1,1.7-18.1,3.4-27,6c-1.9,1.2-4.2-0.3-6,1c-2.7,0.7-5.3,1.3-8,2c-0.6-0.6-0.6-1.3-0.4-2c1.7-2.5,4.4-2.7,7-3.1       c3.5-0.5,6.6-1.2,7.7-5.5c0.8-3,3.2-2.4,5-0.7c2.2,2.1,3.8,3,5.4-0.8c0.9-2.3,3.3-1.2,4.8-0.5       C1212.4,435.7,1214,434.8,1215,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F162A"),
                d:
                  "M1180,445c0,0.7,0,1.3,0,2c-12.4,2.7-24.8,5.3-37.2,8c-1,0.2-1.9,0.6-2.8,1c-2-4.3,2.7-3.3,4-5       c2,1.3,3.9,2.1,5-1c5.1-1.7,9.4-5.6,15.5-4.3c2.7,0.6,5.9-0.3,8.7-1.4C1175.6,443.3,1177.9,443,1180,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151E"),
                d:
                  "M1054,474c4.7,0.5,9.1-1.6,13.6-2.4c5.8-1.1,11.6-2.4,17.4-3.6c0,1.3,0,2.7,0,4c-2.1,0.4-1,2.4-2,3.9       c-1.3-1.8-2.6-3.9-4.9-2.7c-5.1,2.7-10.8,1.5-16.2,2.8c-2.1,1.1-4.4,0.7-6.6,0.6C1054,476.5,1052.9,475.7,1054,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1219.2,441.1c0.6,0.2,1.4,0.2,1.3,1.1c-0.1,0.3-0.8,0.7-1.1,0.7c-0.6-0.1-1.4-0.5-1.5-0.9       C1217.7,440.9,1218.6,441.2,1219.2,441.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1188,445c1.8-1.8,4-0.7,6-1C1192.2,445.8,1190,444.7,1188,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81222E"),
                d:
                  "M1045,481c5.9,0.6,11.7,0.9,17.7-0.4c2.3-0.5,5.4,0.4,7.5,1.7c3.8,2.3,7.4-0.6,11.2,0.5       c0.7,0.2-0.2-3.1,1.3-4.2c4.2,4.7,11,5.3,17.4,1.5c0.3-0.2,0.7-0.4,0.8-0.3c5.4,4.4,11.6,0.2,17.3,1.6c3.6,0.9,3.6,0.8,4.5-2.6       c2.3,3.3,6.2,2.7,9.2,2.6c6-0.2,11.9-0.3,17.9-0.4c5.1-0.1,5.1-0.3,5.9-5.2c-0.1,3.4,1.2,4.4,4.7,4.3       c9.5-0.2,19.1-0.1,28.5-0.2c6.7-0.1,12.9,2.4,19.4,1.5c2.7-0.4,6,1.4,8.2-1.7c0.1-0.2,0.6-0.2,0.9-0.3c1.4,4.5,5.5,0.6,7.7,2.6       c-0.8,2.8-2.5,3.9-5.5,3.7c-2.1-0.1-4.3-0.2-6.3,0.7c-0.4,0.1-0.9,0.1-1.4,0.1c-4.3-1.8-8.2-0.2-12.2,1.2       c-0.5,0-0.9-0.2-1.3-0.4c-1.5-1.5-3.3-2.2-5.3-1.1c-1.7,0.9-3.5,0.9-5.3,0.5c-5.8-1.2-11.8,0.5-17.6-0.7       c-1.9-0.4-2.7,0.7-3.5,1.9c-0.9,0.7-1.7,1.9-2.9,0.8c-1.9-1.7-2.5,0.5-3.7,1.1c-2.5,1.1-1.1-2.7-2.3-2.5       c-2.3,0.4-4.8,0.4-6.9,1.7l-8.3,1.1c-2.6-2-6-1.8-8.9-2.9c-3.3-1.2-6.6-0.1-9.3,2.4c-2,1.8-1.4-1.2-2.5-1.4       c-5.4-0.9-10.8-1.4-16.3-0.5c-0.2,0-0.3,0-0.5-0.1c-6.1-0.5-12.1,0.1-18,1.6c-0.9,0.2-1.5,1-2.7,0.6c-8.6-3-17.5-3.2-26.4-2.5       c-3.9,0.3-7.4,3.1-11.8,1.4c-1.5-0.6-3.2-0.6-4.7-1.4c-2.3-1.2-4.7-1.4-7.2-0.3c-3.9,1.7-7.9,0.3-11.8-0.1       c-1.7-0.2-2.7-1.4-1.5-3.2C1028.9,481.1,1036.9,480.4,1045,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d:
                  "M1213,486c0.2-1.8,1.1-1.9,2.7-1.7c3.3,0.4,6.7,0.4,9.3-2.3c3.7,1.8,7.9-0.8,11.7,1.4       c1,0.6,3.3-1.6,4.3-3.4c1.4,3.5,4.2,4.2,7.6,4c5.6-0.2,11.1-0.6,16.7,0.2c2.4,0.3,3.8-2.1,6.7-1.8c2,0.2,5.1-0.4,6.9,0.4       c3.6,1.7,5.6-3.4,8.9-1.3c0.2,0.1,0.8-0.3,0.9-0.2c4.1,5.9,8.4,1.2,12.4,0.1c2.1-0.5,3.5,0.4,5.1,1.2c2.5,1.2,4.9,2.5,7.8,1.4       c1,1.7-0.1,2.5-1.4,3c-1.3,0.5-2.2,1.4-2.9,2.5c-1.6,1.9-3.8,1.7-6,1.9c-8.4,0.5-16.9-0.5-25.3,0.5c-8.5,1-17.1,0.2-25.7,0.2       c-3,0-6-0.5-8.9,0.3c-1.9,0.5-3.3,0-4.2-1.6c-2.1-3.8-4.4-0.6-6.6-0.1c-0.5,0.1-0.9,0.1-1.4,0.1c-5.4,0.6-10.6-1.5-16-1.3       C1213.2,489.4,1211.4,489,1213,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1825"),
                d:
                  "M1045,481c-7.9,1.9-16,1.7-24,3c-0.7,0.5-1.4,1-2.2,1.1c-2,0.2-4,0.4-5.6-1.1c-0.1-2.3,1.8-2.1,3.1-2.3       c9.8-1.8,19.4-4.5,29.1-6.7c2.6-0.4,5-1.6,7.7-1c0.3,0,0.7,0,1,0c0.1,2.7,2.2,0.8,3.1,1.3c1.6,1.1,3.5-1.1,4.9,0.6       c-0.3,2.4-2.2,1.7-3.7,2C1053.8,478.9,1049.4,480,1045,481z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M1287,435c1.7,1.5,3.8,1.9,6,2c-4.1,1.1-8.1,2.6-12.7,2.2c-4.1-0.4-8.7-2.8-12.5,1.4       c-0.3,0.4-1.8-0.3-3-0.7c-0.4-0.4-0.5-0.5-0.5-0.5c-0.1-0.1,0,0,0.3,0.3c0.5,0.5-0.1,0.8,0.3,0.3c0,0-0.1-0.1-0.2-0.2       c-0.4,1.4-2.9,1-2.6,2.5c0.6,3.6-2.3,3.6-4.2,4.7c-0.3,0-0.7,0-1,0c-1.2-2.7,1.6-2.7,2.7-3.8c0.8-0.8,1.2-1.4,0.6-2.5       c-0.5-0.9-1.2-1.9-2.2-1.1c-3.1,2.4-5.1-0.5-7.4-1.5c-1.6-0.7-3-1.9-3.6,0.9c-0.2,1,0.5,3.3-1.7,2.3c-0.7-0.3-2.5-3-1.4-4.2       c1.7-2-0.8-2-0.9-3c10.2-3.8,20.6-3.3,31-1c3.7-2.4,7.3,0.5,11,0l0,0C1286.8,432.6,1286.8,433.8,1287,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1326,427.3c1.2,1.1,2,1.8,3.4,3.1C1327.2,430.1,1326.2,429.9,1326,427.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1628"),
                d:
                  "M1230,436c0-1.4,1-2,1.8-2.8c0.5-0.5,1.1-1.2,1.5-0.5c0.3,0.5-0.2,1.5-0.4,2.2       C1232.3,436.2,1231.1,436,1230,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681320"),
                d:
                  "M1212.2,448c0.9,0.1,2.5,0.1,2.5,0.3c0.2,1.2-0.9,0.6-1.5,0.7c-0.4,0.1-0.9-0.2-1.3-0.3       C1212,448.5,1212.1,448.2,1212.2,448z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1232.1,454.2c1.6-1.9,3-1.1,4.9-0.8C1235.4,455.4,1234,455.2,1232.1,454.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M1101,449c-1.8-1.6-3.3-3.5-5.8-0.4c-1.3,1.6-2.8,4.6-6.1,3.2c0.1-1.4,1.8-0.2,2.1-1.4       c-1.8-1.6-4.5-1.6-6.2-3.7c-0.5-0.6-2.9-2.2-1.9,1.1c0.3,1-0.3,1.3-1,1.2c-2.6-0.3-4.5,0.5-6.3,2.6c-0.8,1-3.8,1.2-3.5-2       c0.2-1.8-0.1-3.5-1.5-5.2c-0.4,3.6-1,7.1-1.8,10.5c-0.1,0.2-0.3,0.4-0.4,0.6c-1.3,1.1-2.7,1.4-4.2,0.6       c-2.2-1.2-4.4-1.6-6.4,0.4c-0.3,0.3-1.1,0.7-1.3,0.5c-3.3-3.4-8.4-0.1-11.2-3.1c1.3,0.8,3.8,1.1,2.5,4.2       c-1.4,0.8-2.6,0.1-3.8-0.4c-5-1.9-9.8-1.8-15-0.4c-3,0.8-7.2,0.1-9.6-3.1c-2.6-3.4-5.1-4.2-9.6-3c-4.5,1.2-7.5,4.6-11.7,6       c-3.7,1.2-6.9,2.1-10-0.9c-0.1-0.1-0.2-0.1-0.4,0.2c-1.4,2.4-3.4,2.2-5.6,1.3c-1.9-0.8-4.1-1-5.9-0.4       c-10.8,3.8-22.1,0.4-33.1,2.4c-3.9,0.7-7.9,0.8-11.3,3.8c-1.8,1.6-5,1.3-7.1-0.5c-2.3-1.9-4.5-3.4-7.6-2.3       c-0.7,0.2-1.4,0.4-1.8-0.3c-2.5-4.4-3.9-1.1-6.2,0.4c-3.1,2.1-4.7,8.1-10.5,4.8c-0.6-0.3-1.7,2.3-4,2.4c-5.1,0.2-5.6,0-4.6-5.3       c3.1-4.1,0.4-5.9-3-7.4c-1.6-0.7-3.7-0.7-4.1-3c-0.3-1.6-2.5-3.5-1.5-4.5c2.3-2.3,2.5-6.1,5.7-7.8c2.1-1.1,3.1-0.2,3.8,1.7       c0.5,1.4-0.8,3,0.7,4.2c0.1,0.7,0.1-0.2,0.3,0.4c0.2,0.6,0,1.1-0.1,1.7c0.1-0.1,0.2-0.4,0.3-0.8c0-0.3,0-0.7-0.2-0.9       c-0.2-0.3-0.4-0.5-0.6-0.8c0.1-3,0.1-5.7,4.6-4.7c1.9,0.4,3.3-2,5.2-2.6c1.2-0.3,2.5-1.4,3.7-0.2c1.2,1.1,1.6,2.6,0.9,4.1       c-0.7,1.6-1.3,3.1-0.3,4.5c-0.2-1.3-1.5-3.7,1.1-3.9c2.5-0.2,1.5,2.7,2.5,3.7c0.4-1.3-2.1-3.2,0-4.8c1.2-0.9,2.6-0.4,3.8,0.3       c1.8,1,2.8,2.3,1.8,4.5c1.6-0.6,2-2.9,4.9-3c-1.8-0.4-4,0.6-3.7-0.9c0.6-2.6,2.3-5.5,4.6-6.6c1.5-0.7,4.9-0.8,5.6,2.9       c0.2,1,1-0.9,1.8-0.9c0.4-0.2,0.8-0.4,1.3-0.5c0.5-1.4,1.8,2.5,2-0.3c0.1-0.6,0.6-1.5,1.3-1.1c3.8,2.3,6.1-1.6,9.3-2       c3.5,0,7.2-1.7,10.1,1.6c5-3.5,6.5,5.7,11.4,3.1c2.9-1.5,6.6-0.8,9.4-3.7c3.3-3.5,8.1-0.6,9.1,5c-1.9,1.3-4.4-0.6-6.2,1.2       c-0.7,0.4-1.5,0.3-2.2,0.8c0.8-0.4,1.8-0.3,2.5-1c2-0.1,4.2,0.6,5.9-0.9c3.1,1.8,3.6,2.4,4.1,5.6c0.7-6,8.8-3,8.5-9.5       c1.6,3.5,4,5,7.5,4.8c0.1-1.9-1.6-1.6-2.9-2.7c3.1-0.1,5.2-1.2,7-2.9c0.4,0.3,0.4,0.3,0.4,0.3c-0.1-0.7,0.1,0.1-0.4-0.3       s0.1-0.8-0.3-0.3c0,0.1,0.4,0.4,0.3,0.3c-1.8-3.2,2-1.7,2.1-3.3c-0.2-1.7-2.9-0.3-2.8-2.1c0.1-1.4,1.8-2.3,2.8-2.4       c4.5-0.6,8.9-2.3,14-1.5c-1.4,1.7-3.4,0.3-4.5,1.5c0.9,0.4,1.8,0.7,2.6,1.1c-0.5,2.3-2.7,0.7-3.8,2.2c2.6,0,5.9,3.2,6.1-2.9       c2.3,2.8,0.3,4.9,0.2,7.1c-0.2,0.1-0.3,0.2-0.4,0.3c1.4,5.6,3,6.1,7,2.2c-0.8-1.3-2.6-1.4-3.3-2.8c-0.1-0.2-0.2-0.4-0.3-0.6       c0.7-1,1.6-1,2.6-0.7c0.9,0.3,1.8,1,2.9-0.1c-0.6-2.2-3-0.5-4.2-2.2c3-0.5,1.7-3.3,2.8-4.9c2.1,2.2,4.6,3.8,4.4,7       c-0.1-2,2-2.7,2.8-4.5c-2-2.1-5.3-0.7-7.2-2.5c-0.6-1.4-3.8-0.9-2.8-3c1-2,2.8-1,4.2,0c1,0.7,2.3,1.4,3.1,0.2       c2.6-3.8,3.8,0.4,4.5,1.2c4.6,5.6,10.7,6.6,16.1,2.2c0.7-0.5,1.2-1.5,0.1-1.8c-1-0.3-3.1,1.4-1.9-1.3c0.5-1.2,1.2-3.3,2.9-2.8       c1.2,0.3,2.8,1.5,2.4,3.4c-1.2,5.7,2.2,4.7,5.5,3.7c1.4-0.4,3-0.9,3.2,0.8c0.2,2.5-2.2-0.2-3.1,1.5c1.8,0.3,0.3,4.3,3.9,2.8       c1.2-0.5,3.1,0.2,1.4-2.5c-1.3-2.2-0.4-4.5,3.4-3.6c1.7,0.4,4.5,2.2,5.4-1.8c0.3-1.2,1.9-0.3,2.1,0.6c1.1,4.2,3.3,3.1,5.5,1.3       c1.5-1.3,2.1-3,3.8,0.5c1.2,2.5,4.6-1.3,7.6-0.5c-1.4-2-3.4-1.4-5.4-2.8c2.8-0.3,4.7-1,7.1,0.7c3.6,2.4,8,0.5,12,0.5       c2.2,0,4.7,1.7,7.2,0.2c0.5-0.3,1.7,0.9,1.3,2.2c-0.4,1.1-2.4,2.5-0.7,3.2c1,0.4,3.2-1,4.4-2.1c2.3-2,3.6-1.4,6.7-1.9       c1.8-0.3,4.6,0.7,6.1-1.2c1.4-1.8,3.1-1.7,4.9-1.7c1.4,2.5-1,3.6-2.2,4c-4.3,1.6-6.2,4.5-5.8,9c-1.2,2.2-5,0.3-5.8,4.3       c-0.6,3.2-2.9-4.3-5.3,0.6c0-2.9,0-4.8,0-6.8c-0.2,0-0.4,0-0.7,0c-0.2,2-0.3,3.9-0.5,5.9c-0.2,0-0.4,0-0.5,0       c-0.1-1.9-0.2-3.9-0.4-5.8c-1.4,3.1-4.8,3.7-7.2,1c-0.7-0.8-0.8-2.6-2.2-1.4c-1.1,1-0.6,2.5,0.9,3.3c0.9,0.4,1.8,0.8,2.8,0.9       c3,0.5,3.6,3,2.4,4.8c-1.4,2.1-0.6,3.5,0.4,5.3c-2.8-0.8-4.3-2-2.7-4.8c0.6-1,2.4-2.1,0.5-3.2c-2-1.1-5.6-2.9-6.4-0.7       c-0.9,2.5-4.3-0.8-3.5,2.3c0.3,1.2,1.1,2.2,2.4,2.2c2,0,1.4-1.9,2-3.1c0.8,1.2,1.5,2.3,2.1,3.4c0.9,1.8-0.7,2.9-1.6,3.8       c-1.7,1.7-1.5-0.8-2.2-1.2c-1.5-1-3.1-1.7-4.6-2.5C1101.5,446.3,1104.1,449.1,1101,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M879,442c-2.3-4.1-1.5-8.8-1.6-13c-0.4-11-3.2-21.5-4.6-32.3c-0.3-2.6-0.5-5.1-0.8-7.7       c2.2-0.2,1-2,1.3-3c0.6-2.3,0.8-4.6,4.3-4c1.7,0.3,3-1,2.9-2.7c-0.3-3.6,1.8-4.6,4.7-5c1.5-0.2,2.7-1.2,4-1.9       c2.6-1.3,2.7,0.4,2.5,2.3c-0.7,1.5-2.1,2.3-3.1,3.6c-2.1,2.1-0.7,5.9-4.2,7.7c-1.2,0.6,1.8,1.4,2.8,2.2c1.2,0.7,2,2.2,3.7,1.5       c0.6-0.3,1.3-0.4,1.9-0.4c2,0.4,4.2,0.1,6.1,1.3c0.3,0.4,0.4,0.8,0.3,1.2c-0.6,1.5,0.6,1.6,1.5,1.8c4.2,1,8.4,2.2,12.7,2       c3.6-0.1,6.9,2.8,10.6,0.5c0.1-0.1,0.6,0.7,0.7,1.2c1.4,7.6,7.5,9.8,13.7,11.8c7.6,2.2,15.3,1.6,23.1,1c1-0.3,2-0.4,3.1-0.5       c11.7-2,22.4-6.2,31.6-13.9c1.9-1.3,3.3-3,4-5.2c0.4-2.1-0.1-4.6,2.7-5.4c7.5,0.2,14.7,2.1,22,3.4c10.7,1.9,21.5,3.4,32.3,5       c1.6,0.2,3.3,0.4,4.8,1.1c2,1.4,4.5,0.6,6.6,1.7c0.2,0.2,0.4,0.4,0.5,0.6c5.4,1.1,10.8,2.9,16.3,3.2c3.3,0.2,6,1.2,9.2,2.2       c-2.9,2.2-6.1,2.3-9.1,2.9c-15,2.9-30.2,4.9-45.3,7c-14.1,1.9-28,5-42.3,6c-0.3,0-0.5,0.4-0.7,0.6c-0.3,0.3-0.6,0.6-1,0.8       c-1.5,0.4-3,0.3-4.5,0.8c-0.4,0.1-0.9,0.3-1.3,0.3c-2,0.1-4.1,0.1-6,0.8c-0.5,0.1-0.9,0.2-1.4,0.2c-4.7,1-9.5,1.4-14.3,1.6       c-0.5,0-1-0.2-1.4-0.5c-7.5,0.3-14.7,2.5-22,4c-0.4,0.4-0.8,0.8-1.3,1c-11.2,2.6-22.7,3-33.9,5.3c-7.7,1.5-15.4,2.2-23.1,3.5       C883,437.4,880.6,438.8,879,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1178,361c0.3,0.3,0.7,0.7,1,1c-1.1,0.1-2.4,0-3.4,0.4c-1.2,0.5-2.1,2-0.2,2.3c4.1,0.7,6.7,6,11.7,3.1       c0.1,2.4-2.3,2.1-2.7,3.6c-0.4,1.3-0.1,3,1.3,2.3c5.7-2.6,4.4,4.4,7.8,5.1c-4-2.1-9.6,0-12.5-4.8c-0.6-0.9-2.1-1.3-1.5-2.9       c0.5-1.3,0.2-2.6-1.1-2.8c-1.7-0.2-3.6-0.1-5.2,0.3c-1,0.3-0.2,1.3,0.1,2.1c0.8,2,2.8,2,4.7,3.1c-3.1,3-4.5,1.6-5.8-3       c-0.8,3.7-4.9,5.5-0.4,8.2c-1.6,1.4-3.7,1.5-4.7,0.5c-2.3-2.2,1-4.4,0.9-6.7c-3.7-0.6-1.1,10.4-7.5,3.7       c-2.3,1.4,1.9,3.1-0.4,4.1c-2,0.9-2.3-1.1-2.9-2.4c-0.6,2.2-5.2-2.8-4.3,2.3c0.2,0.9,0.2,1.9-0.9,2c-2.2,0.2-3.8-0.8-4.3-3.2       c0.2-0.3,0-0.1-0.2,0.2c0.2-0.3,0.8,0,0.2-0.2c-3.3-3.1-7.2-4.4-11.2-3.2c-3.7,1.1-7.9,2.3-10.2,6c-1,1.6-4.1,4.4,1.4,4.2       c0.8,0,1.6,1,2.4,1.6c-7.7-1-15.3-2-23-3c-1.6,1.5-3.5,0.8-5.2,0.4c-9-1.9-18.4-1.9-27.3-4.4c-1.7-0.6-3.5-0.6-5.2-1.4       c-2.2-3.2-1.7-5.5,1.4-7.2c1.8-1,3.8-0.3,5.8-2.2c1.5-1.5,2.7,1.8,3.7,4.6c0.1-3.7,2.1-4.4,4.4-5.2c8.1-2.8,16.7-2.6,25-3       c3.3-0.2,7.7,0.4,11.3,1.7c1.3,0.4,2.2,1.4,3.4-0.1c0.9-1.1,0.9-1.9,0.2-3.1c-1.8-3-0.4-3.4,2.4-3c2.2,0.4,4.3,0.3,6.3-0.8       c1.3-0.7,2.9-0.6,4.4-0.4c4.2,0.7,8.5,0,12.5-1.9c2.8-0.6,5.6-0.3,8.4-0.4C1165,358.8,1171.7,358.2,1178,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M1377,390c0,0.7,0,1.3,0,2c0.2,2.3-4.5,1-3,3.9c1.3,2.5,3.6,2.6,6,1.1c1.2,6.2,0.1,5.6-5.6,5.9       c-4.1,0.2-9.1-0.2-13.1,2.2c-1.2,0.7-3.2,1.4-3.5,0.2c-1.4-4.8-6.9-3.4-8-2.9c-4.4,1.9-7.9-1.2-12-0.7       c-6.1,0.8-12.6,0.6-18.7-0.6c-2.4-0.5-4-1.2-6.2,0.1c-1.1,0.6-1.4-0.3-0.2-4.1c-3.9,2.8-3.7,6.4-3.7,9.9       c-2,0.8-3.9,2.7-6.1,0.3c-0.9-1-1.5-0.2-2.5,0.1c-4.9,2-7.6-0.2-7.2-6.6c-1.4,2.3-2.6,3.7-4.6,4.6c-3,1.4-4.1,0.9-5.3-1.7       c-1.3-2.8-2.8-3.1-4.8,0.7c-0.6-4.7-1.5-7.7-6.1-4.8c-0.8,0.5-2.3,0.1-3.4,0.1c-0.5-0.5-0.4-1.1-0.4-1.6       c-0.1,0.6-0.1,1.2,0.4,1.6c-0.1,1.5,1.4,2.7,0.4,4.7c-1.4-1.4-2.2-4.1-5-2c-0.8,0.6-1.3-1.2-0.4-2c2.1-1.9,2.1-5.2,4.9-6.6       c-1.8-2.1-5.3,0.7-6.2-2.9c-0.2-0.8-2.3,1.1-3,1.8c-1.3,1.4,0.8,0.6,1.2,1c0.9,0.9,0,1.4-0.4,2c-0.6,1-1.1,2.1-2.7,1.1       c-3.3-2.2-1.6,1.4-2.3,2.3c-1.8-1.5-1.8-1.5-1.5-4.9c0.1-1.1-0.7-1.8-1.6-2.4c-2.8-1.9-5.4-1.4-8.4,1.4       c-0.5,0.4-1.6,0.3-2.4,0.3c-1-0.1-1.5-0.7-1.1-1.7c0.6-1.3,1-3.3,2.9-2.8c2.9,0.9,4-1.5,6.2-2.4c-1.4-1.5-3.9,1.3-4.3-1.2       c-0.4-2.4,2.3-1.9,3.6-2.6c1.2-0.7,3,0.3,4.1-1.2c7.9-1.9,15.7-3.9,23.9-3.6c4.9,2.8,5.3,4.3,1.6,8.2c-0.7,0.8-0.2,1.2-0.1,1.6       c0.5,1.9,0.9,0,1.2-0.2c1-0.5,1.9-0.7,2.9-0.3c2.4,1,5.2,0.5,6.7-0.6c5.1-3.4,8.3-1.2,11.3,2.6c2.3,2.9,5.3,2.9,8.5,1.9       c1.6-0.5,3.1-1.1,5.3-0.5c-1.1-0.9-1.9-0.6-2.6-0.4c-1.4,0.2-3.2,1.2-3.3-1.3c-0.1-2.1,1.3-3.8,3.4-3.4       c2.9,0.5,5.8,1.3,8.8,1.5c0.8,0,1.5,0.6,1.4,1.7c0,0.3-1.8,1.9,0.3,1.2c3-1,6.3,0,8.9-1.7c3.2-2.1,5.4,0.2,6.8,1.8       c1.7,1.8,0.2,3.6-2.1,4.1c1,0.2,2.1,0.4,2.9-0.8c0.4-0.6,0.7-1.1,1.3-1.5c1.8-1.3,1.4,3.4,3.5,1.3c2-2,2.9-0.2,3.7,1.2       c1.3,2.1,2.3,1.8,3.7-0.1c2.5-3.3,8.1-3.2,11.6-0.1c0.3,0.3,0.5,0.8,1.1,0.9c-0.5-0.2-0.8-0.5-0.9-1.1c1.3-1.8,3.3-1.9,5.2-1.9       c0.3,0.2,0.5,0.3,0.8,0.2c-0.3-0.2-0.5-0.4-0.3-0.8c0.6-1.6,2.1-1.9,3.6-2.3c0.7-0.2,3.1,2.2,2.1-1.2c-0.2-0.8,0.2-2,1.5-2.1       C1377.3,387,1375.8,388.9,1377,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1526"),
                d:
                  "M1074,380c11,1.7,22,3.3,33,5c1.6,1.8,2.2,4,2.3,6.4c0,0.9,0.1,2.7,0.4,2.7c2.7,0.4,3.4,2.1,1.4,3.4       c-2.2,1.5-2.5-1.7-3.6-2.8c-1.8,0.1-0.9,2.6-2.5,2.7c-2.7-4.8-7.2-7.6-10.7-11.5c-0.4,2.7,2.1,3.9,2.4,6.1       c-1.5,0.8-4.6-5.2-4.7,1.2c0,0.8-1.6,0.7-2.7,0.4c-4.8-1.2-9.9-0.8-14.2-3.9c-0.9,2,1.6,2.3,0.9,4.2c-4-2.8-5.5,0.2-7.1,3       c0,0,0,0,0,0c-1.9-0.6-2.7-1.6-1.3-3.5c0.6-0.8,1-1.9-0.7-2c-1.3-0.1-1.2,0.5-1.2,1.8c0.1,2.2-1.3,3.6-3.8,2.8       c-5.8-1-11.6-2.4-17.5-2.9c-7-0.6-13.8-2.5-20.8-3.3c-7.3-0.9-14.4-2.5-21.7-3.8c-0.6-0.5-0.8-1.1-0.9-1.8       c0-1.2-0.3-2.2-1.7-2.5c-1.8-0.3-2.6-1.7-3.1-3.3c-1.7-3.9-5.9-4.6-8.9-6.9c-1.4-1.1-3.6-1.3-3.7-3.6c1.7-3.5,3.9-3.9,6.6-0.9       c4.1,3.1,9.4,2.7,13.9,4.6c3.2,1.4,6.9,1.8,9.9,4c1.6,1.2,3.4,1.2,4.6,0.2c2.4-2,4.9-1.5,7.5-0.9c4,1,8.2-1.3,12.2,0.5       c1.4,0.6,3.5,0.1,3.9,2.3c-2.1,1.5-4.5,0.1-5.8,0.5c1.3-0.5,3.7,1.3,5.8-0.5c6.1-0.3,11.8,2.9,18.1,1.8       c1.7-0.3,3.6,0.4,5.2,1.4c2.8,1.8,2.6,3.1-0.8,5.2c1.6-0.2,3-0.7,3.2-2.3c0.4-4.3,3.1-3.5,5.8-2.7c0.2,0,0.4,0.2,0.4,0.2       c0.5-0.5-0.5-0.5-0.3-0.9C1073.9,380.3,1073.9,380.2,1074,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1133,437c2.3-1.7-5.4-2.3-0.5-5.2c1.5-0.9,2.4-3.8,5.3-4.2c0.6-0.1,3.2-1.4,3.2-3.6c0-0.3,0-0.7,0-1       c1,0.7,2.2,1.1,2.3,2.7c0.1,2.6,2.6,0.9,3.7,1.9c1.1-1.4,3.3-1.9,3.3-4.1c0-0.2-1.4-0.3-2.2-0.5c3.1-1.9,4.4-1.4,6.7,2.5       c1.4,2.8,0.6-5.8,2.6-0.5c0.4,1.1,1.3-0.3,1.9-0.7c2.5-1.7,3-4.6,4.1-7.4c2.3,1.3,3.9,2.3,0.7,4.5c-1.2,0.8-0.7,2.4-0.1,3.7       c1.4,2.9,1.3-1.2,1.7-0.5c2.6,4.1,6.2-0.5,9.4,1.2c3.3,1.7,6.9-0.4,10.1-2.9c0.9,2.7-0.7,3.6-2.1,4.7c-0.7,0.5-2,1.2-1.1,2.3       c0.8,1,1.6,2.3,3.2,2c0.7-0.1,1.3-0.2,1.3-1.1c-0.1-2.2,3-5.8,4.9-5.1c1.9,0.7,5.4-1,5.8,2.9c0.1,1.2,1.7,1.7,2.2,0.8       c1.5-2.8,7,0.1,6.7-5c0-0.6,1.7-0.1,1.7,0.7c0.2,2.9,2.1,3,4.2,2.8c2.9-0.1,1.9,2.7,3,4c0,0,0,0,0,0c0.2,1.4,0.4,2.9,0.6,4.6       c-2.4-0.5-4.8,0.4-7-1.3c-0.6-0.5-3.1-2.2-3.4,1.6c-0.2,3-3.9,3.1-6.1,0.4c-0.8-1.1-1.4-2.4-3-2c-1.5,0.4-1.1,1.9-1.2,2.9       c-0.4,4.4-4.3,4.1-6.9,4.6c-2.8,0.5-5.5,1.1-8.1,2.2c-4.4-0.7-8.4,1.6-12.8,1.9c-1.7,0.1-3.2,1.4-5-0.4c-1.2-1.1-2.7-0.2-4,0.8       c-2.7,2-5.9,2.5-9.2,2.8c-0.8-2.8,0.5-5.5-0.1-8.5c-0.9-4.7-3.7-4-5.1-1.9c-2.8,3.9-5.8,0.4-8.6,1.2c-0.6,0.2-0.8-0.6-0.5-1.4       C1135.2,437.8,1135.1,437.8,1133,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M879,442c-0.6-4.4,1.2-5.8,5.8-6.2c11-1.2,21.9-3.4,32.8-5.1c8.8-1.3,17.6-2.5,26.4-3.7       c1.7,2.1-0.4,3.4-1,5c-0.3,0.7-0.7,1.3-1,2c-2.6,2.3-4.8,6.3-9.2,2.9c-0.7,2.3-2.1,2.1-3.9,0.9c-0.1-0.5,0-0.7-0.1-1       c0-0.1-0.1,0-0.1,0.5c0,0.3,0.1,0.5,0.3,0.8c-0.2,0-0.2-0.1-0.1-0.2c-0.7,1.5-1.4,2.9-3.2,2.9c-0.6,0-2.2-0.1-1.5-1.5       c1.2-2.6-1.6-1.7-2.2-2.3c-1.6-1.4-1.5,0.2-1.6,1.5c-0.1,2.2-2.6,2.3-3.6,3.8c0.2,1.2,0.9,0.5,1.4,0.4c1.6-0.3,3.9-1.4,4.2,0.7       c0.4,2.2-1.9,1.3-3.3,1.2c-2.5-0.1-1.7,4-4.6,3.7c-0.6-0.1-1.4,1.1-2.1,0.2c-0.6-0.8-0.3-1.6,0.6-2c1.1-0.5,2.4-1,1-2.4       c-1-1-2.4-2.1-4-1.5c-1.3,0.5-0.4,1.7-0.2,2.6c0.2,1.6,0.5,3.2-0.9,5.6c-0.1-3.1-0.1-5.4-2-7.2c-2.2,1.8,2,5.1-2,6.4       c-0.2-1.8-0.9-3.8-0.4-5.4c0.5-2,1.6-4.6-0.2-5.3c-1.6-0.6-4.7,0.6-5.8,2.4c-1.3,2.2-1.5,1.7-3.6,0.7c-3-1.4-2.1,2.5-3,3.9l0,0       c-1.1-0.1-2-0.5-1.8-1.8c0.2-1.5,0.7-3.6-1.2-3.4c-1.6,0.2-4.3,1.8-3.7,3.9c1.1,3.4-1.4,2.6-2.9,2.6c1.7,4.8,4.6,7.2,8.9,8.9       c4.9,2,0.7,4.6-0.2,6.9c-2.6-0.2-3.2-1.8-3-4.1c0.2-0.4,0.4-0.9,0-1.1c-0.4-0.2-0.6,0.4-0.9,0.7c-0.5,0.5-1,0.8-1.7,0.7       c-0.4-4.3-3-0.4-4.4-1.2c-1.4-3.5,0.1-7.6-2-11C879,445.3,879,443.7,879,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A131F"),
                d:
                  "M1278,379c-5.2,2-10.8,0.5-16.2,1.9c-2.8,0.8-5.9,0.8-8.8,1.1c-1,0-2,0-3,0c6-1.5,11.9-3,17.8-4.5       c-2.6-0.1-4.3-7.7-7.9-0.8c-1.8-1.9,0.7-3,0.1-4.7c-6.3,0.7-12.3-2.1-18.6-2c-1.4,0-2.2-0.6-2.4-2c9.9,1.1,19.8,2.1,29.7,3.5       c2.1,0.3,4.2,0.4,6.3,0.5c0,0,0,0,0,0c3.7,1.1,7.6,0.1,11.3,0.9c0.6,0.1,1.3-0.2,2-0.1c2,0.6,4.9,0.6,4.9,3.2       c0,2.4-2.7,2.4-4.6,3c-1.4,0.4-3,0.4-4.4,0.5c-1.6-0.2-3.2,0.6-4.8,0.3C1278.9,379.6,1278.4,379.4,1278,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M967,423c0.3,0,0.7,0,1,0c5.3-0.8,10.8-0.3,16-2l0,0c2.2-1.3,4.8,0.4,7-1l0,0c1.5-1.2,3.5,0.2,5-1       c0.3,0,0.7,0,1,0c-0.4,5.8-5,3.6-7.9,3.9c-3.1,0.3-6.6-1.1-8,3.2c-0.1,0.3-0.5,0.6-0.8,0.9c-3.5-4.9-5.4,0.3-8,1.3       c-0.9,0.4-1.9,0.9-2.8,0.4c-3.7-2-7.1-2.1-10.3,1.1c-0.4,0.4-2.2,1.4-1.8-0.5c0.8-3.7-2.7-1.4-3.4-2.7       C958.4,425.4,962.7,424.2,967,423z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1130,388c1.8-0.6,3.9,1.1,5.8-1.3c1.7-2.2,1.9,1.8,3.2,2c2.1-1.5-0.8-3.3,1.1-4.9       c0.9,1.4,1.8,3.9,3.9,1.3c1.3,2.2-2.5,3-1,5C1138.6,390.1,1134.2,389.4,1130,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1285,433c-3.7,2.7-7.3-0.5-11,0c0.7-4.2,3.8-3.7,6.5-2.8C1282.2,430.6,1283.5,432,1285,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M1234,385c1.8-1.8,4-0.7,6-1c1.2,2.4-0.4,3.3-2.2,3.9C1235.5,388.5,1234.8,386.6,1234,385z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1287,435c-0.7-0.7-1.3-1.3-2-2c2.2-3.3,3.3,2.4,5.5-0.1C1289.9,435.7,1288.2,434.7,1287,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M943,432c-1.3-2,1.9-3.1,1-5c0.3,0,0.7,0,1,0C947.8,430.1,944.7,430.7,943,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1628"),
                d:
                  "M1215.2,427c1.9,0.4,3,1.4,2.4,3.7C1215.4,430.1,1216.1,428,1215.2,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1141.6,423.2c-2.3-0.5-4.2,0.4-6.2-0.9C1137.9,420.1,1139.4,421.8,1141.6,423.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1628"),
                d:
                  "M1215,432c-2.4-0.3-0.8-3.6-3-4c1-1.6,2-0.3,3,0C1215,429.3,1215,430.7,1215,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M1023,435c1-0.3,2-0.7,3-1c1.1,1.9,0.5,3.6-1.4,3.9C1022.9,438.3,1022,436.9,1023,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M961.9,431.5c0,0.7-0.4,1.3-1.1,1.4c-0.5,0.1-1.1-0.1-1-0.6c0.2-0.6,0.7-1.1,1.2-1.4       C961.5,430.4,961.8,431,961.9,431.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1148,423.3c-0.2,0.8-0.4,1.4-1.2,1.5c-0.7,0.1-1.5-0.1-1.2-0.9c0.1-0.4,0.9-0.6,1.5-0.8       C1147.2,423,1148.1,422.5,1148,423.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1145,391c1.3-1.4,2.7-1.4,4,0C1147.7,391.9,1146.3,391.9,1145,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M948.8,427c0.7,0.2,1.7-0.1,1.3,1c-0.1,0.3-0.7,0.7-1.1,0.7c-0.7,0.1-1.4-0.3-1.3-1.1       C947.8,427.3,948.5,427.1,948.8,427z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M1233,387.2c-0.3,0.5-0.4,1.2-0.7,1.3c-0.7,0.3-1.2-0.3-1.1-0.9c0-0.4,0.4-0.9,0.7-1       C1232.1,386.4,1232.6,386.9,1233,387.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("601121"),
                d:
                  "M1320,417c0.8,0.1,1.7,0.2,1.5,1.3c0,0.3-0.8,0.6-1.2,0.6C1319,418.5,1319.9,417.7,1320,417       C1320,417,1320,417,1320,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1149,391c1.7,0.2,3.6-0.7,5,1C1152.3,391.8,1150.4,392.7,1149,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1529"),
                d:
                  "M1294.4,434.3c-0.3,0.4-0.7,1-1.2,1.2c-0.6,0.1-0.5-0.5-0.4-0.9c0.2-0.6,0.4-1.2,1.2-1.2       C1294.2,433.4,1294.2,433.9,1294.4,434.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87181F"),
                d:
                  "M1480,351.1c-5.5,2.1-11.3,1.9-17,2.9c-11,1.5-21.9,3.7-33,4c1.3-3.2,6.1-0.3,7-4       c12.3,1.1,24-3.7,36.1-4.1C1475.8,348.4,1478,349,1480,351.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D76C7B"),
                d:
                  "M1480,351.1c-2.3-0.4-4.6-0.8-6.9-1.2c-2-1.9-5.1,0-7.1-1.9c0.1-0.3,0.2-0.9,0.2-0.9       c5.8,0.4,11.6,0.8,17.4,1.3c1,0.1,1.3,1.4,1.4,2.4C1483.3,351,1481.7,351.1,1480,351.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921927"),
                d:
                  "M1418,360c-1.8,1.8-4,0.7-6,1C1413.8,359.2,1416,360.3,1418,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A21"),
                d:
                  "M1499,361c5.4-0.9,9.3,3.3,14.3,4.3c5.7,1.1,11.7,2.5,17.5,5.6c-2.2,1.7-3.6,2.9-6.2,1.9       c-1.1-0.4-4-2.6-4.6,1.1c-3.9,0.5-7.7-1.8-11.8-0.8c-0.4,0.1-3.1-1-3.6-2.9c-0.5-2.1-2.4-1.7-3.7-2.3c-2.4-1.3-2.1-3.7-2.6-5.8       C1498.5,361.7,1498.7,361.3,1499,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A61A20"),
                d:
                  "M1499,361c0,0.3,0,0.7,0,1c-2,1.9-4-1.1-6,0c-0.3,0-0.7,0-1,0c-1.7-0.4-3.3,1.4-5,0       c-6-2.9-12.2-3.1-18.4-0.6c-1.3,0.5-2.1,0.3-3.1-0.5c-2.1-1.5-0.6-3.3-0.5-5c5.3,0.7,10.4-0.6,15.7-0.6       C1487.6,355.5,1492.8,359.6,1499,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1487,362c1.7,1.4,3.3-4.4,5,0c0.2,2.1,1.2,4,2.3,5.8c-1.2,1.3-2.4,0.4-2.8-0.5       c-0.9-1.8-1.2-3.4-4.2-2.9C1485.3,364.9,1486.9,362.9,1487,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1493,362c2-2.3,4,0.7,6,0c2.5,1.4,0.3,4.3,2,6c-1.3-0.1-3.3-0.6-3.2-1.6       C1498.2,362.4,1494.7,363.3,1493,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1452,358c2.7-1.8,5.8-2.3,9-2C1458.5,358.8,1455.5,359.8,1452,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE5B65"),
                d:
                  "M1602,363c-5.4,0.7-10.5,2.9-16,3c-0.3,0-0.7,0-1,0c-0.4-1.2,0-2.7-1.9-3c-1.1-0.2-2.3-0.6-2.3-2.1       c0.1-2.6-1.6-3.6-3.7-3.6c-2.8,0-3.7-3.2-6.3-3.3c-0.4-0.2-0.8-0.4-1.2-0.7c-1.1-1.1-2.2-2.1-3.7-2.6c-2.3-3.3-2.1-5.2,1.1-5.7       c2.9-0.4,5.8-0.6,7.5-3.4c0.4-0.6,2.5,0.8,1.3-1.2c0.1-0.5,0.4-0.9,0.8-1.1c1.9-0.9,4-0.6,6-0.7c2.8,0.1,5.6-0.1,8.4,0.3       c1,0.2,2.1,0.4,2.1,1.6c0,1.1-0.9,1.7-1.8,2.2c-2.1,1.2-4.6,0-7.1,1.5c2.3,1.2,3.9,2.7,3.4,5.5c-0.3,1.7,1.1,2.2,2.5,2.5       c1.8,0.4,3.6,0.3,5.4,0.4c1.9,0.1,4.4-0.5,5.4,1.5c0.9,1.7-1.9,2.5-2,4.2C1599.4,360.3,1606.1,357.9,1602,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF626D"),
                d:
                  "M1570,353c4.4,0,7.3,3.8,11.4,4.7c1,0.2,1.7,1.1,1,2.3c-1.4,2.3,0.4,1.9,1.6,2c4.6,0.2,3,2.1,1,4       c-2.7,0.3-5.3,0.7-8,1c-0.1-0.1-0.2-0.3-0.4-0.4c-2.8,0.1-5.5,1-8.3,0.6c-1.7-0.3-3.9,0-3.8-2.8c0.4-1.2,1.2-2,2.2-2.6       c2.5-1.5,3.8-3.1,2-6.1C1568.1,354.6,1568.7,353.5,1570,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CB616B"),
                d:
                  "M1567,369c0-0.3,0-0.7,0-1c1.3-1.4,3-0.9,4.6-0.9c0.5,0.1,1,0.4,1.4,0.9       C1571.2,369.8,1569,368.7,1567,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF626D"),
                d:
                  "M1573,368c-0.3,0-0.7,0-1,0c1.3-2.4,3.1-1.8,5-1c0,0,0,0,0,0C1576,368.5,1574.4,367.8,1573,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF6872"),
                d:
                  "M1577,367c-1.7,0.3-3.6-0.7-5,1c-1.7,0-3.3,0-5,0c-13,1.8-22.7-3.8-30.5-13.7c-0.7-0.9-2-4.3-3.5-0.3       c-3.3-2.9-7.5-4.4-11-7c2.1-1.9,4.6-0.9,6.9-0.9c2.1,0,3.8-0.4,5.1-2.1c4,0,8-2.6,12,0c0.7,0,1.3,0,2,0c1.8-0.4,2,1.1,2,2.1       c0.2,5,3.3,6.2,7.6,6.3c4.4,0.1,8.6,7.1,7.4,11.7c3.1,3.9,6.9,1.7,10.5,1.3c1.9-0.2,2-0.4,2.4,0.6       C1578,366.1,1577.3,366.6,1577,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0747A"),
                d:
                  "M1522,347c4.6,0.9,8.9,2.2,11,7c1.5,1.8,2.3,4.1,4.7,5.3c2.4,1.2,1.7,4.7-0.7,5.7       c-0.6-0.6-1.4-0.8-1.4-0.8c0.1,0,0.8,0.3,1.4,0.8c1.7,2,5.6,3.5,1.9,7c-1-0.4-1.9-0.8-2.9-1.2c-6-4-12.5-7-19.1-9.8       c-0.1-1-0.4-1.7-1.5-2.2c-7.1-3.2-14.4-5.8-22.2-6.6c-1.5-0.2-3.9,0.6-4.2-2.2c5.8-0.1,11.6,0.1,17.4-1c1.2-0.2,2.7,0.2,3.6-1       c2.3-0.3,4.7-0.7,7-1C1518.7,347,1520.3,347,1522,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E9767D"),
                d:
                  "M1489,350c2,2,5,1.5,7,1.3c6.4-0.6,11.2,5,17.5,4.1c0.4,2.8,4.7,1.7,4.8,4.8c0,1-0.8,0.8-1.4,0.9       c-9.3-2.8-18.3-6.6-27.9-8.3c-1.1-0.2-2-1.1-3-1.6C1486.7,349.8,1487.9,350,1489,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF505A"),
                d:
                  "M1784,376c1.7,0,3.3,0.1,5,0.1c-0.2,1.5,2.4,2.1,1.1,3.9c0.1,0.9-0.3,1.5-1,2c-3.7,1.2-6.2-2.3-9.5-2.8       c-1.1-0.2-1.3-2,0.2-3.1C1781.1,375.1,1782.5,375.9,1784,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E75162"),
                d:
                  "M1789,382c0-0.8,0.2-1.6,1-2c3.6-0.1,6.6,1.4,9,4c-2.7,0.9-5.3-0.5-8,0       C1791.5,382.2,1789.4,382.9,1789,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C74450"),
                d:
                  "M1779,369c-1,0.3-2,0.7-3,1c-10.1,0-19.9,2.3-29.8,3.4c-12.4,1.5-24.8,3-37.2,4.5l0,0       c-1.2-1.2-1.2-2.7-1.1-4.3c0.3-1.8,0.8-3.5,3.2-2.7c0.4,0.2,0.8,0.4,1.1,0.7c0.9,1.2,2.2,1.1,3.5,1c5.1,0.8,9.7-2.1,14.7-2.1       c3,0,6,0,9,0.2c2.2,0.2,2.2,0.2,4.5-1.4c0.4-0.3,0.9-0.5,1.4-0.5c2.1-0.2,4.3-0.7,5.8,1.6c1-1.7,1.9-3.4,4.1-3.6       c2-0.2,4-0.2,6-0.2c2.2,0,4.3-0.1,6.5,0c3,0.2,5.5-0.7,7.6-2.9c2.8-0.7,2.9,1.7,3.7,3.3C1779,367.6,1779,368.3,1779,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54953"),
                d:
                  "M1709,373c0,1.7,0,3.3,0,5c-4.7,0-9.5-0.2-14.1,0.4c-0.6,0.1-2.1,1.5-3.7,1.6c-2.3,0.2-4-2.4-6.6-1.4       c-2.1,0.9-4.3,1.4-6.7,1.4c-3.3,0.1-5.2-0.7-3.6-5.6c-3.1,3.2-5.3,3.4-7.2,0.5c-1.6-1.9-4.5,0.3-6-2c-0.7-1.7-1.2-3.4,1.6-3       c1.4,0.2,2.5-0.2,3.6-0.8c4.2-2.5,8.5,0.6,12.9-0.4c5.7-1.3,11.5-0.9,16.9,1.9c3,1.5,6,0.5,8.6-0.6       C1708,368.8,1708.5,370.5,1709,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC555F"),
                d:
                  "M1602,363c0.3-3.5,0.2-3.5-4.4-1.7c-1.8-3.2-0.1-5.1,3.9-6.9c-5.1-0.4-8.8-0.6-12.4-0.9       c-1.9-0.1-4-1.5-3.3-2.8c2.5-5-1.2-4.6-4.1-5c1.4-6.5,8.2-1.1,11.2-5.7c-3.7,0-6.7,0-9.8,0c-0.3-0.6-0.2-1.1,0.4-1.5       c7.1-1.8,14.2-2.4,21.5-1.7c2.9,0.7,3.5,2.7,1.8,4.8c-1.6,2-0.8,4-1.1,6c-0.3,2.2,0.7,2.7,2.4,3.5c2.6,1.1,5.9,1,7.5,4       c0,0.3-0.2,0.5-0.3,0.7c0.2-0.2,0.5-0.3,0.7-0.5c3.1-1.3,6.1,0.6,9.2,0.4c2.4-0.1,2.6,2,1.2,3.9c-1.2,1.2-2.7,1.5-4.4,1.4       c-2.3,0.1-4.6-1.3-6.9,0c-2.4,1.7-5.6,0.3-8,2C1605.3,363,1603.7,363,1602,363z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C34651"),
                d:
                  "M1622,360c1.5,0.2,2.8-0.3,4-1c3.3-1.9,7.2-1.6,10.8-2.3c2.7-0.3,5.6,0.3,8.3-0.6       c3.7-0.5,7.4-2.1,11.2-0.8c0.3,2.1,0.3,2.1-2.8,2c3.3,1.7,3.5,1.8,2.9,4.9c-0.5,2.5,0.3,3.2,2.5,3.7c2.7,0.6,5.5,1.3,7.1,4.1       c-0.7,1.4-1.5,2.3-3.3,1.2c-2.6-1.5-1.3,1-1.7,1.8c-2-2.7-5.7-2.9-7.8-0.3c-1.1-5.2-6.2-5.8-9.4-8.5c-3.6-2.9-8.7-1.3-13-2.7       c-0.3-0.1-0.8-0.2-0.9,0c-3.9,5.8-7.3,0.4-10.9-0.5C1619.8,360.1,1621.2,361,1622,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1622,360c-0.7,1.2-1.9,0.9-3,1c-1.3,0-2.7,0-4,0C1617.1,359.1,1619.7,360.4,1622,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M1533,314.2c-1.4-0.1-2.7-0.2-4.1-0.3c-1.1-1.4-2.6-0.7-4-0.9c1.2-1.4,2.7-0.9,4.2-1       c13.4-0.4,26.7-0.7,40.1-1c1.3,0,2.7,0.3,3.7-0.9c6.3,0,12.9-1.3,18.8,0.3c10.4,2.6,20.9,0.4,31.2,2.5       c-0.2,0.2-0.4,0.5-0.6,0.7c-0.8,0.5-1.8,0.7-2.7,0.8c-22.7,0.3-45.4,0-68,0.1c-2.5,0-5-0.3-7.4,0.6       C1540.4,315.3,1536.6,316.2,1533,314.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1690,316c4.3,2.3,9.1,1.1,13.6,1.6c11.8,1.3,23.6,3,35.4,4.5c-0.2,0.2-0.3,0.6-0.5,0.7       c-0.5,0.1-1,0.1-1.5,0.1c-4.5,2.1-9.1,0.3-13.6,0c-5.6-0.4-11.2-1.6-16.8-1.6c-6.2-1-12.3-1.9-18.6-1.9c-3.7,0-7.4-1-11.1-1.6       c-2.3-0.4-4.6-0.7-6.8,0.2c-5.3,1.1-10.4-0.4-15.6-0.9c-0.5-0.1-1-0.2-1.5-0.4c-1.7-1.3-4.6-0.8-5-3.7       c12.2,1.3,24.4,0.9,36.6,2.8C1686.3,316.2,1688.2,316,1690,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43740"),
                d:
                  "M1647.9,313c1.4,1.5,3.9,1.1,5.1,2.9c-0.7,2.8-2.8,1.6-4.3,1.2c-4.7-1-9.4-1.6-14.2-1.7       c-2.6-0.1-5.2,0.1-7.8-0.1c-1.5-0.1-3.4,0.1-3.8-2.2c0,0,0-0.3,0-0.3C1631.3,312.9,1639.6,313,1647.9,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1788,323c3.7,0.7,7.3,1.4,11,2c5.4,1.1,10.9,1.5,16.1,3.1c0.3,1-0.5,1.4-1.1,1.9       c-3.6-0.3-7.5,1.5-10.5-2.1c-0.5-0.6-2.7-2.4-2.4,0.9c-1,0-2.8,0.2-2.8,0.1c-0.4-3.1-2.9-2-4.3-1.8c-6.9,1.1-13.3-2.2-19.9-3       c-5.8-0.7-12.3-0.4-17.6-2.5c-3.5-1.4-8.6,1.5-10.6-3.6c12.4,0.9,24.7,2.8,37,4.6C1784.7,322.7,1786.4,322.8,1788,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0454D"),
                d:
                  "M1788,322c-2.1,0.1-4.1-0.3-5.9-1.6C1784,321.3,1787.1,317.4,1788,322C1788,322,1788,322,1788,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121E"),
                d:
                  "M1706,320c10.4,0.1,20.6,2.2,31,3c1.1,1.4,2.6,0.9,4,1c0.7-0.5,1.4-0.9,2.3-0.8       c13.8,2.3,27.8,3,41.5,6.5c3.3,1.4,7.1,1.7,10.2,3.6c2.6,1.6,5.1,2.9,8.3,3c2.2,0.1,3.2,1.5,1.8,3.7c-0.2,0.4-0.6,1.1-0.6,1.1       c-10.9-3.5-22.3-3.1-33.4-5.1c-4.1-1.7-8.5-0.8-12.7-1.5c-1.3-0.2-2.7,0.1-4-0.2c-11.7-2.9-23.9-3.3-35.2-7.6       c-2.8-1.1-5.8-1.5-8.8-1.5c-2.4,0-4.6-0.6-6.8-1.4c-1.2-0.4-2.9-0.9-2.4-2.6c0.4-1.4,1.9-1,3-0.7       C1705,320.8,1705.5,320.4,1706,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("73151E"),
                d:
                  "M1814,330c0.3-0.3,0.7-0.7,1-1c3.4-1.2,6.7-0.5,10.1,0c0.3,0,0.6,0,0.9,0c0.2,0.3,0.3,0.5,0.3,0.8       c-0.1,0.3-0.1,0.4-0.2,0.4c-0.7,0.5-1.5,0.2-2.3,0.3c1.9,0.6,3.9,0.2,5.8,0.2c12.6,1,25,3.8,37.3,6.5c3.4,0.7,6.8,1.5,10.2,1.9       c14.7,2.9,29.3,6,43.7,10c8,3.1,16.6,4.2,24.6,7.2c0.9,0.3,1.9,0.5,2.8,1c0.9,0.4,1.9,1.1,1.7,2.2c-0.2,1.5-1.6,1.4-2.7,1.5       c-1.5-0.1-3-0.7-4.6-0.7c-4.1-0.7-8-2-11.9-3.3c-5.5-2-11.4-2.4-17-3.9c-0.5-0.1-1-0.3-1.5-0.4c-3.8-1.6-8-1.4-11.9-2.8       c-8.5-2.5-17.3-3.4-25.8-5.9c-4.6-1.5-9.4-2-14.3-2c-0.5-0.1-1-0.3-1.4-0.6c-1.2,0,1.1-1.4-0.8-1.5c-8-0.4-16-1.3-24-2.1       c-1-0.1-1.8-0.8-2.3-1.7c0.7-1.6,0.1-2.1-1.5-2c-3.3,0.1-6.5-0.6-9.5-2c-1.3-1.7-3.7-0.4-5-2C1815.3,330,1814.7,330,1814,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A252F"),
                d:
                  "M1832,336c5,0.7,10,2,15.2,1.2c4.2-0.6,8.1,2.7,12.5,2.1c0.6-0.1-0.7,1.1-0.8,1.8       c-2.2,2.1-4.6,0-6.6,0.4c-1-0.1-0.4,1.1-0.4,0.4c0-0.1,0.1-0.1,0.3-0.1c1.1,0,2.7-0.9,2.7,1.3c1.8,2.2,5.6-0.2,7,3       c0.7,0.2,1.3,0.2,2,0c6.7,1.5,12.7,5.4,19.8,6c-1.8,0-3.6,0.1-5.4,0c-1.6-0.1-2.1,0.5-1.5,2c-0.8,0.4-1,1.2-1,2       c-1.9,0-3.1-1.9-5-2c-3.5-2.7-7.4-4.9-11.7-6.3c-1.5-0.5-2.8-0.7-4.3-0.7c-6.2-0.6-12.2-2.1-17.8-4.9c-1.4-1.9-3.6-0.9-5.4-1.4       c-0.4-0.2-0.8-0.4-1.1-0.7c-2.9-2.4-6.4-2.2-9.9-2.5c-1.2-0.1-2.3-0.5-3.5-0.9c-0.9-0.4-1.9-0.6-2.7-1.2       c-0.5-0.4-1-0.9-0.3-1.6c0.6-0.6,1.2-0.3,1.7,0.1C1821.3,334.7,1826.7,335.3,1832,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1816,334c-0.3,0.1-0.7,0-0.9,0.2c-0.5,0.5,0,0.7,0.4,0.8c0.9,0.1,1.9,0.1,2.5,1       c-2.5,2.2-5.3,1.2-8,0.7c-8.4-1.4-16.7-3.5-25-5.7c-8.5-3.2-17.5-3.5-26.3-4.8c-5.9-0.8-11.6-3.1-17.7-2.2       c0.1-1.4,0.8-2.1,2.3-1.7c14.1,2.9,28.5,3.7,42.6,6.4c9.2,1.7,18.6,3,27.9,4.4C1814.6,333.1,1815.3,333.7,1816,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1816,330c1.8,0.4,4.4-1.2,5,2C1819.2,331.6,1816.7,333.2,1816,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1764.1,323.6c1.1-0.6,2.1-0.9,3,0C1766,324.4,1765,323.8,1764.1,323.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841822"),
                d:
                  "M1500,313c-2.1,1.9-4.7,0.6-7,1C1495.1,312.1,1497.7,313.3,1500,313z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D303C"),
                d:
                  "M738,602c-1.7,0-3.3,0-5,0c-0.3,0-0.6,0-1,0c-10.5-3.8-19.6-10.3-29.5-15.3c-0.6-0.3-0.8-1-0.6-1.7       c-1.3-1.6-3.3-2-5-3c0-0.3,0-0.6,0-1c1.5-1.7,3-3,5.4-1.1c1.9,1.4,4.2,1.6,6.6,1.3c4.5-0.6,6,1,7.6,5.7c1,2.9,3.5,4,6.7,3.9       C731.2,590.6,734.6,596.4,738,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73A45"),
                d:
                  "M702,585c9.1,5,18.1,10,27.2,15.1c1,0.6,1.9,1.3,2.9,1.9c-2.3,0-4.7,0-7,0c-0.8,0-1.9,0.4-2.2-0.6       c-1.3-4.6-4.9-3.8-8.4-3.9c-1.2,0-2.3-1-3.5-1.5c-2.8-3.5-5.1-7.7-10.5-7.8c-0.2,0-0.3-1.4-0.5-2.2       C700.4,585.2,701.2,585,702,585z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83542"),
                d:
                  "M640,618.5c3-0.5,5-2.6,7.7-1.4c0.2,0.1,0.1,2-0.2,2.2C645.2,620.4,642.8,620.6,640,618.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A111E"),
                d:
                  "M749,562c-4.5,0.6-2-4.1-3.9-5.5c-2,1-0.4,3.1-1.6,4.4c-1.3-1.5,0.1-3.5-1-4.9c-1,0.7-0.5,1.8-0.6,2.6       c-0.1,1.3,0.3,2.7-1.1,3.5c-0.3,0.1-1-0.1-1.2-0.4c-1.4-1.7,0.4-2.6,1.1-3.8c0.1-0.2,0-0.6,0-1.9c-5.2,3-9.8,6.8-15.7,6.9       c-1.4,1.5-3.3,1.6-5.1,1.3c-7.2-1.5-14.5-2.3-21.8-3.4c-0.5-0.1-0.8-0.5-1.2-0.8c-2.1-1.4-4.5-1.8-7-2       c-2.2-1.2-5.3,0.2-7.1-2.5c1-2.2,3.3-2.4,5.1-3.4c7.6-1.5,15.1-2.9,22.7-4.4c6.4-1.2,12.9-2.4,19.3-3.6c4.2,0.3,8.4,1.3,12-2       c0.7,0,1.3,0,2,0c3,2.4,6.3,2.6,9.7,1.5c1.8-0.6,3.5-1.5,4.2,1.1c0.3,1.2-0.5,3.1,1.5,3.1c2.6,0.1-0.2-2.7,2.1-3.4       c0.6,1,1.4,2.3,2.3,3.8c1.8-2.4,0.9-5.6,4.2-6.1c0.7,1.5-2.2,5.1,0.9,4.3c2.2-0.5,6.7,4.2,7.1-2.1c0.1-1.4,0.7-2.2,2.1-2.2       c1.2,0,2.8-0.1,2.7,1.4c-0.4,4.2,3.8,4.4,5.5,6.8c0.9,1.2,4,1.5,1,3.7c-1.4,1-2.6,3.9-4.3,0.3c-0.1-0.2-0.6-0.1-0.9-0.2       c-0.6-1.4-2.2-2.1-2.2-3.8c0.2-0.2,0.4-0.4,0.3-0.8c0,0.3-0.1,0.6-0.4,0.9c-1.2,0.9-3,0.7-3.7,2.4c2.7-2.9,4.4-1,5.9,1.3       c-1.6,1.9-4.4,3.7-0.3,6c1.6,0.9,0.1,2.3-0.4,3.9c-1.7-2-2.8-5.6-5.9-2.3c-0.8-1.2-3.3,1-3.3-1.7c0.7-0.9,1.8-1.6,2.6-2.8       c-1.7,0.4-1.5,2.2-2.6,2.8c-0.7,0.5-1.4,0.9-2.7,1.7c1.6-3.8-1.1-4.5-3.5-5.8c-0.3-1.8,0.3-3.3,0.3-4.3       c0.2,1.1-1.3,2.8-0.3,4.3c0.3,1.8-0.2,3-1.2,4.3c-1.3,1.6-1.9,3.4,0.4,5.2c-6.5,1.4-2.9-4.9-5.5-6.5c-0.6-0.4,1.8-4-1-4.8       c-2.3-0.7-4.9-0.2-7.1,1c-0.4,0.2-0.6,0.7-1,1c1.3,1.5,2.5-0.3,3.7,0c0.2,3-2,5.1-3,7.6c-1,2.5-2.8-0.1-5.3,0.9       C747.6,563.1,748.3,562.6,749,562c1-2.2-2-3.2-1.7-4.2C747.2,558.8,749.5,560,749,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791624"),
                d:
                  "M774,537c-6.7,0.3-13.3,0.7-20,1c-3.9-0.1-7.8,0.2-11.7,0.2c-3.2,0-7.8-2.9-9.7,2.7       c-2.5-1.2-6.1,1.3-7.7-2.5c-1.9,0.6,0.3,2.9-1.1,3.2c-2.1,0.5-1.5-1.6-2.1-2.6c-0.3-0.5-1.2-1-1.6-0.8c-4.2,1.4-8.9-0.8-13,2.2       c-2.1,1.6-6.1-2.1-5.8-5.5c-8.6,1.5-16.6-2-24.8-3.4c-0.5,1.8,2.9,1.1,1.5,3.1c-1.1,1.5-2.2,0.3-2.9-0.3       c-1.7-1.3-3-1.8-4.7,0.1c-0.7,0.8-1.7,1.5-2.5-0.5c-1.5-3.6-3.4-2.5-5.4-0.1c-2.2,2.6-7.6,1.4-9.5-1.9c1.1-1,2.3-0.5,3.6-0.4       c-1.6,0-3.2-0.2-3.8-2c-0.1-0.5,0.9-0.7,0.5-1.3c0,0.3-0.1,0.6-0.4,0.9c-0.8,1-2,0-2.8,0.8c-2,0-4,0-6,0c-1-3.6-1-3.6,2.2-4       c-2.6-0.2-2.6-0.2-4.2,4c-0.7,0-1.3,0-2,0c0.1-3-1.8-7.2,4-7c1.7-1.5,3.5-0.5,5.2,0c1.9,0.9,4,0.6,6.1,0.7       c6.6,0.6,13.2,2.1,19.9,2.1c18.5,2.3,37.1,3.9,55.7,5.9c13.1,0.3,26,3.3,39.2,2.9C771.6,535,773.8,534.4,774,537z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66131C"),
                d:
                  "M688,552c-1.4,1.1-2.8,2.2-4.4,3.5c2.3,0.9,4.4,1.7,6.4,2.5c-1.3,0-2.7,0-4,0c-1.1,0.5-1.6-0.2-2-1       c-1,0-2,0-3,0c-0.8,1-1.9,1.1-3,1c-0.7-1.2-1.5-2.4-2.2-3.7C680,553.5,684,552.8,688,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M742,542c0.1,0.8,0.4,2.1,0.1,2.3c-2.6,1.6-5.9,0-8.7,2c-1.2,0.8-2.2-1.5-3.4-2.3       C733.9,542.6,737.9,542.1,742,542z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M642,530c-0.2-5.2,1.2-6.3,5.8-4.2c0.6,0.3,1.9,0.1,1.2,1.4c-0.4,0.8-0.9,1.4-2.3,0.5       c-2.2-1.5-2.4-1.2-2.8,2.3C643.3,530,642.7,530,642,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M650,530c0.7-1.2,1.9-1,3-1c0.3,0.4,0.5,1,0.9,1.2c1,0.5,2,0.8,3.9,1.6c-2.1,0.1-3.4,0.2-4.8,0.3       C652,531.3,651,530.7,650,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M678,558c0.7-1.2,1.9-1,3-1c1.2,4.1-1,2.8-3,2C678,558.7,678,558.3,678,558z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921D2C"),
                d:
                  "M675,527c-6.8,0.4-13.3-1.6-20-2c-1.8-1.3-4.2,0.3-6-1c-1.7-0.3-3.3-0.7-5-1c-2.3-2.6-5.8-2-8.6-2.3       c-5-0.6-9.3-3.7-14.4-3.7c-0.7-0.8-2.6-0.4-2.2-2.1c0.3-1.2,1-2.2,2.4-1.9c4.8,0.8,3.1-2.8,2.9-4.7c-0.6-4.5,0.6-6.5,5.2-7       c1-0.1,1.9-0.6,2.7-1.2c0.3,0,0.7,0,1,0c0.9,0.6,1.4,1.3,1.2,2.5c-0.2,1,0,2.1-1.5,2c2.2,0.6,1.6-1.1,2-2.2       c1.1-2.9,4.2-2.1,6.4-3.1c0.8,0,2.2,0.5,2,0.9c-1.5,3,2,2,2.4,3.3c0.3,0.7,0.4,1.4,0.2,2.1c-0.2,0.5-0.5,0.8-0.8,1.2       c-2.1,1.3-4.8,1.2-7,2.5c-0.8,0.4-2.2,0.1-2.1,1.5c0.1,1.2,0.6,2.1,1.7,2.9c1.1,0.8,4.7-0.2,2.7,3.3c-0.3,0.5-0.3,0.5,0.2,0.2       c3.8-2.2,6.5,1.2,9.7,2c0.8,0.2,1.6-0.3,2.4-0.4c0.7,0,1.3,0.3,1.9,0.8c-0.2,3.6,2.6,1.6,4,2.1c3.5,0.7,6.9,1.7,10.7,1.5       C671.4,522.8,675,522.8,675,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891827"),
                d:
                  "M632,500c-0.9,1.2-1,3.7-3.3,2.6c-2.9-1.3-2,3.5-4.4,2.6c-0.1,1.6,2,0.7,1.8,1.2       c-0.9,2.6,0.5,5,0.3,7.4c-0.2,1.8-2.9-0.3-4.4,0.7c-0.5,0.4-1.5-1.5-2.2,0.3c-0.5,1.4,1,1.5,1.3,2.4c-3.7-0.9-7.6-1.6-6.5-7.1       c0.4-2.1-1.6-3.1-2.8-4.3c-1.1-1.1-1.8-1.8-0.8-3.3c0.7-1,1.6-2,2.8-1.3c0.9,0.6,2.5,1.3,1.3,3.1c-1.2,1.9,0.9,2.3,1.4,1.7       c1.5-1.6,4.1-0.6,5.1-2.9c1.4-3.2,5.4-2.7,7.5-5C629.3,497.7,629.9,500.8,632,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891827"),
                d:
                  "M641,500c-0.9,0.3-1.9,0.6-2.8,0.8c-3.8,0.8-3.2,2.4-0.5,4.7c-2.3,0.8-4.7-1.3-6.6,0.7       c-0.1,0.1-1.3-0.5-1.5-1c-0.3-0.7,0.4-1.2,1.1-1.2c3.6,0.2,3.1-1.8,2.3-4.1c2.6,0.5-0.1-1.7,1-2c0.7-0.6,1.3-0.6,2,0       c0.3,0,0.7,0,1,0c2.1,2.9,2.4-1.7,4-1c0.6,0.7,2.1,0.3,2.1,1.5C643.1,499.7,641.6,499.3,641,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1624"),
                d:
                  "M636,498c-0.7,0-1.3,0-2,0c0.2-0.9-0.5-2.6,1.2-2.4C636.2,495.7,635.9,497.1,636,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M697,560c7.7-0.5,15,1.7,22.5,2.9c1.8,0.3,3.6,0.1,5.5,0.1c7.4,1.3,14.8,2.8,22.2,4       c13.4,2.2,26.9,3.9,40.3,5.7c5.8,0.8,11.8,0.7,17.5,2.3c1.6,3.9-1.5,4-3.5,3.5c-9.7-2.1-19.8-0.6-29.3-4       c-2.6-0.9-4.8,0.1-6.6,2.1c-2.1,0.7-4.1,1-5.7-0.9c-0.2-1.3,1.2-1.3,1.8-2.3c-3.3-0.5-6.3-1.5-9.5-2c-0.9-0.2-1.8-0.9-2.7,0.1       c-2,2-3.6,1.8-5.1-0.7c-0.9-1.4-2.7-1.1-4.1-1.3c-3.4-0.5-6.9-0.3-10.4-0.2c-3.7,0.1-7.3,0.5-10.1-2.7       c-0.5-0.5-1.2-0.1-1.7,0.4c-2.9,2-2.3-2.3-4.8-2.6c-7.5-1-15-0.1-22.4-0.8C692.6,560.1,692.6,560.1,697,560z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M718,567c0.2-1,0.7-2.4,1.8-1.4c3.7,3.7,8.3,2.1,12.6,2.4c3.4,0.2,7-0.6,10.3,0.7c1,0.4,2.8-0.3,2.7,2       c0,1.3,1.3,1.4,2.3,1.1c5.1-1.7,5.1-1.7,10.2-0.2c0.8,0.2,1.6,0.2,2.4,0.4c1.5,0.4,4.5-1.1,4.3,1.6c-0.1,2.4-3,1-4.6,1.4       c-3.4,2.8-7.1,0.7-10.6,0.3c-7.9-0.9-15.8-2.2-23.7-3.1c-1-0.1-1.9-0.4-2.6-1.3c-4.5-2.2-9.6-1.1-14.2-2.9c3.2,0,6.5,0,9.7-0.1       c0.1,0,0.2-0.2,0.3-0.3C718.6,567.5,718.3,567.2,718,567z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M684,557c0.7,0.3,1.3,0.7,2,1c0.3,1.9,4.3-0.2,3.3,2.9c-0.4,1.3-1.7,2.3-3.6,1.5       C683,561.2,682.4,559.5,684,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M708,568c-2.3-0.3-4.9,0.8-7-1C703.3,567.4,705.9,566.1,708,568z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d: "M696,566c-2-0.3-4.2,0.6-6-1C692,565.3,694.2,564.2,696,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M687,565c-1.7-0.2-3.6,0.6-5-0.9C683.6,564.2,685.5,563.3,687,565z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M701,567c-1.7-0.2-3.6,0.5-5-1C697.7,566.2,699.6,565.3,701,567z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A3341"),
                d:
                  "M738,602c-3-3-6-6-9.1-8.9c-0.5-0.5-1.4-1.1-2.1-1c-5.2,0.3-10.1,0.2-13.1-5.7c0.1-0.8,2,0.2,2.7-1.4       c-2.9-0.9-4.8-4.9-9-1.8c-0.9,0.7-4.5-0.3-5.1-1.5c-1.7-3.1-3.5-0.8-5.2-0.7c-2-3.2-5.6-6-2.3-10.4c4.7,2.4,9.5,4.2,15.1,3.1       c2.4-0.5,5.4,1.3,7.3-1.7c1.3,0,2.7,0,4,0c5.8,0,11.6,0.1,17.1,2.3c0.5,0.5-1.3,0.8-0.2,1.2c7.4,2.8,14.6,6,22.8,5.3       c3.6-0.3,7,1.4,10.2,3.2c-0.6,0.7,2,3.6-1.5,2.2c-3.4-1.4-4.6-0.1-4.5,3.2c0.1,6.9,0.1,6.9-7.3,7c-7.5,0.1-8.1,0.7-9.2,8.1       c-1.6-1.8-3.5-2.4-5.6-2.5C741.3,602,739.7,602,738,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M738,575c-4.1-1.8-8.6-0.9-12.9-2c-1.4-0.3-3,0.4-4.1-1c0.4-0.9,1.3-1,2.1-1.1       c9.9,0.2,19.7,2.3,29.5,3.5c2.5,0.3,4.9,0.5,7.4,0.5c1.8,1.6,4,0.8,6,0.9c6.4-1.1,12.6-0.8,18.1,3.1c-1.7,0.6-4.4-1.2-5.1,2       c-3.8,1.8-7.5-0.4-11.2-0.7c-8.1-0.6-16.1-2.6-24.2-3.3C741.7,576.8,739.6,576.3,738,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1947,360c0.6-0.1,1.7,0.1,1.9-0.2c0.8-1.5-0.6-1.5-1.4-1.7c-7.9-2.1-15.7-4.1-23.6-6.3       c-1-0.3-1.9-1.2-2.9-1.8c2.3-3.9,6.7-1.3,9.8-3.2c1.8-1.1,4.4-1.2,6.7-1.2c7.4,2.8,15.3,3.7,22.7,6.6c4.9,2,5.1,1.8,1.3,5.8       c-0.6,0.6-0.9,1.4-1.5,2c-2.3,1.5-4-1.5-6.4-0.8c-1.2,0.4-2,0.7-2.6,1.7c0,0,0,0.1,0,0.1c-0.8,0.7-1.7,1-2.7,0.8       c-0.5-0.1-0.9-0.3-1.3-0.6C1946.7,360.9,1946.7,360.4,1947,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781921"),
                d:
                  "M1960,360c-0.6-2.8,2.4-3.3,3.5-5.4c-8.9-2.9-17.7-5.7-26.5-8.6c-1,0.7-2.1,0.4-3.1,0.4       c-1-0.6-3.1-0.4-2.6-2.2c0.3-1.3,1.9-0.8,2.9-0.3c5.7,0.7,10.9,3.7,16.6,4.2c4.2,0.3,8.3,1.5,12.2,2.9c1.9,0.5,3.9,0.9,5.1,2.7       c0.1,2.9-2.7,3-4.2,4.3C1962.7,358.7,1961.3,359.3,1960,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1964,358c0.1-2.6,2.9-2.3,4-3.9c1.1-0.7,1.9-0.8,2.1,0.9c-2.9,0.8,2.9,3-0.6,3.8       c1,3.9-4.7,2.4-4.6,5.6c-0.7-0.4-1.6-0.7-2-1.3c-0.6-0.8,0.4-1.1,0.9-1.4C1965.9,360.6,1966.6,359.4,1964,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD5E67"),
                d:
                  "M1970.1,355c-0.5-0.7-1.2-0.9-2.1-0.9c-1.7-0.7-3.3-1.4-5-2.1c2.3-2.5,2.7-2.5,6-0.1       c3.5,0.2,6.4,1.7,9,4c0,0.3,0,0.7,0,1C1975.1,357.4,1972.9,354.8,1970.1,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721523"),
                d:
                  "M1871,354c2.8-2.1,3.6,0.7,5,2c3.6,1.8,8.1,1.8,11,5c-3.2,1,1.7,1.8,0.1,2.8c-6.4,0-10.8-3.8-15.1-7.7       C1871.2,355.6,1871,354.8,1871,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963D46"),
                d:
                  "M1913,352c6.1,1,12.2,1.6,18,4c-1,1.4-2.7,0.8-3.6,1.4c2.3,0.1,5.5-1,6.8,2.7c-2.6,3.4-5.8,0.6-8.7,0.6       c-3,0.1-6-1.3-9.2,0c-1.6,0.6-3.2-0.2-4.3-1.7c-7.6-3.8-15.5-6.8-24-8.2c-1.4-0.2-2.9-0.9-3-2.8c5.4-1.4,10.7,0.4,16,1       C1905,350.1,1909.4,349.4,1913,352c-0.2,0.4-0.9,0.4-0.7,1.1c0,0,0.3,0,0.4-0.2C1912.8,352.6,1912.8,352.2,1913,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91343D"),
                d:
                  "M1912,359c2.2,0.6,4.3,1.1,6.6-0.2c3.7-2,7,1.5,10.7,1.6c1.6,0,3.2,0.5,4.7-0.4       c2.7-2.2,5.3,0.2,7.9,0.3c2,0.1,3.9,1.6,6,0.8c1,0,2,0,3,0c0.3,0.9,0.7,1.8,1,2.6c-1.9,1.3-5.9-1.8-6,3       c-0.6-0.1-1.5,0.1-1.9-0.2c-3.5-2.7-7.8-2.4-11.7-3.6c-2.1-0.6-4-1.7-4.1,2.1c0,1.7-1.6,2.4-3.4,1.5c-2-0.9-4-1.7-6-2.5       c-1.6-2.6-4.3-1.7-6.7-2c-1.8-0.2-3.7,0.3-5.4-0.6c-0.8-0.5-2.8,0.1-2.1-1.9c0.6-1.6,1.6-1.2,2.7-0.4       C1909.1,360.1,1910.6,360.6,1912,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822933"),
                d:
                  "M1901,349c-5.4,0.1-10.7,0.3-16-1c-0.3-0.3-0.7-0.6-1-1c-3.3,2-6-0.4-9-1c0-0.3,0-0.7,0-1       c-0.7-1.1-3.2,0.3-2.8-1.7c0.2-1.3,1.8-0.9,2.8-0.3C1883.7,345,1892.6,345.8,1901,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A252F"),
                d:
                  "M1875,343c-0.7,0.1-1.4,0.3-2.2,0.4c0.7,0.5,1.5,1,2.2,1.6c-4.5,0.5-8.5-2.2-13-2c-0.4-0.9-2.6-0.1-2-2       C1865.1,341.2,1870.3,340.1,1875,343z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963D46"),
                d:
                  "M1875,346c3,0.3,6,0.7,9,1c-0.8,1.8-2.1,2.2-4,1.5c-2-0.7-3.9-1.6-6.1-1.6c-0.5,0-1.6-0.1-0.3-0.8       C1873.9,345.9,1874.5,346,1875,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822933"),
                d:
                  "M1860,341c0.7,0.7,1.3,1.3,2,2c-2.3,0-4.7,0-7,0c-0.9-1.6-2.8-0.5-4.5-2c3.3,0,5.9,0,8.6,0       C1859.3,341,1859.7,341,1860,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842632"),
                d:
                  "M1902.7,360.8c-1.1,1.7-2.5,1-3.7,1.2c0.1-0.3,0.1-0.7,0.2-0.9C1900.1,359.6,1901.2,359.9,1902.7,360.8       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822933"),
                d:
                  "M1864,346c-0.1,0.7-0.1,1.7-1.2,1.5c-0.4-0.1-0.5-1-0.8-1.5C1862.7,345,1863.3,345,1864,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82272F"),
                d:
                  "M1989,450c-1.5,1-3.2,1.1-4.9,1c-4.3-1.4-8.7-2.7-13-4.1c3.3-2.1,6.7-0.1,10,0c0,0,0,0,0,0       c1.6,1,3.5,0.8,5.3,1.1C1987.4,448.3,1989.1,447.9,1989,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("954046"),
                d:
                  "M1989,450c-2.2-2.1-6.1,0-8-3c9.4-0.9,15.5,5.1,21.8,10.7c1.3,1.1,2.5,2.1,4.1,2.4       c0.1,0.3,0.1,0.6,0.2,0.9c-3.4,0.2-5.9-1.7-8.1-4C1995.6,454.7,1992.3,452.4,1989,450L1989,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B53F4A"),
                d:
                  "M1805,351.9c0,0.7,0,1.4,0,2.1c0,0,0,0,0,0c-5,2-10,0.8-15,0c-0.9,0.7-1.7,1.8-2.6,1.9       c-3.9,0.4-6,2.7-7.4,6.1c-0.2-0.1-0.3-0.3-0.5-0.4c-0.9-1.3-1-3.4-2.9-3.6c-3-0.3-3.9-2.5-4.7-4.8c-2-3.2-0.6-4.7,2.6-5.6       c2.8-0.8,5.9-0.9,8-3.2c3.2-1,5.9,0.8,8.8,1.6c4.3,1.6,9,2,12.8,5C1804.4,351.3,1804.7,351.6,1805,351.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AD4750"),
                d:
                  "M1790,354c5,0,10,0,15,0c0.1,0.7,0.8,1.9-0.5,1.9C1799.6,355.9,1794.5,356.8,1790,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84E62"),
                d:
                  "M1778.9,367c-1.3-0.7-1.4-2.6-3-3c-0.3-0.5-0.4-0.9-0.1-1.4c1.2-1.4,2.5-1.8,4.1-0.6c0,0,0,0,0,0       c-0.3,0.7-0.6,1.5-0.9,2.2C1779.1,365.1,1779,366.1,1778.9,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("69131E"),
                d:
                  "M1706,320c-0.2,3.4-3,0.2-4.4,1.6c2.6,1.6,5.4,2.3,8.1,2.3c7.6-0.2,14.4,3,21.4,4.9       c4,1.1,7.9,1.5,12,1.6c2.3,0.1,4.7,0.9,6.9,1.7c5.1,1.8,10.5,0.7,15.6,1.9c2,0.4,4,0.4,5.4,2.1c-2,0.3-4.2-0.8-6,1       c-2.9,1.9-5.8,0.3-8.6-0.3c-3.8-0.9-7.4-1.6-11.2-0.5c-5.4-0.4-10.5-2.1-15.7-3.1c-17.5-4-34.7-9-52.3-12.4       c-2.5-0.5-6-1.3-8.1-3.7c5.5-2.5,10.8,0.6,16.2,0.7c0.4,0,1.1,0.9,2.3,0.7C1693.8,317.3,1699.9,318.9,1706,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("64131E"),
                d:
                  "M1785,331c7.6,1.3,15.2,2.5,22.7,3.8c3.4,0.6,6.7,1.6,10.3,1.1c1,0.3,2,0.7,3,1c3.2,1.3,7.2,0.3,10,3       l0,0c1.8,1.3,4.2-0.3,6,1c6,2,12,4,18,6c-0.1,0.1-0.1,0.4-0.2,0.4c-5.4,0.1-10.9,0.8-16.1-0.2c-2-0.4-4.3-1.4-6.6-1.8       c-4-0.7-6.8-4.3-11.1-4.7c-2.4-0.2-4.5-0.9-7.1,0.2c-2.7,1.1-5.7-1.8-8.8-0.9c-0.2-1.2,0.4-2.5-1.8-2.7       C1796.7,336.7,1791.2,332.6,1785,331z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1C2A"),
                d:
                  "M1745,335c6-2.6,11.4,0.9,17.1,1.6c1,0.1,1.9,0.3,2.9,0.4c10,2.7,20,5.4,30,8c-0.1,3.1-3,0.5-3.9,2       c-3.1-0.4-5.8-2.3-9-2c-2,1-3.9,0.1-5.7-0.4c-8.3-2.1-16.4-4.8-24.8-6.3C1749.1,337.9,1746,338.4,1745,335z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801A29"),
                d:
                  "M1791,347c0.8-1.6,3.1-0.3,3.9-2c3.8,1.4,7.5,2.7,11.5,4.1c-1,0.7-1.7,1.3-2.5,1.8       C1799.5,350.2,1795.3,348.5,1791,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151F"),
                d:
                  "M2021,499c-2-0.3-2.7-1.4-1-2.9c1.1-1,2.4-1.7,3-3.2c4.6,0.5,6.6-1.3,5.5-5.1c-0.3-1.1-0.2-2.2,0.6-2.7       c1.4-0.8,1,1.1,1.8,1.5c4.2,2.2,11.4-0.6,12.2-4.7c0.8,0,1.6-0.2,2-1c5.9-2,6.4-1.8,7.4,4.1c0,0.1,1.1,0,1.7,0       c-1.5,4.3-4.8,5.9-9,6c-4.7,1.2-10,0.2-14,4C2028,497.2,2024.5,498,2021,499z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("641B22"),
                d:
                  "M2028,470c-0.5,0.6-1,1.3-1.6,1.8c-1.8,1.5-3.9,1.1-5.4-0.1c-1.7-1.4,1.6-2.1,1-3.6       C2023.2,471.1,2026.5,467.9,2028,470z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761523"),
                d:
                  "M2033,478c1.1-1.6,0.9-3.7,2.1-5.3C2034.4,474.5,2036.3,477.1,2033,478C2033,478,2033,478,2033,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("80181F"),
                d:
                  "M1990,519c0.7-2.8,2.5-4.7,4.6-4.5c1,0.1,1.8-0.3,2-1c0.9-5.3,5.1-6.4,9.4-7.5c3.1-3.8,7.5-4.7,12.1-5       c0,0.3-0.1,0.7,0,1c-2.7,1.7-5.3,3.4-8,5c-0.9,2.3-2.9,3.2-5,4C2000,513.6,1995.9,518,1990,519z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1925"),
                d:
                  "M2031,495c3.3-6.1,9.2-3.3,14-4C2040.4,492.4,2035.7,493.7,2031,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B45960"),
                d:
                  "M1969,352c-2-0.8-4-1.9-6,0.1c-4.1-1.1-8.4-1.9-12.2-3.9c2.6-2.1,0.2-1.8-1-2.1c-2.1-0.6-5.6,0.3-3.8-4       c3.3,0,5.9,1.8,8.6,3.4c1.5,0.9,2.7,1.8,4.4,0.6c1.5,2,3.1,3.9,6,3C1966.8,349.3,1968.7,349.6,1969,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A53B44"),
                d:
                  "M2034.7,537.7c0.8-1.1-0.8-2.7,1.5-2.6c1.2,0.1,1.7-2.2,4-0.7c3.4,2.4,6,4.4,4,9.1       c-0.9,2.1,2.7,5.2-0.5,6.6c-1,0.4-3.3-2.8-5.3-3.7C2033.8,544.4,2036.8,540,2034.7,537.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("693535"),
                d:
                  "M2041.8,555.1c-1-1-2-2-3-3c2.7-1.9,3.5,1.1,5.2,1.9c0.4,0.4,0.5,0.9,0,1.3       C2043.2,555.7,2042.5,555.6,2041.8,555.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2D35"),
                d:
                  "M2044,555c0-0.3,0-0.7,0-1c1,1,2,2,3,3c-0.4,1-1.1,1.7-2.1,2c-0.2-0.1-0.4-0.3-0.6-0.4       C2043.6,557.5,2042.8,556.4,2044,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("992933"),
                d:
                  "M2005,511c1.1-2.1,3.3-2.7,5-4c0.6,0.9,2.1,1.5,0.9,3C2009.1,510.8,2007.3,512.7,2005,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6A2A2C"),
                d:
                  "M2045,559c-2,0.8-3.9,3.8-6,0.2c0.4-0.4,0.9-0.8,1.3-1.1C2042.2,556.6,2043.7,557,2045,559L2045,559z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("914A4F"),
                d:
                  "M2045,559c-1.5-0.9-3.1-1.2-4.8-1c0.5-1,1.1-2,1.6-3c0.7,0,1.4-0.1,2.1-0.1       C2044.3,556.3,2044.6,557.7,2045,559z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("70151F"),
                d:
                  "M2013.1,491.1c3.2-2.1,5.9,2,8.7-0.1c0.4,0.5,0.7,1,1.1,1.5c-0.6,0.1-1.3,0.1-1.8,0.3       C2018.1,494.6,2015.5,494,2013.1,491.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA2230"),
                d:
                  "M437,378.2c0.6-0.4,1.3-0.8,1.9-1.2c1.4,0.4,2.7,0.7,4.1,1.1c-1.8,1.6-3.7,3-5.3,4.7       c-1.5,1.6-1.8-0.6-2.7-0.7C435.7,380.7,436.3,379.4,437,378.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BA2230"),
                d: "M431,384c0.6-1.3,1.6-2,3-2C433.9,384,432.5,384,431,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D46776"),
                d:
                  "M545.7,386.8c1.1,0.3,2.2,0.6,3.3,0.9c-0.3,0.2-0.7,0.3-1,0.5c-4.5,2.5-9.1,2.5-13.8,0.7       c-3-0.7-6.1-1.3-9.1-2c-2.8-0.4-5.7-0.7-6.5-4.2c0.4-0.8,1-1.2,1.9-1.2c7.2,2.8,14.7,4.5,22.5,4.4       C544,385.8,544.9,386.1,545.7,386.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721524"),
                d:
                  "M534.2,388.8c4.6-0.2,9.2-0.4,13.8-0.7c0.2,2.6-1.5,3-3.5,2.8c-3.2-0.4-6.3,0.4-9.5,1       C537.1,390.4,532.9,390.3,534.2,388.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M501,388c-2.7,0-5.3,0-8,0c-4.7,2-8.9-0.3-13.3-1.6c-1.3-0.4-3.2-0.7-3-2.7c0.2-1.7,1.8-2.5,3.3-2.6       c4.7-0.2,8.9-2.7,13.5-2.9c0.5-0.2,1-0.2,1.6-0.3c1.3-0.1,2.6-0.1,3.9,0.4c1.4,0.5,2.6,1.5,3.5,2.6c0.6,0.8,1.2,1.7,0.7,2.7       c-0.7,1.3-1.9,1.7-3.3,1c1.9,1.6,4.4,1,6.6,1.2c2.9,0.3,5.9-0.9,8.5,1.3C510.5,389.1,505.7,387.5,501,388z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D1420"),
                d:
                  "M515,387c-3.7,0-7.3-0.2-11,0.1c-2.7,0.2-4.6-0.6-6.1-2.9c1.5-0.1,2.9-0.3,4.5-0.4       c0-2.6-2.3-3.2-3.3-4.7c0.5-0.7,1.2-1,2-1.1c2.5-0.4,5.1,0.1,7.5-0.7c1.7-0.4,3.3-1.1,5.1-0.8c2.5,1.6,4.2,3.9,5.2,6.7       c2.1,1.2,4.2,2.5,6.3,3.7C521.8,388.9,518.4,385.9,515,387z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841820"),
                d:
                  "M494,379c-5.5,1.4-11.1,2.9-17.6,4.6c6.2,2.1,10.9,5.2,16.6,4.4c-1.1,1.4-2.6,0.8-4,1       c-3.2,2.1-6.8,1.8-10.2,1.2c-2.5-0.5-4.9-0.7-7.4-0.7c-1.8-0.2-4-0.4-4.3-2.4c-0.4-2.6,2.4-3.5,3.9-5.1c0.6-1.3,1.6-2,3-2       c2-1.8,4.5-1.4,6.9-1.4C485.3,378.8,489.7,375.8,494,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F1F2E"),
                d:
                  "M470,389c6.3,0,12.7,0,19,0c-1.3,4.6-5.9,4.2-9,6c-4.4-0.6-8.6,1.1-13,1c1.9-1.4,4.3-1.4,6.5-2       c1.1-0.3,3.1,0.7,2.7-1.4c-0.1-0.8-0.2-3.3-2.8-2.7c-2,0.4-4.3,0.1-6.4,0C467.4,387.6,468.7,388.5,470,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE1A24"),
                d:
                  "M449,371c1.5-0.1,1.8,1.1,2.2,1.9c5.6-6.3,12.3-11.1,20.8-12.9c4.4-1.5,5.4-1.1,6.3,3       c0.3,1.4,0.4,2.8,1.5,4c1.8,1.9,3.8,4.1,2.2,7c-1.6,2.9-6.8,4.8-10,4c-4.2,2.3-7.6,5.9-13.1,5.9c-2,0-1-0.3-1.5-1.3       c-1-2.1-1.3-5.8-5.4-4.7C450.9,375.7,449.5,373.6,449,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A31D2A"),
                d:
                  "M472,378c4.8,1.6,5.4-5,9.5-5c0.2,0-0.9-3.3-2.1-4.6c-1.2-1.2-2.6-2.2-2.3-4.1c0.6-4.2-1.8-4.7-5-4.4       c0-1.3-0.7-1.9-2-2c0.7-0.7,1.3-1.3,2-2c1.4,0.1,2.7-0.3,4-1c1.8-0.4,3.5-0.1,5,1c1.1-0.3,2.1-0.6,3.2-0.8       c0.4,0.6,0.3,1.2,0,1.8c-1.2,1.2-2.9,1.7-3.5,3.5c-1.6,5,2.6,6.9,5,9.9c0.1,0.7,0.2-0.2,0.2,0.4c0.1,1.8,0.8,2.8,2.4,3.3       c0.9,3,0,4.5-3.3,4.6c-1.3,0.1-2.9,0-4,1.3c-2.3,0-4.7,0-7,0C473.3,379.3,472.7,378.7,472,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941A1B"),
                d:
                  "M470,389c-1.1,0-2.3-0.2-3,1c-1.3,0-2.6,0.1-4,0.1c-1.7,0-3.4,0-5-0.1c3.7-3.7,8.8-5.2,13-8       c0,1.1-0.6,1.8-1.5,2.4C467.1,386.2,468,387.7,470,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("851828"),
                d:
                  "M623,356c2.7,1.9-1.5,7,3.7,7.4c-0.7,2.1-1.8,0.7-2.6,0.8c-0.9,0.2-2.1,0.2-2.3,1.3       c-0.1,0.5,0.4,1.2,0.8,1.7c0.8,1.3,1.7,0.3,2.5,0c2-0.8,3.7-3.9,6,0.7c1.5,3.1,2.6-1.2,3.9-2c5.1-0.7,10.2-1.1,15.3-2.1       c3.4-0.7,7.5,0.3,10.9,2.1c-0.6,2.7-3,2.1-4.8,2.3c-7.7,0.6-7.7,0.5-8.4,7.7c-0.1,0.3-0.1,0.9-0.2,0.9       c-5.9,0.5-12.3,2.7-17.7,0c-3-1.5-3.6-0.1-5.1,1.1c0-8.1,0-8.3-7.8-7.9c-10.5,0.4-20.9,1.2-31.3,1.9c-0.6-1.5-0.1-2.8,0.5-4.1       c1.5-2.6,4.1-3.1,6.8-3.3c7.8-0.5,15.5-2,23.3-2C621.4,362.6,621.1,358.4,623,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1321"),
                d:
                  "M648,376c-2.8-8-2.2-8.8,6.3-9c2.2-0.1,4.7,0.9,6.6-1c2.1-1.9,4.6-1.4,7.1-1.5       c5.3,0.4,10.6-0.4,15.9,0.5c4.4,3.4,9.2,3.7,14.4,2.2c2.5-0.7,5.2-1,7.6,0.8c2.3,1.8,4.7,0.5,7.1,0.4c2.2-0.2,4.3-0.3,6.2,1       c0.8,0.6,1.5,1.4,0.2,2.3c-2.2,0.4-4.4,0.9-6.4-0.6c-13,1.3-25.9,2.9-38.9,3.7C665.4,375.2,656.8,377.1,648,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781523"),
                d:
                  "M795,367c3.3,1.2,6.6,1,10,1c0.1,0.7-2.6,1.6,0.1,2c1.6,0.2,3.2,0,4.9,0.1c-5.1,2.4-10.7,1.3-16,1.6       c-10.3,0.7-20.6,2.3-31,2.4c-0.2-1.7-1.4-2.1-2.8-2c-4.9,0.3-10-0.9-14.8,1.4c-1,0.5-1.3-0.6-1.4-1.4c0.4-1.6,1.5-2.5,3-3       c7.5-0.7,15.1-1.6,22.7-1.4c6.4,0.2,12.8-1,19.2-1.6C791,365.7,793.2,365.3,795,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82182C"),
                d:
                  "M746,370c-0.7,0.7-1.3,1.3-2,2c-4.5-0.9-8.9-0.2-13.4,0.3c-5.3,0.6-10.7,0.5-16.1,0.7       c-1.6,0.1-2.2-0.4-1.5-2c2.3,0,4.7,0,7,0c2.5-2.6,5.8-2.3,9-2.4c5.1,0.5,10.2-2.1,15.3-0.4C745.2,368.5,745.8,369.1,746,370z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5C111F"),
                d:
                  "M862.9,374.6c0.4,0.3,0.8,0.6,0.7,0.7c-0.2,0.8-0.4,1.6-1.3,2c-0.1-0.3-0.4-0.6-0.3-0.9       C862.3,375.7,862.6,375.2,862.9,374.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63121F"),
                d:
                  "M886.9,389c-1.6-0.4-3.7,0.3-4.3-2.1c-0.6-2.6,0.8-2.8,2.9-3c1.5-0.1-0.5-1.4,0-1.7       c1.4-1.1-0.3-4,2.5-4.1c1.5-1.8,4-1.8,6.4-2.9c0.1,0-0.7-0.7-0.5,0c0.1,0.2-0.1,0.3-0.3,0.4c-1,0.3-1.9,0.4-2.6-0.4       c-0.3-0.6,0.3-2.6-0.9-1.7c-2.1,1.5-4.2,2.5-6.7,2.7c-2.3,0.2-1.6,1.6-1.4,2.8c0.5,3.2-1.8,5.5-4.1,4.9c-5-1.2-3.1,2.6-3.6,4.3       c-0.5,1.6,0,1.8-2.3,1.1c-1-6.7-2-13.3-3-20c3.1-1-0.4-2,0-3c8.4-0.5,16.7,0.7,25,2c8.9,0.4,17.7,2.2,26.6,2.8       c2.1,0.2,3.4,1.9,5.3,2.5c1.4,1.6,4.9,0.6,5.1,3.8c-0.9,0.8-1.9,1-3.1,1c-1.1,0-2.2-0.1-3.3-0.3c-5.5-0.8-11-0.9-16.5,0.1       c-2.2,0.5-4.3,0.4-6.5,0.4c-2,0.1-4-0.3-5.9,0.4c-1.5,0.5-3,1-4.4,1.6c-1.7,1.9-0.6,4-0.3,6c0.4,1.2,1.7,2.1,1.2,3.6       c-0.4,0.3-0.7,0.7-1.1,1c-1.8,0.6-2.1-1.1-2.7-2C887.7,387.9,887.4,388.3,886.9,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921B2A"),
                d:
                  "M876,478c1.3,1,2.6,2,3.9,3c-1,1.3,0.1,3.7-2.1,4.5c-2.2,0.9-4.3,1.3-6.7,0.4       c-5.8-2.2-11.8-1.1-17.5,0.2c-4.7,1.1-9.1,2.5-14,1.4c-2.4-0.6-4.6,0.6-6.9,0.9c-5.1,0.5-10.1,0.7-15.1-0.3       c-1.2-0.2-2.3,0.1-3.2,1c-2.8,2.9-6.2,2.6-9.6,1.7c-0.8-0.2-1.5-0.7-2.3-0.3c-8.1,3.4-16.5,1.1-24.8,1.6       c-4.2,0.3-8.3,2.3-12.7,1c-0.5,0-1,0.1-1.4,0c-8.8,0.5-17.8-0.4-26.3,2.9c-0.4,0.2-0.9,0.4-1.3,0.5c-2.9-0.6-5.9-0.8-7.6-3.7       c-0.3-0.9-0.3-1.8,0.2-2.7c0.3-0.3,0.7-0.5,1.2-0.5c0.1,0.1,0.3,0.1,0.4,0.2c0.7,0.4,0.8,1.4,1.5,1.7c-0.6-0.7-0.4-1.4-0.1-2.1       c4.6-3.6,10.2-2.4,15.4-3c8-1,16.2,1.4,24.2-0.9c1.3-0.4,2.7-0.2,3.8,0.6c1.8,1.3,1.6-0.8,2.4-1.2c0.4-0.3,0.8-0.4,1.2-0.5       c1.3,0.4,2.6,0.3,3.6-0.7c0.4-0.2,0.8-0.4,1.2-0.5c1.8-0.5,3.5,0.3,5.3,0.1c0.4-0.1,0.9-0.1,1.3-0.1c4.5,0.7,9,0.6,13.1-1.8       c10.1,0.8,20.1-0.2,30.1-1.5c8.8-1.1,17.7-2.3,26.5-3.6C865.8,475.5,870.7,477,876,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811724"),
                d:
                  "M876,478c-0.1,0.6-0.5,1.8-0.9,1.5c-2.5-2-6.6,0.2-8.4-3.4c-0.3-0.7-0.9-0.3-1.2,0       c-4.3,4.5-10.1,1.6-15.1,2.7c-8.4,1.9-17,2.6-25.6,3.8c-6.3,0.9-12.7-0.4-19,1c-0.9,0.2-1.6-1.6-2.9-1.5c-4.5,2.1-9.6-0.2-14,2       l0,0c-2,0.3-4-1.5-6,0l0,0c-1.2,0.9-2.8,0.3-4,1c-0.3,0-0.7,0-1,0c-2.3,1.2-3.3-0.1-4-2c1.8-2.4,4-3.5,7-3c1-0.8,2-0.8,3,0       c7.9,0.5,15.9,1.4,23.7-1.2c1.3-0.4,1.2-0.4,1.8,0.9c0.8,1.7,2.4,0.9,3.4-1.2c1.3-2.7,3.6-1.8,5.4-0.6c1.5,0.9,2.3,2.5,3.2-0.7       c0.3-0.9,2.4,2.2,4.4,1.7c0.3-0.1,1.6,0.8,1.5,0.4c-1.1-5.3,1.6-2.4,3.4-1.7c0.7,0.3,1-0.6,1.4-1.2c0.9-1.6-2.1-1-1.3-2.6       c5.7-0.2,11.5,1.3,17.1-0.8c2.6-1.1,5.5,0.8,8-1c1.7-0.5,3.7-0.5,4.8-2.1c0.8-1.1,0.5-3.6,2.4-2.9c0.9,0.3,1.9,3.4,1.3,4.3       c-1.7,2.7,0.9,2.3,1.8,2.6c1.3,0.4,3,0.2,2.1-1.9c-0.6-1.3,1.5-1.7,0.5-3.1c-1.4-1.9,0.6-1.7,1.5-2c1.8-0.7,2.2,0.8,2.1,1.8       c-0.6,2.9,0,4.7,3.2,5.5C878.3,474.9,873.7,477,876,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M774,483c1.4,0.6,2.3,2.2,4,2c-0.6,1-1,2.1-0.5,4.1c-3.1-2.7-5.9-3.5-8.9-1c-0.5,0.4-1.6,0.6-2.3,0.4       c-5.4-1.4-10.9-0.2-16.3-0.4c-5.3-0.2-10.4,0.7-15.6,0.5c-1.3,0-1.6,1-2.4,1.4c-0.7,0-1.3,0.7-2,0c-0.3,0-0.7,0-1,0       c-5.8-0.3-11.7-1.5-17.3,1.1c-4.7,2.2-9.4,0-14.1,0c-1.4,0-2.6-1.1-3.4,0.8c-0.1,0.3-0.7,0.5-0.8,0.4c-3.4-3-6.6-0.1-9.9,0.4       c-3.9,0.5-7.7,1.1-11.7,0.8c-4-0.3-4.1-0.5-1.8-4.4c3.8,1.8,7-1.3,10.6-1.5c2.6-0.2-0.3-2.4,0.4-3.5c0.5-0.2,0.9-0.4,1.4-0.6       c0.9,5.5,5.9,1,8.4,3.4c1.5,1.4,4-2,5.3-1.4c2.6,1.1,3.9,1.2,5.8-1.1c0.4-0.6,4-1.7,5.7,1.4c0.9,1.6,4.2,0.9,5.8,0.2       c6-2.7,12.2,0,18.1-1.2c0.3-0.1,1.1,0.7,1.2,0.6c5-5.5,10.4-0.1,15.6-0.8c5.2-0.6,10.4-0.2,15.7,0c0.5,0,2.4,0.2,2-1.2       c-0.5-1.9,0.9-2.4,1.6-1.6C769.5,483.7,772.2,481.3,774,483z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12936"),
                d:
                  "M878,485c1.5-0.9-0.7-3.6,1.9-4c0.3,0.7,0.6,1.3,1,2c-0.9,4.1,1.7,7.9,1.1,12c-2.6,0.2-1.7-3.3-3.8-3.6       c-0.9-0.4-1.6-1-1.9-1.9C875.9,487.7,876.5,486.2,878,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89172D"),
                d:
                  "M856,472c-0.1,1.5-0.3,3.9-2.2,2.6c-2-1.4-4.1-0.2-5.8-1.6C850.7,472.6,852.9,468.8,856,472z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M844.3,454.7c0.9,1.2,1.7,2.2,2.5,3.2c-0.4,0.2-1,0.5-1.3,0.4C843.7,457.8,843.9,456.4,844.3,454.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M784,480c-1,0-2,0-3,0c0-0.9,0-1.9,0-3.5C782.6,477.6,783.9,478.2,784,480z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M727.7,468.1c0.4-0.2,0.8-0.6,1.2-0.6c0.9,0,1,0.7,0.8,1.3c-0.1,0.3-0.6,0.5-0.9,0.8       C728.6,469.2,728.3,468.9,727.7,468.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M731,476c-0.7,0.3-1.1,0.5-1.5,0.5c-0.2,0-0.6-0.3-0.7-0.6c-0.3-0.7,0.3-0.9,0.8-0.8       C729.9,475.2,730.3,475.6,731,476z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M726.6,477.5c-0.7,0.4-1.2,0.8-1.7,0.8c-0.6,0.1-0.8-0.6-0.5-0.9c0.3-0.4,0-1.5,1-1.1       C725.8,476.4,726.1,476.9,726.6,477.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M670,489c-0.1,1.5-2.1,3.4,2.1,3.3c4.2-0.1,8.3-1.5,12.6-1.1c0.9,0.1,2.1,0.3,3-1.1       c0.8-1.3,2.8-4.4,3,0.5c1.1-0.3,3.1,3,3.3-0.9c0-1,1.3-0.8,1.5-0.6c3.1,2.6,7-0.6,10.3,1.7c1.6,1.1,4.1,0.3,5.7-0.8       c5.3-3.8,11.5,0.1,17-2.1c0.6-0.2,0.5,1.4,0.6,2.2c0,1,0,2,0,3c-1,2.6-3.6,3-5.5,2.8c-5.4-0.7-10.8,0.1-16.3-0.5       c-5.9-0.6-12.9-0.8-18.1,1c-6,2.1-11.3-0.3-16.7,1c-1.4,0.3-2.4,0.9-3.2,2.1c-0.9,1.5-2.1,2.6-4.1,2c-1.1-1.9-5.5,0-4.9-4.5       c-0.3,3.6-1.5,5.5-5.4,4.4c-1.7-0.5-2.2,2.3-3.9,2.7c-1.9,0.5-3.9,1.6-5.8,0c-1.7-2.6-4.4,0.9-6.4-1.1c0.8-1.4,2.6-0.3,3.4-1.2       c1.4-1.4-0.2-1.4-1-1.7c1.4-1,1.4-2,0-3c2.3,0.1,4.7,1.2,7,0c0.2,0.2,0.4,0.5,0.7,0.7c-0.2-0.2-0.5-0.5-0.7-0.7       c2.1-1.8,4.3-3.4,6.3-5.3c2.3-2,7.1,1.6,7.8-3.7C664.5,490.8,667.5,488,670,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791527"),
                d:
                  "M635.3,484.5c0.8,0.8,1,1.1,1.3,1.4c-0.3,0.3-0.7,0.8-0.9,0.7c-0.4-0.1-0.8-0.5-0.9-0.9       C634.7,485.5,635,485,635.3,484.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M887,512c-1.7-6.5-2.1-13.2-2.1-19.9c1.5-2.1,1.7-2.1,4.6,0.8c0.7,1.2,0.8,2.6,0.8,4       c0,3-0.1,6.1,0.2,9.1c-0.1,2.1,0.8,3.8,2.3,5.1c3.2,3.2,6.6,0.9,9.8,0.2c2.6-0.6,4.8-1.5,6.2,1.8c0.6,1.5,2.1,1.3,3.5,1.1       c2.9-0.5,5.9-0.3,8.9-0.9c4.2-0.8,5.4,0.5,5.9,5c2.5-1.3,3.5-4.6,6.4-5c3.1-0.4,5.3,1.4,7.3,3.6c0.3,0.3,0.6,0.7,0.9,1       c4.1,2,2.5-3.7,4.9-3.7c1.9,0,5.3,0.6,5.1-1.4c-1-7.2,4-3.8,6.2-3.5c2.2,0.3,5.2-1.4,6.8,1.8c0.3,0.6,2.1-0.5,3-1.2       c3.4-2.9,4.6-0.8,5.6,2.9c0.9-1.7,2.2-2.8,3.8-2.5c6.1,1,12.7-0.7,18.2,3.1c2.8,2,3.7,0.6,4.6-1.7c4.8-2.6,9.8-0.9,14.7-0.7       c3,0.2,6.1,1.6,8.1-2c0.3-0.6,1.3-0.8,1.8-0.3c4.3,3.8,9.2,0.7,13.8,1.3c1.1,0.1,2.4-0.2,3.4,0.4c3,2,5.3,1.1,7.3-1.5       c0.8-1.1,1.9-1.3,3-0.4c4.3,3.4,9,4.8,14.4,2.7c1.1-0.4,2.3,0,3.2,0.9c1.6,1.4,3.2,1.6,5,0.5c1.7-1,3.4-1.1,5.2-0.1       c0.7,0.4,1.7,0.7,2.4,0.2c4.8-4,10.8-0.6,15.9-2.9c0.5-0.2,1.7,0.4,1.9,0.1c2.6-5.1,5.7-2.5,9.2-1.2c2.1,0.7,5-3.4,7.2,0.7       c0.1,0.2,1.7-0.9,1.9-1.6c0.5-2.5,2.4-3.1,4.1-2.3c3.6,1.7,6.9,0.9,10.4-0.1c1.7,1.1,5.4-1.8,5.6,2.6c0,0.1,0.1,0.1,0.2,0       c0.4-1.2,1.9-2.5,2.3-1.7c1.3,2.9,6.4,0.2,6.4,4.6c0.1,0.5,0.1,0.9,0.2,1.4c-0.4,4.4-6.9,8-10.8,5.7c-1.9-1.1-3.3-1.6-5.4-0.4       c-1.6,0.9-3.5,0.8-5.4,0.2c-1.3-0.4-2.2-1.4-3.2-2.2c0.5,0.9,1,1.9,0.3,2.9c-0.9,1.2-1.4,1.1-5.6-0.9c1.3,2.6,1.6,5-2.1,3.6       c-3.5-1.3-6.3-1.7-9,1.3c-0.8,0.9-2.6,1.3-3.2,0.6c-2.8-3.2-6.3-0.6-9.3-1.4c-3.7-1.1-7.1,0.7-10.7,1.5       c-3.3,0.7-6.9,1-10.3-0.3c-1.2-0.5-2.3-0.3-3.3,0.3c-3.8,1.4-7.5,3-11.6,0.6c-1.9-1.1-3.4-0.6-3.1,2.1c0.1,0.9-0.6,1.5-1.5,1.6       c-2.7-3-7.7-2.1-9.9-5.9c-1.8,1.2-4.1,1.6-4.9,4.1c-1.7,5.2-1.7,5.2-6.5,2.1c-1.1-0.7-2.8-1.1-3.3-2.2c-1.5-2.9-3.5-1.8-5.4-1       c-2.1,0.8-4.1,1.7-5.8-0.6c-1.3-1.8-1.7,0-2.5,0.6c-2,1.8-3.9,2.9-6.4,0.2c-1.8-2-2.7-1-2.8,1.4c-0.1,3.3-4.9,7.5-8.2,7.3       c-1.7-0.1-1.9-0.7-1-5.3c-1.2,2.4-3,4.1-2.6,6.8c0.3,2-0.8,3.6-2.8,4.3c-2.9,1-1.9-2.5-3.3-3.3c0.3,2.2,6.1,8.1,7.9,8.2       c0.7,0,0,0.4,0.5,0c1.6-1.3,2.4-3.4,5.3-1.6c4.6,2.8,10.5,3.7,13.1,9.3c-0.4,4.4-3.6,3.4-5.6,2.2c-2.1-1.3-3.8-1.7-5.8-0.4       c-0.9,0.6-1.8,1-2.8,0.5c-3.4-2-6.9-2.8-10.6-0.8c-0.7-0.1-1.3-0.4-2-0.7c-3-1.3-6.1-1.8-9.4-1.4c-3.3,0.4-6.2-1.5-9.5-1.8       c-1-0.1-1.9-0.5-2.7,0.3c-4.1,1.4-8.1-0.5-12.2-0.6c-8.2-0.2-16.5-1.3-24.6-2.6c-0.5-0.1-1-0.1-1.4-0.4c-6-3.4-12.1-4.5-19-2.8       c-4.9,1.3-9.9,0.9-14.3-2.2c-1.4-0.4-2.6-1.3-2.5-2.8c0.2-6.3-3.8-11.9-3-18.3C889.4,517.3,888.7,514.4,887,512z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993541"),
                d:
                  "M884,511c1.4,6.6,1.5,13.3,2.1,19.9c0.9,2.6,0.6,5.3,0.3,7.8c-0.4,3.7-4.6,5.1-10,3.7       c-1.5-2.5-3.6-3.6-6.6-3.3c-3.4,0.4-6.9,0-9.5-2.2c-3.5-3-7.2-2.1-10.9-1c-1.5,0.4-2.5,0.6-3.5-0.7c-2.3-2.9-5-4.2-8.6-2.4       c-0.4,0.2-0.9,0.3-1.4-0.1c-4.5-3.7-9.3-1.8-13.9-0.7c-2.4,0.6-2.9-0.7-3.5-2.3c-0.1-2,1.3-3,2.8-2.7c4.6,0.9,8.7-2,13.3-1.3       c1.5,0.3,2.5-0.6,3.6-1.5c1.3-1.1,3-1.9,4.6-1.6c7.3,1.6,13.4-2.5,20-4c4.7-1,9.6,0.7,14.4-0.1c0.6-0.1,2,2,1.3-0.8       c-0.3-1.4,1-2.7,1.8-4C881.3,512.8,881.8,510.8,884,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3945"),
                d:
                  "M884,511c-1.2,0.8-1.4,2.6-3,3c-4.3,2.9-9.5,2.8-14.3,3.9c-16.5,3.6-33.2,5.9-49.6,9.8       c-5.7,1.4-11.8,1.5-17.6,2.8c-0.8,0.2-1.6,0.2-2.3-0.2c-0.7-0.6-0.8-1.3-0.6-2.2c0.4-1.3,1.3-2.2,2.4-2.9       c3.7-1.7,7.3-2.2,11.5-2c4.9,0.3,10.1-1,13.8-5.2c1.2-1.3,2.5-2.5,4.3-1.9c5.7,1.9,10.9,0.1,16.2-1.8c1.8-0.6,3.6-0.2,5.4-0.4       c9.1-1,17.7-4.7,27.1-4.7c2,0,2.5-1.9,3.1-3.5c0.6-1,1-2.3,2.7-2C883.6,506.3,884.2,508.6,884,511z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E303B"),
                d:
                  "M895,540c0.3,0,0.7,0,1,0.1c5.7,3.4,11,3.3,17.1,0.1c1.8-0.9,6.9,0.7,10.1,2.1       c11.3,5,23.4,4.9,35.3,5.5c2.6,0.1,4.8,2.5,7.6,1.1c2.8,0.9,6.7-1.2,8.3,3c-0.7,2.6-2.7,1.8-4.4,1.5c-2.9-0.4-5.7-1.1-8.7-0.7       c-16.6-1.9-33.3-2.5-49.9-4.9c-7-1-14.2-0.9-21.2-2c0,0-0.2,0.1-0.2,0.1c0-1.7,0.1-3.3,0.1-5C891.9,541.6,893.6,541.6,895,540z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2D39"),
                d:
                  "M876,542c1.9-2.8,3.9,1.1,6.4-0.4c4.8-2.8,3.2-6.9,3.6-10.7c1.6,2.2,0.6,4.7,1,7.1c0,3-0.1,6-0.1,9       c-1.3,1.1-3,0.2-4.4,0.7c-8.4-1.4-16.9-2-25.3-3c-1.2-0.1-2.3-0.3-3.1-1.1c-1.1-1.3-2.7-1.1-4.1-1.5c-1.6-0.4-2.8-1.1-2.3-3.1       c1.4-1.7,3.4-2.5,5.3-1.5c2.5,1.3,5.2,0.5,7.6,1C865.7,539.7,871.2,539.5,876,542z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F3843"),
                d:
                  "M895,540c-1.2,2.3-2.3,5.3-4.9,1c-1.4-9.6-2.8-19.3-3.1-29c3.7,0.8,3.7,5,3.5,6.5c-0.4,2.9-0.2,6,0,8.5       C890.8,531.5,893.4,535.7,895,540z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M881,458c2.2-2.3,3.9-2.3,5,1c1.1,0.4,1.8,1.2,1.5,2.2c-1.8,5.3,0.5,11.1-2.1,16.3       c-0.1,1.8,0,3.6-0.2,5.5c-0.2,0.8-0.5,1.6-1.2,2.1c-1.6-6.1-1.3-12.5-2.4-18.8C881.2,463.6,881.2,460.8,881,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A33841"),
                d:
                  "M883,504c-0.7,0.7-1.3,1.3-2,2c-2.4,1-2.8-0.8-3.2-2.4c-0.4-2.1-0.2-4.3-0.3-6.4c0-2.2-0.3-4.4,1.4-6.2       c3.5-0.5,0.9,3.5,3,4C882.9,497.9,883.2,501,883,504z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("972B38"),
                d:
                  "M884,485c0-0.7,0.1-1.3,0.1-2c0.6-1.8,1.4-3.3,3.1-0.8c0.6,1,1.6,1.7,2.2,2.7c0.5,0.8,0.7,1.8,0.8,2.7       c0.1,0.9,0,1.9,0,2.8c0,0.5-0.1,0.9-0.3,1.4c-0.2,0.4-0.5,0.8-0.9,1.1c-1.6,0.7-2.2-3.2-4.1-0.9       C883.3,489.9,884.3,487.4,884,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A44B58"),
                d:
                  "M587,369c-0.4,1-0.7,2-1.1,2.9c-3.3,2.3-6.6,4.7-9.9,7c-0.4-0.3-0.7-0.7-1.1-1       c-0.2-1.4,0.9-1.8,1.7-2.5c1.5-1.1,3.1-2.1,4.7-3.2c1.3-0.7,2.3-1.8,3.4-2.8C585.4,369,586.1,368.4,587,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("66141F"),
                d:
                  "M577.1,376c-0.7,0.6-1.5,1.3-2.2,1.9c-4.7,2-9.4,4-14,5.9c-2.6,0.4-5.1,0.8-7.7,1.2       c-1,0.6-1.3-0.1-1.5-0.9c0.3-1.3,1.2-2.2,2.1-3C560.7,375.4,568.8,375.5,577.1,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D1722"),
                d:
                  "M552,384c0.4,0.4,0.8,0.7,1.1,1.1c-2.2,1.8-5.2,0.2-7.5,1.7c-8.8,0.1-17.7,0.3-25.5-5       c-1.5-0.4-2.8-1-2.2-3c0.9-1.1,2.4-2,3.4-1.3c3.6,2.6,7.9,1.9,11.9,2.8c0,2,1.5,2.1,3,2.5C541.5,384.3,546.8,382.9,552,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1177,575c3.6,1.2,7.5,0.3,11,2c1.4,1.3,3,0.7,4.6,0.7c4.2,0.1,6.3,3.1,4.9,7c-2.7,2.9-2.7,2.9-7.3,2.1       c2.9,0.4,5.4,0.9,3.8,4.8c-0.8,1.9,2.1,3.7,0.3,5.9c-0.8,1-1.4,2.7-2.8,2.5c-1.7-0.3-4.6-0.9-4.5-2.4c0.1-1.9-3-4.7,2.8-6       c-4.3-0.9-6.6-1.5-8.6-3.2c-1.1-1-2.4-1.1-3.6,0.1c-3,3.2-4.4,0.5-5.5-1.6c-1.4-2.8-1.4-3.1-4.2-1.1c-1.3,0.9-2.4,0.8-3.7,0.4       c-0.5-0.1-0.8-0.5-1.2-0.8c-4.4,6.9-4.4-2-6.9-1.9c1.7,0.6,2.3,1.7,1.6,3.4c-0.6,1.5-2,1.9-3.3,1.3c-1.2-0.6-2.1-0.1-3.3,0.1       c-2,0.4-3.4,0-3.3-2.8c0.1-1.8,0.6-4.6-2.6-5c-2-0.2-4.1-0.4-2.7,2.7c0.6,1.4,0.3,2.2-1,2.8c-1.1,0.5-2,0.1-2.6-0.9       c-1.9-3.3-4.4-3.2-7.6-1.9c-2.3,1-4-0.7-4.7-3.6c-0.1-0.5-0.6,0.1-1,0.1c-3.1-0.3-6.6,2.2-9.1-0.3c-2.2-2.2-4-1.9-6.7-1.7       c-2.6,0.2-4.7,0.1-5.5,3.4c-0.4,1.7-1.7,1.1-2.5-0.2c-0.6-1-1.2-2-1.6-3.1c-0.7-2.5-1.9-3.1-3.8-1c-2.2,2.4-3.9,2.3-5-1       c-0.5-1.4-1.4-2.3-3-1.7c-1.3,0.5-2.5,2.3-3.9,0.6c-1.3-1.5-1-3.5-0.8-5.3c0.1-1.4,0.6-2.6,2-3.2c3.5-0.5,7.1-1.7,10.2,1.2       c-1.6,2.1-3.6,1-5.4,1c2,0,4.2,0.8,6-1c7.6-1.7,15.1,0.5,22.6,0.9c4.7,0.2,9.4,1.7,14.3,1.3c0.9-0.1,1.8,0,2.6,0.1       c7.9,1.9,16.2,1.3,24.2,2.8C1165.9,573.6,1171.5,574,1177,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B13742"),
                d:
                  "M1114,556c-0.4,1.2-2.8,0.8-2.3,2c0.6,1.6,2,0.7,3.2,0.1c2.4-1.1,3.8,0.6,5.3,3.1       c0.9,1.5,4.1,2.8,5.9,2.4c4.5-1,9.3,0.6,13.6-1.4c0.6-0.3,1.5-0.4,1.9-0.1c7.2,4.3,16.3-0.9,23.2,4.7c6-2.5,11.2,6.2,17.4,1.3       c4.5,3.3,11.2-1.3,15.2,4.1c0.1,0.1,0.3,0.3,0.4,0.3c8.3-1.5,16.6,0.5,24.8,0c4.6-0.3,8.3,2.6,12.9,1.7       c5.7-1.1,10.5,4.3,16.7,2.5c6.2-1.8,12.1,2.2,18.3,1.7c1.8-0.1,5.8,2.5,6.4,3.6c-5.4,1.7-10.7,1.4-15.9-1.2       c-0.2-0.1-0.5-0.8-0.5-0.8c-7.4,3.8-14.4-1.3-21.7-1.4c-9-0.1-18.1-0.7-26.8-4.1c-3-1.2-6.8-0.6-10.2-0.4       c-11.2,0.6-21.9-2.4-32.9-3.6c-1.5-0.2-2.9-0.9-4.1,0.5c-2.6,1-5.1,1-7.7,0c-12.6-2.3-25.3-3.1-38-3.7       c-5.4-0.3-10.7-1.6-16.3-1.3c-2.4,0.1-4.8-2-6.5-4.2c-0.3-1.7,0.8-2.4,2.1-2.9c3.1-1,6.2-2.3,9.3-3.2       C1110,555,1112.1,554.3,1114,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821727"),
                d:
                  "M1197,584c1.8-5.3-2.8-4.3-5.3-5.3c-1.3-0.5-3.3,0.8-3.7-1.7c13.4,0,26.6,2.5,39.9,3.8       c6.7,0.7,13.4,1.3,20.2,2c10,1,20,2.1,30,3.2c2.9,0.9,6.1,0.6,8.9,1.8c0.5,2.2-1.4,2.2-2.6,2.6c-2.8,0.9-5.5,2-8,3.4       c-2.8,1.3-5.8,1.7-8.8,2.1c-1.9,0.3-3.8-1.2-4.2-2.1c-2.4-5.1-5.7-2.7-9.1-1.7c-3.9,1.2-4.6,0.7-4.3-3.3       c-1,0.5-0.9,1.7-1.5,2.5c-1,1.3-1.8,3.4-3.6,2.8c-1.9-0.7-0.8-2.8-0.9-4.3c0,0,1.5-1.1-0.2-0.5c-2.3,0.8-2.4-1.4-3.4-2.7       c-0.5,1.9,1.1,2.4,1.8,3.2c0.8,0.9,1.9,1.8,1,2.9c-1,1.4-2.4,0.6-3.5-0.2c-1.4-0.9-2.7-1.9-4.1-2.7c-2.3-1.3-4.3-4-7.1-0.5       c-0.7,0.9-2.2,0.3-3.1-0.6c-1.5-1.7-3.4-2-5.4-1.6c-3.1,0.9-6.2,0.9-8.9-1.2c-0.2-0.2,0-1-0.3-0.6c-2.5,4.5-5.4-0.4-8,0.3       c-0.8,0.2-1.9-0.9-1.8-2c0.1-1.2,1.3-1.3,2.2-1.5c0.6-0.2,0.1,0.4,0.5,0c0.3-0.3,0.5-0.5,0.1-0.3c-0.9,0.3-1.8,0.4-2.6,1       C1199.9,583.5,1199,585.4,1197,584z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2636"),
                d:
                  "M1158,570c2.2,1.2,4.8-0.4,7,1c0.4,2.7,2.6,1.7,4.2,2c2.6,0.6,5.4,0.4,7.8,2c-13.8-0.4-27.4-2.1-41-4       c0.2-2.4,2-1.9,3.3-1.6c4.7,0.9,9.6-0.4,14.3,1C1155.1,570.8,1156.5,569.3,1158,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B13742"),
                d:
                  "M1277,582c3.3-3.2,7.4-2.2,11.2-1.5c2.9,0.5,2.8,0.9,4.5-1.6c0.9,2.6,2.3,4.4,5.3,4.1       C1290.8,586.4,1283.9,584.8,1277,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912D3B"),
                d:
                  "M1287,588c-3.1,0-6.1-0.7-9-2c3.7-0.2,7.4,0.3,11,1c0.3,0.4,0.2,0.9-0.1,1.2       C1288.2,588.6,1287.6,588.6,1287,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821727"),
                d:
                  "M1289,588c0-0.3,0-0.6,0.1-1c0.3,0,0.6,0,0.9,0c2.5,1.2,5.6,0.3,8,2       C1295.3,591.4,1292.4,591.1,1289,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M1289,588c2.9,1.2,5.9,1.6,9,1c0.3,0,0.6,0,1,0c2.8,1.6,6.3,0.1,9,2l0,0c0.7,3.2-2.1,5.7-1.7,8.8       c-0.3,0.4-0.6,0.7-1.1,0.8c-2.3,0.3-3-1-2.9-3c-0.9,1.7-2.6,2.5-4.2,3.3c-0.3,0.1-0.8,0.3-0.9,0.1c-2.4-3.9-6.8-4.5-10.3-6.4       c-0.3-0.2-0.1-1.4-0.7-0.7c-4,5.2-6.9,0.3-10.2-1c3-3.1,7.5-2.9,11-5C1287.7,588,1288.3,588,1289,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1422"),
                d:
                  "M1306,600c-1.5-3.5,0.4-6.2,2-9c2,0,4,0,6,0c3,2.1,7,0.9,10,3c-0.2,0.2-0.3,0.3-0.5,0.5       c-3.5,1.8-7.1,0-10.6-0.1c-3.2,0-5,0.4-5.1,3.9C1307.8,599.2,1307.4,600.3,1306,600z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821727"),
                d:
                  "M1308,591c-2.9-1-6.5,1.1-9-2C1302.1,589.2,1305.5,588.1,1308,591z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1422"),
                d:
                  "M1324,594c1.9-0.8,3.5-0.3,5,1c0,0,0,0,0,0C1327.1,596.1,1325.1,597.3,1324,594L1324,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1623"),
                d:
                  "M1220,586c2.2-0.1,4.6-1.1,6,2.1c0.5,1.3,2.5,1.3,2.9-0.6c0.9-4,2.6-2.1,4.4-0.8c2.8,2.1,5.8,4,9.2,6.3       c-0.4-3.6-3.9-4-4.8-6.5c1.6-1.1,3.2-0.4,4.8-0.5c0.4,0,4.3,0.5,4.7,0.3c-2.4,3.9-2.4,3.9-2.1,7.6c1.6-2.3,3-4.2,4.5-6.2       c0.6-0.9,1.2-2.4,2.5-0.6c0.5,0.8,1.9,2.1-0.7,2.1c-1.1,0-1.4,0.8-1,1.7c0.4,1,1.3,0.9,2.1,0.6c2-0.7,4.4-1,5.9-2.3       c2.3-2,3.1,0.8,4.7,0.9c-0.2,2.9,2.7,3.1,4,4.8c0.1,2.3-1.8,2.6-3.2,3.1c-4.2,1.5-8.3,3.4-12.5,4.8c-2.8,0.8-5.9,0.6-8.3,3       c7.3,1.1,14.6,0.8,21.9,0.6c2.8,0,5.6-0.2,8.4,0.4c5.3,1.2,10.6,0.2,15.9,0.6c2.1,0.1,4.9-0.8,5.8,2.4c-17.2,0-34.4,0-51.6,0       c-3.9,0-7.9,0.3-11.4-2c-1,0.8-2,0.9-3,0c-4,0-8,0-12,0c-2,0.8-4,0.8-6,0c-2,0-4,0-6,0c-3.1,1.2-6.2,2.1-9.2-0.3       c-1.7-1.8-3.8-1.4-5.9-1.2c-0.5-0.1-0.9-0.3-1.2-0.6c-0.7-2.9,0.1-4.9,3.3-5.4c3.7-0.6,5.7-3.1,7.6-6c0.9-1.3,1.8-3.8,4.1-2.5       c1.7,1,0.8,3,0.3,4.5c-0.5,1.4-0.8,2.6-0.1,4.2c1.5,4,0.9,4.6-2.7,4.7c1.3,0.1,2.3-0.3,3.8-2.4c1.7-2.3,3.7-6.2,7.8-6.3       c0.6,0.7,0.9,1.6,1.5,2.3c-0.5-0.7-0.9-1.6-1.5-2.2c0.7-2.1,2.4-1.3,3.8-1.2c1.7,0.1,3-0.7,3.4-2.3c0.6-2-1-1.9-2.3-2.3       c-2.6-0.8-2.3-2-0.2-3.2C1218.3,587.1,1219.2,586.6,1220,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E171E"),
                d:
                  "M1189,606c0.3,0,0.7,0,1,0c2-0.8,4-0.8,6,0c2.3,3.6,6,1.4,9,2c-0.5,0.9-1.3,1-2.1,1.1       c-1.3,1.3-3,1.4-4.6,1.4c-12.1-0.3-24.2-0.7-36.3-1.5c-1-0.1-2-0.4-2.7-1c-4-1.6-8.1-0.7-12.2-0.8c-8.1,1.1-16.2,0.1-24.2-0.1       c-6.1-0.2-12.2-0.2-18.3-0.9c-11.5-1.4-23.1-1.2-34.7-2.1c-1-0.1-2-0.2-2.7-1c-0.4-0.3-0.7-0.6-1.1-0.9       c-0.5-0.8-2.2-0.3-1.9-1.8c0.3-1.4,1.5-1.8,2.7-1.5c15.4,3.8,31.2,0.6,46.7,1.9c11.2,1,22.4,2,33.7,2.1       c8.8,0,17.6,0.3,26.4,0.1c1.3,0,2.7-0.3,3.9,0.2c0.7,0.3,1.7,0.6,1.3,1.7c-0.4,1-1.5,0.3-2.2,0.8       C1180.7,605.2,1185,603.2,1189,606z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1159.2,607.9c14.6,0.4,29.1,0.8,43.7,1.2c1.1,1,2.5,0.8,3.8,0.8c12.5,0.4,24.9,0.8,37.4,1.2       c2.3,0.1,4.6,0.5,6.9,0.8c0.9,0.6,1.8,1.3,3.1,2.3c-3.3,1.3-6.2,0.5-9.1,0.7c-9.3,0-18.5-1.8-27.7-2.7       c-3.6-0.4-7.3-0.3-10.9-0.3c-12,0.1-24-1-36,0c-4.4,0.3-8.1-2.3-12.2-3.2C1157.6,608.6,1158.7,608.1,1159.2,607.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M1295,610c-3.5-2.1-7.4-0.5-11-1c-3.7-0.5-7.5,1.1-11-1c6.7-1.4,13.3-5.2,20.4-1.7       c3.3-2.8,6.8,1.9,10.2-0.2c1.8-1.1,3.9-1.1,5.2,1.1c0.1,0.2,0.1,0.5,0.2,0.7c0,0.7,0,1.3,0,2C1304.3,610,1299.7,610,1295,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E171E"),
                d:
                  "M1229,608c1,0,2,0,3,0c-0.1,1.7-1.2,2.2-2.6,1.9C1228.1,609.6,1228.9,608.7,1229,608z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E171E"),
                d: "M1211,608c2,0,4,0,6,0C1215,609.5,1213,609.5,1211,608z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M1324,594c1.4,1.7,3.3,0.7,5,1c0.6,2.9,3.3,2.6,4.7,2c2.6-1.3,2.6,1.3,4.1,1.6       c-1.3,2.1-3.1,1.8-4.1,1.1c-4.4-3.1-7.9-0.5-10.1,2.5c-3.8,5.2-8.6,6.7-14.6,5.9l0,0c-1-1.5-1.2-3.4-2.9-4.5       c-1.4-0.9-1.9-2.3-0.1-3.5c0,0,0,0,0,0c2.9-7.8,2.9-7.8,12.1-6.2C1320,594.1,1322,594,1324,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M1325,604.5c-0.7,1.9-0.9,3.4-3.3,3.4C1322,606,1323.1,605.2,1325,604.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43745"),
                d:
                  "M1362.9,581.2c1.6-0.8,3.2-1.6,4.7-2.4c0.1,0.6,0.4,1.4,0.2,1.9C1366.8,583,1364.6,581.4,1362.9,581.2z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B73844"),
                d:
                  "M1261,513c5.6,2.1,11.1,3.8,17.3,0.4c-0.4,2.8-2.2,4.5-0.7,7c0.3-3.2,2.5-4.3,4.8-4.9       c2.2-0.6,1.1,2,2.3,2.7c0.2-1.2,0.5-2.2,0.7-3.3c1.9,3.8,4.6-1.9,6.9,0.7c1.8,2,4.1,2.6,6.1-0.5c1.1-1.9,3-1.1,4.3,0.1       c2.3,2.3,4.3,3.9,7.6,1.2c1.7-1.4,5.2,0.2,8.3,3c0.7-1.5-1.2-2.8-0.1-4.3c3,0.4,6.1-1.2,8.9,2.7c1.3,1.8,1.2-2.5,2.4-4.1       c2.2,2.8,4.5,4.1,6.7,0c1.1-1.9,2.1-1.1,2.6,0.6c0.3,1.1,0.4,2.2,0.9,3.4c-0.1-2.3,5-0.7,3.1-4.6c-0.2-0.4,2.7-0.2,5.4-0.6       c-5.6,4.1,1.5,3.9,0.8,6.3c1.7,0.4,0.5-5.1,3.3-1.7c0.6,0.8-2.3,3.1,0.6,4.4c1.6-1.1,0.6-2.8,1.1-4.1c0.6-1.5,2.2-1.8,2.5-0.5       c1.1,5.5,5.6,3.4,8.7,4.4c1.8-1.5-1.8-3.8,0.7-4.8c1.8-0.7,1.7,2.1,3.3,2.7c1.7-1.1-0.2-3.5,1.7-4.8c1.9,0.9,0.1,3.6,2,4.5       c1.1,6.2-4.1,5.8-7.5,6.8c-2.4,0.7-5,0.5-5.8,3.6c-0.2,0.8-1,1.5-1.9,1.1c-0.9-0.4-0.9-1.5-0.3-2.2c1.5-1.7,1.4-3.1-0.2-4.7       c-2.1-2-1.8,1.5-3.3,1.3c-2.7-0.4-7-1.6-7.9-0.4c-2.3,3-4,1.4-6.5,0.3c3.1,4.5-0.9,8.2,0.2,12.1c-1.3-1.5-0.7-3.2-0.8-4.7       c-0.1-1.5,0.2-3.4-1.7-3.7c-2-0.4-2.9,1.3-3.3,3c-0.2,0.8-0.1,1.6-0.2,2.8c-1.5-1-1.8-2.2-1.9-3.4c-0.1-1-0.2-2.7-1-2.5       c-5.4,1.4-6.8-5.6-10.4-5.5c-4.7,0.1-9.6-4.4-14.3,0.9c-2.3,2.6-6.4,2-9.8,1.9c-0.4,0-0.8-0.4-1.1-0.6c-0.8-0.8,3-3.2-0.8-2.8       c-2.6,0.3-1.4,2.9-1.5,4.6c0,0.4,0.3,0.9,0.6,1.3c0.5,0.7,0.9,1.4-0.2,2c-1.1,0.5-1.5-0.1-1.6-1c-0.7-4.2-2.3-3.9-5.4-1.6       c-3.4,2.6-8.6,3.7-12.1,3.8c-5.1,0.2-9.8,1-14.6,1.5c-2.2,0.2-4.9,0.5-6.9,1.2c-5,1.7-9.4-4.6-14.4-0.5c-1,0.9-2.1-1.2-3.1-2.1       c-1.1-0.9-1.9-1.9-3.3-0.6c-3.4,3.1-2.8-1.7-4.4-2.2c2-4.8-2.7-4.7-4.7-6.6c4.3-1.7,8.4-3.8,12.9-4.7c3.4-0.6,6.4-1.5,9.5-3.4       C1250,511.1,1255.7,512.6,1261,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43B48"),
                d:
                  "M1261,513c-3.7,2.1-7.8,0.6-11.6,1c-1.9,0.2-4.1-0.4-4.5,2.5c-0.1,0.5-0.9,1.3-1.3,1.3       c-7.3-0.9-13.4,4.3-20.6,4.2c-3.7,1.1-2.3,3.8-1.7,6.9c-3.8-3.1-6-1.4-9.7,0.2c-3.6,1.6-9.9,3.8-14.6-0.2       c0-2.5,2.1-2.8,3.7-3.2c5.2-1.1,10.1-3.3,15.1-4.7c10-3.5,20.2-6.2,30-10.1c3.5-1.7,7.3-2.1,10.9-3.5c1.5-0.6,2.9-0.6,4.2,0.5       C1261,509.7,1261,511.3,1261,513z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73340"),
                d:
                  "M1216,522c-4.7,2.2-9.6,3.8-14.7,4.9c-1.6,0.4-3.2,0.7-4.3,2.1c0,0,0,0,0,0c-3.6,2.5-8,2.7-12,4       c-5.3,0.8-10.1,3-15,5c-5.4-0.1-9.7,3.8-15,4c-0.8-0.9-0.9-1.9-0.4-3c0.8-1.2,2-1.7,3.4-2c5.3-0.9,9.7-3.5,13.8-6.6       c1.9-1.4,3.9-1.8,6.1-1.6c3.7,0.3,7-1.7,10.3-2.4c8.5-1.6,16.3-6.2,25.2-5.7C1214.4,520.9,1215.3,521.1,1216,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1241.4,561.8c-6,3.5-2.3-3.9-5-4c0.4-0.5,0.7-1.1,1.2-1.4c0.5-0.4,7.7,3.8,7.6,4.3       C1244.6,563.3,1242.4,561.4,1241.4,561.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B43B48"),
                d:
                  "M1185,533c3.5-2.9,7.8-3.2,12-4C1195.6,532.4,1189.9,534.3,1185,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1253.6,564.5c3.7-2.7,3.7-2.7,7.9-0.2C1258.2,563.9,1255.8,563.9,1253.6,564.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B83A45"),
                d:
                  "M1239,552.7c-0.8,0.5-1.2,0.8-1.6,0.9c-0.3,0-0.7-0.3-1.1-0.5c0.3-0.3,0.5-0.8,0.8-0.9       C1237.5,552.1,1238,552.4,1239,552.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1216,522c-1,0-2,0.1-3,0c-4-0.6-8.2-0.1-11,2.5c-2.2,2.1-4.2,1.4-6.2,1.4c-3.4,0.1-6.3,0.2-9,2.9       c-2.1,2.1-5.5,1.7-8.4,1.4c-1.8-0.2-3.8-0.9-5.2,0.6c-5.1,5.1-11.4,7.3-18.3,8.2c-3.8,3-8,4.6-12.9,4.1       c-0.8-0.1-1.8-0.4-2.5,0.1c-5.6,3.6-12.5,4.1-18.4,7.1c-1.6,0.8-2.5,2.1-3.2,3.6c-1.3,0.7-2.7,1.3-4,2c-5.5-0.6-9.8,3.3-15,4       c-2-1-3.9,0.1-5.7,0.5c-2.9,0.7-5.3-0.6-7.5-1.9c-2.1-1.2-1.4-2.5,0.3-3.4c-2.2,0.6-5.1,1.5-6.3-1.7c-1-2.6,2.6-1.8,3.4-3.4       c-0.5-1.8-4-0.9-3.5-3.4c0.4-2.1,2.6-2.4,4.2-3c3.8-1.4,7.8-1.1,11.8-0.6c1.4,0.2,2.9,1.2,4.1-0.3c1.4-1.7,0-3.1-0.7-4.5       c-0.3-6.2,1.2-8.4,6.6-8.4c3,0,4.2-1.3,4.8-3.8c0.2-0.9,0.7-2.1,1.9-1.9c1.2,0.1,1.3,1.4,1.5,2.3c0.5,1.6-0.2,4,2.4,4.3       c2.4,0.3,4.1-1.1,5.2-3.1c1.9-3.4,5.1-4.6,8.8-4.8c3.5-0.2,7-0.2,10.5,0c3.6,0.1,7,0,9-3.8c0.5-1.1,1.8-1.9,2.9-1.1       c4.3,2.9,9.3,1.7,13.9,2.8c2.2,0.5,4.7-0.5,6.5,1.7c0.6,0.7,0.4-0.3,0.7-0.4c3.2-0.7,6.4-1.7,9.7-0.6c3.6,1.1,7.5,0.1,9.8-2.3       c3.6-3.9,7.6-3.5,11.9-2.9c1.8,0.3,3.6,0.6,5.4,0.6c2,0.6,1.6-1.7,2.6-2.2c2.6-1.3,5.3-2.4,8-0.4c1.4,1.1,2.7,1.6,4.4,1.4       c-0.9-0.2-2.2,0.5-2.7-0.7c-0.4-1,0.7-1.6,1.4-1.6c4.4,0.1,8-1.9,11.9-3.7c3.5-1.6,6.8,0.1,9.5,2.5       C1236.3,516.3,1226.1,519.1,1216,522z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A63440"),
                d:
                  "M1118,554c-0.7-1.6-2-3.1,1.1-4.1c4.1-1.3,7.6-4.6,12.3-3.9c0.8,0.1,1.4-0.2,2.1-0.8       c2.8-2.5,6-4,10-3.2c3.7,0.8,6.5-1.4,9.5-3c0.8-0.5,1.4-0.8,2,0.1c0,1,0,2,0,3c-9.5,3.3-19,6.4-28.5,9.8       C1123.7,552.8,1120.9,553.6,1118,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("983340"),
                d:
                  "M1246,512c-3.6,0.1-7.8-4.4-10.5-0.9c-3.4,4.6-7.8,1.8-12.4,3.5c2.3,0.3,3.6,0.4,4.9,0.6       c-2.6,0.5-4.9,1-7.6-0.5c-2.1-1.1-5.6-2-6.5,2.6c-0.3,1.3-2,0.3-3,0.6c-0.5-0.5-0.7-1-0.5-1.7c1-1.7-1.1-1.4-1.5-2.2       c-6,1.5-12.7-1.4-18.1,3.2c-0.7,0.6-1.6,1-2.2,0.2c-2.4-3.4-6.7-2.5-9.9-4.1c-2.3-1.1-5.1-1.4-6.4,2.2c-0.5,1.5-2.4,2.2-4,2.7       c-1.1,0.4-2.5,0.7-3.1-0.6c-0.8-1.7,0.8-2.2,2.7-3.3c-5,1.5-9.5,3.9-12.6-1.6c-2.9,4.5-4.5,4.7-7.7,0.8       c-0.5-0.6-1.1-1.2-1.7-1.8c0-0.3,0-0.7,0-1c1.4-4.6,2.7-7.7,9.2-5.6c6.8,2.3,14.4,0,21.7,1.5c5.7,1.2,10.9-2.3,16-4.5       c1.1-0.4,2.2-1.5,3.2-0.6c4.1,3.6,6.4,0.5,8.9-2.1c2-0.8,4.2,0.1,6.2-0.4c0.7,0,1.5,0,1.8,0.6c3.3,6.4,8.5,4.7,13.6,3.3       c1.6-0.1,3.2,0.2,3.2,2.1c0,0.8-0.4,2.2,0.5,1.4c6.5-6,14-1.3,20.9-2.3c1.5-0.2,3-0.4,4.4-0.5c2.3-0.1,4.6,0,5.3,3       c0,0.3,0,0.7,0,1C1255.8,508.6,1251.1,510.9,1246,512z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1261,507c-4.2-4-9.4-0.8-14.1-1.4c-2.7-0.3-5.7-1-8.7-0.9c-2.3,0.1-4.5,0.7-5.4,2.2       c-0.7,1.3-0.8,2.6-2.4,1.6c-0.7-0.4-4.5-0.8-1.2-3.2c0.3-0.2-1.3-1.2-2.3-1.2c0-4.5,3.1-5.1,6.6-5.3c4-0.3,8.3,1.1,11.8-2       c4.9,0.2,9.6,0.9,14.6,0c2.8-0.5,6.3,2.1,9.8,0.8c1.4-0.5,2.9-0.3,4.4-0.4c3.4-0.1,6.3,0.8,8.7,3.1c-0.4,2.8-2.8,1-4,1.8       c-0.3,0-0.7,0-1,0c-3.1,2.9-7.5,2.2-11,4C1264.9,505.6,1263,506.7,1261,507z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3644"),
                d:
                  "M1279,502c0.9-1.6,3.1-0.4,4-2c0.1-0.2,0.1-0.4,0.2-0.6c1-1.3,2.6-1.5,4.1-2.1c0.9-0.3,1.8-0.5,2.7-0.7       c1.2-0.2,2.5-0.5,3.4,0.6c0.5,1,0.4,2-0.4,2.8c-3.2-0.1-5.6,3.1-9,2C1282.3,502.1,1280.6,505,1279,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3644"),
                d:
                  "M1267,506c3.1-2.9,7.1-3.4,11-4c-0.3,3.1-2,4.3-5,4C1271,505.9,1269,506,1267,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861E2C"),
                d:
                  "M1309,488c0.1-1.4,0.9-2,2.3-2c1.4,0,2.6-0.2,2.7-2c2-3.3,5.3-1.9,8-1.7c1.5,0.1,3,0.6,4.2-0.3       c2.7-1.9,4.9-1.9,6.8,1c-2,1-4,2-6,3c-2,3.2-5.6,2.5-8.5,3.3C1315.3,489.1,1311.9,490.2,1309,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d:
                  "M1314.3,480.9c-0.4,0.2-0.8,0.6-1.2,0.6c-0.9,0-1-0.7-0.8-1.3c0.1-0.3,0.6-0.5,0.9-0.8       C1313.4,479.8,1313.7,480.1,1314.3,480.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A32431"),
                d:
                  "M1360,486.2c-0.7,0.2-1.1,0.5-1.4,0.4c-0.4-0.1-0.6-0.6-0.8-1c0.4-0.2,0.8-0.5,1.1-0.4       C1359.2,485.3,1359.4,485.7,1360,486.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A82E3A"),
                d:
                  "M1319,488c2.7-0.7,5.3-1.3,8-2c1.9,0,4-0.3,5,2c-2.9-0.2-4.9,2.4-8,2.6c-1.6,0.1,0.9,2.1,1,3.4       c0.1,2.4-0.8,3.4-3.3,2.8c-4.9-1.2-9.4-0.8-13.6,2.4c-2.3,1.7-5.1,0.7-7.7,0.8c-2.5,0.1-5,0-7.4,0c0-1,0-2,0-3       c-0.2-0.3-0.3-0.5-0.3-0.8c0.1-0.3,0.1-0.4,0.2-0.4c0.4-0.3,0.8-0.5,1.2-0.7c1.5-0.3,3.1-0.2,4.4-1.2c0.8-0.5,1.7-0.8,2.6-1       c2.2-0.1,4.1-0.9,6.1-1.7C1311.2,490.2,1314.9,488.4,1319,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A32431"),
                d:
                  "M1340,486c-0.9,5.6-3.9,4.2-7,2C1334.5,484.3,1337.7,486.7,1340,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A82E3A"),
                d:
                  "M1326,494c0.1-0.7,0.1-1.7,1.2-1.5c0.4,0.1,0.5,1,0.8,1.5c-0.1,0.7-0.1,1.7-1.2,1.5       C1326.4,495.4,1326.3,494.5,1326,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC303D"),
                d:
                  "M1005,607c2.1,4.3,7.2,4.1,10.2,7c1.2,1.1,3.1,1.2,3.8,2.9c-0.8,0.1-2,0.6-2.4,0.3       c-4.1-3.3-9.4-4.2-13.6-7.3c-4.2-1.5-7-4.9-10-8c2.9-1.8,5.2-0.1,7.5,1.4C1002.1,604.5,1003.5,605.8,1005,607z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73242"),
                d:
                  "M998.5,618c2.1-2.3,2.6-4.5,5.2-3.8c1.2,0.3,1.5,1.5,1,2.4C1003.5,619.1,1001.5,617.6,998.5,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A73242"),
                d:
                  "M966.6,614.6c-0.7,0.1-1.2-0.2-1.1-0.7c0.1-0.3,0.6-0.6,1-0.7c0.2-0.1,0.5,0.3,0.8,0.4       C967,614,966.8,614.3,966.6,614.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AC303D"),
                d:
                  "M898,594c17.4,1.4,34.8,2.7,52.2,4.3c1.7,0.2,3.2-0.3,4.8-0.3c10.6-0.3,21.2,0.5,31.7,1.8       c1.1,0.1,2.3,0.5,2.3,2.1c-14.3,0-28.6-0.2-42.9,0.1c-3.2,0.1-5.4-2.4-8.4-2.1c-4.4,0.4-8.7-0.8-13.1,1       c-3.2,1.3-6.8-0.2-9.8-1.2c-4.5-1.5-9-1.8-13.6-1.9C898.7,597.9,898.3,595.9,898,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC404C"),
                d:
                  "M989,602c-5.1-1.5-10.3-1.9-15.5-2c-6.2,0-12.5-0.1-18.5-2c0.1-0.7-2.6-1.6,0.2-2       c1.3-0.2,2.7-0.1,4-0.1c4.2,0.1,8.5,0.1,12.7,0.2c2,0.2,4-0.1,5.9-0.4c9.6-0.5,19.1,1.5,28.6,2c1,0.1,1.9,0.5,2.6,1.3       c1.6,4.5-3.3,3.7-3.8,3.2c-1.5-1.5-3.2,0.4-4.3-1c0.9,2.5,3.9,3.1,4.1,5.8c-4.2-1.2-7.2-5.3-12-5C991.7,602,990.3,602,989,602z       "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43443"),
                d:
                  "M889,594c0.3,0,0.6,0,1,0c-0.3,3.2,0.3,6.8-4,8c-1.4,0.7-0.3,3.8-4.1,2.7c-3.1-0.9-2.8,3.8-3,7.2       c-1.7-2.7-3.1-4.6-4.1-6.6c-0.2-0.5-4-2.7,0.5-2.4c0.8,0,1.1-0.6,0.8-1.4c-0.4-1-1.2-1.5-2.3-1.5c-3.4,0-6.7-0.6-10-1.7       c-2.6-0.8-3-2.2-2.8-4.3c1.1-1.2,2.4-2.3,3.9-1.6c4.2,1.9,8.7,0.8,12.9,1.9C881.6,595.3,885.3,593.6,889,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C313B"),
                d:
                  "M738,575c13.8,1.4,27.4,3.2,41,6c2.3,0,4.7,0,7,0.1c0.5,2.4,3.5,1.3,4.5,3.7c-6.5-5.3-13-0.1-19.5-0.7       c-11.2-2.7-23.6-0.7-33.8-8.1c-0.1-0.1-0.2-0.2-0.3-0.3C737.3,575.4,737.6,575.2,738,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A5313C"),
                d:
                  "M889,594c-4.3,1.8-8.9,1-13,1.5c-5.5,0.7-9.8-3.9-15-1.5c-0.2-2.1-1.8-2.1-3.3-2       c-4.3,0.5-8.8,0.6-13,0.7c-4.8,0.1-10.7,0.3-15.1-3.4c-0.5-0.4-0.4-1.5-0.6-2.3c13.1,1.4,26.2,2.9,39.3,4.2       c6.2,0.6,12.4,1.2,18.6,1.6C888,592.9,888.9,592.6,889,594z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M795,582c4.5-0.1,8.8,0.6,13,2C803.5,584,799.1,584.1,795,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M788,581c1.7,0.2,3.6-0.7,5,1C791.3,581.8,789.4,582.7,788,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1189,606c-4.6,0-9.3,0-14,0c0.5-1.8,2.3-0.3,3.3-2.3c-5.2,2-10.1,0.4-15,1.1c-4.2,0.6-8.9,0-13.3-0.3       c-6.1-0.4-12.3,0.3-18.4-0.6c-19.7-2.7-39.6-1.9-59.4-1.9c-2.3,0-3.4-1.8-5.4-2.2c-0.8-0.1-1.8-0.8-2.1,0.3       c-0.1,0.5,0.8,1.2,1.2,1.9c-4.3-0.1-8.7-0.2-13-0.4c-1.9-2.3-4.5-2.3-7.1-2.4c-2.4-0.1-5.1,0.4-6.2-2.7       c3.2-2.3,6.9-0.7,10.5-1.4c-3.3-1.3-6.3,0.3-9.3,0.5c-3.8,0.1-7.2-0.1-10.4-2.2c-2.2-1.4-0.6,0.7-1,1.1       c-0.1,0.5-0.4,0.8-0.8,1.1c-1.5,0.7-2.8,0.3-4.1-0.8c-1.2-0.9-2.7-1.4-4.2-1.2c-1.4,0.2-3.4,2.1-3.8-0.8       c-0.4-2.3,0.8-4.2,3.3-4.8c2.1-0.5,4.2-1.2,6.4-0.9c2.4,0.4,4.6,0,6.9-0.7c-0.9,0.2-1.8,0.3-2.1-0.6c-0.3-1,0.6-1.4,1.3-1.8       c3.7-1.9,7.7-1.2,11.6-1c0.6,0,1.2,0.5,1.8,0.1c0.9-1.8-1.4-2.8-1.2-4.5c2.6-3.1,6.6-3,9.8-4.6c4.1,0.4,7.2-3.3,11.4-2.7       c6.5,0,12.8-1,18.5-4.5c0.2,0,0.5,0.1,0.7,0.1c0,2.5,0,4.9,0,7.8c5-4.1,7.1-3.3,8.5,2.6c2.9-0.3,3.1-3,4.2-4.9       c3,2.2,4.4,5.4,5.7,8.8c0.7-1.8,1.2-3.4,1.9-4.8c0.8-1.5,1.8-3.7,2.7,0c4.6-1.9,8,2,12.1,2.4c1.8,0.2,7.8-0.2,10.1,0.5       c-0.8,1.4-2.5,0.2-3.2,1c2.2,5.6,5.5-1.4,8.8,0.7c1.2,0.8,3.3,0.2,3.7,2.7c0.1,0.8,0.7,2.2,2,1.4c1.8-1.1-0.3-1.3-0.6-1.9       c-1.9-2.9,0.2-3.8,2.4-4.7c0.9,2.6,5.2-1.6,4.6,1.7c-0.4,2.4,4.3,3.2,1.1,5.5c-0.6,0.5-0.3,1.4,0.4,1.5       c0.9,0.1,2.1,0.6,2.6-0.5c0.4-0.7,0.5-1.7,1.5-1.7c1.5,0,0.5,1.3,0.9,1.7c0.9,1.1,2,1,2.8-0.1c0.7-1,0.5-1.9-0.7-2.4       c-1.2-0.5-2.6-0.4-3.6-2c2.5-0.4,4.4,0.2,6.1,2c0.7,0.8-1.4,2.9,1.4,2.5c2.6-0.4,1.5-2.5,2-4.3c1.4,1.5,2.3,4,4.6,3.1       c1.5-0.6-1.2-1.7-0.1-3.2c2-0.4,4.2,2.6,6.6,0.4c0.4-0.3,2,1.6,1.9,2.4c-0.3,1.4-1.6-0.6-2.6,0.5c0.9,1.2,1.9,2.4,3.1,3.9       c2.2-5.4,5.1-3.9,8.1-1.1c0.6,0.6,1.1,1,2,1.2c4.8,0.9,4.8,1.1,1.8,4.3c-0.9,1,0,0.7,0.3,1.1c1,1.1,4.1,4.3,4.2,4.2       c0.8-1.4,1.5-2.9,2.3-4.3c-6.1-1.1-0.1-3.7-0.6-5.5c-0.4-1.4-1.3-1.3-2.2-1.4c-1.8-0.1-3.3-0.5-3.3-3.2       c3.2,1.9,6.3,2.6,8.8-0.8c1.7,0.2,2.6-1.4,4-2c1.3-0.4,2.7-1.3,3,1c-0.8,0.2-1.9,0.1-2.2,0.6c-0.4,0.5,0.5,1.2,1.2,1.1       c3.4-0.3,7.2,2.7,9.8-1.8c1.1,1.8-1.3,2.4-0.8,2.6c2.6,0.8,5.3,1.5,8,0.5c-1.2,1-2.4,2.1-3.7,3.2c1.9,1.3,3.6,0.5,5.3,0.4       c-0.2,1.3,0,2.6-0.5,3.5c-1.1,2.2-1.4,6-5.5,3.3c-0.9-0.6-1.9-0.4-2.6,0.6c-2.5,0.4-2.9,3-4.6,4.3c-0.7,0.5-0.3,4.5-2.3,0.7       c-0.2-0.5-1-0.2-1.1,0.4c-0.4,6.5-4.8,2.7-7.6,2.7c1-0.2,2.1-0.4,3.1-0.5c1.1,0,2.4,1,3.1-0.5c0.7-1.3,0.2-2.3-1.3-3.2       c-1.7-1-0.5-2.9,0-4c0.7-1.5,1.6-2.7,0.6-5.2c-1.1,3-4.1,3.9-4.4,7.1c-0.1,1.5-1.8,2.6-3.3,2.3       C1191.2,600.3,1189.5,602.3,1189,606z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3F4A"),
                d:
                  "M1067.1,602.9c26.6,0.9,53.3,2.4,79.9,4.1c0,0.3,0,0.6,0,0.9c-0.1,0.6-0.7,0.6-1,1       c-3.9-1.9-8.1-0.6-11.8-0.3c-2.5,0.2-4.9-2.3-7.3-0.2c-0.6,1.8,2.1,1,2.1,2.6c-1.3,0-2.6,0-4,0c-0.8-0.5-1.5-1.2-2-2       c-7.3-0.9-14.5-1.9-21.9-1.4c-2.3,0.2-5-1.2-7.5-1.8c-6.6-1.5-12.7,3.6-20.1-0.3c-4.8-2.5-12.2-1.2-18.4-2.6       C1059.1,602.9,1063.1,602.9,1067.1,602.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D171D"),
                d:
                  "M1040,596c2.3,3.6,5.9,1.7,8.9,1.9c2.7,0.2,4.5,0.6,4.1,3.8c-14.7-0.9-29.3-1.7-44-2.6       c-10.6-0.8-21.3-1.5-31.9-2.3c0.2-2.2,2-2.1,3.3-2.1c10.7,0.5,21.6-1.8,32.1,0.2c6.3,1.2,12.4,1.5,18.6,1.6c2,0.2,4.1,0,5.9-1       C1038.1,595.6,1039.1,595.3,1040,596z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD3C46"),
                d:
                  "M1123,609c1.3,0,2,0.7,2,2c-2.1,5.3-2.1,5.3-7.9,4.4C1119.4,613.3,1121.6,611.5,1123,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("661321"),
                d:
                  "M882,547c1.7,0,3.3,0,5,0c-0.2,1.1,0.7,4.2-2.1,1.2c-0.1-0.1-1.2,0.2-1.2,0.4c-0.5,4.3-3.7,1.9-5.7,2.2       c-2.1,0.2-4.2-5.1-6.5-0.2c-0.4-0.2-1-0.3-1.1-0.6c-0.3-0.9,1-3.3-1.7-2c-1.2,0.6-2.1,1.8-0.9,3.3c0.9,1.2,0.3,1.7-0.8,2.2       c-0.8,0.3-1.6,0.7-2.3,0.1c-0.8-0.8-0.1-1.5,0.4-2.1c0.8-1.2,1.4-2.5,0.4-3.6c-0.9-1.1-2.1,0.1-3.3,0c-2.4-0.1,0.6,2.4-0.9,2.8       c-3.4-2.2-7.2-2.9-10.8-2.1c-5,1.2-8.7,0.3-11.3-4.1c-2.1,1-0.7,4.6-3.6,4.3c-1.7-0.2-3.5-1-4.1-3.3c1.7,0.4,3.3,0.7,4.8,1.1       c0.7-1.4,0.1-2.2-1-2.3c-3-0.1-6,0-8.9,0.3c-2,0.2-4.3,2.7-5.5-1.1c-3.6,1.5-6.8-1.6-10.4-0.7c-2.2,0.6-4.5,1.2-6.6-0.6       c1.4-2.5,3.8-2.3,6.1-2.4c10.3-0.3,20.5,1.4,30.8,2.4c10.5,1.1,20.8,3,31.4,3.5C875.5,545.7,878.8,546.3,882,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771620"),
                d:
                  "M784.1,578.9c-5.9-1.9-12.1-1.8-18.1-3.1c0.4-5,4.5-3.2,6.4-2.6c8.1,2.4,16.4,3,24.7,3       c2.3,0,3.8,2,6.4,1.2c1.9-0.6,1.2-1.5,1.5-2.5c1.4,0.1,3-0.5,4,1c2.9,3.7,7.3,1.4,10.9,2.6c1.9,0.6,4.3-0.1,6.1,1.4       c2.6,3.1,6.3,1.4,9.4,1.8c4.2,0.5,8.3,0.9,12.5,2.3c-3.6,0-7.3,0-10.9,0c-0.6,0-1.3,0-1.9-0.1c-1.9-1.2-4.2,0.2-6.1-0.9       c-1.6-0.1-3.2-0.1-4.8-0.2c-4.5-1.6-9.2-1.3-13.9-1.4c-2.4-0.3-4.8,0.6-7.1-0.5l0,0c-2.6-1.3-5.5,0.3-8-0.9l-0.5-0.1l-0.5,0       c-2.2-1.3-4.8,0.3-7.1-1C786,579,785.1,579,784.1,578.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1E2E"),
                d:
                  "M882,547c-13.9-1.3-27.9-2-41.7-3.6c-10.8-1.3-21.6-2.9-32.5-2.3c-1.3,0.1-2.5,0.6-3.8,1       c-2.1-3.4-5.7-2.5-8.7-2.9c-3.7-0.4-7.5-0.1-11.3-0.2c-1.1-3.3-4.3-0.4-6-2c-1.3-0.4-2.6,1.8-4,0c-1-1.5-2.6-0.9-4-1.1       c0.2-2.1,1.9-1.9,3.3-2.2c9.5,0.2,18.9,0.7,28.1,3.1c0.5,0.1,1,0.3,1.5,0.3c12.9-0.8,25.3,2.6,38.1,3.6c4.7,0.3,9.5,1,14.1,2.3       c8,0.8,16,1.7,24.1,2.5C880.3,545.7,881.3,545.9,882,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781528"),
                d:
                  "M826,580c-5.7-0.3-11.5-0.6-17-2c-2.3-0.6-2-1.4,0.1-2c5.3,1.9,11,1,16.5,2c3.5,0.7,7.2,0.5,10.5,2       C832.7,580,829.3,580,826,580z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A111E"),
                d:
                  "M757.1,558.5c-0.5,0.9,2.1,2.4-0.6,2.9c-1.5,0.2-2-1.2-1.2-1.7c2.5-1.5-3.3-3.8,0.4-4.5       C758.9,554.6,757.1,557.2,757.1,558.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791624"),
                d:
                  "M778,537c2.1-0.2,4.3-0.7,6.3,0.1c2,0.8-0.5,1.2-0.3,1.9C782.3,537.5,779.6,538.8,778,537z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("531218"),
                d: "M891,578c0.8,1.6,2.6,3,1,5C891.1,581.4,890.9,579.8,891,578z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("511115"),
                d:
                  "M889,560c1.6,1.4,0.7,3.3,1,5C888.3,563.6,889.2,561.7,889,560z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M1055,575c-3.3,1.3-6.7,2.7-10,4c-7,3.2-14.2,5.7-21.6,7.7c-1.9,0.8-4,0.7-5.8,1.7       c-0.4,0.2-0.8,0.4-1.2,0.5c-1.3,0.3-2.6,0.6-3.9,1.3c-3.4,1.4-6.6,3.4-10.5,1.9c-1.1-2.6-3.5-1.9-5.5-2c-2.1,0-4.3,0-6.8-0.4       c5,0.5,4.6-2.7,4.3-5.6c-0.3-2.9,0.3-5.2,3.7-6c-1.2-1.4-3.5,0.8-3.7-1.8c0-0.3-0.6-0.6-1-0.9c-0.8,4.8-4.8,0.9-6.9,2.5       c-2.4,1.9-7.6,1.7-7.9,1c-1.8-5.1-3.8,0.6-5.4-0.6c0.9,2,2.8,3.5,1.2,5.6c-2,2.6-4.9,0.6-7.4,0.5c0.1,2.2,1.7,2.2,2.8,2.7       c0.8,0.3,2.4-0.3,1.9,1.4c-0.6,1.9-1.4,0.1-2.1-0.1c-1.8-0.4-3.6-0.1-5.4,0c-5.2,0.4-10.6,0.5-15.4-1.5c-2.3-1-3.9-1.7-6.3-1       c-2.3,0.6-5,1-6.9-1.4c-0.6-0.7-0.8-1.4-0.3-2.2c0.4-0.6,1.2-1.1,1.7-0.6c2.7,3.1,6.4,2.3,9.7,2.4c3.4,0.1,4.9,5.4,9.4,2.2       c0.4-0.7-3.4,0-1.4-1c2-1.1,4-2.6,3.1-4.1c-1.3-2.3-3-0.5-4.2,1.1c-0.5,0.7-1.1,0.6-1.7,0.2c-0.7-0.5-0.4-1.1-0.1-1.7       c0.9-2.1,2-4,5.4-4.2c-2.7-1.4-4.5-2.4-7.3-3.9c3.1,5,0.8,6.1-2.2,4.4c-3.4-1.8-9.3-0.2-9.8-6.8c-0.5,2.5-1.1,4.4-3.3,5.3       c-1.2-1.1,1.1-2.4-0.5-3.7c-1.1,1.7-2.3,4.1-4.4,0.7c-0.5-0.8-2.9-0.7-4.1,0.4c-0.4,0.3-0.6,1.2-0.5,1.8c0.4,1.8,2,1.7,3.2,1.5       c4-0.8,2.9,3.8,5.2,4.8c0.1,0-0.1,1-0.4,1.3c-0.6,0.6-1.2,0.4-1.7-0.2c-1.5-2.1-3.1-3.6-5.6-1.4c-0.1-2.3-4.1-1.9-3.2-4.8       c0.3-1.1,0.5-2.2-0.8-3.4c-1.4,2.3-1.2,5.8-5.2,5.7c1-2.7,3.2-4.7,3.5-7.5c-1.5-0.5-1.8,0.4-2.3,1.4c-1.2,2.4-2.6,5.1-4.5,0.4       c-0.4-0.9-1.5-1.2-2.6-0.8c-2.4,0.9-5.2-0.5-4.5-2.8c1.2-4.2-2.1-4.2-4-5.8c-0.1,0.3-0.2,0.5-0.2,0.6c-0.7,2.4,2.2,3.4,2.3,5       c0.6,5-2.8,0.2-4,1.3c-1.5,1.4-3.5,1.9-5.4,2.3c-0.7-0.5-0.3-1.5-1-2c0.6-4.7-1.3-9.3-1-14c-0.7-2.1-0.8-4.4-1.4-6.6       c0.4-0.9,1.6-1.3,2-0.7c1.4,2.3,2.4,1.8,3.6-0.1c0.2-0.4,1.2-0.5,1.4-0.3c2.4,4.5,5.3,0.1,7.9,0.4c0.7,0.1,1.3,0,2,0.1       c1.1,0.2,2.5,0.2,2.7,1.7c0.1,1.1-0.8,1.7-1.8,2.1c-0.6,0.2-1.1,0.7-1.5,1.3c-0.2,0.1-0.2,0.2-0.2,0.3c0.1,0.1,0.2,0.1,0.4-0.1       c3.7-3.3,8.1-1.3,12.1-1.1c6.6,0.3,12.9,2.6,19.6,2.4c1.5,0,3.1-0.1,4.4,0.7c2.5,1.6,4.6,1.1,6.9-0.4c3.3-2.2,6.8-0.3,10.2,0       c5.7,0.6,11.7,0.5,16.9,1.7c5,1.1,10,0.3,14.6,1.7c1.8,0.6,3.2,2.3,5.5,1.3c2.7-1.2,4.1,3.4,7.4,1.6c0.7-0.4,3.1,2.9,5.8,2.6       c2.4-0.3,4.8-0.3,5.3,3.1c-0.1-1.7-0.9-3.6,1.1-4c1.6-0.3,4-0.7,4.9,1.1c1.3,2.6,3.5,2.8,5.8,3c0.8,0.1,2.1,0.9,1.5-1.1       c-0.3-1-0.2-2.1,1.2-2.3c1.1-0.1,2.2,0.5,2.5,1.3c1.6,4.4,5.9,4.4,9.3,5.7c0.8,0.3,2,0.8,2.4,0.3c3.4-3.8,7.5-1.3,11.3-1.4       c1.4,0,3.3-1,3.8,1.1c0.5,2.1-1.6,2.1-2.9,2.6C1055.9,574.6,1055.4,574.6,1055,575z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791625"),
                d:
                  "M1022,586c7.9-1.5,14.9-6,23-7c2.8,0,1.7,3,3.2,4c-1.1,1.5-2.2,1.7-4.2,1.5c-3.9-0.4-8.1-1.4-11.9,0.6       c0.5,1.6,2.3,0.1,2.9,1.2c-4.1,3-9.1,1.5-13.7,2.4c-3.1,0.6-3.7,2-3.9,5.2c3.2-4.1,6.1-1.9,8.2,0c1.3,1.2,2.4,0.6,3.5,0.9       c0.4,0.4,0,0.8,0,1.2c0.2-0.4,0.4-0.8,0-1.2c0.5-1.2-1.9-1.9-0.7-2.8c0.9-0.7,2.1-0.7,3.5,0.2c4.2,2.7,9,4,13.7,1.4       c2.6-1.4,4.4,0.7,6.9,0.3c-3.9,5.3-8.6,0.3-12.5,1.9c-1,0-2,0-3,0c-1.3,1.5-3.6,0.6-5,2c-2,0-4-0.3-6,0.1       c-6.7,1.1-12.9-3-19.4-2.4c-9.8,0.9-19.8-1-29.5,1.2c-1.8,0-3.6,0.6-5.2-0.7c1.3-0.5,2.7-1,4-1.6c-11,0.7-21.6-2.3-32.5-2.7       c-11.5-0.4-23.1-1.1-34.4-3.8c6.5-0.4,13-0.8,19.4,0.1c10.4,1.6,20.8,1.8,31.3,2.9c11.3,1.1,22.7,0.9,33.9,2.9       c3,0.5,5.8-0.4,8.5-1.9c3.7-1,7.3-2,11-3c2.7,0.5,2.7,0.5,1.7,3.5c1.7-1.1,0.9-3.4,2.3-4.5l0,0       C1018.4,586.8,1021,588.3,1022,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M977.6,584.3c1.6,0.4,1.9,1.5,2,2.6c0,0.2-0.9,0.7-1,0.6C977.9,586.8,977.1,586,977.6,584.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M987.9,587.8c-1.9,0-3.8,0-5.6,0c0-0.1,0-0.3,0-0.4c1.8,0,3.6,0,5.5,0       C987.8,587.5,987.9,587.6,987.9,587.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("531218"),
                d:
                  "M893,570c0.8,0.4,1,1.2,1,2c0,1.7,0,3.3,0,5C892.1,574.9,893.4,572.3,893,570z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M990.9,580.3c0.3,0.3,0.7,0.7,0.6,0.7c-0.3,0.3-0.6,0.8-0.9,0.9c-0.5,0.1-1.1-0.1-0.8-0.8       C990,580.7,990.5,580.5,990.9,580.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E111F"),
                d:
                  "M984.9,589.4c-1.1,0.6-2.1,0.9-3,0C983,588.6,984,589.2,984.9,589.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M810.8,581.1c4.4-1.6,8.7,0.5,13.1,0c0,0.6,0.1,1.2,0.1,1.8c-2,0-3.9,0-5.9,0c-1.6-1.1-3.6,0.2-5.1-0.9       c-0.6,0-1.3,0-1.9,0c-0.3-0.1-0.4-0.3-0.4-0.5C810.7,581.2,810.8,581.1,810.8,581.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M795,580c2.7,0.3,5.5-0.8,8,0.9C800.4,580.6,797.5,582,795,580z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M810.8,581.1c0.1,0.3,0.2,0.6,0.2,0.9c-2.7-0.4-5.6,1.1-8-1C805.6,581,808.2,581,810.8,581.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M787,579c2.4,0.2,4.9-0.6,7.1,1C791.7,579.7,789.1,580.9,787,579z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1624"),
                d:
                  "M828.9,583.1c2.1,0.2,4.3-0.9,6.1,0.9C832.9,583.9,830.7,584.5,828.9,583.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AF3E4B"),
                d:
                  "M813,582c1.8,0,3.6-0.5,5.1,0.9C816.4,582.8,814.5,583.7,813,582z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822633"),
                d:
                  "M890.2,545.9c3.7-1.8,7.9-1.2,11.5-0.6c9.4,1.7,18.8,2.4,28.2,3.3c6.3,0.6,12.6,2,19.1,1.4       c3.9-0.4,7.9,1.3,11.9,2.1c2.6,0.1,5.2,0.3,7.7,0.7c1.7,0.2,3.9,0.9,1.2,3.2c-4,1.5-7.9-0.2-11.8-0.7       c-13.5-1.7-27.2-1.8-40.6-3.9c-8.6-1.4-17.3-2.4-26-2.9c-0.6,0.1-1.1,0-1.6-0.5C890.1,547.2,890.2,546.5,890.2,545.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("511115"),
                d:
                  "M890,547.9c0.3,0,0.6,0.1,1,0.1c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c0.6,2.3,1.3,4.6,1,7       C889.7,553.7,890.4,550.7,890,547.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BB3945"),
                d:
                  "M1099.3,619.9c-0.2-0.2-0.5-0.6-0.8-0.9c0.3-0.2,0.7-0.5,1-0.6c0.2,0,0.6,0.3,0.7,0.6       C1100.5,619.7,1099.9,619.8,1099.3,619.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1146,609c0.3-0.3,0.7-0.7,1-1c2.4,0.2,4.9-0.5,7.7,0.7C1151.7,611.6,1148.8,608.6,1146,609z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7079"),
                d:
                  "M866,323c3.9,0.3,7.6-0.1,11.6,2c3.5,1.9,8.3,1.9,12.4,1.7c4.4-0.3,8.7-1.9,12.6,1.6       c0.4,0.3,1.6,0.4,1.7,0.2c2.9-4.8,6.1-1.3,8.8,0c4.6,2.2,9.4,2.5,14.3,2c4.8-0.5,9.7-1.6,13.5,2.7c1.5,1.6,3.4,1,5.1,0.9       c3.3-0.2,6.5,0.1,8.5,3c2.6,3.7,7.2,2.2,9.7,2.1c4.5-0.1,7.1,2.9,11.7,3.1c-2.8,1.6-5.3-0.1-7,1.9c-3,2.1-6.4,1.7-9.7,1.9       c-2.4-0.8-5-0.3-7.3-1.3c-1-0.4-1.9-1.3-3.2-0.9c-3.8,1.1-7.4,0.5-10.9-1.5c-1.9-1.1-4.2-0.7-6.3-0.9c-1.9-0.2-4.1,0.3-4.9-2.3       c2.7-3,6.3-1.5,8.8-2c-12.2,1-24.9-1.7-37.8-2.8c-5.6-0.5-11.2-0.3-16.6-2.2c-2.7-0.5-5.5-1.4-8.2-1.5       C867.9,330.2,865,328.4,866,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E97E83"),
                d:
                  "M927,339c1.1,1.4,2.7,0.9,4.2,1c3.4,0.1,6.8-0.3,9.8,2.3c1.9,1.6,4.7,0.9,7.2,0.2       c1.6-0.5,3.4-1,3.8,1.6c-2.3,3.5-6,3-9.4,3.3c-3.3,0.3-6.6,0-9.9,0.1c-6.3,0.3-12.5,0.1-18.8,0c-6-0.4-12.2,1.5-17.9-1.4       c-3.5-0.4-6.9-1.2-10-3c3-2.5,7,0.6,10-2c7-0.3,14-0.7,21-1c1.7-1.6,4.1-1.2,6.1-1.9C924.5,337.9,925.9,337.9,927,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE6A73"),
                d:
                  "M927,339c-1.3,0-2.7,0-4,0c-2,0.7-4,0.8-6,0c-7.4,0.2-14.6-0.3-21.7-3.7c-3-1.5-7.1-0.3-10.7-1.2       c-1.5-0.4-2.9-0.5-3.6-2.1c19.8,0.5,39.3,3.8,58.9,5.6C935.6,338.1,931.3,338.5,927,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EB7079"),
                d:
                  "M917,339c2,0,4,0,6,0c-1.8,1.8-4,0.7-6,1C917,339.7,917,339.3,917,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781620"),
                d:
                  "M952,361c0-0.7,0-1.3,0-2c1.7-1.7,3.9-1.4,6-1.5c5.5-0.1,11.1,0.2,16.6-0.2c0.5-0.2,1.1-0.4,1.6-0.5       c3.2-0.6,6.6,0.2,9.8-0.9c1.1-0.3,2.2-0.4,3.4-0.4c4.9-0.3,9.9,0.6,14.7-0.7c8.9-0.8,17.8-1.1,26.6-1.9c13-0.6,26-2.4,39.1-2.5       c4.9,0,9.8-1.7,14.8-0.6c2.8,1,5.8,0.4,8.6,1.1c8.8,0.5,17.5,1.6,26.2,2.5c2.1,0.2,4.9-0.8,5.6,2.6c-2.5,1.9-5.4,1-8.1,1.3       c-17.3,0.3-34.7-0.6-51.9,0.3c-13,0.7-26.2,1-39.1,3.2c-2,0.3-3.9-0.1-5.9-0.6c-4.9-1.2-9.9-1.4-14.7,0.2       c-5.6,1.3-11.2,0.3-16.9,0.6c-5.6,0.3-11.1,0.7-16.6,1.8c-2,0.4-4,0.2-5.9-0.7c-2.8-1.3-5.4-1.2-8.1,0.4       C955.6,363.3,953.3,363.6,952,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D2C"),
                d:
                  "M976,358c-4.1,2.1-8.4,0.7-12.6,1c-3.8,0.3-7.6,0.1-11.4,0.1c-6.5,0-13.1,0-19.6,0       c-0.5,1.7,1.5,0.5,1.6,1.6c-1.3,0.4-2.8,0.5-3.9,1.2c-4.8,2.9-4.8,3-5.1-2.5c-4.5,1.9-9-0.1-13.6,0.3c-7.4,0.6-15-0.4-22.4,1.5       c-0.6-1.2-3.2,0.6-3-1.9c1.4,0,2.9-0.2,4.3,0c2,0.2,3.8,0,4.8-2.1c5.7-0.5,11.5,0.9,17.1-0.8c1.6-1.8,3.8-1.5,5.9-1.5       c6.2-0.2,12.4,0.6,18.5-0.5c0.6-0.2,1.2-0.3,1.8-0.3c4.8-0.2,9.6-0.1,14.4-0.1c6.3,1.3,12.8,0.7,19.2,1.3       C973.7,355.5,975.1,356.4,976,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A03643"),
                d:
                  "M952,361c1.9,1.2,3.9,1.1,6,1c0.4-0.3,0.8-0.5,1.4-0.4c1.7,0.1,3.5,0.2,5.2,0.4       c4.7,1.5,9.7,1.5,14.2,3.4c1.8,0.8,3.8,0.9,5.1,2.7c3.2,1.9,6.5,3.7,9.6,5.7c1.6,1,4.1,1.4,3.5,4.3c-2,0.7-3.4-0.7-5-1.5       c-5.2-2.9-10.5-5.4-16.3-6.8c-10.2-3.3-20.6-4.8-31.4-3.5c-5.1,0.6-9.3,3.4-13.9,5.4c-0.6,0.3-1.3,0.7-1.9,1       c-0.8,0.5-1.7,0.9-2.7,0.8c-2.4-2.2,0-3.1,1.2-4.4C934,362.2,943.3,362.6,952,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1727"),
                d:
                  "M927,369.1c0.5,1.6-2.4,2.3-1,4c0.2,0.3,0.2,0.6,0,0.9c-0.3,0.1-0.7,0.4-0.9,0.4       c-9.9-4.3-21-3.1-31.1-6.4c1.5-1,2.9-3.6,4.4,0c4.6-2.1,10.7,2,13.5-0.4c3.5-2.9,5.2,1.4,6.5,0.2       C922.2,364.2,924.4,367.8,927,369.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911923"),
                d:
                  "M886,359.1c1,0.6,2,1.3,3,1.9c-5.5,1.8-11.2,0.7-16.8,1c-1.5,0.1-2.5-0.6-3.2-2       C874.7,359.7,880.3,359.4,886,359.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E58B93"),
                d:
                  "M896,346c6,0,12,0,18,0c2.7,2.8,6.5,1.8,9.7,2.7c3.1,0.8,6.5,0.8,8.3,4.1c-1.8,2.1-4.2,1.5-6.5,1.5       c-7.2,0.1-14.4,0-21.5,1.5c-8.4-1-16.5-4-25.1-3.9c4.3-3,9.3-3,14.2-3C895.2,349,897.7,349.4,896,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EE8F94"),
                d:
                  "M904.1,355.9c4.4-2.9,9.4-2.3,14.3-2.9c4.5-0.5,9.2,1.1,13.6-1c1-1,2.2-1,3.4-0.9       c3.7,0.8,7.5,0.3,11.3,0.5c1.9,0.1,4-0.1,5.6,2c-4.8,2-9.8-0.2-14.4,1.4l-0.4,0.1l-0.4-0.1c-4.8,0.9-9.6,0.1-14.4,0.4       c-1.6,0.1-3.3-0.5-4.8,0.5c-1.9,0-3.9,0-5.8,0.1C909.5,356,906.8,356,904.1,355.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B2038"),
                d:
                  "M795,367c-2,0-4,0-6,0c-1.4,0.6-3,1.1-3.9-0.4c-0.6-0.8,0.4-1.8,1.2-2.3c6.2-0.6,12.4-3.5,18.7-0.3       c-1,0.7-2,1.3-3,2C799.7,366.4,797.1,365.1,795,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B2038"),
                d:
                  "M810,365c-1,0-1.9,0-2.9,0c1.7-1,3.3-1.5,4.9,0C811.3,365,810.7,365,810,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M787,356c2.3-0.4,4.9,0.9,7-1c2.7,0.7,5.4,0.4,8,0.1c2.5,1.8,5.4,0.5,8.1,0.9c1.6,0.2,3.5-0.4,3.8,2       c-4.1,2.8-8.7,1.7-13,1.3c-10.6-1-21.1,0.5-31.6,0.9c-3.4,0.1-6.9,1-10.2-0.9c-0.2-3.1,2.2-2.1,3.7-2.2       c6.6-0.4,13.2-0.7,19.8-0.6C784.1,356.5,785.7,356.9,787,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d:
                  "M821.1,357c-2-0.6-4.9,1.6-6.1-1.9C817.3,354.9,819.4,355.1,821.1,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811723"),
                d:
                  "M759,359c10.7-0.6,21.5-1.1,32.2-1.8c7.5-0.5,15.2,1.2,22.8,0.8c1.7,0,3.3,0,5,0c2.3,2.2,5.7-0.1,8,2       c0,0.3,0,0.7,0,1c-5.3,1.6-10.9,1.2-16.4,2c-1.9,0.3-4-0.7-5.6,1c-6.3,0.3-12.7,0.7-19,1c-4.2,2-8.5,3.2-13.1,1.2       c-0.4-2.5-2.3-2.2-4.2-2.3c-12.3-1-24.5-0.2-36.8-0.5c-2.4-0.1-5,0.5-7.1-1.4c-0.1-0.6,0.1-1.1,0.6-1.5c9.8-2.6,20-2.1,30-2.8       C756.7,357.5,758,357.9,759,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("901921"),
                d: "M827,360c-2.6-0.8-6.2,2-8-2C821.6,358.9,825.2,356,827,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A3202D"),
                d:
                  "M759,359c-11.4-0.2-22.6,1.7-34,2c-1.5-0.4-2.4-2.2-4.3-2c-1.4,0.1-3.6,1.3-4-1.2       c-0.4-2.2,2.1-2,3.3-2.9c12.4-0.2,24.6-2.2,37-3c-1.2,1-2.4,2-3.7,2.9c0.2,0.4,0.4,0.7,0.6,1.1c11,0,22.1,0,33.1,0       c-2.7,2-5.8,0.8-8.6,0.9C771.9,357.1,765.4,357.5,759,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A1D2C"),
                d:
                  "M720,355c-0.6,1.2-2.5,1.2-2.6,3.2c2.6,0.5,7-2.7,7.6,2.8c0,0.3,0,0.6,0,1c-4.2,2.8-8.9,1-13.3,1.5       c-3.1-0.2-6.2-0.3-9.4,0.2c-0.6,0.1-1.1,0.1-1.7,0c-7.7-1-15.5,0.1-23.2-0.4c-1.9-0.1-5.2,0.6-4.4-3.4c4.3-2.3,9-0.8,13.5-1.6       c8.4-1.5,17-1.6,25.5-2.4c1.5-1.1,3.5,0.2,5-0.9c0.3,0,0.7,0,1,0C718.7,355,719.3,355,720,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1B2C"),
                d:
                  "M673,360c2.9,3.7,7,2.2,10.6,2.1c5.8,0,11.7-0.8,17.4,0.9c-4.7,2.3-9.8,2.1-14.9,2.3       c-6,0.2-12.1-0.3-18.1,0.7c-2.3,0-4.7,0-7,0c-3.1-0.3-6.2,0.6-9.2-1.3c-1.7-1.1-3.2,1.6-5.4,1.5c-3.8-0.3-7.6,3.4-11.4-0.2       c0.2-4,2.9-4.3,6-4c7.7-0.7,15.3-1.3,23-2c0.9,1.3,2.2,0.9,3.4,0.6c0.1,0,0.5,0,0.4-0.2c-0.1-0.2-0.5-0.2-0.7-0.5       c0.4-0.8,1.2-1,2-1C670.4,358.9,671.7,359.3,673,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A1D2C"),
                d:
                  "M667,360c1,0,1.9,0,3.6,0c-5.7,2.3-5.7,2.3-6.5,0C665,360,666,360,667,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1828"),
                d:
                  "M717,355c-1.4,1.6-3.3,0.7-5,0.9C713.4,354.4,715.3,355.2,717,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D1323"),
                d:
                  "M587,369c-0.6,0.4-1.2,0.7-1.8,1.1c-1.2,0.6-2.3,1.1-3.6,0.6c-0.4-0.2-0.7-0.6-0.9-1       c0.8-2.4,5-2.1,4.7-5.5c0-0.4,0.2-0.9,0.3-1.3c0.8-0.9,2.2-1.5,1.4-3.1c-2.9-5.7-8.6-8-13.6-11.1c-4.2-2.5-9.5-2.9-13.1-6.6       c-0.1-1.9,0.9-3.2,2.6-2.5c4.9,2,10.3,2,15,4.4c1,0.5,2.2,0.9,2.8,2c0.3,0.6,0.9,1.6,1.2,1.1c2.3-3.4,5-1.5,7.7-1.1       c4.8,0.8,9.5-0.9,14.2-0.8c3.8,0,5.4,2.5,4.6,6.2c0,0.1-0.7-0.4-0.4,0.3c1.1-0.8,2.3,1.4,3,0.1c1.1-2.1,2.1-3,3.9-0.7       c0.2,0.3,0.3,0.5,0.9,0.2c4.3-2.2,4.7-1.9,6.1,2.8c0,0.8,0.2,1.6,1,2c0,7.6-0.4,7.7-7.7,8.1c-8.2,0.4-16.4,1.3-24.6,2       C588.9,366.2,587.8,367.5,587,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781525"),
                d:
                  "M622,354c-1.1-2-2.4-3.9-5.4-3.5c0.7,1,1.3,2,2,3.1c-3.2,0.9-4.5-0.6-4.9-3.5c-2,1.6-1,4-2.8,5.7       c-0.7-2.5-1.9-4.4-5-4.1c5.1-1.2,0.1-3.6,1-5.1c-2.5-0.6-5.7-1.3-7.4,0.2c-2.5,2.2-4.3,1-6.5,0.2c-0.6-0.2-1.1-0.8-1.7-0.8       c-2.6,0-5-0.3-5.9-0.9c-1.6,0.9,0.4,2-0.1,3c-3.4,1.4-4.9-1.9-7.3-3.2c-4.8-2.5-10.6-1.6-15.2-4.9c-0.9-0.6-1.6,0.7-1.7,1.8       c-0.9,0.9-2.1,1.3-3.1,0.8c-4.6-2-9.6-1.2-14.4-2.3c-0.9-4.5,3.5-3.8,5.5-5.4c1-0.8,2.8-0.3,4.1-1.2c6.4,2.9,13.7,0.6,20,4       c0.4,0.7,1.1,1.9,1.2,1.9c5.9-3,11.5,5.1,17.6,0.4c1.6-1.2,4.2,0.2,6.4,1.4c4.4,2.3,8.9-1.4,13.6-0.7c1.1,0.2,2.5,0,3.2,0.9       c1.9,2.3,4.9,3.2,7.1,5.1c0.7,2,0.6,4,0,6C622,353.3,622,353.7,622,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1621"),
                d:
                  "M553,334c-2.9,2.7-7.4,2.7-10,6c-2.7,1.3-5.3,1.3-8,0c1.4-2.3,4.9-1.3,6.1-4c3.5,0,6.3-2.9,9.9-2       C551.7,334,552.3,334,553,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M598.1,338.1c-2.7-0.6-2-2.4-3-4.2C597.5,335.1,597.7,336.6,598.1,338.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781525"),
                d:
                  "M604.3,340.3c-2.7,0.8-3.9,0.9-6.1,0C600.4,340.3,601.6,340.3,604.3,340.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("61121D"),
                d:
                  "M535,340c2.7-0.6,5.3-0.6,8,0c6.2-1.2,12,1.1,18,2c4.6,1.9,9.6,3.2,13.8,5.8c5,3,10.1,5.9,13.6,10.9       c0.2,0.2-0.3,0.9-0.4,1.4c-2.7,0.9-4.9-0.2-7.2-1.4c-0.8-0.6-1.4-1.4-1.9-2.3c-1.3-3.2-4.3-4.4-7-5.8c-8-4.2-16.6-6.2-25.4-7.7       c-3.8-0.8-7.6-0.6-11.3-0.1c-0.8,0.1-1.6-0.1-2.2-0.7c0.3-0.7,0.7-1.3,1-2C534.3,340,534.7,340,535,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92182A"),
                d:
                  "M525,342c-2.7,2.2-5.6,4.2-8.1,6.5c-3.9,3.6-8.3,2-12.6,1.7c-3.5-0.2-7-0.9-10.3,0.7       c0.3-2.8,0.6-2.9,5-2c4.9-0.9,9.4-3.5,14.6-3c1.3,0.1,2.7,0,3.5-1.2C519.1,342,522,341.7,525,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("951C35"),
                d:
                  "M499,349c-1.8,0.4-4.3-1.2-5,2c-2.9-1.6-5.6,0.8-8.9,0.6c2-3.3,5-3.8,7.9-4.5c0.4,0.2,0.7,0.6,1,1       c1.7,0,3.3,0,5,0C499,348.3,499,348.7,499,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M494,348c-0.3-0.3-0.7-0.6-1-1c-0.1-1.3,1.5-1.9,1.5-2.8c0-1.9,0.5-3.5,2.4-3.4       c2.1,0.1-1.1,2.7,1.1,3.2C497,345.7,494.1,345.4,494,348z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6A71"),
                d:
                  "M959,345c3.3-0.5,6.6-1.4,10-1c2.7,0,5.3,0,8,0c0.2,1.4-2.7,4.2,2.2,3.4c3-0.5,6.3,2.2,9.8,1.6       c0,0.3,0,0.7,0,1c-1.6,1.7-4,1.1-6,1.8c-0.8,0.1-1.6,0.1-2.4-0.1c-2.8-1.3-5.5-1.4-8.5-0.6c-2.4,0.6-4.8,0.4-7.2-0.1       c-2.2-0.9-4.6-0.2-6.8-1.2c-1.2-0.6-1.1-0.8,0.7-2c0.3,0.1,0.2-0.2-0.3-0.2c-2.1,0.2-4.2,1.3-6.1-0.4c-0.5-0.5-0.5-1.3,0.1-1.7       C954.5,343.9,956.8,344.3,959,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A51E2B"),
                d:
                  "M1093,352c-2.7-0.4-5.5,0.9-8-1c-0.3-2-1.8-1-2.8-1c-12.6,0.1-25.2,1.3-37.7,2.3       c-4.1,0.3-8.3,0.3-12.4,0.6c-1.7,0.1-3.9,0.2-3.1-2.8c2.2-0.1,4.5-0.1,6.7-0.2c2.3-0.9,4.9,0.2,7.2-0.7       c16.8-1.1,33.5-2.1,50.3-3.2c15.3-1,30.5-2,45.8-2.9c3.9-1.2,8-0.2,12-0.5c1,0.1,1.6,0.5,0.8,1.5c-0.6,0.7-0.7,0.7-0.3,0.8       c1.1,0.2,2.5,0.4,2.4,1.9c-0.1,1.1-1.4,1.3-2.3,1.5c-5.4,1-10.6,2.9-16.2,2.5c-1.2-1.6-2.4-3.3-4.6-1.1       c-1.1,1.1-2.3,0.9-3.6,0.6c-5.5-1.1-11.2,0-16.7-0.7c-2.8-0.3-3.4,2.9-5.8,3C1100.8,352.2,1096.8,353.1,1093,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C212C"),
                d:
                  "M973,356c-6.8,0-13.5,0.4-20.2-1.1c0.5-2.1,2.4-2.3,4-2.2c6,0.3,11.9-0.7,17.9-1.1       c3.8-0.3,7.6,1.1,11.3-0.5c2-0.2,4.1-0.1,6.2-0.1c5,0.3,9.9-0.5,14.9,0c3.6,0,7.2,0,10.8-0.1c3.1-0.8,6.1-0.2,9.6-0.3       c-1.2,2.6-2.7,2.6-4.4,2.4c-0.7-0.1-1.3-0.6-2.1-0.4c1,0.1,1.4,0.7,1,1.7c-10.9,0.8-21.9,0.8-32.8,1.7       C983.7,356.4,978.4,358,973,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52434"),
                d:
                  "M1022,354c-0.9-1.6-2.8-0.4-4.3-1.8c3-0.1,5.6-0.3,8.3-0.4c0-0.3,0-0.6,0-0.9c-2.7,0-5.5,0-8.2,0       c3.7-1.4,7.5-0.7,11.2-0.8c0.7,3,3.1,1.8,4.9,1.7c17.7-0.8,35.2-3.5,53.4-2.8c-1,0.8-1.7,1.4-2.3,1.9       c-13.7,0.9-27.5,1-41.2,2.8c-4.2,0.5-8.5,0.2-12.8,0.2C1028,354.7,1025,354.8,1022,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1115,342c0-0.3,0-0.6,0-1c1.1-1.2,2.5-1.3,3.9-1.3c3-0.2,6.2,0.5,9.1-1c12.2-0.4,24.3-1.6,36.4-2       c2.1-0.1,4.3-0.3,6.2,1c0.7,2.1-0.4,1.8-1.7,1.4C1151,340.1,1133,342.1,1115,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D8696F"),
                d:
                  "M1169,339c0.8,0,1.6-0.2,2-1c-0.3-0.5-0.3-1,0.2-1.4c0.7-0.4,1.5-0.5,2.4-0.5c4-0.4,8.1-0.6,12.1-0.3       c1.6,0.1,3.8-0.5,4.2,2.1c-0.6,0.1-1.3,0.1-1.9,0.2c-2.1,5.3-6.2,5.9-11.1,4.9c-1.7-0.6-3.5-0.5-5.3-0.7       c-1.5-0.2-3.4,0.1-3.6-2.3C1168.3,339.7,1168.7,339.3,1169,339z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M1007,351c-5,1-10,1-15,1c-2.9-1.5-6.2,0.8-9-1c1.8-1.8,4-0.7,6-1C995,350.6,1001.1,348.8,1007,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1168,340c2.7,2.3,6.2,0,9,1.5c-0.8,1.9-2.5,1.6-4,1.8c-5.8-0.4-11.7,1-17.5-0.8       c-0.2-0.2-0.4-0.5-0.6-0.7C1159.1,339.8,1163.8,342,1168,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DD6068"),
                d:
                  "M1152,342.9c-4.3,0-8.7,0.1-13,0.1c5.2-2.3,10.6-0.4,15.9-1.2c0,0,0.2,0.3,0.2,0.3       C1154.5,344.1,1153.4,343.9,1152,342.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D6525C"),
                d:
                  "M1082,344c3.2-2.1,6.7-0.6,10.1-1C1088.9,345,1085.3,343.6,1082,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52434"),
                d:
                  "M1042.9,349.2c-2.3,1.6-4.8,0.6-7.2,0.7C1038,348.6,1040.5,349.1,1042.9,349.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84852"),
                d:
                  "M1119,341c-1.3,0-2.7,0-4,0c-8.7-0.7-17.3,1.8-25.8,0.8c-5.4-0.6-10.9,1.7-16.2-0.8       c-0.8-0.4-2.2,0.4-2.1-1.2c0.1-0.8,0.7-1.8,1.6-1.6c7.6,1,13.9-4.2,21.5-4c7.2,0.2,14.4-2.3,21.6-2.2c8.2,0,15.8-1.9,23.5-3.9       c7.7,0,15.4,0.4,22.9-1.8c1.1-0.3,2.3-0.3,3.1,0.8c0,0,0,0,0,0c-2.3,3.6-6.4,2.6-9.5,2.9c-12.4,1.2-24.6,3.5-37,4.6       c-4.4,0.4-8.9,1.6-13.4,2.3c2.9,1,5.7,1.8,8.7,1.5c1.8-0.2,3.7-0.3,5.1,1.2C1119.3,340,1119.3,340.5,1119,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C1444F"),
                d:
                  "M1119,340c-4.3-1.1-8.8,0.6-13.1-0.9c-1.6-0.5-3.3-0.4-4.2-2.5c3.3-1.2,6.3-4,10.2-1.3       c5.9-3.8,12.8-2.2,19.2-3.4c10.5-2,21.1-3,31.7-4.1c0.8-0.1,1.5-0.6,2.3-0.9c1.4,1.7,3.3,0.7,5,1c-0.3,2.7-2.6,2.1-4.1,2.2       c-3.9,0.1-7.6,1-11.4,1.5c-1.6,0.2-3.4,0.3-3.6,2.2c6.6,2,13.8,0,20.2,3.2c0,0.3,0,0.7,0,1c-10.6-0.2-21.2,0.8-31.7,1.8       c-3.7,0.4-7.5,0.1-11.3,0.1c-0.5,0.5-1.2,0.5-1.8,0.4c-1.6-0.9-3.1-0.4-4.6,0.1C1120.7,340.4,1119.8,340.7,1119,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B7424D"),
                d:
                  "M1171,337c-4.2,0.4-8.4-1.7-12.7-0.1c-0.9,0.3-2.1-0.1-2.7-1c-1-1.5-1.7-2.5-2.7,0.1       c-0.2,0.4-2.4,0.3-3.6,0c-0.3-0.1-0.5-1.8-0.3-2.7c0.3-1.5,1.1-2.7,3-2.7c4.9-0.2,9.7-2,14.7-1.6c1.2,0.1,2.4,0.1,3.2-1       c2.3,0,4.7,0,7,0c1.1,2-0.4,2.8-1.8,3.1c-2.3,0.6-4.6,0.6-6.5,0.2c1.7,0.8,6.3-0.7,5.2,4.3c-0.2,0.6-0.5,1-0.9,1.4       C1172.3,337,1171.7,337,1171,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B0434E"),
                d:
                  "M1173,336c0.7-3.9-1.9-4.2-5.5-4c3.4-2.1,7.7-0.2,9.5-4c3.5-1.3,7.1-2.5,11-2c0.7,0,1.4,0,2,0       c-1.3,2.1-4.6,4.5-3.1,6.2c2.3,2.5,6.1,3.8,10,2.3c0.6-0.2,1.3-0.3,1.9-0.4c0,0.2,0.2,0.6,0.1,0.7c-0.3,0.4-0.6,0.8-0.9,1.1       c-1,0.3-2,0.7-3,1c-6-0.9-12.1-0.4-18.2-0.5C1175.5,336.4,1174.2,337,1173,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("962531"),
                d:
                  "M1223,264c1.2-0.2,2.6-0.4,1-2c-0.6-0.6-0.6-1.3-0.1-2c3.8-1.4,7.1-0.7,10,2.1c-1.8,2.2-2.7,4,1.5,4       c0.9,0.3,1.8,0.6,1.7,1.9c-3.4-0.3-6.9,1.1-10.1-0.9C1226.5,264.9,1222.7,267.2,1223,264z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33037"),
                d:
                  "M1223,264c1.1,1.5,3.2,0.7,4.5,1.7c1.4,1.2,0.1,1.1-0.5,1.3c-3.6,0.1-7.2-1.4-10.9-0.3       c-2.1,0.6-3.2-2.5-5.3-2.9c-0.3-0.6-0.6-1.1-0.9-1.7C1214.4,261.5,1218.4,264.6,1223,264z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C15D63"),
                d:
                  "M1237.1,267.9c-0.7-0.3-1.4-0.7-2-1c0.4-3.7,2.7-2.7,4.9-1.9c1.2,1,3.1,0.4,3.9,2.1       c-1.7,0.1-3.6-0.8-5,1C1238.3,268,1237.7,268,1237.1,267.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("87172A"),
                d:
                  "M1326,346c-0.2,1,0.5,2.5-1.6,2.3c-2.1-0.2-4.2-0.3-6.5-0.4c1.2-3.1,5.7,1.4,6.1-2.8v0       C1325.1,344.4,1325.4,345.5,1326,346L1326,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1283,378c3.3,0.1,6.5-0.2,10.2-2.1c-6.1-3.5-12.6-1.6-18.2-3.9c3.7,0,7.3,0,11,0c1.9-0.7,3.4,0.2,5,1       c0.7,0,1.3,0,2,0c3.9-1.1,7.9-0.2,11.9-0.6c1.6-0.2,3,0.7,3.9,1.9c1.7,2.3,4.4,1.1,6.4,2.1c0.4,0.2,0.6,0.2,0.6,0.2       c-2.8-3.6,0.7-2.9,2.4-3.4c2-0.7,4.5,0.7,4.9,1.4c1.6,2.1,4.3,2.5,5.9,4.4c1.6,0.6,2.8,3.2,5,1c2.8,1.6,4.3-0.5,6-2       c0-0.2,0-0.4,0.1-0.5c0.2-0.2,0.4-0.3,0.6-0.5c0.5,1.9,0.4,3.9-0.1,5.8c-0.3,0.9-0.4,1.7,0.7,2c0.5,0.1,1.1,0.2,1.4,0       c1.1-0.7,0-1.4-0.2-2c-0.5-1.3-1.1-2.9,0.6-3.4c2.1-0.6,1.8,1.3,1.9,2.6c0.2,1.4,0.8,2.3,2.3,1.8c2.2-0.7,0.4-2.1,0.4-3.9       c2.4,2.3,5.2,0.7,7.6,1.6c3.7,1.3,4.8-0.9,5.9-3.9c-0.7,2.2,5.6,2,1.3,5.1c1.3,1,2.5,2.3,3.9,2.8c1.6,0.5,3.3-0.1,4.3-1.6       c1.2-1.8,1.7-5.2,4.4-4.4c3.3,1,1.4,4.6,1.8,7c0.2,1.1,0,2.3,0,3.5c-1.1-0.7-0.9-2-1.8-3c-0.1,1.7-0.2,3.3-0.3,5.1       c-2.5-2.4-4.4-2.2-5.9,0.9c-2,0.7-4.3,0.5-6,2c-2.3,0.1-4.7-4.6-7,0.5c-0.4,0.9-1.7-1.7-2.6-2.8c-3.8,7.5-4,7.5-8.7,0.9       c-2,1,1.3,3.8-1,4.1c-3,0.3-1.6-3.5-3.4-4.7c-1.2,0.9,0.1,4-1.6,3.5c-2-0.7-4.1-0.3-5.9-1.2c-0.6-0.3-0.4-1.2-0.1-1.8       c0.5-0.8,1.1-1.3,2-0.5c1.5,1.4,2.4,0.6,2.9-0.9c0.3-0.9-0.4-2.1-1.1-1.6c-2,1.5-3.1-4-4.5-0.7c-1.2,2.7-1.7,1.7-3.8,1.1       c-3-0.9-6.3,1.9-9.7,0.8c0-1.7,2.2-1.3,2.5-2.7c-0.2-0.2-0.5-0.7-0.5-0.6c-3.7,2.1-7-2.3-10.6-0.6c-0.8,0.4-1.4,1.4-0.7,2.7       c1.3-0.4,2.7-0.9,4-1.1c1.6-0.2,3.4,0.3,3.3,2.2c-0.1,2.4-2,0.5-3.1,0.7c-1.6,0.4-3.1,0.2-4.7,1c-4.4,2.1-10.4-0.4-11.9-5       c-0.8-2.4-2.5-2.4-3.8-1.7c-4,2.4-6.6,3.3-11.2,2.3c-2.6-0.6-3,4-6.2,1.9c1.7-1.4,0.8-3.9,3.7-5.5c2.4-1.3-1.1-3.9-1.4-6       c0.3,0,0.7,0,1,0c3.8-0.1,2.9,4,5,5.8C1282.4,382.5,1281.6,380.4,1283,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1329,379c-2.2-1.3-6.7,1.1-6.1-5c-0.8,1.7-1.1,3.2-1.6,3.3c-1.5,0.3-0.9-1.2-1.3-2       c-1.2-2.2-3.2,1.4-4.6-2.3c0.1,3.6,2.7,3.1,3,5.6c-3.7-2.9-8.7,0.5-11.9-4.5c-0.9-1.5-5.8-0.6-8.8-0.5c-1.6,0-3.3,0.8-4.6-0.7       c-1.4-3,1.3-3.8,2.9-4.5c1.4-0.6,2.8-0.8,1.8-2.4c-0.6-1-3-0.9-3.4-0.1c-1.3,2.6-2.6,1.9-4.2,0.6c-0.7-0.6-1.5-0.6-2.3,0       c-1.1,0.8-2.1,2.7-3.7,1.2c-2.3-2.2,1.5-1.5,1.5-2.9c0-1.4-1.6-1.5-1.7-2.7c1.3-0.7,3.1,0.3,4.1-1.3c3.3,0,6.7-0.5,9.5,1.9       c0.4,0.4,1.2,0.4,1.7,0.6c1-3.8,2.3-2,4.3-0.6c2.5,1.7,5.8,1.3,8.7,1c5.5-0.5,10.8-0.5,15.8,2.5c1.6,1,3.8-0.9,6.2-0.8       c3.3,0.2,6.4,2.2,9.8,1.3c1.7-0.1,2.7,2.2,5.1,0.5c2.8-2,6,0.4,8.9,1.5c-1.1,2.2-5.6,1.9-4.2,5.9c-2.7,0.3-5.9,1.6-8.1,0.7       c-2.4-1-4.7-0.5-7-1.2C1334.1,372.9,1331.3,375.5,1329,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1340,378c0.9,3.9-3.4,3.2-4.8,5.2c-0.3,0.4-1.1-1.9-1.2-3.2c0-0.3,0-0.7,0-1c0.9-0.7,1.9-1,3-1       C1338,378,1339,378,1340,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1359,369c-0.2-0.7-1.6-1.4-0.9-1.7c1.4-0.7,2.8-0.2,2.9,1.7C1360.3,369,1359.7,369,1359,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1337,378c-0.7,1.2-1.9,1-3,1C1334.8,377.9,1335.3,376.2,1337,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811726"),
                d:
                  "M1326,346c-0.7-0.3-1.3-0.7-2-1c0.2-0.7,0.1-1.8,1.2-1.4C1326.3,343.9,1325.9,345.1,1326,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1285,361c-1.3,0-2.6,0-3.9,0c-0.2,1.5,1.8,2.1,1.1,3.7c-2.3,1-2.1-2.1-4.1-2.3       c-1.9-0.1,1.9,2.8-0.7,2.2c-0.6-0.1-3.8,0.6-2.2-2.3c0.7-1.2-0.3-1.7-1.2-2.2c0.1-1.4,0.9-2.3,2.3-1.7       C1279.1,359.4,1282.4,359.2,1285,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1269,357c-1.8,0.9-0.2,3.2-2,4.5c-1.1-2-0.4-6.3-5.2-4c1.9,0.7,4.4,1.3,2.1,4.4       c-1.4-3.2-4.8-3.6-7.4-5.9c4.5,0,8.5,0,12.4,0C1269,356.3,1269,356.7,1269,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1827"),
                d:
                  "M1291,373c-1.8,0.1-3.5,0-5-1C1287.6,369.8,1288.3,369.9,1291,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("631220"),
                d:
                  "M1131.1,383.9c-0.8-0.1-1.7-0.2-1.8-1.2c-0.1-1.7,1.2-1.7,2.4-1.7c0.8,0,1.9-0.1,1.9,1       C1133.5,383.6,1132.3,383.8,1131.1,383.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C1627"),
                d:
                  "M1178,361c-6.7,0.4-13.3-1.7-20-1c-2.9-1.5-6.2,0.5-9.1-1.1c0.5-2.6,2.7-1.9,4.3-2c2-0.2,4,0,6-0.1       c2.2,0,5.1,1,5-3.1c0-0.7,0.9-1.7,1.6-1.7c5.5-0.4,8.3-6.8,14.2-6.3c1.7-0.3,3.4,0,5.1,0.5c0.7,0.4,1.2,0.9,0.9,1.8       c-2.1,1.3-4.7,1.6-4.8,5.6c-0.1,3.5-4.5,2.1-7,3.5c1.8,0,3.5,0,5.3,0c1.5,0,2.9,0.6,2.8,2.1c-0.3,2-1.8,1-3,0.6       C1179,359.6,1178.4,360.6,1178,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63131D"),
                d:
                  "M1189,342c3.1-0.6,6.2-1.3,9.3-1.9c1.4-0.3,2.9-1.2,3.7,0.9c-2,0.1-4.1,0.2-4.9,2.6       c-0.9,2.6,1.4,3.3,2.9,4.4c-5.1,0.1-9.8-1.1-14-4C1185.2,340.6,1187.1,341.3,1189,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881827"),
                d:
                  "M1189,342c-1.4,0.1-2.9-0.1-2.9,2c-0.8,1.3,3.2,2.7,0,4c-0.3-0.3-0.7-0.7-1-1c-1.5-2.1-3.6-2.7-6-2.7       c-2,0-4,0.2-5.8-0.9c-0.5-0.4-0.5-0.9-0.2-1.4c1.3-0.2,2.7-0.3,4-0.5c4.6,1.7,7.9-0.6,11-3.4       C1187.8,339.5,1188.3,340.7,1189,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C1444F"),
                d:
                  "M1173,336c5.8,0,11.6,0,17.3,0c1.6,0,3.3-0.6,4.6,1c-1.7,0.3-3.4,0.6-5.1,0.9       c-4.8-1.7-9.8-0.8-14.7-0.4c-0.9,0.1-1.6,0.3-2.2-0.4C1173,336.7,1173,336.3,1173,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791722"),
                d:
                  "M1224,260c0,0.7,0,1.3,0.1,2c-5.7-3.1-12.3-0.6-18-3c1.6-2.7,4.4-2.7,7-3c1.6,0.2,2-1.4,3-2       C1217.1,258,1220.5,259.1,1224,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3D47"),
                d:
                  "M1240,265c-1.8,0.1-3.9-0.4-4.9,1.9c-1.7,0-4.2,0.4-4.6-1.3c-0.4-1.8,1.7-2.9,3.5-3.5       c0.3,0.3,0.7,0.5,1,0.8C1236.9,263,1238.7,263.4,1240,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("82162E"),
                d:
                  "M1165.9,266.8c4.5-1.6,7.8-1.7,11,0C1173.7,266.8,1170.5,266.8,1165.9,266.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6C1721"),
                d:
                  "M1213,256c-1.7,2.4-4.9,1.6-7,3c0,0-0.5,0-0.5,0s-0.5,0-0.5,0c-0.3-0.7-0.7-1.3-1-2       c1.4-0.8,2.8-1.9,4.3-2.5C1210.1,253.9,1212.2,252.9,1213,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("460F1A"),
                d:
                  "M580,356c0.3,0.7,0.7,1.3,1,2c-5.9,0.7-11.6-0.8-17.4-1.3c-0.9-0.4-0.7-1-0.5-1.7       c-5,0-8.8-4.5-14.1-3.7c-3.3,0.5-6.6-0.1-9.8-1.3c-3.8-1.4-7.5-0.5-11.4,1.5c4.3,1.8,8.7,1.7,13,2.3c1.9,0.2,4.1-0.3,5.3,2       c-0.2,0.6-0.5,1-1.1,1.2c-7.6,1.6-15.1-0.7-22.7-0.9c-1.3,0-2.5-0.7-3.4-1.9c0.6-1.1,1.2-2.1,1.8-3.2c1-3,3.3-4,6.2-3.9       c3-0.7,6.2-0.5,9-2c3.1-2.4,6.7-1.6,10.1-1.3c10.7,0.9,20.8,3.9,30.3,9C577.9,353.5,578.9,354.8,580,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("ED8088"),
                d:
                  "M502,356c0.3,0.1,0.6,0.1,0.9-0.1c0.8-0.6,1.8-0.8,2.8-0.8c16.7,0.6,33.3,1.6,50,2.6       c1.7,0.4,3.4,1,5.2,0.9c1.1,0,2.3-0.1,3.4-0.2c0.5,0,0.9,0,1.3,0.1c1.1,0.3,2.2,0.5,3.3,0.8c4.1,0.6,8.4-0.1,12.4,1.8       c0.5,0.3,0.8,0.7,0.9,1.2c-0.6,1.5-2,1.6-3.4,1.8c-1.4,0.1-2.7,0-4.1-0.4c-3.2-0.9-6.5-0.4-9.7-0.5c-1.7,0-3.4-0.1-5.1-0.4       c-2.8-0.9-5.7-0.6-8.5-0.5c-15.6,0.2-31.1-2.4-46.7-2.2c-2-0.3-3.7-0.9-3.3-3.5C501.6,356.5,501.8,356.3,502,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7C2937"),
                d:
                  "M580,356c-13.6-7.8-28.2-11.9-44-11c-1.9-0.1-2.9-1-3-3c0.7,0,1.3,0,2,0c4-0.8,8-0.8,12,0       c10.7,0.9,20.6,4.3,29.8,9.9C578.4,352.9,579.9,353.9,580,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6A6F"),
                d:
                  "M557,359c-8.5-0.5-17.1-0.9-25.6-1.8c-4.9-0.5-9.8-0.2-14.7-0.2c-4.6,0-9.2,0.1-13.8-1       c0.4-2.3,2.3-1.9,3.9-1.9c4.1,0,8.2,0,12.2,0c8.9,1.1,17.9,2,26.9,2.1c6-1.5,11.8,0.4,17.6,1c0.9,0.1,1.5,0.7,1.5,1.7       c-1,0.4-2,0.7-3.1,1.1C560.5,358.8,558.5,360.1,557,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E7757B"),
                d:
                  "M487,355c3.9-1.1,7.9-0.9,11.9-1.1c1.6-0.1,3,0,3.1,2.2c0,0,0.1,0,0.1,0c-0.8,0.7-0.4,2.3-1.6,2.8       c-4.8,1-9.5,1.3-14-1C485.1,356.4,486.1,355.7,487,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("912C3A"),
                d:
                  "M527,347c-2.1,1.3-4.1,2.6-6.2,3.9c-2.7-1.2-0.5-2.4,0.2-3.1c2.3-2.7,5.6-3.7,9.4-4.5       C529.9,345.3,527.3,345.3,527,347z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A29"),
                d:
                  "M481,356c-1.8,0.1-3.5,0-5-1C478.1,353.1,480.2,351.5,481,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE5B68"),
                d:
                  "M487,355c-0.3,0.6-0.6,1.3-0.9,1.9c-0.4,0.6-0.9,0.7-1.6,0.5c-0.2-0.1-0.3-0.3-0.5-0.4       c0.1-0.6,0.1-1.2,0.2-1.8C485.1,355.1,486.1,355,487,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811725"),
                d:
                  "M1934.1,343.9c-0.8,0.1-1.5,0.3-2.3,0.4c0.7,0.6,1.4,1.1,2.2,1.7c-2,1.4-4.4,1.2-6.7,1.5       c-1.5,0.2-3.1-0.5-1.9-2.7c0.1-0.1,0.5-0.2,0.3-0.2c-9.8-1.8-19.1-5.5-28.8-7.5c-3.2-0.7-6.4-1.8-9.7-1.9       c-0.5-0.1-1-0.2-1.5-0.3c-2-1.1-5.3-0.3-5.7-3.7c0,0,0.1-0.1,0.1-0.1c3.6,0.4,7.2,0.7,10.8,1.1c12.6,3.3,25.1,6.6,37.7,9.9       C1930.5,342.5,1932.3,343.3,1934.1,343.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961A23"),
                d:
                  "M1867.9,330c2.4,0,4.7,0,7.1,0c1.9,3.2,5.6,2.1,8.2,3.4c0.8,0.4,1.9-0.1,2.8,0.5l0,0       c3.8,1.5,8,1.3,11.8,3.1c1.3,0.6,3.8-0.3,3.2,2.4c-0.4,1.9-1.8,3.6-3.9,3c-6.4-1.9-13.2-0.7-19.4-3.1c-1.4-0.5-2.9-0.3-4.4-0.4       c-4.6,0.1-8.5-3.3-13.3-2.7c-1.6,0.2-1-1.5,0.1-2.3c1.6,0,3.3-0.1,4.9,0.1C1868.3,334.4,1869.5,333.3,1867.9,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881824"),
                d:
                  "M1860,334c-0.1,0.5-0.2,0.9-0.3,1.4c5-1.8,8.6,3.3,13.3,2.6c1,1.4,3.7-0.8,4,2       c-8.1-0.2-15.7-3.2-23.7-4.4c-8.1-1.3-16-3.9-24.3-3.6c-0.6-1.3-3.3,0.6-3-2c0-0.3,0-0.7,0-1       C1837.3,330.7,1848.7,332.3,1860,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881824"),
                d:
                  "M1825.1,329c-3.4,0-6.7,0-10.1,0c-5-2.6-11-1.4-16-4C1807.8,325.6,1816.5,327,1825.1,329z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BD4149"),
                d:
                  "M1807,323c1.6,0,3.2,0,4.8,0C1810.2,324.1,1808.5,324.5,1807,323C1807,323,1807,323,1807,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("90212B"),
                d:
                  "M1886,334c-3.8,0.3-7.4-0.8-11-1.8c-2.8-0.8,0.1-1.4-0.1-2.1c1.6,0.9,3.3,1.1,5,1       C1881.4,333.3,1884.4,332.3,1886,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E05D63"),
                d:
                  "M1474,323c-0.2-1.8-1.4-2.2-2.8-1.9c-11.6,2-23.4,0.5-35.1,0.9c-2.7,0.1-5.4,2.1-8.1,0       c6.8-0.7,13.5-1.7,20.3-1.9c10.9-0.3,21.7-0.8,32.6-1.7c6.9-0.6,14.1-0.9,21.1-0.4c8-1.4,16.1-0.9,24.2-0.9       c1.1,0,2.7-0.1,2.6,1.6c-0.1,1.3-1.6,1.4-2.7,1.6c-2.6,0.4-5.3,0-7.9,0.6c-5.4,0-10.8,0.2-16.1,1.2c-0.3,0-0.7,0-1,0       c-2.7-0.8-5.3-0.8-8,0C1486.6,322,1480.3,322,1474,323z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7545C"),
                d:
                  "M1517,320c3.4-2,7.2-0.4,10.7-2c-8.6,0-17.2,0-25.7,0c4-3.3,8.8-1.4,13.2-1.8       c5.9-0.6,11.9-0.2,17.8-0.2c5.5-1.4,11-1.6,16.6-1.8c6.7-0.3,13.3-0.3,19.9,0c1.8,0.1,3.9-0.4,3.8,2.5       c-1.9,2.2-4.8,1.7-7.2,2.5c-13.3-0.1-26.6,0.9-39.8,2.1c-0.8,0.1-1.7,0.1-2.3,0.7c-2.3,0-4.7,0-7,0       C1516.4,321.3,1516.4,320.7,1517,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D24F54"),
                d:
                  "M1573,317c-0.2-1.8-1.2-1.6-2.8-1.7c-12.4-0.9-24.8,0.4-37.2,0.7c0-0.6,0-1.2,0-1.8       c3.6-0.1,7.3-0.2,10.9-0.3c8.1-1,16.3-0.3,24.4-0.4c7.8-0.1,15.7-0.2,23.5,0.1c1,1.2,0.8,2.6-0.5,2.8       C1585.2,317.3,1579.2,320.3,1573,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD4E59"),
                d:
                  "M1524,322c0.2-1.8,1.4-1.9,2.8-2c13-1.2,26.1-2.4,39.2-2c2.2,1.5,4.9-1.2,7.1,0.7       c0.6,6.8,1.8,13.2,7.6,17.7c0.2,0.3,0.5,0.7,0.7,1c0.5,0.5,1.2,0.9,1.6,1.6c0,0.3,0,0.7,0,1c-2.3,0-4.7,0-7,0       c-3.8,2.1-7.4,1.7-11.2,0c1.2-2.5,3.4-2,5.2-3.1c-3.2-2.5-5.9-5.5-10.4-5.8c-3.1-0.2-3.1-0.7-4.5-5.3       c-4.7,5.4-7.7,6.1-13.1,1.5c-2.8-2.4-5.3-2.8-8.5-2.5c-1.1-0.4-1.8-1.3-2.9-1.7c-1.8-0.6-4,0.5-5.7-1       C1524.7,322,1524.3,322,1524,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CE535E"),
                d:
                  "M1533,324c5.9-1.8,9.9,2.7,14.5,4.7c3.2,1.3,4.1,0,4.8-1.9c1.2-3.2,3.3-3.1,6-2.5       c-2.4,4-1.8,5.7,2.4,5.5c3.1-0.1,4.9,1.6,6.9,3.3c1.6,1.3,2.8,3.3,5.9,2.4c-2,3.5-5,3-7.3,4.4c3.3,0,6.5,0,9.8,0       c0,0.3,0,0.7,0,1c-1.2,0.9-2.6,1-4,1.3c-3.1,0.2-6.2-0.3-9.3,0.8c-2.6,0.3-5.3,1-7.7-1c-2.8-1.3,0.9-1.6,0.6-3.1       c-0.6-3.9-0.2-4-4.8-1.8c-0.3,0.1-0.6,0.2-0.9,0.3c-1.4-0.7-0.6-2-1-3c-0.9-3-2.9-5.3-6-3.5c-2.9,1.7-4.6-0.7-6-1.5       c-2-1.2,2.2-1.9,1.5-3.7c-0.3-0.1-0.8-0.4-0.8-0.4c-6.1,6.4-8.7-0.8-12.6-3.2c2,0.8,4-1.6,6,0       C1531.3,323.1,1532.4,323.2,1533,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D15E68"),
                d:
                  "M1546,344c-4-1-8,2.7-12,0c0.8-1.5,1.1-2.6-1.3-3.1c-2.8-0.6-5.5-0.9-8.4-0.9c-1.7,0-3.9,0.6-3.7-2.5       c0.1-1.6-1.3-0.7-2.2-0.8c-5.6-0.5-11-1.6-16.2-3.7c-1.5-0.6-2.5-1.6-3.2-2.9c0.9-0.2,2.1,0.5,2.4-1c0.5-2.5,2.1-2.2,3.8-1.4       c6.3,2.9,13.3,2.8,19.7,4.7c5.9,1.7,12.3,1.6,17.8,4.3C1545.5,338,1546.2,341,1546,344z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E0626D"),
                d:
                  "M1572,341c1.3,0,2.7,0,4,0c0.5,0,1,0,1.5,0.1c0.2,0.1,0.4,0.4,0.6,0.5c-3.8,0.2-4.9,6.6-9.9,4.4       c-1.1-0.5-2.7-0.3-3,1.6c-0.2,1.4,0.5,2.2,1.9,2.3c0.7,1.8-1,2.5-1.6,3.8c1.5-0.5,2.8-2.2,4.6-0.8c0,0,0,0,0,0       c-0.2,0.8-0.8,2-0.5,2.3c3.3,3.3,2.5,5.4-1.6,7c-1,0.4-1.6,1.7-2.9,1.7c0.1-1.9-0.1-3.4-1.9-4.7c-1.3-0.9-3.2-1.7-2-4.3       c0.6-1.5-1.9-1.6-2.8-1.6c-8.1-0.7-8.1-0.7-9.4-8.2c-0.1-0.4-0.5-0.8-0.8-1.2c1.9-2.2,5.1,0.3,7-2c2.7,0,5.3,0,8,0       C1565.9,340.7,1569.1,342.4,1572,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7545A"),
                d:
                  "M1517,320c0,0.7,0,1.3,0,2c-5,0-10,0-15,0C1506.9,320.7,1511.7,318.7,1517,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D7545A"),
                d:
                  "M1493,322c2.7-1.5,5.3-1.5,8,0C1498.3,322,1495.7,322,1493,322z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("832835"),
                d:
                  "M1989,450c4.3,0.9,7.4,3.6,10,6.9C1994.9,455.8,1991.1,454,1989,450z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1144,451c0.7-1.2,2.6-1.7,2.2-3.6c-2.2-1.2-2.9,1.7-5.3,2c1.3-2.9,3.6-4.2,5.9-4.9       c1.3-0.4,1,1.7,1.1,2.7C1148.1,450.1,1146.6,451.2,1144,451z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M1101.2,449c-1,1.2-1,2.5-2.3,2.4c-0.4,0-1.1-0.8-1.1-1.4c-0.1-1.2,0.9-1,1.7-1.1       C1100,449,1100.5,449,1101.2,449z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M1070,458c-0.7,0-1.3,0-2,0c-0.7-1.4,0.2-2.1,1-3c0,0,0,0,0,0c0.7,0.2,2.9-2.5,2,1       C1070.8,456.7,1070.3,457.3,1070,458z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M884,477c1.7-4,2.2-8.1,1-12.3c-0.6-2,2.9-3.4,1-5.7c0.3-0.3,0.7-0.7,1-1c1.1-0.6,2.1-0.8,2,1       c-0.6,2,1.1,2.8,2,4c-2,7.4,4.5,2.2,5.8,4.4c1.4-1.7-1.4-2.5-0.2-3.9c0,0,0.3-0.2,0.3-0.2c4.7,4.9,9.6,0.2,10.7-2.2       c1.9-3.8,6-2.6,7.2-5.9c1.7,1.5,0.7,3.2,1.4,4.8c3.3-4.5,5.7,1.5,8.8,0.6c0,5.3,5.9-1.8,5.6,3.3c2-1.5,0.8-3.1,0.9-4.5       c2.8,0.5,5.2,2.6,7.8-1.1c0.9-1.2,4.8,0.1,7.5,0c6.8-0.4,13.6-0.8,20.5,0.2c1.6,0.2,3.8-0.2,5-1.1c2.9-2.3,6.1-1.4,9.1-1.2       c5.3,0.3,5.3,0.6,7.9-3.5c0.9,1.5-1.1,2.8,0,4.4c1.6-3.8,3.6,2.5,6-0.4c1.1-1.3,8.3-4.2,9.7-5.9c0.6-0.7,1.5-3,2.7-0.2       c0.4,0.9,1.5,0.7,2.2,0.3c5.3-2.5,7.1-2,10.5,2.8c0.9,1.3,1.9,3,4,1.5c0.3-0.2,0.5-0.4,0.8-0.6c3,5,6.9,0.1,10.3,0.4       c4.6,0.3,8.4,1.9,12.5,3.1c4.5-2.7,11.2-1.2,13,3c-1.1,2.2-1.3,3.9-0.8,7.6c2.9-6.2,4.1-6.6,7.8-2.6v0c-3.7,4.2-8.8,5.1-14,6       c-4.4,1.4-8.9,2.6-13.5,0.8c-1.6-0.6-3.6-0.8-4.9,0c-4.9,2.9-10,0.4-15,0.8c-2.2,0.2-2.8-3.6-5.6-3.3c-1,0.1-2.1-1-3.3-0.4       c-5.1,2.9-11,3.1-16.4,4.8c-0.5,0.1-0.9,0.1-1.4,0.1c-3.5-0.3-6.8,0.5-10,1.6c-5.9,0-11.9,3.2-17.9-0.3c-1-0.6-2.7,2-4.2,1.5       c-8.4-2.8-16.5,2.1-24.7,1c-3-0.4-6.1,0.6-8.9-1c-1.4-1.6-3-0.7-4.6-0.6c-5,0.3-10.1,1.7-14.7-1.5c-0.6-0.4-0.6-0.4-0.9,0.1       c-2.9,4.1-6.8,1.9-10.3,1.5c-2.1-0.3-3.9-0.3-5.5,1c-0.4,0.2-0.9,0.3-1.3,0.2c-0.7-0.2-0.7-1.2-1.6-1.3       c0.2,0.3,0.2,0.6,0.1,0.9c-0.3,0.4-0.6,0.6-1,0.7C886.6,479.1,886,476,884,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891825"),
                d:
                  "M994,474c3.2-0.7,5.9-5,9.6-1.1c2-2.5,4.9-3.5,7.7-4.5c1.6-0.6,7.4,1.7,8,3.4c0.3,0.8,0.7,1.3,1.3,1       c3.5-1.8,7,1.2,10,0.5c2.9-0.7,6.1-3.2,8.7-2c5,2.3,9.9-0.1,14.7,0.8c-0.3,0.7-0.7,1.3-1,2c-2.1,1.3-4.5,1.8-7,2       c-10.4,0.9-20.8,1.2-31.1,2.9c-0.8,0.1-1.7,0.2-2.5-0.2c-5-2.3-10.1-2.3-15.5-1.3C994.5,477.9,992.2,477.5,994,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1061,461c-3.6-4.3-8.4-3.2-13-3c-0.3-4.1-4.4-3.1-6.6-4.8c0.3-0.4,0.5-0.9,0.6-0.9       c4.3,0.8,8.4,2.9,12.9,1.5c0,0,14,1.2,14,1.2c-0.3,1-0.7,2-1,3C1065.3,458.1,1064.3,462.2,1061,461z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F1624"),
                d:
                  "M1068,466c0.6-4,2.3-6,6.7-4.1c1.5,0.7,3.5,0.8,3.5,2.7c0,2.1-2.9,3-3.5,2.7       C1072.5,466.3,1069.4,469.8,1068,466C1068,466,1068,466,1068,466z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1624"),
                d:
                  "M1196.6,441.7c-0.8-1.6-0.8-2.7-0.2-3.8c0-0.1,0.9,0.1,1.1,0.4C1198.3,439.7,1197.1,440.3,1196.6,441.7       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2936"),
                d:
                  "M1213,486c0.2,1-0.5,2.4,1.6,2.3c3.7-0.3,7.3-0.6,10.8,1.5c1.9,1.1,4.5-2.7,6.6,0.2       c0.3,0.4,0.7,0.8,1,0c4.2-3.7,5.8-3.7,7,0c-0.2,2.4-1.9,3.7-3.9,4.8c-0.7,0.2-1.4,0.4-2.2,0.4c-0.7,0.1-1.5,0-2.2,0       c-0.7,0-1.5-0.2-2.2-0.4c-4.1-2.6-8.7-1.4-13.1-1.4c-0.8,0-1.9,0.3-2.1,1.1c-1.3,4-3.4,3-6.5,1.9c-4.2-1.5-8.8-0.8-13.2,0       c-1.8,0.3-3.6,0.8-5.4,0.9c-1.6,0-2.9,0.6-4,1.7c-0.9,0.9-2.3,1.2-3.2,0.3c-2.8-3.1-5.1-1.9-7.7,0.2c-1.2,0.9-2.5,1.1-3.3-0.5       c-1.3-2.6-3.6-1.9-5.7-1.8c-2.9,0.1-5.9,2.4-8.4-1c-0.2-0.2-0.7-0.3-0.9-0.2c-5.8,3.7-12.1,1.8-18.2,1.7       c-5.4-0.1-11,3-16.3-1.2c-1.9-1.5-4.7,0.8-7.2,0.9c-4.9,0.3-9.8,0.5-14.6,2c-1.1,0.3-2.4,0.8-3.3-0.1c-2.2-2.1-4.9-1.8-7.5-2.2       c-0.9-0.2-1.9-0.5-2.1-1.7c3.2-3.2,7.8-4.2,11.1-7.3c1.6-1.5,4.9,1.1,7-1.2c4.6-0.8,9.3-2.9,14-0.1c0.3,0.2,1.5,1.1,1.9,0.6       c3.2-3.4,1.4,1.4,2.7,1.5c0.2-1,0.5-2.1,0.7-3.1c3.7,2,7.7-3.4,11.3,0.3c2.3,2.3,6.5-0.7,8.1,3.2c0.1,0.3,0.9-0.6,1.3-1.1       c2.6-3.1,2.7-3.1,4.5,0.9c0.9-1-0.3-5.7,3.3-2.1c0.4,0.4,0.8-0.2,1.2-0.4c4.2-2.1,4.9-1.8,5.4,2.3c1.4-3.5,2.3-3.7,4.8-1.2       c0.9,0.9,1.1-0.8,1.8-0.9c7,1.1,14-0.5,21-0.2c0.5,0,1,0,1.5,0c3.5,0.4,7,2.2,10.5,0.2c4.5,1.2,8.8,0.5,13-1       C1212.3,486,1212.7,486,1213,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("862834"),
                d:
                  "M1105,487c-0.3,0.9-0.6,1.8-0.9,2.7c-6.3-2.8-9.3,3.8-14.2,4.9c-1,0.2-1.9,0.3-2.9,0.5       c-0.2-0.1-0.3-0.2-0.5-0.3c-0.7-0.8-1.6-1.1-2.6-1.4c-1,0-1.3-1.9-3.2-0.4c-2.8,2.2-6.4,4.1-10.1,0.6c-1.2-1.2-2.7-1.5-4.7,0.2       c-1.9,1.6-4.8,3.6-7.8,0.8c-1-0.9-2.6-0.1-3.8-0.2c-3.8-0.3-7.5,2.9-11.4,0c-1.2-0.9-2.2,1.1-3.2,1.8c-0.4,0.3-0.8,0.4-1.3,0.5       c-1.3,0-2.1-0.9-3.1-1.5c-1.5-1-3.1-2.9-4.7,0.1c-0.3,0.6-1.3,0.6-1.9,0.3c-5.1-2.5-9.7,0.6-14.6,1c-3.9,0.4-7.8,1.1-11.3-2       c-2.1-1.9-5.1-1-7.6,0.1c-3.1,1.2-5.5,0.8-6.8-2.6c0.7-3.3,3.4-3.3,5.9-3.3c6-0.1,12,0.3,17.6-2.3c2.3-0.8,4.9-0.8,7-2.4       c0.7,0,1.3,0,2,0c3.9,3.4,8.6,3.3,13,1.7c2.2-0.8,4.5-1.5,6-0.4c3.3,2.4,7.4,1.1,10.7,3c2.6,1.5,2.5-2.5,5.1-2.5       c6,0,12.2-1.1,18,0.6c3.7,1,8.1-1.2,11.3,2.4c0.6,0.7,0.9-2.1,3.6-2.1c4.2,0,9,1.2,13.1-1.4       C1103.2,484.5,1104.4,485.7,1105,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d:
                  "M1199,487c-1.1,0.1-1.6,0.5-1.7,1.8c-0.2,2.7-2.8,2.9-3.7,1.4c-1.7-3-4.2-2.5-6.4-2.1       c-4.3,0.6-8.7-1-13,0.8c-2.7,1.1-5.5-1.1-8.1-1.9c0.6-2.4,1-4.6,4.3-2.2c1.1,0.8,3.3,0.8,4.8,0.5c5.1-1.1,10-0.5,15,0.5       c0.7,0.1,1.7-0.2,2.2-0.7C1195.6,482.2,1197.4,484.1,1199,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("852330"),
                d:
                  "M1212,486c-3.2,3.4-8.6,3.8-13,1C1202.9,484,1209,483.5,1212,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2C38"),
                d:
                  "M1236,494c1.3-1.3,2.7-2.7,4-4c1.7,3.3,3.9,0.1,5.9,0.4c5.3,0.7,11.1,1.5,16,0.7       c5.2-0.8,10.1,1.4,15.1-0.1c1.9,0.6,3.8,0.6,5.7,0.4c1.6-0.2,2.9,0.2,3.6,1.8c0.1,0.7-0.1,1.3-0.5,1.9       c-0.6,0.8-1.4,1.6-1.9,2.5c-0.4,0.8-0.6,1.6-0.9,2.4c0,0,0,0,0,0c-2.4,1-4.2-1.2-6.3-1.6c-4.6-0.9-8.6,0.8-12.8,1.2       c-3,0.3-2.2-3.7-4.5-2.3c-2.2,1.4-4.3,1.5-7.1,1.4c-2.5-0.1-4.3-0.9-6.4-1.7c-2.6-0.4-5.3,0.1-7.9,0.3       C1235.6,497.4,1234.7,496.4,1236,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2832"),
                d:
                  "M1286,494c-0.7-1.5-1.7-2-3.5-1.4c-2.2,0.9-4,0-5.5-1.6c4.6-2,9.5-0.7,14.2-1c4.6-0.2,9.3,0,13.9-0.1       c1.6,0,3.5,0.5,3.8-2c3.3,0,6.7,0,10,0c-4.1,1.1-7.4,4.3-12,4c-1.9,1-4.1,0.9-6,2c-0.8,0-1.6,0.2-2,1c-1.5,1.2-3.5-0.2-5,1       c-0.3,0-0.7,0-1,0c-0.1,0.1-0.3,0.2-0.4,0.3c-1.4-2.3-3.5-0.6-5.3-1C1286.7,495.1,1286.2,494.6,1286,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2C38"),
                d:
                  "M1233,490c0.4,0.4,0.9,0.9,1.3,1.3c0,0-0.4,0.5-0.6,0.5c-1.3,0.1-1.6-0.8-1.7-1.9       C1232.3,490,1232.7,490,1233,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("942330"),
                d:
                  "M1015,478c7.3-1.8,14.7-2.9,22.1-2.2c3,0.3,6.1-2.6,8.9,0.2c-10.4,2.7-20.6,5.9-31.3,7.1       c-0.6,0.1-1.1,0.6-1.7,0.9c-0.2,0.2-0.3,0.3-0.5,0.5c-2.4,0.9-5.2,0.8-7.4,2.2c-0.7,0.2-1.4,0.4-2.1,0.5c-1.7,0-3.4,0.6-5.1,0       c-1.2-1.1-1.7-2.4-1.4-4c0.8-1.8,2.4-2,4.1-2c2.9-0.1,5.7-0.2,8.1-2.6C1010.4,476.9,1013,479.9,1015,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("81222E"),
                d:
                  "M1003,486c0.7,0,1.3,0,2,0c2.4-1.6,5.4-1.1,8-2c0,0,0,0,0,0c2,0,4,0,6,0c-1.2,2.6-3.4,3.3-6,3       c-2.1-0.2-4.1,0.7-6.1,1.2C1004.8,488.8,1003.1,488.9,1003,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651221"),
                d:
                  "M1262.2,438.7c0.9-0.3,1.4-0.6,1.6-0.5c0.5,0.3,1,0.8,1.1,1.3c0.2,1-0.7,0.4-0.8,0.3       C1263.5,439.6,1263.1,439.2,1262.2,438.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1023,435c0.1,1,0.2,2.4,1.3,2.2c1.3-0.3,1.5-1.9,1.7-3.2c1.9,0.5,3.4,2.3,5.8,1.3       c-0.8,4.2-3.1,6.3-6.6,6c-4.6-0.4-3.1-5-4.8-7.5C1022.1,433.1,1022.1,434.8,1023,435z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1036.6,436.3c-3.8-1.3-1.7-4.4-3.5-5.4c-1.9-1.2-2.3-3.2-3.1-4.9c2.5,0.2,5,0.2,7.4,0.7       c0.9,0.2,1.8,1.6,2,2.6c0.2,1.4-1.3,0.9-2.1,1.2C1034.5,431.7,1035.4,433.8,1036.6,436.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M982,440c-1.6,2.7-3.3,4.9-6,1C977.5,437.8,980,440.4,982,440z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1015.3,438.4c1.4,2.1-1.4,4.1,0.5,6.1C1012.5,442.4,1012.5,442.4,1015.3,438.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1018.1,437.9c2.7,1.2,3.8,2.5,3,4.3c-0.3,0.8-1.3,2.7-2.7,0.7C1020.2,441.5,1018.4,440,1018.1,437.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1041.6,429.6c1.3,1.7,2.6,2.9,2.9,5.2C1041.7,433.9,1038.9,433.4,1041.6,429.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M903.5,442.3c-0.5,1.3-1.2,1.3-1.8,1.2c-1.8-0.1-1,2.3-2.5,2.5c0-1-0.3-2,0-2.9       C900,440.4,901.8,442.1,903.5,442.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751525"),
                d:
                  "M892,446c1.2,0.8,1.2,1.8,0.4,2.9c-0.5,0.7-1.3,1.1-2.1,0.6c-0.4-0.2-0.8-0.7-0.8-1.1       c0-1.4,1.3-0.3,1.7-0.8C891.6,447.2,891.7,446.5,892,446L892,446z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M976.1,441c-1.3,1.1-2.5,2.1-3.8,3.2C971.5,440.6,974,441.1,976.1,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1008.7,435.6c-0.5,0.6-0.8,1.6-1.4,1.8c-1.1,0.4-1.1-0.7-1.3-1.4c-0.4-1.5,0.9-0.9,1.4-1.2       C1008.1,434.5,1008.7,434.5,1008.7,435.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1626"),
                d:
                  "M1102.3,442c0,1-0.8,1.1-1.3,0.8c-0.5-0.2-1.2-0.7-1.3-1.2c-0.2-0.7,0.5-1.2,1.2-1.3       C1101.9,440.3,1102,441.3,1102.3,442z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M968.1,442.6c-0.1,0.1-0.5,0.8-1,0.9c-0.9,0.1-0.9-0.7-0.8-1.3c0.1-0.7,0.7-1.1,1.4-1       C968.1,441.3,968.4,441.6,968.1,442.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1013.7,432.6c-1.6-1.8-1.2-2.9-0.2-4.2C1015.4,429.8,1013.7,431,1013.7,432.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M995,444c0.6,0.6,1.2,0.9,1.5,1.4c0.3,0.6,0.1,1.4-0.8,1.2c-0.5-0.1-1-0.7-1.3-1.2       C994.3,445.2,994.7,444.6,995,444z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1008.4,445.8c-1.9,0.2-2.6-0.6-3.5-2.2C1006.6,443.9,1007.5,444.6,1008.4,445.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1126.3,433.4c0.9-0.1,1.2,0.2,0.9,0.8c-0.3,0.5-0.7,1.1-1.2,1.3c-0.5,0.2-0.9-0.3-0.7-0.8       C1125.6,434.2,1126,433.7,1126.3,433.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M991.3,443.5c0.2,0.3,0.5,0.7,0.5,1.1c0,0.5-0.3,1-0.9,0.7c-0.3-0.1-0.5-0.5-0.6-0.8       C990.3,443.9,990.5,443.5,991.3,443.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("3F0F16"),
                d:
                  "M923.9,398.2c-0.1-0.5-0.2-0.9-0.3-1.4c-2.6,4.1-5.4-0.5-8.1,0.1c-3.3,0.7-6.5-0.6-9.8-1       c-3.4-0.4-6.7-1.2-10.2-2.9c1.1-1.5,2.5-0.8,3.6-1.1c0.3,0,0.5-0.1,0.8-0.1c8.3,0.9,16.6,1.6,24.9,0.1       c3.7-0.6,7.1,0.2,10.6,1.6c7.3,2.9,14.7,4.5,22.5,1.7c2.8-1,6,0.1,8.5-2c2.8-0.9,5.6-0.4,8.4-0.6c2,0,4-0.1,6,0       c1.5,0,2.9,0,4.4,0.1c1.9,0.1,4.3,0.1,4.8,2.4c0.4,2.2-1.9,2.7-3.4,3.5c-0.5,0.2-1,0.4-1.6,0.5c-8.8,0.6-17.4,2.3-25.8,5.2       c-0.4,0.3-0.8,0.5-1.3,0.6c-9.3-0.1-18.6-1.2-27.8-2.7c-1.4-0.3-2.9-0.6-4.2-1.3C925,400.3,923.8,399.7,923.9,398.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d:
                  "M899.1,391.9c0-0.3-0.1-0.6-0.2-0.9c2.9-2.8,7.2-0.1,10.1-2.8c0.8-0.4,1.6-0.5,2.5-0.6       c5.3-0.1,10.5-0.2,15.7-0.1c1.4,0.1,2.7,0.1,4.1,0.5c2.3,1,4.6,1.3,7.1,1.2c1.6-0.1,3.5,0.1,2.8,2.6c-1.2,1.5-3,1.4-4.7,1.5       c-3.8-0.7-7.6-1.1-11.5-0.9C916.3,393,907.6,393.8,899.1,391.9L899.1,391.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C66C77"),
                d:
                  "M997.2,396.2c-9.1,8.5-20.3,12.4-32.3,14.7c-0.6-0.7-2.2,0.1-2.1-1.5c0.1-0.1,0.2-0.4,0.3-0.4       c11.4-3.3,22.2-8,32.4-14.2c0.4-0.2,1-0.1,1.5,0.1C997.4,395.2,997.5,395.7,997.2,396.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A2414D"),
                d:
                  "M909,389.1c-2.7,4.1-6.8,0.8-10.1,2c-2.3,0-4.7,0.2-6.8-1.1c-0.7-1-1.5-2-2.2-3       c0.2-2.1,1.5-1.1,2.3-0.7c1.8,0.8,3.8,1,5.6,1.6c2.6,0.8,2.1-1.2,2.7-2.3c0.4-0.2,0.9-0.2,1.4-0.2       C904.5,386.2,906.5,388.1,909,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C0636A"),
                d:
                  "M962.2,411.2c-8.5,1.7-16.9,1.8-25.2-1.2c-0.2-1.2,0.7-1.5,1.5-1.8c7,0.7,14,0,20.9,0.9       C960.7,409.4,961.7,410,962.2,411.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1062,396c3.6-2.2,3.6-2.2,0.6-3.9c2.2-2.2,4.7-2.6,7.4-1.8c1.2,2.6-3.8,3.9-1.1,6.7       C1066.7,396.6,1064.1,397.9,1062,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB545D"),
                d:
                  "M938.2,408.9c-0.4,0.4-0.8,0.7-1.1,1.1c-5.6-1.3-9.9-4.3-12.9-9.3c-0.5-0.8-1.5-1.6-0.2-2.5       c0.7,0.6,1.4,1.2,2.1,1.8c3.4,2.1,6.4,4.8,10.1,6.4C937.1,406.8,938.2,407.4,938.2,408.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671419"),
                d:
                  "M1002,384c0,0.7,0,1.3,0,2c-1.8,1.4,0.7,3.6-0.9,5c-0.7,0-1.2-0.3-1.7-0.6c-0.9-0.6-1.8-1.2-2.1-2.3       c-0.1-0.4-0.2-0.9-0.2-1.3c0-0.7,0.2-1.4,0.5-2C998.7,382.5,1000.2,382,1002,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M984,421c-5.1,2.6-10.6,1.9-16,2C973.2,421.5,978.6,421.5,984,421z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B424F"),
                d:
                  "M1000,390c0.4,0.3,0.7,0.7,1.1,1c-0.7,2.2-1.6,4.2-3.9,5.2c-0.1-0.4-0.1-0.8-0.2-1.2       c0-0.6-0.5-1.2-0.4-1.8C997.2,391.5,997.5,389.5,1000,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M891,375c1.1,0.1,2.1,0.2,3.6,0.3c-2.3,1.8-4.5,2.2-6.7,2.7C888,376,889.7,375.7,891,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B2231"),
                d:
                  "M886.9,389c-0.1-0.8-0.2-1.6-0.3-2.7c2.4,0.9,2.6,3.5,4.4,4.6C888.4,393,888.2,389.9,886.9,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M991,420c-2.1,1.9-4.7,0.6-7,1C986.1,419.1,988.7,420.4,991,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D47885"),
                d:
                  "M962.2,411.2c-0.7-0.4-1.5-0.8-2.2-1.1c0.9-0.9,1.9-0.9,2.9-0.1c0.7,0.3,1.4,0.6,2.1,0.9       C964,410.9,963.1,411.1,962.2,411.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M996,419c-1.4,1.7-3.3,0.8-5,1C992.4,418.3,994.3,419.2,996,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1149,360c-0.1,1.4-1,2.2-2.4,1.9c-3.2-0.6-6.2,2.2-9.6,0.2c-2.6-1.6-5,1.7-7.9,1.5       c-1.6-0.1-3.1,0-4.9-1.1c3.4,2.8,3.2,5.3-0.1,7.4c-1.1,0.7-1.6,2.8-3.2-0.3c-1.1-2.1-5.3-1.5-7.9,1.7c-0.2-3.3-1-4.7-4.3-3.9       c-8,2-16.5,0.6-24.4,3.5c-1.7,0.6-3.4,0.7-2.7,3.1c0.3,1.2,0.8,2.6-0.9,2.7c-1.9,0.2-2.8-1.1-2.4-2.9c0.3-1.6,0.1-2.6-1.6-3.1       c-1.3,1.3,0,3.2-1.1,4.5c-2.2,1.4-0.9-4.3-4.2-1.8c-2.1,1.6-3.4,2.9-2.4,5.6c-0.2,0.2-0.4,0.4-0.6,0.6c-1.7,1-3.5,0.7-5.3,0.4       c-9.4-1.8-18.9-2.9-28.3-5.1c-5.4-1.8-10.8-3.7-16.6-3.2c-0.7,0.1-1.4,0.1-2.1,0c-3.1-0.9-4.4-2.3-1.5-5       c1.6-1.5,0.4-4.8,3.5-5.4c5.7,0,11.4,0,17.1-0.1c3.5-0.1,6.7-0.9,10-1.1c2.5-0.1,11.5,0.6,14.3,1.8c2,0.9,4.6,1,5.7,0       c4.9-4.5,9.7-0.7,14.5-0.1c0.7,0.1,1.1,0.4,2,0.1c4.5-1.2,8.9-3.5,13.7-1.6c0.9,0.4,1.5-0.5,2.2-0.9c3-1.6,6.4-1.5,9.2-0.3       c3.7,1.6,6.4-0.3,9.3-1.3c0.7-0.3,1.4-0.8,2.3-0.9c9.4,0.1,18.7,2.4,28.1,1.7C1147.4,358.7,1148.3,359.3,1149,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6D141D"),
                d:
                  "M1149,360c-5.4,0.2-10.9,0.1-16.3,0.3c-5.2,0.1-10.2-3.4-15.7-2.3c-0.6-0.7-0.6-1.3,0-2       c2.7,0,5.3,0,8,0c3-2.3,6.4-1.3,9.6-1.1c4.7,1.6,9.9,0.6,14.3,3.1c2.6,2.4,6.4-0.5,9,2C1155,360,1152,360,1149,360z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5D1120"),
                d:
                  "M1148.6,377.3c1.2,0.1,0.7,1.2,0.9,1.8c0.4,1.1-0.1,1.5-1.1,1.1c-0.5-0.2-1.9,0.4-1.3-1.1       C1147.4,378.3,1147.8,377.6,1148.6,377.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1085,373.7c-0.3,0.3-0.6,0.6-0.9,0.9c-0.2-0.3-0.5-0.7-0.6-1c0-0.2,0.3-0.6,0.6-0.7       C1084.8,372.5,1084.8,373.1,1085,373.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691322"),
                d:
                  "M1069,379c1.7,0.3,3.6-0.7,5,1c0,0,0,0,0,0C1072.1,381.1,1070.1,382,1069,379L1069,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1286.4,400.2c1,0.8,2,1.6,3.1,2.4c-0.9,1.5-2.2,2-3.8,2.1C1284.6,403.1,1288.3,401.9,1286.4,400.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1269,400c-2.1-3-0.2-3.4,2.4-3.9C1271.8,398.5,1268.4,397.9,1269,400C1269,400,1269,400,1269,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1371.6,394c-0.3,0.2-0.5,0.6-0.9,0.7c-0.7,0.2-1.3-0.1-1.5-0.8c-0.1-0.2-0.8-0.9,0.2-0.9       C1370.2,393,1371.1,392.9,1371.6,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("821725"),
                d:
                  "M1365.3,396c-0.3,0.2-0.7,0.6-1,0.7c-0.8,0.1-1-0.5-1.1-1.2c-0.2-1,0.6-0.4,0.9-0.4       C1364.5,395,1365.3,394.9,1365.3,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1258.3,389.5c0.8,0.8,1,1.1,1.3,1.4c-0.3,0.3-0.7,0.8-0.9,0.7c-0.4-0.1-0.8-0.5-0.9-0.9       C1257.7,390.5,1258,390,1258.3,389.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1423"),
                d:
                  "M1018,362c-1.6,2.2-0.9,5.5-4.1,7.1c-0.9,0.4,1.9,0.6,2.1,1.9c-1,1.1-2.4,1.4-3.7,1.1       c-7.7-1.9-15.6-2.3-23.3-4.1c-1.8-5.2-3.4,0.3-5.1,0.1c-6.6-1.7-13.3-3.4-19.9-5.1c-1.5-1.2-3.5,0.1-5.1-1l-0.5,0       c0,0-0.5,0-0.5,0c1.2-2.6,3.6-2.3,5.6-1.8c3.8,1,7.4,3.9,11.1-0.1c3.2,2.9,6.3-0.5,9.6-0.2c6.5,0.5,13.1,0.2,19.7,0.2       c2.9,1,6,0.6,9,0.8C1014.7,360.9,1016.6,360.5,1018,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F162A"),
                d:
                  "M989,368c9.2-0.8,18,2.2,27,3c0.7,0,1.3,0,2,0c5.4,0.4,10.8,1.1,16,3c11.7,1.1,23.2,4.5,35,5       c1.4,1.7,3.3,0.7,5,1c0.6,0.5,1.3,0.9,2.7,1.9c-2.2,0-3.7,0.2-5.2-0.1c-1.6-0.3-2.3-0.1-2.6,1.8c-0.6,3.8-3.7,4-7.5,4.4       c0.9-1.1,1.5-1.6,1.9-2.3c0.8-1.3,3.7-0.1,3.2-2.3c-0.5-1.9-2.7-2.5-4.5-2.5c-5.8,0.1-11.6-0.9-17.3-1.8       c-0.9-0.1-1.7-0.9-2.6-1.3c-4.1-1.6-8.3-3.1-12.7-1.2c-1.1,0.5-1.5-0.5-2.1-0.5c-2.4,0.4-4.9-2.4-7.5,0.8       c-0.6,0.8-4.8,2.5-7.3-1.1c-1.3-1.8-5.2-1.8-7.8-2.9C999.6,371,993.7,371.2,989,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("74161F"),
                d:
                  "M1002,384c-1.5-0.4-2.9-0.7-3.8,1c-0.2,0-0.4,0-0.6-0.1c-0.8-0.2-1.6-0.6-2.5-0.7       c-1.4-0.2-2.7-0.5-3.9-1.3c-1.6-1-3.3-0.6-5-0.7c-4.6-1-9.3-0.8-14-1c-0.9,0-1.8-0.2-2.6-0.4c-4.2-1.1-8.4-0.2-12.6-0.6       c-1.9-0.2-4.5,0.8-4.9-2.5c6-2.7,12.2-0.9,18.3-1.2c2.8,0.1,5.6,0.3,8.4,0.1c0.9,0,2.2,0,1.5-1.6c-1.6-1.9-3.4-3.8-4.2-6.3       c7.9,1.1,14.3,5.4,21,9.2c0.8,1,0.7,2.8,3,2.5C1002.8,380.2,1002.7,382,1002,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M1107.6,391.2c-1.9-1.3-5.1-0.9-6.1-3.9C1105.2,386.6,1106.5,388.8,1107.6,391.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7F162A"),
                d:
                  "M1042.9,378c-3.9,2.3-7.7-0.8-10,3C1034.6,378,1034.6,378,1042.9,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M889,459c-0.4-0.8-1.2-1-2-1c-0.2-0.8-0.6-2.1-0.5-2.2c1.6-0.9,2,1,3,1.6       C890.9,458.2,890.3,458.9,889,459z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M930.7,434.7c0.5,2.1-1.1,2.5-2.2,3.2c-0.1,0.1-1-0.6-1-0.8C928,435.7,929.2,435,930.7,434.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1625"),
                d:
                  "M1283,378c0.1,1.9-0.5,3.9,1.4,5.5c0.7,0.6,2.2,1.2,1.7,2.6c-0.1,0.3-1.1,0.6-1.2,0.6       c-0.8-1.1-2.9-0.7-3-2.7c-0.1-2.2-0.8-4-3-4.9C1280.3,378.7,1281.7,378.3,1283,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751524"),
                d:
                  "M968.6,425.4c1.5-0.4,2.7-0.7,4.2,0.6C971.2,426.4,970,426.1,968.6,425.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A81E2A"),
                d:
                  "M1504.5,365.5c-0.2,0.3-0.5,0.8-0.8,0.9c-0.7,0.2-1.2-0.3-1.3-1c0-0.3,0.3-0.9,0.6-1       C1503.7,364.2,1504.2,364.7,1504.5,365.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF626D"),
                d:
                  "M1570,353c-1.4,0.1-2.6,0.6-3.6,1.6c-0.6,0.7-0.5,2.8-2.2,1.1c-1.4-1.3-0.9-2.1,0.5-3.1       c0.9-0.6,1.5-1.7,2.3-2.6C1569,350,1569.3,351.7,1570,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB6F76"),
                d:
                  "M1537,365c-1.5-0.3-3-0.6-4.6-0.9C1534.3,362.4,1534.3,362.4,1537,365z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434E"),
                d:
                  "M1780,362c-1.4-0.1-2.7,0.4-4,1c-2-1.7-4-2.9-6.7-1c-2.2,1.6-4.6,0.2-6.5-1c-3.4-1.9-6.6-3.4-9.1,1.2       c-0.5,1-2,1.6-2.4,0.7c-1.7-3.9-3.9-0.9-5.9-0.7c-0.6-0.8-1.5-1.1-2.3-1.9c0.6,0.9,1.7,0.9,2.2,1.8c-1.2,4-4.2,2.8-6.9,2.3       c-6.1-1.2-11.8-0.9-16,4.5c-1.7,2.2-3.6,3.3-6.4,2.6c-1.3-0.3-2.6,0.1-3.9,0.4c-1,0.4-2.8-1.7-3,1c-1.5-5-5,1.2-6.9-1.3       c-2.7,4.1-6.4,0.7-8-0.3c-6.3-3.6-12.6-1.5-18.8-1c-3.2,0.2-6.1-2.7-9.3-0.4c-3.2-1.1-6-3.2-9.7-3.2c-2,0-3-1.9-1.7-3.6       c3.1-4,0.1-4.6-3.2-5.3c1.9-1.6,4.4,0.1,5.6-1.8c4.6-3.5,10.2-2.7,15.3-3.3c9.7-1,19.5-1.7,29.3-2.3c2.2-0.1,4.3-0.1,6.4,0.6       c2.7,2.4,5.4,3.3,9,1.7c2.2-1,5-2.3,6,1.9c0.3,1.1,0.5-0.3,0.9-0.5c3.1-1.4,6-2.7,9.9-1.7c3.6,1,8.2,2,11.1-0.3       c4.5-3.5,7.9-0.7,11.7,0.4c0.8,0.1,0.2,1.7,1.5,1.3c0.5-0.2,1.1-0.5,1.7-0.1c-0.5-0.5-1.2-0.1-1.7-0.3c-0.8-0.2-1-0.7-0.9-1.4       c1.1-1.2,2.7-1.5,4.1-1.3c4,0.7,8.1,0.8,11.9,2.2c0.9,1.8,0.9,3.9,4.4,3.6C1779.8,356.3,1780.2,359.6,1780,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24651"),
                d:
                  "M1712,372c0.1-1.8,1.6-2.5,2.8-1.9c3.9,1.9,5.6-0.8,7.8-3.1c2-2,3.1-7,7.5-2.8c0.1,0.1,0.7-0.4,1-0.8       c2.2-2.6,4.6-1.7,7-0.4c2.5,1.4,5,1.8,6.9-1.1c0.2,0,0.4,0,0.5-0.1c3.6-4.4,3.5-4.4,6.5,0.5c2.7-5.5,6-6,10.9-2.6       c1.2,0.8,3.6,3.7,6.6,0.7c3-3,6.1-1.5,6.5,2.5c0,0.3,0,0.7,0,1c-1,3.2-3.1,4.4-6.5,4.1c-4.1-0.4-8.3-0.1-12.4-0.1       c-1.9,0-3.6-0.1-4.6,2.1c-0.8,1.8-1.5,2.8-3,0.1c-0.4-0.8-3.4-0.1-5.3-0.1c-0.2,1.6,1.8,0.4,1.8,2.4c-10.8-2.1-21.3,1.7-32,1.6       C1713.4,373.3,1712.6,372.8,1712,372L1712,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54953"),
                d:
                  "M1712,372c1.3,0,2,0.7,2,2C1712.7,373.9,1710.9,374.5,1712,372z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1637,358c-3.6,0.8-7.3,1.3-11,1c0.5-1.1,0.4-3.1-0.6-2.5c-3.8,2.2-6.9-1.6-10.4-0.5v0       c-2-2.8-5.3-3-8.1-4c-2.3-0.8-4.9-1.1-2.3-4.4c0.5-0.7,0.6-1.9-0.2-2.2c-2.5-1-1.6-1.6,0-2.7c1.5-1.1,3.4-2.4,1.7-4.7       c0.2-2.4,2.1-2.1,3.7-2.3c2.1-0.2,4.2-0.2,6.3-0.9c3.1-0.4,6.1-0.4,9.1,0.1c3.1,1.1,6.1-0.8,9.1-0.2c1.7,0.3,4.3-0.3,3.6,3       c3.5,4.7,1.7,10.3,2.7,15.4c-0.2,0.6-0.6,1.2-1.2,1.5C1638,355.4,1635.5,355.3,1637,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84955"),
                d:
                  "M1616,336c-3,2.2-7-0.3-10,2c-7.7-0.7-15.3,1.2-23,1c-0.8,0-1.6-0.2-1.8-1.2c0.5-1.5,0.3-2.8,0.4-4.6       c-0.3,1.9,0.2,3.4-0.4,4.6c-3.1-1.8-3.9-6.4-8.4-6.6c-0.1,0-0.4-0.8-0.3-1.1c1.5-3.6-0.5-7.5,0.5-11.1c4.4-0.9,8.7-0.5,13.1,0       c0.5,0.1,1.1,0.3,1.3,0.6c2.2,3.8,5.4,6.2,9.8,7.1c1.3,0.2,2.6,1.2,2.6,2.7c0,3.6,3.1,4.2,5.1,3.9c2.6-0.4,5.1,1.5,7.9-0.3       C1614,332.3,1616.3,333.4,1616,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1612,357.8c-0.4,0.3-0.8,0.8-1.1,0.7c-0.3-0.1-0.7-0.6-0.7-0.9c-0.1-0.7,0.4-1.2,1.1-1       C1611.6,356.6,1611.7,357.2,1612,357.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1615,356c-0.1,0.9,0.3,2-0.9,2.5c-0.2,0.1-0.8-0.4-0.9-0.8C1613,356.4,1614,356.1,1615,356L1615,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D54B57"),
                d:
                  "M1709,352c-13.7-0.5-27.2,1.5-40.7,2.8c-3.8,0.4-7.5,0.8-11.3,1.2c-4.1-0.6-7.9,1.2-12,1       c-0.2-0.1-0.4-0.3-0.6-0.4c-0.7-1-1.6-1.9-1.8-3.1c0.1-0.5,0.3-1,0.6-1.5c2.4-2.9,5.6-2.6,8.8-2c3.2,0.5,6.2,0.5,9.3-0.7       c2.9-1.1,5.9-0.7,8.9-0.6c7.5,0.2,14.9-0.3,22.4-0.4c1.9,0.4,3.8,0.5,5.7,0.4c2.7,0,5.5,0.1,8.2-0.2c2.1-0.9,4.3-1.8,6.6-1.7       c1.6,0.1,3.7,0,4.1,2c0.4,2.3-1.8,2.3-3.4,2.6c-0.8,0.2-1.6,0.2-2.4,0.3c-0.5,0.2-1,0.4-1.6,0.4       C1709.5,352,1709.3,352,1709,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D54B57"),
                d:
                  "M1637,358c-3-4.1,1.8-3.4,3-5c1.3-0.7,2.2,0.1,3,1v0c0.6,1,1,2.2,2,3c0,0,0,0,0,0       C1642.5,359,1639.7,357.6,1637,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C54956"),
                d:
                  "M1592,314c-16,0-32.1,0-48.1-0.1c0.8-0.8,1.8-0.8,2.8-0.8c24.8-0.2,49.5-0.6,74.3,0       c0.9,2.8-1.4,2.8-3,3c-2.3,0.3-4.6,0-6.8,0.4c-0.5,0.2-1,0.3-1.6,0.4c-1.6,0.3-3.2,0.3-4.8,0.3c-1.3,0.1-2.7,0-4,0       C1597.4,317.5,1594.6,316.1,1592,314z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1610,316c2.1-1.9,4.7-0.6,7.1-1c1.5-0.2,3.5,0.6,3.9-1.8c0.7,0,1.4,0,2.1,0c3.8,1.8,7.9,0.4,11.9,0.9       c-0.2,2.5-2.3,2-3.8,2.2c-2.8,0.4-5.6,0.6-8.4,1C1618.4,317.2,1614,318.4,1610,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33C46"),
                d:
                  "M1623,316c3.9-1.2,8.1-0.2,11.9-1.9c5-0.1,9.8,0.8,14.6,1.9c1.1,0.3,2.4,1.6,3.5,0c0.3,0,0.6,0,1,0.1       c1.1,0.4-0.6,2.1,1,2.2c4.3,0.2,8.4,2.1,12.7,2.2c3.7,0.1,7,1.1,10.5,2.3c4.1,1.4,8.7,1.4,13.1,2.3c4,0.8,4.4,2.1,1.9,5.6       c-2.8,1.4-5.5,2.1-8.6,0.8c-1.1-0.5-2.3-0.1-3.4-0.1c-4.1,0.3-8.2,1-12.2-0.8c-7.7-3.4-16.8-2.9-24-8.1c-1.2-0.9-2.8-1.2-4.3-1       c-5.3,0.7-10.4-1.8-15.7-1.1C1621.7,320.7,1621.7,318.4,1623,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43740"),
                d:
                  "M1693,330c1.9-2.1,1.3-4-1.4-3.8c-4.1,0.3-7.7-2.1-12-1.4c-3.3,0.6-5.4-3.9-9.4-3.2       c-5.2,0.9-10-1.9-15-2.3c-3.7-0.3-1.5-2-1.3-3.3c5,0.1,9.9,1.6,15,1c19.9,5.5,40.3,9,60.1,14.9c-3.9,2.7-8.4,1.3-12.5,1.2       c-6.6-0.2-13.1-1.6-19.8-1.3C1695.3,331.9,1693.9,331.5,1693,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8D1925"),
                d:
                  "M1877,340c-0.8-1.6-3.1-0.4-4-2c7.9,1.1,15.8,2,23.6,3.4c2.9,0.5,2.7-1.6,3.9-2.8       c-5.1-1.1-10.1-1.7-14.4-4.6c5.1-0.8,9.8,1.3,14.5,2.5c8,1.9,15.8,4.4,23.6,6.8c0.6,0.2,4.2-0.3,1.6,2.6       c-0.3,0.3,1,0.9,1.9,0.8c2.1-0.3,4.2-0.4,6.3-0.6c1,0,2,0,3,0c-2.7,2.7-7.6,0.3-9.9,4.1c-2-3.5-4.1,0.1-6.1-0.1       c-6.7-0.2-12.8-3.2-19.4-4.2C1893.3,344.5,1885.2,342,1877,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B04E5A"),
                d:
                  "M1948,361c0.3,0.9,0.9,1.9-1,1.5c-4.3-0.9-8.6-1.7-13-2.6c-2.4-1.4-5.1-2-8.3-2.1       c1.7-1.6,3.5-1.9,5.3-1.9c4,1,8,2.1,11.9,3.1c1.4,0.5,2.9,0.9,4.1,1.8C1947.4,361,1947.7,361,1948,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("741520"),
                d:
                  "M1826,330c1,0.7,2,1.3,3,2c-2.2,0.2-4.2-0.3-6.1-1.4C1823.8,329.5,1825,330.2,1826,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91343D"),
                d:
                  "M1947,360.9c-1.6,0-3-0.7-4.1-1.8c1.5-0.3,2.8,0.2,4.1,0.9C1947,360.3,1947,360.6,1947,360.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1831,340c-3.1-1.6-7.3,0.2-10-3c3.6-1.4,6.8,0.7,10.1,1.3C1831.2,338.3,1831.1,339.4,1831,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1C2D"),
                d:
                  "M1837,341c-2.1,0.4-4.2,0.3-6-1C1832.8,341.3,1835.6,337.3,1837,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M782,554c-1.5,0.3-3.1-5.1-4.8,0.2c-0.4,1.2-2.4-0.2-3.9-1c2.3-1.5,3.9-3.5,6.7-3.2       C780.6,551.4,782.2,552.3,782,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M772.1,560.4c-0.5-5.1,1.4-6.1,5.9-3.5C775.9,558.1,774,559.2,772.1,560.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M764.8,556.3c0.3-2.8-0.1-5.8,1.8-8.6C767.4,551,767.1,553.8,764.8,556.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M749,562c-2.5-1.9-2.2-4.4-2-5.7C746,557.8,752.8,558.6,749,562L749,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5F111F"),
                d:
                  "M777.2,547.5c2.1-0.7,3.1-0.1,3.4,1.4c0.1,0.3-0.4,0.7-0.7,1.1C779.2,549.3,778.4,548.6,777.2,547.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B2533"),
                d:
                  "M654,520c-0.3-0.3-0.7-0.7-1-1c-2.4-0.5-4.4-2.3-3.9-4.4c0.7-2.8,2.8-5.3,5.8-6c2-0.4,3.4,0.1,4.7-2.6       c1.1-2.4,5.1-1.2,7.9-0.9c1.1,0.1,2.6,2.1,2.7-1c0-0.9,1.7-1.3,2.5-0.9c2.7,1.4,4.8,0.1,7.1-1c2.5-1.1,5.1-2.6,7.7,0.1       c0.9,0.9,2.2,0.4,3.3-0.1c6.6-3.1,14-2,20.6-3.8c-0.5-0.2-1.5-0.6-1.4-1.7c0.1-1.5,1.6-1.4,2.3-1.1c4.8,2.3,10,0.3,14.9,1.8       c3,1,6.2,0.7,8.9-1.4c3.4-0.6,6.7,0,10.1-0.2c1.5-0.1,3,0.3,3.4,2.2c-0.1,2.5-2.4,2.9-3.9,4.1c-0.4,0.3-0.9,0.4-1.3,0.5       c-0.3,0-0.6-0.1-0.9-0.2c-2.5,4.8-6.9,0.1-10,2.1c-0.7,0-1.4-0.1-2.1-0.3c-3-1.4-5.9,0-8.8,0.1c-1.1,0-2.4,1-3.4,0.4       c-3-1.7-0.4,1.4-1.3,1.4c-0.1,0.5-0.4,0.9-0.7,1.2c-2.2,0.6-4.3-0.1-6.3-0.7c-3.1-0.9-6.5-3.4-8.6,1.8       c-0.6,1.6-2.6,0.8-4.1,0.5c-6-1.2-7.2-0.8-10.3,4.6c-1.9,3.3-3.8,5.4-7.8,2.7c-1.6-1.1-3.8-1.2-5.8,0.2c1.4,0.4,3.4-0.8,4,0.9       c1.5,4.5,5.4,3.9,8.7,4.3c2,0.3,3.8,0.5,5.5,1.9c2.6,2.1,5.9,2.1,9,2.3c5.4,0.3,10.9,0.6,16.3-0.1c0.4,0.2,0.8,0.4,1.1,0.8       c3.5,2.1,7.7,2.3,11.5,3.5c1.5,0.7,2.9,1.5,0.7,3c-18.7-1.9-37.4-3.2-56-6c-1-1.5-1.7-2.7-4.1-2.6c-4.4,0.1-9,0.5-12.8-2.4       C657.5,519.6,654.9,521.5,654,520z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A2938"),
                d:
                  "M731,533c0.5-1.1,0.7-2-1-2c0.8-3.3,3.5-2.2,5.5-2.1c2.4,0.2,4.8,0.8,7.2,0.7c2,0.3,4.3-1.3,5.9,1.1       c0.6-0.8,1.3-1.5,2.5-1.5c10.5,1.6,21.1,1.8,31.7,1.6c1.6,0,3.4-0.2,4.4,1.6c-3.1,3.2-7.3,1.5-11,2.2c-1,0.2-2.2-0.5-3.3,0.4       c-1.1,0-2.3-0.1-3,1c-10.8,0.1-21.6-1-32.2-2.9C735.5,532.7,733.2,534.1,731,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d:
                  "M650.9,526.2c2.4,0.4,3.8,0.7,4.5,2.3C653.2,529.7,652.2,528.4,650.9,526.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7E1626"),
                d: "M649,524c2,0.3,4.2-0.8,6,1C653,524.7,650.8,525.8,649,524z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721424"),
                d:
                  "M726.8,538.6c2.2-0.7,3.2-1,4.5-1.4C730.7,539.4,729.3,539,726.8,538.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96212F"),
                d:
                  "M736,496c-0.3,1.2,2.2,2.8-2.1,3.1c-5.2,0.4-10.3-3.7-15.3-0.2c-1.5,1.1-1.3-0.8-2-1.2       c-1.8-1-3.6-2.2-5.9-1.5c0.8,2.7,3.5,0.8,4.8,2.8c-4.2,0.6-8.2,1.7-12.2,1.8c-4.7,0-9,1-13.1,3c-0.7,0.3-1.8,1-2.3,0.3       c-2.3-3.6-5.2-1-7.8-1c-0.9,0-1.7,0-1.8,1.1c-0.3,3.2-1.6,2-3.2,0.9c-2.7-1.8-4.6-1.9-4.2,2.3c0.1,0.6-0.3,1.2-0.7,3       c-2.1-6.4-6.6-4-10.2-4.5c-0.4,1.5,2.1,1.7,1.1,3.1c-0.9,1.2-3,1.7-3.5,1.3c-2.6-2.2-5.7,0.3-5.9,1.1c-0.9,2.4-2.1,5.6,1.3,7.6       c-1.2,1-2.4,3-4.1,1.3c-3.2-3.1-7-2.8-10.9-2.2c0.1-1.7,1.8-1.6,2.5-3.2c-4.1,1-5.6-1.3-6.3-4.4c-0.3-1.4-1.2-3.5,2.5-2.8       c2.3,0.4,5.4-1.5,8.3-1.8c0-0.7,0-1.3,0-2c2-0.3,4-0.7,6-1c3.3-0.6,6.3-2.9,9.9-1c1.4,0.8,0.5-0.8,0.9-1.2       c1.3-1.1,2.2-1.2,3.1,0.3c1.7,0,2.8-1,3.5-2.4c1.2-2.2,1.9-3,5.3-2.4c3.4,0.5,7.2-0.5,10.8,1c0.2,0.1,0.7,0,0.8-0.2       c2.2-2.5,3.6-3.2,6.5-2.5c3.3,0.7,6.6,1,9.7-0.3c4.5-1.7,9,1.4,13.3,0.3c4.7-1.2,9.7,1.8,14-1.5C731.3,494,733.7,495,736,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96212F"),
                d:
                  "M654,520c1.3-0.2,2.5-0.5,3.8-0.7c0.9-0.1,1.6,0.5,1.8,1.3c0.2,1.1-0.8,1.2-1.6,1.4       C656,522.7,654.2,522.9,654,520z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B25560"),
                d:
                  "M1913,352c0.4,0.5,0.7,1,1.1,1.6c-1.6,1-2.9,0.4-4.7-0.4C1910.5,351.5,1911.9,352.2,1913,352       C1913,351.9,1913,352,1913,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3E49"),
                d:
                  "M1693,330c4.6,1.6,9.3,0,14,0.8c7.3,1.1,14.7,0.8,22.1,1.1c5.3,1,10.6,2.1,15.8,3.1       c7.2,2.9,14.9,3.8,22.3,5.7c5,1.3,9.8,2.9,14.7,4.2c0.3,1,0.7,1.8-0.9,2.2c-2.1,0.4-4.1,1.6-6.2,1.6c-3.9,0.1-3.1,2-2,4.2       c-3.5,0.6-6.9,0.6-10.4-0.8c-1.5-0.6-3.9-0.9-5.6,0.8c-3.6,1.2-6.4-2.8-10-1.9c0.1,1.3,2.3,0.9,1.7,2.9c-4.5,0-9,0-13.6,0       c-2.9,0-5.7-1.5-8.7-0.1c-1.1,0.5-2.4,0.3-1.9,2.1c0.4,1.3-0.2,1.9-1.5,1.9c-1.2,0-1.8-0.6-1.9-1.8c-0.5-3.6-1.4-4-4.5-2       c-3.1,2-6.3,1.1-7.6-2.2c0,0,0,0,0,0c2.4-1.7,5.4-0.4,8-1.5c1.2-0.7,2.6-0.8,4-0.8c2.3,0,4.7,0.2,6.9-0.5       c12.9-0.9,25.8-1.8,38.7-2.6c-1.8,1.1-2.3-3.8-4.8-0.9c-7.5-3.8-15.7-5.7-23.7-6.4c-7.3-0.6-13.6-4.1-20.7-5       c-8.5-1.1-16.9-1-25.4-0.9c-15.8,0.2-31.5,1.5-47.3,2.1c-1.7,0.1-3.3,0.1-5-0.3c-2-0.5-2.6-1.8-2.2-3.7       c0.4-1.9,1.6-2.2,3.3-1.8c1.5,0.3,1.9-0.9,2.2-2.1c0.2-0.9-0.2-1.6-1-2c-3.6-2.2-7.7-2.1-11.7-1.9c-0.8,0.1-0.5,2.1-1.8,2.5       c-0.5,0-0.9-0.2-1.2-0.6c-3.6-2.6-6.8-5.3-11.9-5.2c-4.1,0.1-8.3-1.2-12.6-0.8c-1.3,0.1-2.5-0.7-3.1-2.1       c-0.1-0.9,0.7-1.2,1.2-1.6c1.3,0,2.7,0,4,0c1.7,0.8,3.3,0.8,5,0c0,0,0,0,0,0c4.3,0,8.7,0,13,0c0.6,1.1-1.1,3.8,1.6,3.1       c5.5-1.5,10.5,1.9,15.9,1c2.7-0.5,5,1.5,7.3,2.1c4,1,6.8,5.2,11.5,3.9c4.3-1.1,7.1,3.5,11.5,3.6c1.3,0,3.3,1,4.9,0.6       C1681.5,329,1687.3,331.7,1693,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B65761"),
                d:
                  "M517.9,379.1c0.8,0.9,1.5,1.8,2.3,2.7c-0.4,0.4-0.9,0.9-1.3,1.3c-2.4-1.4-3.6-3.8-5.1-6.1       c-0.9-1.1-2.2-2.1-0.2-3.4c1.3,0,2.1,0.9,2.8,1.8c0.6,0.9,1.2,1.9,1.5,2.9C517.9,378.6,517.9,378.9,517.9,379.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("861D29"),
                d:
                  "M513.9,374c-1.6,0.9-0.2,2-0.2,3.1c-1.6,0.3-3.2,0.6-4.7,0.9c-2.5,1.3-5.5-0.4-8,1c-0.7,0-1.3,0-2,0       c-1.3,0-2.7,0-4-0.1c0.6-2.4,1.9-2.2,3.6-1c0-0.1,0-0.1,0-0.5c-3.6-0.7-7.3-1.3-10.5-3.4c-2.9,0.7-2.8-1.4-3-3.2       c0.7-0.6,1.5-0.6,2.3-0.5c6.1,1.4,12.1,3.5,18.6,1.8c1.3-0.3,2.6-0.4,4-0.4c1.4,0,2.7,0.1,3.9,0.9       C514.2,373,514.3,373.5,513.9,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C1E30"),
                d:
                  "M488,374.1c4.2-0.9,7.2,2.5,11.8,2.7c-1.8,1.8-3.9,0.5-4.8,2.2c-0.3,0-0.7,0-1,0c-4.4-0.4-8.7,0.6-13,1       c0.1-1.4,1-2.2,2.2-1.9C486.7,378.9,487.4,376.5,488,374.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d: "M501,379c2.5-2,5.3-0.6,8-1C506.5,380,503.7,378.6,501,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771720"),
                d:
                  "M500.9,357.8c0.2-0.7,0-1.7,1.1-1.9c0.2,1.3-0.3,3.1,2,3c0.5,0.7,0.2,1.5,0.4,2.2       c1.4,0.7,3.6,0.8,3.6,2.8c0,2.7-3.2,1.6-4.5,2.9c-0.5,0.5-1.1,1-1.6,1.5c-5.1,1.7-10.1,1.6-15-0.6c2.5-3.8,5.9-0.8,9.3-1.7       c-3.3,0.2-6.2-1-9,0.5c-1.3,0.4-0.6,2.4-2.1,2.7c-3.9-2-6.2-4.8-5.2-9.5c0.1-2.6,1.8-3.2,4.1-3.1c0,0,0,0,0,0       c3.9,0.3,6.9,3.8,11.2,3.1C497.4,359.8,499.4,359.5,500.9,357.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C64A59"),
                d:
                  "M480,360.1c0.3,4.1,2.1,7.2,6,9c0.9,0,1.8,0.2,2.3,1.1c-0.1,0.8-0.3,1.3-1.2,1c-0.7-0.1-1.3-0.2-2-0.3       C481.7,368,477,365.8,480,360.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781522"),
                d:
                  "M668,366c5.1-2.4,10.6-0.5,15.9-1.7c5.5-1.3,11.4-0.9,17.1-1.3c0.3,0,0.7,0,1,0c2.9-1.3,6.1,0.3,9-1       c4.7,0,9.3,0,14,0c12.8-0.1,25.5-0.2,38.3-0.1c2.8,0,5.6,0.9,8.5,0.3c1.2-0.2,3,0.5,3.5,2.1c0.1,0.3-1.4,1.1-2.2,1.6       c-0.3,0.4-0.7,0.6-1.2,0.8c-3.7-1.1-7.3-0.5-10.8,1.1c-5.4,0-10.5,2.8-16,1.1c-5.4-0.7-10.6,1.1-16,1c0.5-2.6-1.2-2.6-3-2.5       c-10.6,0.5-21.2-1-31.9-0.1c-3.1,0.3-6.4,0.7-9.2-1.4C679.3,366,673.7,366,668,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("701424"),
                d:
                  "M685,366c14.4,0,28.7,0,43.1,0c1.5,0,3.8-0.9,4.4,1c0.9,2.9-3,1.2-3.5,2.9c-3.1-0.5-6,0.8-9,1       c-2.1-1.5-4.2-1.8-6.9-1.4c-2.8,0.4-6.3,2.1-8.9-1.5c-0.5-0.7-3.2-0.7-4.3,0c-3.1,1.9-6.4,0.4-9.4,1.1       C687.3,369.9,685.9,368.7,685,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D32"),
                d:
                  "M772,366c0.3,0,0.6,0,1,0c4.3-0.3,8.7-0.7,13-1c-1,3.7,2.1,1.3,3,2c-4.4,2.1-9.4,1.5-13.9,1.7       c-9.7,0.3-19.4,1.2-29.1,1.3c-0.3-0.3-0.7-0.7-1-1c5.8,0.6,11.2-2.2,17-2C765.2,365.1,768.7,366.9,772,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("491016"),
                d:
                  "M972,378c-6.7,0-13.5,0.1-20.2,0.1c-1,0.9-2.2,0.9-3.4,0.7c-3.9-0.8-7.9-0.2-11.8-0.4       c-1.9-0.1-4,0.3-5.4-1.6c-1.3-1.7-4.7,0.6-5.1-2.8c0-0.3,0-0.6,0-0.9c0.6-0.4,1.3-0.8,1.9-1.1c1.3,0,2.8,1.6,3.7-0.7       c0.5-0.6,1.1-0.8,1.8-0.8c4.5,0.3,8.9,0.7,13.2-1.3c2.4-1.1,5.2-0.4,7.3,0.4c4.7,1.7,10.2,0,14.5,3.4       C970.1,374.3,972.9,374.9,972,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841E29"),
                d:
                  "M901,385.9c-0.1,1.6,0.6,3.2-2.5,3.3c-3.3,0.1-5.6-2.2-8.6-2.2c-0.2-2.6-2.4-5.4,0.5-7.8       c5.4,0.1,10.7-1.4,16.1-0.2c1.1,0.3,2.1,0.9,2.9,1.7c0.7,2.7,3.3,5,1.7,8.2c-0.7,0-1.3,0.1-2,0.1c-3,0.5-4.9-1.4-7-3       c0.5-1.2,2.6-0.8,2.7-2.7C902.1,382.3,901.8,384.5,901,385.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M909,381.1c-0.8-0.3-1.6-0.5-2.3-0.8c0.3-1.7-1-1.1-1.7-1.2c-1.4-0.2-2.8,0.2-4-0.9       c-0.3-0.5-0.1-0.8,0.4-1c2.2-0.1,4.5-0.1,6.7-0.2c5.7-0.7,11.3-0.8,17,0.1c0.9,0,1.8,0.1,2.7,0.1c1.1,0.7,2.7-0.2,3.6,1.1       c0,0.6-0.2,1-0.7,1.3c-4.5,1.3-9,0.9-13.5,0.3c-1.8-0.3-3.5-0.6-5.1,0.6C911.1,381,910.1,381.5,909,381.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E88386"),
                d:
                  "M900.8,377.8c2.8,0,5.6,0,8.4,0c0,2.3-1.5,2-2.4,2.4c-5.4-0.6-11,1-16.3-1c1.5-0.4,3.1-0.8,4.6-1.3       C896.9,377.2,898.8,377.4,900.8,377.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M931,378c-1.1-0.3-2.2-0.6-3.3-0.8c1.1-0.1,2.3-0.2,3.4-0.4c5.9,1,12.1-1.1,17.9,1.2       C943,380.2,937,380.2,931,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M925,377c-5.7,0-11.3,0-17-0.1C913.7,375.5,919.3,375.3,925,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("732225"),
                d:
                  "M900.8,377.8c-1.9,0-3.8,0.1-5.8,0.1c1.9-1.7,4.2-0.8,6.3-0.8C901.1,377.4,900.9,377.6,900.8,377.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2330"),
                d:
                  "M878,485c-0.3,1.7-0.7,3.3-1,5c-0.3,0.3-0.7,0.4-1.1,0.5c-1.3,0.7-2.6,1.6-4.1,0.7       c-0.4-0.3-0.9-0.7-1.4-0.6c-7.1,1.2-14.3-3.3-21.3,0.7c-1.5,0.9-3.8,1.4-5.8,1c-7.2-1.7-14.4,1.1-21.6,0.1       c-3.3-0.5-6.7,0.8-8.8,3.7c-1.3,1.7-2.5,2-4.6,1.6c-3.7-0.8-7.6-0.4-11.3-0.1c-0.2,0-0.3,0.1-0.5,0.1c-6,0.9-12.1-1.3-18.1,0.7       c-1.6,0.5-4,0.2-5.6-1.4c-0.4-1.1-0.1-1.9,0.9-2.6c-2.5,1.9-5.2,4.3-8.5,2.4c-1.8-1-1.5-3.1-0.1-4.8c6.6-0.1,13.1-1.9,19.5-1.6       c4.5,0.2,9.2,1.2,13.4-0.2c4.1-1.3,8-0.9,11.9-0.4c1.1,0.2,2.1,0.4,2.6-0.4c3.2-5.1,7.5-2.3,11.4-1.6c0.6,0.1,1.4,0.8,1.7,0.6       c4.4-3.1,9.9-0.1,14.2-2.4c1.9-1,3.9,3.7,5-0.5c7.8,0.9,15.1-2.8,22.7-2.2C871,483.6,874.1,486.4,878,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9B2533"),
                d:
                  "M765,492c0.2,1.4-0.7,3.7,0.6,4c1.6,0.4,4,0.7,5.4-1.2c0.9-1.3,2.3-2.6,3.6-1.2       c1.8,1.9-2.7,1.5-1.6,3.4c-2.3,3.1-10.7,5.8-14.3,3.6c-3.1-1.9-4.4-0.4-6.3,1.2c-0.4,0.3-0.7,0.7-1.1,1c-1.3,1-2.7,2.8-4.2,1.1       c-2-2.2,0.7-3,1.8-4.2c0.7-0.6,1-1.5,0.6-2.2c-1.2-2.9,0.5-3.4,2.7-3.6c2.4-0.2,4.9-0.5,7.4-0.4c1.8,0.1,3.2-0.4,4.5-1.5       C764.3,492,764.7,492,765,492z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96212F"),
                d:
                  "M764,492c-1,2-1,4.6-4.9,2.5c-2.1-1.2-5.8-0.2-8.6,0.7c-1.3,0.4,0.4,3.6-1.6,4.8       c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c-1.2-3.7-4.5-2.3-6.2-1.7c-2.8,0.8-4.6-0.2-6.8-1.3c0.6-1.3,1.7-1.9,3.1-2       c5.9-0.7,11.7-2.6,17.9-1.5C759.3,492.8,761.6,491.2,764,492z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d:
                  "M789,484c4.1-4.3,9.3-1.7,14-2C798.9,486.4,793.9,484.8,789,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d: "M783,484c2-1.9,4-0.9,6,0C787,485.6,785,483.2,783,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1A29"),
                d:
                  "M730,490c0.7-0.1,1.3-1.1,2,0c-0.2,0.8,0.5,2.1-0.8,2.2C730.1,492.2,730.1,490.9,730,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("841725"),
                d: "M779,485c1.1-1.5,2.6-0.9,4-1C781.8,484.9,781,487.5,779,485z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A92E3C"),
                d:
                  "M876,490c0.3,0,0.7,0,1,0c0.7,0.3,1.3,0.7,2,1c0,2,0,4,0,6c-0.7,0.8-0.9,1.8-1,2.7       c-0.3,3.1-1.3,4.4-4.3,2.4c-1.6-1.1-2.7-0.7-3.7,0.9c-1.7,2.5-3.8,2.2-6,0.8c-2.5-1.6-5.7-2.2-8.1-1.1       c-5.4,2.5-11,1.3-16.5,1.7c-5.5-0.3-10.9-1.8-16.5-1.3c-4,0.3-7.8,0.3-11.2,2.9c-4.1,3.1-5.4,2.4-6.9-3c1.2-2.9,3-4.6,6.4-4.5       c4,0.1,7.4-3.4,11.5-2.5c4.6,1,8.7,0.6,12.8-1.8c1-0.6,2.5-1.2,3.3-0.3c2.8,3.4,6.4,2.2,9.2,1.2c4.4-1.6,8.4-1.2,12.8,0.5       c-0.9-1.1-2.1-2-1.4-3.3c0.5-0.8,1.4-0.4,2.3-0.3C866.4,492.2,871.3,492,876,490z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921D2C"),
                d:
                  "M665,501c-3.5,0.7-7,1.4-10.5,2c-1.1,0.2-2.3,1.6-3.5,0c1.3-2,1.9-5.2,5.6-2.8c2,1.3,2.9,0.3,1.7-1.9       c-1.2-2.2,1.7-1.2,1.9-2.3C659.7,499.6,665.5,497.3,665,501z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921D2C"),
                d:
                  "M648,497c1.2,0.1,2.3,0.3,2.6,1.7c0.1,0.6-0.3,1-0.8,0.8C648.3,499.3,648.1,498.2,648,497       C648,497,648,497,648,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902F3C"),
                d:
                  "M1089,496c2.7,0,5.6-0.4,7.6,2.3c0.7,0.9,1.4,0.7,2.2,0.3c5.3-2.7,11.2-1.7,16.7-2.8       c4.4-0.8,7.4-0.3,11.4,1.7c2.6,1.3,7.8-0.5,11.7-1.4c1.4-0.3,2.5-0.8,3.7,0.2c1.2,1,2.6,3.7,3.1-0.5c0.1-0.8,1.1-0.4,1.7-0.1       c2.9,1.8,5.6,2.3,7.7-1.3c0.5-0.8,2.3-0.7,2.7,0c2.7,4.5,6.7,1.7,9.6,1.1c3.8-0.8,4.8,0.6,5.2,3.7c1.3-0.8,3-1.3,3.3-2.2       c0.8-2.7,3.6-1.7,3.9-1.3c3.2,4.1,6.3,0.6,9.5,0.2c0.9,0.3-0.5,3.5,2.5,1.8c2.2-1.3,5.1-0.4,7.8-1.9c2.7-1.5,4.4,1.9,5.7,4.1       c0.6,1.5,1.9,3.5-1.3,3.2c-1.7-0.1-2.4,0.3-3,1.7c-0.5,1.1-1.6,1.2-2.6,0.8c-5.4-2.1-5.7-1.7-11.4,1.1c-3,1.5-7.3,2.4-10.3,1.4       c-4.8-1.6-9.5-0.5-14.1-1.1c-3.9-0.5-8.4,2.2-11.7-2c-0.2-0.2-1.8-0.9-1.4,1.2c0.3,2-0.9,3.9-3.2,4.6c-0.2-0.8-0.1-2.1-0.5-2.3       c-2.2-0.9-0.9,2.6-2.9,2.4c-1.4-1,0.6-4.7-2.2-4.3c-2.5,0.3-0.3,3.1-0.8,5.6c-2-3.1-2-7.3-6.4-6.5c-2.8-1.6-5.5-3-8.8-1.3       c-0.6,0.3-0.1,0.4-0.4,0.1c-3.9-3.8-8.2,0.6-12.3-0.7c-3-1-5.9,0-8.7,1.2c-2.9,1.2-6,1.7-8.7,0.5c-3-1.4-5.7-0.9-8.6-0.3       c-0.3,0-0.5-0.2-0.6-0.5c-0.3,0.5,0.6,0.4,0.5,0.8c-2.7,3.5-7.8,4.3-10.7,1.7c-0.9-0.8-2.3-2-2.7-0.5c-1.8,5.2-4.8,2-7.5,1.5       c-0.4-0.3-0.8-0.5-1.1-0.8c0.2,0.4,0.7,0.5,0.9,1c-0.3,2.3-1.7,3.7-3.7,2.7c-1.7-0.9-2.3-1.7-4.5-0.1c-1.7,1.2-2.8-2.1-3.2-3.9       c-0.2-1.3-0.6-2.8-1.9-1.9c-4.7,3.3-10,0.4-15,1.7c-4.6,1.2-9.4-0.6-14.1-0.3c-4.9,0.4-9.8,0.2-14.6,0.6       c-4.7,0.4-4.8,0.7-4.4-4.2c-3.3,1.2-6.4,2.7-10.1,1.8c-1-0.3,0,0.9-0.2,1.3c-2.1,5.1-6.6,2.5-9.3,1.8       c-4.6-1.2-9.2-0.4-13.5-1.5c-5.1-1.4-9.5-0.9-14,2c-0.9,0.6-3.2,1-2.9-1.7c0-0.3-0.1-0.3-0.2-0.3c-4.7,2.2-10,0.1-15,2.6       c-2.4,1.2-2.3-3.1-3.1-5.1c4.3-2.3,8.7-3.8,13.7-3.4c2.8,0.2,5.7-0.3,7.9-2.4c0.6-0.4,1.2-0.7,1.9-0.8       c5.2-0.5,10.5,0.1,15.7-0.9c1.9-0.9,3.9-0.1,5.9-0.6c0.7-0.2,1.7-0.1,1.8,0.5c0.9,5.4,4.3,1.4,6.4,1.5c1.4,0.1,2.9-0.8,4.3,0       c2.5,1.3,4.3,1.4,6.2-1.4c1.6-2.3,4.7-0.7,5.8,0.4c3.8,3.6,8,2.1,12.1,1.8c2.4-0.2,4.7-1,7.2,0.2c1.5,0.8,3.5,0.5,4.8-0.3       c3.4-1.9,6.9-2.6,10.7-2.5c3.3,1.2,6.7,0.8,10.1,0.2c2.1-0.3,4.1-0.2,4.9,2.2c1.1,3.4,3.6,3.5,6.4,2.9c2.2-0.5,4.7-0.4,6.6-2       c2.1-1.7,4.1-0.2,6.2,0.1c-0.7-2.5-1.2-4.9,2.8-3.4c0.8,0.4,1.5,0.9,2.1,1.5c1.7-0.7,3.8,0.5,5.3-1.7       C1085,493.6,1087,497.9,1089,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9F3742"),
                d:
                  "M1100,538c1.5,1.6,3.6,2.6,1.4,5.6c-2,2.6-3,1.6-5.5,0.9c-5.2-1.3-10.7-1.2-15.4,2.4       c0.7,2.4,5-1,4.6,3.4c-0.3,3.9-3.5,0.4-4.4,2.8c2.3,4.3,6.9-1.2,9.7,1.6c-0.7,2.5-3.8,0.1-5,2.5c3.1,0.6,5.4,3.9,9.1,1.2       c0.5-0.4,3.3-0.1,4.4,1.5c-1.3,0-2,0.7-2,2c-1,1.7-2.5,2.9-4.3,3.7c-1,0.2-2.5,0.2-2.5-0.7c-0.2-3-2-1.4-3.3-1.3       c-0.7,0.1-1.4,0-2.1-0.2c-3.3-1.9-7-2.4-10.6-2.9c-5.8-0.9-11.5-2.6-17.5-1.9c-1.2,0.2-2.1-0.8-3-1.5c-2.7-2.1-5.3-2.9-8.5-0.5       c-2.3,1.7-7.7-0.8-9.3-3.9c-0.6-3.4-0.3-6.9-0.3-10.4c-0.1-3.9,1.9-5.7,5.6-6c0.8-0.1,1.6-0.2,2.5-0.2c6.7-0.2,6.7-0.2,8.2-7       c0.2-0.8,0.5-1.6,1.2-2.1c2.2-1.5-0.5-3.4,0.5-5.4c5.1,0.6,10.3,3,15.5,0.4c0.1,0.1,0.2,0.2,0.3,0.4c2.3,2.1-1,7.5,3.3,7.4       c3.2,0,6.1,1.4,9.2,0.9c3.6-0.6,6.5-0.6,4.9,4.5c-0.3,1,0.7,1.3,1.6,1.5c3.8,0,7.5,0.3,11.1,1.5       C1099.6,538.1,1099.8,538,1100,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3543"),
                d:
                  "M1053,527c0,0.7,0,1.3,0,2c0,8.6,0,8.6-8.8,8.3c-6.3-0.2-7.2,0.7-7.2,7.2c0,3.1,0,6.3,0,9.4       c-8,2.8-15.6,1.7-23-2c-3.8-5-10-6.3-15.1-9.1c-1.9,3.8-3.4,3.9-7,0.3c-1.6-1.6-4.1-2.1-5.2-4.4c-0.6-1.3-2.3-2.1-1-3.8       c0.6-0.8,1.3-1.9,2.3-1.5c1.8,0.7,2.1,2.4,1.8,4.1c-0.1,0.3,0.1,0.6,0.2,1c1.7-0.2,3.3-1.8,2.8-2.8c-2.3-4.4,2.5-5.9,3.2-9       c0.2-0.8,0.6-1.7,1.7-1.2c1.1,0.5,1.3,1.5,0.4,2.4c-1.3,1.3-1.1,3-1.3,4.8c2.5-0.8,4.1-2.7,6.5-2.9c1.8-0.2,2.2-1.9,1.4-3       c-2.2-2.8,0.1-3.9,1.8-5c2.1-1.3,2.3,0.9,3.1,2c0.5,0.7,0.9,2.3,2.1,1.3c1-1,3.7-0.2,3.1-3c-0.8-3.3,1.8-2.1,2.2-1.1       c2.7,6.1,6.3,1.1,9.5,0.9c0.4,0,0.8-0.5,1.5-0.9c0.2,5.5,6,4.9,8.9,8.4c-2-5.5,3.2-7,4.9-10.4c0.5-1,1.6-0.7,1.9,0.2       c1.1,2.5,2,4.8,5.7,3.4C1049.9,522.6,1051.7,525.5,1053,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C3442"),
                d:
                  "M1088,538c-3.6-1.2-3.7-1.6-1.8-6.6c-3.4,0.3-6.8,1.7-10-0.7c-0.1-0.1-0.3-0.2-0.4-0.2       c-6.7-1.1-6.7-1.1-6.7-8.6c2.6-3.2,5.3,0.6,8.2-0.1c3-0.7,6.2-0.2,9.4-1.6c2.1-0.9,5.2-1.5,7.7-0.2c1.9,1,3.5,0.8,5-0.5       c1-0.9,1.4-1.1,1.8,0.5c0.8,3,3.8,2.3,4.6,1.1c2.9-4.5,6-3.6,9.7-1.3c0.5,0.3,1.5,0.9,2.2,0c0.2-2.1-2.5-1.3-2.9-2.9       c3.5-1.3,3.5-1.3,7.2,1.3c1.1-2-0.3-3.4-1.3-5.4c3.2,0.9,4.7,4.9,8.7,3.6c2.5-0.8,6.4-4.6,8.5,1.1c2.2-2.1,5.2-1.3,7.7-2.1       c1.8-0.6,0.3-2.3,0.4-3.5c0.8,0.2,2.2,0.2,2.3,0.5c0.3,2.4,2.1,3.4,3.8,3c2-0.4,1.6-3,2.3-4.6c1.5,1.3,3.1,2.5,4.4,3.9       c0.9,0.9,2.1,1.8,3,0.7c2.3-2.8,5-0.5,7.8-1.9c-1,2.4-3.5,1.9-3.8,4.1c5.6,1,6.5-8.1,11.4-6.1c4,1.7,9.4,0.8,12.7,4.9       c3.2-2.8,7.2-5,12.3-2.7c1.1,0.5,2.7,0.6,3.6-0.7c2.2-3.1,3.1-0.7,4.2,0.9c-0.2,0.9,0.6,1.4,1,2c0,0.7,0,1.3,0,2       c-1.8,0-3.6-0.4-5.4-0.5c-3.8-0.4-7.5-2-11,2.6c-1.8,2.4-6.3,4.5-10.9,2.5c-3.3-1.5-6.7-0.3-9.8,1.6c-0.3,0.2-0.2,0.9-0.8,0.7       c-9.9-4-11.2-4.2-18.2-3.4c-0.4,0-1,0.2-1.3,0c-2.4-1.6-2.5-1.7-4.3,1c-1.2,1.8-2.7,1.6-4.4,1.6c-4.8,0-9.7-0.1-14.5,0.1       c-3.4,0.1-6.4,1-7.7,4.8c-1.3,3.4-4.7,3.3-7.5,3.8c-1.7,0.3-2.2-1.3-2.2-2.7c-0.1-1.6,0-3.3-0.7-5c-0.4,1-1.1,2-1.2,3.1       c0,3.4-1.8,3.4-4.6,3.1c-5.2-0.5-6.3,0.8-6.6,6.9c-3.5-0.5-6.5-2.1-9.3-4.3C1089.4,534.8,1089.5,536.9,1088,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M1064,508c2.7-3.8,3.4,0.9,5.3,1.3c1.3-0.5,0.6-2,1-2.9c1.3-3,3.2-2.7,5-0.9c2.8,2.7,6.8,2.6,9.7-0.5       c3.1-1.4,5.8-4,9.5-0.3c1.3,1.3,4.8,0.8,7.2-0.1c3.9-1.6,7.6-3.8,12-0.9c1.5,1,2.3-0.5,3-1.7c1.4-2.4,2.9-3.1,3.9,0.1       c0.7,2.3,2.5,2.4,3.8,1.5c4.2-3.1,6.4-0.3,8.7,2.5c-0.8,0.2-2.1,0.1-2.3,0.5c-1.4,3.6-3.2,2-5.4,0.8c-3.1-1.7-3.5-1.4-5,1.9       c-1.6-0.8-3,2.3-4.5,0.4c-1-1.2-2.2-2.2-3.3-1.1c-3.9,3.8-6.3,1-9-2.3c-0.8,3.8-1.3,7.7-6.1,4.4c-2.5,3.1-6.6-0.1-9.3,2.2       c-1.1,1-1.6,0.9-2-0.4c-0.2-0.6,0-2.6-1.1-0.3c-1.3,2.7-3.2,3.7-5.8,1.5c-1-0.8-1.7-1.3-3-0.3c-2.7,2.1-5.4,2.7-7.8-0.7       c-0.6-0.8-2.5-0.8-2.6,0c-1,4.7-3.8,1.3-4.8,0.7c-3.2-1.8-8.5,1.1-9.7-5.1c-2.8,3.7-4.9,6-10.1,3.5c-3-1.5-8.2-1.3-11.9,0.9       c-1.9,1.1-2.1-1-3.3-0.9c-1.3,0-0.7-3.1-2.6-2.2c-2.2,1,1.1,2.5,0.1,3.6c-7.9-0.8-15.6-2-23.4-1.2c-2.5,0-4.7-0.4-4.9-3.5       c0.2-0.8,0.4-1.5,1.5-1.6c-1-0.4-1.9,0.5-2.8,0.2c-0.7-0.1-1.3-0.5-1.8-1c-0.2-1.5-2.6-1.6-2.4-3.9c4.1,2.7,8.2,2.5,12.1,0.1       c1.1-0.7,2.3-1,3.2,0c1.1,1.1-0.4,1.7-0.9,2.3c-0.6,0.8-0.6,1.5-0.1,2.3c1,1.4,1.3-0.2,1.8-0.5c2.4-1,4.8-0.6,7.2-0.1       c0.7,0.1,1.6,1.2,2.2,0.6c3.8-3.3,8.3-1.6,12.2-1.1c5,0.7,9.6-0.9,14.4-0.4c3.3,0.3,6.6,1.5,9.4-1.9c0.7-0.8,2.9,0.7,2.8,2.7       c-0.2,2,1.4,3,1.8,4.8c2-1.4-0.9-3.8,1.3-4.5c2.3-0.7,2.1,1.9,3.1,3C1062.3,512.1,1063.1,509.7,1064,508z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("96333F"),
                d:
                  "M992,506c0.7,0,1.3,0,2,0c0.6,0.7,1.4,1.2,2,2c-0.3,3,2.2,3.1,4,4c0.5,1.7,0.2,3.3-1.4,4.3       c-1.7,1-2.3-0.7-3.3-1.4c-3.7-2.9-7.4-3.3-12-1.5c-1.9,0.7-1.2-2.5-3.5-2.3c-3.2,0.3-5.6,1.7-8.2,4.5c0.1-1.9,0.5-2.9,0.2-3.7       c-0.5-1.7-0.6-4-3.2-0.9c-2.7,3.1-5.1,2.4-6.9-1.3c-3.1,4.7-6-0.3-9.3,0c0,0.4-0.2,1.1,0,1.3c1.2,1.2,0.9,2.8,1.1,4.2       c-1.7-0.8-4,1.1-4.7,0.6c-3.5-2.6-2.7,0.6-3,2c-0.5,2-2,2.8-3.6,3c-1.8,0.2-1.2-1.5-1.4-2.6c-0.3-0.1-0.7,0-1-0.2       c-6.1-5.1-8.1-4.7-12,2.4c-0.5,0.9-0.7,2-2,1.5c-1.4-0.5-0.5-1.7-0.2-2.5c1.3-4.3-2.1-6-4.5-4.7c-3.6,1.9-7.2-0.6-10.5,1.4       c-1.1,0.7-3.3,0.1-3.3-1.2c-0.1-4.6-1.8-3.1-4.5-2c-2.3,1-5.1,1-7.7,1.3c-2.2,0.3-3.6-0.5-3.4-3c1.2-2.1,3.3-2.7,5.4-3.1       c9.2-2,18.4-4,27.5-6.2c1.4-0.3,2.9-0.8,4.4-0.4c0.8,0.1,1.7,1.3,2.5-0.2c0.7-0.7,1.5-0.8,2.3-0.3c0.9,0.9,1,2,0.8,3.2       c-0.2,1.9,4.5,1.7,1.7,5c5.7-6.3,13.6,0,19.1-5.3c0.9,3.1-2.6,1.8-1.8,4c3.5,0.5,5.2-3.8,8.7-3.7c0.9,0,1.7-0.8,2.8-0.3       c4.5,2,9.2,2.7,14,0.8c1.2-0.5,1.1,0.8,1.7,1.2C983.5,507.7,990.4,507.7,992,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313C"),
                d:
                  "M1014,552c7.6,1.5,15.2,2.3,23,2c1,0.2,1.2,2.5,2.7,1.2c1.4-1.1,2.4-2.1,3,0.6c0.2,0.8,1.1,1.4,1.9,0.4       c3.4-4.4,6.7-2.7,10,0.1c0.7,0.6,1.3,2.1,2.3,1.6c6.7-3.1,13,3.1,19.7,0.9c1.5,4.1,7.2-0.2,8.6,4.3c-1.7,1.7-3.8,1.8-6,1.7       c-13.9-1-27.7-2-41.5-4.2c-6.5-1-13.2-0.8-19.5-3.2c-3.2-1.2-6.6,0.2-9.9-0.2c-0.5-0.1-1-0.2-1.5-0.3c-3.6-0.7-7.3-0.7-11-0.8       c-2.1,0.1-4.2-0.3-5.9-1.7c-0.4-0.8-0.4-1.5,0.2-2.2c0.6,0.1,1.2,0.2,1.9,0.4c0.6-5.8,2.9-1.9,5-1c2.1,0.9,4.3,3.1,6.8,0.2       c0.3-0.4,3.9-2.2,5.5,1.2C1010.1,554.6,1012.6,553.8,1014,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62C39"),
                d:
                  "M889,493c0-0.3,0-0.7,0-1c5.9-3.3,12.5-2.2,18.9-2.7c2.8-0.2,6-1.2,8.7,1c0.7,0.5,0.4-0.4,0.6-0.9       c0.4-1.8,2-1.9,3.5-1.9c6.3,0,12.4,1.6,18.7,1.1c2.2-0.2,3.1,1.6,3.9,3.3c0.2,1-0.3,1.9-0.9,2.7c-2.5,3-5.2,4.4-9.5,3.2       c-2.2-0.6-5.7-2.6-7.9,0.9c-0.3,0.4-0.9,0.4-1.4,0.2c-6.4-2.9-13,0.8-19.6-0.5c-2.6-0.5-5.9-0.3-8.2,1.3c-4.1,3-5.8,1-6.9-2.8       C889,495.7,889,494.3,889,493z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB3340"),
                d:
                  "M889,497c1.9,2.9,3.7,3.2,6.9,1.3c3.3-1.9,7.4-1.8,11.2-1.2c3.5,0.6,7,0.1,10.3-0.6       c2.8-0.6,4.9-0.5,6.4,1.8c2-0.8,0.6-2.6,1.2-3.2c6,0.2,11.8,4.6,17-1.2c2.8,5.2-2,5.4-4.7,7.1c-1.1,0.7-2.3,0.8-3.3-0.1       c-0.8,0-1.6,0.2-2,1c-0.7,0.5-1.3,0.6-2,0c-1.5-0.2-2.8,0.3-4,1c-5.9-0.7-11.8-2-17.5,0.9c-0.3,0.2-0.6,0.5-0.9,0.4       c-5.6-0.9-9.8,3-14.8,4.3c-1.4,0.4-1.9-1-2.8-1.6C888,503.8,889.4,500.3,889,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3845"),
                d:
                  "M890,507c3-1.1,7.1,1.3,9.1-3.2c0.5-1.1,2.1-3.5,4.4-0.6c1.7,2,3.8,0.1,5.6-1.2c3-2.2,13.9-1.5,16.9,1       c-11.3,2.7-22.8,4.6-34,8C890.3,510.2,888.3,509.5,890,507z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("92313C"),
                d:
                  "M974,552c-1.9-3.1-5.6-1.2-8-3c0.2-0.9,0.7-2.6,0.8-2.4c2,3.8,6.4,0.7,9,3.3c1.3,1.3,3.5-1.5,5.6-0.6       c0.6,0.2,5.6,1.8,6.6,2.8c-2.4,2.2-5.4,1-8.1,1.4C977.9,553.2,975.4,554.8,974,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E303B"),
                d:
                  "M979,552c3,0,6,0,9,0c0.7,0,1.3,0,2,0c0,0.7,0,1.3,0,2c0.1,1-0.4,1.7-1.1,2.2c-0.4,0.1-0.8,0.1-1.2,0       c-1.1-0.6-2.5-0.3-3.6-1C982.7,553.6,978.8,556.1,979,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D3543"),
                d:
                  "M1013,520.8c-0.4,0.2-0.8,0.5-0.9,0.4c-0.3-0.3-0.7-0.7-0.7-1.1c0-0.6,0.6-0.8,1-0.5       C1012.7,519.8,1012.8,520.4,1013,520.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M876,542c-4.3-1.3-9.4,1.8-13.1-2.7c-0.2-0.3-1.2,0.1-1.9,0.2c-2.9,0.3-5.8,1.8-8.4-1.2       c-0.5-0.6-3,0.5-4.6,0.8c-0.5,0.5-1.2,0.8-1.9,0.8c-3.3-1.3-6.7-0.5-10,0.2c-10.4-1.9-21-2.6-31.4-4.5c-1-0.2-2.1-1-2.9-0.5       c-4.8,3.2-5.1-0.2-5.5-3.6c0.1-0.5,0.3-1,0.6-1.3c0.7,0,1.3,0,2,0c6.7-0.5,13.3-3.5,20,0c0.8-0.4,0.9,0.9,2.6,0.6       c4.3-1,9.2-2.1,13.9-0.6c1.5,0.4,0.4,1.8,1.2,2.3c1.7-0.4,1.1-2.2,1.9-3.1c0.5-0.5,1.6-0.9,1.6-0.6c0,4.4,7,1.6,6.5,6.4       c0,0.2,0.8,0.4,1.2,0.7c0.7-5.6,6,1.1,7.5-2.8c0.3-0.9,1.6-0.4,2.1,0.3c3.9,5.1,9.5,5.2,15.2,4.9       C875.7,537.8,877.1,538.8,876,542z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9A303D"),
                d:
                  "M819,530c-6.7,0-13.3,0-20,0c3.2-2.5,7.4-2.5,10.9-2.7c8.7-0.4,16.7-3.6,25.1-4.9       c15.4-2.3,30.7-5.5,46-8.4c0,2.2-2.5,3.5-2.1,6c0.2,1.2-0.3,1.6-1.1,0.3c-0.8-1.3-1.8-0.1-2.7-0.3c-7.2-1.1-14,1.3-21,2       c-1.1,0.1-1.8,1.2-2.6,1.2c-2.3,0.2-4.3,5-7.1,0.5c-0.3-0.5-3.5-0.3-4.1,0.5c-3.2,4.6-8.4,2-12.3,3.7c-1.6,0.7-3.4,0.9-5.3,0.3       C821.3,527.7,819.3,527.5,819,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB323F"),
                d:
                  "M805,503c1.9,3.5,3.6,4.5,7,0.9c2.5-2.6,6.7-2.3,10.3-2.1c4.9,0.3,10.1-1.4,14.8,1.5       c0.4,0.3,1.3-0.2,1.9-0.3c0.1,4.7-2,7.6-6.1,7.2c-1.9-0.2-2,0.9-2.9,1.7c-3.4,3.5-5.5,3.3-8.9-0.1c-1-1-2.4-1.7-3.6-2.6       c-1.5-1.1-2.6-1-3.6,0.8c-1.7,3-8.6,5.7-11.8,5c-1.3-0.3-1.1-1.9-2.2-2.1c-2.2,2.5,1.4,4.9,0,7c-1.4,2.3-4.4,0.4-6.6,1.7       c3.6-0.5,4.5,2.1,5.6,4.3c-0.4,1-1,1.6-2,2c-0.2,0-0.4,0-0.6,0.1c-1.3,0.3-1.5,1.7-2.5,2.3c-0.6,0.3-1.2,0.2-1.8,0       c-0.7-0.6-1.5-0.5-2.2,0c-0.4,0.1-0.9,0.1-1.3,0c-1,0-0.5-3.4-2.7-1.1c-0.8,0.8-2.1,0.7-3.3,0.6c-2.8-0.7-5.6-0.6-8.4,0.2       c-3.7,1-7.3-1.2-11-0.9c-1,0.1-2.2-0.4-3.4-0.5c-4.6-0.2-5.7-2.3-3.3-6.3c0.7-1.1,1.9-2,2.3-3.2c2.4-7.4,7.7-9.2,14.9-8.5       c3.1,0.3,5.7,0.7,7.3,4c-2-4.9,1.6-7.1,4-9.9c2-3.8,5.9-2.1,8.8-3.1c2.5-0.8,4.2,0.4,6.2,1.8C800.7,504,802.8,500.1,805,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M799,526c-0.9-0.1-1.5-0.4-2.1-1.2c-1.9-2.4-1.9-2.4-4.5-0.7c-0.1-3.2-0.1-3.2,6.9-4.8       c-3.3-3.6-2.7-6.2,2-8.6c0,3.2,0.5,1.8,2.8,2.5c3.1,1,4.8-3.8,7.6-0.9c0.3,0.3,0.8-1.3,0.9-2.3c0.3-3.2,2.6-4,5.2-2.3       c1.5,1,2.4,3.4,4.9,2.5c0.2-0.1,0.6,0.3,0.8,0.4c1.1,0.8-2.9,4.3,1.4,3.1c2.5-0.7,6-2,4.2-6.4c6.5,2.9,7,2.7,9.9-4.3       c7.5,1.9,14.5-2.5,21.9-1.7c1.1,0.1,2.2-0.5,3.1,0.7c2.4,3.1,3.8,2.4,5.6-1c2.8-5.2,4,1.6,6.8,0.8c-0.2-1.9,0.7-3.6,2.6-4.9       c0.9,2.9-1.9,6.7,2,9c-0.3,3.5-0.7,4.8-5.7,5.1c-4.4,0.2-10.4-1.4-14.4,2.8c-1.9,2-4.5,0.9-6.7,1.4c-4.1,0.9-8.2,0.6-12.6,1.9       c-3.2,1-8.5,4.4-12.7,0.3c-0.9-0.8-2.4-0.7-3.1,0.4c-4.7,6.7-11.5,7.1-18.7,6.1C804.1,523.6,802,526.4,799,526z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A8303D"),
                d:
                  "M792,530c0.7,0,1.3,0,2,0c1-0.6,1.1-2.6,3-2c0,0,0,0,0,0c0,0.7,0,1.3,0,2c0,0.3,0,0.7,0,1       c-3.1,2.6-6.4,3.2-10,1c-8.9,0.9-17.8-0.6-26.6,0c-3.3,0.2-6.2-1.6-9.4-2c-1.9-2.3-4.6-2.5-7.2-2.6c-4.7-0.1-9.5,0.7-13.3-3.6       c-1.2-1.4-4.2-1.7-6.6-1.2c-1.1,0.3-2.5,0.3-2.8-1.2c-0.2-1.1,0.6-1.8,1.4-2.5c6-4.8,11.2-5.2,17.6-1c1.8,1.2,3.3-1.6,4.7,0.2       c0.4-1-0.2-1.9-0.4-2.7c-0.9-3.2,0.6-3.7,3-2.5c1.4,0.6,2.2,1.8,3.7,0.1c2.3-2.6,4.9-1.9,7.3,0.3c0.4-0.3,0.6,3,1,0       c0.1-0.6,0-1.3,0.2-1.9c0.7-1.9,2.2-2.3,4-2.3c1.7,0,3.4-0.1,4.7-1.1c2.3-1.5,4.3-2.1,6.6,0.1c1.3,1.3,3.1,0.5,4.7,0.5       c0.5,0.1,0.7,0.6,0.9,1c0.2-0.4-0.1-0.7-0.2-1c-0.3-0.8-0.2-1.6,0.1-2.3c1.2-1.1-0.3-2.8,0.8-3.9c3.7-2.8,3.8-2.7,4.7,2.7       c-0.5,3.3-5.8,4.1-4.5,8.3c0.3,0.9,1.6,1.7-0.1,2.2c-0.8,0.2-2.5-0.1-2.7-0.6c-2.7-6.4-8.1-1.5-12-2.9c-1.8-0.6-3.2,1-4,2.3       c-2,3.1-3,6.7-5.7,9.4c-0.7,0.7-1.3,2.1-0.7,3.2c0.8,1.4,2,0.7,3.1,0.3c1.5-0.6,3-0.4,4.2,0.6c1.3,1,2.3,1.8,3.3-0.2       c0.2-0.5,1.1-0.7,1.6-1c2.5,5.7,6.5,0.7,9.7,1.3c1.6,0.3,3.3,0.2,4.8,1.1c2,0.6,4,0.8,6,1c0.3,0,0.7,0,1,0       C790.7,529.4,791.3,529.4,792,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842734"),
                d:
                  "M979,552c0.8,1.7,1.8,2,3.6,1.3c1.7-0.7,2,0.2,1.4,1.7c-0.2,0.2-0.4,0.4-0.6,0.6       c-2.7,1.4-5.6,0.1-8.4,0.8c-1.5-0.1-2.9-0.2-4-1.3c-2.1-2.9-5.3-1.3-8-2.1c-0.8-0.2-1.6-0.2-2-0.9c3.2-1.5,6.4-0.1,9.5,0.4       c1.3,0.2,2.5,1.1,3.5-0.4C975.7,553.4,977.3,552.2,979,552z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("882936"),
                d:
                  "M787,532c3.4,0.4,6.7-0.5,10-1c0.5,1.5,1.1,3,2.1,5.8c0.5-4.4,2.1-4.1,4.6-3.3c7,2.5,14.4,2.6,21.6,3.3       c4,0.4,7.5,2.8,11.6,2.1c3,1.8,6-0.5,9,0c0.7,0,1.3,0,2,0c0.2,2.1,1.8,2,3.3,2c1.6,0.1,3.4-0.5,3.7,2c-11.4-0.5-22.8-1-34-3.8       c-2.7-0.7-5.4-0.8-8.3-0.4c-4.2,0.5-8.6,0.4-12.9-0.8c-8.8-2.4-17.9-2.5-26.9-3.1C777.4,533,782.6,534.3,787,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M884,477c2.3-2.9,3.1,2,5,1c1.4,2.1,0.9,4.3,0.5,6.5c-0.2,0.2-0.3,0.3-0.5,0.5       c-1.4-0.1-2.4-0.6-2.9-2.1c-0.8-2.6-1.4,0.2-2.1,0.1C884,481,884,479,884,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12834"),
                d:
                  "M943,492c-2.1-2.4-5.1-1.5-7.7-2.1c-4.9-1.1-10.1,0.6-14.8-1.4c-1-0.4-1-0.3-1.5,1.7       c-0.4,1.5-2.1,1.7-2.9,1.3c-4.7-2.3-9.5-0.7-14.2-0.6c-4.3,0.1-8.5,0.7-12.8,1.1c0-0.3,0-0.7,0-1c0.8-1,1.1-2,0-3c0-1,0-2,0-3       c0,0,0,0,0,0c1.9-2.6,3.9,0.1,5.9-0.2c6.2-0.9,12.5-1.6,18.8-1.5c8.4,0.1,16.9-1.1,25.2,0.5c5.8,1.1,11.7-1.6,17.3-0.2       c7.1,1.8,14.5-0.9,21.5,2c0,4.7-4.3,4.9-7,5.4c-5,0.9-10.1,2.4-15.3,2.2C951.3,492.5,946.9,494.9,943,492z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A62C39"),
                d: "M889,488c3.2,1,1.5,2,0,3C889,490,889,489,889,488z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480F18"),
                d:
                  "M513.9,373c-1.3,0-2.6,0-3.9,0c-2.4-2-0.4-2.6,1.1-3.3c3.4-1.6,7.1-2.4,10.9-2c1.1,0,2.3,0.1,3.4,0.4       c2.1,0.8,4.2,0.4,6.3,0.6c1.8,0.2,3.7,0.4,4.1,2.7c-0.2,2.1-1.2,3.3-4,3c9,2,16.7,0,24.5-3.1c5.5-2.2,11.8-0.4,17.8-0.9       c1.6-0.1,3.3,0,5-0.1c1.5-0.1,3.1,0.2,3,2.4c-1.6,1.1-3.2,2.2-4.8,3.3c-7.8,1.9-16.4,0.4-23.2,6c-1,0.7-2.1,0.8-3.2,0.3       c-1.3-1.8-3.3-1.9-5.3-1.9c-3.4-0.1-6.9,0.2-10.3-0.3c-4.4-1.6-9.2-1.2-13.8-2.8C518.5,376.2,515.9,375.3,513.9,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57111E"),
                d:
                  "M581.9,372.8c-2.7-3-6.2,0.4-9.2-1c-0.2-0.1-0.6,0.2-1,0.2c-9.1-1.3-17.5,1.9-26,4.2       c-4,1.1-7.9,1.6-11.6-0.3c-2-1-3.9,0.8-5.9-0.7c1.9-2.3,5.7,0.1,6.8-3.2c4.9-3,10.7-2.1,15.9-4c7.9-0.7,15.7,1.4,23.6,0.6       c0.6,0,1.1,0,1.7,0c1.7,0.1,3.4,0,4.8,1.3c1.4,0.1,2.9,0.1,4.3,0.2C584.2,371.1,583.5,372.4,581.9,372.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E3743"),
                d:
                  "M551.1,381.9c0.9,0,1.9,0.1,2.8,0.1c-0.3,1-1,1.6-1.9,2c-6.1,2.1-12.1,0.6-18.2-0.3       c-3.1-0.4-2.1-2.1-0.8-3.7c0.6-0.7,1.4-0.5,2.2-0.5c0.8,0,2.2-0.2,2.3,0.3c0.2,1.2,0.3,1.4,1.7,1.2       C543.2,380.6,547.3,379.7,551.1,381.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56101B"),
                d:
                  "M534.9,380c-0.6,0-1.3,0.1-1.9,0.1c-2,1.5-4.9,0-6.8,2.1c-0.4,0.4-0.8,0.2-1-0.4       c-1.2-4.3-4.3-3.4-7.3-2.6c0,0,0,0,0,0c-0.2-1.3-0.9-2.2-1.9-3c-0.7-0.7-1.4-1.3-2.1-2c0-0.3,0-0.7,0-1       c6.6,3.6,14.1,4.2,21.2,6c0.3,0.3,0.3,0.5,0.2,0.7C535.2,379.9,535,380,534.9,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A6303C"),
                d:
                  "M1093,565c1-1.4,2.5-2.3,4-3c8.8,3.7,18.2,2.9,27.3,4c9.7,1.2,19.8,0.4,29.2,3.5       c1.5,0.5,3.3-2.8,4.5,0.5c-6.3,1.7-12.6,1.5-18.9,0.5c-1.2-0.2-2.2-0.6-3.1,0.6c-0.7,0-1.3,0-2,0c-5.2-1.8-10.7-2.2-16-2.3       c-6.1-0.1-12.1-1.3-18.2-1.2C1097.1,567.6,1095.1,566.1,1093,565z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C2636"),
                d:
                  "M1093,565c11.6,3.7,23.6,2.5,35.4,3.4c1.8,0.1,4.5-0.1,5.6,2.5c-9.6,0-19-2.4-28.6-2.7       c-3.1-0.1-6.3-0.2-9.4-0.3l0,0c-3.5-2.1-7.3-0.5-11-1c0,0,0,0,0,0c-0.4-0.3-0.6-0.7-0.6-1.1c0.1-1.6,1.6-2,2.6-2.8       c1.9-1,4.1-3,3.7,1.5C1090.7,564.6,1092.2,564.8,1093,565z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1096,568c-1.8,1.8-3.9,0.8-5.9,0C1092.1,568,1094,568,1096,568C1096,568,1096,568,1096,568z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("63121F"),
                d:
                  "M1306,600c-0.6,1.1-0.8,2.6,0.5,2.8c3.3,0.7,2.4,3.1,2.5,5.2c-1.5-0.6-2.4-2.3-4.7-0.7       c-1.9,1.3-5.7-0.8-7.1-0.5c-4.1,0.7-7.8-2.3-11.4-0.6c-4.2,1.9-8.4,1.5-12.7,1.8c-3,0-6,0-9,0c-4-1.6-8.2-1.9-12.5-2.1       c-1.3-0.1-3.1,0.3-3.4-1.2c-0.5-2,1.8-1.8,2.9-2.7c5-3,11.1-3.6,16-7c3-0.7,6-1.4,9-2c2.8-1.3,4.5,2.7,7.3,1.4       c0.1-0.1,0.5,0.5,0.7,0.6c3.1,0.8-0.7-3.4,2.1-3c2.3,0.3,0.8,3.6,3.1,3.8c0.2,0,0.3,0,0.5,0c4.5-0.5,5.6,0.1,7.5,4.8       c1.5-2.1,4.9-1.8,4.7-6C1303.6,596.9,1302.2,600.6,1306,600z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1204,583c-0.7-1.2-1.9-1-3-1c0.7-0.4,1.4-0.7,2-1.2c1-0.7,2.2-2.1,3.1-0.5       C1206.8,581.8,1205,582.3,1204,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6B141F"),
                d:
                  "M1251,602c-0.4,1.1-2.1,1-2.3,2.6c5.3,0.3,10.9-0.7,15.3,3.4c-8.1,0-16.1,0-24.2,0       C1242.8,603.8,1246.5,602,1251,602z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1213,596.6c1.1,1.8,4.1,1.8,3.6,5.2C1214.3,600.7,1212.8,599.5,1213,596.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1210.7,603.5c-0.2-0.3-0.5-0.7-0.5-1.1c0.1-1,0.7-1.4,1.7-1.2c0.2,0,0.4,0.8,0.3,1.2       C1212,603,1211.7,603.7,1210.7,603.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d: "M1196,606c-2,0-4,0-6,0C1192,604.5,1194,604.5,1196,606z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1245.4,527.8c-0.1-2.1,0.7-2.9,2.2-3.2c0.2,0,0.7,0.4,0.7,0.6C1248.4,526.8,1247.2,527.4,1245.4,527.8       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B33541"),
                d:
                  "M1346,519.9c-0.1,0.8-0.1,1.6-1,1.5c-0.8-0.1-0.9-0.8-0.7-1.5c0.1-0.4,0.5-1,0.8-1.1       C1346.2,518.5,1345.6,519.7,1346,519.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1261.1,530c-0.8-0.1-1.6-0.1-1.5-1c0.1-0.8,0.8-0.9,1.5-0.7c0.4,0.1,1,0.5,1.1,0.8       C1262.5,530.2,1261.3,529.6,1261.1,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3A46"),
                d:
                  "M1273,529.8c-0.4-0.6-0.8-0.9-0.8-1.2c-0.1-0.7,0.3-1.3,1-1.1c0.3,0.1,0.6,0.7,0.5,1.1       C1273.8,529,1273.4,529.3,1273,529.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2C38"),
                d:
                  "M1205,500c-1.7,0-2.1-1.5-2.9-2.4c-0.7-0.7-1.9-1.9-2.4-1.2c-2.8,4.3-8.4,0.1-11.1,4.2       c-1.1-2,0.6-3.2,0.4-4.6c6.1-1,12.2-2.3,18.4-1.4c0.6,0.1,1.7-0.4,1.9-0.1c2.4,3.6,3.5,3.6,3.2-1c0-0.3,0.6-0.8,1-1.1       c2.1-1.4,14.4-0.2,16.6,1.6c1.8,3.4-0.6,4.3-3,5.2c-4.5,1.7-9.1,0.6-13.7,0.5c-0.8,0-1.6-0.4-2.3,0.3       C1209,502.3,1207,500,1205,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902F3C"),
                d:
                  "M1211,500c3-1,5.7-2.6,9.2-1.1c3.4,1.4,9.1-1.8,9.8-4.9c0.7,0,1.3,0,2,0c0.7,1,1.3,1,2,0       c0.7,0,1.3,0,2,0c-0.4,2.6,1.1,2.5,2.9,2c2.5-0.7,5-1.1,7.1,1c-0.5,2.2-1.7,3.2-4.1,3c-2.5-0.2-5,0.2-7.4-0.1       c-3.6-0.4-6.1,0.7-7.5,4.1c-3.5,4-8.1,0.9-12.1,1.4C1213,505.7,1214.2,500.6,1211,500z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1211,516c-0.9-0.1-2.1,0.3-2.4-0.8c-0.4-1.1,0.8-1,1.4-1.2C1210.6,514.5,1212.2,514.6,1211,516z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902F3C"),
                d:
                  "M1209.3,503c0.5,0.3,1,0.5,1.1,0.8c0.2,0.8-0.5,1.1-1.1,1c-0.3,0-0.8-0.5-0.8-0.8       C1208.5,503.7,1209,503.4,1209.3,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2C38"),
                d:
                  "M1258.5,500.6c0.9-0.2,1.3,0.2,1.3,0.7c0,0.6-0.2,1.4-0.6,1.7c-0.8,0.6-1.1-0.1-1.1-0.8       C1258.1,501.6,1258.4,501,1258.5,500.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1286,494c0.8,0.1,1.6,0.5,2.3,0.3c2-0.6,3.7-0.5,4.7,1.7c0,0.3,0,0.7,0,1c-1,0.3-2,0.6-3,1       c-1.3-1.6-4.7,0.4-5-3C1285.3,494.7,1285.7,494.3,1286,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2832"),
                d:
                  "M1285,495c1.3,1.6,3.9,1.1,5,3c-1,0-2,0-3,0c-1.5,0.3-2.9,0.1-4-1C1283.4,496,1284,495.4,1285,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1283,497c1.5-0.2,2.8,0.3,4,1c-1.3,0.7-2.7,1.3-4,2C1282.4,499,1282.4,498,1283,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1301,494c1.6-1.9,3.7-2.1,6-2C1305.4,493.9,1303.3,494.1,1301,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("952F3B"),
                d:
                  "M1294,496c1.4-1.6,3.3-0.7,5-1C1297.6,496.7,1295.7,495.8,1294,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("651320"),
                d:
                  "M971,555c1.3,0,2.6,0,4,0c2.7,1.1,5.5,0.2,8.2,0.5c1.5,0.9,3.3-0.8,4.8,0.5l0,0       c6.4-0.5,12.7,0.7,19.1,1.1c12.2,1,24.3,2.7,36.4,4c9.9,1,19.7,2.4,29.5,3.1c2.1,0.6,5.6-0.1,5.8,2.5c0.2,2.8-3.4,3.1-5.6,3.8       c-2.3,0.7-4.8,1.2-7.2,1.6c-3.9,0.1-6.9,3.7-11,3c0.7-1.5,3.1-1.2,3.6-3.5c-3-0.2-6.7,3.2-8.9-1.2c-0.1-0.1-0.8-0.1-0.9,0.1       c-4.1,7.1-8.9,1-13.4,0.6c-3.2-0.3-2.3-4.9-5.4-5.7c-0.9,1.8,0.6,2.9,1.3,4.9c-3.3-1.9-8.8,0.1-9.4-2.1c-1-3.6-5-0.7-4.7-4.2       c-2.5,2.6,1.5,3.8,0.2,6c-1.8,1.1-1.1-2-2.6-1.7c-2.5,0.6-0.9-1.9-1.1-2c-2.1-0.4-4.3-0.7-6.5-0.7c-1.5,0-3.1,1.1-2.6-1.9       c0.4-2-1.1-0.8-1.8-0.6c-1.3,0.3-1.4,2.3-3,2.3c-1.6-1.2,0.8-2.9-0.8-4.4c-2.4,1.7-5.2,1-8.6,0.7c1.4-0.6,2-0.9,3-1.4       c-0.7-0.2-1.2-0.2-1.6-0.4c-4.6-1.5-10.1,3.9-14.1-2c-0.1-0.1-0.3-0.2-0.4-0.2c-3.4,4.4-7-0.2-10.6,0.2c-4.1,0.5-8.1-1-12-1.9       c-0.8-0.2-2-0.3-2.4,0.1c-4.3,3.9-8.8,0.6-13.3,0.7c-6.6,0.2-12.6-2.6-19.3-2.1c-1.8,0.1-4.7-0.3-7-0.7       c-2.1-0.3-5.3-2.6-5.1,2.4c0,0.8-1.1,1.1-2,0.6c-1-0.5-0.8-1-0.4-2c0.8-2.1,2.3-3.4,4.1-4.7c-3.4,0-7.2-2.1-8.9,3       c-0.1,0.2-0.9,0.4-1.3,0.3c-1.1-0.6-1.7-1.5-1.3-2.8c0.2-0.7,1.3-1.5-0.2-1.8c-0.9-0.2-1.8,0.3-1.9,1.2       c-0.1,1.5,0.9,3.9-1.7,3.7c-1.9-0.1-0.6-2.5-1.1-3.7c-0.4-0.9-1-1.2-1.9-1.3c0-0.3,0-0.7,0-1c2.2-1.8,4.5-0.1,6.7,0       c15.3,0.8,30.4,3.5,45.8,4.2C952.7,552.6,961.7,555.1,971,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1066,572c4.1-1.7,8.3-3.3,12.5-5c-1.4-1.7-3.6-0.2-4.5-2c3.9-2.2,7.4-0.1,11,1c0,0.3,0,0.6,0,1       c-1,2.2-1.8,4.9-5.1,2.4c-3.6,4.5-8.9,1.6-13.2,3.2C1066.6,572.6,1066.2,572.2,1066,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1623"),
                d:
                  "M1216.2,591.7c1.7-0.8,2.6,0.1,3.7,1.5C1218.2,593.3,1217.1,593.3,1216.2,591.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7D1625"),
                d:
                  "M1107.3,580.3c-0.8,0.2-1.2,0-1.2-0.6c0-0.4,0.4-0.7,0.6-1.1c0.5,0.3,1,0.6,1.5,0.9       C1107.9,579.8,1107.5,580.1,1107.3,580.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1032,598c1-2.3,3.1-2,5-2C1036.3,599.2,1033.8,597.6,1032,598z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1017,588c-0.4,1.6-0.7,3.2-1.2,4.7c-0.3,1.2-1.4,1.3-2.4,1.1c-0.8-0.1-1.2-0.6-1.2-1.3       c0-1,0.4-1.4,1.5-1.9c2.7-1.4-0.1-1.2-0.7-1.7C1014,587.5,1015.6,588.1,1017,588z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("621220"),
                d:
                  "M942.4,570.8c2,0.2,4.3-0.7,5.4,1.8c0.2,0.5-0.2,1.7-0.4,1.7C944.8,574.6,944.5,571.5,942.4,570.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1022,586c-0.7,3.2-3.2,1.6-5,2C1018.1,586,1020.4,586.9,1022,586z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1042.4,581.4c0-0.9,0.4-1.2,0.9-1c0.5,0.2,1,0.7,1.3,1.2c0.2,0.5-0.2,0.9-0.8,0.6       C1043.3,582,1042.8,581.7,1042.4,581.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("761522"),
                d:
                  "M1029,595c1.2,2.8-0.8,1.8-2.3,1.8C1027.6,596.1,1028.3,595.6,1029,595L1029,595z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE757A"),
                d:
                  "M959,345c-2,0.3-4.2-0.7-6.5,1.2c2.6,1.4,5.2,0.3,7.5,1c0.1,1.4-2,0.2-1.9,1.6c2.2,0.9,4.9-0.8,7,1.2       c0.2,1.9-1.2,1.6-2.2,1.5c-1.8-0.1-3.5-0.3-5.3,0.1c-0.5,0.1-0.9,0.1-1.4,0c-2.1-0.7-4,0.2-6,0.8c-3-1-6.2,0.1-9.1-1       c-1.8-2-4.3-2-6.7-2.4c-1.6-0.3-3.6-0.9-1.2-3c6.4-0.1,12.9,0.5,19-2C954.3,344.4,956.9,343.1,959,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DF7E85"),
                d:
                  "M933,346c-0.8,3.9,2.2,1.6,3.4,1.9c2,0.5,4.9-0.7,4.6,3.1c-1.6,3-3.9,1.1-6,1c-1,0-2,0-3,0       c-5.6-0.9-11-3-16.7-3.1c-1.8-0.1-2-1.4-1.3-2.9C920.3,346,926.7,346,933,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("721426"),
                d:
                  "M1018,362c-4.4-0.1-8.7-0.3-13.1-0.3c-1.9,0-1.1-0.9-0.9-1.7c5.5-3.6,11.3-2.3,17-0.9       c1.2,0.3,2.6,1.3,3.7,0.8c8.1-3.7,16.8-0.5,24.9-2c22.4-4.1,44.9-0.7,67.4-1.9c0,0.7,0,1.3,0,2c-0.8,2.8-0.8,2.8-7,2.2       c-0.1,1.1,2,0.7,1.4,2.4c-3-0.2-5-3.8-8.4-2.8c-2,0.6-5.1-1.7-5.7,2.5c-0.1,0.7-1.4,0.8-1.6,0.4c-1.7-3.3-4.1-0.9-6.2-0.8       c-3.9,0-7.6,0.5-11,4.4c1.1-3.6,0.5-5.2-2.8-3.6c-1,0.5-1.6-0.1-2.6-0.7c-1.8-1.2-4.3-1.9-5.9,0.1c-2.5,3.2-5.3,1.8-7.8,0.8       c-2.8-1.1-4.9-1.2-6.9,2.5c0.1-4.1-1.4-4.7-4.6-4c-3.4,0.7-7.2,0.1-10.1,2.7c-0.6,0.5-1.5,1.1-2.2,0.3c-0.8-1,1.5-1.4,0.7-2.5       C1030.2,363.9,1024.1,363.4,1018,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961929"),
                d:
                  "M1135,356c-3.3,0-6.6,0-10,0c-8.1-1-16.2-2-24.4-3c-2.6-0.3-5.3,0.9-7.7-1c4.3,0,8.7,0,13,0       c1-0.9,2.3-1.3,3.6-1.4c8.4-0.4,16.9,0.5,25.4-0.6c2.2-0.4,5.1,1.2,6.4-2.2c0.1-0.3,1-0.7,1.2-0.6c3.7,3,6.9-1.1,10.4-0.9       c-1.3-0.5-2.7-1.1-4.1-1.7c0.7-1.2,2.6-0.3,3.1-1.7c1-0.3,2.1-0.5,3.1-0.8c6-0.1,11.9-0.1,17.9-0.2c0,0.3,0,0.6,0,1       c-0.9,1.1-2.2,1.2-3.4,1.3c-2,0.3-4.2-0.7-6.2,0.7c0.8,2.4,5.1,1,4.3,3.8c-0.6,2.1-3.7,1.9-5.7,2.4c-3.2,0.7-6.3,0.6-7.4,4.9       c-0.4,1.6-4,1.6-4.8,0.3c-1.8-2.9-3.9-1.6-5.7-0.9C1141.1,356.8,1138.1,356.8,1135,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("991F31"),
                d:
                  "M1022,354c3,0,6,0,9,0c-0.7,0.3-1.5,1-2.2,0.9c-8.3-0.6-16.5,1.5-24.8,1.1c-4.9,1.4-10.1-0.4-15,1       c-1,0-2,0-3,0c-3.2,1.3-6.8-0.4-10,1c0,0,0,0,0,0c-1.4,0-2.4-0.7-3-2c5.5-0.1,11-0.6,16.4-1.1       C1000.2,353.8,1011.1,354.2,1022,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D2C"),
                d: "M989,357c4.9-2.2,10-0.4,15-1C999.1,358.2,994,356.5,989,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("911D2C"),
                d: "M976,358c3.2-2,6.7-0.6,10-1C982.8,359,979.3,357.6,976,358z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC8187"),
                d:
                  "M935,352c2-0.3,4.3,0.8,6-1c3.4,0,6.7-0.2,10,1c1.6-0.9,3.1-1.9,5-1c0.3,0,0.7,0,1,0       c6.1,0.1,12.2,0.6,18.2-0.9c1.9-0.5,4,0,5.8,0.9c0.6,0,1.3,0,1.9,0c3,0.5,6.2-1,9,1c-1.9,0-3.8,0.1-5.8,0.1       c-3.7,1.2-7.6-0.4-11.2,0.9c-7.4,0.6-14.8,1.3-22.2,1.9c-4.9,0-9.9,0.1-14.8,0.1c4.1-2.4,8.8-0.1,13.5-1.5       C945.7,352,940.1,354.4,935,352z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E48085"),
                d:
                  "M918,356c6.3-2.3,12.8-0.6,19.2-1C930.9,356.5,924.4,356,918,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681321"),
                d:
                  "M933,371c-0.3,0.3-0.7,0.7-1,1c-1.3,0.8-2.6,1.4-3-0.9c15.2-9.6,31-7.9,47-2.2c1.9,1.8,3.9,3.6,5,6.1       c-4.1,1.4-8.1,0.4-12-0.8c-0.8-3.8-3-5.3-7-5.1c-7.3,0.3-14.5-0.2-21.8,0.5C937.7,369.8,935.6,372,933,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101F"),
                d:
                  "M929,371.1c0.8,1.1,1.9,0.9,3,0.9c0.2,0.7,0.9,1.7-0.4,1.9c-1.6,0.3-2.9-0.3-3.6-1.9       C928.3,371.7,928.7,371.4,929,371.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("781620"),
                d:
                  "M958.9,362c1.7,0.2,3.6-0.7,5.1,1C962.3,362.8,960.4,363.5,958.9,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E1B2C"),
                d: "M711,362c-2.8,1.9-6,0.5-9,1C704.8,361,708,362.4,711,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("60141B"),
                d:
                  "M565.1,358.9c-6.4-0.9-12.8-1.8-19.1-2.7c0,0,0-0.4,0-0.4c5.7-2.2,11.4-1.5,17,0.2       c6.1-0.1,12.2-0.4,18,2c2.3,0.7,4.7,1.3,7,2c2,2.9-1,2.3-2.1,3.1c-1.5,0.5-2.8,0.1-3.7-1.2l-0.1,0c-2.8-0.7-5.5-1.6-8.4-1.6       C570.9,359.7,567.8,360.2,565.1,358.9L565.1,358.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF4755"),
                d:
                  "M576,369.9c-0.3,0-0.7,0-1,0c-2.7-0.9-5.4-0.2-8.1-0.4c-1.1-0.1-2.7,0.6-3.1-1.3c1.8-2,4.2-1.5,6.5-1.4       c4.6,0,9.2-0.2,13.5-2.2c0.7-0.4,1.6-0.5,2.4-0.6c0.1,3.9-0.1,4.1-5,5.2C579.5,370.1,577.6,368.9,576,369.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M586.1,363.9c-0.4,0.4-0.8,0.8-1.3,1.2c-1.9-0.1-3.9,0.4-5.7-0.6c-0.4-0.4-0.5-0.8-0.4-1.3       c1.2-0.3,2.6,0,3.4-1.3c1.4-0.2,2.5,0.7,3.7,1.2C585.9,363.3,586,363.6,586.1,363.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3B48"),
                d:
                  "M576,369.9c1.5-1.4,3.4-0.7,5.1-0.8c-0.1,0.3-0.1,0.6-0.2,0.8C579.3,369.9,577.6,369.9,576,369.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7B1621"),
                d: "M547,342c-4,0-8,0-12,0C539,340.4,543,340.4,547,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M981,351c-6.5-0.2-12.8,1.7-19.3,1c-1.6-0.2-3.4,0.5-4.7-1c2.4-2.7,5.5,0.7,8-1       c3.1-0.1,6.2,0.1,9.3-0.8C976.6,348.5,979.2,348.9,981,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E1A23"),
                d:
                  "M1135,350c-2.6,2.1-5.6,2.1-8.8,2c-6.7-0.1-13.5,0-20.2,0c-0.3-2.5,0.1-3.9,3.3-3.6       c6.3,0.6,12.7-0.9,19,0.9c1.6,0.5,1.5-0.7,2-1.4c1.1-1.5,2.8-1.1,4.1-0.8C1136.3,347.5,1134.7,349,1135,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M975,353c3.6-2,7.5-0.7,11.2-0.9C982.5,353.3,978.8,352.9,975,353z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D34F59"),
                d:
                  "M1126,340c0.7,0,1.3,0,2,0c-2.8,2-6,0.6-9,1c0-0.3,0-0.7,0-1c1,0,2,0,3,0       C1123.3,339.3,1124.7,339.2,1126,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C84852"),
                d:
                  "M1126,340c-1.3,0-2.7,0-4,0C1123.3,338.6,1124.7,337.4,1126,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1826"),
                d:
                  "M1359.2,384.1c-1.4,0.8-2.6,2.2-4.7,1.4C1355.8,383.7,1357.2,383.1,1359.2,384.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("881827"),
                d:
                  "M1135,356c5.7,1.1,10.3-4.1,16.2-2.6c1.3,1-2.7,1.6-0.5,2.5c0.8,0.3,3,1.4,3.5-1.1       c0.8-3.4,1.8-3.9,5.3-4c2.6-0.1,4.7-2.4,8-1.7c-1.4-1.4-2.6-1.8-3.9-1.8c-0.8,0-2.9,1.4-1.4-1c0.7-1.1-2.4-3.6,1.3-3.3       c1.8,0.1,3.6,0,5.5,0c1.7,1.6,3.9,1.3,6,1.6c1.7,0.2,3.6-0.1,5,1.4c-0.2,1.3,0.6,3.1-2.3,2.3c-2.3-0.6-5.9-1.7-5.4,3.2       c-1.8-0.2-1.4,3-3.2,2.3c-6.2-2.7-4,1.4-3.6,4.3c-5.5,0-11.1,0-16.6,0C1144.2,358,1139.5,357.9,1135,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("751626"),
                d:
                  "M1180,346c-2.4-0.1-4.8-0.6-7.2-0.2c-2.6,0.4-3-1.2-3.8-2.7c1.3,0,2.6,0,3.9-0.1c2.8,0,5.5,0.2,8.3,0       c3.1-0.2,4.1,1.2,3.7,4C1183.2,347.1,1181.5,346.9,1180,346z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("421115"),
                d:
                  "M563,356c-5.7,0.9-11.4-0.4-17-0.2c-3.7-1.9-7.8-0.7-11.6-1.5c-3.4-0.7-6.6-1.2-9.9-3.3       c6-2,11.4-5.3,17.7-1.4c1.2,0.8,3.3,0.7,4.9,0.3c6.3-1.6,11,2.7,16.4,4.1C565.3,354.5,562.9,355.3,563,356z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8F1A2B"),
                d:
                  "M578.8,363.1c0.2,0.2,0.3,0.5,0.3,0.8c-6.3,4.6-13.5,2.9-20.5,3.1c-4.2-2.4-9-2.5-13.6-2.5       c-9.4,0-18.6-1.2-27.9-1.8c-4.7-0.3-9.4,0.1-14.1-0.7c0.3-1,0.7-2,1-3c14-0.4,27.9,1.5,41.8,2c2,0.1,4,0.1,6,0.1       c2.7,1.1,5.5-0.2,8.2,0.8c1.6,0.1,3.2,0.1,4.8,0.2c3.3,1.1,6.9-0.3,10.2,0.8C576.2,363,577.5,363.1,578.8,363.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M574.2,359.9c2.8,0.2,5.5,0.3,7.9,2c-4.7-0.8-9.6-0.2-14.2-1.8C570,359.2,572.1,359.3,574.2,359.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M575,362.9c-3.4,0-6.9,0.5-10.2-0.8C568.2,362.3,571.7,361.1,575,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DC6A6F"),
                d:
                  "M574.2,359.9c-2.1,0-4.1,0.1-6.2,0.1c-1.1-0.1-2.3,0.2-2.9-1.2C568.1,358.9,571.2,358.5,574.2,359.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M560,361.9c-2.8,0-5.6,0.6-8.2-0.8C554.5,361.2,557.4,360.2,560,361.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E67379"),
                d:
                  "M557,359c1.7,0.2,3.6-0.6,5,0.9C560.3,359.8,558.4,360.6,557,359z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93202F"),
                d:
                  "M500.9,357.8c-1.6,3.2-8.1,5.1-11.2,2.6c-1.8-1.4-4.1-1.9-5.7-3.5c0.7,0,1.4-0.1,2.1-0.1       C491,358.1,495.9,358.5,500.9,357.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C7464F"),
                d:
                  "M1601,316c-0.3,0.3-0.7,0.7-1,1c-3.1,2.8-6.5-0.7-9.5,0.6c5.4-0.2,5.4-0.2,4.8,3.1       c-2.9,1.1-5.6,0.9-8.3-0.7c-4.7-0.4-9.5,1-14-1c-2.2-1.2-5.1,2.6-7-1c2.3-0.6,4.6-1.3,7-1c5.6,0.6,11.1-1.2,16.7-1       c1.4,0,2.2-0.6,2.3-2C1595.3,313.4,1597.6,317.2,1601,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D05762"),
                d:
                  "M1533,324c-1-0.3-3.4,0.7-2-2C1532.3,322,1533,322.7,1533,324z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DE5B65"),
                d: "M1572,341c-2.8,2-6,0.6-9,1C1565.8,340,1569,341.4,1572,341z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("961D2B"),
                d:
                  "M978,486c-6.4-1.8-13,1.5-19.5-1.5c-2.1-1-6.4-0.7-9,0.2c-6,1.9-11.7-0.6-17.5-0.2       c-10.2,0.7-20.5-0.5-30.8,1.1c-3.8,0.6-8.2,1.8-12.2-0.6c0-2.3,0-4.7,0-7l0,0c0.7-0.6,1.3-0.6,2,0l0,0c0.9-0.4,0.2,2.4,2.4,0.8       c3.9-2.9,9-1.9,13.3-1.1c4.5,0.8,8.5-1.1,12.8-0.5c2.9,0.5,5.7-1.4,8.5-0.2c6.3-0.7,12.6,0.1,18.8,0c1.4,0,2.5-0.5,3.8-1       c3-1.3,6.1-2.6,9.1,0.1c0.3,0.3,1,0.7,1.3,0.5c7.5-2.7,15.5,1.3,22.9-1.7c3.5,1.2,6.7-0.4,10-1c0.2,1.2-0.3,3.2,1.9,2.5       c6.7-2.4,12.9-0.2,19.1,1.5c-1.3,1-2.3,3.7-4.5,1.1c-0.2-0.2-0.6-0.3-0.9-0.4c0.7,4.4-3.2,2.1-4.7,3.2       c-2.3,1.8-5.2-0.7-7.5,0.9c-0.1,0.1-0.3,0.1-0.4,0.2c-2.1,2.1-4.5,3-7.5,2.5C985.6,484.9,981.9,487.1,978,486z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M928,477c-5.8,2.4-12.5-0.1-18.2,3.1c-2.4,1.4-0.7-2-2.2-2c-4.7,0-9.5-0.4-14,1.5       c-0.8,0.4-1.1,2-1.7,3.2c-1.6-1.5,0.4-3.4-0.9-4.8c1.8-2.7,3.7-3,7.1-2.3c2.9,0.6,7.6,4,9.6-2c0.3-1,1.4-0.9,2.1-0.5       c7.4,3.6,7.4,3.6,15.8,2.1C926.8,475.1,929,473.9,928,477z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891729"),
                d:
                  "M1052.4,469.8c-4.9,0.6-9.5-3.1-14.8-2c2.4-1.2,4.8-3.4,7-3.2c2.7,0.2,5.3,2.5,8,3.9       C1052.5,468.9,1052.4,469.4,1052.4,469.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("891825"),
                d:
                  "M994,474c-3.1,2.4-6.4,3.7-10,1C987.3,474.3,990.5,472.5,994,474z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A1B27"),
                d:
                  "M891,478c-0.7,0-1.3,0-2,0c0.2-1.2-0.6-2.6,0.9-3.6C890.3,475.7,890.6,476.8,891,478z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2C38"),
                d:
                  "M1089,496c-0.2,1-0.6,2.3-1.8,1.4c-4.6-3.4-3.6,0.2-3.4,2.6c-1.7,1.2-2.7-5.5-4.5-0.1       c-0.2,0.7-0.6,0.5-1.3-1.9c-0.5-0.6-1.1-1.1-2-1c-0.8-0.2-2.2-0.6-2.2-0.5c-1.2,2.7,2.4,1.9,2.7,3.4c-0.2,1.1-1.1,1.3-1.6,1.1       c-5-2.3-9.3,1.1-13.9,1.6c-3.6,0.4-6.9,1.6-8.3-3.9c-1-3.9-5.8-1.1-6.6-0.5c-3.9,3-4.9-1.2-7.1-2.1c1.5-3.1,2.5-5.7,6.7-1.9       c1.5,1.4,6.2-0.6,9.4-1.2c0.9-0.2,2.2-1.2,2.7-0.3c2,3.7,4.9-0.1,7.1,1c0.2,0.1,0.6-0.2,0.8-0.4c2.2-2.4,4.1-2.6,6.3-0.6       c2.2,1.9,6.3,1,7.6-1.8c0.7-1.4,1.8-0.9,2.5-0.5c1.1,0.7,1.9,1.7,2.8,2.7c1.2,0.2,1.3,1.3,2,2       C1087.4,495.8,1088.2,496,1089,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8E2C38"),
                d:
                  "M1234,494c-0.1,1.2,0.3,2.6-0.8,3.6c-1.8-0.9-0.9-2.4-1.2-3.6C1232.7,494,1233.3,494,1234,494z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2C38"),
                d:
                  "M1039,496c-6.1,0.6-10.9,6.6-18.4,3.3c-2.8-1.2-7.9,0.3-11.8,1.2c-2.3,0.6-3.3,0.2-3.6-1.4       c-0.6-2.9-3-0.8-4.4-2c-2.9-2.4-1.7,1-2.4,2.1c-0.8,1.4-2.3,2.1-3.8,1.1c-5.1-3.4-9.7,0.5-15,0.5c-1-1.5,2.3-2,1.6-4.1       c-2.4,1.4-4.8,0.2-7.3,0.3c-0.9,0.3-1.3-0.3-1.6-1c-0.2-2.6,1.6-2.8,3.5-2.9c4.4-0.2,8.7-0.7,13.1-0.1c2.4,0.8,4.4,1.4,7.2-0.1       c2.5-1.3,5.9-1.5,9.2,1.7c2.7,2.7,8.4,1.7,11.9,0c4.6-2.2,8.5-1.3,12.6,0c1.2-1.4-1.4-2.2-0.2-3.2c1.2-1,2.1,0.5,3.1,0.7       C1035.5,492.6,1036.6,495.4,1039,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2430"),
                d:
                  "M989,493c-0.1,1.4-0.9,1.2-2.1,1.2c-4-0.2-8.1-0.1-12.1-0.1c-1.3,0-1.7,0.8-1.8,1.9       c-4.9,1.6-10,1.5-15,2c-0.3,0.3-0.7,0.7-1,1c-2.3-0.2-1.7-1.6-1.3-3c1.5-1.5,3.6-1.5,5.4-2.1c10.6-2,21-4.6,31.6-6.7       c1.8-0.3,3.5-1,5.3-0.1c1.5-1,3.2-1.1,5-1c0.9,2.1,2.3,1.4,4.1,1.2c1.9-0.1,3.9-2.5,5.9-0.3c-5.8,3.7-12.3,3-18.7,3       C992,490,989.3,489.5,989,493z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2936"),
                d:
                  "M1087,495c-1-0.4-1.6-1-2-2C1087.7,491.6,1086.7,494,1087,495z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9D2D37"),
                d:
                  "M998,487c-12.2,3.2-24.5,6-37,8c-1.6-0.4-3.3,0.4-4.9-0.3c-1.5-0.7-2.4-1.7-0.1-2.7       c3.4-1.8,7.3-1.3,10.9-1.7c4.3-0.5,7.6-2.4,11.1-4.3c4.3-1.2,8.5-2.7,13.1-1.5c2.3,0.6,3.6-2.3,5.9-1.5       C997.3,484.3,997.7,485.7,998,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8B2430"),
                d:
                  "M1013,484c-2.5,1.5-5.3,1.5-8,2C1007.2,483.4,1010.2,484.1,1013,484z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("791525"),
                d:
                  "M1025.9,438.9c0.6-0.6,1-1.1,1.5-1.3c0.2-0.1,0.9,0.5,0.9,0.8c0.1,0.7-0.4,1.2-1.1,1.3       C1027,439.7,1026.6,439.3,1025.9,438.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("681623"),
                d:
                  "M962.9,409.9c-1,0-1.9,0.1-2.9,0.1c-7.3,0-14.7,0.7-21.9-1.2c-4.4-2.5-9.4-4.1-12.2-8.8       c1.3,0.3,2.7,0.6,4,1c9.1,3.4,18.3,5.4,28,3c0.3,0,0.7,0,1,0c8.6-2.2,17.2-4.6,26-6c0.3,0,0.7,0,1,0c1.9-0.8,3.8-1.4,5.5-2.8       c1.5-1.3,3.4-2.6,5.7-1.2c0.1,0.2,0.2,0.5,0.3,0.7c0,0.1-0.2,0.2-0.4,0.3C986.5,401.8,975.3,407.2,962.9,409.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("480E1B"),
                d:
                  "M925,392c4,0,8-0.1,12-0.1c8.1,0.9,16.2,0.5,24.3,0.5c1.8,0,3.7-0.7,4.8,1.5c-0.1,0.3-0.1,0.9-0.3,0.9       c-7,1.2-13.5,3.8-21.3,2.5c-6.6-1.1-12.4-5.9-19.5-4.4c-0.3-0.2-0.4-0.4-0.3-0.6C924.8,392.1,924.9,392,925,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56111A"),
                d:
                  "M966,394c-6.2,0-12.4,0-18.6,0c-3.6,0-7.1-0.4-10.4-2c1.4-0.3,2.9,0.3,4.1-0.9       c3.9-2.7,8.3-0.9,12.4-1.5c1.7,0,3.5,0,5.2,0c0.8,0,1.7,0,2.5,0c4.2,0,8.3,0.9,12.4,1.6c1.1,0.6,1.8,1.4,1.4,2.8       C972,394,969,394,966,394z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("500F1B"),
                d:
                  "M958,404c-7.7,3.9-21.8,2.4-28-3C939.3,402.7,948.6,403.3,958,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("56111A"),
                d:
                  "M997.1,394c-4.1,0.2-6.7,4.7-11.1,4c1.1-0.9,2.3-1.7,3.6-2.8c-2.9-2.1-5.9-0.8-8.6-1.2       c-0.7-4,2.5-3,4.4-3.2c3.5-0.5,7.3,0.7,10.4-2c0.6-0.6,1.3-1,2.1-0.9c0.7,0.7,1.4,1.4,2,2.1C998.2,390.7,997.8,392.5,997.1,394       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("500F1B"),
                d:
                  "M985,398c-8.6,2.3-16.8,6.2-26,6c0-0.6-0.1-1.8,0-1.8C967.7,401.1,976.1,397.6,985,398z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5B111F"),
                d:
                  "M925,392c0,0.3,0,0.6,0,0.9c-8.7,1.3-17.4,2.6-26-1C907.7,392,916.4,392,925,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("671419"),
                d:
                  "M996.9,388.8c-1.5,3.8-4.8,2.7-7.7,3.3c-2.8,0.5-6.3-2-8.2,1.9c-2,0-4,0-6,0c-0.3-0.7-0.7-1.3-1-2       c0.6-1,1.5-1.6,2.6-1.9c3-0.7,6-0.3,9-0.4c2.3-0.1,4.6,0.3,6.9-0.5C993.9,388.8,995.4,387.9,996.9,388.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("871826"),
                d:
                  "M909,381.1c0.6-0.3,1.3-0.7,1.9-1c0.2,0,0.4,0,0.7,0c1.4-0.1,2.7-0.1,3.7,1.2c0.2,0.8,0.1,1.6,0.2,2.4       c0.2,1,0.6,2,1.8,2.1c1.3,0.1,1.4-1.1,1.7-2c0.2-0.8,0.5-1.6,1.3-1.9c2,0.5,3.9,1.1,6,0.9c8.1,0,16.3,0,24.4,0       c4.3-0.2,8.5,0.8,12.8,0.4c2.9-0.3,5.5,2.6,8.7,2.9c1.9,0.2,1.1,2-0.2,2.8c-1.7,0.9-3.6,0.7-5.4,0.7       c-12.1-0.1-24.2,0.5-36.2-0.9c-0.8-0.1-1.7-0.1-2.4,0.4c-5.7,0-11.3,0-17,0C911.1,386.2,907.9,384.2,909,381.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("941C27"),
                d:
                  "M928,388.9c1.5-1.6,3.4-0.9,5.2-0.9c11.4-0.1,22.9,0,34.3,0c1.6,0,3.2,0,5.8,0       c-7.7-4.2-15.1-3.6-22.3-4c-0.3-0.7-0.1-1.2,0.5-1.6c4.5-1.6,9.1-0.5,13.6-0.8c9.3,0,18.6-0.7,27.8,1.9       c1.7,0.3,3.4,0.5,4.9,1.4c0,0,0.4,0.1,0.4,0.1c-0.1,0.7-0.2,1.4-0.3,2.1c-8.6,4.3-18,3.1-27,3.1c-11.6,0-23.3,0.3-34.9-0.6       c-1.3-0.1-2.7,0.3-3.9-0.5C930.7,389,929.4,389,928,388.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("B9434C"),
                d:
                  "M932.1,389.1c13.7,0,27.5-0.2,41.2,0c8.3,0.1,16.4-0.8,24.6-2c0.1,0.3,0.1,0.5,0.1,0.8       c-0.3,0.3-0.7,0.6-1,0.9c-1.3,0.4-2.6,0.8-3.9,1.2c-2.2,1.2-4.8-0.4-7.1,0.9c-3.3,0-6.6,0-9.9,0.1c-3.3,0.7-6.5-0.3-9.8-0.5       c-1.8-0.1-3.6-0.6-5.3,0.4c-0.7,0-1.3,0-2,0c-1.7-0.9-3.3-0.9-5,0c-4.3,0-8.7,0-13,0c-2.1-2-4.5,0-6.8-0.6       C933.2,390.2,932.5,390,932.1,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5A292B"),
                d:
                  "M901,385.9c-2.3-3.7,0.6-4.3,3.1-4.5c1.5-0.1,3.1,0.8,2.8,2.7c-0.5,3.1-3.2,1.4-4.8,2       C901.7,386,901.3,386,901,385.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("6E1423"),
                d:
                  "M1034,374c-5.3-1.1-10.9-1-16-3C1023.8,369.6,1029,371.2,1034,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("7A1526"),
                d:
                  "M1010.9,373.4c1.6-1.3,3.4-0.7,5.2-0.4c0.7,0.1,1.5,0.3,1.1,1.1c-0.3,0.9-0.9,1.8-1.7,2.3       c-0.6,0.5-1.3,0-1.3-0.8C1014.6,372.7,1011.6,374.9,1010.9,373.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56C72"),
                d:
                  "M993.8,384.1c-9.5-0.5-19.1-1.8-28.6-1.2c-0.3-0.2-0.4-0.5-0.4-0.7c0-0.3,0.1-0.4,0.2-0.4       c2-2,5,0.3,7-1.7c5.1-0.5,10,0.3,15,1.1c1.5,1.1,3.4-0.3,4.8,0.9c1.1,1.4,2.8,0.3,4.1,1C996,385,994.9,384.5,993.8,384.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("581119"),
                d:
                  "M969,374c4,0.6,8.1-0.6,12,1c1.3,0,1.5,0.7,1.4,1.9c-0.2,1.5-1.3,1.1-2.2,1.1c-2.7,0-5.5,0-8.2,0       c-0.5-2.2-2.5-2.9-4-4C968.3,373.7,968.7,373.6,969,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56C72"),
                d:
                  "M931,378c6,0,12,0,18,0c0.9,0,1.8,0.1,2.8,0.1c6,1.8,12.4,0.1,18.5,1.8c-3.4,1.9-7.2,1.2-10.9,1.5       c-2.7-0.1-5.5,0.1-8.2-0.3c-4.4-1.3-8.8-0.5-13.2-0.7c-2.4-0.2-4.9,0.6-6.9-1.4C931,378.6,931,378.3,931,378z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M958.9,380c3.8,0,7.5-0.1,11.3-0.1c0.6,0,1.2,0.1,1.8,0.1c0.3,1,0.7,1.9-1,2c-2.1,0-4.2,0.1-6.3,0.1       c-1.1,0.6-2.2,0.3-3.3,0.3c-0.9-0.3-1.8-0.5-2.5-1.1C958.7,380.9,958.7,380.5,958.9,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45867"),
                d:
                  "M991.9,382c-1.6-0.2-3.5,0.6-4.8-0.9C988.7,381.1,990.5,380.5,991.9,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D45867"),
                d:
                  "M993.8,384.1c0.8-0.2,1.7-0.2,2.2-1.1c1.2,0.1,1.6,0.8,1.8,1.9C996.3,385,995,385.1,993.8,384.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3E49"),
                d:
                  "M1755.7,355c0.8-2.4,2.4-2.1,3.8-2c1,0.1,2.9-0.8,2.7,1c-0.3,2.7-1.8,0.4-2.8,0.4       C1758.3,354.4,1757.2,354.7,1755.7,355z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C24651"),
                d:
                  "M1745,362c-2.1,0.1-3.9-0.4-3.9-3.6C1742.9,359.5,1744.8,359.8,1745,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D74753"),
                d:
                  "M1643,354c-1-0.3-2-0.7-3-1c-1.3-2-1.5-4.5-1.3-6.6c0.2-3.2,1-6.1-3.2-7.1c0.2-0.4,0.4-0.8,0.5-1.2       c2.6-1.2,5.3-1.6,8.2-1.1c1.4,0.3,2.7,0.2,4.1-0.1c8.7-0.5,17.4-0.4,26.2-0.1c3.1,1.1,6.5,0.6,9.5,2.1c2.2,1,3.4,2,1.1,5.7       c4-3.1,6.2-3.4,8.4,0.8c1.4,2.6,5.4,1.8,8.3,0.8c3.8-1.3,5.2,0.2,5.3,3.9c-3,0-6,0-9,0c-1.5-1.2-3.5,0.2-5-1       c-8.3,1.6-16.7,0.8-25,1c-2.9,0.1-5.8-0.3-8.6,1.5c-1.9,1.2-4.4,0.4-6.8-0.1C1649.1,350.8,1645.3,349.7,1643,354z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("C44652"),
                d:
                  "M1587,320c3,0,6,0,9,0c4.2-0.3,8.4-1.3,11.9,2.2c0.7,0.7,1.9,0.5,2.9,0.5c2,0,4.1,0.1,5.8,1       c3.6,1.7,7.3,2.8,11.4,2.3c3.3,2.9,3.2,3.5-0.3,5.5c-1.5,0.8-3.2,0.8-5.8,1.4c2.6,0.4,4.5,0.2,5.4,2.1c0,0.8-0.3,1.3-1.3,1       c-3.3,0-6.7,0-10,0c-1.2-1.1-2.2-4.3-3.9-0.4c-0.1,0.3-1.1,0.5-1.3,0.3c-3.2-2.8-7.2-1.2-10.7-1.9c-1.1-0.2-2-0.6-1.5-1.9       c1.8-4.9-2.9-5.5-4.9-5.4c-3.6,0.1-5-0.7-5.1-4.2C1588.5,321.6,1587.6,320.8,1587,320z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D34855"),
                d:
                  "M1626,336c0.3-0.3,0.7-0.7,1-1c3.5-2.2,7.2-1.7,11-1c18.4,0,36.6-2.3,55-2c0.8,0.5,1.6,1,1,2.2       c-1.1,2.7-3.4,2.8-5.9,3.1c-4,0.4-8.2-1.4-12.1,0.7c-9.7,0-19.3,0-29,0c-0.7-0.2-1.3-0.2-2,0c-3,0-6,0-9,0       c-0.2-0.7,2.3-1.7,0.3-1.8c-2.6-0.3-5.6-1.1-8.1,0.7C1626.8,337.9,1626.2,337.6,1626,336z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD4E59"),
                d:
                  "M1581.1,338.1c0-1.7,0-3.3,0-4.9C1581.9,334.8,1582.4,336.5,1581.1,338.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44550"),
                d:
                  "M1676,338c0.2-1-0.5-2.5,1.6-2.3c2,0.2,3.9,0.3,5.9,0.2c3.6,0,7.4,0.7,10.5-2c6-1.6,12-1.7,17.8,0.5       c3.1,1.2,3.1,2,0.2,5c3.3-1.3,5.4,0,7.5,1.7c1.4,1.6,3.3,1.4,5.1,1.2c1.9-0.2,3.8-0.5,4.7,1.6c0.8,1.9-1.1,2.6-2.1,3.6       c-0.7,0.7-1.2,1.6-1.9,2.3c-1.3,1-3.1-0.2-4.3,0.9c-1.3,0-2.7,0-4,0c-2.3,0.7-4.7,0.8-7,0c1.7-2,4.5-0.1,6.8-1.9       c-3.7-2.3-6.7-0.7-9.8,0.9c-1.3-2.6-2.5-3.7-5.9-2.3c-2.5,1-6.2,1.5-8.8-1.3c-0.5-0.5-1.8-0.2-1.5-1.5c0.9-4-0.9-2.1-2.4-1.1       c-0.5,0.4-1,0.9-1.6,1.2c-2.1,1.2-3.1-0.8-3.2-1.8c-0.5-3.6-0.3-3.5-5.8-3.7C1677.2,339.5,1676.6,338.5,1676,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434E"),
                d:
                  "M1710,351c2.3,0,4.7,0,7,0c-2.5,2-5.3,0.6-8,1C1709.3,351.6,1709.7,351.3,1710,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1645,357c-2-0.1-3.1-0.8-2-3C1645,354.1,1645,355.5,1645,357z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("D44550"),
                d:
                  "M1693,349c1.7,0.2,3.6-0.7,5,1C1696.3,349.8,1694.4,350.7,1693,349z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1610,316c-1.7,1.5-3.3,1.5-5,0C1606.7,316,1608.3,316,1610,316z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BC3E49"),
                d:
                  "M1660.5,322.8c0.1,0.9-0.7,1-1.3,1.1c-0.7,0.1-1.4,0-1.6-0.7c-0.2-0.9,0.6-1,1.2-1.1       C1659.5,322,1660.1,322.1,1660.5,322.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A43740"),
                d:
                  "M1646.3,317.5c-1,0.8-2.3,0.8-2.6-0.1c-0.5-1.3,0.7-1.1,1.4-0.8       C1645.5,316.8,1645.8,317.1,1646.3,317.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A52D3B"),
                d:
                  "M758,514c-2.1-0.1-4.5-3.5-6.3,0.9c-0.6,1.3-2.6,3.1-3.9-0.1c-0.4-1-1.1-1.7-2.5-1.6       c0.5,2.7,0.9,5.4,1.4,8.2c-2.3,0.2-2.9-2.8-3-2.6c-3.9,5-4.7-3.1-7.7-1.8c-1.4,0.6-2.9,0.7-3.5-1.4c-0.1-0.2-1.2-0.5-1.3-0.4       c-1.9,4-6.9,3.2-9.6,6.3c2.9-0.6,5.6,0.2,8.2,0.5c0.8,0.1,2.2,0.1,2.3,0.5c2.1,6,7.2,2.8,10.9,3.6c2.2,0.5,4.6-0.2,6.7,0.9       c1.3,0.7,1.2,1.9,1.2,3c-2,2.4-4.8-0.4-7,1c-2-2-4.6-1.6-7-1.4c-6.5,0.4-12.6-2.5-19-2.6c0-0.3,0-0.7,0-1       c-7.1-1.6-14.2-2.4-21.4-2.3c-2.9,0.1-4.7-1.7-4.2-4.3c0.5-2.5-0.9-6.6,3.8-6.8c2-0.1,3.8-2.2,6-0.1c1.5,1.4,0.6-0.4,0.8-0.9       c1.2-3.1,4-3.3,6.6-2.9c2.9,0.4,1.6,2.9,1.7,5.1c-0.4-4.6,2.8-5.6,5.7-6.9c0-0.3,0-0.7,0-1c2.3,0.2,4.1,1.6,6.3,2.6       c-0.4-2.9,1.5-3.6,3.8-3.8c1.8-0.2,3.7-0.2,4.9-1.8c0.3,0.3,0.7,0.7,1,1c2.4,1.3,5.1,0.4,7.6,1.8c3.4,1.9,2.7-2.7,4.4-3.8v0       c2.5,2.5,4.7,2.7,8.5,1.5c7.6-2.4,15.6-3.6,23.7-3.6c2.3,0,4.3,0.3,4.8,3.1c-0.3,1-0.7,2-1,3c-1,0.8-0.1,2.2-1,3       c-2.5,1.8-4.9,2.2-7.1-0.6c-0.3-0.4-0.6-0.6-1-1c-3,4-8.7,1.2-12,4.6C759.6,512.9,758.9,513.6,758,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12936"),
                d:
                  "M782,503c-1.4-2.1-3.5-2.1-5.7-2c-7.7,0.3-15.2,2-22.7,3.3c-0.5,0.1-1,0-1.4,0.3       c-3.1,2.1-4.9,1.5-7.2-2.6c0.1-2.6,2.7-1.9,4-3c0,0.3,0,0.7,0,1c0.7,1.7-3.3,1.6-1.5,3.2c1.5,1.4,2.3-0.9,3.4-1.8       c2.7-2.3,5.2-5.9,8.8-1.2c4.3-1.7,9.4-0.3,13.4-3.2c3.8-0.3,7.7,1.4,11.4-1.5c1.7-1.3,3.5,1.4,5.6,1.3c6.7-0.1,13.4-2.4,20,0       c1.1,0.4,0.9-0.5,1.2-0.9c4.6-5.9,10.7-5.6,17-4.1c0.7,0.2,1.5,1.1,2,0c0.2-0.5-0.4-1.4-0.8-2.3c6.7,1.7,14,2.8,19.7,0.3       c3.5-1.5,6.7,0.3,9.6-1.8c2.5-1.8,3.7,3,6.7,1.8c2.4-1,5.1-2.6,7.4,0.7c0.7,0.9,1.2,0.1,1.7-1.1c0.7-1.9,1.1,0.1,1.6,0.6       c-0.1,1.1-0.7,1.7-1.8,2c-3.2,0.9-6.8-0.1-9.9,2.4c-1.4,1.2-2.4-1.9-4.5-2.1c-0.2,1.9,2.7,2.6,1.8,5       c-6.4-4.6-12.9-0.5-19.4-0.3c-1.3,0-3.9,2.2-3.6-1.8c0.1-1.5-1.5-0.7-2.3-0.3c-1.9,1-4.2,1.1-5.7,2.9c-0.5,0.6-1.8,1.2-2.1,1       c-6.3-5.1-12.3,1.4-18.5,0.6c-2.5-0.3-3.1,2.8-5,3.7c-0.5-0.7-1.2-0.5-1.8-0.1c-2.1,1.6-3.8,1.1-6.4,0.4       c-3.2-0.8-7.6-1.1-10.8,1.7c-1-0.2-2-0.3-1.6-1.7c0.2-0.7,0.8-1.6-0.4-1.9C782.9,501.1,782.5,502.2,782,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02B38"),
                d:
                  "M717,507c-0.1,0.9-0.3,1.6-1.3,1.9c-4.4,1.3-3.4,3.6-0.9,6.3c-2.3,1.1-4.1-3.4-6.2-0.3       c0.1-0.5,0.1-0.9,0.2-1.4c0.1-1.4,3.2-1.9,1.2-3.6c-1.3-1.1-3.2,0-4.7,0.4c-2.9,0.8-0.4,2.1-0.1,3.2c0.2,0.7,0.3,1.3-0.3,1.8       c-1.1,0.8-2.2,0.2-2.5-0.6c-1.8-5-5.5,2.2-7.4-1.2c-0.6,2.1-1.9,4.3-1.7,6.3c0.5,4.5,4.9,3.1,7,2.7c4.4-1,8.6,2.7,12.8,0       c0.8,2.3,3.4,2.2,4.9,3.5c-8.4,2.9-17,1.8-24.9-0.6c-3.6-1.1-7.2-2.5-11-2.9c-1.2-0.1-3-0.7-3.5-1.6c-1.3-2.2-1.8-5.2-5.2-2.1       c-0.2,0.2-1.2-0.4-1.6-0.8c-0.6-0.6,0-1.2,0.4-1.7c2.1-2.6,5.3-3.4,7.5-1.7c5.3,4.2,6.3-0.8,7.9-3.5c2.4-4,6.2-5.7,10.3-3.7       c2.8,1.3,4.6,2.4,3.8-2.5c-0.5-3.3,2-0.6,2.9-0.8C709.4,503.2,712.8,506.8,717,507z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02B38"),
                d:
                  "M732,503c0.3,3-1.7,3-3.9,3c-2.2,0-5.4-0.7-3.2,3.5c0.9,1.8-1.6,2-1.6,1.8c-0.7-3.5-5.6-2-6.3-5.3       c0-1.3,0-2.6,0-4.6c2.7,4.7,6,0.9,8.8,1C727.8,502.6,729.9,502.4,732,503z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02B38"),
                d:
                  "M718,527c4-0.8,7.9-1,11.8,1.1c3.7,2.1,7.9,0,11.9,0.3c2.4,0.2,2.2,1.1,2.3,2.6c-4.7,1.1-9.3-2.8-14,0       c-3.3,0.3-6-3.1-9.7-1.3C719.2,530.3,718.7,528.1,718,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A12936"),
                d:
                  "M745,502c0,0.3,0,0.7,0,1c-0.4,4-1.2,2.6-4.2,4.2c-3.5,2-2.2,1.1-2.7-1.5c-0.3-1.7-2.7,2.8-4.2,0       c-0.3-0.6-0.6-1.2-0.9-1.7c1.8-1,2.6-3.9,5.8-0.7c2.8,2.8,2.9-1.5,3.6-3.5C743.3,500.8,743.5,502.2,745,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02B38"),
                d:
                  "M681.5,506.4c2.7,0,4,1.6,4.3,4.1c0.1,1-0.4,2-1.6,2.1c-0.9,0.1-1.1-0.6-0.9-1.3       C684.1,509.2,680.9,508.7,681.5,506.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02B38"),
                d:
                  "M680,511.7c-0.7,0-1.3-0.3-1.4-1c-0.1-0.7,0.5-1.2,1.2-1.3c0.3,0,0.9,0.4,1,0.8       C681,510.8,680.8,511.4,680,511.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921D2C"),
                d:
                  "M654.4,508c-2.2-1.3-3.8,0.5-5-1.5c-0.1-0.2,0.2-1.1,0.5-1.1C651.5,504.9,652.7,505.6,654.4,508z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("921D2C"),
                d:
                  "M646.8,507.9c-0.2,0.1-0.6,0.6-0.9,0.5c-1-0.3-0.8-1.2-0.8-2c0-1.1,0.7-0.3,0.9-0.2       C646.7,506.4,646.9,507,646.8,507.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CD4651"),
                d:
                  "M1725,350c0.2-1.5-0.6-3.5,1.9-4c1-0.2,2.2-0.4,1.5-1.8c-0.5-1.1-1.5-0.8-2.6-0.7       c-2.4,0.2-5.3,2.2-6.8-1.5c6-3.7,12.9-4.5,19.2-2.7c6.2,1.8,12.2,3.4,18.6,3.4c2.2,0,2.3,4.2,5.2,2.3c0.9-0.3,0.7-3.6,2.3-1.3       c1.2,1.7,2.1,2.3,3.9,1.8c1.1-0.3,2.2,0,2.3,1.1c0.1,1.9-1.5,1.4-2.5,1.4c-4.6,0.1-9.2,0.4-13.8,0.9       c-8.7,0.9-17.4,0.8-26.2,1.2C1727,350.7,1726,350.7,1725,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("CA434D"),
                d:
                  "M1762,345c-1.6,0.8-3.4,2.9-4.2-0.9c-0.2-0.8-1.9-1.4-3-0.3c-1.4,1.4-2.8-0.1-3.9,0       c-7.7,1.1-13.7-5.8-21.6-4c-3.4,0.8-6.5,3.5-10.3,2.2c-2.8-1.8-5.8-3-9.3-1.5c1.3-1.1,2.7-2.2,4.2-3.5       c-6.4-4.2-13.3-2.4-19.9-3c-0.3-0.7-0.7-1.3-1-2c8.6-0.1,17.2-0.5,25.7,1.1c3.8,0.8,8.5,0.4,11.1,4.5c0.2,0.3,0.9,0.3,1.4,0.2       c9.7-2.3,18,3.8,27.2,4.3C1760.3,342.2,1759.8,345.2,1762,345z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1638,334c-3.5,1.8-7.3,0.6-11,1c-1.2-0.5-2.3-1.3-3.7-0.6c-1.2,0.6-2.5,0.6-2.6-1       c-0.1-1.4,1-2.4,2.6-2.3c1.3,0.1,2.3,0.4,3.7-0.4c2.4-1.4,3.3-2.5,1-4.7c2-1.3,0.1-3.9,2.1-5.8c0.5,3.4,2.2,2.5,4.5,1.9       c3.6-0.9,6.6,1.9,9.7,3.2c1.6,0.7,0.2,3.1-0.8,4.3c-0.6,0.8-0.8,3-3.4,1C1637.7,328.9,1638.9,332.9,1638,334z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BF424D"),
                d:
                  "M1628,326c-3.5,1.5-6.6,2.2-10.2-0.7c-1.6-1.3-4.6-1.4-7.1-1.4c-1.7,0-5,1.8-4.8-2.5       c0-0.1-1.7-0.3-2.6-0.4c-2.4-0.1-5,0.4-7.2-1c-2.5-4.1-6.2-0.8-9.3-1.4c0-0.5-0.1-1-0.1-1.6c4.5,0,8.9,0,13.4,0       c1.5,1.6,3,2.1,5.3,1.5c2.6-0.7,5.5-1.4,8,0.8c0.2,0.2,0.7,0.5,0.8,0.4c4.7-3.4,7.6,2,11.5,2.3       C1628.5,322.2,1627.9,324.3,1628,326z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("BE434E"),
                d:
                  "M1725,350c1,0,2,0,3,0c-2.1,1.9-4.7,0.6-7,1C1722.1,349.5,1723.6,350.2,1725,350z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("771E2B"),
                d:
                  "M516,376c2,0.1,3.2,0.8,1.9,3C516.7,378.4,516.2,377.3,516,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("561116"),
                d:
                  "M522,369c-4.1-0.7-7.8,1-11.6,2c-1.3,0.3-0.6,1.2-0.5,2c-1.4,0-2.7,0.1-4.1,0.1c-6.3,0.5-12.4,0.3-18-3       c-0.6-0.4-1.3-0.7-1.9-1.1c-0.5-1.1-0.7-2.1,1-2l0,0c5,1.3,10,2.2,15,0c2.5-0.6,5-0.3,7.5-0.4c4,0.3,8.2-0.8,12.1,0.8       C522.2,367.9,522.3,368.4,522,369z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("91333D"),
                d:
                  "M487.9,370.1c5.9,1.9,11.9,2.5,18,3c-6.6,2.4-12.7,0.1-18.9-2C487.3,370.8,487.6,370.4,487.9,370.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("801722"),
                d:
                  "M503,362c6.4-1.1,13-1.4,19.3-0.5c7.4,1.1,14.8,1,22.2,1.7c4.5,0.4,9.6-1,13.5,2.8       c-0.3,1-0.9,1.6-1.9,1.8c-6.7,0.2-13.4,1.1-20.1,0.2c-8.1-1.1-16.3-1-24.5-1.1c-1.8,0-3.6,0-5.4,0c-1.2,0-2.4-0.1-3.2-1.1       c1.1-1.4,2.8-0.5,4.2-1.2c-0.4-2.7-2.2-2.1-3.9-1.7c-0.1,0-0.5-0.1-0.5-0.1C502.9,362.6,503,362.3,503,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("963B48"),
                d:
                  "M487,367c0.7-1.7,2.1-2.1,3.7-1.9c2.9,0.5,5.7,0.5,8.7,0.2c0,0.6,0.1,1.1,0.1,1.7       C495.3,367,491.2,367,487,367C487,367,487,367,487,367z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3946"),
                d:
                  "M503,365.9c1,0.1,2,0.1,3,0.2c0.6,1.2,3.3-0.6,3,2c-2.4,0-4.8,0.5-7-1       C502.3,366.6,502.7,366.2,503,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("811723"),
                d: "M772,366c-3.2,2-6.7,0.6-10,1C765,363,768.6,365.2,772,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57101F"),
                d:
                  "M969,374c-0.3,0-0.7,0-1,0c-1.8-1.3-3.6-2.3-5.9-2c-2.1,0.2-4.9,2.8-5.8-1.6c-3.5,2-7-1.7-10.9,0.5       c-3.8,2.1-8.2,1.7-12.3,0.1c7.6-4.2,15.9-2.7,23.9-3c2.6-0.1,5.3-0.5,7.9-0.3C968.5,367.8,970.5,371,969,374z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EC858C"),
                d:
                  "M958.9,380c0,0.3,0.1,0.6,0.1,1c-6.5,1.8-13.1,1.3-19.7,1.4c-3.7-0.1-7.5,0.2-11.2-0.3       c-5.6-1.4-11.6-0.3-17.2-2c0,0,0,0,0,0c0.9-2,2.7-2.4,4.5-1.9c5.1,1.5,10.4,0.6,15.5,0.8c2.3,0,4.6,0,6.9,0.1       c4.3,1.4,8.8-0.4,13.1,1C953.6,380,956.3,380,958.9,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902B37"),
                d:
                  "M956,496c0,1.1-0.2,2.3,1,3c-1.3,3.2-5.4,3.4-6.9,3c-5.6-1.6-10.1,2-15.1,2c-1.2-0.7-1-1.9-1-3       c1.1-0.1,2.3,0.2,3-1c5-0.6,9.3-3.6,14.3-4.3C953,495.5,954.5,494.7,956,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902B37"),
                d:
                  "M958,498c4.9-1.8,9.9-2,15-2c0.3,0.3,0.7,0.7,1,1c-0.9,1.4-1,3.5-3.8,1.6c-1.9-1.4-4.8-0.9-7.1-0.1       C961.3,499.2,959.6,498.9,958,498z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M1082.5,506c0.3-0.1-0.2-0.5-0.3-1.2c-0.2-1.1,0.4-2.1,1.4-2.3c1.1-0.2,1.2,0.7,1.4,1.6       C1085.3,505.2,1084.3,505.3,1082.5,506z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M1100,502.5c-1.8-0.1-3.3,2.2-5.7,0.2C1096.4,501.6,1098.2,502.1,1100,502.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("862834"),
                d:
                  "M1076,497c0.4-0.7,0.8-1.6,1.6-1.2c0.4,0.2,0.3,1.4,0.4,2.2C1077.2,498,1076.4,497.8,1076,497z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M1062.6,508.2c-0.7,0.2-1.4,0.4-1.3-0.7c0.1-0.4,0.7-1,0.9-0.9c0.5,0.1,1.3,0.5,1.4,1       C1064,508.6,1062.9,507.8,1062.6,508.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("93323E"),
                d:
                  "M1079.5,505.4c-0.3,0.1-0.7,0.4-1.1,0.4c-0.5,0-1-0.2-0.6-0.8c0.2-0.3,0.7-0.6,1.1-0.7       C1079.4,504.3,1079.7,504.7,1079.5,505.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("872836"),
                d:
                  "M1085,566c-3.8,0.7-7.2-2.1-11-1c-12.4-0.3-24.5-2.5-36.8-3.7c-8.5-0.9-17-1.5-25.6-2.3       c-1.6-0.1-3.4,0.5-4.7-1c-0.6-0.7-0.5-1.4,0-2c6.3-0.7,12.3,0.5,18.5,1.5c4.9,0.8,10.1,1.3,15.3,1.4c4.1,0.1,8.7,1.2,12.9,2.3       c5.8,1.6,11.8,0.7,17.6,1.6c4.2,0.6,9.2,1.8,13.7,0.1c0.7,0,1.3,0,2,0C1086.3,564,1085.7,565,1085,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1088,538c-0.2-2.3,1-4.1,2.3-6.3c2.5,3.4,6.8,3.7,9.7,6.3c-0.2,1.3-1,2.6-2.2,1.6       C1094.8,536.9,1091.3,538.5,1088,538z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M1087.9,524.2c-0.2,0.6-0.1,1.5-1.1,1.2c-0.7-0.2-0.8-0.9-0.7-1.6c0.1-0.6,0.1-1.5,1.1-1.2       C1087.9,522.8,1088,523.5,1087.9,524.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1108.4,529.9c-0.8-0.1-1.2-0.6-0.9-1.3c0.1-0.4,0.6-0.9,1-0.9c0.7-0.1,1.2,0.5,1.3,1.2       C1109.7,529.6,1109.1,529.9,1108.4,529.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13542"),
                d:
                  "M1100.1,531.8c-0.6,0.3-1,0.6-1.4,0.7c-0.7,0.1-1.2-0.4-1.1-1.1c0.1-0.3,0.6-0.8,1-0.8       C1098.9,530.6,1099.2,531.1,1100.1,531.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902F3C"),
                d:
                  "M996,508c-1.3,0-2-0.7-2-2c1,0.3,2.3-0.6,3,0.5C997.2,506.7,996.4,507.5,996,508z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("993542"),
                d:
                  "M942.3,516.4c1.1-0.1,1.5,0.3,1.6,1.1c0,0.7-0.3,1.3-1.1,1.2c-0.6-0.1-1.2-0.4-1.8-0.7       C941.5,517.4,942,516.8,942.3,516.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("902B37"),
                d:
                  "M930,502c0.7,0,1.3,0,2,0c0.7,0.6,1.1,1.3,0.1,1.8C930.6,504.3,930.1,503.3,930,502z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842734"),
                d:
                  "M1007,556c0,0.7,0,1.3,0,2c-6.4,0-12.8-0.2-19-2c0.7-0.7,1.3-1.3,2-2c2,0.3,4,0.7,6,1       C999.6,555.7,1003.3,555.9,1007,556L1007,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("872836"),
                d:
                  "M1007,556c-3.8,1.6-7.4,0.4-11-1C999.7,554.9,1003.4,554.4,1007,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A4313E"),
                d:
                  "M956,496c-6.4,0.9-12.3,4.5-19,4c2.6-1.3,5.4-2.3,5-6c0.3-0.7,0.7-1.3,1-2c4.3,0.8,8.7-1,13,0       c-1.4,1.6-0.2,1.8,1,2c1.4,0.2,2.9-0.4,4,1C959.5,496,957.8,496.1,956,496z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("842734"),
                d:
                  "M988,556c-1.3-0.3-2.7,1.8-4,0c-0.3-0.2-0.5-0.5-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c0,0,0,0,0,0       C985.3,555.5,987.5,552.5,988,556z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("8A2D39"),
                d: "M846,539c-3,0.7-6,3.8-9,0C840,537.9,843,537.2,846,539z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M789,530c-2.2,1.1-4.1,0.1-6-1c0.8-0.1,1.9,0,2.3-0.5C788.2,525.2,788.1,528.8,789,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M797,528c-1,0.6-1.4,2.2-3,2c0-1.3-0.2-2.8,1.3-3.4C796.1,526.3,796.6,527.2,797,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M795.9,516c-0.1,0.6,0,1.4-0.9,1.4c-0.9,0-0.9-0.8-0.9-1.4c0-0.6,0-1.4,0.9-1.4       C795.9,514.6,795.9,515.4,795.9,516z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M792,530c-0.7,0-1.3,0-2,0c0.2-0.9-0.5-2.6,1.2-2.4C792.2,527.7,791.9,529.1,792,530z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AE3441"),
                d:
                  "M835.8,505.5c-0.6,0.5-1.1,0.9-1.6,1.1c-0.2,0.1-0.9-0.7-0.8-0.8c0.3-0.5,0.7-1,1.1-1.3       C834.6,504.5,835.2,505.1,835.8,505.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB323F"),
                d:
                  "M758,514c0-1.3,0.7-2,2-2c1.6,1.7,0.3,3.3-0.7,4.2C758.6,516.7,758.1,515,758,514z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AB323F"),
                d:
                  "M780,509c0-1.1-0.2-2.3,1-3c0,1.3,0.3,2.7-0.2,3.7C780.3,510.6,780.2,509.4,780,509z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("822633"),
                d:
                  "M984,555c0,0.3,0,0.7,0,1c-3-0.4-6.2,0.9-9-1C978,555,981,555,984,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("823943"),
                d:
                  "M534.9,380c0.1-0.3,0.1-0.6,0.2-0.9c4.2,0,8.3,0,12.5,0c2.1,0,3.7,0.3,3.6,2.9       C545.7,381.4,540,383.7,534.9,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("561116"),
                d:
                  "M550,369.2c-4.8,1.7-9.9,2.5-15,2.8c-0.3-2.5-2.3-1.8-3.9-2c-2.1-0.3-4.3,0.8-6.2-1       c3.1-2.3,6.7-1.2,10.1-1.2c3.4,0.5,6.9,0.1,10.3,0.2C547,368.1,548.8,367.6,550,369.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("57111E"),
                d:
                  "M535.1,368.9c-3.4,0-6.8,0-10.1,0.1c-1,0-2,0-3,0c0-0.3,0-0.5,0-0.8       C526.5,366.7,530.9,365.4,535.1,368.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("AA3B48"),
                d:
                  "M535.1,368.9c-4.3-1.6-8.7-0.7-13.1-0.7c-4.3-0.1-8.7-0.2-13-0.2c-1-0.7-2-1.3-3-2c1.7,0,3.3,0,5,0       c6.4,1,12.8,0.2,19.2,0.5c2,0.1,4-0.4,5.9,0.4c7,0,13.9,0,20.9,0c2.3,0.3,4.9-1,7,1c3.3,2.5,7.6-0.5,11,1.9       c-8.4,1-16.6-1.2-25-0.7C545,369.1,540.1,369,535.1,368.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("691321"),
                d:
                  "M1289.8,604.3c-1.6,0.8-3.1,0.8-4.7,0C1286.7,604.3,1288.3,604.3,1289.8,604.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("EA747D"),
                d:
                  "M956,351c-1.7,0.3-3.3,0.7-5,1C952.1,348.9,954,349.6,956,351z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("931B21"),
                d:
                  "M564,368c-2.2-0.9-4.9,0.7-7-1c0.3-0.3,0.6-0.6,1-1c7.1,0.2,14.2,0.2,21.1-2.1c2-0.1,4,0.2,5.8,1.2       C578.4,369.5,571,367.5,564,368z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d:
                  "M961,391c5-2.2,10.1-0.7,15.1,0c-0.7,0.3-1.4,0.6-2.1,0.9C969.7,391.7,965.3,391.3,961,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d: "M954,391c1.7-1.5,3.3-1.5,5,0C957.3,391,955.7,391,954,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A13F44"),
                d:
                  "M986,391c2.2-1.9,4.7-0.7,7.1-0.9C990.9,391.7,988.4,390.8,986,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9C232F"),
                d:
                  "M928,380.9c3.6,0.1,7.2,0.1,10.8,0.2c5.6,1,11.3,0.1,16.9,0.4c1.8,0.1,3.7-0.6,5.3,0.5       c1.2,0,2.5,0,3.7,0c0.2,0.3,0.3,0.5,0.4,0.8c-4.7,0-9.5,0.1-14.2,0.1c-6.7,1-13.4,0.2-20.2,0.5c-1.9,0.1-3.9-0.5-5.8,0.5       c-2,0.3-3.7-0.3-5-2c-1.1-0.2-1.7-0.5-0.5-1.4C922.3,380.6,925.2,380.1,928,380.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("5E161B"),
                d:
                  "M919.1,381c0.3,0.3,0.6,0.7,0.9,1c-0.2,1.8,1,4.2-1.3,5.2c-0.9,0.4-2.6-0.2-3.6-0.9       c-2-1.5-0.9-3.5-0.1-5.3C916.3,380.3,917.7,380.3,919.1,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("89191C"),
                d:
                  "M925,384c3.4-2.1,7.1-0.8,10.6-0.9c5.1-0.2,10.3,0,15.4,0c0,0.3,0,0.6,0,1C942.3,384,933.6,384,925,384       z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M919.1,381c-1.4,0-2.7,0-4.1,0c-1.3-0.4-2.9,0.4-4-1c5.7,0.3,11.4-1,17,0.8       C925,380.9,922,381,919.1,381z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E47276"),
                d:
                  "M951,380c-4.3-0.5-8.8,1.1-13.1-1C942.3,379.5,946.8,377.8,951,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("E56C72"),
                d:
                  "M961,382.1c-7.4-0.3-14.9,0.6-22.2-1c6.7,0,13.5-0.1,20.2-0.1C959.9,381,960.6,381.2,961,382.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1645.6,342.5c-0.4,2-1.7,3.8-1.1,6.1c0.3,1.3-1.1,1.4-2.1,1.2c-1.5-0.3-1.7-1.6-1.1-2.7       c0.9-1.6,1.9-2.9,1.7-4.9c-0.1-0.9,0.1-2.1,1.6-1.7C1645.5,340.8,1645.8,341.6,1645.6,342.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("DB4F5A"),
                d:
                  "M1645,338c0.1-0.7,0.1-1.7,1.2-1.5c0.4,0.1,0.5,1,0.8,1.5C1646.3,339,1645.7,339,1645,338z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("A02B38"),
                d:
                  "M698,518.8c-0.4,0.3-0.8,0.8-1.1,0.7c-0.3-0.1-0.7-0.6-0.7-0.9c-0.1-0.7,0.4-1.2,1.1-1       C697.6,517.6,697.7,518.2,698,518.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: _vm.bodyColorRecalc("9E3946"),
                d:
                  "M536.1,366.9c-7.1,0-14.3,0.1-21.4,0.1c-1.3,0-2.7,0.3-3.7-0.9C519.4,366.4,527.8,365,536.1,366.9z"
              }
            })
          ]),
          _vm._v(" "),
          _c("g", { attrs: { id: "other" } }, [
            _c("path", {
              attrs: {
                fill: "#0D0707",
                d:
                  "M1669,422.8c15.1,1.5,29.7,5.1,44.2,9.7c21.8,7,41.2,18.3,58.7,32.7c12.1,9.9,22.4,21.8,31.3,34.9      c11.2,16.4,20.1,33.8,26,52.6c3.9,12.5,7.3,25.1,7.9,38.3c0.6,4.7,1,9.4,0.5,14.1c0.5,4.9-1.4,9.8,0.3,14.8      c0.7,2.2-0.6,4.2-1.9,6c-0.8,1.1-1.7,1.5-3,0.9c-1.2-0.6-1.7-1.6-1.4-2.9c1.9-6.5-1.9-12.9-0.4-19.6c0.6-2.7,0.7-5.9,0.4-8.6      c-0.3,0.8,0.2,2.3-0.9,3c-2,1.1-1.3,2.1-0.4,3.5c2.2,3.4,1.3,6.7-1.1,9.7c-1.8,2.3-2.9,1.9-4.3-0.6c-2.5-4.4-1.1-9.1-1.2-13.6      c-0.1-5.6-0.2-10.9-3.8-15.6c-0.8-1.1-1.4-2.2-0.7-3.7c2.3-5.4,3.1-11,2.8-16.9c-0.1-1.7,0-3.3,0.6-5.1      c-2.1,1.5-1.3,3.4-0.9,5.2c0.4,1.9-0.3,3.4-2.2,3.9c-2.1,0.6-3.1-0.7-3.4-2.6c-0.5-3.1-2.2-5.9-2.4-9.2      c-0.3-5.1-2.2-9.5-4.5-14.1c-2.4-5-3.4-10.5-6.1-15.7c-2.5-4.8-4.8-9.9-7.8-14.4c-5.4-8.1-9.2-17.4-16.1-24.4      c-5.3-5.5-10.9-10.8-17.1-15.3c-5.8-4.2-10.4-9.6-16.1-13.7c-5.8-4.2-12.2-7.3-18.8-9.8c-5.9-2.3-10.8-6.9-17-8.1      c-5.4-1-9.9-4.7-15.9-4c-3.7,0.5-7.6-0.6-10.7-3.3c-1.1-1-2.4-2.6-3.6,0.4c-0.7,1.9-2.3,0.6-3.3-0.2c-2.1-1.8-4.5-1.6-7-1.8      c-4.8-0.4-9.6-2.6-14.2,1c-0.6,0.4-1.6-0.4-2.4-0.5c-4.8-1-9.5-2.9-14.4-0.1c-1.3,0.7-3,0.6-4.4,0.1c-8.9-3.1-17.3-1-25.7,1.9      c-1,0.3-2,0.6-2.9,0.6c-8.3-0.5-14.4,5.5-21.8,7.7c-0.6,0.2-0.9,0.9-1.3,1.5c-1.2,2.9-5.6,2.9-5.9,6.6c-0.4,0.8-1,1.5-1.9,1.4      c-6.8-0.9-11.1,2.6-14.4,8c-0.3,0.4-0.7,0.7-1.2,0.8c-3.9-2-7-0.7-9.5,4c-1.1,2-1.8,4.2-3.8,5.6l0,0c-2.1,0.3-1.6-1.3-1.7-2.6      c-5.8,5-31.6,43.4-33.9,45.5c-1.8,1.2-2.6-9-3.7-11c-3.5-6.4,11.2-19.4,17.5-24.6c2.7-2.2,4.8-5.2,4.5-9.5      c-0.2-3,3.1-4.4,5.4-5.9c5.3-3.6,10.7-7,14.8-12c12.4-7,25.4-12.7,39-17.1c10.1-3.3,20.3-5.6,30.6-7.1      c11.2-1.6,22.5-3.2,33.9-1.8c3.4,0.4,7,0.1,10.5,0.1C1664.9,423.2,1667.1,421.9,1669,422.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#070506",
                d:
                  "M270.6,536.9c-0.9,1.4-2,2.9-1.7,4.7c-0.6,1.8-0.8,3.8-2.2,5.3c-3.8,10.3-7.3,20.7-7.8,31.8      c-1.2,3,0.4,6.3-1,9.3c-0.4,1.1-0.6,2.3,0,3.5c-0.7,2.4-0.7,4.7,0,7.1c-0.7,2.2-0.3,4.3,0.1,6.4c1.3,3-0.2,6.3,0.9,9.4l-0.2,0.3      l0.2,0.3c0.8,6.4,1.2,12.8,2,19.1l0-0.1c0.9,2.5,1,5.1,1.6,7.7c-0.1,1.5,0.5,3.3-1.6,4.1c-2.6,0.4-5.2,0.8-7.8,1.2      c-3,0.5-4.6,1.8-4,5.3c0.3,1.7-0.1,3.9-2.2,4.6c-2.1,0.7-3.3-1.1-4.6-2.3c-1.4-1.3-2.3-2.9-2.3-4.8c-0.2-8.6-1.5-17.3,1.6-25.7      c1.2-3.2-0.5-6.2-0.5-9.3c-0.1-5.8,0-11.6,0-17.4c1.4-6.4,1.8-13,2.7-19.4c1.1-7.4,2.9-14.5,4.3-21.8c0.9-4.7,2.5-9.4,4.7-13.8      c1.1-2.1,1.9-4.2,2.1-6.5c0.2-1.7,0.8-3.2,2.2-4.3c1.1-0.8-0.6-3.1-0.2-4.3c2.3-7.1,7.3-13.1,10.5-18.4c1-1.8,2.4-3,3.3-4.5      l1.6-2.2c2.5-1.1,2.6-0.4,4.2-2.7c4.9-7.3,11-13.7,17.9-19.2c2.8-2.3,5.7-4.5,8.3-7.1c1-2,3.7-2.2,4.5-4.3l0,0      c2-0.9,3.6-2.7,6-3c2.5,0.2,4.7-0.2,6.7-2.2c2.3-2.2,5.5-3.3,8.6-3.7c6.9-1,12.6-5.9,19.8-5.6c1.1,0,1.9-0.8,2.2-1.7      c1.2-3.5,4-3,6.6-2.7c2.3,0.3,4.4,1.5,4.4,4c0,2.5-2.8,1.6-4.2,2.4c-7.5,4.4-17.1,4.2-23.7,10.6c-2.4,2.4-5.6,3.5-8.2,5.6      c-9.2,7.8-19.2,14.6-27.2,23.8c-1.5,1.7-2.9,3.5-5.1,4.6l0,0c-1.1,2-2.6,3.6-4.4,5c-5.9,7.3-10.3,15.5-14.6,23.9      C273,532.2,272.4,534.8,270.6,536.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0D",
                d:
                  "M1549,447.9c0.2,3.7-3,4.9-5.3,6.6c-3.8,2.9-7.9,5.6-11.8,8.5c-1.4,1.1-3.1,1.6-1.7,4.6      c1.3,2.7-2.2,5.1-3.9,7.3c-2.5,3.4-5.8,6.3-8.9,9.3c-1.4,1.3-2.4,2.5-2.5,4.6c-0.1,2.2-0.9,3.4-3.6,3.6c-3.6,0.3-4,3.8-4,6.5      c0,2.4,2,2,3.7,1.1c1.2,3.8,29.3-88.7,183.2-65.6c0.4,7,168.8,31.6,116.5,208.2c0.4,2.6-316.5-3.6-319.4-3.8      c-4.1-1-8-1.3-9.7,3.9c-0.3,0.9-1.2,1.7-2.4,1.2c-0.9-0.4-0.8-1.4-0.7-2.2c0.5-2.2-0.1-3.9-1.9-5.2c-1.8-1.3-2.1-3.2-2-5.3      c0.2-3.7-0.4-7.3-3.1-10.2c-2.2-2.3-0.7-5.5-1.7-8.2c-0.3-0.9,0.1-2.9-0.4-4.4c-0.3-1,0-2.4,1-2.5c4.9-0.5,2.1-2.6,0.8-4      c-4-4-4.2-9.3-4.2-14.3c0-4.1,0.6-8.3,1.1-12.4c0.6-3.1,1.4-6.3,0.3-9.5c-0.1-0.7,0-1.4,0.4-2.1c0.6-0.8,1.8-1.2,1.7-2.3      c-1-7.2,3.3-13.3,4.1-20.1c0.7-4.9,4.2-8.5,5.3-13.2c1.6-5.2,3.8-10,7.3-14.3c2.8-3.4,3.8-8.9,5.8-12.8      c6.5-9.5,13-18.2,21.6-25.8C1525.1,464.9,1536.4,455.7,1549,447.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#130909",
                d:
                  "M1582,441c-1.5-1.7,0-1.7,1.1-2.2c4.8-1.9,9.9-3.2,14-6.6c0.4-0.3,0.9-0.4,1.4-0.5      c10-0.4,19.3-5,29.5-4.8c1.7,0,3.3-0.1,4.7,1.1c1.6,1.3,4,1.6,5.2,0.8c4.7-3.2,10.1-2.3,14.4-0.8c3.8,1.3,5.7,1.5,7.9-1.7      c0.4-0.6,2.8-0.7,3.3-0.2c2.9,3.5,6.5,1.8,9.9,1.9c2.5,0.1,4,2,5.7,3.6c0.6-1.6-0.9-3.5,0.9-4.3c1.7-0.9,2.1,1.1,3,1.9      c4.1,3.1,8.6,4.9,13.8,3.6c2-0.5,3.1-0.3,4.7,1.3c1.5,1.5,3.6,2.8,6.7,1.6c2.9-1.1,4.8,2.6,7.5,3.6c3.7,1.3,6.7,4.5,10.4,5.5      c7,1.7,12.7,5.6,18.6,9.1c4.2,2.5,8.3,5.5,11.7,8.9c7.2,7.3,15.8,12.9,22.7,20.3c3.5,3.8,7.5,7.9,9.5,13      c3.1,7.6,9.4,13.4,12.4,21c2.6,6.7,7.9,12.3,8.1,20c0,0.8,0.4,1.6,0.9,2.2c2.6,3.5,4.1,7.1,4.4,11.6c0.2,4,1.8,7.9,2.7,11.9      c0.3,1.4,0.8,2.3,2.3,1.8c1.4-0.5,2.4-2,1.1-3.1c-3.2-3.1,1.3-5,1-7.6c-0.1-0.8,1.3-0.6,2-0.2c1,0.5,1.5,1.2,0.9,2.4      c-2.2,3.8-1.6,7.6-0.4,11.5c0.4,1.3,0.8,2.2-1.1,2.4c-0.9,0.1-1.9,0.6-1.3,1.6c1.6,2.9,1.5,5.2-1.5,7.2      c-1.1,0.8,0.2,1.7,0.8,2.4c4,4.9,4,10.5,4.1,16.6c0.1,4.7-1.9,10.2,2,14.4c5.8-6.4,5.7-4.8-0.3-13.4c4-0.4,4-0.4,5-5.2      c1,3.5,0.9,6.5,0.7,9.7c-0.2,4.8-1.5,9.9,1.5,14.6c1,1.5,0.7,3.9-0.7,5.6c-0.8,0.9-0.9,1.8,0.3,2.4c1.4,0.8,1.6-0.3,2-1.3      c0.5-1.4,2.4-2.6,1.6-4c-2.7-4.9,0.2-9.9-0.9-14.8c2.3-1,2.2,0.7,2.5,2.2c1.8,8.2,1.4,16.5,1.4,24.8c0,2.3-0.2,4.7,1.4,6.6      c1.4,2.1,3.5,0.9,5.3,1.1c3.4,0.3,6.8-0.2,10.2,0.4c7,1.4,14.1,0.3,21.2,1.5c3.7,0.6,7.5,0.9,11.1,2.1c0.5,0.1,1,0.3,1.5,0.5      c1.5,0.8,3,1.6,4.5,2.3c3.7,1.7,7,4.1,10.9,5.2c0.7,0.2,1.2,0.6,1.8,1c4.2,3.2,8.9,5.6,13.6,7.9c0.6,0.5,0.9,1.2,0.8,2      c-0.3,0.8-1,1.2-1.8,1.3c-5.9-1.1-11.4-3.8-16.5-6.6c-13.8-7.7-28.6-9.9-44-9.8c-1,0-2-0.1-3-0.3c-4.1-1.3-8.4-0.2-12.5-0.8      c-0.5-0.1-0.9-0.2-1.4-0.4c-0.9-0.2-1.5-1.4-2.6-0.9c0,0,0.5,0.7,0.7,1.1c0.1,0.4,0.1,0.9,0.1,1.3c-1.9,2.3,2,5.1-0.6,7.3      c-1.1,0.6-2.2,0.7-3.4,0.6c-2.5-2.5-4.7-4.2-8.9-4.6c-3.5-0.3-7.2-4.3-9.8-7.8c-0.7-0.9-1.5-1.9-0.5-3.1      c2.8-1.4,4.7-0.2,6.5,1.9c1.3,1.5,2.7,2.2,4.7,0.8c2.9-2,3-1.8,5.9,1.1c1.2-3.6,0.2-4.7-3.7-4.2c-4.6,0.6-8.3-1.7-11.6-4.7      c-1.3-1.2-1.9-3.2,0.1-3.4c2.7-0.4,3.3-2.7,4.9-3.9c3.8-2.8,4.3-6.7,1.9-11.1c0.1,3,0.1,5.8-0.8,8.5c-0.7,2.3-2.1,4.6-4.9,3.9      c-2.5-0.7-3.7-2.4-3.1-5.7c0.9-4.9-1.3-10.1,0.6-13.9c-0.2,2.8-1.2,6.8-1,11c0.1,1.8,0,4.6-3.4,4.2c-0.7-0.9-10.4,7.9-10.5,6.8      c0.1-4.6-4.6-35.5-4.5-36c0.7-4.3,8.4-50.7,8.4-50.7c-1-1.5-1.2-3.4-2.1-5c-1-0.8-0.4-2-0.9-3c-2.6-7-5.6-13.8-8.9-20.5      c-1.8-6-5.7-10.8-9.1-15.8c-9.4-13.6-21-25.2-34.6-34.8c-4.2-2.5-7.8-5.9-12.3-8.1c-9-4.2-17.2-10-27.1-12.2      c-2.6-2.4-5.7-2.8-9-3.7c-4.5-1.3-9.4-0.4-13.4-2.9c0-1.7,0.2-3.2-2.5-3.5c-3.9-0.4-7.7-1.6-11.6-0.3c-2,0.1-4,0.2-5.8-0.8      c-5.4-2.7-11-3.5-16.8-1.5c-1.6,0.6-3.1,1.4-4.8,0.6c-1.1-1.9-2.3-2.8-4.3-1c-0.9,0.4-1.7,0.4-2.6,0.1c-2.1-1.4-4.3-1.6-6.6-0.3      c-0.4,0.2-0.8,0.4-1.2,0.5c-1.7,0.5-3.5-0.4-5.2,0.6c-0.4,0.2-0.8,0.4-1.3,0.5c-4.5-0.7-9-1.2-13.1,1.5c-2.1,2-4.1,2.8-7.1,1.4      c-3-1.5-6.2-0.5-9,1.1c-2,1.1-4.1,2.1-6.1,3.4c-0.7,0.4-1.9,1.4-2.1,1.2C1588.2,439,1584.7,442.8,1582,441z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0D0707",
                d:
                  "M257.3,646c-18.8-99.1,29.5-155.5,43.1-158.3c-3.2-4.6,53.6-38,51.3-33.7c-1,1.8-2.9,2-4.8,2      c-1.5,0-3.5-0.8-4.3-0.1c-4.9,4.6-11.8,3.6-17.3,6.4c-2.5,1.2-5.3,1.6-6.9,4.4c-1.4,2.4-3.6-0.3-5.5,0.3c-0.4-2.5,2.3-1.6,3-2.8      c4.9-5.2,11.8-6.9,18-10c7.3-1.8,14.1-5.2,21.5-6.8c3.8-0.9,7.7-1.7,11.5-2.4c3.2-1.4,6.6-1.7,10-2.2c1.7-0.8,3.6,0.1,5.3-0.7      c12.3-0.4,24.5,0.5,36.7,1.9c1.5,1.1,3.4,0,5,0.8c8,2.8,16.3,4.6,24.2,7.7c7.7,3,14.8,7,22.3,10.4c11.1,5.1,20,13.3,28.8,21.2      c9,8,16.8,17.6,23.7,27.7c2.1,3.1,4,6.2,6.1,9.3c0.7,2.8,2.5,5,4,7.3c0.5,0.9,0.9,1.8-0.2,2.6c-0.8,0.5,18.7,72.2,18,71.6      c-2.3-1.9-99.5,69.1-100.9,67.7C447.6,666.2,259.4,647.4,257.3,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#220E0D",
                d:
                  "M441,218c0.5-0.5-0.1-1.5,0.9-1.7c2.3-2.1,4.4-4.5,7.2-6c5.2-2.1,9.2-6.4,14.4-8.6      c6.7-2.7,12.9-6.3,19.3-9.6c10.3-5.4,21.1-9.4,31.7-13.9c7.1-3.1,14.2-6.4,21.8-8.2c25-8.2,50.7-13.3,76.5-18.1      c6.8-1.3,13.6-2.5,20.4-3.8c5.7-0.2,11.3-1.3,16.7-2.4c18.5-3.7,37.3-5.9,56-8.3c19.2-2.5,38.6-4.6,57.9-6.4      c16-1.5,32.1-2.4,48.2-3.4c1.3-0.1,2.6-0.5,3.9-0.7c1.3-0.6,2.9-0.1,4.2-0.8c3.6-0.1,7.1-0.2,10.7-0.3c2.1-0.8,4.4,0.1,6.5-0.8      c27.7,0,55.3,0,83-0.1c2.2,0,4.3,0.1,6.5,0.1c11.5,1.2,23.2,0.9,34.7,1.9c18.8,1.6,37.6,3.1,56.1,7.1c6.1,1.4,12.4,2.1,18.6,3.2      c9.5,1.6,18.6,5,27.9,7.1c7.5,1.7,14.8,3.7,22,6.5c1.2,0.7,2.6,0.9,3.8,1.5c12.6,3.4,24.4,9.2,36.7,13.7      c1.4,0.5,2.7,1.2,3.8,2.3c0.9,1.1,1.4,2.3,0.6,3.7c-2.4,1.5-4.5,0.1-6.6-0.8c-11.7-4.9-23.6-9.6-35.7-13.5      c-6.4-2.1-12.5-4.9-19.2-5.6c-1.1-0.1-2.2-0.3-3.3-0.7c-4.9-2.5-10.3-3.7-15.6-5c-18.4-4.5-37-8.4-55.8-10.8      c-15.5-2-31-3.7-46.7-4.4c-7.3-0.3-14.6-1-21.9-0.9c-27.7-2-55.3-0.4-82.9,0c-5.2,0.2-10.4-0.7-15.5,0.6      c-10.4,1.5-20.9,1.7-31.3,2.5c-12.2,0.9-24.5,2-36.7,3.4c-6.8,0.7-13.6,1.2-20.3,1.9c-40.7,4.6-81.2,10.1-121.5,17.5      c-22.9,4.2-45.8,8.8-68.2,15.2c-24.5,7-47.5,17.3-70,29c-5.3,2.8-10.6,5.6-15.8,8.6c-1.9,1.1-3.8,2.3-5.7,3.4      c-4,2.2-4.3,9.3-7.9,12.2c-1.9-0.7-7.1-3-9.1-4.5C440.5,219.7,440.3,218.9,441,218z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#3A1616", d: "M995.5,658.8" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M1239,657.8c29.4,0.1,220.9,2,222.3-0.5c0-3.3-0.9-44.9-0.8-61.8c0-3.2,0.7-6.3,1.4-9.3c1.7-7.7,2.3-15.7,5-23.2      c1.1-3.7,2.2-7.3,3.3-11c2.8,4.3,0.3,8.1-1.2,12c0,0.7,0,1.3,0,2c0.3,1.4-0.1,2.7-0.4,4c-2.2,15.2-4.2,30.4-3.6,45.7      c0.4,11.3-0.6,22.6,0.8,33.9c1.4,11.8,0.7,12.4-11.2,12.9c-19.2-0.2-38.3,0.5-57.5-0.1c-19.4-0.6-38.9,0.3-58.3-1.8      c-5.7-0.6-11.4,0-16.9,0.7c-13.5,1.7-26.8,1.7-40.2-0.6c-1.8-0.3-3.7-0.2-5.5-0.2c-43.1,0-86.3-0.2-129.4,0.1      c-10.6,0.1-21.2,0.7-31.9,0.9c-32.1,0.5-64.2,1.3-96.3,1c-4,0-8,0-12,0.2c-2.2,0-4.4-0.8-6.4,0.5c-4.4,1.8-8.8,1.2-13-0.6      c-5.1-0.3-10.3-0.7-15.4,0.5c-11.1,0.7-22.3,0.3-33.5,0.6c-2.3-0.5-4.7-0.3-7-0.2c-0.9,0.1-1.8,0.1-2.7,0      c-5.6-0.1-11.2,0-16.8,0c-0.9,0.1-1.7,0.1-2.6,0c-1.7-0.1-3.4-0.1-5.2,0c-1.7,0-3.4,0-5.2,0c-5.8,0.1-11.6-0.5-17.3,0.5      c-1.4,0.3-2.9,0.3-4.3,0.1c-3.1-1-6.2-0.6-9.3,0.3c-13.3,0.8-26.5,0.2-39.8,0.3c-11.6,0.1-23.2,0.1-34.8,0      c-3.8-0.8-7.2,0.2-10.4,2.3c-3.4,0.8-6.7,0.7-10.1,0.2c-1.8-0.5-3.6-0.9-5.5-0.7c-0.8,0-1.6,0-2.4,0c-2.4,0-4.7-0.2-7,0.6      c-5.3,0.6-10.6,1.1-15.7-1.1c-2-0.7-4.1-0.5-6.2-0.7c-0.5-0.1-1.1-0.2-1.6-0.3c-5.4-0.4-10.8-1.6-16,1.2      c-3.8,1.5-7.7,1.6-11.7,1.5c-8.7-0.2-17.4,0.5-26.1-0.4c-0.6-0.1-1.3-0.3-1.9-0.6c-1.1-0.5-2.9-0.5-2.5-2.3      c0.3-1.3,1.8-1.1,2.9-1.2c1.5-0.1-3.5-0.4-2.1-0.8"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3A1616",
                d: "M1168,657.9c14.7,0.4,29.3,0.5,44,0"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2626",
                d:
                  "M1943,581c0.3-0.4,0.7-0.7,1-1.1c1.1-1.4,2.2-2.8,3.7-3.8c2.6-2.2,5.1-4.6,7-7.5      c2.9-2.1,3.8-6.7,8.4-6.7c-1.4,5.2-0.1,7.4,5.9,7c2-0.2,4.1,0.4,6.5-0.2c3-0.7,6.3-0.3,8,3.2c-2.7,4.8-6.3,8.8-10.1,12.7      c-6.6,6.8-12.3,14.3-18.2,21.6c-2.7,4.2-6.5,5.5-11.3,5.2c-4.7-0.3-9.5,0-14.2,0.6c-4.5-1.5-5.3-3.1-3.5-7.2      c2.2-5,6.2-8.9,9.6-13c2.4-2.9,4-6.2,6.3-9C1942.3,582.2,1942.5,581.5,1943,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8D8884",
                d:
                  "M1041,96.7c75.1,6.3,115.5,17.2,145,27.2c0.5,1.4-0.3,2.1-1.3,2.8c-3.4,1.6-6.7-0.6-10.1-0.3      c-2.4-0.1-4.7,0.1-7.1-0.4c-6.3-1.2-12.6-0.3-18.9-0.6c-6.3-0.3-12.5-0.4-18.6-2.2c0-3,2.5-2.4,4.2-2.6c3.2-0.3,6.5,0.1,9.8,0      c4.3-0.2,8.4,0.4,12.6,1.2c-22.7-3.9-44.9-10.2-67.7-13.8c-8.8-1.4-17.6-3.1-26.6-3.5c-6.4-0.7-12.9-1-19.3-1.4      c-5.8-1.4-11.6-0.4-17.4-0.7c-1.9,0-3.9-0.1-5.7,0.5c-1.9,0.2-3.8,0.6-5.1-1.2c-0.2-0.3,0.3-1.1,0-1c-2.9,1-5.8,0.6-8.7,0.5      c-6.1-0.9-12.2-1.6-18.3-1.8c-4.8-0.2-18.4-1.9-16.9-3.1C965.3,95.2,1032.5,96,1041,96.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A8883",
                d:
                  "M1290.2,165.9c3.3,1.3,6.6,2.6,9.9,3.9c14,6.3,28.4,11.8,42.6,17.5c10.8,4.4,21.6,9.3,31.9,14.9      c9.5,5.2,19.5,9.2,29.3,13.6c11.5,5.2,22.6,11.2,33.9,16.8c7.1,3.5,14.1,7.3,21.1,11c1.8,0.9,3.6,1.7,4.5,3.7      c-0.4,3.4-2.9,2.6-4.9,2.2c-1.9-0.3-3.4-1.6-4.8-2.9c0.4,2.1,2.4,1.7,3.6,2.6c1.3,1,3.7,1.4,2.6,4c-3.4,1.3-5.8-1.1-8.2-2.5      c-10.9-6.4-22.5-11.4-33.7-17.2c-9.1-5-18.4-9.7-27.9-14.1c-7.3-3.4-14.5-7.2-22-10.2c-0.9-0.4-1.7-1-2.3-1.8      c-0.1-3.5-2.6-1.1-3.9-1.6c-1.2-0.3-2.3-0.8-3.1-1.8c-0.6-0.9-0.5-2.5-1.8-2.8c-7.4-2-13-7.6-20.3-10c-3.3-1.1-6.7-1.8-10-2.5      c-4-3.4-8.8-5.4-13.6-7.2c-3.4-1.3-6.5-4-10.5-3.7c-5.7-0.9-10-4.9-15.4-6.4c-1.1-1.9-3.4-2.4-4.7-4c-0.7-1.5-2-2.8-1.4-4.6      C1284.7,161.7,1286.7,166,1290.2,165.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M683,663.1c-1.1,1.1-2.4,1-3.7,0.9c-0.8,0-1.1,1-0.4,1.4l0,0c0.5,0.3,0.5,1,0,1.3      c-2.4,1.3-4.9,0.3-7.4-0.2c-1.5-0.2-2.4-1.4-3.7-1.9c0.7,0.6,1.6,0.9,2.4,1.5c0.1,0,0.1,0.1,0.2,0.1c2.7,0.9,5.5,1.4,8.2,2.4      c1,0.4,2.3,0.6,2.6,1.9c0.1,0.3,0,0.5-0.2,0.7c-2.8,2.5-5.9,3.3-9.4,1.1c-8.9-5.6-18.1-10.5-27.5-14.9c-6.4-3-12.5-6.7-19.8-7.8      c-9.2-1.4-18.5-1.5-27.8-2.1c-8.9-0.6-18-0.1-26.9-0.1c-1.8,0-3.7,0.2-5.5-0.4c-0.5-0.2-1,0.2-1,0.7c-0.1,1.8,0.2,3.6-0.3,5.3      c-0.1,0.2-0.2,0.4-0.4,0.5c-3.9,1.8-8.4,0.5-12.3,3c-2.5,1.7-5.7-0.4-6.3-3.6c-0.4-2.2-19.5,12.4-19.5,12.4      c0.8-3.4-76.5,7.1-74.3,4c1.3-4.3,79.5-91.5,82.9-83.9c2.6,5.9,24.4,41.4,24.3,46.6c-0.1,4.3,4.8,5.6,3.6,9.7      c2.6-0.3,2.1-1.7,2-2.7c-0.5-4.5-1.1-8.9-1.7-13.3c-0.3-2.4-1-4.9,0-7.2c0.3-0.6,1.2-0.6,1.4,0.1c1,3.4,0.6,7.1,1.4,10.5      c0.3,1.4-0.2,2.9,1.1,4.1c0.2,0.6,0.2-0.2,0.2,0.4c0,7.2,4.5,9.4,10.7,9.6l0.3,0.2l0.3-0.2c10,0.9,20,0.1,30.1,0.4      c3.2,0.1,6.4-0.4,9.6,0.2c0.5,0,1.3,0.1,1.8,0.1c7-0.5,14.1-1.3,19.8,4.3c0,0,0.1,0.1,0.2,0.1c9.6,5.3,20,9,30,13.3      c2.6,1.1,5.7,0.8,8.6,0.5c0.1,0,0.3,0,0.4,0.1C678.9,663.1,681.1,661.8,683,663.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332F2E",
                d:
                  "M218,665.8c-5.8-0.7-11.5-2-17-3.9c-1.1-0.6-1.5-2-2.9-2.2c-0.4-0.1-0.9-0.2-1.3-0.3      c-9.5-4.7-19.8-7-30.1-9.4c-3.5-0.8-6.5-3.2-9.7-4.8c-2.9-1.4-5.4-3.5-9.2-2.8c-2.8,0.5-6.2-3.9-6.3-7c4.1-1.2,7.7,1,11.6,1.6      c5.2,0.8,10.4,1.9,15.5,3.2c1.3,0.5,2.3,1.3,3,2.5c1,1.6,1.4,1.1,1.9-0.3c0.3-0.7,1.2-0.8,1.7-0.4c3.9,2.6,8.6,2,12.8,4      c4.5,2.1,9.7,1.7,14.6,1.7c5.3,0,10.3,1.5,15.4,2.6c2.7,0.6,5.6,1.3,8.4,2.2c5.4,1.7,8-0.4,9.1-5.9c0.5-2.6-0.2-5.4,1.2-7.8      c0.3-0.6,0.7-1.3-0.6-0.7c-1.5,0.8-3,0.9-3.7-1c-0.7-1.9-0.3-3.6,1-5.2c0.7-0.9,1.7-1.6,2.9-1.8c3.3-0.4,4.6,1.1,4.3,4.3      c-0.1,0.7,0,1.3,0,2c-0.8,9,0.8,17.6,3.4,26.2c0.6,2,1.5,4.1,0.6,6.3c-3.8,3.2-7.6,0.1-11.3-0.3      C228.1,667.8,223.2,666,218,665.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#22120F",
                d:
                  "M1131,172.1c-0.3-1-0.6-2-1-3c0.6-0.9,1.4-0.9,2.3-0.9c0.4,0.1,0.8,0.2,1.2,0.5c1.2,1,2.7,1.3,4.2,1.6      c2.8,1.3,5.6,2.3,8.5,3.1c21.3,9.2,42,19.7,62.4,30.8c1,0.6,2.1,1.1,2.9,1.9c6.5,5.6,14.6,8.4,21.6,13.2      c5.2,2.7,10.1,5.9,15.4,8.4c2.9,0.8,5.3,2.3,7.3,4.6c1,1.4,2.3,2.4,3.8,3.1c16.1,7.7,30,19,45.7,27.2c7,3.6,12.5,9.4,19.6,12.7      c10.5,6.5,20.1,14.3,30.4,21.2c1.4,0.9,2.5,2.1,3.3,3.6c0,0.3,0,0.7,0,1c-0.6,1.7-1.7,1.4-2.9,0.7c-0.5-0.3-1-0.6-1.6-0.8      c-0.4-0.1-0.7-0.3-1.1-0.4c-1.2-0.4-2.5-0.5-3.7-1c-6.5-3.7-11.8-9-18.2-12.8c-40.3-27.4-81.9-52.8-124.7-76.1      c-12-6.5-24.2-12.5-36.5-18.5c-1.3-0.9-2.6-1.6-4.1-2.1c-0.8-0.3-1.6-0.7-2.3-1.2c-0.6-0.3-1.1-0.6-1.7-1      c-0.4-0.2-0.8-0.4-1.2-0.6c-3.4-1.7-7-3.1-10.6-4.2c-4.6-3-9.7-4.9-14.7-7C1133.7,175.1,1131.3,174.8,1131,172.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#190F0F",
                d:
                  "M238.7,613.5c0.3-5.8-0.2-27.2,2-32.7c0.8-0.2,0.9,15.6,1.3,16.2c0.7,7.7-1.6,15.6,1.8,23.1      c0.3,0.6-0.2,1.6-0.5,2.3c-3.6,9.1-2,18.5-2.1,27.8c0,2.9,2.7,5.2,4.9,5.8c2.8,0.8,2.2-3.4,2-4c-1.9-5.6,1.5-5.2,5-5      c0.9,6.6,1.6,13.2,2.8,19.8c1.1,6.4-0.2,8-5.9,6.3c-1.9-1.5-5.1-1.1-5.9-4.1c-3.5-11.3-4.7-22.9-4-34.7c0.2-4.2-2.7-3.2-5-3.3      c-6.1,2.7-12.5,1.8-18.7,1c-10.6-1.3-20.2,0.4-28.9,6.5c-5.7,3.9-11.8,4.7-18.4,2.5c-7.9-0.5-15.4-2.8-23.1-4.3      c-1.6-0.3-3.2-0.8-4.9-0.7c-2.3,2-4.6,0.8-7,0c-3.6-1.6-7.4-2.5-11.3-3c-0.8-0.2-1.6-0.6-2-1.3c-0.1-3.1,2.1-2.8,4.1-2.8      c6.1,1.1,12.3,2.2,18.4,3.6c8,1.5,15.9,3.2,23.8,5.1c2,0.5,4.1,1.8,5.9-0.4c1.6-3.6,4.9-3,7.7-2.6c2.8,0.3,5.2,0.1,7.4-1.7      c5.6-5.7,12.5-7.7,20.4-7.1c2.1,0.2,4.2-0.4,6.3-0.7c3.3,0.6,6.6,0.6,9.9,0l-0.1,0c4.9,0.7,6.9,0.5,11.9-0.2"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1952,641.9c2.1-1.6,4.8-1,7.2-1.7l-0.1,0c10.1-3.3,20.4-4.4,31-3.7c2.1,0.1,4.3,0.4,6.4-0.4l0.3,0.2      l0.2-0.2c10.7-3.9,22-3.5,33.2-3.9c1.6-1.3,3.5-1.4,5.4-1.8c0.5-0.1,1.1,0,1.6,0.1c5,0.2,9.9-1.9,15-1.4l0,0      c2.5-1.6,5.5,0.2,8-1.1l0,0c1.5-1.3,3.5,0,5.1-1l0,0c2.6-1,5.4-1.3,8.1-2l-0.1,0c5.1-1.7,10.3-3,15.6-3.7c0.5,0,1,0.1,1.4,0.4      c-0.3,3.6-3.5,4.3-5.9,5.7c-4.8,1.6-9.6,3.4-14.6,4.7c-5,1.2-10.2,1.5-15.2,2.4c-9.4,1.7-18.9,3-28.3,4.4      c-10.3,1.5-20.5,3-31,3.6c-7.4,0.4-14.7,1.8-22.2,1.7c-4.4,0.3-9-0.9-13.3,1c-0.9,0.5-1.9,0.7-2.9,0.6c-1.6-0.6-3.1-0.4-4.6,0.1      c-0.5,0.1-0.9,0.1-1.4,0.2c-2.2-0.1-4.2,0.8-6.4,1c-0.5,0.1-1,0.1-1.5,0.2c-3.9,0.8-7.9,1.1-11.7,2.4c-0.5,0.2-1,0.2-1.5,0.3      c-3.6-0.5-7.1,0.3-10.6,1c-1-0.1-1.9-0.5-2.7-1.2c-2.2-2.6-5.2-1.3-7.9-1.6c-1.8-0.1-3.7,0.5-5.4-0.4c-1.5-0.9-3-1.6-4.8-1.2      c-1.7-0.3-3.8-0.1-4.3-2.5c1-0.1,2-0.2,3-0.3c5.7-0.4,11.4-1.1,17.1,0.7c5.6,1.8,11.4,1.6,17.1,0.1"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#170E0B",
                d:
                  "M562,616.9c-0.4,8,1.6,15.8,2.3,23.6c0.1,1.2,1.5,3-0.8,2.9c-1.3-0.1-4.1,0.7-4.1-2.3      c0-2.2-0.2-4.2-3-4.6c-0.9-0.1,0-2.6-0.7-2.1c-8.5,5.7-65.5-153.2-26.7-113.2C548.2,550.3,558.1,582.6,562,616.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#AFA9A5",
                d:
                  "M1014.9,101c1.5,1.5,3.4,0.8,5.2,0.8c1.4-0.7,2.9-0.3,4.3-0.3c0.5,0.1,0.9,0.2,1.4,0.3      c5,0.6,10.3-0.8,15.1,1.5c-1.9,1.6-4.1,0.8-6.1,1.4c-0.7-0.3-0.1,0.8-0.3,0.2c0-0.1,0.1-0.2,0.4-0.2c5.2,0.4,10.3-2,15.5,0      c0.9,0.4,2.2,0.5,2.3,1.6c0.2,1.3-1.3,1.2-2,1.7c-1.1,0.8,1.1,0.7,0.6,1.6c-0.7,2.8-3,1.9-4.5,1.5c-12.9-2.8-26.2-3.4-39.3-5.5      c-7.4-1.2-15.1-1.7-22.6-2.6c-2.6-0.9-5.2-0.7-7.8-0.6c-7.2,0.2-14.5-0.4-21.7-0.5c-1.2,0-2.2,0.3-3.3,0.7      c-3.6-0.1-7.2-0.2-10.8-0.3c-1.7,0-3.7,0.2-4.6-1.9c1.1-1.5,2.8-0.6,4.1-1c-4.1,0.5-8.3,0.8-12.4,1.7c-5.9,0.2-11.8-0.5-17.7-1      c-8.1-1.4-16.2-0.3-24.2-0.6c-2.2,0-4.5,0.1-6.7-0.4c-2-0.5-3.9-0.9-5.9-0.3c-0.8,0.1-1.5,0.1-2.2,0c-3-0.7-5.9-0.6-8.9,0.1      c-0.8,0.1-1.6,0.1-2.4-0.1c-5.4-0.6-10.7-0.6-16.1,0.2c-3.2,0.5-6.5,0.9-9.4-1.4c-0.4-0.5-3.7-0.3-3.2-0.7      c3.4-0.4,10.7-1.2,14.3-1.7c1.6,0.6,3.2,0.6,4.8,0c1.4,0,2.8,0,4.2,0c1.9,0.6,3.9,0.6,5.8,0c3,0,6,0,8.9-0.1      c4.5,0.1,42.6,0.9,60.8,0.9c1.8,0,3.6,0.1,5.5,0.2c10,0.8,20.1,0,30.2,0.8c13.6,0.6,27.1,2,40.6,3.5      C1009.5,100.8,1012.3,100,1014.9,101z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191011",
                d:
                  "M101.1,581c5.8,5,11.3,10.2,17.3,14.9c13.1,10.3,26.4,20.4,40.6,29.2c1.9,1.2,2.6,3.7,5,4.2      c1.9,1.3,1.3,2.1-0.6,2.3c-1.5,0.1-2.8-0.9-4.1-1.7c-4.4-2.7-9-5-14-6.4c-4.1-1.1-7.9-1-10.7,2.9c-0.8,1.2-1.9,1.8-3.3,1.9      c-4.7-0.4-9.1-1.7-13.5-3.3c-0.2-0.1-0.4-0.2-0.4-0.2c-1.1-1.7-5.2-0.8-4.1-3.8c1-2.6,4.1-2.8,7.1-2.1c-3.7-1.3-3.9-3.1-0.9-7.3      c0.5-0.1,0.9-0.1,1.4,0c2.5,1.3,5.2,1.5,8.5,2.7c-1.1-3.3-2.9-5.1-5.1-6.5c-3.8-4.4-8.1-8.4-12.9-11.8c-4.3-3.2-7.1-8-11.4-11.2      c-0.5-0.6-0.9-1.2-0.9-2C99.5,581.7,99.5,580.5,101.1,581z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#26211F",
                d:
                  "M2076,417c-0.3-0.3-0.6-0.7-0.9-1c-1.2-1.7,0.1-2.7,1.2-3.7c2.9-3,6.2-5.5,9.9-7.3      c0.9-0.5,1.8-0.8,2.6-1.4c4.3-2.7,3.4-2.4,5.1,2.2c3.5,8.9,0.6,17.8,1.5,26.7c0,3.1,0.1,6.2-0.1,9.3c-2.4,4.1-4.7,4.6-10.3,2.2      c-2.2-2.6-2-6.1-3-9.1l0.1,0.1c-1-2.1-1.7-4.2-1.7-6.5c1.8-2.4,4.3-0.7,6.4-1c1.4-0.2,3.5,0.1,3.5-1.9c0-1.8-1.6-2.8-3.4-3      c-2.6-0.3-5.2,1.4-7.8,0C2077.9,420.9,2077.4,418.7,2076,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1847.9,401.8c-2.7-1.9-6.3-1.6-8.8-3.8c-1.2-0.9-3-1-3.9-2.5c-0.8-1.4-1.9-2.8-1.4-4.6      c0.4-0.3,0.8-0.5,1.3-0.6c0.5,0,1,0,1.4,0.1c4.3,1.3,8.3,3.4,13.3,3.1c2.8-0.2,6.1,3.1,8.8,5c4.8,3.4,10.8,3.8,15.6,6.8      c1.6,1.1,3.6,1.6,5.3,2.7c6.4,2.6,12.2,6.5,19.2,7.6c0.7,0.1,1.4,0.2,2.1,0.5c1.6,0.9,3.3,1.8,4.4,3.5c-0.1,3.5,2.9,2.6,4.8,3.4      c16.4,4.1,32.6,9.4,49,13.3c2,0.5,4.1,0.8,5.8,2.2c0.8,1.2,0.1,1.9-0.8,2.6c-1.6,0-3.1-0.3-4.6-0.9c-15.9-1.9-31-6.8-46.3-11.3      c-10.1-2.7-20-5.8-29.3-10.8c-0.9-0.9,0.4-2.7-1.4-3.2c-0.9-0.5-1.9-0.9-2.8-1.4c-1.3-0.7-2.6-1.3-4-1.7      c-1.4-0.5-2.7-1.2-4.1-1.8c-0.4-0.2-0.8-0.4-1.2-0.6c-2.5-1.4-5.3-2-7.8-3.4c-0.4-0.2-0.8-0.3-1.2-0.5c-3.1-1.2-6.1-2.8-9.3-3.9      C1850.7,400.6,1849.3,400.8,1847.9,401.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1A0D0E",
                d:
                  "M2032.8,428c0,2.3,0,4.6,0,7c-4.9,4.1-10.9,6-16.8,8c-5.2,1.9-10.3,3.7-16,2.8c-0.8-0.4-1.6-0.3-2.4-0.4      c-0.7,0-1.5,0-1.6-0.8c-0.1-1,0.8-1.3,1.5-1.6c5.5-1.9,10.6-4.7,15.4-8c2-1.4,3.9-3.2,6.7-2.9c1.1,0.2,2,0.7,2.8,1.4      c-1-1.1-1.4-2.4-1.6-3.8c-0.2-4.1-2.2-7.6-3.6-11.3c-2.5-4.4-6.4-7.4-10.2-10.5c-1.6-1.3-3.5-2.5-4.5-4.5      c0.5-3.6,2.7-1.9,4.5-1.5c3.7,2.4,8.2,3.2,11.6,6.1c5.7,3.9,10.4,8.6,12.8,15.2C2032,424.9,2032.4,426.4,2032.8,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B9894",
                d:
                  "M1463,248c-8.5-6.4-18.4-10.1-27.7-15c-9.6-5.1-19.2-10.5-29.2-14.7c-14-5.9-27.4-13.2-41.3-19.2      c-6.5-2.8-12.7-6.2-19.2-9c-13-5.6-26.2-11-39.3-16.4c-2.3-0.9-4.7-1.7-6.3-3.8c6.5,2.5,13,5,19.4,7.5      c15.1,6,125.7,57.9,140.4,65.7c2.6,1.4,5.4,2.4,7.1,5.1C1465.5,250.8,1464.3,249.1,1463,248z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#282424",
                d:
                  "M795.6,685.9l-0.3-0.2l-0.3,0.2c-9.6,1.1-19.2,1.5-28.8,1.6c-2.8,0-5.6-0.5-8.3,0.4l0.1,0      c-3.7,1.4-7.5,0.4-11.2,0.6c-8.4,0.4-16.8-0.5-25.1,0.4l-0.3-0.2l-0.3,0.2c-3,0.9-6,0.8-9,0c-0.3,0-0.7,0-1,0      c-3.7,0.8-7.3,0.9-11,0c-3.3,0.6-6.6-1.1-10-0.1c-4.9,0.1-9.7-1.1-14.6,0.1l-0.2-0.1l-0.2,0.2c-3.7,1-7.5,0.3-11.2,1.1      c-10,0-19.9,0-29.9,0c-1.3,0-2.7,0.1-4-0.1c-0.8-0.1-1.7-0.2-1.7-1.4c0-1.1,0.9-1.3,1.7-1.5c2.1-0.7,4.3-0.6,6.4-0.5      c15.3,0.2,30.5-1.7,45.7-0.8c1.7,0.1,3.3-0.2,4.9-0.7c1.5-0.3,3-0.5,4.5-0.4c20.2,0.6,40.3-0.7,60.4-1.3      c14.5-0.4,29-0.2,43.4-1.1c3.9-0.2,4.2,0,3.9,2.7C798,685.5,796.7,685.4,795.6,685.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#888781",
                d:
                  "M1463,248c1.3-0.4,2.5,1.7,3.9,0.2c1.2,0.3,2.5,0.6,3.7,1c1.4,0.9,3.2,0.9,4.2,2.3      c9,6.5,19.2,8.5,30.1,7.7c0.2,0.5,0.1,0.9-0.2,1.2c-2.8,1.4-5.7,0.8-8.6,0.7c-1.7,0-1.2,0.8-1.1,1.7c-0.6,1.1-1.6,1.6-2.7,2      c-3.5,0.9-6.9,2.1-9.4,4.8c-0.6,0.7-1.2,1.4-2.2,1.6c-2.2-3.6-6.5-5.2-8-9.6c-0.8-2.2-4.8-2.4-7.2-3.7c-2.1-1.4-5.5-1.3-5.5-4.9      c-1.9-3.7-6.7-3.1-9.1-6c2.8-2,2.6-1.6,5.4,0.6C1458,249,1460.7,250.2,1463,248z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#928E8A",
                d:
                  "M1290.2,165.9c-3.6,0.9-6-2.2-9.2-2.9c-2.7,1.2-5.3,0.2-7.6-0.9c-16.1-7.6-33-13.2-49.3-20.1      c-8.7-3.7-18.5-5-26.4-10.6c-2.5-0.9-5.1-1.7-7.7-2.5c-1.7-0.8-4.1-0.6-5-2.8c0.4-0.7,0.7-1.5,1.1-2.2      C1190.8,124.3,1284.9,162.4,1290.2,165.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3735",
                d:
                  "M134,635c2.3,0.6,4.6,1.3,7,1c3.1,2.2,4.9,5.7,10.3,5c3.8-0.5,8.2,3.8,12.2,6.1c1.1,0.6,2,1.6,3.4,1.9      c10.7,2.1,21.5,4.2,31.1,10c-1.4,1.6-3.4,0.7-5,1.1c-10.7-2.4-21.6-4.7-32-8.3c-1.6-3.2-4.9-0.3-6.9-1.8l0,0      c-0.3-1.4-0.9-2.6-2.5-2.7c-4.4-0.2-8.9-1.7-12.1-3.8c-3.6-2.3-7.4-4.9-10.6-8c-0.2-0.2,0.3-0.9,0.8-1.1      C131.1,634.4,132.6,634.3,134,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1081,313.2c-2.4-0.1-4.7-0.2-7.1-0.4c-1-0.7-2.3-0.1-3.3-0.7c-0.4-0.2-0.9-0.4-1.3-0.6      c-4.1-0.4-8.1-0.4-12.2,0.4c-5.1-0.8-10.3-0.3-15.4-0.4c-1.9,0-3.8,0-5.8,0c-2.1-0.5-1.3-2-1.2-3.2c0.5-0.8,1.2-1.1,2-1.3      c3.4-0.5,6.7-0.2,10.1-0.3c2.6-0.1,5.2,0.2,7.7,0.9c3.2,0.2,6.5,0.1,9.7,0.1c6.4,0.1,12.9-0.2,19.3,0.3      c4.7,1.5,9.7,0.1,14.4,1.1c7.3,1.3,14.6,0.3,22,0.6c5,0.1,10.1-0.4,15.1,0.4c7.4,1.4,14.9,0.3,22.4,0.7c2.2,0.1,4.6-0.4,7.1,2.1      c-5.7,2.3-11.1,1.1-16.3,1.2c-5.5,0-10.9,0.7-16.4,0.6c-5.5-0.1-11,0-16.5,0c-2.8-0.1-5.6,0.3-8.4-0.3      c-5.9-0.1-11.8-0.2-17.7-0.3C1086.6,312.9,1083.7,314,1081,313.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2C2524",
                d:
                  "M188,632.9c-1.5,2.7-3.6,3.3-6.6,2.5c-2.8-0.7-6-1.4-7.3,2.6c-3.9,0.8-6.7-2.2-10.2-2.8      c-6.3-1.1-12.7-1.5-18.9-3.3c-3-0.9-6.1-1.5-9.2-2.3c-1.4-0.4-3.5-0.1-3.7-2.5c7.4-8.3,10.2-6.8,23.6-0.8      c2.6,1.1,4.8,2.9,7.3,4.3c1.7,0.9,1.5-0.1,1.1-1.3c3.1-0.8,4.5,2.1,6.9,3"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M1903,647c1.7,1.1,3.3-0.3,5,0c2.6,2.7,6.3-0.2,9,2c0.4,0.8,1.2,1,2,1c1.1,0.9,3.6,0.5,3.2,3.1      c-3.4,1.3-6.4,3.7-10.3,0.4c-1.2-1-4-1.3-6.1-0.9c-3.6-0.5-6.3-3.1-9.7-4.2c-1.5-1.3-3.4-1.5-5.1-2.3l0,0      c-8.6-4.2-18-2.9-27.1-4c-1.8-0.2-3.6,0-5.4-0.1c-5.8-1.3-11.7,0.5-17.5-1c-1.7-2.5-2.1-5.3-2.1-8.4c0-7.9,0.7-15.9-0.9-23.8      c-0.3-1.4-0.3-2.7-2-2.8c1.7-4.9,0.7-10,1-15c2,7.4,1.7,15.1,2.9,22.6c0.2,1.1,0.2,2.3,0.3,3.4c0.8,2.3-0.3,4.9,0.7,7.2      c0,3.3,0.4,6.6,0,9.9c-0.5,4,1.8,4.8,4.7,4.9c4.8,0.2,9.6,0.1,14.3,0.1c1.9,1.1,4.1,0,6,0.8c1.9,0.1,3.7,0.2,5.6,0.3      c2.7,1,5.6-0.1,8.4,0.7c4.8,0.5,9.9-0.3,14,3.4c1.5,1.1,3.2,1.5,5,1.8C1900.4,646.2,1901.8,646.3,1903,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1236.9,349.8c-6.6,0-13.2,0-19.9,0c-2.9-0.6-6-0.5-8.6-2.5c-4.2-3.7-5-8.7-4.9-14      c0.2-0.5,0.6-0.7,1.1-0.8c2.2,0.7,1.9,2.8,2.5,4.4c1.6,5,4,6.7,9.3,6.7c0.8,0,1.5-0.1,2.3-0.1c7.3,0.8,14.2-1.2,21.2-2.5      c2.4-0.4,4.7-1,7.1-1.5c0.5-0.1,0.9-0.2,1.4-0.2c2.3,0.5,3.9-0.2,5-2.3c0.3-0.4,0.6-0.7,1-0.9c3.4-0.9,2.4-5.9,6.1-6.6      c1.4,0.6,1.5,1.8,1.3,3.1c-0.7,2.2-1.7,4.2-3.3,5.8C1252.6,344.8,1245,347.8,1236.9,349.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#210E0C",
                d:
                  "M242,597c-0.6-0.3-1.1-0.6-1.7-0.9c-0.3-18.6,4.3-37.7,11-55.7c4.8-12.9,10.8-25.4,19.6-35.4      c0.3,4.2-3.1,7-4.2,10.5c-1.1,3.5-4.8,5-4.8,8.9c0,3.6-1.3,6.8-4.6,8.8c-0.1,0.1-0.4,0.1-0.4,0.2c-0.8,5.5-4.2,10.4-4.9,15.6      c-0.4,2.9-2.7,3.5-3,5.7c-0.7,5.9-2.7,11.7-3.5,17.4c-0.8,5.5-2.4,10.7-2.9,16C242.3,590.9,242.1,594,242,597z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#443C3D",
                d:
                  "M2012,615.1c-0.8,1.1-1.4,2.5-3,2.6c-2.6-1.7-5.1,0-7.7,0.3c-1.5,0.3-3,0.3-4.5,0.4      c-2.4,0-4.8-0.1-7.2,0.7c-2.3,0.4-4.6,0.3-6.9,0.4c-5.3,0-10.6,0-15.9,0c-1.4,0-2.8-0.1-4.2-0.4c-2.7-0.9-5.5-1.5-7.9-3.2      c-1.3-1.2-3.5-2.8-2.7-4.2c1.1-2,0.4-5,3.2-6.1c3.3-0.4,2.4,3,3.9,4.2c0.9,0.8,2.1,1.2,3.2,1.6c8.9,2,18,0.9,27,1.3      c1.3-0.1,2.7,0.5,4-0.1c-0.4-0.1-0.7-0.1-1-0.2c-1.6-0.6-4.4,0.6-4.1-2.8c2-1.2,4.1-1,6.2-0.7c5.5,0.8,10.2,4.5,16,4.1      C2011.3,612.9,2012.3,613.8,2012,615.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1496.8,281.5c-4.3,1.3-18.8,5-35.9,1.4c-4.6,0.1-17.8-0.1-21.3-1.4c-2.8-0.9-5.9-0.5-8.7-1.7      c0.4-2.8,2.9-1,4.4-1.9c-2.3,0.2-4.5,0.5-5.5-2.1c0.4-1.7,1.8-1.9,3.1-1.6c3.9,0.7,7.7-0.2,11.6-0.5c1.9,0,3.8,0,5.8,0      c2.8,0,5.6,0,8.4,0c1.8,0,3.7,0,5.5,0.3c4.8,1.3,9.7,2.2,14.7,2.8c0.3,0.3,0.5,0.7,0.7,1.1c1.2,1.7,3,0.8,4.5,1      C1485.5,279.1,1496.1,279.3,1496.8,281.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1114.7,314.2c16.1,0.2,32.1-1.7,48.2-2.2c-7.6,0-15.1,0-22.7,0c-1.8,0-3.7,0.6-5.2-0.9      c1.7-1.9,3.9-1.5,6-1.5c11.6-0.1,23.1,0,34.7-0.1c2,0,4,0.3,5.8-0.8c2.3-0.6,4.7-1.5,4.8,2.4c0,1.3,0.8,0,1,0      c5-2,9.6,0.3,14.3,1.4c0.7,0.2,0.8,0.9,0.5,1.6c-1.5,0.8-3.2,0-4.8,0.3c-1.9,0.1-3.8-0.3-5.6,0.4c-25.4,0-50.9,0-76.3,0      C1114.8,314.9,1114.6,314.6,1114.7,314.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#221B1A",
                d:
                  "M1481.1,271c0.3-0.7,0.6-1.3,0.9-2c1-0.4,1.9-0.2,2.8,0.2c2,1.3,4,1.1,6,0c2.1-1.1,4.3-1.5,6.6-1.5      c1.9,0,3.8,0,5.8,0c2.4,0.3,4.5-0.4,6.2-2.2c0.8-0.6,1.7-1,2.7-0.7c0.8,0.7,1.2,1.5,1.4,2.5c-0.4,2.5,1.7,6.2-3.1,6.9      c-2.4,0.5-4.8,0-7.2,0.1c-0.3,1.5,1.7,2.3,0.8,3.7c-0.2,0.5-0.3,1-1,0.7c-1.9-0.3-3.8-0.4-5.4-1.8c-0.9-0.8-2-1.2-2.9,0.1      c-0.2,0.5-0.4,1-0.8,1.3c-2.7,2-12,1.9-14.8-0.2l-0.2-0.2C1480.9,276,1479.5,273,1481.1,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1087,151.9c-14.5-4.1-28.9-8.7-43.6-12c-16.5-3.6-33.2-6.2-49.8-8.8c-21.2-3.3-42.6-3.9-63.9-5.1      c-1-0.1-2,0-2.8-0.8c11.2,0.3,22.4,0.6,33.6,0.9c1.7,0.8,3.7,0,5.5,0.7c5.8,1.2,11.7,1.3,17.6,1.3c1.7,0.8,3.6,0,5.4,0.7      c0.9,0.1,1.9,0.1,2.8,0.2c1.6,1,3.6-0.1,5.2,0.8c0.6,0.1,1.2,0.1,1.8,0.2c1.6,1,3.6-0.1,5.2,0.8c2.2,1.1,4.5,1.4,6.9,1.1      c1.6,1,3.5-0.1,5.1,0.9c5.9,1.4,11.8,2.8,17.8,3.2c1.6,1,3.6-0.3,5.1,0.9l0.1,0c1.4,1.3,3.6-0.6,4.9,1.3      c7.6,2.1,15.1,4.5,22.9,5.8c2.4,0.6,4.9,1,7.2,2l0,0c3.3,1,6.9,1.5,9.9,3.3c1,0.5,2.1,1,3.1,1.6c0.4,0.2,0.5,0.4,0.4,0.6      C1087.3,151.8,1087.2,151.9,1087,151.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M509.2,273.7c-9.6-1.3-21.9-7.9-32.9-13.8c-7.9-4.3-14.4-10.3-21-16.3c-3.5-3.1-6.9-6.5-10.4-9.7      c-0.7-1.1-0.4-1.9,0.8-2.4c4.6,1,7.3,4.9,10.7,7.7c6.9,5.7,13.5,11.7,20.9,16.8c9.4,6.5,20,10.3,31.1,12.7      c1.9,0.4,3.9,0.6,5.5,2C514.5,273.7,510.1,272.9,509.2,273.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#363836",
                d:
                  "M759,293.8c-1,0.1-2,0.1-3,0.2c-1.5-1.4-3.9,0.5-5.3-1.3c0-0.6,0.4-1,1-1.1c4.9,0.1,9.8-0.2,14.7,0.2      c-4.9-0.5-9.8-0.1-14.7-0.2c-0.9,0-1.7,0.4-2.5,0.3c-4.3-1-8.8-0.1-13.1-0.7c-0.5-0.1-1.1-0.2-1.6-0.4c-3.2-0.8-6.4-0.3-9.7-0.4      c-2.5,0-4.9-0.5-7.4-0.5c-3.4-0.8-6.9-0.8-10.4-0.1c-1.4,0.1-2.7-0.5-4-0.3c-1.6,0-3.3,0-4.9,0c-1.6-0.1-3.3,0.2-4.9-0.2      c-0.4-0.5-0.4-1,0.1-1.4c2.5-0.7,5.1-0.3,7.6-0.3c-2.8,0.1-5.6-0.8-8.3,0.7c-4.9-0.7-10.1,0.4-14.9-2.5c2.8-3,5.9-1.8,8.7-2.1      c5.8,0.2,11.6-0.3,17.3,0.3c4.8,1.5,9.9,0.2,14.8,1c2.6,1,5.4,0.7,8.1,0.9c0.5,0,1.1,0.1,1.6,0.3c2.3,0.8,4.7,0.5,7,0.6      c2.1,0,4.2,0,6.3,0.1c0.5,0,1,0.1,1.6,0.3c1.7,0.6,3.6,0.6,5.4,0.6c1.9,0,3.8,0,5.6,0.4c2.6,0.9,5.3,0.5,8,0.6      c1.9,0,3.8,0,5.7,0.1c0.8,0,1.6,0.2,2.4,0.4c1.8,0.6,3.6,0.6,5.5,0.6c2.2,0.1,4.5-0.3,6.5,1c0.7,0.7,0.7,1.5,0.4,2.3      c-0.6,0.7-1.4,0.8-2.3,0.8c-4-0.6-8-0.7-12.1,0.1C764.9,294.6,762,293,759,293.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M637.1,147c-0.7,2-3.3,0.1-4.1,2c-26.2,4.6-52.2,10-78.1,16.3c-6.4,1.6-12.6,3.8-18.9,5.8      c-0.9-1.4,1-1.2,1.2-2c1.3-0.7,2.5-1.3,3.8-2c2.4-0.9,4.9-1.4,7.4-2c13.6-3.2,27.3-6.5,40.9-9.4C605.1,152.2,621,149,637.1,147z      "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#433733",
                d:
                  "M2053.8,654.9c-1.3,0-2.5,0.1-3.8,0.1c-8.2,1.9-16.5,3.4-24.9,4.9c-2.3,0.4-4.6,0.7-6.9,0      c-1.2-0.7-2.8-1.1-2.1-3.1c2.9-2.6,6.6-1.9,10-2.6c9.5-2,18.9-4.1,28.5-5c4.8,1.1,9.3-0.7,14-1c1.7-0.5,3.5-0.4,5.2-1      c1.7-0.4,3.3-0.8,5.1-0.8c1.2,0.2,2.4,0.5,3.2,1.6c-5.4,3.7-12,2.9-17.8,4.8c-1.7,0.5-3.5,0.8-5.2,1.2      C2057.4,655.1,2055.4,653.9,2053.8,654.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#665C59",
                d:
                  "M2018,659c8.8-0.2,17.3-2.6,26-3.6c2-0.2,4-0.3,5.9-0.5c-13.1,4.6-26.7,7.2-40.1,10.8      c-4.4-1-8.4,1.9-12.8,1.4c-1.7-0.1-3.4-0.3-3.6-2.5c0.2-1.2,1.2-1.7,2.2-2.2c0.5-0.2,1-0.4,1.5-0.5c1.8-0.2,3.6-0.2,5.2-1.1      C2007.5,659.7,2012.5,657.2,2018,659z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M693,288c0,0.3,0,0.6,0,0.9c-0.6,0.7-1.3,0.6-2,0.3c-3.9-0.1-30.4-0.7-33.1-1.7      c-85-4.4-126.9-8.5-152.8-14.8c-0.3-0.9,1.4-1.9,4.7-2.3c12.1-0.3,163.5,11.6,175.5,12.8c0.6,0.3,0.9,0.8,0.9,1.5      C683.9,284.9,688.5,286.4,693,288L693,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#251D1A",
                d:
                  "M1539.5,274.9c-0.8,0.1-1.7,0.1-2.5,0.2c-1.7,0.9-3.7-0.1-5.4,0.8c-3.5,0-6.4,2-10.5-0.1      c-1.8-1.5-3.3-3.2-3.6-5.7c2.4-4.5,6-1.2,9-1.3c2.9,0.9,5.3,3.6,9,2.7c-2.4-2.7-6.2-1.9-8.9-3.7c-1.7-0.9-3.6-1.5-5.4-2.1      c-1.4-0.6-3-0.3-4.3-1.1c-1.7-1-1.9-2.2,0-3.3c4,0.4,7.9,1.2,11.9,2.1c5.2,1.3,10.9,1.1,15.5,4.6c1,3.3,0.5,5.7-3.5,6.2      C1540.4,274.5,1540,274.7,1539.5,274.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M811,299.4c-1.8-0.1-29.3-2.2-31-3c1.4-2,31.4-1.5,33.4-1.8c12,0,23.9,0.8,35.8,1.9      c3.6,0.3,7.3,0.8,10.8-0.6c0.5-0.6,0.5-1.8,1-2.4c0.6-0.5,1.8-0.1,2.6,0.1c0.5,0.1,0.9,0.4,1.3,0.6c1.8,1.6,4.8,0.9,6.2,3.2      c-0.3,0.9-0.9,1.3-1.8,1.5c0.6,0.3,1.2,0,1.9-0.1c2.6-0.2,5.3-0.4,7.9,0.3c1.1,0.3,3,0.7,1.2,2.5c-3.4,0.8-6.5,0.6-10,0.6      C868.3,302.1,812.9,299.5,811,299.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#220F0D",
                d:
                  "M1983,618c2.3,0,4.6,0,7,0c2.2-1.2,4.8,0.3,7-0.9c1.7,0,3.3,0,5-0.1c1.1-0.7,2.1-0.5,3.3,0.3      c-2,2-2.3,2.4-4.7,2.9c-18.7,3.8-55.6,3.3-64.5-1.3c-1-0.6-2.4-0.4-3-1.6c-0.7-1.4-4.9-2.9,0.1-4.2c1.6,0,3,0.6,4.5,1.2      c4.2,1.9,8.5,2.7,13.1,2.4c3.8-0.2,7.5,0.5,11.2,1.3c1.3,0,2.7,0,4,0C1971.7,618.9,1977.3,618.8,1983,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M935.4,309.4c-4.2-1.2-61.3-7.4-66.2-9.1c-0.6-0.1,65,2.2,70.6,2.2c0.4,0.5,22,1.9,36.3,2.3      c5.2,0.5,105.9,4.5,110.4,5c3.6,0.4,111.6,0.4,109,2.7C1195.6,323,941.1,309.4,935.4,309.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1998,443.9c-0.3,0.1-0.7,0.1-0.9,0.3c-0.3,0.3-0.2,0.5,0.3,0.6c1,0.1,2,0.1,2.6,1c-2.6,0-5.1,0-7.7,0.1      c-0.7-0.2-1.3-0.5-1.9-0.7c-2.4-0.7-5.7,0.4-6.2-3.9c-0.1-0.9-2.9-1.1-4.6-1.1c-4.5-0.1-8.9-0.3-13-2.4c-2-1.2-4.2-1.6-6.6-1.3      c-2.1,0.2-4.3,0.3-5.3-2.3c0.7-2.3,2.3-3.5,4.5-4c4.3,0.2,8.3,1.6,12.3,2.9c6.1,1.8,12.4,2.1,18.6,3.1c1.4,0.6,1.3,1.8,1.5,2.9      c1.2,1.6,3.1,0.7,4.6,1.1C1998.4,440.7,1999.4,441.7,1998,443.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403B38",
                d:
                  "M1924.5,684.9l-0.3-0.2l-0.2,0.2c-4.7,1.2-9.4,0.2-14.1,0.5c-1.8,0.1-3.6-0.3-5.3,0.4      c-0.5,0-1.1,0.1-1.6,0.1c-1.7,0.8-3.3,0.6-5,0.2c1.7-4.1,5.8-2.2,8.7-3.5c5.3,0.2,10.7-0.8,14.9,0.7c-1.2-0.2-1.2-1.9,0.6-1.9      c5.2-0.2,10-2.6,15.1-2.7c5-0.1,9.9-1,14.7-2.6c12-1.3,23.6-5.1,35.4-7.3c2.2-0.4,4.5-1.8,6.6,0.2c-2.7,1-5.3,2.1-8,3.1      c-10.7,2.4-21.5,4.6-32,7.9c-1.7,1.1-3.7,0-5.4,0.9l-0.3-0.2l-0.3,0.2c-1.7,1.2-3.7,0-5.4,0.9l-0.3-0.1l-0.3,0.2      c-1.6,1.2-3.7-0.1-5.3,0.9l-0.4-0.2l-0.3,0.2c-1.6,1.2-3.6-0.1-5.2,0.9l0.1-0.1C1929,685.3,1926.6,683.9,1924.5,684.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2E2927",
                d:
                  "M92.1,621.9c-0.4-1-0.8-1.9-1.1-2.9c-1.1-2.9,0.7-2.4,2.2-1.7c3.3,1.4,3.8-0.4,3.7-3      c-0.2-3.9,0.5-7.6,2-11.1c0.7-1.6,1.3-3.5,3.5-3.8c1,0,1.9,0.4,2.8,0.9c1.3,1,3.1,1.7,3.2,3.8c-3.1,3.4-2.6,8-3.6,12.1      c-0.7,2.5-1,5-4.1,5.7c2,3.8,7.4,1.9,8.6,6.2c-0.7,0.7-1.6,0.9-2.6,0.9c-2.1-0.3-4-1.1-5.9-1.9c-0.4-0.2-0.8-0.4-1.2-0.6      c-1.5-0.9-3-1.9-4.7-2.5C93.6,623.5,92.8,622.9,92.1,621.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#45403D",
                d:
                  "M129,635c2.6,2.6,6.4,2.8,9.4,4.8c3.1,2.1-0.8,2-0.4,2.8c5.8-0.5,10.4,3.5,15.9,4.1      c1.9,0.2,1.5,2.1,0.1,3.2c-4.6,0.3-8.5-2.4-12.9-3c-1-0.8-2.3-0.2-3.3-0.7c-2.3-0.5-4.8-0.2-6.8-2c-0.4-1.9,0.6-1.9,2-1.6      c-6.2-1.3-10.5-4.9-13.2-10.5c0.3-0.4,0.8-0.5,1.2-0.2c0.7,0,1.3,0,2,0.1C124.8,633.3,128,632,129,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1813,356.8c4.3,0.1,8.7,0.2,13,0.4c6,0.8,12.1-0.1,18,1.3c4.2,0,8.5-0.4,12.2,2.3      c-1.6,1.9-3.6,1.4-5.6,1.2c-1.8-0.6-3.7-0.8-5.7-0.7c-1.4,0-2.8,0-4.1,0c-4,0.2-7.9-0.2-11.7-0.9c-9.1-0.2-18.2,0-27,2.5      c-1.6,0.5-3.3,0.5-4.9,0.5c-2.7-0.2-5.3,0-7.9,1c-0.5,0.1-0.9,0.2-1.4,0.3c-1.8-0.5-4.3,1.3-5.3-1.7c0-0.5,0.2-0.9,0.5-1.3      c1-0.7,2.1-1,3.2-1.5c2.2-1.1,4.7-0.1,6.9-1.1l-0.1,0c4.3-1.3,8.9-1.1,13.2-2c0.6-0.1,1.2-0.1,1.7-0.2      C1809.7,356.4,1811.3,355.7,1813,356.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#302523",
                d:
                  "M2084,627c2-1.5,4-3,6-4.5c1.4-2.3,2.8-0.6,4.2,0c2.1,2.9,3,5.9-0.1,8.8c-1.3,1-2.8-0.1-4.2,0.1      c0.3,0.9,1.1,1.3,1.6,1.9c0.5,0.5,0.9,1,1.3,1.6c0.4,3.1,3.9,3.4,5,5.8c-3.8,2-7.4,4.6-11.8,5.3c-0.4-0.8,0-1.4,0.5-1.9      c1.1-1,2.3-1.8,3.6-2.3C2087.4,637.2,2080.8,634.1,2084,627z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#210E0C",
                d:
                  "M303,473.1c-0.4,2.9-2.8,4.6-4.8,6c-9.3,6.6-17.2,14.3-22.4,24.6c-1.1,2.2-3.2,1-4.9,1.2      c2.6-6.3,7.8-10.7,12.1-15.8c4.9-5.9,10.3-11.1,16.7-15.3c0.6-0.4,1.5-0.6,2.2-0.8C302.4,472.5,302.7,472.6,303,473.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2012,615.1c-0.1-0.1-0.2-0.4-0.3-0.4c-8.3,0.2-15.3-6-23.7-4.7c-2,1.3-3.9,1.9-5.2-0.9      c3.6-2.3,7.4-0.8,11.6-0.5c-3.5-0.8-6.5-0.6-9.5-0.7c-1.6-0.1-3.5,0.5-4.1-1.8c5.1-3,10.5-1.3,15.8-1.2      c6.6,0.2,12.7,3.1,19.3,3.8c0.7,0.8,0.8,1.5-0.2,2.1C2014.5,612.3,2013.3,613.7,2012,615.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M537.2,169.1c0.7,1.3-1.3,1-1.2,2c-17.9,6.6-35.4,14.2-52.8,22c-0.7,0.4-1.4,0.5-2.1,0.1      c1.5-3.7,5.3-3.7,8.2-5.1c10.7-4.6,21.5-9.2,32.2-13.8c0.9-0.4,1.7-0.9,2.5-1.4c1.8-0.7,3.5-1.4,5.4-1.8      C532,170.4,534.6,169.8,537.2,169.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1967,437c4.5,1.6,9.2,2.1,14,2c1.1,0,3.1-0.6,3.1,0.5c0.1,4.8,4.7,3.6,6.8,5.6c-1.7,0.5-3.3,0.6-5-0.1      c-10-0.8-20-2.4-29.8-4.5c1-2.2,2.6-0.9,4-0.7c1.2,0.3,2.5,0.5,3.7,0.8c3-1.4,6,0.1,9-0.2c0.7,0-0.3-1.1,0-0.5      c-2.8,0.8-5.4,0.2-8-1c-1.9-0.4-3.8-0.9-5.8-1.3C1961.4,434,1964.4,437,1967,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M835,97c6.8,2.4,13.6-0.9,20.4,0c1.9,0.3,4-0.7,5.6,1c-3.6,2.2-7.8-0.1-11.5,1.7      c-8.7,0.7-17.4,0.1-26.1,0.3c-2.7,0-5.4,0-8.1,0c-2.3,0-4.6,0-6.9,0c-2,0-3.9-0.2-5.9,0.5c-3.1-0.2-6.2,0.8-9.3,0.5      c-2-0.2-4,0.5-5.9-0.5c-0.6-0.4-3.4,0-2.9-0.5c0.2,0.1,33.9-2.9,40.5-2.9C828.3,96.9,831.6,96.6,835,97z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1895,366.2c18.2,1.2,36.2,3.2,53,10.9c-2,1.8-4,0.7-6,0.1c-1.7-0.5-3.4-1.5-5.2-0.5      c-3.1-0.3-5.4-2.8-8.6-2.7c-0.9-0.2-1.9-0.4-2.9-0.5c-2.8-0.2-5.6,0.3-8.2-1.1c-2.7-1.5-5.8-1.1-8.6-1.7      c-4.9-0.6-10,0.5-14.5-2.6C1893.6,367,1894.1,366.5,1895,366.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4C48",
                d:
                  "M105,601c-0.8,0-1.6-0.2-2-1c-1.4-1.3-4.6,0.6-4.8-2.7l-0.2-0.4c1-3.1,0.7-6.3,0.2-9.4      c-0.9-3.1-2.5-6.1-2.1-9.5c3.2,0.2,2.5,3.5,3.9,5c0.3,0.4,0.6,0.7,1,1.1c3.4,4,6.4,8.1,7.8,13.3      C108.5,599.6,107.7,601.3,105,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3E3835",
                d:
                  "M98.1,597.3c1.6,0.9,3.2,1.8,4.8,2.7c-4.8,3.3-4.6,8.6-4.9,13.4c-0.3,5.7-0.4,6-6.1,4.3      c-0.9-0.3-0.8,0.7-1,1.3c-1.1-3.4-2.9-6.7,2.8-8.2c2.5-0.6,1.9-4,2.3-6.2C96.5,602.1,96.8,599.6,98.1,597.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M802.5,291.8c1.1,0.2,4.3,1.7,4.8,1.7c1.9,0.8,4.9-0.8,5.7,2.5c-1.7,0.3-3.6-0.6-5,1      c-0.9,0.8-2,0.6-3,0.2c-2.9-0.1-5.9-0.2-8.8-0.3c-1.2-0.1-20.9-0.6-21.7-0.9c-1.7-0.8-10.7-1.1-12.4-1.8c-1-0.1-2-0.2-3-0.4      c2.9-1.7,6-0.4,9-0.8c4-0.7,8-0.8,11.9,0c0.7,0,1.3,0,2,0"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1895,366.2c-0.4,0.3-0.8,0.6-1.1,1c-0.8,0.8-1.8,1-2.9,1.1c-1.6,0.1-3.1,0-4.6-0.3      c-1.4-0.5-2.9-0.6-4.4-0.7c-4.4-0.2-8.7-1.3-13-1.9c-1.2-0.1-2.4-0.2-3.6-0.4c-2.3-0.6-4.5-1.4-6.8-1.5c-0.9,0-1.9,0.2-2.7-0.4      c-0.4-0.7-0.3-1.4,0.2-2c-3.8-1.8-7.8-2-11.9-2.1c-0.3-0.1-0.5-0.3-0.4-0.5c0.1-0.2,0.2-0.3,0.3-0.3c7.4-0.3,14.6,1.3,21.9,2.3      c1.7,0.5,3.4,1.2,5.1,1.4c6.1,2,12.5,2,18.8,3.2C1891.5,365.3,1893.4,365.1,1895,366.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3F3835",
                d:
                  "M1994,669c-10.1,1.5-19.9,4.1-29.8,6.5c-4,0.9-8,1.7-12.2,1.5c-1.2,0.3-1.3-0.5-1.1-1.3      c1.6-2.3,4.4-1.8,6.6-2.7c9.3-1.8,18.5-4,27.7-5.7c3.7-0.7,7.5-1.4,11.3-0.7c0.9,0.2,2.4-0.5,2.4,1.3      C1997.5,669.2,1995.7,669,1994,669z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#766E69",
                d:
                  "M2092.9,631.1c3.5-2.3,1.8-5.2,0.8-8c2.9-2.6,6,1.1,8.9-0.2c1.7,3.2,5.6,5.6,3.4,10.1      c-0.3,1.9-1.8,2.9-3,4.2c-0.2-0.1-0.4-0.2-0.6-0.3c-2.2-1.5-3.9-4.1-7.1-3.5c-1,0-1.8-0.3-2.4-1.1      C2092.6,631.9,2092.7,631.5,2092.9,631.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#696561",
                d:
                  "M1522,264.9c1.7,0.7,3.4,1.3,5.1,2c-1.9,0.9,0.8,2-0.1,3c-1.8,0.4-3.5-0.4-5.3-0.6      c-1.4-0.2-3.5-1-3.6,1.7c-1.9,0.4-1.6,3.8-4.3,3.2c-1-2.3,0.3-4.9-0.9-7.1c-0.4-0.7-0.7-1.3-1.1-2c-2.2-1.1-3.7-3.2-6.1-4.1      c-0.4-0.3-0.7-0.6-0.9-1c0-0.3,0.1-0.5,0.1-0.8c1.9,0,3.8-0.1,5.7-0.1c2.3,1.1,5-0.4,7.3,1c3.3,2,7.4,1.8,10.9,3.1      c0.4,0.1,0.5,0.3,0.4,0.5c-0.1,0.2-0.2,0.3-0.3,0.3c-4-0.9-8.1-0.6-12-2.1c-1-0.5-2.5-0.1-2.6,0.5c-0.3,2,1.3,3.1,2.6,4.2      c0.7,0.3,1.5,0.6,2.2,0.9c-0.8-0.8-2.7-0.5-2.4-2.4C1518.6,264.2,1520.3,264.4,1522,264.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1923,433c-2.6-3.4-7.4-2.1-10.2-5c7.1,0.4,13.5,3.4,20.1,5.4c8.4,2.5,16.8,4.7,25.6,5.7      c0.6,0.1,1.2,0.5,1.8,0.8c-1.3,0.3-2.8-0.5-4,0.7c-9.1-2.4-18.7-2.7-27.8-5.6C1926.6,434.4,1924.6,434.2,1923,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1933,614c-2.5,1.9,2,1.7,0.9,3.2c-0.6,0.5-1.3,0.4-1.9,0c-3-0.9-5.3-2.7-7.1-5.2      c-0.7-2.3-0.8-4.6,0.1-6.9l0,0c0.7-1.3,0.7-3,2.2-3.9l0,0.1c3.3-5.5,7.6-10.2,11.5-15.3c1-1.3,2.1-3,4.2-3.2      c-1.3,3.4-3.1,6.3-5.7,9c-4,4.3-7.3,9.4-10.5,14.4c-1.4,2.2-0.3,4.2,2.3,4.9C1930,612.4,1933.1,611.1,1933,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2827",
                d:
                  "M2007.1,403c-1.3,0.6-3.5-2.5-4.1,1c-0.2,0.1-0.4,0.3-0.6,0.4c-6.1-0.4-8-5.2-9.9-9.8      c-0.8-2.1-1.5-3.8-4.1-2.5c-1.5,0.6-2.7-1-4.2-0.7c-2-0.6-4-1-4.8-3.3c0-0.5,0.2-0.9,0.5-1.2c1,0.1,2,0.1,3,0.2      c2.3,0.6,4.7,1.1,7,1.8c2.2,0,3.9,1.2,5.8,2.1c1.3,2.7,4.4,3.5,5.9,6c0.6,1.6,1.7,2.6,3.4,3.1      C2006.3,400.6,2007.5,401.3,2007.1,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1A1213",
                d:
                  "M1465.6,567.8c0.4-2.9,1.3-5.5,1.6-8.2c0.5-1.7,0.7-2.7,1.7-7.3c1.5-8.3,7.5-21.5,11-28.6      c1.2-0.3-0.9,3.3,1.2,4.2c0,3.4-3.3,5.5-3.7,8.3c-1.2,8.3-6.6,15.6-5.3,24.4C1472.3,562.9,1468.1,568.1,1465.6,567.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1325,274.8c9.5,4.7,17.4,11.9,26.5,17.4c1.1,0.7,2.2,1.5,3.3,2.2c1,2.1,4.1,2.7,4,5.6      c-11.3-8-22.7-15.9-34-23.9C1324.5,275.6,1324.6,275.2,1325,274.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2034.8,532c0,1,0.1,2,0.1,3c-0.4,0.3-0.8,0.3-1.3,0.2c-1.3-0.8-2.1-1.8-2.1-3.4c0.7-2.6,0.8-4.8-2.9-4      c-3.1,0.6-6.4-1.9-9.4,0.6c-0.6,0.4-1.3,0.6-2,0.7c-0.7,0.1-1.4,0.1-2.1,0c-0.5-0.1-0.9-0.2-1.3-0.4c-1.5-1-3.1-1.8-4.2-3.3      c-0.2-0.5,0-0.8,0.4-1.1c7.6,0,15.2-1.2,22.7,0.9c1.3,0.4,2.5,0.7,3.2,1.9C2037.7,529.1,2034.2,530.1,2034.8,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1356.1,301c0.9,0.5,1.9,0.8,2.8,0c2,2.6,0.8,4.4-1.9,4.9c-0.3,0-50,4.2-50.3,4.2      c-6.2-0.2-33.1,1-35.8,0.9c-2-0.1-1.6-2.2-3-4.6c0.5-1.7,47.9-3.4,49.3-3.9c3.1-0.6,6.3,0.2,9.5,0.2c2.5-1,5.1-0.2,7.8-1      c1.6-0.4,3.7,0.1,5.3,0.1c2.1,0,4.2,0.1,6.3-0.6c1.8-0.4,3.6-0.4,5.5-0.4C1353,300.7,1354.5,301.1,1356.1,301z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1133,169c-1,0.1-2,0.1-3,0.2c-11.7-5.2-23.6-9.8-35.7-14c-1.6-0.5-3.2-0.7-4.4-2c0.9-0.9,2-0.4,3-0.5      c7.2,0.9,13.5,4.6,20.1,7.1c1.7,0.6,3.4,1.2,5,2.3c0.8,0.2,1.7,0.1,2.1,1c2.7,0.4,4.9,2.4,7.6,2.6c1.2,0.1,2.3,0.5,3.3,1      C1131.8,167.3,1133.4,167.3,1133,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M781.5,103.3c-6.9,0.7-13.8,1.7-20.7,1.7c-4.5,0-8.9,0.8-13.4,1.2c-2.5,0.3-19.1,2.5-21.5,1.2      c-0.3-1.3,31.2-4.2,34.1-5.2c5.4-0.3,10.8-0.6,16.2-0.5C778,101.7,780.1,101.3,781.5,103.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2520",
                d:
                  "M244,669c2.4,0.8,4.3,2.3,5.9,4.1c-10.7-2.1-21.4-4.2-31.9-7.3c4.3-1.7,8.3,0.4,12.4,0.9      C235,667.3,239.3,669.1,244,669z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1513.8,273.9c2.4,0.5,1.3-4.3,4.4-2.9c1.7,1.2,6.2,4,6.8,5.9c-8,1.7-14.8,2.7-20.8,3.5      c-0.5-1.9-2.7-4.7-3.6-6.4c3.1-1.8,6.4,0.2,9.3-0.9C1511,274,1512.6,273,1513.8,273.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M2007.1,403c-1.1-2.9-6.8-0.9-6.1-5.7c0.4-0.4,0.8-0.5,1.3-0.4c4.7,2.1,8.9,5.2,14,6.4      c1,0.6,2.1,1,2.7,2.2c2.4,2.5,6,3.9,7.1,7.6c-3.1-0.5-5.3-2.7-8-4C2014.9,406,2010,406.3,2007.1,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383330",
                d:
                  "M2095.2,432.3c-0.1-6.7-0.1-13.5-0.2-20.2c0-1.4,0.5-2.7-1.9-3.6c-3.7-1.5-0.9-3.8,1.7-6.4      c-4.2,0.9-5.8,4.2-8.9,3.9c1.9-3.4,5-5.3,8.4-6.9c3.1,2.4,1.1,5.7,1.6,8.6c0.4,2.1,0.2,4.2,0.3,6.3c0.5,2,0.5,4,0,6      c-0.1,3.9-0.2,7.8-0.3,11.7C2095.8,432,2095.6,432.2,2095.2,432.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M2038.1,548c0.3,0.2,0.6,0.2,0.8,0c2.1,1.1,5.1,1,5.6,4.3c0,1.2-0.4,2-1.7,2.2c-6.1,0.9-11.6-2-17.5-3      c-1.1-2.9,2-2.3,2.9-3.5c1.8-1.2,3.9-1.2,5.9-1.3C2035.6,546.5,2037.1,546.5,2038.1,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1279.9,217c0-1.5-1.7-1.7-2.2-2.9c3.9-2.4,6.4,1.4,8.8,2.7c5.1,2.9,10.8,5,15.5,8.6      c1.3,1,3.2,1.6,1.3,3.7c-2.2,0.3-3.5-1.3-5.2-2.1C1292,223.7,1285.9,220.4,1279.9,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M749,291c0.7,0,1.3,0,2,0c0.3,0.2,31.2,4.9,34.3,5.8c0.2,0.1-24.3-1.8-25.2-1.8      c-0.2,0.5-87.7-6.4-88.4-6.5c0-0.2,31.2,0.9,31.2,0.7c1.3,0,2.7-0.1,4-0.1c3.3-0.7,6.7-0.8,10,0c2.7,0,5.3,0,8,0      c3.2,1.4,6.8-0.4,10,1l0,0C739.6,291.4,744.4,289.6,749,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#837773",
                d:
                  "M2102,623c-2.7,2.7-5.5-0.8-8.3,0.2c-1.3-0.1-2.4-1.2-3.8-0.6l-0.2-0.3l0.2-0.2      c-0.4-0.2-0.5-0.5-0.4-0.7c0.1-0.2,0.2-0.3,0.4-0.3c2.6-0.9,5.3-1.8,7.4-3.8c2.7-2.6,3.9-0.9,4.6,1.8      C2102.2,620.3,2105.3,621.7,2102,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#381D1B",
                d:
                  "M1481,528c-1.6-0.2-2.2,2.7-4.1,1.9c4.3-11.7,10.7-22.6,17.4-30.8c-1.8,4.9-3.5,12.9-7.9,17.2      C1483.8,518.9,1480.9,523.3,1481,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#958E8A",
                d:
                  "M92.1,621.9c0.9,0.4,1.9,0.8,2.8,1.1c1.4,0.8,2.5,2,3.8,2.9c3,3.6,6.5,6.5,10.2,9.2      c1.2,0.9,3.3,1.4,2.1,3.7c-8.2-2-13-8.6-18.5-14.1C92,624.2,92.2,622.9,92.1,621.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1196.9,314.1c1.7-0.1,3.4-0.2,5.1-0.2c2.5,0,2.9,1.8,3.3,3.7c-0.4,5.1,1.4,10.5-1.2,15.4      c-0.3,5.3,1.6,9.9,5.1,13.8c0.4,0.7,0.4,1.3-0.1,1.9c-5.2-3-5.8-8.1-6.1-13.3c-0.1-2.2-0.1-4.3-0.1-6.5      c-0.7-2.7-0.1-5.5-0.4-8.3c-0.2-2.1-0.3-4.3-2.4-5.5c-0.9-0.1-1.8-0.2-2.7-0.3C1196.8,314.8,1196.7,314.5,1196.9,314.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1937.1,375.9c0.3-2.5,1.6-1.4,2.8-0.9c2.6,1,5.2,2.3,8.1,2c4.9,1,9.5,3,14.1,4.9      c-0.2,0.8-0.7,1.3-1.4,1.6c-0.7,0.2-1.5,0.2-2.3,0c-6.5-2.7-13.7-3-20.2-5.8C1937.6,377.3,1937.1,376.7,1937.1,375.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8B8682",
                d:
                  "M2084.9,443.1c3.4,0.4,7.1,2.6,10-1.2c0.9,1,0.8,2,0.1,3.1l0,0c-0.4,2.8-3.6,4.1-3.8,7      c-0.1,2.9-0.2,5.8-0.3,8.7c-1.7,0.9-1.5-0.7-1.9-1.4c-0.5-2-0.4-4-0.3-6c0.1-2.4-0.9-4.1-2.9-5.4c-0.3-0.6-0.6-1.3-0.9-1.9      C2084.3,445.1,2084.4,444.1,2084.9,443.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1834.9,390.9c-0.3,0.1-0.5,0.3-0.8,0.3c-1.8,2.5-4.3,0.8-6.4,1.1c-1.9-0.8-3.8-1.6-5.7-2.4      c-1.5-0.4-3-0.8-4.2-1.9c-1.7-1.1-3.9-1.2-5.1-3.1c0-0.5,0.1-0.9,0.4-1.3c2.1-1.5,3.9-0.8,5.9,0.5c3.2,2.2,6.7,3.6,10.6,3.6      C1831.6,388.4,1834.3,387.8,1834.9,390.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7A7370",
                d:
                  "M111,638.8c-2.3-3.5-6.4-4.8-9.2-7.8c-1.5-1.6-2.9-3.1-3.8-5.1c0.7-0.6,1.3-0.5,2,0l0,0      c6.5,3.4,11.2,9.2,17.7,12.7c0.9,0.5,2.2,1.2,1,2.7c-2.1,0.5-3.8-0.8-5.7-1.4C112.3,639.6,111.7,639.2,111,638.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#421F23",
                d:
                  "M367,445c-10.5,3-21.3,5.3-31.3,9.8c-0.4,0.2-1.1-0.4-1.7-0.6C344.6,449.6,355.3,445.6,367,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M480.8,192.8c0.8,0.1,1.6,0.2,2.4,0.3c-6.1,3.8-12.7,6.7-19.2,9.9c-0.5-0.6-0.8-1.3-0.6-2.1      c3.1-3,7-4.4,11-5.8c1.3-0.5,2.7-0.9,3.6-2.1C478.8,192.3,479.8,192.4,480.8,192.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1236.9,349.8c7.2-3.6,15.1-6,20.9-12c1,1.4-0.4,2.1-0.8,3.2C1251.3,346.3,1244.7,349.4,1236.9,349.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1782.9,362.9c1.3,2,3.7-0.7,5.1,1.2c0.4,1-0.1,1.6-0.7,2.2c-1.4,1.5,1.6,1.3,1,2.5      c-0.2,2.9,4,1.9,4,4.5c-0.1,0.8-0.6,1.2-1.4,1.4c-2.9,0.1-4.6-2.2-6.9-3.5c-1-1-2-2.1-3-3.1      C1780.1,365.7,1780.2,363.8,1782.9,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1790.7,374.1c0.4-0.3,0.8-0.6,1.2-1c1-0.9,2.1-0.3,3.1-0.2c1.5,0.3,2.6,1.3,4,1.8      c0.4,0.2,0.7,0.5,1,0.8c1.5,1.3,3.3,1.9,5,2.8c1.2,0.6,2.3,1.2,3.5,1.8c1,0.5,2.1,1,2.6,2.2c-0.1,0.8-0.7,1.2-1.4,1.4      c-1-0.1-2,0-2.8-0.6c-2-1-4-2-6.1-3.1C1797.6,377.9,1793.2,377.7,1790.7,374.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1983,620.8c3.4-2.9,7.5-1.4,11.3-1.8c2.9-0.3,6,0.3,8.8-0.9c0.5-0.2,1.6-0.3,0.3-1      c-0.4-0.2-1-0.1-1.5-0.1c1.9-1.9,4.4-0.8,6.6-1.5c1.4-0.5,0,1.4,0.4,2.2C2000.5,620.5,1991.8,620.8,1983,620.8z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#FDFDFD", d: "M549.1,614.4" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#504746",
                d:
                  "M1973.1,547c0.3-0.2,0.6-0.4,0.9-0.6c1.9-0.6,3.8,0.6,5.7,0.3c0.5,0,1,0,1.5,0c3.7-0.1,7.4,0,11.1,0      c2,0,3.9-0.1,5.8-1c3.8-1.4,8.5-0.1,9.8,2.7c-0.9,0.7-1.9,0.8-3,0.9c-2.3-0.1-4.5,0.2-6.7,0.8c-8.3,0-16.6,1.2-24.9-0.7      C1972.4,548.7,1972.4,547.9,1973.1,547z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#483A38",
                d:
                  "M1540.1,274.2c2.4-1,3.7-2.7,4-5.3c1.4-1.3,3-2,4.8-0.8c1.7,0.9,6.8,2.2,6.6,4.1c-0.1,1-8,0.9-9.5,1.9      C1544,274.7,1542,274.6,1540.1,274.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#989391",
                d:
                  "M1548.9,268.1c-1.6,0.3-3.2,0.5-4.8,0.8c-4.7-2.6-10-3.3-15-4.9c0-0.3-0.1-0.5-0.1-0.8      C1535.7,264.2,1542.9,263.7,1548.9,268.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#978E8C",
                d:
                  "M970.8,96.1c0.2,0.2,0.3,0.5,0.5,0.7c-1.5,1.6-3.6,0-5.2,1.1c-9.9-1.5-20.1,0-30-1.7      C947.7,96.1,959.3,96.1,970.8,96.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M2018,409c3.1,0.5,5.4,2.5,8,4c3.8,4.3,6.8,9,6.8,15C2029.9,420.1,2025.3,413.5,2018,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1961,382.9c0.4-0.3,0.8-0.6,1.2-0.9c5.7,1,11.5,1.9,16.9,4c-0.8,1.2-2.1,1.8-3.2,2.5      c-2.2,0.5-4.2-0.7-6.2-1.2c-2.2-0.8-4.5-1.4-6.6-2.5C1962.2,384.3,1961.4,383.8,1961,382.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M927.2,301.5c0,0.3-0.2,2.2-0.2,2.5c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2,7.7,3.8,7.6,3.8      c-1.6-0.3-14.4-2.4-17.6-2.5c-5.9-0.7-21-1.6-25.1-2.1c0.9-2.4,7.6-2.8,9.4-2.9c2.7-0.2,7.8,0.1,10.5,0.1      C917.5,301.2,922.5,298.7,927.2,301.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M912,303c-4.3,0.4-8.7-0.8-13,0.7c-2,1.4-3.4-0.8-5.1-0.9c-0.8-0.5-2.9,0-1.8-2.2      c3.2-1.7,6.8-1.5,10.3-1.8c1,0.1,2,0.4,2.7,1.3c-0.4,2-1.8,1.3-2.9,1.3c1.7,0.6,3.3-0.7,5.1-0.6      C909.2,300.9,911.4,300.3,912,303z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#FDFDFD", d: "M721.6,688.9" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M2016,443c5.2-3.4,11.1-5.5,16.8-8C2028.6,440.5,2022.7,442.6,2016,443z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#35312D",
                d:
                  "M2085.9,447.9c2.9-1,4.4-0.3,4.2,3.1c-0.2,2.8-0.1,5.5-0.1,8.3c-0.7,0.3-1.4,0.3-1.8-0.5l0,0.1      c-1.6-1.2,0.1-3.3-1.2-4.6C2085.4,452.4,2086.3,450,2085.9,447.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M113,640c2,0.4,4,0.7,6,1.1c3.3-0.6,6.2,1,9.1,2.1c3.3,1.3,6.5,2.2,10,2.7c1,0.5,2.4-0.2,3.1,1      C131,647.7,121.8,644.6,113,640z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#FDFDFD", d: "M528,531.1" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1479.1,278.1c4.2,1.9,8.6,0.5,12.9,0.5c2.6,0,0.2-3,2-3.7c2.2,0.9,5,3,3.1,6.5c-3-0.3-7.3,0.9-8.9-0.8      c-2.9-1.8-6-0.1-8.9-0.6C1476.4,279.5,1477.7,278.8,1479.1,278.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2A211E",
                d:
                  "M2087,644.9c-0.3,0.4-0.7,0.7-1,1.1c-0.8,1.8-2.3,1.9-4,2c-1.2-0.1-2.5,0.1-3.3-1.2      c-1.1-0.2-2.3-0.4-2-2c0.4-0.6,0.9-1.1,1.5-1.3c1.7-0.4,3.4-1,5.2-1.1C2085.4,642.1,2087.2,642.3,2087,644.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M892,301.1c0.7,0.6,2.9,2.4,3.6,2.9c-3.6,0.3-8.7-1.1-12.2-1.1c-2.4-1-5,0.1-7.4-0.7      c-1.9-0.1-3.9-0.2-5.8-0.3c-0.4-0.1-0.6-0.3-0.6-0.7c3.8-0.1,7.6-0.1,11.4-0.2C884.7,298.8,888.4,298.8,892,301.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1439.3,281.8c-0.1-0.3-0.2-0.6-0.3-0.8c5.4,0,10.8-0.1,16.2-0.1c1.9-0.6,3.8-0.6,5.7,0      c3.6,0.5,7.3-0.5,10.9,0.6C1460.9,281.6,1450.1,281.7,1439.3,281.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B948E",
                d:
                  "M2102,623c1.8-1.3-0.5-2.7,0-4c2.8,2,3,5.7,5.1,8.1c0.6,1.6,0.5,3.3,0.1,4.9c-0.4,0.4-0.8,0.7-1.2,1.1      C2106.7,628.9,2102.6,626.7,2102,623z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1847.9,401.8c0.2-4,1.9-3.5,4.1-1.3c2.3,2,5.3,2.8,7.9,4.2c0.8,1.1,0.2,1.7-0.9,2.1      C1854.9,406.1,1852.1,402.3,1847.9,401.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M2016,404c-5.1-1.4-10-3.3-14.2-6.8c0.1-0.2,0.2-0.5,0.2-0.7c0.5-0.5,1.1-0.9,1.9-0.5c1,1.3,2.4,1.8,4,2      c1.2,1,2.5,1.7,4,2.1c0.6,1.3,1.6,2,3,1.9C2015.5,402.5,2016.6,402.8,2016,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2038.1,548c-1-0.5-2.1-0.4-3.1,0c-0.4-0.4-0.7-0.9-0.9-1.4c0.1-3.9-2.5-7.7-0.1-11.6c0.3,0,0.6,0,1,0      C2036,539.3,2037,543.7,2038.1,548z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1295.2,308.9c-0.2,0.2-0.3,0.4-0.3,0.6l2.6,0.3c-4.6,0.7-24.6,0.8-26.6,0.8c-0.1-0.3-0.1-0.5-0.2-0.8      c0.3-0.5,0.7-0.8,1.3-1c3.7-1,7.6,0.2,11.2-1.1c3.6-0.4,7.2-0.7,10.8,0.1C1294.5,308,1295,308.4,1295.2,308.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#514844",
                d:
                  "M1999,667.8c-0.7-0.3-1.3-0.6-2-0.8c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3      c4.3,0.5,8.5-2.6,12.9-0.3C2006.1,665.6,2002.9,668.9,1999,667.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1859,406.8c0.3-0.5,0.6-1,1-1.5c0.5-1.3,1.3-0.1,2-0.3c0.4,0,0.8,0.1,1.2,0.1c1.3,2.5,4.8,1.8,6.1,4.3      c-0.8,1.5-1.8,1.3-3,0.5C1863.5,409.8,1861.3,408.1,1859,406.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1978.9,547.8c-1.8,0.2-3.6-0.1-5-1.4c0.6-2.2,2.7-3.1,4.1-4.6c0.5-0.5,0.9-1,1.6-1.1      c0.5,0.1,0.8,0.4,1,0.8c0.2,0.7,0.1,1.3-0.1,2C1979.6,544.8,1979.2,546.3,1978.9,547.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9D9692",
                d:
                  "M2097.8,640.8c-3.4-0.5-5.7-2-6-5.7c1.1-0.7,1.9,0,2.5,0.7c1.9,2.3,3.6,1.3,5.4,0      c1.3-0.4,2.2,0.4,3.2,0.8c0.1,0.2,0.1,0.4,0,0.6C2101.8,639.2,2099.5,639.5,2097.8,640.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1843.9,358.2c0,0.3,0.1,0.5,0.1,0.8c-6-1-12.1-0.3-18.1-1.8C1832,357,1838,356.5,1843.9,358.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M447,209.9c0.6-0.1,1.2-0.2,1.8-0.2c0.5,0.4,0.6,0.9,0.3,1.5c-2.5,1.5-3.7,4.9-7.2,5.1      C442.7,213.4,444.9,211.7,447,209.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2039.6,561.9c-2,1-2.2,3.4-3.8,4.7c-0.5,1.4-1,2.9-3,2.6c-0.3-0.4-0.5-0.9-0.5-1.4      c1.2-4.4,3.3-7.8,8.6-8C2041.6,561.2,2040.6,561.5,2039.6,561.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#373230",
                d:
                  "M100,583c-2.3-0.9-2.1-3.7-3.9-5c-0.8-0.7-1.2-1.9-0.6-2.5c1.1-1.1,1.6,0.3,2.1,1c1.2,1.5,2.3,3,3.5,4.5      C100.3,581.4,100,582.1,100,583z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2043,553.8c1.1-0.3,0.9-1.3,1.1-2.1c0.3-0.2,0.6-0.2,0.9,0.1c0.3,2.2-0.5,4.2-1,6.2      c-0.4,0.3-0.9,0.3-1.3,0c-0.4-0.3-0.7-0.6-1.1-1c-2.6-2.1-6.5,0.5-8.9-2.5c0-0.6,0.3-1,0.9-1.1      C2036.8,553.7,2039.9,553.2,2043,553.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1991.9,529.9c1.7-2.6,4.8-2.4,7.2-3.5c0.3,0.4,0.4,0.9,0.3,1.4c-0.8,2-2.2,3.3-4.2,4.1      C1993.7,531.8,1991.9,532.4,1991.9,529.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1957,565c3-1.2,3.9-4.8,6.7-6.2c1.4,1.4,0.6,2.4-0.7,3.1c-3.3,1.7-4.7,5.4-7.8,7.2      c-0.2-0.1-0.3-0.3-0.5-0.4c0-1.2,0.7-2,1.4-2.8C1956.4,565.7,1956.7,565.3,1957,565z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1497,281.5c0.6-2.6-1.8-5.1-3.1-6.5c4.2-1.6,9.7,2.5,10.1,5.4C1502.1,280.7,1498.7,281.3,1497,281.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#311418",
                d:
                  "M316,464.2c0,2.1-2.4,1.5-3,2.8c-2.2,0-3.6,2.7-6,2C309.3,466,312.2,464.3,316,464.2z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#FDFDFD", d: "M489.2,487.7" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1866.3,409.9c0.9-0.1,2,0.3,2.7-0.7c0.6-1.2,1.3-0.1,2-0.1c0.4,0,0.7,0.1,1.1,0.1      c0.6,1.5,3.1,1.3,3.2,3.4c-0.4,0.8-1,0.8-1.8,0.5c-1.2-0.3-2.3-0.6-3.5-1C1868.5,411.7,1867.3,411,1866.3,409.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1999,526.7l0.1-0.4c0.3-0.1,0.6-0.2,0.9-0.3c2.1-0.1,4.3-0.3,6.4-0.3c1.5,0.4,3.7-0.2,3.5,2.5      c-1.8,1.4-3.9,1.5-6,1.8C2001.3,530.4,1999.4,529.6,1999,526.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1991.9,529.9c1,1.7,2.7,1,4.1,1.1c0.1,0.1,0.3,0.3,0.4,0.4c0.3,0.6,0.3,1.2,0.2,1.8      c-0.1,0.4-0.4,0.7-0.7,1c-0.4,0.1-0.8,0.1-1.2-0.1c-0.4-0.2-0.7-0.4-1.1-0.6c-2-0.7-3.5,1.5-5.4,1.1c-0.7-0.2-1.2-0.5-1.2-1.3      C1988.7,532.2,1989.5,530,1991.9,529.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M439.1,224.5c0.8-1.7,3.1,3.6,3.8,3.6c2,0.5,3.2,1.6,3.2,3.8c-1,0.4-1.5,0.3-1.6,1.2      C442.3,231.8,437.5,226.4,439.1,224.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1987,533.3c0.3,0.2,0.7,0.4,1,0.7c0.7,1.7-0.7,2.5-1.5,3.5c-1.5,1.4-2.7,3.1-4.7,4      c-0.7,0.2-1.4,0-1.9-0.5l-0.2-0.2c0.6-2.8,3.2-3.9,4.9-5.8C1985.3,534.2,1985.8,533.3,1987,533.3z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#FDFDFD", d: "M540.3,556.9" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1955.2,569.2c-1.2,3.9-4.5,5.7-7.6,7.7c-0.3-0.7-0.2-1.3,0.3-1.9c0.3-0.4,0.7-0.7,1-1.1      c1.8-1.9,3-4.5,5.9-5.1L1955.2,569.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#45403D",
                d:
                  "M154,650c2.2,0.8,5.9-3.7,6.9,1.8C158.6,651.5,156.2,651.1,154,650z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1209.1,348.7c0-0.6,0.1-1.3,0.1-1.9c2.6,1,5.2,2,7.9,3C1214.3,350,1211.5,350.6,1209.1,348.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2095,445c0-1-0.1-2-0.1-3.1c0.1-3.2,0.2-6.4,0.3-9.6c0.3-0.2,0.5-0.4,0.7-0.7      C2095.6,436.1,2097.1,440.7,2095,445z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332F2E",
                d:
                  "M193,660.1c1.4-1.8,3.3-0.9,5-1.1h0c0.9,0.7,2.1,1.4,1,2.8C196.9,661.5,194.8,661.2,193,660.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#311418",
                d:
                  "M303,473.1c-0.4,0-0.7-0.1-1.1-0.1c1.5-1.6,2.4-3.9,5-4C308,472.5,304.1,471.5,303,473.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2091.2,452c-0.4-3.2,2.3-4.8,3.8-7C2095.5,448.2,2092.4,449.6,2091.2,452z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M2006.3,527c-2.1-0.2-4.4,0.5-6.3-1c0.7-1.2,2-0.9,3.1-1c0.6-0.6,1.3-0.5,2-0.3      C2006,525.2,2006.5,525.9,2006.3,527z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M98.1,587.5c1.1,3.2,1.9,6.3-0.2,9.4C98,593.8,98.1,590.7,98.1,587.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: { fill: "#FDFDFD", d: "M712,689c3,0,6,0,9,0" }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1092.9,152.1c0.2,0.3,0.3,0.6,0.4,0.9c-1.1,0-2.2,0.1-3.4,0.1c-1-0.4-1.9-0.7-2.9-1.1      c0-0.3,0-0.6-0.1-0.9C1089,151.4,1090.9,151.7,1092.9,152.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1976.1,387.9c0-2.2,1.7-1.7,3-1.9c0.3,0.3,0.6,0.6,1,1c-0.1,0.5-0.2,1-0.2,1.5      c-0.8,0.6-1.8,0.6-2.7,0.3C1976.7,388.6,1976.3,388.3,1976.1,387.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1990,389c-2.5,0.2-4.9-0.4-7-1.8C1985.6,386.7,1987.8,387.8,1990,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M751.1,103.1c-2.6,1.1-5.4,1.1-8.2,0.9C745.5,102,748.4,103.3,751.1,103.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2088.2,458.8c0.6,0.2,1.2,0.3,1.8,0.5c-0.1,0.8,0.1,1.3,1,1.4c-0.3,0.8-0.9,1.4-1.9,1      C2087.6,461.1,2088.1,459.9,2088.2,458.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M1518,260.1c-2.5,0.1-4.9-0.1-7.3-1C1513.2,259.3,1515.8,258,1518,260.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2034.8,532c-1.7-2.2,1.8-3.2,1.2-5.1C2038.1,529.2,2035.3,530.3,2034.8,532z"
              }
            }),
            _vm._v(" "),
            _c("path", { attrs: { fill: "#FDFDFD", d: "M523.2,521.9" } }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E4D6CE",
                d:
                  "M2005.2,525.1c-0.7,0-1.4-0.1-2.2-0.1c2.2-1.7,4.7-0.9,7.1-0.9c-0.2,0.2-0.3,0.5-0.5,0.7      C2008.3,526.5,2006.8,525.9,2005.2,525.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M860.9,95.1c-1.9,1.4-3.9,1.4-5.8,0C857,95.1,859,95.1,860.9,95.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M442.1,220.2c-0.3,1.1-1,1.9-1.9,2.5c-0.1-1.6-0.7-3.4,0.9-4.7C441.3,218.8,440.8,219.9,442.1,220.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d: "M2096.1,420c0-2,0-4,0-6C2097.5,416,2097.5,418,2096.1,420z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2016,404c-0.3-0.6-0.7-1.3-1-1.9c2.2,0.1,3.4,1.3,3.9,3.4C2017.9,404.9,2017,404.4,2016,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3735",
                d:
                  "M199,661.8c-0.3-0.9-0.7-1.9-1-2.8c2.7-0.7,2.3,1.6,3,3C200.3,661.9,199.7,661.9,199,661.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M734.4,105.1c-2,1-4.2,1.1-6.3,1C729.9,104,732.2,105.3,734.4,105.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M735,105.1c1.9-2,4.3-0.8,6.5-0.9C741,104.4,736.6,105.1,735,105.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M850.9,95.1c-1.6,1.3-3.2,1.3-4.8,0C847.7,95.1,849.3,95.1,850.9,95.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M1474.9,251.4c-1.6-0.5-3.2-0.9-4.2-2.3C1472.5,249.1,1474.1,249.5,1474.9,251.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2053.8,654.9c1.6-1.4,3.4-0.8,5.2-0.9C2057.5,655.7,2055.6,654.8,2053.8,654.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2107.2,631.9c0-1.6-0.1-3.3-0.1-4.9C2108.4,628.6,2108.4,630.3,2107.2,631.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FDFDFD",
                d:
                  "M2087,454.3c1.3,1.3,1.1,3,1.2,4.6C2086.2,457.8,2087.3,455.9,2087,454.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: { fill: "#FDFDFD", d: "M1836,738c-0.7,0-1.3,0-2,0" }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0D",
                d:
                  "M1525.1,487c-1.3-0.9-0.5-5,1.9-7c0.2,2.1-3.2,3.6-1,6.1C1525.7,486.4,1525.4,486.7,1525.1,487z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0D",
                d:
                  "M1519,489c-0.2,1.6-0.7,3-2,4C1517.2,491.4,1516.3,489.3,1519,489z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1A1213",
                d:
                  "M1490.9,637.8c-1.3,0.1-2.7,0.2-4,0.3c-2.5-0.2-3.8,1.1-4,3.6c-0.9,4.4-1.7,8.7-1.4,13.2      c0.1,1.9-0.6,3.5-1.7,5l0,0c-5,1-8.1,3.2-6.2,9c0.4,1.4-0.2,3.2-0.4,4.8c0.6,1.4,0.2,3,0.3,4.5c0.2,2.5,0.1,4.8-3.2,5.1      c-3.1,0.3-5.7-0.1-6.7-3.7c-0.2-0.6,0.1,0.2-0.1-0.5c-2.6-8.5-2.6-8.5-11.5-8.5c-75.5,0-151-0.4-226.4,0.2      c-28.5,0.2-57,0.7-85.4,0.8c-2.7,0-5.3,0.2-7.9-0.6c-2.7-1.9-0.8-2.7,0.9-3c3.4-0.6,7-0.6,10.5-0.5c5,0.2,10,0.1,15,0.2      c3.2,0.1,6.1-0.3,8.8-2.5c3.1-2.5,5.5-1.6,7.8,2.2c0.5,0.9,2.2,1.1,6.8,1.1c-1,0.2-2,0.1-2.9,0c-1.5-0.2-2.6-1-2.4-2.6      c0.2-1.4,1.5-2,2.6-1.8c4.4,0.8,8.9-1.6,13.3,0.1c3.5,1.4,6.7-1.1,10.3-0.9c6.9,0.5,13.8,2,20.8,1.3c1.2-0.1,2.3,0,3.5-0.1      c5-0.4,9.6-1.8,15-0.9c4.5,0.8,9.8,0.4,14.8,0.1c10.5-0.6,21.1-1.8,31.4-0.9c15.6,1.3,31.2-0.6,46.8,0.5      c10.8,0.8,21.9,0.2,32.9,0c10-0.2,20,0.6,29.9,0.1c19.3-1.1,38.6,0.7,57.9,0.1c2.6-0.1,5.1-2.1,7-1.1c-0.7-0.3-2.1,0.1-3.7,0.3      c-1.7,0.3-3.8,0.8-4.2-1.9c10.2,0,10,0,9.4-10.4c-0.4-7.5-0.6-15.1-0.7-22.6c-0.2-11.3,0.1-22.6,0.4-33.8      c0.3-8.5,2.1-16.9,3.9-25.2c0.2,0.1,0.3,0.3,0.5,0.4c0.8,1.6,0.4,3.3,0.5,4.9c0,0.2,0,0.4,0,0.6c-0.1,4,0.1,7.9-0.8,11.9      c-0.5,2.1-1.5,5.1,1.8,6.4c0.8,0.3,0.5,1.1,0,1.6c-2.3,2.5,0.2,4.7,1.5,5.3c4.3,2.2,2.6,5.1,2.1,8.1c-2,0.7-1.5-2.8-3-1.6      c-1.4,1.2,0,2.3,1.1,3.1c1,0.8,1.9,1.6,0.5,2.7c-0.6,0.5-2.3-0.5-2,1.3c0.4,2.1,2.4-0.3,3.6,1.3c-3.4,2.2-2.9,3.9,0,6.6      c2.5,2.3,2.6,6.4,2.1,9.9c-0.2,1.6-0.4,3.2,1.2,3.8c4,1.7,3.5,4.5,2.4,8.2C1481.5,637.5,1485.1,635.2,1490.9,637.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1A1213",
                d:
                  "M1468,569c0-1.1-0.2-2.3,1-3c2.9,3,0.8,6,0,9v0C1467.8,573.2,1469.3,570.9,1468,569L1468,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#373131",
                d:
                  "M1885.6,687.9l-0.3-0.1l-0.3,0.2c-3,1.3-6.4-0.2-9.4,0.9l-0.3-0.2l-0.3,0.2c-4.7,0.1-9.3,0.1-14,0.2      c-2.8-2.9-6.3-2.2-9.8-1.9c-7.1,0.5-7.7-0.3-8.9-7.1c-1.2-6.7-0.1-13.5-1.3-20.2c-0.5-2.8,1.1-5.7,0.1-8.5      c-0.7-1.8,0.6-3.4,0.5-5.1c0.4-0.6,0.8-0.7,1.4-0.3l0,0c4.6,1.4,9.4-0.4,14,1c10.7,0,21.6-0.4,31.8,3.2      c9.1,3.2,17.8,7.7,26.7,11.6c1.8,0.8,3.6,1.5,5.5,2.3c3.5,0.3,6,2.7,8.9,4.1c1.6,0.8,1.5,2,0.6,3.3c-4.1,3.6-9.1,3.4-14,3.5      c-5.2,0.1-7,1.9-6.4,6.8c-5.2,2.4-11,1.6-16.5,2.4c-4.1,0.6-8.3,1.1-12.4,1c-3.8-0.1-8.2,2-11.2-2.6c-0.6-0.9-2.1-0.2-3.1,0.2      c2.8-0.2,2.8-0.2,3,2.1c0.1,1.1,0.9,1.7,2.9,1.6c2.6-0.2,5.3-0.7,7.9-0.6c1.8,0.1,3.7-0.1,5.3,1.1      C1886.4,687.4,1886.3,687.7,1885.6,687.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#150A0B",
                d:
                  "M2087,644.9c-1.1-1.9-2.5-2.2-4.4-1.3c-1.4,0.6-3,1.4-4.6,0.4c-4.2,0.1-8.2,0.3-12.5-0.7      c-6.1-1.4-12.6-0.9-17.7,3.9c-3.7,3.5-8,5.4-13.2,3.9c-0.3-0.1-0.7-0.2-1-0.1c-6.2,2.8-13.4,2.8-19.3,6.8      c-8.6,0.9-16.6,4.3-25,6.3c-4.1,1.5-8.4,1.7-12.7,2.2c-2.3,0.1-4.6-0.3-6.9,0.3c-0.5,0.2-1,0.3-1.5,0.4c-4,0.1-8,1.4-11.9-0.6      c-0.8,0-1.6-0.1-2.4-0.1c-8.1,0.8-16.3,1.9-24.4,0.4c-2.2-0.7-4.4-1.7-6.5-2.8c-0.4-0.3-0.8-0.6-1.1-1c-0.3-0.3-0.5-0.6-0.8-0.9      c-4.7-2.9-9.7-5.3-14.3-8.3c-0.2-0.2-0.5-0.5-0.7-0.7c-0.3-0.2-0.5-0.4-0.4-0.6c0-0.3,0.1-0.4,0.2-0.4c2.9-0.3,6-1.4,8.1,1.7      c1.3,2,1.8-0.2,2.6-0.3c1.8-0.2,3.5-0.3,5.3-0.5c0.4-0.3,0.8-0.4,1.3-0.4c5.7,0.8,11.1-1.2,16.6-1.9c6.6-0.8,13.1-1.8,19.7-1.5      c3.8,0.2,7.2-1.2,10.6-2.2c7.3-2,14.9-0.9,22.2-2.4c8.2-1.7,16.7,0.3,25-2.1c3-0.9,6.8,1,10.1-0.7c6.8-3.3,14.5-2.6,21.6-4.2      c7.1-1.7,13.8-4.5,20.7-6.7c4.8-1,9-3.9,14-4c-0.6,6.7,4.2,10.3,7.7,15C2090.5,642.7,2088.8,643.8,2087,644.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151211",
                d:
                  "M1803.8,627.1c2.3,1.5,12.6-5.4,12.3-4.1c-0.6,2.7-2.7,11.5-1.4,14.4c0.8,1.9-0.4,2.3-1.6,2.5      c1.1,2.1,4.4-5.3,4.9,1.1c2.3,4.4,6.8,6.3,10.3,9.4c0.8,0.7,1.7,2,2.9,0.7c1-1.1,1.7-2.3,3.6-0.9c1.8,1.4,2.3,2.6,0.9,4.4      c0.4,0.2,0.9,0.3,1.3,0.5c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3c-10,3-20.1,5.1-30.6,5.2c-1.1,0-2.3-0.1-3.4-0.1      c-2.5-1.4-1.5-3.3-0.7-5.1c1.9-3.8-4.6-3.9-3.3-7.9c0.8-2.7,3.6-6.3,3.7-9.1L1803.8,627.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0D0707",
                d:
                  "M1818,641c-0.2-1.5-0.7-2.1-2.3-1.2c-1.6,1-3.3,1.8-5,2.8c-0.8-3.1,3.8-3.8,2.3-7.5      c-1.2-3.2,1.2-6.7,2-10.1c3.7-4.9,1.3-11,3-16.3c0.5-1.6-0.6-3.6,1.2-5.4c1.4,1.9,1.1,4,0.8,5.7c-0.7,4.6-0.9,9.2,0.5,13.7      c0.1,0.5,0.4,1.2,0.2,1.4c-3,2.3-0.2,4,1.1,4.3c2.4,0.5,3.7-1.9,3.7-3.8c0-3.2,2-6.5-0.7-9.4c1.9-0.9,3.4-0.4,3.7,0.4      c1.1,2.3,1,5,2.1,7.5c0.8,1.7-8.4,9.7-11.1,9.9c4.9,5.2,10.3,7.8,17.4,4.7c0,3.3,0,6.4,0,9.9c-2.7-1-3.4-3.3-4.3-5.3      c-2.4,0.4-2.1,4.3-5,3.5c-1.9-0.6-3.6-1.6-4.5-3.5C1821.8,640.1,1819.7,641.3,1818,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2727",
                d:
                  "M1837,656c0-0.3,0-0.6,0-1c1.3,0,2.7,0,4,0c1,1.5,0.3,3.1,0.5,4.6c0,0.2,0,0.3,0.1,0.5      c0.2,0.5,0.4,0.4,0.5-0.1c1.4,1.1,1,2.7,1,4.1c-0.4,6.3,0.7,12.5,1,18.7c0.1,2.3,1,3,3.2,3.3c3.4,0.3,6.9-0.4,10.2-0.7      c4-0.3,3.6,1.4,3.7,3.8c-4.9,0.3-9.9,0.9-14.8,0.9c-3.8,0-6.9-1.2-6.3-6.1c-1.7-8.3-1.9-16.7,0-25      C1840.8,656.2,1838.9,656.1,1837,656z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#322B2A",
                d:
                  "M1956.9,665c3.8,2.6,8.1,0.3,12.1,1c-1.5,3.9-5.5,1.5-8,3.1c-3.3,0.4-6.6,1.5-10,1.2      c-5.5-1.8-10.6,0.7-15.9,1.2c-1.8,0.1-3.6,0.9-5.2-0.5c0.7-1.4,0-1.7-1.2-2.3c-2.7-1.3-5.2-3.1-7.8-4.7c0.3-0.4,0.7-0.7,1-1.1      c0.3,0,0.7,0.1,1,0.1c1.9,0.9,3.3,3,5.9,2.1c6.4,1.8,13,1,19.5,0.5c2.2-0.2,4.5-0.6,6.8-0.5c0.5,0.9-0.9,0.9-0.8,1.6      C1955.2,666.1,1956.3,665.9,1956.9,665z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1859,641c8.5,0.4,17,0.7,25.5,2c2.5,0.4,4.7,1.2,6.6,3c-10.2-2.3-20.5-3.2-30.9-3      c-1.2,0-2.3,0.1-3.2-0.9C1857.4,641.3,1858.5,641.7,1859,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1A19",
                d:
                  "M1690,438.9c-1.9-2.7-5-2.2-7.6-2.8c-1.9-0.5-3.9-0.6-5.4-2c5.6-2.4,10.7,1.1,16.1,1.1      c0.3,1.9-2.4,1.9-2,3.7C1690.7,438.8,1690.4,438.9,1690,438.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1A19",
                d:
                  "M1629,433c-5,0.7-9.8,3.2-15,1C1618.9,431.5,1623.9,431.7,1629,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1A19",
                d:
                  "M1671,433c-5.7,0.7-11.3-1.3-17-1C1659.9,429.1,1665.4,430.8,1671,433z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0D0707",
                d:
                  "M1833.9,632.1c0.7-1.1-0.8-3.6,1.7-3.8c1.5-0.1,1.5,1.5,1.3,2.6c-0.2,1.5-0.2,3.7-1.7,4.1      C1833.9,635.4,1833.3,633.7,1833.9,632.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1906.9,653.7c5.1,2.2,10.2,4.5,14.3,8.3C1915.9,660.3,1910.9,657.8,1906.9,653.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1859,641c-0.4,0.8-1.2,0.9-2,1c-5.3-0.1-10.6-0.2-15.9-0.3c-0.1,0-0.2-0.2-0.2-0.4      c0-0.2,0.1-0.3,0.2-0.5C1847,641,1853,641,1859,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M1842,660c0,0.5,0.1,1.1-0.2,1.4c-1,1.2-0.8-0.1-0.8-0.5c-0.1-2-0.1-4-0.1-6c1-2.3-4.6-4.7,0-7c1,0.8,0.1,2.2,1,3      C1842,654,1842,657,1842,660z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1905.9,652c0.1,0.3,0.2,0.7,0.2,1c-4.6,0.2-7.7-3-11.3-5c0.4-0.4,0.8-0.4,1.2-0.1      C1899.4,649.3,1902.6,650.7,1905.9,652z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2727",
                d:
                  "M1857,647c-4.7-0.5-9.5,1.1-14-1C1847.7,646.5,1852.5,644.9,1857,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1A19",
                d:
                  "M1642,432c-2.3,0-4.7,0-7,0C1637.3,429.7,1639.7,428.9,1642,432z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1A19",
                d:
                  "M1649.1,432.9c-1.4-0.3-2.7-0.6-4.1-0.9c0.2-2.2,1.8-2.1,3.3-1.9C1650.4,430.4,1648.6,432,1649.1,432.9z      "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M1843,646c-0.3,0-0.7,0-1,0c-0.3,0.4-0.5,0.9-1,1c-2-0.2-2.1-1.5-1.8-3.2C1840.5,644.5,1842.4,644.1,1843,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1896.1,648c-0.4,0-0.8,0.1-1.2,0.1c-1.6-0.2-2.9-0.8-3.9-2C1893,645.9,1894.7,646.5,1896.1,648z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0D0707",
                d:
                  "M1847.2,643.5c-1.1,0.6-2.1,0.6-3.4,0C1845,642.8,1846.1,642.7,1847.2,643.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2727",
                d:
                  "M1841,647c0.3-0.3,0.7-0.7,1-1c0,1.7,0,3.3,0,5c-1.2-0.7-0.9-1.9-1-3C1841,647.7,1841,647.3,1841,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544D4B",
                d:
                  "M1164,188c0.7,0.4,1.3,0.7,2,1.1c0.9,1.6,2.7,1.3,4.1,1.9c19.6,8.7,38.4,19.1,57.1,29.6      c34.3,19.3,67.8,40.1,100.4,62.2c1.5,1,2.9,2.1,4.4,3.2c0.3,1-0.3,1.3-1,1.5c-2.9,0-4.8-2.1-7-3.5c-15-9.4-29.8-19.3-45.6-27.5      c-9.5-5.9-19.6-10.6-28.9-16.7c-11-6.4-22.2-12.4-33.4-18.3c-5.7-3-11.3-6.2-17.3-8.5c-0.5-0.2-0.9-0.4-1.3-0.7      c-8.8-5.4-18.4-9.1-27.8-13.2c-7.7-3.4-15.3-7.2-23.1-10.5c-2.2-0.9-4.9-1.5-5.8-4.2c-0.4-1,3.1-2.2,0.3-2.7      c-4.6-0.9-8.5-3.2-12.6-5.1c-8.4-3.8-16.7-7.6-25.4-10.6c-3.1-1.1-6-2.7-9.4-3.1c-2.5-0.3-4.8-1.1-6.1-3.6      c0-1.1,0.4-1.9,1.5-2.3c13.1,3.3,25.3,9,37.7,14c1.4,0.6,2.7,1.3,4.3,1.2c3.2,2.7,7.3,3.6,11,5.2c3.1,1.4,6.1,2.9,9,4.7      c2.7,3.8,7,4.2,11,5l0,0C1162.6,187.5,1162.5,189.2,1164,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1B1718",
                d:
                  "M863.9,294c-0.6,0-1.2,0-1.9,0c-0.9,0.3-1.3-0.3-1.5-1.1c0.7-3.6,0.5-7.1-0.6-10.6      c-1-5.4-2.1-10.8-2.9-16.3c-0.6-2.3-0.1-4.8-1.2-7c-2-4.1-0.6-8.6-1.8-12.8c-0.4-1.9-0.6-3.8-1.1-5.6c-1-6.5-1.9-13.1-3-19.6      c-0.8-4.6-1.2-9.3-2-13.9c-0.4-3.3-0.9-6.6-1.4-9.9c-0.1-2.8-1.1-5.5-1.1-8.3c-1.4-12.1-3.3-24.2-4.5-36.4      c-0.2-2-0.5-3.9-0.6-5.9c-0.1-4.1-1.7-6.7-6.3-6.1c-3.5,0-7.1-0.4-10.6,0.4c-3,0.4-5.9,1.5-9,0.8c-1.4-0.2-2.8-0.9-4,0.4      c-0.1,0.4-0.2,0.8-0.3,1.2c-0.2,1.3-0.1,2.7-1,3.8c-2,0.6-2.2-1.3-3.1-2.2c-0.3-0.4-0.5-0.8-0.7-1.2c-4.2-2.2-8.4-0.1-12.5,0.2      c-7.4,0.5-14.8,0.9-22.2,1.8c-17,1.2-33.9,3.3-50.9,5.1c-15.6,1.6-31.2,4.2-46.8,6.2c-12.8,1.7-25.6,3.9-38.3,6.3      c-1.5,0.3-3,0.3-4.5-0.1c-0.5-0.2-1-0.4-1.5-0.8c-0.3-0.5-0.2-1,0.2-1.5c1.8-1.3,4.1-0.7,5.9-1.9c5.7-2.2,11.7-2.3,17.5-3.8      c2.1-0.4,4.2-0.1,6.2-0.8c0.5-0.2,1.1-0.3,1.6-0.4c11.7-1.2,23.3-3.4,35-4.5c7.6-0.7,15.1-2.3,22.7-3c0.5-0.2,1.1-0.3,1.6-0.4      c5.8-0.3,11.6-1.1,17.4-1.8c5.5-0.6,11.1-1.2,16.6-2c0.5-0.2,1.1-0.3,1.7-0.3c7.6,0.1,15.2-1.1,22.8-1.6      c0.5-0.2,1.1-0.3,1.7-0.4c9.8-0.9,19.6-0.8,29.4-2.4c2.1-0.3,4.3-0.5,6.4-0.7c3.4-0.2,6.9,0.4,10.3-0.6c2.9-0.6,5.8-0.3,8.7-0.6      c1.7-0.2,3.6-0.2,4.6-2.1c-0.5-2.6-2.6-1.9-4.2-2.1c-2.3-0.3-4.9,0.6-6.9-1.4c4.9-2.1,10.1-0.5,15.1-0.9c1,1.2,1.2,2.6,1.2,4      c0.8,4.4,0.7,8.9,1.7,13.2c2.3,11.3,2.6,22.9,4.2,34.2c0.2,1.5,0.1,3,0.7,4.4c1.5,9.5,2.4,19.2,4.1,28.6      c0.3,2.7,0.5,5.5,1.1,8.2c0.2,2.2,0.4,4.3,0.9,6.4c0.1,5,1.6,9.7,2.2,14.6c-0.2,4.4,1.6,8.5,2,12.8c0.1,2.4,0.7,4.7,1,7      c0.1,1.8,0.3,3.6,0.8,5.3c0.4,2,1.1,4,1.2,6.1c-0.3,3.9,2.2,7.2,2,11.1c-1.1,2.9,1.5,6.4-1.7,8.9C864.3,294,864.1,294,863.9,294      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#504947",
                d:
                  "M462.9,209c5.5-4.7,12.2-7.2,18.4-10.5c26-13.8,53.2-25,81.9-31.9c25.9-6.2,52-11.5,78.4-15.5      c19.1-2.9,38.2-6.1,57.4-8.7c13.3-1.8,26.6-2.9,40-4.3c-0.2,2.8-3.1,2.5-4.5,3.9c-10.2,2.5-20.6,2.8-30.9,3.9      c-3,0.7-6.3,0.3-9.2,1.9c-1.7,0.6-3.5,0.5-5.2,1.1c-0.9,0.2-1.9,0.4-2.9,0.4c-2-0.1-4.1-0.6-6,0.7c-3,0.8-6.1,0-9,1.3      c-0.5,0.1-1.1,0.2-1.6,0.3c-16.5,2.3-32.8,5.3-49.2,7.8c-4.1,0.6-8,2.3-12.2,2.4c-3.8-0.8-7.2,0.8-10.6,2      c-0.5,0.2-0.9,0.3-1.4,0.4c-6.1,0.7-12.1,1.9-18.1,3.5c-0.5,0.2-0.9,0.3-1.4,0.4c-2.2,0.2-4.2,1.2-6.2,2      c-17.2,4-34,9.1-50.4,15.5c-13.1,5.1-25.8,11.1-38.4,17.6c-3.4,1.8-7.1,3.5-10.7,5C468.5,209,465.8,210.6,462.9,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534C4B",
                d:
                  "M927,129.1c14.6,0,29.1,1.5,43.7,2.7c27.2,2.2,53.9,7,80.3,13.4c5.5,1.3,11.5,1.7,16.1,5.8      c-2.8,3.7-6.3,1.1-9.6,1.2c-1-0.2-1.9-0.6-2.8-1.1c-2-1.2-4.2-1.8-6.5-1.3c-4.7-3.8-10.3-2.4-15.6-2.9      c-4.2-0.5-8.2-1.4-12.1-3.2c-8.9-2.1-17.8-4.9-27.1-5.2c-10.1-0.3-20-1.7-30-2.9c-1.7-0.2-3.3,0-4.9,0.4      c-12-1.7-24.1-1.3-36.1-2.2c-7-0.5-14.2-0.3-21.3,0.2c-2.3,0.2-5.6,0.8-4.9-3.5c6-1.8,12.2-0.8,18.3-0.7      C918.8,129.8,923,130.9,927,129.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#615E5E",
                d:
                  "M462.9,209c4.9-0.9,9.1-3.6,13.7-5.4c14.2-5.8,27.5-13.7,42-18.9c10.2-3.7,20.4-7.3,30.8-10.5      c7.1-2.2,14.2-4.4,21.7-5.1c1.9-1,4.1-0.9,6-2l0,0c2-0.8,4.1-0.8,7.3,0.2c-7.4,5.1-15.4,4.8-22.3,7.5c-0.7,0.4-1.4,0.8-2.1,1.1      c-26.1,7-50.8,17.6-75.1,29.2c-5.8,2.4-10.9,6.2-16.9,8.4c-1.4,0.5-2.7,1.4-4.2,1.2c-1.1-0.9-2-1-3.5-0.4      c-2,0.9-2.7-0.2-2.3-2.2C459.4,210.7,460.9,209.4,462.9,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575352",
                d:
                  "M1057,151c3.4-0.4,6.8,1.7,10.1-0.1c1,0,1.9,0,2.9,0.1c0.4,2.1-1.6,1.3-1.8,1.3      c6.7,1.3,13.7,2.4,19.8,6.7c7.1,2.6,14.3,4.9,21.2,7.9c5.2,2.3,10.7,3.5,15.6,7c3,2.1,7.5,3.1,11.1,4.8c2.7,1.3,6.8-0.1,8.4,3.7      c-0.8,1.2-2,1.5-3.4,1.7c-0.6,0.6-1.2,0.6-2,0.5c-1.9-0.9-3.6-2.3-5.8-2.3c-10.5-3.3-20.4-8-30.7-11.6      c-5.4-1.9-10.6-4.8-16.6-4.8c-13.3-4.4-26.7-8.6-40.3-11.9c-2.4-0.6-5.9-0.3-6.6-4c4-1.9,7.9-0.1,11.6,1      c5.2,1.6,10.3,3.4,15.2,4c-1.9-0.7-4.5-0.8-7-1.3C1057.2,153.3,1055.9,152.9,1057,151z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4F4B",
                d:
                  "M735,141c0-2.8,3.2-1.3,4-3.1c4.2-1.8,8.8-1.3,13.2-1.7c19-2,38-3.5,57-5.1c6.3-0.5,12.6-0.8,18.9-1.1      c2.9,0,5.9,0.1,8.8-0.1c3.1-0.2,4.7,0.8,4.1,4.1c-4.1,2.1-8.4,0.9-12.6,0.9c-5.6,0.6-11.2-0.6-16.8,0.9      c-2.7,0.8-5.5,0.5-8.3,0.6c-3.3,0.1-6.6-0.4-9.8,0.5c-0.5,0.2-1,0.3-1.6,0.3c-11.5,0.4-23.1,1.2-34.6,1.9      c-4.2,0.3-8,1.8-12.1,2.5c-0.6,0.4-1.3,0.7-2,0.7C740.7,140,737.4,143.6,735,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M927,129.1c-0.5,2.7-2.7,1.9-4.3,1.9c-8.9,0.1-17.8,0-26.6,0c-1.2,2.4-3.4,1.7-5.3,1.6      c-15.4-0.9-30.8,0.9-46.2,0.9c-0.6,0-1.1-0.2-1.5-0.5c0-1.3,0.1-2.6,0.1-3.9C871.1,128.4,899,127,927,129.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6B6261",
                d:
                  "M457.9,212c0.6,1.7,1.3,2.3,2.9,0.8c1.1-0.9,3.1-2,2.1,1.2c-3.3,4.6-7.5,8.2-12.6,10.4      c-0.8,0.1-3.7-0.9-4.1-1.9C449.2,218.7,453.8,214,457.9,212z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524846",
                d:
                  "M1088,159c-6.9-2.1-13.9-4.3-20.9-6.4c0.9-0.5,1.9-1,2.9-1.6c6.7,0.8,12.9,3.3,19,6      C1088.7,157.6,1088.3,158.3,1088,159z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M449.1,211.2c-0.1-0.5-0.2-1-0.3-1.5c4.8-3.2,9.6-6.6,15.2-8.5c0,0.6,0,1.2,0,1.8      C458.6,204.8,454.9,209.9,449.1,211.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3A3434",
                d:
                  "M1131,670c23.8,0,47.7,0.5,71.5-0.1c85-2,170.1-0.3,255.1-1c4.2,0,6.7,0.2,6.9,5.6      c0.1,2.2-1.8,7.3,3.9,7.5c3.3,0.2,5.1-0.7,4.6-4.4c-0.2-1.3,0.1-2.6,0.2-4c1,1.7,0.5,3.6,0.7,5.4c0.3,4.1-1.1,6-5.7,5.7      c-16.7-1.2-33.5,0-50.2-0.1c-23-0.1-45.9,0.1-68.9,0.2c-2.9-2.6-6.5-1.4-9.8-1.4c-2.4,0-4.8,0-7.2-0.5c1.9-3.4,5.2,0,7.3-1.6      c-17.2,1.5-34.5-0.1-51.8-0.4c-30.8,0.2-61.5-0.4-92.3-0.7c-29.6-0.3-59.2-0.9-88.8-0.3c-29.6,0.6-59.3,0-88.9,0.5      c-16.4,0.3-32.8,0.5-49.3,0.7c-6.1,0.1-12.3-0.2-18.4-0.2c-7.9-0.4-15.9,0.5-23.8,0.8c-11.3,0.3-22.6,1-34,0.6      c-4.1-0.5-8.1-0.1-12.2-0.3c-2.6-2-7.5,1.4-8.9-3.6c-4.9,1.8-10.3-0.1-15.2,1.6c-6.8,2.4-14,0.5-21,1.3c-4.1-5.1-9-0.4-13.5-0.9      c-4.9-0.5-10-0.8-14.9,0.6c-1,0.3-1.9,0.7-2.9,0.6c-1.7-0.1-3.8-0.2-4.3-1.9c-0.5-1.8,1.7-2.1,2.9-2.8c3.4-1.9,7-2.9,10.9-2.5      c-2.9-0.5-5.6,0.4-8.4,0.8c-4.4,0.1-8.7-0.3-13.1,0.3c-0.6,0.1-1.2,0.1-1.7,0c-1.2-0.6-3.1-0.4-2.9-2.6c0.8-0.9,1.9-1.3,3.1-1.4      c8.9-0.1,17.8-0.7,26.7,0.3c1.3,2.5,4.5,1.2,6.2,3c0,2.4-1.9,1.9-3.2,1.9c-3,0-5.9,0.3-8.8,0.7c3.6-0.6,7.3-0.6,10.9-0.8      c2.3-0.1,1.6-1.4,1-2.7c3.8-3,8.3-0.9,12.4-1.7c1.5-0.4,3-0.5,4.5-0.3c2.3,0.6,4.6,0.4,6.9,0.4c17.4-0.6,34.8,1.5,52.1,0.9      c0.6,0,1.3,0.2,1.9,0.2c-8.6-0.5-17.2,0.4-25.8-0.6c0.1-2,1.8-2.3,3.2-2.4c12.7-0.1,25.3-1,38,0.5c0.7,0.2,0.7,1.3,1,1.3      c19.2-1.9,38.5-0.2,57.7-1c0.5-0.1,1.1-0.1,1.6,0c1,0.9,2.1,1,3.8,1c-1.7-0.3-3.8,0.5-2.3-2.2c2.7-1.2,5.6-0.9,8.4-0.9      c28.8,0,57.5,0.2,86.3-0.1c16.9-0.2,33.9-1.3,50.9-0.9C1126,668.5,1128.8,667.9,1131,670z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#160C0B",
                d:
                  "M917,672.1c-12.6,0-25.2,0-37.8,0c-1.4,0-3-0.4-4.2,0.9c-12,0.9-24,0.8-35.9,0.1c-1,0.3-2,0.6-3,1      c-4.4-1-8.9-0.5-13.3-0.2c-1.7,0.1-3.3,0.5-4.7-0.7c-8.8,0-17.6,0-26.3,0c-1.6,0-3.4-0.5-4.7,0.9c-1.9,1.9-4.3,1.4-6.6,1.4      c-17.7,0.1-35.4,0-53.1,0c-10.5-0.2-21,0.3-31.5-0.3c-2.7-0.9-5.5-0.6-8.3-0.9c-2.5-0.3-5.4,0.1-6.5-3.2c-3.5-2.1-8-1.8-11-5      c3.3,0,6.7,0,10,0c13-0.4,26,1,39-1c5.2-2.7,10.6-1.4,16-1c0.3,0,0.7,0,1,0c1.8,1.3,4.2-0.2,6,1c5.3,1.4,10.6,1,16,1      c2.2-1.3,4.8,0.3,7-1c0.7,0,1.3,0,2,0c1.5,1.2,3.5-0.2,5,1c3.7,0,7.3,0,11,0c2.8-1.6,6.2-1.4,9-3c25.7,0,51.3,0,77,0      c2.7-0.8,5.3-0.8,8,0c1.3,0,2.7,0,4,0c5.9-1.4,12.1,0.4,18-1c1.7,0,3.3,0,5,0c1.7,0.8,3.3,0.8,5,0c0.7,0,1.3,0,2,0      c6,0.8,12,0.8,18,0c0.7,0,1.3,0,2,0c2.3,0.8,4.7,0.8,7,0c6.5,0,13.1,0,19.6,0c4.8,0,9.6,0,14.4,0c5.3-1.4,10.7,0.4,16-1      c3.8,2.8,7.9,2.5,12,1c1.7-0.7,3.3-0.7,5,0c2-1.2,4.2-1,6.3-1c17,0,34,0.1,51-0.1c12.1-0.1,24.1-1.1,36.1-0.8      c11.6,0.2,23.2,0.7,34.7,0.1c47.7-2.6,95.3-0.3,143-1.2c9.2-0.2,18.1,2.3,27.3,2.1c8.4-0.2,16.7-1.8,25.1-1.9      c11.6-0.1,23.3,0.2,34.8,1.2c5.6,0.5,11.1-0.2,16.6-0.1c10.2,0.3,20.5,0.5,30.7,0.5c14.8,0.1,29.6,0,44.3,0      c4,2.1,8,0.9,12.2,0.6c-3.8,1.8-7.7,3.4-12,3.3c-11-0.2-21.9,0.2-32.9-0.4c-7.1-0.4-14.3-0.2-21.5,0.3      c-9.1,0.6-18.2-0.1-27.4-0.1c-7.5,0-14.9,0.3-22.4,0.3c-6.5,0-13.3,1.4-19.3,0.3c-13.4-2.5-26.6,0.8-40-0.8      c-11.3-1.4-22.9,0.2-34.4,0.8c-5.1,0.3-10.9,1.2-15.3,0.3c-8.9-1.8-17.1,2.3-25.6,0.6c-4.9-1-10-0.9-14.9-1.8      c-2.3-0.4-3,2.1-4.9,1.7c-5-1-10.1-0.8-15.1-0.7c-1.4,0-3.6-1.1-3.9,0.7c-0.4,2.3,2.1,1.9,3.6,2c1.1,0.1,2.3,0,3.4,1      c-3.4,0-6.9,0-10.3,0c-0.5,0-1.8-0.1-1.3-0.6c2.1-2,0.9-2.9-1-3.2c-1.9-0.3-4.2-0.6-5.1,1.9c-0.8,2.5-2.8,1.9-4.5,1.9      c-9,0-17.9,0-26.9,0c-1.6,0-3.4-0.6-4.7,1c-11.6,0-23.3-0.4-34.9,0.1c-38.1,1.8-76.3,0.4-114.4,0.9c-1.6,0-3.4-0.5-4.7,1l0,0      l-0.5,0l-0.5,0c-1.4,0.9-2.9,0.5-4.4,0.5c-16.9,0-33.8,0.1-50.7,0C919.6,672.5,918.2,672.8,917,672.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M792,663c-2.2,3.6-5.8,2.7-9,3C785.2,662.5,788.6,662.9,792,663z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M899,662c-5.9,2.2-12,0.4-18,1C886.9,660.8,893,662.6,899,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d: "M929,662c-6,1.6-12,1.6-18,0C917,662,923,662,929,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M735,664c-5.3,0.3-10.8-0.8-16,1c0.3-0.5,0.6-1.6,0.9-1.6C725,663.2,730,662.1,735,664z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M988,661c-5.2,2-10.7,0.4-16,1C977.2,659.9,982.7,661.5,988,661z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M752.1,663.2c4.2,0,8.5,0,12.7,0c0,0.2,0,0.3,0,0.5c-4.2,0-8.5,0-12.7,0      C752.1,663.5,752.1,663.4,752.1,663.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d: "M877,663c-2.7,0-5.3,0-8,0C871.7,661.5,874.3,661.5,877,663z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d: "M938,662c-2.3,1.6-4.7,1.6-7,0C933.3,662,935.7,662,938,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M765,665c-2.1,1.9-4.7,0.6-7,1C760.1,664.1,762.7,665.4,765,665z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d: "M742,665c-2-0.3-4.2,0.8-6-1C738,664.3,740.2,663.2,742,665z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d: "M909,662c-1.7,1.5-3.3,1.5-5,0C905.7,662,907.3,662,909,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M772,666c-1.7-0.2-3.6,0.7-5-1C768.7,665.2,770.6,664.3,772,666z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#191514",
                d:
                  "M1005,662c-1.7,0-3.3,0-5,0C1001.7,660.5,1003.3,660.5,1005,662z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#342E2E",
                d:
                  "M1963,562c0.4-1,1.2-1.9,0.7-3.1l0.1,0c2.5-2.5,5-5,7.3-7.8c0.6-0.7,1.3-1.4,1.9-2.1c8.7,0,17.4,0,26,0      c1.9-1.2,4.2,0.1,6.1-0.9c1-0.1,2.1-0.2,3.1-0.3c0.9-0.7,1.7-0.6,2.6,0c0.1,2.1-0.4,4.5,3.1,4.5c0.9,0,1.8,0.9,0.9,2.1      c-1.5,1-3.3,0.8-4.9,1.4c-1,0.3-2,0.4-3.1,0.4c-1.6,0-3.2,0-4.7-0.4c-4.3-1.2-8.8,0.5-13-1c-2-0.8-4.2-0.3-6.1-1.5      c-1.8-1.8-1.5-2.7,1.1-2.9c3-0.2,5.9,1.1,7.9,0.5c-4.6-0.7-10.1-1.2-14.9,2.7c-0.8,0.4-1.7,0.8-2.6,1.2c-1.2,0.5-2.4,1-3.3,2      c-0.9,1.1-0.2,1.6,0.8,2.2c5.4,3.2,11,5.7,17.1,7.1c0,4.1-2.5,5.6-6.2,5.9c-2.8-2.1-5.7-3.8-9.1-1c-1.4,1.2-2.7,0.8-3.9-0.5      c-1-1.1-2.3-1.8-3.4-0.7c-2.9,2.8-4.2-0.7-5.6-1.7c-1.5-1.1,0.5-2.6,1.2-3.9C1962.5,563.5,1962.7,562.7,1963,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3A3635",
                d:
                  "M1983,572c2.3-1.7,5.1-2.9,6-6c0.2-0.1,0.4-0.2,0.5-0.3c0.4,0.1,0.8,0.2,1.1,0.6      c0.5,0.7,0.9,1.5,0.8,2.4c-0.5,1.6-1.9,2.3-2.9,3.4c-4.3,3.7-7.3,8.5-11.4,12.5c-1.3,1.8-2.4,3.8-4.1,5.2      c-1,0.9-1.6,2.1-2.3,3.2c-4.7,5.7-9.8,11.1-12.6,18c-2.1-1,0.3-4.7-3.1-5c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3      C1963.2,593,1973.7,583,1983,572z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B3131",
                d:
                  "M1955,605c0,0.3,0,0.7,0,1c-1.3,3-3.4,6,0,9c-1.9,2.3-4.4,1.6-6.8,1.5c-3.8-0.1-7.5-0.6-11.1-1.5      c-1.3-0.3-2.7-0.7-4-1c-1-1.4-3.5-0.9-4-3c4.2-1.2,8.5-1.2,12.7-0.9C1947.1,610.5,1951.7,609.7,1955,605z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#302B2A",
                d:
                  "M1886.1,687.1c-4.6,0.1-9.3-0.6-13.8,0.8c-2.2,0.7-3.5-0.7-4.3-2.5c-1.1-2.3,1.8-0.7,1.7-2.3      c-1.4-0.1-3.1-0.2-4.7-0.2c2.9-1,6-3.3,7.9,1.3c0.1,0.3,0.9,0.6,1.3,0.5c11.6-1.9,23.4-2,35.1-3.1c0.3,0,0.5-0.4,0.7-0.6      c1.8-1.6,3.8-1.5,5.8-0.4c0.9,2.5-0.9,2.6-2.6,2.8c-2.1,0.3-4.2-0.5-6.2,0.5c-3,0.8-6.3,0.3-9,2.1c-0.3,0.5-0.8,0.6-1.2,0.8      l-0.4-0.2l-0.4,0.2C1892.7,687.9,1889.4,687.7,1886.1,687.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ABA6A3",
                d:
                  "M1051,109c-3.9-2.4,1.3-1.5,1-2.6c-6.5-2.5-13.3-0.2-19.9-2.2c2.6-0.1,5.2-0.3,9.2-0.5      c-6.3-1.7-11.5,0.6-16.3-1.6c6-1.1,11.9-0.7,17.9-0.2c6.7-0.1,13.4,0.4,20.1,1.1c10.8,2.3,21.7,4,32.6,5.6      c6.4,0.9,12.6,2.9,18.9,4.1c6.9,1.3,13.8,2.8,20.7,4.6c3.4,0.9,7.4,1,9.6,4.6c-4.9,0.7-10-1-14.9,1.1c-5,2.3-10.4,1.6-15.6,2.1      c-3.8-2.4-8.5-2.1-12.6-3.5c-3.7-1.3-8-1.3-11.5-2.7c-9.1-3.7-19.4-1.6-28.1-6.4c-2.6-3.8-4-4.1-8.8-1.8      C1052.3,110.4,1051.7,109.6,1051,109z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9D9894",
                d:
                  "M1144.8,121.8c-5.2-1.9-10.4-3.7-15.8-5c-9.3-2.4-19-2.8-28.1-6.2c-5.2-1.9-11.1-0.6-16.4-2.6      c-7-2.6-14.9-1.1-21.5-4.9c11.6,1.2,23.2,3,34.7,5c7.5,1.4,15.2,2.5,22.4,4.4c11.9,3.2,24.2,4.8,35.9,8.5      c0.6,0.2,1.2,0.1,1.8,0.9C1153.5,121.8,1149.2,121.8,1144.8,121.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#56524E",
                d:
                  "M1113,123.9c5.7-0.3,11.3-0.6,17-0.9c11,0.3,21.9,0.7,32.9,1c1.8,0.1,3.7-0.4,5.3,0.9      c-1.4,1.7-3.6,1.3-5.3,2.1c-1.1,0.3-2.3,0.4-3.5,0.5c-5.4,0-10.8,0.2-16.2-0.4c-6.5-1.2-13.1-1-19.6-0.2c-3,0.4-5.9,0.7-8.8,0.2      c-1.7-0.6-3.5-0.7-4.8-2C1110.2,122.8,1111.6,123.3,1113,123.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#807E79",
                d:
                  "M966.1,97.9c1.5-1.6,3.5-0.4,5.2-1.1c0.8,0,1.7,0.1,2.5,0.1C984.9,98,996,98,1007,100      c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3C993.4,100.1,979.8,98,966.1,97.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#65615C",
                d:
                  "M1185,126c1.7,0.6,3.5,1.3,5.2,1.9c-0.5,1-1.5,1.5-2.5,1.9c-2.5,0.7-4.8-0.5-7.2-0.5      c-3.8-1.4-8.4,0.5-11.6-2.9c1.7-2,4.2,0,6.1-1.3C1178.3,125.4,1181.6,125.7,1185,126z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#78736F",
                d:
                  "M1042.9,101.9c-6,0.1-12,0.1-17.9,0.2c0,0,0.1-0.2,0.1-0.2c-0.4-0.2-0.5-0.4-0.4-0.5      c0.1-0.2,0.2-0.3,0.4-0.3C1031,101.5,1037,99.9,1042.9,101.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484540",
                d:
                  "M1174.9,125.1c-1.8,1.7-4,0.4-6,1c-2,1.5-4,1.6-5.9-0.3c1.5-1.5,3.5-0.5,5.1-1      C1170.4,125,1172.7,125,1174.9,125.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7D7874",
                d:
                  "M1007,100.9c0-0.3,0-0.6,0-0.8c2.9,0,5.8,0,8.6,0c0.1,0,0.2,0.2,0.3,0.3c-0.3,0.2-0.7,0.4-1,0.7      C1012.3,101,1009.7,100.9,1007,100.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#807E79",
                d:
                  "M1025,101.1c0,0.3,0,0.5,0,0.8c-1.7,0-3.3,0-5,0C1021.5,100.4,1023.4,101.2,1025,101.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#888480",
                d:
                  "M1197.8,130.1c27.4,11.7,55.5,21.7,83.2,32.9c0.6,1.4,2.2,2.3,2,4c-1.6,1.3-3.3,0.3-4.9,0.4      c-0.4-0.1-0.8-0.4-1.2-0.6c-10.1-5.3-20.8-9.2-31.9-11.9c-0.7,0-1.4-0.1-2.1-0.3c-3.7-2.2-6.6-6.9-12-4.1      c-0.5,0-0.9-0.2-1.3-0.5c-0.8-2.1-2.8-2.9-4.7-3.3c-1.9-0.3-3.5-1.1-5-2c-6.6-4-14-5.7-21.1-8.3c-2.7-1-4.2-2.3-4-5.2      C1195.5,129.9,1197,131,1197.8,130.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#989891",
                d:
                  "M1460,253c1.3,2.4,4,2.7,6,4c3.1,3.3,7.2,5.6,9.6,9.7c1,1.7,3.7,2.7,2.6,5.3c-1,2.4-3.6,2.7-5.8,3.1      c-0.8,0.1-1.6-0.1-2.4-0.2c-0.5-0.2-0.8-0.5-1.1-0.9c2.4-4.2,1.6-6.2-3.3-9.4c-7.9-5.1-15.7-10.5-24.1-14.8      c-0.9-0.5-1.6-1.2-2.3-1.9c-5.9-3.7-11.3-8.1-17.6-11.1c-1.5-0.7-3.2-1.1-3.7-3c0.1-0.2,0.1-0.5,0.2-0.7      c7.8,1.9,14,7.1,21.3,9.8C1446.6,245.5,1452.3,251.2,1460,253z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#989891",
                d:
                  "M1359,204c1,0.3,2,0.7,3,1c1.2,0.9,3.3,0.1,4,2c16.6,6.9,32.4,15.6,48.8,23c1.5,0.7,2.5,1.6,3.2,2.9l0,0      c-3.3,1.9-5.4-1.1-8-2c-2.3-0.8-4.2-2.5-6.8-2.7c-1.5-0.3-2.8-0.7-4.1-1.6c-0.4-0.3-0.7-0.6-1-1c-2-2.6-5-2.9-7.9-3.7      c-8.8-4.5-17.7-8.7-26.9-12.5c-3.7-1.5-7.1-4-10.8-6c-1-0.5-2-1.2-1.7-2.7C1354.6,199.4,1357,201.3,1359,204z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#908D88",
                d:
                  "M1359,204c-2.7-1-4.9-3.2-8-3c-6.6-0.2-11.6-4.4-17.2-7.1c-2.3-2.3-6-2.5-8-5.3c0.1-0.2,0.1-0.5,0.2-0.7      c7-0.3,12.8,2.7,18.8,5.9c4.1,2.1,7.6,5.9,12.6,6.1C1361.1,200.1,1358.3,202.7,1359,204z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#989792",
                d:
                  "M1287,171c4-0.7,6.7,2.4,10,3.8c2,0.8,3.9,1.7,6,2.2c3.7,1.6,7.3,3.6,11.1,5.1c1.2,0.5,2.4,1.2,1.8,2.9      c-1.2,1-2.6,0.6-3.8,0.1c-10.9-5.3-22.5-9.2-33.2-15.1c-0.2-0.5-0.2-0.9,0-1.4C1282.5,166.4,1284.8,168.7,1287,171z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#908D88",
                d:
                  "M1316,185c-3.7-3.7-9.4-4.2-13-8c5,1,10.3,2.4,14.3,5.3c2.8,2,7.7,1.1,8.7,5.7l0,0      c-3.8,1.5-6.5-1.2-9.5-2.4C1316.3,185.4,1316.2,185.2,1316,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#928E8A",
                d:
                  "M1287,171c-2.7-0.6-4.6-4.1-8-2c-0.9-0.4-1.5-0.9-1-2c1.7-1.4,3.3-0.2,5,0      C1284.1,168.5,1287.7,167.6,1287,171z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#908D88",
                d:
                  "M1366,207c-1.3-0.7-2.7-1.3-4-2C1363.4,205.6,1366.3,202.9,1366,207z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3736",
                d:
                  "M681,671c4.3,3.1,9.6,0.8,14.1,2.9c-0.5,1-1.3,1.5-2.3,1.7c-0.3,0-0.6,0-0.9-0.1      c-0.1,0.6,0.4,0.3,0.5,0.3c5.6-0.2,11.2,0,16.8-0.2c31.1-1,62.2-0.4,93.3-0.7c0.9-0.1,1.8-0.4,2.5-0.9c3,0,5.9,0,8.9,0      c-5.1,0.7-9.4,3.3-13.7,5.4c2.8,2.5,5.5-0.2,8.3-0.3c5.1-0.2,10.3-0.1,15.5-0.1c1.2,0,3,0.4,3.4-0.2c3.1-4.6,4.7-0.4,7.3,0.5      c1.7,0.6,5.1,2.9,7.5,0c0.3-0.3,0.9-0.9,1-0.8c8.1,4.4,15.9-2.6,24-0.7c1.2,0.3,2.7,0.4,3.7-0.8c0.7-0.8,1.3-2.4,2.6-0.9      c1.5,1.7-0.5,2.4-1.5,3.4c2.3,1.1,5.1-0.7,7.1,1.4c-0.6,0.7-1.4,1-2.2,1.2c-4.7-0.4-9.7,1.7-14.2-1.4c-0.2-0.1-2.3,1.9-4,2.1      c-3.8,0.2-7.6,0.1-11.4,0.1c-2.6,0.2-5.1-0.7-7.7-0.5c-2.2-0.1-4.5,0.2-6.8-0.1c2.1,0.1,4.1,0.1,6.2,0.1c2-0.1,3.9,0.2,5.8,0.5      c2.5,0.4,5.3-0.9,7.5,1.2c-8.6,1.3-17.2,0.5-25.8,0.7c-9.5,0.2-19,0.1-28.4,0.1c0-0.6,2.5-2.3-0.2-1.7      c-8.8,1.7-17.6,0.2-26.3,0.9c-14.4,1.1-28.9,0.2-43.2,1.2c-13.8,1-27.5,0.3-41.3,0.8c-4.2,1-8.5,0.4-12.8,0.4      c-3.9,0-4.4-3.5-5.5-6.1c-0.4-0.8,0.4-1.9,1.2-1.8c3.6,0.6,6.6-3,10.4-1.1c1.4,0.7,3.1-0.2,4,0c-4.8,0.6-10.1-1.3-15.4-2.2      c-2.1-0.3-2.1-3.1-0.1-5c1.4-0.1,2.3,0.8,3.3,1.7C675.1,672.7,678.1,672,681,671z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#170E0B",
                d:
                  "M672,671.9c-1-0.3-2-0.6-2.9-1c-8.3-1.2-15.9-4.9-23-8.9c-13-7.3-26.8-10.3-41.5-10.6      c-12-0.3-23.9,0.6-35.9-0.6c-2.6-0.3-3.5,2.4-5.8,2.2l0.1,0c-0.8-1.3-2.9-2.1-1.3-4.2c0.7-0.9,1.3-1.8-0.6-1.8      c-0.7,0-1.8,0.8-1.8-0.7c0-1.3,1.2-1.6,2.2-1.3c7.2,1.8,14.6,1,21.9,0.8c11.7-0.3,23.2,0.8,34.8,1.3c7.4,0.3,14.6,2.8,21.5,6.3      c9.9,5,19.4,10.8,29.6,15.4C670.7,669.6,671.9,670.1,672,671.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#160C0B",
                d:
                  "M670,666c-2.3-0.1-4-0.7-5.4-2.3C667.6,662,669,663.6,670,666z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2928",
                d:
                  "M169,641c8.1,1,15.2-1.5,21.8-6.2c6.5-4.6,14.3-5.6,21.9-4.6c7.5,1,14.9,0.4,22.3,0.8      c-0.3,0.4-0.5,0.9-0.8,1.3c-1.3,1.5-2,3.5-0.6,5c1.4,1.5,2.6-1.2,4.5-1.2c-0.7,5.7-1.4,11.4-2.2,17c-0.1,0.5-1.1,1.4-1.2,1.4      c-3.6-2.2-7.9,1.4-11.8-1.5c-1.2-0.8-4.3-1.2-6.6-1.9c-0.5-0.2-8.1-1.9-8.9-2.1c-0.6-0.1-1.3,0-1.9,0.1      c-5.2,1.1-11.1,0.4-15.5-0.8c-4.6-1.3-10-1.8-14.3-4.8c-1.4-1-2.3-1.8-1.7,1c0.2,1.1-1.8,0.6-2.3,0.1      C170.6,643.5,169.9,642.2,169,641z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1325,274.8c-0.1,0.4-0.1,0.9-0.2,1.3c-2.9-0.7-5-2.6-7.3-4.2c-18.8-12-37.5-24.2-57.2-34.9      c-2-1.1-4.3-1.9-5.3-4.3c11.8,5.9,23.6,12,34.4,19.6c4.9,3.4,9.9,6.6,15.5,8.6C1311.7,265.7,1318.4,270.2,1325,274.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#494641",
                d:
                  "M1331,287c0.3-0.3,0.7-0.7,1-1c6.5,3.6,12,8.7,18,12.9c-0.7,0.8-1.7,0.5-2.6,0.5      c-4.6-0.7-7.6-4.2-11.2-6.7C1334.6,290.7,1330.9,290.6,1331,287z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1211,206.9c7.8,3.1,14.9,7.5,22,12c0.4,0.5,0.3,1-0.2,1.4c-6.3-3.6-12.7-7.2-19-10.8      C1212.7,208.8,1211.3,208.5,1211,206.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1232.8,220.3c0.1-0.5,0.1-0.9,0.2-1.4c5.5,1.9,9.9,5.5,15,8.1c0.2,0.5,0.3,0.9,0.5,1.4      C1242.8,226.7,1238.1,222.8,1232.8,220.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#514743",
                d:
                  "M1162,187c-6.3,1-9.8-0.6-11-5C1154.9,183.3,1158.8,184.4,1162,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DCD5D4",
                d:
                  "M1354.4,299.8c-4.2,0-8.5,0-12.7,0c1.4-2.4,3.4-1.2,5.3-0.9c1,0,2,0,3.1,0"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#514743",
                d:
                  "M1164,188c-0.5,0.9,1.3,2.6-0.4,2.6c-1.6,0-2.7-1.6-1.5-3.5C1162.9,187,1163.6,187.2,1164,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#514743",
                d:
                  "M1170.1,190.9c-1.7,0.1-4.4,2.3-4.1-1.9C1167.7,189,1169,189.8,1170.1,190.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1063.8,122.1c-14.5-3.1-29.1-6.2-43.6-9.2c-8.7-1.8-17.5-3.2-26.3-4.7c-2.5-1.7-5.5,0.1-8.1-1l-0.1,0      c0.9-3.5,4-2.8,6.4-3.1c10.4,0.8,20.8,1.2,30.9,4.3c0,0.8-0.5,1.1-1.2,1.1c0.3,0.3,0.7,0.2,1.1,0.2c9.5,0.2,18.7,2.7,27.8,4.9      c4.3,1.1,8.9,1.3,13.1,3c1.8,0.7,4,0.9,4.4,3.4C1067.1,122.7,1065.6,122.8,1063.8,122.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M849.7,98.8c3.7-1.2,7.6,0,11.3-0.8c0.7,0,1.3,0,2,0c3-0.8,6-0.8,9,0c0.7,0,1.3,0,2,0      c1.7-0.7,3.4-0.9,5,0.1c2.2,0,4.5,0,6.7,0c6.4,0.9,12.9,0.1,19.4,0.4c2,0.1,4-0.4,5.9,0.4c6,0.3,12,1.3,18,0.8      c2.6-0.2,5.2-0.8,7.7,0.4c5.3,1.2,10.7,0.8,16.1,1.2c1.8-0.3,3.5,0.1,5.2,0.4c0.1,3.5-2.2,2.7-4.2,2.3l-0.4,0.1l-0.4-0.2      c-7.8-1-15.7-0.4-23.4-1.6c-1.6-0.2-3.3,0.2-4.9-0.4c-15.1,0.4-30.2-1.1-45.3-1.7c-5.8-0.2-11.6-0.3-17.4-0.5      C858,98.6,853.7,100.5,849.7,98.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1063.8,122.1c1.4-0.4,2.8-0.7,4.2-1.1c1.7-1.6,3.7-1.3,5.6-0.8c7.4,1.9,14.8,3.8,22,6.5      c1.1,0.6,2.2,1.1,3.4,1.4c5.4,1.4,11.2,2.1,15.2,6.6c-0.2,0.5-0.6,0.8-1.1,1c-5.3-0.5-10-2.9-15.2-3.6      C1086.5,128.9,1075.4,124.6,1063.8,122.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M953.8,104.1c1.6-0.3,3.4-0.1,4.2-2.1c1.3-1,2.7-0.8,4.2-0.7c9.1,0.5,18.1,0.8,27.2,1.7      c1.1,0.3,2.5,0.2,2.9,1.8c-2.1,1-4.6,0.6-6.4,2.3C975.1,107,964.4,105.2,953.8,104.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1137.6,145.2c-7-0.9-13.3-3.9-19.7-6.7c-0.6-1.9-4.5-0.2-3.9-3.5l0-0.1c4.3-2.2,7.8,1,11.7,1.8      c3.2,0.6,6,2.5,9.2,3.6c1.5,1.4,4.2,1.3,4.5,4C1139.1,145.2,1138.5,145.6,1137.6,145.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M849.7,98.8c4.1,0.8,8.4-0.9,12.3,1.1c-13.6,0.6-27.3,1.6-40.9,1c-0.5-1.9,1.4-1,2-1.7      C831.9,99.1,840.8,99,849.7,98.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1137.1,145.1c0.5-0.4,1.4-0.7,1.9-1.1c0.1-0.1,0.3-0.3,0.4-0.3c7.5,1.1,14.7,3.3,20.7,8.2      c0.2,0.5,0.1,1-0.4,1.4c-3.2-0.8-6.5-1.6-9.7-2.4C1145.9,148.9,1141.3,147,1137.1,145.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M924.7,102.1c9.5-0.3,18.9,0.3,28.3,1.9C943.5,103.7,934,104.3,924.7,102.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1114,135c0.4,2.1,3.4,1.4,3.9,3.5c-6.6-2.1-13.3-4.3-19.9-6.4C1103.6,131.5,1108.4,135.2,1114,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M823,99.2c-0.7,0.6-1.3,1.1-2,1.7c-1.7,0-3.4,0-5,0c-0.5-0.5-1.6-0.6-0.8-1.7      C817.8,99.2,820.4,99.2,823,99.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M793.2,100.2c3.3-0.1,6.5-0.1,9.8-0.2c0.2,0.2,0.3,0.4,0.2,0.6c-0.1,0.2-0.2,0.3-0.3,0.3      c0.5,1-3.6-0.4-5,1.1c-1,0-2-0.1-3-0.1c-0.6-0.5-1.6-0.2-2.2-0.8C792.6,100.6,792.8,100.4,793.2,100.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M803,100.9c0-0.3,0-0.6,0-0.8c1.5-1.6,3.4-0.8,5.1-0.9c0.7,1.1,3-0.7,2.9,1.7      C808.3,100.9,804.7,101.5,803,100.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M811,100.9c-1-0.6-1.9-1.1-2.9-1.7c2.4,0,4.7,0,7.1,0c0.3,0.6,0.6,1.2,0.8,1.7      C814.3,100.9,812.7,100.9,811,100.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M985.9,107.1c2.7,0.2,5.6-1.2,8.1,1C991.2,108,988.5,108.3,985.9,107.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#201C1C",
                d:
                  "M121,632c-0.3,0-0.7,0.1-1,0.1c-4.2,0.1-8.2-0.4-11-4c-3-1.3-5.9-2.7-8.9-4c-1.9-0.9-2-3-0.6-3.3      c5.4-1.3,4.1-5.8,4.6-9.1c0.5-3.1,0.5-6.1,3.9-7.6c1-0.5,1.8,0,2.6,0.4c3,1.5,6.2,2.7,8.8,4.9c0.8,0.8,2,1.3,1.6,2.7      c-3.5,2.2-2.5,4.4-0.5,6.8c-2,0.2-4.6,0.7-6.8,2.6c1.5,0.8,3.7,0.5,4.3,2.5c-2.9,1.3-5.9,0.7-9.6,0.5c4.9,0.6,9,1.7,13.1,2.9      c1.4,0.4,3.5,0.2,3.5,2.7C123.4,630.2,121.3,629.3,121,632z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332F2E",
                d:
                  "M125,630c-5.4-2.8-11.8-2.5-17.2-5.6c3.6-0.7,6.9-2,10.3-0.4c4.7,1,9.3,2,14,3c4.1,2.1,9,1.6,13,4      c-0.3,1.2-1.1,2.1-2,3C137,632.6,131,631.3,125,630z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3738",
                d:
                  "M143,634c0-1.5,0-2.9,2-3c9.8,1.9,20.1,1.5,29,7c-1.1,3.4-3.8,2.1-5.8,1.5      C159.9,637.2,151.5,635.6,143,634z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332F2E",
                d:
                  "M129,635c-2-1-4-2-6-3c3.9,0.2,7.6,0.9,11,3C132.3,635,130.7,635,129,635z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M2070,631c-7.4,3.3-14.5,7.5-23,8c-4.6,0.3-9,3.1-13.9,1.3c-1.4,3.5-5.3,1.9-7.5,3.6c-0.7,0.5-1.4,1-2.3,0.7      c-8.1-2.3-16.3,0.4-24.2,0.8c-9.6,0.4-19.6,0.5-29.1,2.9c-3.8,1-7.2,2.7-11.4,2.1c-4.9-0.7-10.3-0.3-14.6,0.8      c-6,1.6-12.3,0.3-17.9,3.1c-1.7,0.9-2.4-0.1-3.1-1.4c1.2-3.3,4.5-3,7-4c0.3,0,0.7,0,1,0c3.9-1.6,8.6,0.4,12-3c0.3,0,0.7,0,1,0      c2.5,1.1,4.8,0,7-1c0.3,0,0.7,0,1,0c1.3,1.4,2.7,0.9,4,0c1,0,2,0,3,0c2.9-1.3,6-0.8,9-1c1.7-0.1,3.6,0.7,5-1      c7.1,0,14.1-0.6,21.1-1.7c5.4-0.8,11.1-0.2,16.7-0.9c10-1.2,20.3-2.2,30-4.1C2050.5,634.3,2060.5,634,2070,631z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1973,643c0.1,0.7,0.8,2-0.5,1.9c-4.5-0.3-9,1.2-13.5,0.1c0.3-2.4,2.2-2,3.8-2      C1966.2,643,1969.6,643,1973,643z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1930,649c-2.3,1.3-4.7,2.7-7,4c-0.3,0-0.7,0-1,0c-1-1-2-2-3-3C1922.6,649.2,1926.3,648.6,1930,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1943,646c-0.9,3.1-3.4,3.1-6,3c-2-0.1-4,0-6,0C1934.7,646.6,1939.1,647.4,1943,646z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1917,649c-3-0.7-6.9,2.9-9-2C1910.9,647.9,1914.7,645,1917,649z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1951,645c-2,2.9-4.4,2.6-7,1C1946.3,645.7,1948.7,645.3,1951,645z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1956,645c-0.1,1.1-0.5,1.9-1.8,1.9c-1.4,0.1-2.1-0.5-2.3-1.9C1953.3,645,1954.7,644,1956,645z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1903,647c-1.4-0.1-3,0.5-4-1C1900.8,644.3,1901.8,646,1903,647z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292424",
                d:
                  "M950,680c14.8-0.3,29.6-0.1,44.3-0.4c25.5-0.7,51.1-0.3,76.7-0.6c14-0.2,28-0.4,41.9-0.6      c16.8-0.3,33.6-0.9,50.4-0.2c21.3,0.9,42.6,0.4,63.9,1c20.2,0.5,40.5,1,60.7,0.9c-0.3,2.4-2.2,1.3-3.4,1.4      c-4.2,0.4-8.4-0.5-12.6,0.5c-30.3,0.1-60.6,0.3-90.9,0.4c-30.6,0.1-61.3,0.1-91.9,0.1c-3.3,0-6.6,0.8-9.8-0.3      c-1.9,0-3.8,0-5.7,0c-1.5,0.5-3,0.5-4.6,0c-1.9-0.3-3.7,0.9-5.6-0.1c-0.3,0.4-0.7,0.4-1,0c-1.8,0.9-3.7-0.2-5.5,0.1      c-0.6,0-1.3,0-1.9,0c-2.8-1-5.7,1.4-8.5-0.1c-1,0.5-2,0.5-3,0c-1.5,1.2-3-1.1-4.5,0.1c-1,0.4-2,0.4-3,0c-5.5-1.4-10.9,0-16.4,0      c-0.9,0.4-1.7,0.4-2.6,0c-2.7-0.5-5.4-0.5-8,0c-0.7,0-1.3,0-2,0c-1.8-1.1-3.6,0.7-5.4,0c-1.4,0.5-2.8,0.5-4.1-0.1      c-2.3,0.6-4.7,0.6-7,0c-0.7,0.5-1.3,0.5-2,0c-2.8,1.6-5.7-2.2-8.5,0.1l-0.3,0.1l-0.2-0.2c-1.8,1.2-3.7-1.1-5.5,0.1      c-3.5,0.3-7,1.6-10.5-0.1c-2.3,0.6-4.7,0.6-7,0c-1.4,0.6-2.8,0.5-4.2,0.1C950.6,682.5,949.9,681.7,950,680z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292424",
                d:
                  "M852.3,684.1c-2.7-0.1-5.4-0.3-8.1-0.4c-0.1-2.2,2.3-0.5,2.8-1.7c4,0,8,0,12,0c5.9-1,11.8-0.2,17.7-0.5      c5.1-0.3,10.3,0.6,15.3-0.5c11.3,0,22.7,0,34,0c0.2,2-1.4,1.3-2.3,1.5c-1.6,0.3-3.2-0.6-4.7,0.6l-0.3,0.2l-0.3-0.2      c-10.6,0.6-21.3,0.7-31.9-0.1c-0.3,0.5-0.6,0.5-0.9,0c-6.8,1.2-13.7-0.4-20.6,0.8C860.8,684,856.5,684.1,852.3,684.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#342F2F",
                d:
                  "M1272,682c3.2-2,6.7-0.5,10-1c2-0.3,4.3,0.8,6-1c10.4-0.4,20.7,1.2,31.3,0.5c7.5-0.5,15.6-0.4,24.1,0.8      c-4.1,1.5-8-0.1-11.4,1.6C1312,683.6,1292,681.6,1272,682z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M919,683.1c1.8-2.4,5.1,0.2,7-2.1c8,0.5,16-1.7,24-1c0.4,1.1,1.3,1.7,2.4,2.1      C941.2,682.5,930.1,682.8,919,683.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M886.4,683.1c10.6,0,21.3,0,31.9,0.1c-0.2,0.2-0.3,0.5-0.5,0.7c-9.4-0.1-18.7-0.1-28.1-0.2      C888.7,683.6,887.5,683.2,886.4,683.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1019.6,682.2c5.5-1.7,10.9-2,16.4,0C1030.6,682.7,1025.1,682.7,1019.6,682.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1009,682.1c2.7-1.7,5.4-1.7,8,0C1014.3,682.7,1011.7,682.7,1009,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1046.5,682.1c2.8,0.9,5.7-2.2,8.5,0.1C1052.2,682.6,1049.3,682.8,1046.5,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M980,682.2c2.8-2.9,5.7,0.4,8.5-0.1C985.7,682.9,982.8,682.6,980,682.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1001.6,682.1c1.8-0.6,3.6-2.3,5.4,0C1005.2,682.7,1003.4,682.7,1001.6,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1073.6,682.1c1.9-1.2,3.8-1.3,5.7,0C1077.4,682.7,1075.5,682.7,1073.6,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M974,682.1c1.8-2.5,3.7,0.3,5.5-0.1C977.7,682.8,975.8,682.7,974,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1063.5,682.1c1.8,0.6,3.7-1.9,5.6,0.1C1067.2,682.7,1065.3,682.8,1063.5,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1056.9,682.2c1.8-2.1,3.7,0.6,5.5-0.1C1060.6,682.7,1058.8,682.7,1056.9,682.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M956.5,682.1c2.3,0,4.7,0,7,0C961.2,682.8,958.9,682.8,956.5,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M990.5,682.1c2.3,0,4.7,0,7,0C995.2,682.8,992.8,682.8,990.5,682.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M1039,682.2c1.5-2.1,3,0.4,4.5,0C1042,682.7,1040.5,682.7,1039,682.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B5B2AE",
                d:
                  "M992.3,104.8c-0.8-0.3-1.5-0.5-2.3-0.8c-1.8-1.2-3.9-0.3-5.8-0.6c-0.9-0.2-1.7-0.4-0.9-1.5      c0.5-0.6,1.1-0.3,1.7,0.1c11.7,1.3,23.5,2.5,35.2,4.1c9.1,1.3,18.2,2.2,27.3,3.8c1,0.2,3,1.9,3.5-0.9c0.8,0,1.6,0.2,2,1      c3,0.8,6.4-0.5,9,2c1.8,0.2,3.5-0.3,5.2,1c3.9,3.1,9.2,0.1,13.4,2.6c1.6,0.9-1.6-3.9,2-1.9c1.4,0.8,1.1,2.8,3.4,3.1      c8.8,1,17.2,4.6,26,5.3c1.7,0.1,1.4,0.8,1,1.8c-1.1,0.3-2.2,0.6-3.3,0.9c-2,2.2-4.4,1.8-6.8,1.1c-15.5-4.7-31.4-7.4-47.2-10.5      c-10.4-2.1-20.7-4.4-31.3-5.7c-0.5-0.1-0.8-0.5-1.1-0.9C1013.1,106.7,1002.7,105.5,992.3,104.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M985,102c-0.2,0-0.4,0-0.5,0.1c-0.2,0.2-0.3,0.4-0.5,0.6c1.9,1,4.3-0.7,6,1.3c-10.7-0.2-21.3-2.3-32-2      c-1.7-0.2-3.5-0.4-5.2-0.7c2.3-2.5,5.7-1.1,7.8-0.9c7.1,0.8,14.2,0.1,21.2,0.5C983,101.1,984.2,100.9,985,102z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M911,98.9c-8.4,0-16.9,0.3-25.3-0.8C894.2,98.3,902.6,96.9,911,98.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M936.7,100.2c-2.6-0.1-5.1-0.3-7.7-0.4c4.3-1.7,8.6-0.3,12.9,0C940.2,99.9,938.5,100,936.7,100.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d: "M872,98c-3,0-6,0-9,0C866,96.4,869,96.4,872,98z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M879,98.1c-1.7,0-3.4,0-5-0.1C875.7,96.5,877.4,96.5,879,98.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#373230",
                d:
                  "M119,610c-3-1.7-6-3.3-9-5c3.8-3.8-0.3-5.6-2-8c-2.4-4.3-4.7-8.6-7.1-12.9c4.6,2.7,7,7.6,11.1,10.9      c2.9,4.3,8.5,6.5,9.6,12.2c0.2,1,2.2,1.6,1,2.9C121.6,611.2,120.2,610.6,119,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#282524",
                d:
                  "M119,610c1,0,2,0,2,0c0.7-7.2-7.4-9-9-15c5,3.3,9.5,7.1,13,12c2.1,1.4,4,3.4,2.2,5.6      c-1.7,2.1-4.2,0.7-6.2-0.6h0C120.3,611.3,119.7,610.7,119,610z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#201C1C",
                d:
                  "M121,612c1.9-0.1,3.9,2.2,5.5,0.2c1.6-2-0.7-3.5-1.5-5.2c3.4,0.3,4,3.7,5.8,5.7c1.3,1.4-1.7,3-2,2.8      C126.7,613.2,122.6,615.3,121,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8B8584",
                d:
                  "M2080.9,428c-1.3-1.8-1.5-4-1.8-6.1c2.4,0.4,4.6-0.3,6.8-0.9c3-0.8,4.6,0.5,5.8,3.1      c1.1,2.4,0.7,3.5-2,4.2C2086.6,429.3,2083.8,427.9,2080.9,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#502818",
                d:
                  "M1879,409c-5-1.4-9.5-4.2-14.4-5.9c-4.4-1.5-10.1-3.2-13-8.2c-0.4-0.7-1.1-1-1.6-0.7      c-5.4,2.5-9.5-1.3-14-3c3.1-3.4,7-5.7,11.1-7.6c0.5-0.1,0.9-0.1,1.4-0.1c1.4,0.2,2.9,0.3,4.3,0.4c2.7,1.2,6.3-0.4,8.4,2.6      c-2.8,2.9-6.4,1.4-9.7,2c-0.6,0.3-1.1-0.7-1.8-0.1c0.3,0.1,0.5,0.2,0.8,0.4c1.7,1.5,3,3.6,5.6,3.7c1.2,0.1,1.9,0.8,2.3,1.8      c1.4,1.4,2.7,2.5,4-0.1c1.6-0.6,3.2-0.6,4.6,0.6c0.9,2.4,4,1.8,5.2,3.8c0.7,2.8,3.6,3.2,5.3,4.9      C1878.9,405.1,1881.6,406.4,1879,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6C6261",
                d:
                  "M1967,437c-2.5,1.7-5.5-1.6-7.9,0.8c-16.8-4-33.3-9-49.9-13.9c2-3.8,4.9-0.6,7.4-1      c4.8,1.5,9.9,2.4,14.6,4.4c1.5,0.6,3.1,1,4.8,0.2c0.7-0.2,1.5-0.2,2.2,0c5.2,2.1,10,5.3,15.8,5.7c0.5,0.2,0.9,0.5,1.1,1      c1.4,1.4,2.8,1.7,4.8,1.1C1962.4,434.5,1965,434.8,1967,437z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C2813",
                d:
                  "M1879,409c1.2-3.8-2.3-4.2-4.1-5.8c-1.3-1.2-3.8-1.5-2.9-4.2c2.5-1.8,5-0.1,7.5,0.1      c1.9,0.8,3.7,2.1,4.3,3.9c1.6,4.7,5.3,6.7,9.4,8.6c2.7,1,4.7,2.7,5.9,5.4c-3.3,0.7-5.9-1.7-8.8-2.5      C1886.3,413.2,1882.7,410.9,1879,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1848,384c-4.2,2.1-7.4,5.7-11.9,7.2c-0.4-0.1-0.7-0.2-1.1-0.3c-1.7-1.4-4-1.3-5.9-2      c-0.4-0.2-0.9-0.4-1.3-0.6c-1.6-0.6-4.2-1-3.5-3c0.7-2,3.1-0.7,4.7-0.1c1.3,0.6,2.6,1.5,4.2,1.2c1.3-0.2,2.7-0.5,3.3-1.9      c0.6-1.4-0.7-1.9-1.5-2.7c-0.9-0.9-3.1-1.3-1.4-3.3c2.8-1.2,5.4-0.3,8,0.5c2.5,0.8,4.5,2.7,6.9,3.8      C1848.4,383.2,1848.3,383.6,1848,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#90401C",
                d:
                  "M1899,417c-2.3-1-3.1-4-6-4c-1.2-2.2-3.2-3.6-5-5.3c-1.6-1.4-3.4-2.7-2.5-5.4c3.1-2.3,4.7,1.6,7.3,1.8      c0.4,0.1,0.9,0.2,1.3,0.4c1.7,1.1,3.1,2.4,4.1,4.2c0.2,0.4,0.2,0.8,0.2,1.3c0.1,3,3.1,3.3,4.6,4.9c0.7,2,0.3,3-2.1,2.2      C1900.3,417,1899.7,417,1899,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1917,423.9c-2.6,1-5.1-2.3-7.7-0.1c-5-0.4-5.8-1.1-4.3-3.7c1-2,3.1-1.2,4.7-1.8c3,0.7,5.8,1.8,7.8,4.3      C1917.5,423.2,1917.3,423.6,1917,423.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#744A31",
                d:
                  "M1909.1,418.7c-1,1.4-2.8,0.9-4.1,1.5c-1.3-1.1-3.2-1.3-4-3.1c1.2-0.3,2.6-0.5,1.1-2.1      c-1.7-1.4-4.2-2.2-4.1-5.1l0.1-0.5c0.1-0.2,0.3-0.4,0.4-0.6C1902.6,411.4,1907,413.8,1909.1,418.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1835.9,395.2c-2.6-1.1-5.6-1.2-7.8-3.4c1.8-2,4.1,1.1,6-0.6C1834.7,392.6,1835.3,393.9,1835.9,395.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1873.5,413.1c0.5-0.3,1.1-0.6,1.6-0.9c0.2-0.4,0.5-0.6,1-0.5c1.4,0.3,2.7,1.1,4.1,1.3      c0.9,0.3,1.9,0.7,2.8,1c0.5,1.8-1.2,1.4-1.9,1.9C1878.5,415,1876,414,1873.5,413.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1964.9,439.1c3,0.4,6.1,0.8,9.1,1.1c0,0.2,0,0.3,0,0.5c-3.3,0-6.7,0-10,0      C1964.2,440.2,1964.5,439.6,1964.9,439.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1862,405c-0.7,0.1-1.3,0.2-2,0.3c-2.6-1.7-6.3-1.7-8-4.9C1855.5,401.7,1858.9,402.9,1862,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1870.9,409.1c-0.7,0-1.3,0.1-2,0.1c-1.8-1.5-5.3-0.7-5.8-4.1C1865.8,406.4,1868.7,407,1870.9,409.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1881.1,415.9c0.6-0.6,1.3-1.2,1.9-1.9c1.9,0.6,3,1.4,0.9,3.2C1883,416.8,1882,416.3,1881.1,415.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#97887B",
                d:
                  "M1880.2,413c-1.6,0.8-2.9,0.1-4.2-0.8c-0.6-0.4-0.6-0.8,0-1.2C1877.6,411.3,1879,411.9,1880.2,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1876,411c0,0.4,0,0.8,0,1.2c-0.3,0-0.6-0.1-0.9-0.1c-0.9-1.1-3.1-0.9-3-3      C1873.4,409.8,1874.7,410.4,1876,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4748",
                d:
                  "M1998,443.9c0-1.9-0.2-2.9-2.7-2.8c-1.6,0.1-4,1.3-5.3-1.2c3.7-1.6,7-5.3,11.6-2c0.3,0.2,0.5,0,0.5-0.2      c-0.4,0.5-0.3,0.4-0.5,0c-1.6-2.8,0.8-2.7,2.2-2.8c3.3-0.4,6.3-0.8,8.4-3.9c0.8-1.2,3-1.1,4.6-1.5c1.6-0.1,2.5,1,3.4,2.1      c0.2,0.5,0.1,0.9-0.2,1.3c-6.6,1.8-11.2,7.1-17.5,9.4C2001,442.9,1999.8,444.2,1998,443.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C5759",
                d:
                  "M2020.1,432.1c-1.6,0.1-2.1-1.4-3.1-2.2c-3-3.2-4.8-6.6-1.9-10.9c0.4-0.6,0.9-1.1,1.6-1.4      c0.5-0.1,0.9-0.1,1.3,0.3c2,3.8,4,7.6,3.9,12.1C2021.2,430.5,2021.8,432.4,2020.1,432.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4647",
                d:
                  "M2018.1,417.9c-0.3,0-0.7,0-1,0c-1.4,0.1-2.6-0.6-3.8-1.1c-1.8-0.9-4.1-0.7-5.4-2.6      c-0.6-2.1-1.8-3.8-3.1-5.5c-1.1-1.4-2.5-2.7-1.7-4.8v0C2009.2,407.4,2014.5,411.7,2018.1,417.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M2020.1,432.1c0.6-0.7,1.3-1.4,1.9-2.1c-0.3,1.9,2.2,2.8,1.8,5.2c-1.8,0.1-2.4-1.9-3.8-2.3      C2020,432.7,2020.1,432.4,2020.1,432.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383232",
                d:
                  "M562.9,653.1c1.1-4.1,3.5-4,7.4-3.5c6.7,0.9,13.6,0.6,20.4,0.3c21-0.7,41.3,1.5,59.8,12.7      c5.8,3.5,12.3,5.6,18.5,8.3c-3.2,0.2,0.4,1.8-0.6,2.9c-0.4,0.5,1,0.6,1.6,0c0.8-0.9,2.1-1.1,2.7-0.4c4.1,5.1,10.1,2.5,15.2,4.1      c-6.1,0.4-12.3,0.4-18.2,2.3c1.4,4.7,4.4,7.1,9.8,6.1c2.4-0.4,5-0.1,7.5-0.1c-1.6,1.7-3.8,1-5.7,0.9c-17.4-0.6-34.7,1.8-52.1,1      c0,0.4,0,0.8,0,1.2c11.7,0,23.4,0,35.2,0c-11.1,1.4-22.2,0.8-33.2,0.6c-15.9-0.3-31.8,1.1-47.7,1.2c-3.5,0-7-0.1-10.4,0      c-2.1,0-3.5-0.8-4.2-2.8c-0.3-3.9-4.1-7.5-2.6-11.3c1.4-3.8-3.1-6.1-1.3-8.8c-0.3,1.4,1,3.7-1.1,5.4c-2-3.8-0.5-7.8-0.7-11.8      C563,658.7,563,655.9,562.9,653.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1313.1,235.9c-1.9-1.1-7.9-5.3-10.1-6.9c-0.5-3.7-4.1-4.2-6.3-5.4c-5.6-2.9-11-6-16.5-9      c-0.7-0.4-1.6-0.3-2.4-0.5c-3.3-1.4-6-3.7-8.8-5.9c-0.4-0.9,0.1-1.4,0.9-1.7c2.7-0.3,4.8,1.3,6.9,2.5      c15.2,8.4,30.2,17.4,45.7,25.3c1.8,0.9,3.4,2.1,3.7,4.3c-1.2,1.7-3.6,2.9-5.1,1.8C1319.2,239.8,1314.9,236.9,1313.1,235.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1207,176.4c-1.6-0.8-17.8-8.8-19.9-9.8c-1.3-0.6,11.5,4.3,11.7,2.4c2.6-1.8,5.2-1.4,7.9-0.3      c6.2,2.5,10.9,7.6,17.5,9.2c1.4,0.4,1.9,2.3,3.2,3c2.7,1.5,10,4.8,5.2,8.7C1231.1,188.8,1208.8,177.4,1207,176.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1228.8,187.5c1.1,0,4.1-0.5,5.2-0.5c1.3-1.1,2.5-0.4,3.7,0.2c6.2,3.3,12.5,6.5,18.7,9.8      c3,2.3,6.6,3.6,9.8,5.5c1.7,1,4.1,1.6,3.8,4.4c-0.4,0.4,2.5,3.3,2.1,3.8C1259.4,204.4,1241.6,194.6,1228.8,187.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8D8C86",
                d:
                  "M1469,274c3.1,0,7.6,0.3,8.2-2.6c0.6-2.9-3.1-5.8-5.7-7.9c-2.3-1.9-4.9-3.3-5.6-6.5      c2.3,0.3,4,1.9,6.3,2.4c1.6,0.4,3.7,1.7,2.9,4.4c-0.3,1.1,0.2,2.4,1.2,2.3c4.1-0.6,3.7,2.8,4.7,4.9c-1.3,2.2,3.3,6.1-2.1,6.9      c-4.7-0.7-9.6-0.8-14-2.9C1466.1,273.7,1467.5,273.8,1469,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#565452",
                d:
                  "M1484,270c-0.7-0.3-1.3-0.6-2-1c2.5-3.2,6.1-4.3,9.9-5.1c2,0.7,4.1-0.8,6.1,0.3c0.7,0.4,1.3,1,0.9,1.9      C1494.1,267.7,1489.2,269.5,1484,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403C39",
                d:
                  "M1505,259.9c0.3,0.1,0.7,0.1,1,0.2c-2.4,4.3-5.9,5.2-10.3,3.6c-0.4-0.2-0.7-0.5-0.9-1      c-0.7-1.1-2.7-0.6-3.2-2.8C1496.1,259.9,1500.5,259.9,1505,259.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403C39",
                d:
                  "M1498,265c-2-0.3-4.3,0.8-6.1-1c0.9-0.4,1.9-0.8,2.8-1.2c0,0,0.3,0.3,0.3,0.3      C1495.7,264.3,1498.3,262.4,1498,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635E5A",
                d:
                  "M1197.8,130.1c-0.6,1.2-1.8,0.8-2.8,1c-2.9,1.2-5.1,0-7-2.1c0.5-0.9,1.3-1,2.2-1.1      C1192.7,128.6,1195.3,129.4,1197.8,130.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#25191B",
                d:
                  "M1175.8,308.1l-0.4,0.1l-0.4-0.1c-3.1-1.5-6.7,0.5-9.8-1.4c-2.2-1.4-4.7-1.2-7.2-1.2      c-8.7-0.3-17.5,0.8-26.2-0.6c-0.6-0.3-0.9-0.7-1.1-1.3c0.2-1,1.1-1.3,1.9-1.6c0.8-0.2,1.7-0.3,2.6-0.3c1.6,0,3.3,0,4.9-0.1      c6.7-0.4,13.5,0.9,20.1-0.8c1.7-1.9,3.8-2.3,6.2-1.5c2,0.7,4.1,1.1,6.2,1.1c2.8-0.5,5.6-0.4,8.4-0.2c10.3,1,20.7,0,31-0.6      c0.8,0,1.6,0.1,2.3,0.2c7.7,0.9,15.4,1.6,23.1,2.4c-4.5-1.6-9.3-0.3-13.8-1.7c-0.6-0.2-1.3-0.1-2-0.3c-1.6-0.4-3.8-0.7-3.6-2.7      c0.2-2.1,2.4-1.8,4-1.9c1.8-0.1,3.6,0,5.5-0.1c0.8-0.1,1.6,0,2.4,0c3,0,5.9,0.4,8.7,1.3c1.8,0.9,4,0.6,5.8,1.4      c1.2,2.3,3.9,1,5.6,2.3c1.1,1,1.1,2.5,2,3.6c8.4,0.7,33.6,0.3,37.5,0.3c1.2,3-1.5,3.4-2.9,3.4c-5.2-0.1-10.4,1.4-15.6,1.1      c-0.7,0,0.1-0.3-0.5,0c-0.7,0.4,0.4,0.6,0.4,1c0,0.3,0,0.6-0.1,1c-2.6,0.1-5.2,0.1-7.7,0.2c-2.8,0.7-5.9-0.1-8.5,1.7      c-0.8,0-1.5-0.2-2.3-0.4c-4.3-0.1-8.6,0.5-11.8-0.9c1.6,0,2.2,1.1,0.5,3.1c-1.5,1.8-3.7,2.1-5.8,2.6c-6.6,1.8-13.5,1.8-20.1,3.1      c-3.4,0.7-5.5,2-4.2,6c0.7,2.3,0.6,4.9,0.9,7.4c0.5,4.1,1.9,7.9,4.1,11.3c-6.1,0-9.6-3.4-10.3-9.7c-0.1-0.8-0.5-1.5-0.8-2.3      c-1.2-5.3,0.2-10.7-0.8-16c-0.2-1.4-0.9-2.5-2.2-3.1c-4.9-1.1-9.7-3-14.9-1.9c-1.7,0.3-2.8,0.1-1-1.7c-1.3-0.8-2.5-1.6-4.2-1.1      l-0.5,0l-0.4-0.2C1179.4,307.9,1177.5,309,1175.8,308.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#373332",
                d:
                  "M1241,342c-7.5,2.1-15.1,3.7-23,3c-5.6-3.7-6-9.9-6.9-15.6c-1.4-9-1-8.8,8.3-10c7.5-1,15.2-1.2,22.1-4.7      c1.7-0.8,3.8-0.7,4.4,1c2,5.5,6.6,9.1,9.6,13.8c2,3.3,1.6,5.5-1.5,7.5v0c-1.7,1.6-3.8,2.5-6,3l0,0      C1245.5,340.2,1241.9,336.2,1241,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2A29",
                d:
                  "M1254,337c2.4-2.8,2-5.3-0.4-8.1c-2.5-2.9-4.4-6.2-7.6-8.3c-0.4-0.2-0.8-0.8-0.7-1.1      c1.5-7.2-3.1-3.8-5.7-3.2c-4.8,1.2-9.3,3.3-14.6,2.9c-2.9-0.2-5.9,1.3-9.2,1.3c-2.7,0-5.2,1.6-4.1,6.1      c1.5,6.4,3.1,12.7,6.5,18.4c-0.7,0-1.3,0-2,0c-6.5-3-4.1-9.7-6-14.6c-0.2-0.4-0.1-1,0-1.5c0.7-2.7-2.8-5.9,0-8      c3-2.3,7-2.9,10.9-2.9c5.6,0.1,10.8-1.6,16.1-2.6c1.7-0.3,3.7-0.6,4.2-3.2c-1.8-0.1-3.5-0.3-5.2-0.4c0-0.3,0-0.5,0.1-0.8      c5.6,0,11.2,0,16.8,0c-0.8,1,0,2.2-0.2,3.3c-0.1,1.8-1.3,1.8-2.6,1.7c2.3,2.2,3.2,5.3,5.5,7.4c2,1.8,4.5,3.3,4.3,6.6      C1258.1,332.4,1258.8,337.1,1254,337z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1260,330c-2.8-4.4-7.4-7.4-9.9-12.2c-0.6-1.2-2.9-1.7-1.5-3.5c1.6-2,1.7,1.6,2.9,1      c0.3-0.2,0.4-0.8,0.6-1.3c1.3-0.6,1.9,0.7,2.7,1.2c1,0.8,2.3,1.1,3.3,1.8c2.8,1.8,3.9,4.8,5.8,7.2c0,1.8,0,3.7,0,5.5      c0,4.9-6.2,11.2-7.1,12.2C1256.7,340.9,1261.2,330.7,1260,330z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2A29",
                d:
                  "M1241,342c-2.1-1.6-1-3.8,0.4-4c2.2-0.4,5.4-1.7,6.6,2C1245.9,341.4,1243.5,341.8,1241,342z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1204.2,317c1.9,5.2,0.4,10.7,0.8,16c-0.3,0-0.6,0-0.9,0.1C1204.1,327.7,1204.2,322.3,1204.2,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2A29",
                d:
                  "M1248,340c1.7-1.5,3.4-3.2,6-3C1253.5,340.9,1251.5,341.9,1248,340z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1818",
                d:
                  "M1958.1,611c-0.6-6.7,5.3-9.7,8.1-14.5c1-1.7,2.6-3,3.9-4.4c1.7-1.1,3.7-1.7,4.8,0.1      c1,1.6-0.8,3-1.8,4.2c-0.9,1.1-2.7,1.5-2.2,3.4c-0.1,0.9-0.5,1.8-1,2.5c-0.6,0.9-1.3,1.8-2.1,2.7c-0.9,1.3-1.2,2.4,0.9,2.8      c1.8,0.3,3.6,0.7,5.3,1.3c0.7,0.4,1.4,0.7,1.2,1.8c-4.5,2.9-9.3,1.6-14.1,1.2C1960,611.7,1959,611.3,1958.1,611z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332C2C",
                d:
                  "M1961,612c4.8-0.1,9.4-0.6,14-2c2.3-1.9,4.5-1.1,7-0.2c3.9,1.5,8,1.3,12,2.2c0.3,0,0.7,0,1,0      c-0.3,2.8-3,0.6-4,2c-9.1-0.3-18.3,0.8-27.3-1C1962.7,612.8,1961.7,612.9,1961,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1937,615c6,0,12,0,18,0c2.2,1.3,5,1.2,7,3C1953.6,617.6,1944.9,619.8,1937,615z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#342F2E",
                d:
                  "M1994,612c-6.5,0.5-12.6-2.1-19-2c-0.7,0-1.3,0-2,0c-0.3-0.6-0.2-1.1,0.4-1.5c3.3-1.1,6.5-1.6,9.5,0.6      c1.5,1.5,3.4,0.7,5.1,0.9C1989.5,612.1,1992.5,609.9,1994,612z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D1D1B",
                d:
                  "M1983,618c-5.7,1.6-11.3,1.6-17,0C1971.7,618,1977.3,618,1983,618z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#342F2E",
                d:
                  "M1991,614c0.9-1.6,3.1-0.4,4-2c1.4,0.2,2,1,0.4,1.6C1994.1,614.1,1992.5,613.9,1991,614z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D1D1B",
                d:
                  "M1997,617c-2.1,1.8-4.7,0.6-7,0.9C1992.1,616.2,1994.6,617.3,1997,617z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B9BBB7",
                d:
                  "M1444,275c-4.6,1.6-9.4-0.2-14,0.5c0,0.6-0.3,0.8-0.8,0.8c-2.7-2.4-6.6-3.2-8.4-6.6      c0.1-0.5,0.4-0.9,0.8-1.2c2.6-1.2,5.6-0.4,8.2-1.3c2.9-0.6,5.8-1.3,8.8-1.8c0.7-0.2,1.5-0.2,2.2-0.2c0.5,0.1,0.9,0.2,1.4,0.4      c0.7,0.5,1.2,1.1,1.4,1.9c6.3-2.5,6,2.5,7,6.1c-0.2,0.5-0.5,0.8-1,0.9C1447.7,274.8,1445.7,273.9,1444,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3F2F2B",
                d:
                  "M1429.4,275.9c0.2-0.1,0.4-0.2,0.6-0.4c1.6,1.9,8.3,2,9.4,6.4c-1.8,0.1-8.6-0.1-10.3,0      c-7.1-1.4-14.9-1.5-19.9-0.9c-2.3-1.4-5-1.2-7.1-2.8c0,0-3.4,0.6-11-2.3c-5.4-2.1-2.9-2.4-2.9-2.4c0.7-3,19.1,0.1,21,0.4      c5.7,1.1,11.4,0.7,17.2,0.7C1427.5,274.4,1428.4,275.3,1429.4,275.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#989891",
                d:
                  "M1469,274c-1.1,1.4-2.6,0.8-4,1c-2,0-4,0-6,0c-0.3-0.6-0.2-1,0.3-1.5c0.7-0.5,1.5-0.7,2.4-0.8      C1464.2,272.8,1466.8,272,1469,274L1469,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A6A7A0",
                d:
                  "M1459,274c0,0.3,0,0.6,0,1c-3,0-6,0-9,0c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3v0      C1453,272,1456,271.9,1459,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B2B4AD",
                d:
                  "M1450,274c0,0.3,0,0.7,0,1c-2,0-4,0-6,0C1445.7,273.2,1448,274.3,1450,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1460.8,280.9c-1.9,0-3.8,0-5.7,0C1457,279.4,1458.9,279.5,1460.8,280.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2927",
                d:
                  "M1498,265c-1-0.6-2-1.3-2.9-1.9c4.1,0.9,7.8-0.1,10.9-2.9c2.8,0.6,4.8,2.3,5.9,4.9      c-0.6,0.3-1.2,0.6-1.8,1c-1.9,1.2-3.7,2.6-6,2.9c-2.4,0-4.8,0-7.2,0c-0.5-1.8,1.6-1.8,2.1-3C1498.7,265.7,1498.3,265.3,1498,265      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#746F6E",
                d:
                  "M1499,266c1.2,2.3-1.9,1.6-2.1,3c-2.4-0.2-4.5,0.6-6.5,1.8c-2.5,1.6-4.6,1.3-6.5-0.8      C1488.7,267.6,1493.6,265.7,1499,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2927",
                d:
                  "M1513.8,273.9c-1.4,0-2.8,0.3-3.9-0.8c1.7-0.1,3.6,0,2.4-2.8c-0.5-1.2,0.3-2.2,0.7-3.3      C1516.9,268.9,1513.7,271.6,1513.8,273.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#626260",
                d:
                  "M1504.1,268.9c2.2-0.7,3.2-3.5,6-2.9C1508.9,268.6,1506.7,269.2,1504.1,268.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5756",
                d:
                  "M442.1,220.2c4.1,3,9.9,3.8,10.7,4.8c10.8,11.9,21.7,23.5,35.5,32c10.2,5.7,21.5,7.8,32.8,9.4      c15.7,2.3,31.6,4,47.4,5.3c0.9-0.1,1.7,0,2.6,0.1c0.9,0,1.8,0.2,2.6,0.4c13.3,1.3,26.7,2.2,40,3.4c5.9,0.5,11.8,1.3,17.8,1.3      c3.6,1.2,7.4,0.6,11.1,0.8c1.1,0,2.3,0.1,3.4,0.4c2.7,0.9,5.4,0.6,8.1,0.6c2-0.1,3.9,0,5.9,0.4c2.8,0.9,5.6,0.6,8.5,0.5      c7.3,1.1,14.8,0.7,22.1,1.9c1.6,0.3,35.8,1.7,37,3c-2.8,2.9,2.6,3.5-0.6,3.6c-12.2-0.4-187.2-11.7-200-14.9      c-26.1-3.3-51-14.6-66.2-28.5c-4.8-4.4-9.7-8.5-14.6-12.8c-1.1-1.3-6-6.3-7.1-7.6C439.7,219.7,441.1,222.6,442.1,220.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5756",
                d:
                  "M703.4,285.1c2.8-0.5,5.9,0.8,8.6-0.9c0.3-0.4,0.8-0.6,1.3-0.6c1.9,0.2,3.9,0.2,5.8,0.2      c1.8,0.1,3.6-0.1,5.3,0.6c0.5,0.3,0.8,0.7,0.9,1.2c-0.2,0.6-0.5,0.9-1.1,0.9c-1.9-0.1-3.8,0.3-5.6-0.4      C713.5,286.1,708.4,286.4,703.4,285.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#363836",
                d:
                  "M751,292c0-0.3,0-0.7,0-1c4.9,0,9.9,0,14.8,0c0,0.3,0,0.7,0,1C760.9,292,755.9,292,751,292z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M749,291c-4.7-0.5-9.5,1.1-14-1C739.7,290.5,744.5,288.9,749,291z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d: "M735,290c-3.3-0.5-6.8,1-10-1C728.3,289.5,731.8,288,735,290z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d: "M717,289c-3.3,0-6.7,0-10,0C710.3,287.5,713.7,287.4,717,289z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M693,288c2.5-2,5.2-0.4,7.9,0C698.3,288,695.6,288,693,288L693,288z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#363836",
                d:
                  "M754,289.2c1-0.1,2-0.2,3-0.3c1.5,0.1,3.1,0.2,4.6,0.3c0.4,0,0.6,0.3,0.6,0.7      C759.5,289.8,756.6,290.8,754,289.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D6CCD0",
                d:
                  "M718.5,286.1c2.2,0,4.3-0.1,6.5-0.1c0.7-0.6,1.3-0.5,2,0c0,0.3,0,0.6,0,0.8      C724.1,287,721.3,287,718.5,286.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M728,287.2c2.1,0,4.3,0,6.4,0c0.4,0.1,0.7,0.3,0.9,0.7C732.9,287.8,730.3,288.7,728,287.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DBD5D6",
                d:
                  "M735.3,287.8c-0.3-0.2-0.6-0.5-0.9-0.7c2.5,0.1,5.1-0.9,7.5,0.7C739.8,287.8,737.5,287.8,735.3,287.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E0DCDC",
                d:
                  "M762.3,289.9c-0.2-0.2-0.4-0.5-0.6-0.7c2.2-0.2,4.4-0.9,6.4,0.6C766.1,289.8,764.2,289.8,762.3,289.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M770.1,290.3c1.9-0.1,3.8-0.4,5.5,0.6C773.7,290.8,771.8,291.6,770.1,290.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M743,288.2c1.9-0.1,3.7-0.2,5.5,0.7C746.7,288.8,744.7,289.6,743,288.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#251414",
                d:
                  "M2015,657c1.9-2.5,3.5-5.7,7.5-2.6c0.1,0.1,3.5-2,5.6-2.9c3.1-1.3,5.5-2.2,9-1c2.7,0.9,6.6-0.5,8.5-2.9      c5.2-6.4,12.7-6.9,19.1-5.8c4.3,0.7,9.2-0.2,13.3,2.2c-0.4,0.4-0.8,0.7-1.1,1.1c-0.7,1.8-2.3,2.4-4,2.9c-1.7,0.7-3.5,0.3-5.2,1      c-4.3-0.2-8.2,2.5-12.6,1.1c-13,2.3-26,4.6-39,7C2015.7,657.3,2015.3,657.3,2015,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B211F",
                d:
                  "M2015,657c0.3,0,0.7,0,1,0c0.7,0.7,1.3,1.3,2,2c-5.3,1-10.7,2-16,3c-1.5,1.2-3.5-0.2-5.1,1l-0.5,0      l-0.5,0c-2.3,0.7-4.6,2.1-7,0C1997.7,661.2,2005.7,656.4,2015,657z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544542",
                d:
                  "M2055.1,650.1c4.3-0.7,8.7-1.3,13-2c0.3,0.3,0.9,0.4,1,1C2064.4,649.8,2059.9,651.9,2055.1,650.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A7F7D",
                d:
                  "M2073.1,647.2c1.6-0.1,1.9-2.5,3.7-2.1c0.6,0.6,1.3,1.1,1.9,1.7c-1.4,1.1-3,1.3-4.7,1.3      C2073,648.5,2072.9,648,2073.1,647.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M2073.1,647.2c0.3,0.3,0.6,0.6,0.9,0.9c-1.4,1.4-3.3,0.7-5,1c-0.3-0.3-0.6-0.7-1-1      C2069.8,647.8,2071.4,647.5,2073.1,647.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#58504D",
                d:
                  "M1997,666c0,0.3,0,0.6,0,0.9c-11.7,1-23.1,4.2-34.6,6.4c-1.8,0.4-3.6,0.6-5.4,0.6      c-1.5-1.7-1.3-2.2,2.1-4.7c0.5-0.2,1.1-0.3,1.6-0.3c9.9-3,20.3-3.5,30.4-5.4c0.9-0.2,2-0.2,2.8,0.5      C1994.1,666.1,1995.6,666,1997,666z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524B49",
                d:
                  "M1994,664c-11.5,1.2-22.8,3.2-34,6c-0.6-1.1,0.5-1.4,1-2c2.4-1.9,5.7,0.1,8-2l0,0c2.2-1.3,4.8,0.3,7-1      c4.4-0.4,8.7-0.7,13-2c2.3,0,4.7,0,7,0C1995.6,663.8,1994.8,664,1994,664z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#58504D",
                d:
                  "M1996.9,662.9c1.5-1.5,3.3-0.8,5.1-1C2000.6,663.7,1998.7,662.8,1996.9,662.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8F8481",
                d:
                  "M1527,269.9c0.3-1-3.4-2.1,0.1-3c3.8,1.5,8.5,1.1,11.5,5.6C1534.1,273.1,1530.2,273.3,1527,269.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403C39",
                d:
                  "M1516.9,266.9c-3.9,0.3-2.7-4.2-6.7-5.4c3.4-0.7,5.2-0.8,6.8,0.4c-1.4,1.4-0.4,1.9,0.9,2      c1.4,0.2,2.9-0.3,4.1,0.9c-1.6,0.5-3.7-0.7-5,1.1c0.2,0.2,0.3,0.4,0.2,0.6C1517.1,266.8,1517,266.9,1516.9,266.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4F4B",
                d:
                  "M718.5,286.1c3.3-1.8-0.2-1.9,3.1-1.7c15,0.7,123.3,7.8,138.9,8.5c1.6,2.5-0.4,4.7-3.1,5      C843.6,297.4,722.8,290.1,718.5,286.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M892,301.1c-3.6,0-7.3,0-10.9-0.1c-6-0.7-12.6-1.4-16.4-2.2c1.8-1.8-1.3-2.7,0.3-4.6      c0.8-1.1,8.5,0.7,9.7,0.6c8.1,1.3,61.9,3.2,70.1,4.7c1.5,0-1.3,0.7-3,1.3C938.5,301.7,895.4,300.6,892,301.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544748",
                d:
                  "M875,294.9c-3.7,0-7.4,0-11.1-0.1c0-0.3-0.1-0.6-0.1-0.9c0,0,0.1-0.1,0.1-0.1c2.4-0.7,4.7-1.6,7.2-1.2      C872.8,292.9,874.7,292.7,875,294.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M792.8,100.9c0.7,0.3,1.4,0.7,2.1,1c-1.5,0.1-2.9,0.2-4.4,0.3c-1.8,0.7-3.8,0-5.5,0.7      c-1.2,0.1-2.3,0.3-3.5,0.4c-7.3-0.1-14.6-0.2-21.9-0.4c3.2-1.3,6.5-1.4,9.9-1c4.1-1.1,8.4,0.5,12.5-0.9l-0.1-0.1      C785.5,100.4,789.2,100.3,792.8,100.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M785,102.8c1.7-1.5,3.7-0.7,5.5-0.7C788.8,103,786.9,103,785,102.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#463738",
                d:
                  "M921.2,300.9c2.2,0.1,4.5,0.2,6.7,0.2c-0.3,0.3-0.7,0.6-1,0.9c-3,0-5.9,0-8.9,0c0-0.2,0-0.4,0-0.6      C919.1,301.2,920.2,301,921.2,300.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#443F3F",
                d:
                  "M2016,419c-2.7,3.9,0.1,7.4,1.1,10.9c-4.7,3-8.8,7.5-15.2,6.1c-0.2,2,1.5,1.6,2.2,2.8      c-5-2.5-9.4,0.7-14.1,1.1c0.3-1,0.6-2,1-3c0.5-0.9,1.3-1.4,2.1-1.8c6-1.8,10.6-5.1,12.8-11.1c0.8-1.5-1.6-1.8-1.1-3.2      c1.8-1.4,1.2-3.3,1.1-5.1c0.4-0.3,0.8-0.5,1.2-0.6c1.7,0.1,3.2,0.9,4.8,1.1C2013.3,417.2,2015.4,417.1,2016,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#373131",
                d:
                  "M1993,436c-0.5,0.8-1.2,0.9-2,1c-6.8,0.1-13.5-0.7-19.9-3c1.6-1.5,3.2-0.5,4.7-0.2      c-1-1.6-4.9,0.7-4.6-3.1c1.4-1,2.9-1,4.5-1c3.5,0.5,6.9,0.6,10.3-0.5c1.7-0.3,3.2,0.1,4.6,1.1c1.2,0.8,2.7,1.7,2.4,3.4      c-0.3,1.5-2,1.3-4.4,2C1991,435.1,1992.1,434.9,1993,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#221F1D",
                d:
                  "M1971,431c1.7,0.8,3.3,1.6,6,3c-2.7,0-4.3,0-6,0c-4-1-8.1-2-12.1-3c-0.8-0.9-0.8-1.8-0.3-2.8      c0.6-0.9,1.5-1.4,2.5-1.6C1964.4,428,1968.3,428.3,1971,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C8BFBF",
                d:
                  "M1958.9,428.1c0,1,0,1.9,0.1,2.9c-1.3,1-2.6,2.1-3.9,3.1c-0.3-0.1-0.7-0.1-1-0.2      c-0.7-0.7-0.8-1.6-0.5-2.6c0.3-0.6,0.8-1,1.4-1.3c0.9-0.5,1.6-1.2,2.4-1.9c0.3-0.3,0.7-0.4,1.2-0.4      C1958.6,427.8,1958.7,428,1958.9,428.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#373131",
                d:
                  "M1907,684c2.5-2.6,7,1,9-3c0.8-1.1,2-1.4,3.2-1.8c0.7-0.2,1.4-0.3,2.2-0.4c2-0.1,4,0,5.9-0.7      c3.2-0.7,6.6,0,9.8-0.7c0.5-0.2,0.9-0.3,1.4-0.4c2.4-0.4,4.8,0,7.2-0.8c1.1-0.3,2.3-0.7,3.4-0.9c0.7-0.1,1.4,0.1,2,0.6      c0.3,0.3,0.7,0.7,1,1c-3.7,2.7-8.2,2.9-12.3,2.8c-6-0.3-11.1,3.9-17.1,2.3c-1,4-4.2,1.5-6.2,1.8      C1913.3,684.3,1910.1,684,1907,684z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5551",
                d:
                  "M138,645.9c-6.8,0.2-12.9-2.3-19-4.8c-6.8-4.5-13.4-9.2-18.9-15.1c2,0.7,4,1.3,6,2      c6,3,12.5,5.2,16.8,10.8c2,2.7,6.3,2.1,8.3,5C133.5,644.3,135.9,644.6,138,645.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4743",
                d:
                  "M131.1,643.8c-5-1.8-9.9-3-13-8.4c-0.9-1.6-5.1-2.6-7.7-4.3c-1.5-1-3.1-1.8-4.4-3.1c1,0,2,0,3,0      c3.7,1.3,7.3,2.7,11,4c3.5,3.6,6.7,7.6,11.7,9.4C135.6,642.9,130.6,642.8,131.1,643.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#43403E",
                d:
                  "M108,597c2.2,0.5,3.3,2,4.4,3.9c2,3.3,1.3,4.5-2.4,4.1c-0.7-0.3-1.3-0.7-2-1c-1-1-2-2-3-3      C106.6,600.1,107.9,599,108,597z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5551",
                d:
                  "M100,626c-0.7,0-1.3,0-2,0c-1.2-0.8-2.4-1.6-3-3C97.1,623.2,98.5,624.6,100,626z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#756B67",
                d:
                  "M1786.9,365.9c0.4-0.6,0.7-1.3,1.1-1.9l0,0c2.6-1,5.4-1.2,8-2c3.4,0.4,6.7-0.4,9.8-1.3      c7.7-2.2,15.4-1.6,23.2-1.5c-0.2,1.8-1.3,1.3-2.4,1.1c2.1,0.4,4.3-0.8,6.4,0.3c2.7,0.4,5.4,1,8.2,1c2.9-0.2,5.6,1,8.5,1      c4.5,0.4,8.9,1.3,13.4,1.7c0.5,0,1,0,1.5,0.2c1.9,0.9,4,0.2,5.9,0.9c1.4,1.1,4.5,1,3,4.2c-2.4,1.1-5,0.5-7.5,0.8      c-10.2-0.6-20.4-2.5-30.6-3.1c-2.7-0.4-5.4-1.2-8.2-1c-3.7,0.3-6-2.1-8.4-4.3c-1.2-0.8-2.3-0.1-3.3,0.4c-4.8,1.4-10,1-14.8,2.6      C1796.1,364.7,1791.7,367.5,1786.9,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A18D86",
                d:
                  "M1833.1,361.1c-2.3,0-4.6,0-8.3,0c2.2-1,3.2-1.4,4.2-1.9c3.9,1,7.8,0.8,11.8,0.9c0.4,0.6,0.3,1-0.3,1.4      C1838,362.3,1835.6,361.4,1833.1,361.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1856,361c0,0.6-0.1,1.3-0.1,1.9c-1.9,1.4-3.8,0-5.7,0c-0.8,0-1.5-0.2-2.1-0.7c-0.3-0.5-0.3-0.9-0.1-1.4      c0.7-0.4,1.4-0.4,2.2,0C1852,360.9,1854,361,1856,361z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1796,362c-2.5,1.3-5.2,2-8,2C1790.4,362,1793.2,361.9,1796,362z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1848.2,361.1c-0.1,0.3-0.1,0.5-0.1,0.8c-1,1.4-2.4,0.5-3.7,0.6c-1.2-0.5-2.7-0.3-3.5-1.6      c0-0.2,0-0.5,0-0.7c1.4,0,2.8,0,4.2,0C1845.9,360.9,1847.4,360,1848.2,361.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1848.2,361.1c-1.1-0.2-2.3,0.1-3.1-1c1.7,0,3.5-0.6,5,0.8C1849.4,361,1848.8,361,1848.2,361.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CAC2BF",
                d:
                  "M2099.8,636.2c-2.6,3.7-3.9,3.7-6.2,0.2c-0.4-0.6-1.2-0.9-1.8-1.4c-0.3-0.3-0.6-0.6-0.9-0.9      c-0.5-1.8-0.5-3.1,2-2.1c0.7,0.3,1.4,0.6,2.1,1C2097.2,633.3,2099.2,633.6,2099.8,636.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A9A0A0",
                d:
                  "M2092.9,632.1c-1.4,0-1.9,0.8-2,2.1c-1.3-1.6-4.8-2.7-3.5-4.6c1.6-2.3,3.4,1.7,5.5,1.5      C2092.9,631.4,2092.9,631.8,2092.9,632.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M865,683.9c6.8-1.9,13.7-0.5,20.6-0.8C878.8,684.6,871.9,684.1,865,683.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#342F2E",
                d:
                  "M1967,604c0.7-0.7,1.3-1.3,2-2c7.6,0.3,14.8-1.1,21.9-3.7c1-0.4,2.4,0.5,3.4,0.3c2.3-0.6,4.8,0.7,5.8-4      c1.1-5.6,4.6-10.9,7.6-16c3.4-5.6,11.2-3.9,14.3,2.5c0.7,1.4,0.4,3.3,2.5,4.9c0.2-5.5,3.2-9.5,5.1-14.1c0.6-1.6,0.8-3.7,3.2-3.9      c0.1,0.4,0.2,0.8,0.4,1.3c-1.1,3.2-2.2,6.4-3.3,9.6c-3.5,8.2-7,16.4-10.6,24.6c-0.8,2-1.6,4-3.2,5.6c-2.2,1.7-4,1.5-6.6,0.1      c-5.1-2.7-11.1-2.5-16.7-3.1c-3.9-0.4-7.9-0.1-11.8-0.1c-4.7,1.8-9.3,0.4-13.9-0.6C1966.6,605,1966.6,604.5,1967,604z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#645F5E",
                d:
                  "M1967,605.1c4.7-0.5,9.3,0.8,14,0.9c4.3,2.4,9.6-0.4,14.5,3.1c-4.7,0-8.6,0-12.6,0      c-3.3,0-6.6-0.1-9.9-0.1c-1.5,0-2.9-0.5-4.4-0.5C1966.2,608.3,1965.9,606.9,1967,605.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#363030",
                d:
                  "M563.8,673.3c0-3.1,0-6.2,0-9.6c4.6,2.3-1.2,10.5,8.4,9.9c-5.9,2.1-6.3,4.5-3.8,8.2c1,1.5,2,4.1,0.4,6.3      c-0.6-0.4-1.2-0.8-1.8-1.1C566.2,682.4,562.3,678.5,563.8,673.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#564242",
                d:
                  "M1017,306.2c3.9-0.1,7.7-0.3,11.5,0.8C1024.7,306.7,1020.8,307.9,1017,306.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1001,305.2c2.9,0,5.8-0.4,8.5,0.8C1006.7,305.7,1003.7,306.9,1001,305.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M985,304.2c2.9,0,5.8-0.4,8.6,0.7C990.7,304.7,987.7,305.8,985,304.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M792.8,100.9c-3.7,0-13,0.8-16.7,0.8c0.1-0.2-4.9-0.1,6-1.5c1.6-0.1,3.2-0.1,4.8-0.2      c2.1,0.1,4.2,0.2,6.3,0.3C793.1,100.4,792.9,100.6,792.8,100.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1890.9,367.2c1,0,2,0,2.9,0c4.8,2.6,10.3,1,15.3,2.6c-0.2,0.2-0.3,0.4-0.5,0.7      c-2.2,1.3-4.8,0.6-7.1,1.6c-4.6,0.1-9.5,1.3-13-3C1888.6,367.4,1890.1,367.7,1890.9,367.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1928,373.1c0.6,1.3,1.2,2.7,1.8,4c-2.2,1.1-4.1,0.3-5.9-1.1c-0.1-1.2-1.7-1.4-2-2.6      c1-1.6,2.7-0.3,3.9-1.1C1926.8,372.1,1927.6,372.2,1928,373.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1925.9,372.3c-1.2,0.7-3.1,0.7-2.1,2.9c-1.8,1.2-3.4,1.2-4.9-0.4c0.2-0.3,0.3-1.3,0.1-1.2      c-1.1,0.2-1.9-0.1-2.4-1.2c0-0.5,0.1-1,0.4-1.4C1919.7,373.1,1923,371.3,1925.9,372.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1917,371c0,0.3,0,0.7,0,1c-3.1,1.3-6,1.2-8.1-1.8c0.1-0.1,0.2-0.3,0.3-0.4      C1911.8,369.7,1914.6,369.5,1917,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A7E7A",
                d:
                  "M1866,369.1c2.7,0,5.3,0,8-0.1c2.3-2.1,5.7-0.9,8-2.9c1.4,0,2.9-0.5,4,0.9c0.3,1.3,1.8,0.1,2.2,1.1      c-0.4,1.5-0.8,2.9-2.3,3.8c-2.4,0.7-4.8,0.5-7.3,0.1c-2.6-0.9-5.3-0.4-7.9-0.6C1869,371.2,1866.6,371.8,1866,369.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1882,366.1c-1.5,4.2-5.1,2.6-8,2.9c-1.3-1-2.7-2-4-3.1c-0.6-0.5-1.4-0.7-1.1-1.7      C1873.2,364.8,1877.6,365.4,1882,366.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1849.9,362.1c2,0.3,4,0.6,5.9,0.8c0.7-0.3,1.5-0.6,2.2-0.9c1.5,2,4.9,0.4,5.9,3.1      c-4.8,0.8-9.3-1.3-14-1.2C1849.4,363.4,1849.4,362.8,1849.9,362.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1864,365.2c-1.5-2-5.2,0.3-5.9-3.1c2.4,0.3,4.8,0.6,7,1.9c-0.2,0.4-0.5,0.7-1,0.9L1864,365.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1864.1,364.8c0.3-0.3,0.6-0.6,1-0.8c1.3,0.1,2.5,0.2,3.8,0.3c0.4,0.6,0.8,1.2,1.1,1.7      C1868,365.7,1865.8,366.5,1864.1,364.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1887.9,368.2c-1-0.2-2-0.4-3-0.7c0.4-0.2,0.7-0.4,1.1-0.6c1.6,0.1,3.3,0.1,4.9,0.2      c-0.7,0.3-1.3,0.7-2,1C1888.6,368.5,1888.3,368.5,1887.9,368.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524B49",
                d:
                  "M1951,676c-0.7,0-1.3,0-2,0c-0.1,0.1-0.3,0.2-0.4,0.2c-1.5,0.1-3.7,1.2-4.3-0.6      c-0.6-1.8,1.8-2.4,3.2-3.1c3.6-2,7.3-3.5,11.6-2.5c-0.1,1.6-3,1.8-2,4C1955.4,675.8,1952.7,674.4,1951,676z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6B635E",
                d:
                  "M2099.8,636.2c-1.6-1.1-3.2-2.1-4.9-3.2c4.4-2.8,5.7,1.5,8,3.6C2101.8,637.4,2100.9,636.2,2099.8,636.2z      "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#827B75",
                d:
                  "M2098.5,629.8c-0.4,0.2-0.8,0.7-1.4,0.8c-0.9,0.1-1-0.6-0.9-1.3c0.1-0.8,0.6-1.1,1.3-1.1      C2098.4,628.2,2098.6,628.7,2098.5,629.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#453F39",
                d:
                  "M1427,275c-5.3,1.9-10.7,1.1-16,0.4c-2.4-0.3-4.8-1.2-7,0.5c-7.4,0.1-14.4-1.6-21-4.7      c-1.8-1.4-4.2-1.7-6.1-2.8c-1.2-0.8-2.8-1.3-2.1-3.3c2-1.3,3.8,0.2,5.7,0.5c2.8,0.8,5.7-0.1,8.6,0.2c0.7,0,1.5,0.2,2.2,0.4      c4,1.4,7.9,2.7,11.9,3.9c7.1,0,13.6,4.4,20.9,2.8C1425.5,272.6,1426.4,273.8,1427,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1375,265c1.6,3.4,12.1,6.3,14,9.4c-5.7-0.3-19.6-6.8-21.6-7.7c-2.8-1.8-5.7-4.5-8.5-6.3      c-0.5-1.1-2-1.8-1.1-3.3C1364.6,257.3,1370,260.8,1375,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#453F39",
                d:
                  "M1404.7,276.1c1.8,0,3.7-0.8,5.3,0.8c-1.6,0-3.2,0-4.9,0C1405,276.7,1404.8,276.4,1404.7,276.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1200.8,173.3c-1.5-0.8-14.3-7.1-17.1-8.3c-1.3-0.6-25.8-11.2-31.1-13.5c-0.5-0.7,14.8,4.3,15.2,3.5      c1-0.9,2.1-1.1,3.2-0.6c8.4,3.8,17.1,7.1,25.6,10.6c1.4,0.6,3.6,1.5,2.4,4c2.2,3.2,7.1,2.4,8.9,6.2      C1205.7,174.4,1203,174.1,1200.8,173.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1163.8,155.2c-1.6-0.1-3.2-0.4-4-2c0.1-0.1,0.2-0.3,0.3-0.4c1.8-1.1,3.4-1.2,4.4,1.1      C1164.5,154.5,1164.2,154.9,1163.8,155.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1167.9,155c0,0.7,0,1.4,0,2.2c-1.5-0.5-3-0.7-4.1-1.9c0.1-0.1,0.2-0.3,0.4-0.4      C1165.5,153.9,1166.7,153.9,1167.9,155z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#73716D",
                d:
                  "M1516.9,266.9c0.1-0.3,0.1-0.6,0.1-0.9c1.4,0.4,2.7,0.8,4.6,1.4C1519.5,268.2,1518.1,268.3,1516.9,266.9      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1B1516",
                d:
                  "M2003,404c0.8,3.7,5.7,5.4,5,9.9c-0.2,0.1-0.3,0.3-0.5,0.4c-0.2,0-0.4,0-0.6,0.1      c-1.9-0.3-3.7-1.1-5.7-0.5c-2,0.1-3.7-0.5-5.4-1.4c-4-3.6-9.5-3.1-14-5.4c-2.4-1.3-4.6-3.2-7.7-2.8c-1,0-2-0.1-3-0.3      c-0.5-0.1-1-0.3-1.5-0.6c-1.1-1.1-2.8-2-1.2-4c1.8-1,3.7-0.7,5.7-0.4c3.4,1,6.9,0.4,10.3,0.6c1,0,2,0.1,3,0.4      c1.6,0.5,3,1.3,5.5,1.3c-2.1-0.9-2.9-2-3.7-3.4c-0.6-2-2.7-3.6-1.2-6c0.2-2.1,1.7-2.2,3.2-1.7c1,0.3,1.9,0.5,2.1,2.2      C1994.3,398,1996.9,402.6,2003,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#423E3E",
                d:
                  "M1974,400.2c-2-0.1-4-0.1-6-0.2c-0.7,0.8-0.9,1.9-1.6,2.6c-1.9,1.4-3.3-0.5-4.9-0.8      c-0.9-0.4-1.7-0.8-2.5-1.3c-5.4-4.3-12-3.1-18.1-4c-4.2-4.5-4.5-6.5-1-9.4c0.6,0.7,1.3,1.3,1.9,2c2.2,3.2,5.6,3.9,9.1,3.9      c4.2,0,8.2,0.8,12.1,2.1c5.7,1.9,11.5,3,17.5,2.7c3.6-0.1,6-0.5,4-4.9c-0.3-0.6,0-1.3,0.5-1.8c1.5-1.3,1.9,1,3,1      c0.7,2,1.4,4,2.1,6c0.7,2,0.2,3.2-2.1,3c-1,0-2,0-3-0.1C1981.4,399.7,1977.6,401.1,1974,400.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1985,391c2.5,8.1,2.5,8.1-6.8,8c-5.3,0-10.5-0.9-15.4-2.9c1.6-1.9,3.9-1.6,5.9-1.2      c3.6,0.7,7.1,0.4,10.6-0.1c1.1,0,1.4-0.3,0.6-1.3c-1.3-1.5-3.5-2.7-2.8-5.3c0.9,0.1,1.9,0.2,2.8,0.3      C1981.5,389.3,1983.3,390.2,1985,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M2034,535c-0.2,4.1,1.6,8,1,12c-3.6,1.1-3.6-1.9-4.1-3.9c-0.7-2.8-0.9-5.8-2.8-8.2      c-1.1-1.6-2.3-3.1-1.2-5.1c2.5-1.3,4.2-0.3,5.2,2.1C2032.7,533,2033.3,534,2034,535z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M2032,532c-1.5-1-3-2.3-5-1.9c-3,0.7-5.8,0.5-8-2.1c0.3-2.2,1.8-3.1,3.5-2c2.1,1.3,4.2,0.6,6.2,0.7      C2034.6,526.8,2034.7,526.6,2032,532z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M2019,527.9c2.7,0.7,5.3,1.4,8,2.1c0.2,1.6,0.7,2.9,2,3.9c0.7,1.2,0.9,2.4-0.5,3.3      c-1.1,0.3-1.8-0.3-2.3-1.2c-0.4-1.3-1.4-2-2.7-2.3c-0.4-0.2-0.8-0.4-1.1-0.6c-1.5-1.3-3.3-0.6-4.9-0.7c-0.5-0.2-0.8-0.5-0.9-0.9      c0-0.2,0-0.3,0-0.5c-0.5-1.1,3.5-1.5,0.5-3C2017.7,528,2018.3,528,2019,527.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M2005.2,525.1c1.5-0.1,3-0.2,4.4-0.3c1.5,0.9,3.4,1.3,4.4,3.1c-0.7,1-1.7,1.1-2.7,0.9      c-0.5-0.2-0.9-0.4-1.2-0.9c-1.1-1.1-2.4-1-3.8-0.9C2005.9,526.4,2005.6,525.7,2005.2,525.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M2017,528c3.9,1.1-0.4,2.6,0.2,3.9c-0.1,0.7-0.6,1.2-1.2,1.4c-1.5,0-2.3-1.1-3.2-2.1      c-0.1-0.4-0.1-0.8,0-1.3c0.8-0.6,1.9-0.7,2.2-1.8C2015.7,528,2016.3,528,2017,528z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ADA29E",
                d:
                  "M2015.1,528.1c1,2.5-1,1.8-2.2,1.9c-0.3,0.3-0.7,0.4-1.1,0.2c-0.7-0.5-1.2-1.2-0.8-2.1      c1-0.1,2-0.1,3.1-0.2C2014.4,527.9,2014.7,528,2015.1,528.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1327.9,307c-0.6,0.1-1.2,0.1-1.8,0.2c-4.4,1.2-9.7,1.4-14.1,1.2c-5.3,2.6-12,2.1-17.8,1.8      c0,0,0.7-1.2,0.7-1.2c1.4-4,5-2.4,7.7-3.1c2.8-0.5,5.7,0.4,8.3-1.2c1-0.2,2.1-0.4,3,0.3c4.3,2.6,8.7-0.2,13,0      C1327.3,305.7,1327.6,306.4,1327.9,307z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544A4A",
                d:
                  "M2043,553.8c-3.3,0.1-6.6,0.2-9.9,0.3c-3.1,2.1-6.6,1.2-10,1c-3.7-1.1-7.4-2.2-11.3-3.1      c2.8-3.5,7.1-3.8,13.2-1C2031.2,550.9,2036.9,553.5,2043,553.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4443",
                d:
                  "M2025,551c-4.1,0.7-8.2-1.9-12.6,0.3c3.3,1.2,6.8,0.5,9.5,2.7c-1.3,1.5-3.1,1.3-4.8,1.2      c-0.9-0.1-1.7-0.5-2.2-1.2c-0.5-0.3-1.1-0.7-1.6-0.9c-1.5-0.3-3.6,0.6-4.4-1.1c-0.9-1.8,1.8-2.4,2.2-3.9      c0.2-0.2,0.4-0.4,0.6-0.6c1.5-0.8,3.1-0.6,4.8-0.3c3.1,0.9,6.4,0.3,9.6,0.5c1.1,0.1,2.2,0.3,3,1.2      C2028.2,550.7,2025.8,549.3,2025,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#91817E",
                d:
                  "M2028.9,548.9c-0.9,0-1.8,0-2.8,0c-0.7-0.5-1.8-0.2-2.4-1c-0.1-0.5,0-0.9,0.3-1.3      c0.4-0.3,0.8-0.5,1.2-0.6c1.4-0.3,3.2-0.4,2.4-2.7c-0.1-0.4-0.2-0.9-0.2-1.3c0.2-1.7-0.9-3.5,0.5-5c1.3-0.7,1.1-1.9,1.1-3.1      c2.2,2.3,2.7,5.1,3,8.1c0.2,2.1,0.2,4.4,3,4.9c0,0.3,0,0.7,0,1C2033,548.5,2030.8,547.4,2028.9,548.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1358,257c0.3,1.1,6.8,7.1,7.1,8.2c-2.2-1.1-18.2-9.6-19.3-10.3c-8-4.6-21.9-12.8-24-14c0-0.4,0-1.6,0-2      c1.4-0.2,2.9,0.4,4.1-0.9c0.2-0.1,0.4-0.2,0.6-0.3c0.7,0.1,1.4,0.3,2,0.7c5.1,3.5,11.2,5.5,15.8,9.9c1.6,1.8,3.7,3,6,3.8      c0.4,0.2,0.8,0.4,1.1,0.6c1.7,1.3,3.4,2.6,5.5,3.3C1357.4,256.4,1357.7,256.6,1358,257z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1947,384c-4.3-0.7-6.1-4.5-8.9-7.1c6.8,2.5,14.4,2.5,20.9,6.1c-0.6,3.2-3,2.1-4.9,2      c-1.3-0.3-1.3-4.6-3.7-1.1c-0.3,0.4-0.6,0.6-1,0.8C1948.5,384.8,1947.7,384.6,1947,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D9D6CC",
                d:
                  "M1953,384c2-0.2,4.3,0.9,6-1c0.7,0,1.3,0,2-0.1c0.7,0.4,1.3,0.8,2,1.1c-4.3,3.3-9.6,3.4-12.9,0.2      l-0.1-0.3C1951,383,1952,383.2,1953,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484543",
                d:
                  "M1258,317c-1.4-0.1-3,0.4-4.1-0.9c0.5-1.4-1.4-2.7,0.1-4.1c3-0.9,17.9-1.7,21.1-0.9      c0,1.5-11.8,0.9-14.4,1.1C1258.9,312.8,1257.3,314.1,1258,317z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M1829,386c-1.3-0.3-2.7-0.6-4.4-1c1.2,2.1,3.7,1.9,4.5,3.9c-4.3,0.9-7.6-1.7-10.7-3.7      c-1.9-1.2-3.5-1.1-5.3-1.2c-0.9-0.3-1.4-0.9-1.6-1.8c-0.4-0.9-2.2-0.9-1.7-2.4c0.3-0.7,0.7-1.2,1.3-1.7      c3.7-2.7,7.4,0.2,11.1,0.1c2.6,0.4,5,1.4,7.6,1.8c1.3,0.2,2.8,0.7,3.1,2c0.5,1.7-1.4,1.9-2.3,2.7      C1830.1,385.2,1829.5,385.6,1829,386z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#453F39",
                d:
                  "M1410.8,277.1c2.4,0.1,5-1,7.2,1C1415.5,278.3,1413.1,278,1410.8,277.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#887C7B",
                d:
                  "M1786.9,365.9c4.6-1.1,9.2-2.4,14.1-1.9c0.1,0.2,0.1,0.4,0.2,0.7c-0.6,1.1-1.6,0.7-2.3,0.8      c0.8,0.7,3.3-1.2,3.2,1.7c-1.2,0.8-2.5,0.2-3.7,0.2c1.4,0.4,4.2-0.1,2,2.9c-0.4,0.3-0.8,0.5-1.2,0.6c-1.6,0.3-3,0.8-4.4,1.6      c-2.8-0.3-5.4-1.1-6.9-3.8c-0.5-0.4-1.2-0.7-1.6-1.1c-0.6-0.6-2.3-0.4-1.6-1.8C1784.8,365.6,1786.1,365.9,1786.9,365.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1787.9,368.7c2.2,1.7,4.5,2.9,7.3,3.3c0.2,0.3,0.4,0.6,0.4,1c-0.1,0.4-0.2,0.7-0.5,0.9      c-1.2,0.4-2-0.5-3.1-0.8c-1.6-0.9-3.3-1.6-4.8-2.6C1785.8,369.5,1786.8,369,1787.9,368.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1810.9,379.1c-0.3,0.3-0.6,0.6-0.9,0.9c-0.5,0.6-1.2,0.6-1.8,0.8c-1.1-0.6-2.2-1.1-3.2-1.7      c-0.2-1-1.8-1.1-1.4-2.4c0.1-0.4,0.4-0.8,0.8-1C1807,375.9,1809.3,376.9,1810.9,379.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1804,377.1c-0.2,0.9,2.4,0.5,1,2c-2-0.8-4.2-1.4-5.8-3C1801.2,374.3,1802.6,375.6,1804,377.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C7D7F",
                d:
                  "M1795,373.9c0-0.5,0.1-0.9,0.1-1.4c1.2-1.4,2.6-0.8,3.9-0.1c0.6,0.4,1.1,0.9,1.3,1.7      c-0.1,0.7-0.3,1.4-1.3,0.9C1797.2,376.5,1796.6,373.4,1795,373.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A8383",
                d:
                  "M1799,375c0.3-0.3,0.6-0.6,1-1c2-0.6,3.3,0.2,4,2.1c0,0.3,0,0.7,0,1c-1.6-0.3-3.2-0.7-4.8-1      C1799.1,375.8,1799.1,375.4,1799,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1808.2,380.8c0.4-0.8,1.1-0.8,1.8-0.8c0.6,0.7,1.3,1.4,1.9,2c-0.3,0.1-0.6,0.1-1,0.2      C1810,381.7,1809.1,381.3,1808.2,380.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BAAFAD",
                d:
                  "M2011,548.1c-0.9-0.1-1.9-0.1-2.8-0.2c-3.2,0.1-6-2.7-9.3-1.1c-3.1-1-3.9-2.7-0.7-4.3      c1.5-0.8,1-2.9,2.8-2.9c3.4-0.4,6.6,1.4,10.4,0.9c-1.7-0.1-3.7,0.9-4.2-0.9c-0.4-1.5,1.6-1.7,2.8-2.1c2.7,0.2,5.4-0.2,8.1-0.3      c1.3-0.1,0.6-0.9,1-1.3c2.3-1.5,4.6-1.4,7.1,0.3c-0.8,2.1-3.2,1.9-4.2,3.3c-2.1,0.9-4.4,1.6-6.2,3.1c-3,0-5.9,0.7-8.9,0.1      c3.9,0.8,8-0.7,11.9,0.9c0.4,0.4,0.5,0.8,0.4,1.3c-0.4,0.6-1,0.9-1.7,1.1c-1.9,0.4-3.9-0.2-5.6,1c-0.3,0.3-0.7,0.5-1,0.7      L2011,548.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CDC7C6",
                d:
                  "M2000.9,540c-1.4,0.5,0.4,2.7-2.1,3.2c-3.7,0.8-0.8,2.4,0.1,3.6c-1.9,0.6-3.7,1.8-5.9,1.1      c-0.7-0.5-1.5-0.6-2.3-0.7c-5.2-0.9-5.2-0.9-3.6-6.1c1-1.2,1.4-2.6,1.7-4.1c0.3-0.4,0.7-0.6,1.1-0.8c1.2-0.3,2.3-0.2,3.3,0.5      c1.6,1.9,2.7,5.2,6,1.9C2000.1,538.6,2001.2,538.4,2000.9,540z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D7D2CF",
                d:
                  "M1988,541c-1.1,2.7-2.3,5.4,2.5,5.4c0.8,0,1.6,1,2.4,1.5c-4.3,0.5-8.6,0.4-12.9,0      c-0.7-1.6-0.2-3.3-0.1-4.9c0-0.7,0-1.4,0-2c0.6,0,1.2-0.1,1.8-0.1C1983.9,541.3,1986,540.1,1988,541z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M1980,543c1.2,1.6,1.1,3.2,0.1,4.9c-0.4,0-0.7-0.1-1.1-0.1C1976.3,545.6,1979.1,544.5,1980,543z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4443",
                d:
                  "M2005.1,548.1c-1.9,1.5-4.1,0.6-6.1,0.9C2000.8,547.2,2003,548.2,2005.1,548.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E2E1DE",
                d:
                  "M1950.1,384.2c4.3,1.7,8.6,0.9,12.9-0.2c2.3,0.7,4.7,1.4,7,2.1c0.5,2.3,2.6,2.6,4.2,3.6      c2.8,1.5,6.2,2.4,6.8,6.3c-6.1,2.1-12.2-0.4-18.2,0.2c-5.1-1.2-10.2-2.5-15.5-2.9c-2.6-0.2-4.7-1.4-5.4-4.2      c4.4,3,9.2,3.5,14.5,2.1c-3.9-1.5-9.2-1.2-9.4-7.2C1948,384,1949,384.1,1950.1,384.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D9D6CC",
                d:
                  "M1981,396c-1.7-2.7-4.3-3.9-7.1-5.1c-2-0.8-5-1.3-4-4.8c2,0.6,4.1,1.2,6.1,1.8c0.3,0.1,0.6,0.2,1,0.3      c0.9,2.2,2.8,3.5,4.3,5.2C1982,394.1,1983.6,395.4,1981,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M782,101c-4,2.2-8.3,0.6-12.5,0.9C773.6,100.8,777.8,101,782,101z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1971.1,551c-1.5,3.5-3.8,6.1-7.3,7.8C1965.8,555.8,1967.7,552.7,1971.1,551z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2827",
                d:
                  "M2032.8,568.1c-3.3,6.5-6.3,13.1-8,20.4c-2.7-1.2-2.8-3.5-3.4-5.7c-1.1-3.9-3.9-6.6-7.8-6.4      c-3.6,0.2-5.8,2.7-6.8,6.8c-0.8,3.4-3.2,6.4-4.9,9.6c-0.5,1-1.3,2-1.4,3.1c-0.2,1.6,3.3,1.2,2.2,3.1c-1.3,2.4-2.8-0.3-4.2-0.3      c-1.5,0-1.3,2.8-3.6,1.8c-3.2-1.5-6-1-9.4,0.9c-3.7,2.1-8.5,3.2-13,0.9c-0.9-0.5-2.3-0.1-3.5-0.2c0.3-0.7,0.7-1.3,1-2      c2.9-2.9,4.8-6.3,9.3-8c2.9-1.1,4.5-5.7,7.6-7.9c5.5-3.9,9.3-10.2,15.6-12.4c9.1-3.3,17.7-8.2,27.5-9.5c0.6-0.1,0.5-0.7,0.6-1.2      c-8-0.1-15.7,2-23.6,2.9c-1.6,0.2-3.3,0.6-4.9,0.7c-2.1,0-3.2-0.8-2.1-3.1c5.2-4.4,11.8-3.9,17.9-4.6c7.2-0.8,14.4-1.1,21.7-0.9      c1.2,0,2.3,0.1,3.2,1c0.1,0.4,0.2,0.8,0.3,1.2c-0.5,0.9-1.1,1.5-2.1,1.7C2036.6,560.9,2034.7,564.5,2032.8,568.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4444",
                d:
                  "M2042.8,557c-12.1,0.5-24.3,0.5-36.2,2.9c-2.2,0.5-4.4,1.4-6.6,2.1c-1.2,1.8-2.7,3.3-4.5,4.5      c-1.1,0.7-2.1,1.5-3.4,1.8c-0.5,0.1-0.8-0.1-1.2-0.4c-0.8-0.4-1-1.2-1-2c1.2-2.3,4.4-2.8,5.4-5.3c0.3-0.6,0.6-1.1,1.1-1.5      c1.3-0.8,1.7-2.3,2.4-3.5c0.9-0.6,1.9-1.2,3-0.6c1.7,0,3.3,0,5,0c6.7,0.6,13.4-0.5,20.1-0.5c1.9,0,4-0.5,5.8,0.4      c2.4,0,4.9,0,7.3,0C2041.7,555,2043,555.1,2042.8,557z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#655D5D",
                d:
                  "M2033,555c-7.1,0.3-14.2,0.7-21.3,1c-1.6,0.1-3.4,0.6-4.7-0.9c1,0,2,0,2.9,0c2.2-1.2,4.8,0.4,7-1      c1.7,0,3.3,0,5,0c3.7,0,7.4,0.1,11.1,0.1C2033,554.4,2033,554.7,2033,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M2011,528.1c0.3,0.6,0.7,1.2,1,1.8c-0.2,1.4-1.1,2.3-2.3,2.8c-1.7,0.6-3.4,0.5-5.1,0.6      c-2.4,0.4-4.8,0.6-6.9-1c-0.6-0.4-1.1-0.8-1.6-1.4c0,0,0,0,0,0c1-1.4,2-2.9,3-4.3c1.2,2.2,2.9,2.8,5.3,2.2      c1.9-0.5,3.8-0.7,5.8-1C2010.4,527.9,2010.7,528,2011,528.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M1993,537c-1.3,0-2.7,0-4,0c0.1-4.1,3.1-3.9,5.9-4c0,0.3,0,0.6,0,1c0.3,0.8,0.7,0.4,1.1,0.1l0,0      c0.5-0.6,1.1-0.8,1.8-0.7c0.7,0.1,1.2,0.5,1.5,1.2c-0.4,1.9,1.9,0.3,2,1.5c0.1,0.5,0.1,0.9-0.1,1.3c-0.7,0.8-1.6,1.1-2.6,1      C1996.6,538.3,1994.6,538.5,1993,537z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M1994.9,533c-2.2,1-4.9,1.2-5.9,4l0,0c-1,0.8-2,0.9-3,0c0.7-1,1.4-2,2.1-3      C1990.4,534.1,1992.1,530.1,1994.9,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B5A49B",
                d:
                  "M1997.9,533.9c-0.6,0.1-1.3,0.1-1.9,0.2c0-1,0-2.1,0-3.1c0.6,0,1.3,0.1,1.9,0.1      C1998.7,532,1998.9,533,1997.9,533.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B5A49B",
                d:
                  "M1996,534c-0.1,0.9-0.3,1.7-1.3,1.8c-0.3,0-0.7-0.4-1.1-0.6c0.4-0.5,0.8-0.9,1.3-1.4      C1995.3,534,1995.7,534,1996,534z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M1985.9,537c1,0,2,0,3,0c1.1,1.7,1.2,3.1-1,4c-2.1,0.7-4.2,3.3-6.2-0.1      C1983.2,539.6,1984.6,538.3,1985.9,537z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0D",
                d:
                  "M1468,569c1.8,1.7,0.7,4,1,6C1467.2,573.2,1468.3,571,1468,569z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0D",
                d:
                  "M1465.7,601c0.5,0.8,0.8,1.2,0.9,1.6c0,0.3-0.3,0.7-0.5,1.1c-0.3-0.3-0.8-0.5-0.9-0.8      C1465.1,602.5,1465.4,602,1465.7,601z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3635",
                d:
                  "M1919,680c-0.7,1.2-1.9,1-3,1c-2,0-4,0-6,0c-2-0.7-2.3-4.4-0.1-5.6c2-1,4-2.4,6.9-1.8      c4.5,0.9,9-0.5,13.2-2.6c4.4-1.1,9.1-0.7,13.3-2.6c2.6-1.2,5,1.2,7.7,0.6c0.2,2-1.4,2.1-2.6,2.4c-4.7,1.1-8.9,3.5-13.6,4.4      C1929.2,676.1,1924.2,678.4,1919,680z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1928.9,665.1c-2.9,2-4.3-0.4-5.9-2.1C1924.9,663.7,1926.9,664.4,1928.9,665.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1956.9,665c-0.6,3.5-3.2,1.5-5.1,1.6c1.1-0.5,2.1-1,3.2-1.5C1955.7,665.1,1956.3,665,1956.9,665z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#322B2A",
                d:
                  "M1976,665c-2.1,1.8-4.7,0.7-7,1C1971.1,664.1,1973.7,665.3,1976,665z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#443F3C",
                d:
                  "M1935,675c2.8-2.2,6.4-2.5,9.5-3.9c2-0.9,4.5-0.6,6.5-2.1c3.4,0.6,6.6-1.1,10-1c-0.3,0.7-0.7,1.3-1,2      c-0.3,0-0.7,0-1,0c-5.1,0.8-9.7,2.6-14.5,5.8c1.8,0.1,3.1,0.2,4.5,0.3c-0.7,1.2-1.9,1-3,1c-2.5,1.3-5.5-0.4-8,1h0      c-0.5,0.5-1.2,0.5-1.8,0.5c-1.1-0.1-2.5,0.6-3.1-0.6C1932.4,676.3,1934.7,676.2,1935,675z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2828",
                d:
                  "M1198,212c0.3,0,0.6,0,1,0c8.1,4.8,16.7,8.5,24.8,13.1c7,4,14.2,7.7,21.2,11.8c1.6,1,3.5,1,5,2      c9.6,5.8,19.9,10.3,29,17c1.1,0.8,2.8,1.3,1.7,3.3c-2.8,1.4-4.8-0.5-6.7-1.9c-6.8-5.2-14.9-8.6-21.6-14      c-0.9-0.7-2.2-1.4-3.8-1.2c-0.4-0.1,0.4,0.8,0.2,0.1c-0.1-0.2,0.1-0.3,0.4-0.1c5.1,1.8,5.4,2.3,3,5.4c-0.9,0.5-1.7,0.8-2.8,0.7      c-0.8-0.4-1.1-1-0.9-2c0.1-0.4,1.2-0.6,0.5-0.8c-6-2.1-11-5.9-16.5-8.8c-7.5-5.2-15.6-9.3-23.6-13.6c-5.2-2.8-10.1-6.3-15.6-8.6      c-1.6-0.7-4.5-2-1.6-4.7C1194.2,210,1196.2,210.8,1198,212z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383435",
                d:
                  "M1198,212c-2.4,0.5-4.2-0.7-6.1-1.9c-0.5,0.5-1.1,0.6-1.8,0.5c-1.4-0.7-2.8-1.1-4.4-1.1      c-13.5-6.9-27.5-12.9-41.2-19.6c-7.2-3.5-14.8-5.7-22-9c-10.3-4-20.5-8.4-31-11.9c-2.1-0.7-5.1-0.8-5.6-4      c6.3-1.2,11.3,2.8,16.8,4.5c10.6,3.4,20.5,8.5,31.2,11.5c1.4,1.5,3.5,1.7,5,3c0.7,0,1.3,0,2,0c9.3,5.8,19.7,9.1,29.5,13.9      c8.5,4.2,17.3,7.9,25.9,11.8C1197.4,210.2,1197.9,210.9,1198,212z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393536",
                d:
                  "M1281,259c-0.7-1-1.3-2-2-3c5.3,1.5,9.7,4.7,14.3,7.5c12.7,7.7,25.1,15.7,37.7,23.5c1.3,2.5,4.6,2.6,6,5      c-3.2,1.9-5.9-0.2-8.1-1.8c-9.9-7.4-20.9-13.2-31-20.3c-2.8-2.4-5.9-4.3-9.3-5.9c-0.4-0.2-0.8-0.4-1.1-0.7      c-1.8-1.6-4.2-2.3-6.1-3.8C1281.2,259.4,1281.1,259.2,1281,259z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383435",
                d:
                  "M1250,239c-1.2-0.1-2.3,0.7-3.8-0.2c-14.7-8.6-29.4-17.2-44.9-24.3c-1-0.4-1.6-1.7-2.3-2.5      c8.2,2.5,15.3,7.3,22.9,11.2c9.2,4.6,18.2,9.7,27.2,14.6C1249.5,238,1249.7,238.6,1250,239z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#666261",
                d:
                  "M846.9,189c0.3,2.7,0.7,5.3,1,8c-6.5,0.5-7.3-0.1-7.7-5.4c-0.5,0.6,0,1.2-0.1,1.7      c-2.2,6.6-0.2,12.9,1.4,19.3c0.5,2-0.6,3.3-2.3,3.9c-2.8,1-3.7,2.6-3.4,5.7c0.3,3.1-6.6,8.2-9.3,7.1c-2.1-0.9-2.5-3.4-3.3-5.3      c-0.6-1.4-0.1-3-0.3-4.5c-0.3,1.2-0.1,2.9-1.9,2.9c-1.5,0-1.7-1.3-2.1-2.4c-1.7-4.9-2-10.1-3.6-15c-0.4-1.1-0.1-2.4,1.1-3.1      c7.8-4.2,8-4.6,8.6-13.6c-3.4,1.4-4.2,7-8.2,6.2c-2.2-0.4-5.7-0.8-6.7-4.2c-0.6-2.9-0.3-5.9-0.4-8.8c0-1.3,0.1-2.6,0.6-3.8      c1.8-1.8,4.3-0.9,5.5,0c3.1,2.7,4,0.5,5-1.7c1.1-2.5,2.6-3.4,5-1.6c0.4,0.3,0.8,0.6,1.3,0.6C839.5,175,843.4,177.7,846.9,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6B6868",
                d:
                  "M811.1,191c2.2-0.1,3.5,1.7,5.2,2.6c1.4,0.8,1.7-0.2,2.5-1.2c1.9-2.5,4.2-4.6,6.9-7.3      c2.5,8.5-2.7,14-6.5,20.1c-1.7,0.4-0.6-2.8-3.2-2.6c1.5,6.4,2.9,12.6,4.5,19.1c2.4-1.4,0.8-3.5,2-4.9c2,3.7,1.1,8.2,4.5,11.7      c1.1,0.1,1.4-2.3,3.7-2.1c2.1,0.1,5.4-1.7,3.7-5.7c-1.2-2.8,0.2-4.2,3.2-4.7c2.5-0.4,4.8-1.4,1.9-4.6c-0.6-0.6-2.3-2.2-0.2-4.1      c1.1-0.9-0.3-3.4-1.5-4.8c-1.6-1.8-2.5-2.8,0.2-5c2.3-1.9,1-5.5,0.2-8.4c1.5-0.4,3.1,0.4,3,1.1c-1.4,6,3.5,5.6,6.7,6.9      c0.6,3.3,1.4,6.5,1.1,9.9c0.3,0.4,0.6,1,0.3,1.3c-0.6,0.8-1.7,1-1.6,2.8c0.3,4,1.2,8.2-0.8,12.1c-0.6,3.6-2.7,6.7-3.9,10.1      c-1,2.9-4.5,4.3-6.6,6.5c-1.5,1.6-4.2,0.6-6.2,0.2c-2.9-0.5-5.8-1.3-8.8-1.1c-3.3,0.2-6.9-4.3-6.4-8.6c0.5-4.7-2.1-8.2-3-12.4      c-1.4-7.8-1-15.8-2.2-23.6C809.8,193,810,191.8,811.1,191z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5A5A",
                d:
                  "M829.6,174.7c-1.7,3.4-3,2.7-4.9,0c-0.9-1.3-2.5-0.5-2.6,1.3c-0.2,2.3-1.9,3.4-3.3,4.8      c-0.8,0.9-2.2,1.1-2.3-0.1c-0.4-3.7-3.7-2.3-5.5-3.6c-1.8-2.3-1.5-4.5,0.8-6c2.1-1.3,3.8-0.1,4.8,2c3.1-3.3,4.9-7.5,8-10.7      c1.9-1.9-0.1-3.6-0.5-5.4c-0.4-1.6-3.4-3.9,1-4.4c0.1,0,0.1-0.2,0-0.2c-2-0.5-1.3-4.5-3.3-3.6c-3.5,1.5-8.7-1.1-10.4,5.3      c-2.6-4.4-3.1-7.9-0.5-11.5c-0.7-0.1-1.5,0.1-2-0.6c-0.1-0.3-0.1-0.7,0-1c1.5-1.1,3.4,0.1,4.9-0.9c3,1.8,6-1,9-0.1      c3.6-1.2,7.4,0.3,11-0.9c4.6-0.8,7.6,0,7.9,5.6c1,14,2.9,28,5,41.8c0.1,0.8,0,1.7,0,2.5c-1.4-2-3.4-3.8-4.2-6      c-1.9-5.6-9.1-4.7-13.1-7.1"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#686463",
                d:
                  "M854,214c-2.2-9.5-3.1-19.2-4-28.9c-0.8-2.1-0.5-4.2-0.1-6.3c0.2-1.1,0.2-2.6,1.6-2.7      c1.4,0,1.5,1.5,1.8,2.5c0.5,2.3,4.7,4.8-0.6,6.9c-0.8,0.3-0.1,3.4-0.2,4.9c-1.5-4.6,3.1-7.4,4.6-11.4c0.7-2,4.7-2.6,6.9-0.1      c2.7,3,5,4.4,8.9,1.2c1.9-1.6,6.3-4.7,6.9,2.1c0.1,1.7,1.8,1,2.5,0c0.9-1.3,0.4-3.4,2.6-4.8c2.1,4.7,0.7,10.4,4.5,14.2      c1.1,3.4,2,6.9,1.6,10.5c-0.3,0.7-0.6,1.9-1.5,1.7c-8.8-2.7-15.9,2.4-23.5,5.3c-3.1,1.2-6.8,1.6-9,4.8      C856.5,214.8,855,215,854,214z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#666466",
                d:
                  "M806,143.8c0.3,0.1,0.7,0.2,1,0.2c1.1,4.5,3.1,9,2.1,13.8c-1.1,3.2-1.6,7.2-6.6,4.2      c-4.3-2.2-8.4-2.2-13.5-1.6c-6.9,0.8-13.3,5.3-20.6,3.5c-0.3-0.1-0.7,0-1,0.2c-8.2,6.3-18.2,4.5-27.5,6.2      c-2,0.4-3.9,0.7-5.7,1.5c-6.7,3.2-13.5,2.2-20.3,0.4c-0.8-1.8,0.5-2.7,1.7-3.7c6.1,0.1,10.2-4.9,15.9-6.1c2.7-0.6,5.2-1.8,8-1.3      c1.2,0.2,2.4,0.4,3.4-0.3c2.9-2,5.6-3.5,9-0.8c0.9,0.7,1.9-0.2,2.7-0.8c2.4-1.7,4.6-2.3,7.2,0c1.6,1.4,3,0.6,3.7-1.4      c1.2-3,1.3-7.5,6.8-4.4c1.1,0.6,3.3-2.4,5.7-2.3c0.5,0,0.9,0.1,1.4,0.3c1.6,0.3,3,2.7,4.7-0.4c1.1-1.9,3.7-1.6,5.7,0      c0.5,0.4-0.3,1.3,0.1,1c3.6-2.1,7.4-2.3,11.4-2.3c3.4,0,2.2-4,3.9-5.6C805.6,144,805.8,143.9,806,143.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#222023",
                d:
                  "M909.8,297.1c-9.5-0.4-18.9-0.9-28.4-1.3c-2.1-0.3-4.2-0.6-6.3-0.9c-3.5-1.9-7.3-0.6-11-1.1      c2.2-2.4,0.2-5.3,1-7.8c3.1,1.3,5.5,4,8.9,4.4c0.8-0.4,0.7-1.1,0.3-1.7c-1.7-3.1-3.7-6.3,2.2-7c0.3,0,0.7-0.2,0.8-0.5      c3.9-8.1,10.7-5.8,17-4.6c4,0.8,7.9,2.2,12.1,2.1c3.5,4.4,2.5,10.2,4.7,14.5c-0.1-0.8-0.1-2,1.4-2.7c4.3,0.6,8.5,1,12.8,1      c1.8,0,4.1-0.3,4.8,2.3c-2.2,2-4.9,1.1-7.4,1.4c-1.3,0-2.6-0.1-3.9-0.1c-0.5,0-0.9,0-1.4,0c-0.9,0-1.7,0-2.6,0.2      c-0.9,0.5-1.3,1.7-2.5,2C911.5,297.5,910.6,297.6,909.8,297.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#605C5D",
                d:
                  "M854,214c0.6-0.2,1.5-0.1,1.9-0.5c4.4-5,10.6-6.1,16.6-7.6c1.1-0.3,1.4-1.4,2.2-1.9      c1.4-0.8,2-4.9,4.6-1.2c2.2-4.5,5.1,1.7,7.2-0.4c1.7-1.6,2.4,0.6,3.6,0.5c1-0.1,1.5,0.5,1.9,1.2c1.5,5.6,2.8,11.2,3,17      c-0.3,3.6-2.8,0.8-4,1c-2.3,0.3-1-2.1-1.3-3.4c-2.1,0.8-1.6,2.6-1.9,4.1c-0.9,4.3-2.8,5.5-7,4.2c-2-0.6-3.9-1.6-6,0.1      c-1.4,1.1-3.2,0.1-3.9-1.1c-2-3.5-6.1-3.4-8.9-5.4c-0.4,0-0.9,0-1.3-0.1c-2.2-0.9-3.5,2.1-5.6,1.4      C854.2,219.4,853.8,216.7,854,214z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5D5959",
                d:
                  "M852,180c0-1,0-1.9,0-3.4c-2.5,2.8-1.8,5.8-2.1,8.5c-1.9-5.8-1.7-12-2.7-18c-1.2-7-1.5-14.1-2.3-21.1      c-1.4-9-1-9.4,7.9-9.4c1.8,0,3.7-0.1,5.4,0.3c0.9,0.5,2.8,1,1.3,2.3c-4.6,3.7-2.6,8.9-1.1,12c1.9,3.8,3.2,8.2,6,11.7      c1.4,1.7,2.8,3.3,4.7,4.3c3.4,1.8,6.7,0.2,7.2-3.6c0.2-1.5-0.8-3.8,1.7-3.8c2.7,0.1,2.2,2.6,2.3,4.3c0.3-1.3-0.9-3.6,2.1-3.3      c2.3,2.5,2.5,5.5,2.1,8.6c-0.6,1.2-1,2.4-1.1,3.8c-0.2,2-1.1,3.5-3.1,1.5c-1.4-1.5-2.1,0-2.9,0.3c-5.5,2.3-7.5,2.2-11.5-2.2      c-3.1-3.4-6.1-1-9.2-0.9c-3,0.1-1.6,2.8-2.4,4.2C853.8,177.3,854.7,179.8,852,180z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#28272A",
                d:
                  "M906,279c-3.1,1-5.7,0.9-8.9-0.6c-4.9-2.2-10.4-1.5-15.8-1.1c-1,0.1-1.6,0.8-1.7,1.6      c-0.5,3.1-1,4.9-5.3,4.6c-2.3-0.2,0.3,3.7,1,4.2c1.7,1.3,1.9,1.9,0.5,3.4c-1.4,1.6-2.4,1.7-4.1,0.2c-2.2-1.9-6-1.7-6.8-5.4      c0.9-4.3-2.9-7.7-2-12c2.9-3.6,7.3-3.5,11.3-4c3.1-0.4,6.2-1,9.3-0.8c0.8,0.1,2,0.2,2.3-0.4c2-4.1,6.3-3,9.3-4.4      c4.6-2.2,6.4-0.5,8.6,2.7C905.7,270.8,908.2,274.5,906,279z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5758",
                d:
                  "M861,220c1.4-0.1,3.3-2.6,4,0.8c0.1,0.5,0.8,0.9,1.2,1.4c5.1-5.8,2.8,2,4.6,2.5c1.4,0.4,3,4.2,4.4-0.2      c0.1-0.2,4,0.5,5.9,1.3c3.8,1.4,6.3,0,5.5-4.1c-0.7-3.5,1.3-3.8,3.4-4.7c1.6-0.7,2.1,0.6,1.6,1.2c-3,3.8,1.3,2.7,2.4,3.7      c3.7,1.7,2.8,5.2,3.2,8.3c-0.2,1.8-0.9,3.2-2.8,3.5c-1.6,0.3-2.7,1.3-3.6,2.5c-3.3,4-7.5,4.3-12.2,3.4c-4-0.8-7.8-2.1-11.8-3      c-2.3-0.5-3.2-2.8-4.8-4.1c-1.9-1.6-3.8-3.2-5.9-4.5c-1.3-1.8-1-3.9-1-6C857,221.4,857.7,216.9,861,220L861,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#110F10",
                d:
                  "M629,162c9.7,0.2,18.8-3.2,28.3-4.3c13.2-1.6,26.4-3.9,39.6-5.6c16.8-2.2,33.7-4.1,50.6-5.9      c7.8-0.9,15.6-1.4,23.5-2.1c3.2,1.8,7-1.1,10.2,1.1c-0.8,2.6-3,2.2-4.9,2.3c-34.4,2.6-68.6,6.8-102.8,11.8      c-22.9,3.1-45.7,7.2-68.4,11.5c-3.1,0.6-6.2,1.4-9.3,1.6c-1.8,0-3.7-0.2-5.5,0.6c-4,1.3-8,2.5-12.2,3c-0.8,0-1.6-0.3-2.2-0.8      c-1-2.2,0.6-2.9,2.1-3.6c1.6-0.7,3.4-1,4.9-2.2c0.5-0.2,1-0.4,1.5-0.5c3.2-0.1,6.3-0.7,9.5-1.2c4.1,0.2,7.9-0.6,11.5-2.6      c6.4-0.8,12.6-2.6,19-3.6C625.9,161.3,627.5,160.7,629,162z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2E2C2E",
                d:
                  "M860.9,293.1c-5.1-0.1-10.2,0.1-15.2-1c2.6-1.5,5.4,0,7.6-0.6c-4.4-0.1-9.5,0.4-14.4-2      c3.6-1.9,7.2-3.8,11.3-4.1c1.7-0.1,2.9-0.5,3.3-2.3c0.4-1.8-0.2-3.3-1.8-4.3c-5.7-3.4-11.1-7.9-18.5-4.9c-0.6,0.2-1.3,0-2,0      c-7-0.5-7-0.5-10.5,5c-2.1-0.3-2.2-2.7-3.7-3.6c-1-1.5-0.7-3.2-0.3-4.8c1.4-1.7,0.4-5.4,2.5-5.6c4.1-0.4,8.3-2.3,12.2-1.2      c3.6,1,7.2,0.7,10.7,1.2c13.8,2.1,17.9,6.7,17.9,17.7c0,1.3,0.8,2.6,0.2,4c0.7-1.2-0.4-2.7,0.7-3.7      C862,286.4,863.8,289.8,860.9,293.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#525052",
                d:
                  "M856,228c3.8-0.5,5.6,2.6,7.8,4.7c1.8,1.8,2.7,4.4,5.8,2.2c1.8,3,5.1,2,7.7,3c5.5,2,10.7,1.4,13.5-4.1      c1.4-2.8,5,0.6,5.2-2.9c3.7,2.2,2.8,5.9,2.9,9.2c-2.5,3.1-3.9,6.8-9.8,6c-3.2-0.5-7,0.5-10.5-0.6c-2-0.6-4-0.3-5.7,0.9      c-3.3,2.3-7.4,1.4-11.1,2.3c-3.1,0.8-3-3.4-3.8-5.8C857.4,238,855.5,233.2,856,228z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5F5C5C",
                d:
                  "M792,136c0.3,0,0.7,0,1,0c3.3-0.8,6.8,0.8,10-1c3,0,6,0,9,0c1.8-1.5,3.9-0.5,5.8-0.4      c3.4,0.1,6.8-0.5,10.2-0.6c4.3,0,8.6,0,13,0c-1.3,3.3-4.5,2.6-7,3c-2.6,0.4-5.3,0.1-7.9,0.1c-3.6,1.2-7.5-0.4-11.1,0.9      c-1.6-0.3-3.2,1.3-4.9,0.1c-10.3,1.4-20.8,1.6-31.1,2.9l0,0c-6.4,0.6-12.8,0.6-19.2,1.5c-1.6,0.2-3.3-0.5-4.8,0.6l-0.4,0.1      l-0.4,0c-5.5,0.2-11,1.4-16.5,1.4c-1.9,0.7-3.9,0.2-5.8,0.9c-4.3,0.5-8.6,0.9-12.8,1.6l0,0c-17.2,1.9-34.2,4.6-51.4,6.4      c-1.5,0.2-2.8,1.2-4.3,0.9c-1.8-2.3-0.2-2.8,1.7-2.8c1.8,0,3.6-0.1,5-1.5c0.3,0,0.7,0,1,0c3.6,0,7.3,0.1,10.8-1.3      c1.3-0.8,3,0.5,4.2-0.7c1,0,2,0,3,0c1.9-1.2,4.3,0.4,6.1-1.3c1.8-0.7,3.6-0.7,5.5-0.7c2,0.4,3.5-1,5.3-1.3      c11.4-0.3,22.6-2.5,33.9-3.4c1.2-0.1,2.3-0.2,3.3,0.6c0.3-0.3,0.7-0.6,1-1c10.2-2,20.5-2.9,30.9-3.5      C780.6,137.2,786.3,136.9,792,136z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5556",
                d:
                  "M809,142c1.6,0,3.3,0,4.9,0c-7.2,2-2.7,6.5-2.3,10.3c-0.8-4.3,1.6-4.8,4.6-3.9c1.6,0.5,2.7-0.1,4.1-0.8      c2.1-1,5.3-2.7,4.3,2.4c-0.2,1,0.3,1.6,1.2,1.8c1.1,0.2,3.2-1,2.4,1.6c-0.8,2.6-2-0.1-3-0.1c-0.5,0-0.9,0.1-1.8,0.1      c1,1.6,2.9,3.5,2.5,4.2c-1,2,6,6.3-1.7,6.1c-0.2,0-0.7,0.5-0.7,0.6c1,5.8-7.8,6.3-5.3,13.2c-3.2-2.2-1.7-6.6-5.4-5.8      c-3.2,0.6-1.4,3.5-1.8,5.4c0,1.3,0,2.7,0,4c-0.7,0-1.2-0.2-1.6-0.8c-1.6-5.9-0.6-11.8-0.7-17.8c0-4.4,0.8-8.9-0.5-13.3      c-0.2-0.8,0.2-1.6,0.8-2.3C809,145.3,809,143.6,809,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484648",
                d:
                  "M858,243c1.5,2.2,1.4,6,6.5,3.6c2.5-1.2,6.4,0.1,9.4-2.2c1.4-1.1,3.9-0.6,5.8,0c2.9,1,5.9,2.7,8.7-0.2      c0.1-0.1,0.4-0.2,0.5-0.1c4.4,2.9,6.3-1.5,9.2-3.1c0.2,0.2,0.3,0.3,0.5,0.5c0.8,2.5,1.3,5.1,1.1,7.8c-0.2,0.4-0.5,0.8-1,1      c-0.7,0-1.5-0.6-1.9-0.2c-6.2,4.1-13.2,2.9-20,2.9c-1.9,0-3.3,0.2-3.7,2.3c-0.3,1.6-1.4,2.4-2.9,1.9c-3.3-1.1-6.8,0.3-10.1-1.1      C859.6,251.6,857.8,247.5,858,243z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#353336",
                d:
                  "M861,283c0,1.6,0,3.3,0,4.9c-1.4-3.2-1.8-6.5-2.2-9.8c-0.7-6.2-5.5-9-10.9-10.7      c-1.6-0.5-4.4-3.9-4.7,2.1c-1.4-2.1-1.2-4.4-4.1-3.4c-4.7,1.6-9.4-3-14.2-0.4c-1.9,1.1-3.6,1-5.2-0.2c-1.6,1.8,0.7,5-2.8,5.5      c-0.8-0.7-0.9-1.7-0.8-2.7c2.2-8.3,6.8-11.2,15.2-9.5c4.6,0.9,9.3-0.2,13.9,0.4c5.1,0.7,10,1.8,12.7,6.9      C859.5,271.6,860.6,277.2,861,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C595A",
                d:
                  "M670,150c-0.3,2.4-2.2,1.9-3.7,2c-1.5,0.1-3-0.1-3.3,2c-1.1,1.2-2.9-0.2-4,1.1l0,0      c-1.9,1.2-4.2-0.4-6.1,1c-6,1.3-12,2.6-18,3.9c-1.8,1.3-4.2-0.2-6.1,1l0,0c-12.4,2.2-24.6,5.5-37.2,7c-0.8,0-1.6,0-2.4-0.2      c-1-0.3-1.8-0.7-1.7-2c0.2-1,1.1-0.9,1.8-1.2c2.4-1,5.1-0.6,7.5-1.5l0,0c3.4-0.6,6.5-2,10-2c9.7-3.2,19.9-4,29.9-5.9      c7.2-1.4,14.6-2.1,21.9-3.6C662.5,150.8,666.4,151.7,670,150z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#413F41",
                d:
                  "M860,256c1.7-2.2,5.4,1.4,6.5-2.4c4.2,5.3,5.2,1,6.8-2.2c0.1-0.2,2.6-0.3,3.1,0c4.3,2.5,8.6-1.2,13,0.1      c1.5,0.5,4.3,0.3,5.5-2.1c1.8-3.7,2.8-0.4,4,0.5c1.7,1.2,2.1,2.8,1.6,4.7c-6.3,5.6-13.8,6.5-21.7,5.2c-3.6-0.6-6.8-0.5-9.8,1.9      c-2.4,1.9-5.4,0.2-8.1,1.2C860.7,260.6,860.4,258.3,860,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#595658",
                d:
                  "M851.1,220.9c1.7,6.6,2.6,13.3,3,20.1c-1,0.3-1.6-0.2-2-1c-1.7-3.2-0.7,0.3-0.8,0.4      c-1.4,2.1-3.7,3.3-5.6,4.7c-2,1.5-4.4,2.5-6.9,2.6c-6.7,0.3-13.3,1.4-20.1,0.7c-1.8-0.2-3.2-0.7-4.1-2.2      c-0.3-0.7-0.4-1.4-0.3-2.1c1.6-3.5,6.6-5,11.3-3.2c5.3,2,10.5,1.3,15.5-0.7c4.1-1.6,3.6-6.4,5.1-9.7c0.6-1.6,0.5-3.1,0.2-4.8      c0-0.5,0.1-1,0.3-1.4c0.2-0.3,0.5-0.7,0.7-0.6C850,224.6,850.4,222.5,851.1,220.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3A3D",
                d:
                  "M858,266c0,0.2,0,0.3-0.1,0.5c0,0.2-0.1,0.3-0.2,0.5c-5.3-7-12.7-7.4-20.6-6.5c-1.7,0.2-4.2,0.7-5.2-0.2      c-4.2-3.6-7.5,2.9-11.4,0.5c-0.8,1.4-1.7,2.7-2.4,4.2c-0.5,1,0,2.4-1.2,3.1c-0.9-0.2-1.4-0.8-1.8-1.6c-0.3-4-2.2-7.8-0.9-11.9      c0.2-0.5,0.6-0.8,1.2-0.8c1.4,1.5,2.6,2.1,5.1,1.3c5.9-1.7,12.2-0.4,18.3,0.1c2,0.2,3.9,0.2,5.8-0.5c7-2.3,8.8-1.6,12.3,4.3      C858.8,261.1,857.7,263.6,858,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#454345",
                d:
                  "M857,258.9c-0.2,0.5-0.2,2.2-1.2,0.6c-3.3-5.5-5.4-6.3-11.4-3.4c-1.7,0.8-3,0.6-4.7,0.4      c-6.2-0.6-12.3-1.7-18.5-0.4c-0.4,0.1-0.9-0.5-1.6,0c-3.1,2.2-3.2,2.2-3.6-2c2.3-3,5.3-3.9,9.1-3.9c5.9,0.1,11.7-1.5,17.7-0.7      c2.3,0.3,3.8-1.8,5.5-2.9c3.2-2.1,4.6-1.6,5.9,2c0.6-0.3,0.2-0.9,0.2-1.3c0.1-0.5,0.2-1,0.6-1.3C857.2,250,855,254.8,857,258.9z      "
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#323234",
                d:
                  "M903,267c-0.7-0.3-2.1-0.6-2.1-0.9c-0.2-4.6-3.4-1.3-3.7-1c-1.6,2.1-10.8,5.3-12.3,5.3      c-7.5,0-14.9,0.8-21.9,3.5c-0.3-2-0.7-4-1-6c7.6-2.4,14.9-6.3,23-5.9c5.7,0.3,10.3-0.9,14.3-4.8c0.6-0.6,1.4-0.8,2.2-0.1      C902.9,260.4,905.3,263.3,903,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#504E50",
                d:
                  "M855,246c0,1.3,0,2.6,0,4.6c-2.1-4.5-4.5-5.4-6.7-2.5c-2.3,3.1-5.4,3.5-8.3,2.8      c-6.2-1.5-12,2.2-18.1,0.6c-2.7-0.7-3.2,3.5-6,2.6c-0.3,0-0.6,0-1,0c-1.5-1.3-1.3-3.1-1.3-4.9c0.1-1.2,0.3-2.3,1.3-3.1      c2.2,2.9,6.9,2.1,8,1.7c5.5-2.1,11.1,0.3,16.6-1.2c4-1,6.6-3.8,10-5.5c2-1-1-4,1.9-5.3c0.9,1.6,0.6,4.1,2.6,5.3      C855.5,242.4,854.8,244.3,855,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#39373A",
                d:
                  "M901,257c-4.7,7-11.7,6.5-19,6.5c-3.8,0-7.6,1.3-11.2,3.3c-2.4,1.3-5.8,0.8-8.8,1.2c-1-1.5-1.1-3.3-1-5      c1.1-1.2,1.5-4.2,4.2-1.5c1.1,1.1,2.5,0.4,3.5-0.6c2.5-2.4,5.2-2.9,8.8-2.3c6.5,1,13.4,2.2,19.2-2.9c0.7-0.6,2.2-0.4,3.3-0.5      C900.9,255.4,901.5,255.9,901,257z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#322F30",
                d:
                  "M859.9,138.1c-3.2,0-6.4,0.2-9.5-0.1c-4.4-0.5-6.3,1.1-5.5,5.5c0.1,0.8,0,1.7,0,2.5      c-1.7-4.2-1-8.7-1.9-13c0.3,0,0.6,0.1,0.9,0.1c4.4,2.5,9.3,1.2,13.9,1.5c17.1,0.1,34.2,0,51.3,0.1c2.4,0,5.1-0.8,6.8,1.8      c-1.5,2.5-4,2-6.2,2c-9.1,0.1-18.2-0.1-27.3,0.2c-1.3,0-2.6,0.3-3.9,0.5C872.4,139.2,866.1,140.9,859.9,138.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#262325",
                d:
                  "M591,167.1c10.2-1.8,20.4-3.5,30.6-5.5c2.5-0.5,4.9-0.6,7.4-0.6c0,0.4,0,0.7,0,1.1      c-8.1,0.8-15.8,4.2-24,4c-3.3,2.4-7.5,1.5-11,3c-3.3,0.5-6.6,1.5-10.1,0.9C584.9,165.4,588.8,168.4,591,167.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M659,155.1c1-1.6,2.6-0.9,4-1.1c18.6-2.7,37.2-6.1,56-6.9c-5.3,1-10.5,2.4-15.9,2.8      c-12.8,1.1-25.5,3.3-38.2,4.9C663,155,661,155,659,155.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0F0D0E",
                d:
                  "M781.1,145c-3.3-0.5-6.9,1-10.1-1c10.3-0.9,20.7-1.2,31-2.8c1.3-0.2,2.7-0.4,4-0.1      c3.5,0.7,0.6,1.8,0,2.7c0,0,0,0.3,0,0.3C797.8,145.7,789.5,147.9,781.1,145z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#646060",
                d:
                  "M851.1,220.9c1.3,4-2.8,2.7-4.1,4.1c-1.9,0.1-1.6-0.9-1-2c0.8-3.1,1.3-6,0.5-9.3      c-0.6-2.5,0.3-5.1,2.5-6.8C850.4,211.5,850.8,216.2,851.1,220.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484445",
                d:
                  "M809,146.9c2,11.3,0.7,22.7,1,34.1c-0.3,0.1-0.5,0.1-0.8,0.2c-0.5-0.3-0.8-0.7-1.1-1.3      c-0.6-5-0.7-10.1-1.4-15.1c0.9-1.8,0.3-4,1.2-5.8c0.7-5.1-1.4-10-0.9-15C807.6,145,808.3,146,809,146.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M779,141c3.2-2.3,7.1-1.2,10.6-1.5c6.8-0.5,13.6-2.6,20.5-1.5c-2.1,1.5-4.7,1.5-7,1.7      C795.1,140.5,787,140.7,779,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M755,143.1c7.9-2.3,16-2.1,24-2C771.1,142.5,763.1,143.1,755,143.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M719,147c4.2-1.5,8.5-2.1,13-2.1c1.4-0.9,3-0.3,4.5-0.4c0.2,0.2,0.4,0.3,0.6,0.5      C731.1,146.4,725.1,147.2,719,147z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M737,144c5.7,0.3,11.4-1.8,17.1-0.9c-5.6,1.2-11.3,2-17.1,2c0,0-0.1-0.1-0.1-0.1      c-0.3-0.2-0.4-0.4-0.3-0.6C736.8,144.1,736.9,144,737,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M834,139.1c-3.5,2-7.4,0.5-11,0.9C826.5,138.1,830.3,139.4,834,139.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M815,138c3.5-2.1,7.4-0.5,11.1-0.9C822.5,138.9,818.7,137.6,815,138z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#262325",
                d: "M629,161c1.8-1.7,4-0.8,6.1-1C633.3,161.8,631,160.7,629,161z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M653,156.1c1.8-1.9,4-0.8,6.1-1C657.2,156.7,655,155.8,653,156.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M814,140.1c-1.4,1.5-3.3,0.7-4.9,0.9C810.4,139.4,812.3,140.2,814,140.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5253",
                d:
                  "M591,167.1c-2.1,1.7-5.4,0.4-7.1,2.9c-0.3,0-0.6,0.1-0.9,0.2c-2.5,2-5.9,1.5-8.5,3      c-2.9,0.3-5.7,1-8.6,1.5c-0.5,0.2-0.9,0.3-1.4,0.3c-1.3,0.1-2.5,0.2-3.5-0.9c5.5-2.7,11.7-3.2,17.4-4.9c1.2-0.4,2.5-0.4,4.6-2.1      c-2.7,0-4.4,0-6.1,0c6.4-2.7,13.1-3.7,20-4c-2.9,0.9-5.7,1.7-8.5,2.6C588.6,167.6,590.6,165.7,591,167.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M743,142c-11.6,1.1-23.2,2.2-34.7,3.5c-1.3,0.1-2.2,0-3.3-0.5c-0.4,0.5-1,0.6-1.6,0.4      c-0.1-0.1-0.3-0.3-0.4-0.4c3.2-2.2,7-0.8,10.5-1.5c7.1-1.4,14.3-1.7,21.5-2.5c1.7-0.2,3.4,0.3,5-0.9      C742.2,138.4,742.7,140.3,743,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5253",
                d:
                  "M607,161c-3.1,1.9-6.5,2.1-10,2C600.2,161.7,603.1,158.9,607,161z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C595A",
                d:
                  "M682,149c-3.6,0.9-7.1,3.3-11,1c3.2-1.8,6.7-0.7,10-1C681.3,148.6,681.7,148.7,682,149z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M701,147c-2,0-4,0-6,0c-0.3,0.4-0.7,0.4-1,0c2.5-2.9,5.9-1.8,9-2l0,0C703.6,146.9,701.5,146.1,701,147z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5253",
                d:
                  "M577,167c-1.6,1.9-3.8,2.1-6,2C572.6,167.1,574.8,166.9,577,167z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M682,149c-0.3,0-0.7,0-1,0c1-3.7,3.5,0.1,5-1C685,149.5,683.4,148.8,682,149z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C595A",
                d:
                  "M694,147c0.3,0,0.7,0,1,0c-1.8,1.8-4,0.7-6,1C690.4,146.3,692.3,147.2,694,147z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C5A58",
                d:
                  "M857,136c-3.3,0-6.5,0-9.8,0.1c-2.3,0.1-3.4-0.7-3.3-3c0.7-0.5,1.4-1.4,2-1.3c13.7,1.2,27.3-1.5,41-0.7      c3,0.2,6.1,1.2,9.1,0c3.4,4.4,8,1.1,11.9,1.3c11.2,0.6,22.4,0.3,33.7,1.3c5.8,0.5,11.7-0.1,17.4,1.3c1.4,0.3,3.8-0.7,3.7,1.7      c-0.1,1.6-2.2,1.4-3.7,1.6c-1,0.1-2,0.1-2.9,0.1c-2.3,0-4.5,0.1-6.8-0.4c-1.9-0.7-3.9-0.7-5.9-0.6c-0.6,0-1.2,0-1.8,0      c-26.4-1.7-52.8-2.4-79.3-1.9C860.6,135.5,858.8,135.1,857,136z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575354",
                d:
                  "M1057,151c0.3,2.5,2.2,1.9,3.8,2c4,0.2,5.5,0.7,9.5,3.3c-10.8-0.3-20.7-5.7-31.4-6.3      c-1.5,1.5-3.3,1.4-5.1,1c-8.6-1.7-17.1-3.6-25.7-4.9c-1-0.2-1.9-0.6-2.4-1.5c-0.2-0.6-0.1-1.1,0.1-1.7c3.2-2.2,6.5-0.4,9.5,0.2      c6.3,1.1,12.6,2.3,18.6,4.4c1.4,0.5,2.9,0.7,4,0.3c-1.5-0.5-4,1.2-4.9-1.8c5.7-0.8,11.2-1,16,3c2.1-0.1,4,0.6,6,1      C1055.7,150.3,1056.3,150.7,1057,151z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C5A58",
                d:
                  "M1033,146c1.3,1.9,3.7,0.3,5,2.6c-10.7-1.9-21.4-3.7-32-5.6c-2.6,2.2-5.2,0.6-7.8,0      c-1.7-0.8-3.6-0.7-5.4-0.7c-3.3,0.2-6.5-0.7-9.6-1.3c-2.4-0.9-4.8-0.6-7.3-0.6c-3.2-0.1-6.4-0.2-9-2.4c0.5-2.4,2.5-2,4-1.9      c9.5,0.8,19,1.7,28.5,2.6c7.4,0.7,14.5,2.7,21.7,4.3C1025,144,1029,145,1033,146z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575354",
                d:
                  "M1021,143c-7.5-0.1-14.5-3-21.9-3.5c-9.8-0.7-19.6-2.5-29.4-2.5c-1,0-2,0-2.7,1c-4.9,2.3-8.4,2-11-1      c2,0,3.9,0,6.6,0c-1.6-0.9-2.6-1.5-3.6-2c2.8-2.4,5.7-0.2,8.5,0c12.1,1,24.3,1.7,36.4,3.1c5.4,0.7,10.6,3.1,16.2,3.3      C1020.4,141.4,1020.7,142.4,1021,143z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575352",
                d:
                  "M1055,150c-2.1,0.4-4.2,0.4-6-1C1051.4,147.1,1053.1,148.9,1055,150z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#201E1E",
                d:
                  "M484,204.1c14.5-6.3,28.3-13.8,43.4-18.9c10.8-3.7,21.3-8,32.5-10.2c1.5-1.1,3.6,0.3,5.1-1l0,0      c1-0.7,1.8-0.4,2.4,0.5c0.2,0.5,0.2,0.9,0.1,1.4c-0.5,1.3-1.3,2.5-2.4,3.4c-0.4,0.2-0.9,0.2-1.4,0.2c-2.1-0.5-4.1-0.6-6.3,0      c-8.7,2.4-17.5,4.7-26,7.8c-1.7,0.6-3.3,1.4-4.6,2.9c-3.5,0.5-6.7,1.5-9.2,4.1c-7,0.1-12.3,4.5-18.1,7.4c-4,2-7.9,4.3-12.2,5.7      c-1.3-0.6-2.4-1.4-3.4-2.2C483.6,204.8,483.7,204.4,484,204.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#302A2B",
                d:
                  "M484,204.1c0,0.3,0,0.6,0,0.9c0.3,0.3,0.5,0.8,0.6,1.2c-0.1,0.2-0.1,0.5-0.2,0.7c-0.2,0.4-0.6,0.7-0.9,1      c-7.4,4-14.8,8.2-22,12.5c-2.5,1.5-4.9,3-6.8,5.2c-1.2,1.2-2,0-2.9-0.5c-0.6-0.7-1.2-0.7-1.8-1.3c4.4-3,8.8-6.7,13.1-9.8      C470.5,211.7,476.9,207.2,484,204.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292728",
                d:
                  "M565,174c-1.4,1.7-3.4,0.8-5.1,1c0.4-0.3,0.7-0.6,1.1-0.9C562.3,174,563.7,174,565,174z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151213",
                d:
                  "M1006,144c11,2,21.8,4.9,33,6c8.3,4.2,17.7,4.7,26.4,7.8c6.9,2.5,14,4.1,20.7,7.1      c11.8,4.7,23.6,9.3,35.3,14c0.6,0.2,1.1,0.7,1.6,1c0.1,2.1-1.6,1.9-2.9,2.1c-7.8-1.8-15-5.4-22.5-8.1      c-8.9-3.3-17.9-6.2-26.9-9.1c-8.3-2.9-17-4.6-25.5-7c-24.6-6.2-49.6-10.1-74.8-12.5c-9.9-0.9-19.9-1.7-29.9-2.3      c-1.3-0.3-2.6-0.6-3.9-0.6c-17.3,0.7-34.6-1.5-51.9-0.8c-2.4,0-1.7,1.8-1.8,3.2c-0.1,1.9,0.5,4.1-2.3,4.6      c-2.2-0.9-1.9-2.9-2.1-4.7c0-1.7,0.1-3.5-0.2-5.2c0-0.5,0.1-1,0.4-1.4c3.1-1.9,6.6-0.9,9.9-1c9.1-0.3,18.1-0.1,27.2-0.1      c0.3-0.1,0.6-0.1,0.9-0.2c7.4-0.6,14.8,0.6,22.3,0.2c11.3,0.2,22.4,2,33.6,2.8C983.9,140.6,995,142,1006,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544D4B",
                d:
                  "M1139,184c-1.9-0.7-4.4-0.2-5-3C1136.1,181.3,1137.9,182,1139,184z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M792,136c-5.5,2-11.4,1.5-17,2.1c-8.8,1-17.7,1.8-26.5,2.8c-1.5,0.2-3,0.1-4.5,0.1      c0.3-0.5,0.5-1.5,0.9-1.6c6.8-0.9,13.6-1.9,20.4-2.4C774.2,136.5,783.1,136.3,792,136z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M828,134c-5.2,1.8-10.7,0.7-16,1c0.3-0.5,0.7-1.6,0.9-1.6C817.9,134.9,823,133,828,134z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#545252",
                d:
                  "M803,135c-3.1,2.9-6.6,1.6-10,1C796.2,134,799.7,135.4,803,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332E2E",
                d:
                  "M804,675c-1.5,1.6-3.4,1-5.2,1c-15.8,0.1-31.6-0.1-47.4,0.1c-14.5,0.2-29,0.6-43.5,0.9      c-0.6-0.9-0.6-1.7,0.4-2.4c6.3-0.2,12.6,0,18.9-0.1c19.1,0,38.2,0,57.3,0c1.8,0,3.7-0.5,5.4,0.5c0.3,0,0.7,0,1,0      C795.3,674.2,799.7,674.2,804,675z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#443F3C",
                d:
                  "M839,673c12,0,24,0,35.9-0.1c8.9,0,17.9,0,26.8,0c0,0.2,0,0.4,0.1,0.7c-0.8,0.1-1.6,0.3-2.4,0.4      c-18.7,0-37.5,0-56.2,0C841.8,674,840.2,674.4,839,673z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#474140",
                d:
                  "M790,675c-21,0-42,0-63,0c-0.3-0.2-0.4-0.4-0.3-0.6c0.1-0.2,0.2-0.3,0.3-0.3c20,0,40,0,60-0.1      C788.1,674.1,789.3,673.8,790,675z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#463D3D",
                d:
                  "M917,672.1c19.7,0,39.3,0,59-0.1c-1.5,1.6-3.4,1-5.2,1c-16.3,0.1-32.6,0-48.9,0c-1.5,0-2.9,0.2-4.4,0.6      C916.1,674,916.9,672.7,917,672.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3736",
                d:
                  "M809.7,677.7c4.5-2.1,8.9-1,12.9-2.4c1-0.3,1.3,0.2,1.5,0.6c0.6,1.5-1,1.7-1.7,1.7      C818.3,677.8,814.2,677.7,809.7,677.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3736",
                d:
                  "M818,673c6,0.5,12.1-1.2,18,1c-4.3,0.6-8.8-1.2-13,1C821.5,673.8,818.2,677.5,818,673z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M892,681c-4.9,2.2-10,0.4-15,1c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3c0.7,0,1.3,0,2,0      C883.3,681,887.7,681,892,681z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#474140",
                d:
                  "M804,675c-4.3,0-8.7,0-13,0c4.5-2.1,9.3-0.5,14-1C804.7,674.3,804.3,674.7,804,675z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#463D3D",
                d:
                  "M977,672c1.3,0,2.6,0,4.5,0C979.5,673.5,978.2,673.2,977,672C977,672,977,672,977,672z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#554E4F",
                d:
                  "M727,674.1c0,0.3,0,0.6,0,0.9c-6.3,0-12.7,0.1-19,0.1c-5,1.4-10,1.7-14.9-0.1c0.7-0.3,1.3-0.7,2-1      C705.7,674,716.3,674,727,674.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#867F7B",
                d:
                  "M1996.9,560c-0.3,0.3-0.7,0.6-1,0.9c-0.7,1.1-1.8,1.9-3.1,2.1c-3.6,0.9-6.3-1.5-9.3-2.7      c-2.9-1.1-5.7-2.6-8.7-3.6c-0.9-0.7-1.7-1.5-0.5-2.6c0.6-0.4,1.2-0.8,1.8-1.2c1.9-0.8,3.6,0.3,5.4,0.3c4.2,1,8.5,1.6,12.5,3      C1995.5,556.8,1998.3,556.9,1996.9,560z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#443D3A",
                d:
                  "M1989,566c-4.1,1.6-7.2-1.2-10.8-2.2c-3-0.9-5-3.2-8.1-4.2c-3.2-1-1.4-2.8,0.9-3.6      c4.6,0.5,7.8,4.5,12.4,5c2.4,1.1,4.9,2,7.5,2.7C1992,565.8,1989.5,565.1,1989,566L1989,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4443",
                d:
                  "M1980.9,554.1c-1.6-0.4-3.3-0.7-4.9-1.1c5.6-3.5,11.8-3.2,18.5-2.7c-2.5,2.3-4.7,1.6-7.2,1.2      c-1.3-0.2-4.3-2.7-4.4,1.6c-0.1,0.2-0.2,0.4-0.3,0.6C1982.2,554.1,1981.7,554.6,1980.9,554.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544C47",
                d:
                  "M1983,562c-4.7-0.6-8.3-3.4-12.1-6c0.7-1.3,1.6-2.1,3.2-1.8c-0.1,0.8,0,1.5,0.8,1.9      C1977.5,558.3,1982.1,557.6,1983,562z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4443",
                d:
                  "M2002,555c-1,0.3-2,0.7-3,1c-3.7,2.4-6.9,0.2-10.1-1.3c0-0.2,0.1-0.5,0.1-0.7      C1993.3,555.1,1997.8,553,2002,555z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544A4A",
                d:
                  "M2017,554c-2.1,1.9-4.7,0.7-7,1c1.4-1.6,3.3-0.7,5-1C2015.6,554,2016.3,554,2017,554z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4443",
                d:
                  "M1983,553c2,0.3,4.2-0.8,6,1l0,0C1986.9,554.4,1984.6,555.8,1983,553L1983,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#24201F",
                d:
                  "M1991,568c0.3,0,0.6,0,1,0c2.9-0.9,5.7-2,8.7-2.9c1.5-0.6,2.9-1.3,4.5-1.1c2.1,0,4.2-0.5,6.3-0.9      c5.4-1,10.9-1.7,16.4-2.6c1.2-0.2,2.3-0.4,3.2,0.6c0,0.8,1.6,2.1,0,2.3c-7.3,1.2-14.2,3.5-20.6,7.3c-1.9,1.1-4.5,0.2-6.7,1.5      c-6.1,3.7-10.8,9-16.2,13.5c-3,2.5-5.9,4.8-7,8.8c0,0.1-0.3,0.3-0.4,0.3c-5.3-1.9-6.6,3.8-10.2,5.3c0.3-1.2-4.4-4.3,1.4-3.7      c0.8,0.1,2-2.4,3-3.7c-1.5-1.2-3-0.5-4.4-0.7c0.7-1,1.3-2,2-3c3.9,1.4,5.1-1.6,6.6-4.1c2.7-4.9,7.5-8.5,9.5-13.9      C1989,570,1990,569,1991,568z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#161212",
                d:
                  "M1988,571c1.5,0.1,1.5,0.7,0.7,1.8c-3,4.3-5.8,8.6-9.7,12.2c-1.3,0.7-2.2-0.1-3-1      C1980.3,579.9,1983.3,574.7,1988,571z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1D1818",
                d:
                  "M1976,584c1,0.3,2,0.7,3,1c-1.2,5.7-3.4,7-7,4C1974,587.9,1974.6,585.6,1976,584z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#342E2E",
                d:
                  "M1989,566c0.7-0.7,1.3-1.4,2-2c-0.5-2,1.5-1.1,2.1-1.8c0.9-0.4,1.8-0.9,2.8-1.3      c-0.1,3.9-3.6,3.8-5.8,5.1C1989.7,566,1989.3,566,1989,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#AFA9A5",
                d:
                  "M1062,112c-3.2,0.1-6.2-0.3-9-2c2.5-3.1,6.2-3.5,9.8-0.8C1064.2,110.3,1062,111,1062,112z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1135,141c-5.9-0.6-10.9-4-16.7-5.3c-1.4-0.3-2.8-0.7-4.3-0.8c-4.6-3-9.9-4.2-15-6      c1.3-2.9,4.2-2.1,6.5-2.6c2.8-0.6,5.6-0.4,8.4-0.4c8.1,0.2,16.1-1.7,24.2-0.9c1.6,0.1,3.3-0.5,4.8,0.8c-3.3,3-7.4,0.7-11,1.9      c-2.1,0.5-4.2,0.4-6.5,0.5c3.1,1.7,6.5,2.2,9,4.6c3.7,1.9-0.9,4.8,0.8,6.9C1135.3,140.2,1135.3,140.6,1135,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ABA8A3",
                d:
                  "M1130.7,126.9c4-1.3,8.2-0.5,12.2-1c5.7,0.1,11.4,0.2,17.1,0.3c10.4,2.2,20.4,5.9,30.8,7.9      c4.7,1,8.9,3.4,13.4,4.9c1.5,0.5,3.1,1.2,3.1,3.3c-1.1,2.1-2.8,1.2-4.3,0.7c-5.1-1.9-10.3-3.5-15.7-4.3      c-5.6-0.8-10-4.7-15.9-4.9c-6.8-0.3-13.5-0.7-20.2,0.1c-1.3,0.3-2.6,0.3-3.9,0.1c-1.7-0.6-3.8-0.2-5.3-1c-1.6-0.9-2.8-2-5-1.5      c-1.7,0.4-3.5-0.7-4.1-3.3c4.4-0.9,8.8-0.3,12.6-0.5C1140.9,126.9,1135.8,128.5,1130.7,126.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B9893",
                d:
                  "M1191,135c-8.6-2.1-17.8-2.1-25.4-7.4c-1.7-1.2-4,0.2-5.6-1.4c1-0.1,2-0.2,3-0.3c2,0.1,3.9,0.2,5.9,0.3      c4,0.7,8,1.4,12,2c1.5,2.1,4,2.1,6,3.2C1188.6,132.2,1191,132.3,1191,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534647",
                d:
                  "M1114,126c-4.8,1.8-10.2,0.7-14.9,3c-1.1,0-2.3,0.2-3-0.9c2-2.6,5.5-1.7,8-3.1c1.9,0.9,3.8-0.5,5.7-0.1      C1111.1,125.2,1112.9,124.5,1114,126z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#928E8A",
                d:
                  "M1191,135c-2.1-2.3-5.1-2.8-7.8-3.8c-1.5-0.6-3.5-0.6-2.3-3.1c2.4,0.3,4.7,0.6,7.1,0.9      c2.3,0.7,4.7,1.4,7,2.1c0.7,2.8,2.8,3.4,5.3,4.4c7.2,3,15.3,4.1,21.7,9.1c1.8,1.5,4.7,1.8,6.1,1.7c4.5-0.3,1.7,2.2,2,3.6      c-1.5,1-2.8,0.2-4.3-0.2c-5.7-2.7-11.8-4.4-17.7-6.8c-0.4-0.3-0.8-0.6-1.1-0.9C1202.1,138.7,1196.2,137.7,1191,135z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A2A09A",
                d:
                  "M1278,167c0.3,0.7,0.7,1.3,1,2l-0.1,0c-2.4,1.6-4.4-0.2-6.5-0.8c-1.9-0.5-3.5-2-5.4-2.3      c-5.8-0.9-11.5-2.3-17-4.2c-0.5-0.1-0.9-0.3-1.3-0.6c-0.9-2.1-1.8-4-4.5-4.5c-1.2-0.2-2.4-1-2.4-2.6c0.4-0.4,0.8-0.5,1.2-0.1      c0.7,0,1.3,0,2,0.1c5.6,0.6,10.1,4,15.2,5.8C1266.2,162,1272.8,162.9,1278,167C1278,167,1278,167,1278,167z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#928E8A",
                d:
                  "M1278,167c-11.1-4-22.7-6.8-33-13c1.4-1.8,2.9-0.3,4,0.2c8.9,3.6,18.4,5.8,26.8,10.6      C1276.8,165.4,1278,165.5,1278,167z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ACAAA4",
                d:
                  "M1242,154c0.8,1.1,2.1,1.8,3.3,1.9c3.5,0.2,3.8,2.4,3.7,5.1c-2.5,0.1-3.6-2.8-6-2.7      c-5.4-1.4-10.3-4.1-15.6-5.8c-1.6-0.5-3.5-1.1-3.5-3.5c0.7-0.5,1.4-0.5,2.1,0.1c1.3,0.3,2.7,0.6,4,0.9c0.3,0,0.6,0.1,1,0.1      C1235.2,149.9,1238.9,151.1,1242,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#928E8A",
                d:
                  "M1242,154c-3.7-1.4-7.3-2.7-11-4.1c4.5-2.8,6.8-2,12,4C1242.7,154,1242.3,154,1242,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A6A7A0",
                d:
                  "M1469,274c-2.7,0-5.3,0-8,0c-1.5-5.3-3.2-9.9-8.7-13.3c-9.7-6-19.9-11.1-29.7-16.9      c-1.1-1.7-2.3-3.3-4.3-4c-0.4-0.2-0.8-0.4-1.2-0.7c-5.4-2-9.9-5.7-15.3-7.8c-1.9-0.8-3.7-1.6-4.1-3.8c0.1-0.8,0.6-1.3,1.3-1.5      c1.3,0.3,2.7,0.7,4,1c11.5,5.4,22.6,11.8,33.3,18.6c1.1,0.7,2.5,0.9,3.7,1.4c4.2,3.9,9.7,5.7,14.4,8.9c5,3.4,10.3,6.4,15.2,10      C1473.1,268.5,1472.6,272.3,1469,274z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9E9F98",
                d:
                  "M1440,247c-1,0.4-1.9,1.1-3.2,0.3c-8-5-16-9.7-23.9-14.8c-3.2-2-7.9-1.2-9.8-5.5c4.7,0.2,8,3.8,12.2,5.3      c0.9,0.3,1.8,0.5,2.7,0.7c6.5,4,12.9,8,19.4,11.9C1438.4,245.5,1439.5,245.9,1440,247z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A7A7A0",
                d:
                  "M1399,226c-0.3,0.3-0.7,0.7-1,1c-3,2.1-4.9-1.2-7.4-1.6c-5.6-2.9-11.5-4.9-17-8      c-7.7-4.6-16.2-7.7-24.2-11.7c-12-6-24.4-11.2-36.7-16.6c-11.2-4.9-22.1-10.6-33.4-15.5c-7.5-3.3-14.7-7.3-23.1-8.2      c-2.6-0.3-5.7-0.8-6.3-4.5c1.3-0.8,2.6-0.4,3.8,0.1c8.2,3.2,17.1,4.2,25.2,7.9c12.5,5.1,24.3,11.5,37,16v0c5.8,3.2,12.1,5,18,8      c5.7,2.7,11.3,5.3,17,8c8.7,5.7,18.5,9.4,27.8,14c4.1,2,8.1,4,12.2,6c2.4,1.9,5.4,2.6,8,4C1399,225.3,1399,225.7,1399,226z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9E9F98",
                d:
                  "M1399,225c-3.5,0.3-6-1.4-8-4C1393.9,222,1397.2,222,1399,225z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#989792",
                d:
                  "M1334,193c-6.3-1.9-12.9-3.4-18-8c3.6,0,6.5,2.7,10,3C1328.3,190.2,1332.1,190.1,1334,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#272123",
                d:
                  "M693.1,675c5,0,9.9,0.1,14.9,0.1c0,0.6,0,1.3,0,1.9c-6.7-0.2-13.4,0.8-20-1.4      C689.6,674.5,691.4,675.3,693.1,675z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3A3434",
                d:
                  "M877,681c0,0.3,0,0.6,0,1c-6,0-12,0-18,0c1.7-1.5,3.3-1.8,5.8-1.2C868.7,681.6,872.9,681,877,681z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2828",
                d:
                  "M847,682c-0.9,0.6-1.9,1.2-2.8,1.7c-1.7-0.3-3.4-0.5-5.2-0.8c-0.3-0.2-0.4-0.4-0.3-0.7      c0.1-0.2,0.2-0.3,0.3-0.3C841.7,682,844.3,682,847,682z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3A3434",
                d:
                  "M839,682c0,0.3,0,0.7,0,1c-2.3,0-4.6,0-6.8,0c0-0.3,0-0.7,0-1C834.4,682,836.7,682,839,682z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#242224",
                d:
                  "M1296.6,302.8c-4.2,0.1-8.4,0.1-12.6,0.2c1.4-3.4,4.4-0.1,5.7-1.5c-4.4-1.1-9,1.7-14,1.6      c-3.5,0-5.1-1.2-5.7-4.6c-1.1-6-2.2-12-5.6-17.4c-1.6-2.5-3.3-3.4-6-1.9c-2.3-1.8-1.2-3.9-0.5-5.9c0.8-2.5,0.5-4.5-1.6-6.2      c-1.7-1.6-4.5-2.1-4.4-5.2c0.6-1.1,3.1,0.8,2.8-1.7c5.5-2.1,7.7-1.2,9.2,4.2c1,3.8,2.1,7.7,3.4,11.4c1,2.9,3.2,4.3,5.9,4.5      c2.5,0.2,4.9-0.4,6.9,1.7c0.4,0.4,1.4,0.8,1.6-0.1c1.2-5.8,5.6-2.2,8.4-2.7c2.9-0.5,6.6-1.4,8.7,2.7c1.4,2.8,4.1,1,6.3,1      c2.6,0.1,4.2,1.5,5.3,3.7c0.5,1.6-1.4,3.7,1.3,4.7c1.6,0.6,3.4,1.3,2.5,3.5c-0.8,1.9-2.2,3.3-4.5,3.5c-1.3,0.1-2.5-0.8-3.9-0.1      c3.4,0.2,6.6-0.2,9.9,0c2.6,0.1,3.6,1.1,1,3.1c-1.7,0.2-3.4-0.2-5.1,0.4c-1.2,0.1-2.4,0.2-3.6,0.2      C1304.3,303.2,1300.4,301.8,1296.6,302.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#201E1E",
                d:
                  "M1298,269c10.3,6.2,20.7,12.4,30.5,19.5c2.6,1.9,5.3,3.3,8.5,3.6c3.3,2.3,6.7,4.6,10,6.9      c-1.8,0.3-3.5,0.6-5.3,0.9c-1.6,0.1-3.2,0.2-4.7,0.3c-2,0.8-4.1,0.2-6.2,0.4c-1.7-0.2-2.1-2-3.4-2.7      c-21.2-14.3-42.5-28.6-64.5-41.7c-1.4-0.8-2.9-1.7-3.4-3.4c0.5-3-1.7-1.7-2.9-1.8c-2.2-0.5-4.3-1-4.6-3.8c0.3-1,2.7-1.7,0.3-2.9      c-1.5-0.8-2.9-1.5-4.2-2.7c2.5,0,4.4,1.2,6.6,2.4c7.5,4.4,15.1,8.7,22.1,13.9c1.2,0.9,2.7,1.3,4.2,1.2l0,0c2.2,1.6,4.4,3.1,7,4      l0,0C1291.3,265.1,1294.5,267.2,1298,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151111",
                d:
                  "M1258,279c1.7-0.5,1.7-2.3,2.8-3.9c4.8,5,8.4,10.4,9.1,17.3c1,9.4,3,10.9,12.3,9.1      c3.5-0.7,7.1-0.4,12-0.7c-4.1,2.1-7.6-0.2-10.2,2.2c-4.3,0.4-8.6,0.7-12.9,1.1c-2,1.4-4.3,0.7-6.4,0.8c-2.9-0.8-4.6-4.6-8.3-3.6      c-1.7-0.1-3.4,0-5,0.2c-0.5,0-0.9-0.2-1.3-0.5c-1.5-1.2-4.8,2.5-5-2c1.2-1.8,5.2-0.6,4.7-4.3c0.1-1.2,0.5-2.4,1.3-3.3      c2.1-2,3.1-4.5,3.9-7.2C1255.5,282.2,1255.6,279.9,1258,279z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2E2929",
                d:
                  "M1328.1,297c2,0.2,1.9,1.6,1.9,3c-0.4,0.3-0.9,0.3-1.4,0.1c-2.6-1.1-5.2-0.5-6.8-0.6      c1-0.2,3-0.1,5.1,0.2c0.5,0.5,0.4,0.8-0.2,1.1c-1.6,0.1-3.1,0.2-4.7,0.3c-1.7,0.5-3.4,0.8-5-0.2c0.2-0.6,0.4-1.8,0-1.6      c-4.3,1.6-8.8-2.2-13.2,1.4c0.6-2.8,1.3-4.6,3.6-3.4c2.7,1.4,3.8-0.4,5.3-2c1.6-1.8,0.4-2.6-1-2.6c-6.6-0.1-3-3.1-1.7-5.6      c5.5,0.4,8.5,5.2,12.9,7.5C1324.6,295.4,1325.8,297.2,1328.1,297z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1323.3,300.2c4.2,0.2,34-3.6,31.1,1.2c-8.6,0.2-94.7,4.9-103.3,5.1c-0.2,0-0.6-0.4-0.6-0.5      c0-0.3,0.3-0.6,0.4-0.8C1255.2,302.2,1318.6,300.5,1323.3,300.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1104,125c-1.7,3.6-5.4,1.9-8,3.1c-9.3-2.6-18.2-6.6-28-7.1c-3.4-2.6-7.6-3-11.6-3.9      c-12.1-2.6-24.2-5.6-36.5-7.8c1.1-0.2,2.2-0.3,3.4-0.5C1050.5,112.6,1077.6,117.3,1104,125z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#443D3B",
                d:
                  "M1135,141c0-0.3,0-1.7,0-2c3.2-0.6,6.3-1.1,9.7,0.1c10.2,6.1,21.4,10,32.5,14      c13.4,5,26.6,10.3,39.8,15.7c3.1,1.2,6.2,2.4,8.7,4.8c1.3,1.6,1.6,3.4,1.6,5.4c-0.1,1.2-0.4,2.2-1.3,3c-1.3-1.4-1.7-3.2-4.4-3.8      c-4.6-1-8.3-4.7-12.5-7.1c-2.7-1.6-6.4-3.3-10.1-2.1c-1.5-4.5-6.1-3.6-9.3-5.1c-7.1-3.3-14.5-5.9-21.8-8.9      c-1.3-0.1-2.5-0.1-3.8-0.2c-0.5-2.3-2.5-1.7-4-2c-6.3-4.7-14-6-21.1-8.9C1138.2,142.3,1135,143.8,1135,141z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#32180F",
                d:
                  "M1858,395c-0.7-0.7-1.3-1.4-2-2c-2.1-0.6-3.5-2.3-5.1-3.6c-0.3-0.4-0.3-0.9,0-1.3c3.2-1.5,6.7-1,10-1.1      c3.5-2.4,6.3,0.6,9.4,1.1c1.6,0.9,2.6,2.7,4.6,3.1c0.9,0.4,1.8,0.8,2.6,1.4c1.5,1.6,4.1,2.5,3.4,5.4c-5,2-9.5-0.4-14-2.1      c-1.4-1.6-3.3-0.8-5-1C1860.7,396.1,1859.3,395.9,1858,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#966047",
                d:
                  "M1870.9,389.2c-3.6,0.4-6.3-2.8-9.9-2.2c-2.6-2-6.2-0.3-8.9-2.1c-1.2-1-2.7-0.3-4-0.5      c0,0-0.1-0.4-0.1-0.4c0-0.3,0-0.7,0-1c0.7-3.1,3.3-2.5,5.1-2.1c5.7,1.3,11.7,1.6,17.2,3.8c1.2,0.6,2.1,1.4,3,2.4      c0.5,0.5,0.9,1.1,1.1,1.9c0,0.8-0.4,1.3-1.2,1.5C1872,390.6,1871.6,389.7,1870.9,389.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6C3B25",
                d:
                  "M1867,396c3.2,0.6,6.3,1.1,9.5,1.7c1.6,0.3,3.2,0.8,4.5-0.7c1.9-1.2,2.8,0,3.6,1.4      c0.2,0.7,0.2,1.4,0,2.1c-1.9,2.4-3.1-0.2-4.6-0.6c-2.8,0.5-5.3-1-8-1c-1.4-0.9-2.9-0.9-4.5-1.1      C1866.2,397.7,1866,396.9,1867,396z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E3422",
                d:
                  "M1851,389c2.6,0.2,3.7,2.2,5,4c-1.9,1.2-4.1-0.3-6.1-3.9C1850.3,388.6,1850.7,388.6,1851,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E3422",
                d:
                  "M1858,395c1.3,0,2.7,0,4,0c0.5,0.6,1.1,1.2,2.3,2.5C1861.5,396.7,1859.1,397.8,1858,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7E4F34",
                d:
                  "M1851,389c-0.4,0-0.7,0-1.1,0.1c-1.2-0.3-2.6-0.4-2.5-2.2c1.5-0.5,2.4,0.8,3.5,1.2      C1851,388.4,1851,388.7,1851,389z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E392D",
                d:
                  "M1848.1,384.4c1.4-0.7,2.9-1.6,4,0.5C1850.7,385,1849.3,385.3,1848.1,384.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DFD9D7",
                d:
                  "M1954.1,430.8c0,1-0.1,2.1-0.1,3.1c-6.3,0.6-11.1-2.8-15.9-6c0.1-0.2,0.2-0.4,0.3-0.6      c2.1-2.1,3.2-4.6,3.4-7.5c0-0.7,0-1.4,0-2.1c0-0.7,0.1-1.5,0.2-2.2c0.3-1,0.7-1.8,1.7-2.2c2.5,1,5,1.3,7.8,0.6      c1.8-0.4,3.7,0.7,3.7,3c-0.1,2.2,1.7,3.1,2.4,4.7c0.4,1.5-0.1,2.8-0.7,4c-0.6,1.2-1.2,2.3-2.2,3.3      C1953,429.1,1954.6,430.3,1954.1,430.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1917,423.9c0-0.3,0-0.7,0-1c4-1.9,7.5,1.4,11.4,1.1c2.2,0.7,4.3,1.3,6.5,2.1c0.7,0.4,1.3,0.8,1.3,1.7      c-0.2,1.8-1.1,2-2.8,1.5C1927.9,427.4,1922.4,425.7,1917,423.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DFD9D7",
                d:
                  "M1936.1,427.8c-0.3-0.3-0.6-0.6-1-0.9c-0.1-1.4,0.9-1.6,1.9-1.4c1.4,0.3,1.8,1.2,1,2.5l0.1-0.1      C1937.4,427.9,1936.8,427.9,1936.1,427.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#722E10",
                d:
                  "M1880,400c1.7-1.2,2.4,1.6,4,1c1.2-0.6,2-0.6,2,1c-0.5,3.1,2.2,4.3,3.9,5.8c1.7,1.5,3.4,2.7,3.1,5.2      C1885.9,411.4,1883.7,405,1880,400z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#FAF1EC",
                d:
                  "M1798.9,373.1c-1.3-0.3-2.4-1.3-3.8-0.6c0.2-0.2,0.2-0.3,0-0.5c-0.1-3.3,2.3-1.7,3.8-2      c7.4-1,14.6,1,21.9,1.8c6.6,1.3,13.4,1.8,20,3c3.7,0.8,7.4,1.2,11.1,1.7c1.6,0.2,3.3,0.1,4.3,1.8c0.1,1.3-0.4,2.3-1.5,2.9      c-4.4,0.5-8.6-0.6-12.8-1.4c-3-0.3-5.9-1.5-8.9-1c-5.7,1.4-10.8-1.5-16.2-2.1C1810.8,375.8,1804.7,375.3,1798.9,373.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1817,375.9c5.3,1,10.7,2,16,3.1c0.3,0.3,0.7,0.7,1,1c1.6,1.6,6.3,1.7,3.8,5.2c-2,2.8-5.6,4.2-8.9,0.7      c-1.3-3.3,2.6-2,3.2-3.8c-3.4-1.1-6.8-2.1-10.2-3.2C1820.5,377.8,1817.3,379.1,1817,375.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1842,380c4.4,0.3,8.7,0.6,13.1,1c2.2-0.6,4.5-0.9,6.8-0.7c1.8,0.5,3.5,1.1,5.3,1.7      c0.9,0.3,1.8,0.6,2.7,0.9c1.4,0.6,2.9,0.9,3.5,2.5c-0.5,1.3-1.3,1.4-2.4,0.8c-5.6-1.3-11.2-2.7-16.8-3.9c-2-0.4-4.3-1-6.1,0.7      C1845.8,382.3,1843.6,381.6,1842,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#473B35",
                d:
                  "M1873.8,389.1c-0.3-0.3-0.6-0.6-0.9-0.9c2.3-2.1,4.1-0.2,6.1,0.7c2.5,1.6,4.6,3.8,7.1,5.4      c1.5,1.2,3.3,2.2,5,3.1c1.3,0.9,2.3,2,3.7,2.8c1.8,1.4,3.8,2.7,4.5,5c-0.1,0.8-0.6,1.2-1.4,1.5c-1.6,0.3-2.6-1-3.9-1.6l-0.5,0      l-0.5,0c-2-2.2-4.9-3-6.9-5.1c-2-3.4-6.2-4.3-8.5-7.3C1876.4,391.4,1874.7,390.7,1873.8,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B57557",
                d:
                  "M1886.7,399.1c1.5,2.7,6,2.1,6.4,6c-3.6,1.8-4.2-3.2-7.1-3c-0.4-0.8-1.2-1-2-1c0-0.7,0-1.3,0-2      C1884.9,398.2,1885.8,398.3,1886.7,399.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DCC8AE",
                d:
                  "M1894.1,405.1c1.5-0.4,2.6,0.7,3.9,1c0.8,0.5,2.3,0.2,2.3,1.7c-0.4,1-1.4,0.7-2.2,1      c0.2,0.2,0.2,0.4,0,0.6C1897,407.7,1894.7,407.1,1894.1,405.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A85C37",
                d:
                  "M1898,409.9c1.4,1.7,2.7,3.4,4.1,5.1c-2.6,0-3.7-2.1-5.2-3.7C1896,410.3,1897.3,410.1,1898,409.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F0EBE6",
                d:
                  "M1898,408.8c0.7-0.3,1.4-0.7,2.1-1c0.3-0.2,0.7-0.2,1-0.1c0.5,0.4-0.4,0.4,0.3,0.2      c0.4-0.1,0.2-0.4-0.2-0.4c-1-0.6-1.7-1.4-2.2-2.4c-1.6-1.4-3.3-2.7-4.9-4.1c-0.2-0.9,0.3-1.2,1.1-1.4c3.5,0.3,5.5,3.3,8.4,4.8      c3.9,2.7,8,5.2,11.9,8c1.1,0.9,2.1,1.8,3.1,2.8c0.8,0.8,0.9,0.1,1.1-0.5c0.3-2.9,0.7-5.7,4.6-5.7c1.1,0,2.2,0.2,3.1,0.9      c1.3,1.6,1.1,3.5,1.1,5.3c-0.4,2.2,0.6,4.8-2,6.6c-0.4,0.2,1.3,0.1,1.9,0.6c1.2,0.5,2.1,1.3,2.1,2.8c-0.4,0.5-0.8,0.6-1.2,0.1      c-4.1,0.2-8-1.5-12-2.1c-2.6-1.4-5.3-2.8-7.9-4.3C1905.4,415.4,1901.7,412.1,1898,408.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7D7373",
                d:
                  "M2016,419c-1.4-0.6-2.7-1.2-4.1-1.8c0.3-1,1.3-0.7,2-1.1c1.2,0.4,2.4,0.7,3.2,1.8      C2016.7,418.3,2016.3,418.7,2016,419z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B3A7A9",
                d:
                  "M2013.8,416.1c-0.4,0.9-1.2,0.8-2,1.1c-1.6-0.5-3.1-0.9-4.7-1.4c-0.8-0.5-0.7-1.2-0.2-1.8      c0.3,0,0.6-0.1,1-0.1C2009.9,414.6,2011.9,415.4,2013.8,416.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#565951",
                d:
                  "M1270,207c-3.6-4.6-10.1-4.9-14-9c0.1-2-2-3.6-0.9-5.7c3.5-3,6.5-0.6,8.9,1.5c3.2,2.8,6.6,4.8,10.8,5.4      c5.1,0.8,6.2,4.9,7.4,8.9c0.2,0.4,0.5,0.7,0.8,1.1c2.5,1.3,5.1,2.4,7.8,3.1c1.9,0.5,3.2,0.7,4,3.3c1,2.9,5.3,3.2,7.7,3      c5-0.3,7.4,2.5,10,5.7c-0.8,2.7,0.9,1.2,1.8,1c0.7-0.1,1.3-0.1,2,0.1c2.6,2.1,5.2,4.1,8.4,5.2c4.2,1.5,4.4,3.3,1.4,7.3      c0,0,0,0.1,0,0.1C1307.3,227.7,1288.7,217.3,1270,207z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#51534B",
                d:
                  "M1256,193c-1,1.7,2.8,3.3,0,5c-7.3-3.7-14.7-7.4-22-11c-0.9-4.5-5.2-3.6-8-5c0-1,0-2,0.1-3      c3.6-1.1,6.7-2,10,1.8c2.9,3.3,7.8,4.7,12.2,6C1251.8,187.9,1254.2,189.9,1256,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#504A48",
                d:
                  "M1164.1,304.1c0.1,0.3-33-0.5-33-0.2c-4.7,2.2-9.7,0.5-12.7,0.8c14.6,1.5,31.1,0.1,47.6,1.2      c3,0.8,14.7,2.1,17.5,3.8c-1.1,0.5-7.4,1.1-8.5,0.5c-12.4,0.7-50.8,0.2-56-0.1c-7.6,0.5-196.5-6.2-199-8.9      c-0.7-0.4-9.1-6.5-8.6-6.8c9.2,0.6,130.9,6.7,140.1,6.9c15.2,0.4,48.4,1.8,49.6,1.1C1105.2,302.9,1161.4,303.3,1164.1,304.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1069.6,306.1c5.1,0.3,10.4-1.1,15.4,0.8C1079.8,307,1074.7,307.1,1069.6,306.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1010.7,303.1c4.1,0,8.2-0.1,12.2-0.1c0.3,0.3,0.7,0.6,1,0.9C1019.6,303.9,1015.1,304.2,1010.7,303.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M993.6,302.1c3.8,0.1,7.7-1,11.4,0.8c-3.6,0-7.1-0.1-10.7-0.1C994,302.6,993.8,302.4,993.6,302.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1030.5,304.1c3.8,0.3,7.8-1,11.5,0.8C1038.1,304.9,1034.2,305.2,1030.5,304.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1134.4,308.1c12.4,0,24.7,0,37.1,0C1159.2,309.2,1146.8,309.1,1134.4,308.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1175.8,308.1c1.8-0.4,3.6-0.7,5.2,0.8C1179.2,309,1177.5,308.9,1175.8,308.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0F0D0E",
                d:
                  "M913.7,296.5c-3.2-2.7-4.2-12.6-5.3-16.1c-0.6-1.9-0.9-3.8-1.4-5.7c-1.5-8.1-3.5-16.1-5.1-24.2      c-0.9-4.7,0.3-5.7,5.3-5.2c1.5,1.4,3.4,2.2,5.4,2.1c6.8-0.3,13.6,2.1,20.5-0.8c2.4-1,6.1,0.7,9.2,1c-3.7-0.6-7.5-0.9-11.3-1.9      c3.4-3.3,39.2-3.4,43.1-0.1c-5.3,1.3-10.3,2.4-15.6,0.8c4.4,1.6,9.3,0.1,13.6,2c0.7,0,0.3-0.9,0.2-0.3c0,0.2-0.2,0.1-0.5,0.1      c-0.7,0-1.4,0-1.7-0.7c-0.2-0.5,0.3-1.1,0.7-1.1c1.8,0,3.6-0.8,5.4-0.2c5.4,1.7,10.3,2.2,15.3-1.8c3.2-2.5,7.8-0.4,11.7-1.3      c1.6-0.1,3.6-0.6,4,1.7c0.2,1.4-1.1,1.7-1.4,1.6c5.6-0.3,12,1.2,18.5,1.4c5.4,0.2,10,6.3,9.5,11.7c-0.1,1-0.1,1.9,0.5,2.8      c4.1,5.8,5.7,12.2,4.7,19.2c-0.3,1.8,1.2,2.9,2.1,2.4c3.5-1.8,4.6,1.2,6.9,3.4c0.3-5.6-2-9.7-4-13.7c-3.7-7.4-5.9-15.2-8.8-22.8      c-0.4-1.1-0.5-2.3-0.6-3.4c-0.1-2-0.6-4.3,2.3-4.6c2.4-0.3,5.2-1,6.5,2.1c1.3,2.9,2.9,5.6,4.2,8.8c2.5-3.6-2.6-9.3,3.4-10.9      c2.8-0.7,6.5-1.4,7.9,2.9c2,7,5.7,13.2,8.7,19.7c1.9,4.2,2,9,4.8,13c1.2,1.7,2.2,2.6,4.2,2.8c21.3,2.4,42.7,2.2,64,3.7      c3.4,0.3,6.8,1.3,10.3,1.2c2.5-0.1,4.2,1.8,5.3,4c1.1,2.1,1.7,4.4,2.5,6.6c0.3,1.5,1.7,2.5,2,4.1c0.9,2.3,0,3.1-1.3,3.1      C1153,305.5,916.7,297.4,913.7,296.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#382F2F",
                d:
                  "M1158,298c-0.7-2.3-1.4-4.7-2.1-7c-2.6-5.9-4.2-11.9-4.3-18.4c0.4-2.1,0.4-4.7,3.8-3.4      c0.5,0.3,0.7,0.6,0.9,1.1c0.3,1.2-1.9,2.1-0.6,3.5c0.5,3.9,1.2,7.7,2.8,11.4c0.7,2.2,2.6,2.6,4.5,2.8c0.4,0.1,0.9,0.2,1.3,0.4      c4.1,3.8,10,2.8,14.7,5c1.8,0.9,3.4-0.9,5.1-1.3c2.6-0.3,5,1.1,7.5,0.9c0.8,0,1.6,0,2.3,0.2c1.7,0.9,3.5,0.8,5.4,0.8      c3.1,0.9,6.7-0.7,9.5,1.7c-0.7,1.6-2.5,1.1-3.7,1.8c0.7,0.5,1.5,0.5,2.2,0.8c1.5,0.8,4.1-0.1,4.5,2.7c-12.2,1-24.4,1.5-36.6,0.3      c-1.1-0.1-2.2,0.4-3.4,0.7c-2.1-3.1-4.7-4.8-8.7-3.5C1161.6,299,1159.7,299.2,1158,298z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1166,306c-0.7,0.3-1.4,1-2.2,1c-15.9,0.4-31.8-0.1-47.7-1.1c-0.4,0-0.8-0.5-1.2-1.9      c5.4,0,10.8,0,16.2,0c9.6-0.6,19.1,0,28.6,0C1162.1,303.9,1164.3,304,1166,306z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#382D2B",
                d:
                  "M1227.2,295.9c0.7,0,0.9,0.4,1,1c-3.1,0-6.3,0-10.7,0c8,5.5,17.4,0.1,23.7,6.5      c-9.2,0.2-18.2-1.1-27.2-2.4c-0.1-0.1-0.2-0.3-0.3-0.4c-1.7-1.5-4.6-2.9-3.5-5.2c1.1-2.1,3.8-0.4,5.8,0      C1219.7,296,1223.5,294.9,1227.2,295.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1227.2,295.9c-5.4,0.4-10.9,0.3-16.2-0.8c-0.9,3.1,3.9,2.9,2.9,5.9c-0.7,0-1.3,0-2,0      c-1.2-1.9-3.8-0.1-5.1-1.9c0.2-1.1,0.4-2.1,1-3.1c-2.8-2-6-0.5-8.9-1.1c-1.5-1.1-3.6,0.2-5.1-1c-0.7,0-1.4-0.1-2.1-0.1      c1-2.3,2.7-1.2,4.3-1C1206.5,294.3,1217,293.9,1227.2,295.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1264.1,304.1c-4.3,1.4-8.8,0.6-13.1,0.9c-0.7-1.2-1.2-2.5-1-4c0.3,0,0.6,0,1,0c1.5-1.1,3.5,0.2,5-1      C1259.7,299.5,1262.8,300.1,1264.1,304.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1229.8,296.9c4.3-2.1,8.7-0.5,13.1-0.4c3.4,0.1,5.6-0.3,6.7-4.1c1.1-4,2.9-7.7,4.4-11.6      c0.7,0.5,1,1.3,1.1,2.1c-0.2,3.3-1.3,6.3-3.1,9c-1.1,0.7-0.9,1.9-1,3c-2.8,5.7-7.6,3.3-11.9,3.1      C1235.9,297.6,1232.8,297.2,1229.8,296.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2426",
                d:
                  "M1158,298c4.1-0.1,8.3-2.5,12.4,0.7c1.2,1,1.6,1.9,1.6,3.3c-3.6-1-7.2-2.6-11-1      C1159.7,300.3,1158.6,299.4,1158,298z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1239,298c4.2-0.2,8.8,1.2,11.9-3.1c0.9,5.5-3.2,3.8-5.9,4.2C1243,298.6,1240.7,299.8,1239,298z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484543",
                d:
                  "M1254,312c-0.3,1.4,1.8,2.7-0.1,4.1c-0.6-0.7-1.3-1.4-1.9-2.1c-0.3-1.2-1.9-2.8,1-2.9      C1253.3,311.4,1253.6,311.7,1254,312z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1135,303c1.7-1.4,3.3-1.4,5,0C1138.3,303,1136.7,303,1135,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332C2C",
                d:
                  "M1967,605.1c-0.4,5,4.6,1.7,6,3.9c0,0.3,0,0.7,0,1c-1.4-0.3-2.9-0.9-4.3-0.9c-5.4-0.2-3.8-2.5-1.7-5.1      C1967,604.4,1967,604.7,1967,605.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1430,268c-2.8,2.1-6.1,0.4-9.1,1.1c-0.2,0-0.4,0-0.6,0c-1.4-0.4-2.9-0.9-4.4-1.2      c-9.7-4.5-18.7-10.3-28.3-15.2c-26.3-13.9-52.9-27-79.7-39.9c-0.9-0.7-2.3-1.2-1.9-2.8c2.3-1.7,4.4-0.6,6.4,0.7      c2.7,1.7,5.7,2.7,8.5,4c2.8,1.3,4.6,1.1,5.3-2.2c1.6-0.9,3.3-0.9,5-0.4c2,0.7,2.9,2.6,4.2,4.1c2.2,2.3,4.6,3.7,7.9,2.1      c1.7-0.6,3.4-0.3,4.8,0.7c7.1,5.5,16,7.4,23.4,12.2c6.5,4.3,13.9,7.1,20.3,11.5c3.7,2.6,8.4,3.6,12.4,6.1c2.4,1.5,5.1,2.5,7,4.7      c0.3,0.4,0.7,0.9,1.1,0.9c7.1,0.1,11.5,6,17.5,8.4c1.9,0.8,2.7,2.3,3,3.4C1433.4,268.2,1430.6,266.8,1430,268z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B2B4AD",
                d:
                  "M1374,217c4.4,1.8,8.9,3.3,13.1,5.5c1.3,0.7,2.4,1.6,3.9,1.5c3.2,4.2,8.2,5.8,12.6,8.1      c4.7,2.4,9.3,5.2,14.4,6.9v0c1.7,1.3,3.4,2.6,5,4c12.6,5.9,24.7,12.7,35.7,21.2c1.3,1,5.2,5.7,2.3,9.8c-0.7,0-1.3,0-2,0      c-3,0-6,0-9,0c-0.2-2.2-1.4-4-2.5-5.8c-1-1.5-1.4-1.4-2.2,0.8c-0.6,1.7-1.5,0.9-2,0.2c-0.6-0.9-0.9-2.1-1.3-3.1      c0.7-1.2,3.2-0.3,3.2-2.4c2.4-1.1,4.4,0.4,5.6,0.6c-15.5-7.6-31.8-16.1-47.4-25.7c-8.9-6-18.4-11.1-28.1-15.6      c-1.2-0.6-2.5-1-3.5-1.8c-1.5-1.1-4.6-1.6-3.5-3.9C1369.4,214.9,1372,215.9,1374,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C6CBC4",
                d:
                  "M1430,268c-0.1-1.2,2.7-0.5,1.6-1.8c-0.5-0.6,0.3-3.1-2.3-2c-2.7,1.1-4.1-1.6-5.5-3.2      c-2.3-2.7-4.8-4.5-8.5-4.1c-1.5,0.2-3.2,0-4.1-1.4c-2.9-5-8.6-6.9-12.9-8.5c-7.1-2.7-12.6-8-19.8-10.1c-3.3-0.9-5.3-4.1-8.5-5.5      c-7.9-3.6-16.2-6.4-23.2-11.9c-0.9-0.7-2.5-0.4-3.8-0.6c-5.9-0.6-6.3-0.9-6.6-6.2c2.9-4,5.2-4.1,8.3-0.1c0.8,1,0.6,2.7,2.4,2.8      c7.7,0.6,13.6,5.1,20.1,8.7c4.7,2.6,9.1,5.8,14,8.1c4.4,1.7,8,5.3,13,5.7c1.3,0.1,2.6,0.9,3.5,1.9c3.5,3.9,7.1,6.9,12.8,7.8      c3.2,0.5,5.6,4.3,9,5.9c5.1,2.4,10.4,4.3,15.4,7c1.8,0.9,3.4,1.6,2.5,4c-0.3,0.6-1.1,0.5-1.5,1.1c0.4-0.3,0.9-0.3,1.3-0.4      c0.7-0.2,1.2,0.1,1.7,0.6C1436.1,267.3,1433.2,268,1430,268z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C2C6C0",
                d:
                  "M1437,265c-1.2-4.5-5.7-4.2-8.8-5.9c-5.7-3.1-12.3-4.7-16.9-9.7c-0.7-0.8-1.3-1.6-2.4-1.2      c-4,1.3-6-1.3-8.5-3.7c-2.9-2.9-5.3-6.3-10.8-5.8c-1.9,0.2-6.2-2.9-8.6-5.7c-3.2-1.9-5.8-4.7-9.4-6.2c-2-0.8-4.5-2.1-2.4-5.2      c5.9-0.2,10,4,14.8,6.5c7.2,3.8,14.1,8.2,21.3,12c11.6,6.4,23.2,12.8,34.6,19.4c2,1.1,4.2,2,5.2,4.4c1,3.7-2,1.4-3,2      c-0.3,0-0.7,0-1,0C1439.9,264.9,1438.1,266.1,1437,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#626961",
                d:
                  "M1388,251.9c8.3,3.7,16,8.4,23.9,12.8c1.6,0.9,3.3,1.6,4.9,2.3c1.3,0.9,2.8,1.2,4.1,2l-0.1,0      c0.1,0.3,0.1,0.6,0.1,0.9c-4.7,3-9.8,1-14.8,1.5c-2-1-4.6-1.6-3.6-4.8c0.1-0.3-0.3-0.1-0.4-0.1c-4.6-0.1-7.5-2.7-9.6-6.5      C1391.2,257.3,1387,256.1,1388,251.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4A4744",
                d:
                  "M1405,271c5.3-0.3,10.7-0.7,16-1c2.9,1.8,6.6,2.4,8.3,5.9c-0.8-0.3-1.6-0.5-2.3-0.8      c-2.6-2.5-5.6-0.2-8.5-0.6c-5.3-0.8-10.2-3.1-15.6-3.4C1403.7,270.5,1404.3,270.4,1405,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1437,265c1.4,0.2,2.9-0.5,4,1c-0.7,0-1.3,0-2,0c-1-0.1-2-0.3-3.1-0.4      C1436.3,265.4,1436.7,265.2,1437,265z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5756",
                d:
                  "M709,283.7c-4.7-0.2-9.4-0.4-14.1-0.6c-9-0.8-18-1.5-27-2.3c-2.8-1.1-5.7,0.2-8.5-0.8      c-1.9,0.4-3.7,0.1-5.5-0.2c-2.8-1-5.7,0.2-8.5-0.8c-0.8,0-1.6-0.1-2.5-0.1c-0.1-0.3-0.2-0.5-0.3-0.8c0.3-0.5-0.1-3.7,0.5-3.9      c5.5-1.1,11.9,1.8,17.4,0.6c8-1.2,15.9,0.5,23.8,1c13.6,0.9,27.1,2.2,40.7,2.7c3.7,0.1,7.3,0.4,10.8,1.5c1.5,3.1,0.7,4.4-3,4.6      c-4.6,0.2-9.1-1-13.7-0.7C715.8,284.7,712.5,282.6,709,283.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#555050",
                d:
                  "M569,272.9c-22.4-1.9-44.9-3.4-66.9-8.9c-5.4-1.4-10.7-3.3-15.3-6.8c0.1-0.2,0.2-0.4,0.3-0.6      c0.6-0.7,1.4-1.1,2.3-1.4c1.1-0.4,2.3-0.8,3.5-0.9c7,2.2,13.6,5.7,21.1,6.7c14.2,2.9,28.6,3.4,42.8,5.5c2,0.3,4,0.2,5.8,1      c1.6,1,3.5,1.1,5.2,1.9C568.9,270.3,569.5,271.4,569,272.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5D5754",
                d:
                  "M631.5,278.1c-19.7-1-39.3-2.5-58.8-4.9c0.8-1.2,2.1-1.3,3.3-1.4c1.5,0.1,2.7-0.4,3.6-1.7      c0.8-0.7,1.8-0.9,2.9-0.8c2.9,0.6,5.9,0.3,8.9,0.3c2.9,0.1,5.7-0.1,8.6,0.2c3.2,1.1,6.6,0.6,9.9,0.8c2,0.1,26.1,0.9,34.2,3.5      c8.4,1.2,5.1,3.3-1.1,3.9l0,0C639.2,278.8,635.4,278.7,631.5,278.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#46403E",
                d:
                  "M451.7,225.1c0.8-0.2,1.6,0.9,2.3-0.1c1.4-0.6,2.2,0.5,2.9,1.3c3.9,4.6,8.3,8.6,12.5,12.9      c1,1,2.1,1.7,3.1,2.6c2.7,3.1,6,5.5,9.1,8.3c2.5,2.3,4.2,1.8,6.1-0.3c2.2,2.5,2,4.8-0.5,6.9c-0.2,0.1-0.3,0.3-0.4,0.5      C473,248.9,462,237.4,451.7,225.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#514A49",
                d:
                  "M577.1,272.9c-1.5,0.1-2.9,0.2-4.4,0.3c-0.6-0.1-1.1-0.1-1.7-0.2c-1.5-2.2-2.1-4.5-0.6-6.9      c3.2-1,5.2-2.8,4.5-6.5c-0.2-0.9,0.2-1.9,0.9-2.7c0.5-0.2,1-0.2,1.4,0.1c0.3,0.4,0.6,0.9,0.7,1.4c0.3,1.4,0.3,2.8,0.3,4.2      C578,266,579.3,269.7,577.1,272.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403E3F",
                d:
                  "M571,266c-1,2.3,0.5,4.7,0,7c-0.7,0-1.3,0-2-0.1c-0.3-1-0.7-1.9-1-2.9c-0.7-0.6-1.6-1.2-1.3-2.4      c0.7-1.8,1.1-3.7,1-5.7c0.4-2.8-1.3-6.1,2.1-8.2c0.8,0.5,1.1,1.2,1.4,2.1C571.3,259.3,572,262.6,571,266z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635B59",
                d:
                  "M631.5,278.1c3.8,0,7.6-0.1,11.5-0.1c0,0.3,0,0.7,0,1C639.2,279.1,635.3,279.1,631.5,278.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635958",
                d:
                  "M659.5,280.1c2.8,0.2,5.8-1,8.5,0.8C665.1,281,662.2,281.2,659.5,280.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635958",
                d:
                  "M645.5,279.1c2.8,0.3,5.8-1,8.5,0.8C651.1,280,648.2,280.1,645.5,279.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#262426",
                d:
                  "M817,275c2.5-0.5,2.9,1.5,3.5,3.4c1-5,4.1-7.2,8.9-6c2.6,0.7,4.9-0.4,7.2-0.4c3.5,0,8-2.3,10.5,2.6      c0.9,1.9,3.1,2.3,4.9,2.8c3,0.8,3,3.2,3.5,5.5c-2.3,0.4,0.5,6.7-5.1,3.8c-3.1-1.6-6.1,3.7-10.2,2.5c5.3,1.8,10.6,2.2,16.2,2.5      c-3.5,0.2-7.1,0.3-10.6,0.5c-7.6-0.4-15.1-0.8-22.7-1.2c-1.3-0.9-3,0-4.3-0.8c-3.7-4.4-3-9.5-2.2-14.6      C816.6,275.4,816.8,275.2,817,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484543",
                d:
                  "M818.7,290.1c1.4,0.4,3.2-0.5,4.3,0.8c-27.3,0.2-44.7-5.4-56.3-4.2c-2.4,0.2-4.9-0.3-7.4-0.8      c-1.7-0.9-3.8-0.7-5.3,0.6c-2.8,2.5-40.3-2.1-39-3.9c5.7-2.4,49-1.3,54.7-1c10.9,0.6,21.9,1.1,32.8,2.2c1.4,0.3,2.8,0.9,4.3,0.7      C811.7,284.1,816.1,285,818.7,290.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544E4D",
                d:
                  "M773,287.8c-2.7-0.8-5.4-0.2-8.1-0.4c-2.2,0-4.4,0.1-6.6-0.1c-2.2-1.6-4.8-0.6-7.2-0.9      c-2-0.1-3.9,0.2-5.9-0.2c-0.7-1.7,0.6-1.9,1.6-2.3c1.4-0.3,2.8-0.4,4.2-0.2c1.9,0.4,3.8,0.2,5.8,0.4c0.8,0.1,1.6,0.4,2.3,0.9      c15.1-0.6,30,2.2,45,3.8c-2.5,0.1-4.9,0.2-7.4,0.4"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5B4E4D",
                d:
                  "M764.7,287.2c2.8,0.1,5.6-1,8.3,0.7c-2.5,0-5.1,0-7.6,0C765,287.8,764.7,287.6,764.7,287.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5B4E4D",
                d:
                  "M751.4,286.8c-0.3-0.2-0.5-0.4-0.8-0.7c2.5,0.1,5.1-0.9,7.4,0.7c-0.3,0.1-0.6,0.2-1,0.3      C755.1,287,753.2,286.9,751.4,286.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5756",
                d:
                  "M719.1,283.9c2,0.4,4.1-0.6,5.9,0.9c-1.9,0-3.7,0-5.6,0.1c-0.4,0-0.6-0.2-0.6-0.6L719.1,283.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5756",
                d:
                  "M718.8,284.2c0.2,0.2,0.4,0.4,0.6,0.6c-2.1,0-4.4,0.8-6.4-0.6C715,284.2,716.9,284.2,718.8,284.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#120C0D",
                d:
                  "M1993,436c-1.6,0-3.3,0-6.3,0c2.7-1.2,4.2-1.9,6-2.7c-2.2-1.6-3.9-3.5-6.7-3.3c-1.4,0-2.3-0.7-3-1.8      c-0.3-2.8-2.2-6.1,2.4-7.3c1.8-0.2,3.6-0.1,5.4,0.2c4,0.7,7.8,1.9,11.9,1.3c1.6,0.1,3,0.4,4.2,1.5      C2004.9,430.9,2000.2,434.9,1993,436z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M2006,416c1.3,2.1,4.3,4.5-1.1,5.1c-0.8,0.8-1.8,0.9-2.8,0.9c-3.5-0.8-7-2.1-10.5-2.7      c-0.5-0.1-0.9-0.2-1.4-0.4c-1.1-0.4-2.2-0.8-3.3-1.1c-0.9-0.3-1.7-0.7-2.6-1c-5.9-2.2-12.4-2.1-18.3-4.6      c-0.5-0.2-0.9-0.5-1.3-0.8c-0.4-0.4-0.6-0.8-0.8-1.3c-0.6-3.5,2.1-2.9,4-3.3c3.5-0.4,6.8,1.2,10.3,0.8c0.7-0.1,1.4,0,2.1,0.3      c0.4,0.2,0.8,0.4,1.2,0.7c1.1,0.7,2.2,1.5,3.4,2.1c4.1,1.3,7.8,3.5,12,4.5c2.4,1.9,4.9,0.5,7.3,0      C2004.9,415.1,2005.5,415.4,2006,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#706363",
                d:
                  "M2006,416c-0.6,0-1.2-0.1-1.8-0.1c-3.5-0.9-7.5,0-10.4-2.9c0.2-1.5,1.1-1.6,2.3-1.2      c2,0.4,3.9,0.8,5.9,1.2c1.7,0.3,3.3,0.6,5,0.7l0,0.3c0.1,0.6,0.1,1.2,0.2,1.8C2006.8,415.9,2006.4,415.9,2006,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E0D7D6",
                d:
                  "M2002,421.2c1,0,1.9-0.1,2.9-0.1c-0.5,1.8,5.3-0.9,2.1,2.9c-1.5,0.3-2.9,0-4-1.1c-0.4,0-0.8-0.2-1.1-0.5      C2001.7,421.9,2001.7,421.6,2002,421.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C5656",
                d:
                  "M2013.8,428c-0.5,0.4-0.9,0.8-1.2,0.8c-0.7,0.1-1.3-0.3-1.1-1.1c0.1-0.3,0.7-0.6,1.1-0.5      C2013,427.2,2013.3,427.6,2013.8,428z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3F3837",
                d:
                  "M1971,431c-3.5-0.8-7.1-1.5-9.9-3.9c-1.5-2-0.3-4,0.1-6.1c0.4-0.8,0.9-1.3,1.8-1.5      c4.6,1.2,10.1,0.1,13.3,5c0.3,1-3.5,0.2-0.9,2.3c1.1,0.9,1.4,2.6,0.7,4.1C1974.3,431,1972.7,431,1971,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4A413F",
                d:
                  "M1976,431c-0.6-1.4-1-2.8-1.7-4.1c-1.6-2.8,0.9-1.5,1.8-1.9c3.3-0.6,5.6,1.3,8,3.1      c0.7,0.6,1.4,1.3,2.1,1.9C1982.9,432.2,1979.4,430.9,1976,431z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4645",
                d:
                  "M1962,421.1c-0.3,2-0.6,4-0.9,6c-0.7,0.3-1.5,0.7-2.2,1l0,0.1c-1.7-2.5,0.3-4.5,0.8-6.8      C1960.4,420.6,1961.1,420.1,1962,421.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3F3837",
                d:
                  "M1959.6,421.8c1.8,2.4-1.5,4.1-0.7,6.4c0,0-0.4-0.1-0.4-0.1l-0.4,0.1c-2.1,0.6-2.9-0.2-2.2-2.3      c0.4-1.3,0.8-2.5,1.2-3.8C1957.8,421.2,1958.7,421.2,1959.6,421.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8E8785",
                d:
                  "M1955.9,425.9c-0.1,1.6,0.9,2.2,2.2,2.3c-0.7,0.9-0.9,2.2-2.2,2.6c-0.6-0.6-1.3-1.1-1.8-1.8      C1954.6,428,1955.2,426.9,1955.9,425.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635B59",
                d:
                  "M1954,429c1.1,0,2,0.4,1.8,1.8c-0.6,0-1.2,0-1.8,0C1953.9,430.2,1953,429.7,1954,429z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403B38",
                d:
                  "M1935,675c1.9,1.7-0.6,1.8-1.7,3c2,0,3.4,0,4.7,0c-3.5,2.1-7.4,0.5-11,1c-1.8,1.2-4.2-0.3-6,1      c-0.7,0-1.3,0-2,0C1923.7,676.2,1929,674.4,1935,675z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403B38",
                d:
                  "M1938,678c2.5-2,5.3-0.6,8-1C1943.5,679,1940.7,677.6,1938,678z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C3635",
                d:
                  "M1921,680c1.8-1.8,4-0.7,6-1C1925.2,680.8,1923,679.7,1921,680z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8F8885",
                d:
                  "M1866,369.1c2.5,1.9,5.3,0.6,8,0.9c1.7,0.2,3.6-0.6,5,1c-1.6,1.1-3.5,0.2-5.1,0.6      c-0.1,0.1,0.1-0.1,0.5,0c1.6,0.3,4.5-1,4.6,1.2c0.1,2.9-3,1.3-4.7,1.5c-2.1,0.3-4.2,0.1-6.4,0.1c-7.3,0.1-14.5-0.1-21.7-1      c-1.6-0.2-3.3-0.2-4.5-1.7c-0.2-0.5-0.2-1.1-0.1-1.6c3.7-1.8,7.4-0.3,11,0.3c-4.2-1-8.4-1.5-12.7-1.2c-1.9,0.1-4.1,0.4-5.3-1.8      c-0.1-0.6,0-1,0.4-1.5C1845.3,367,1855.7,368,1866,369.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#887C7B",
                d:
                  "M1835,366c0,0.3,0,0.7,0,1c-5.4,3-10.7,0.4-15.9-0.6c-4.1-0.8-8-1.6-12.2-0.9c-2.2,0.4-4.3,0.4-5.9-1.6      v0c4.6-2.9,10.2-0.9,15-3c1.1,0,2.2,0,3-0.9C1822.6,366.6,1829.6,364.2,1835,366z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4E4340",
                d:
                  "M1840.9,360.9c1.1,0.2,2.4-0.1,3.2,1c-0.7,1-2.1,0.1-2.9,0.9c-2.9,0.3-5.5-0.5-8-1.8      C1835.7,361,1838.3,361,1840.9,360.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B1D1A",
                d:
                  "M1841.1,362.9c0.7-1.1,1.9-0.7,2.9-0.9c1.3,0,2.7,0,4-0.1c0.6,0.1,1.2,0.2,1.8,0.3c0,0.6,0,1.2,0.1,1.9      C1847,363.6,1844.1,363.2,1841.1,362.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8F8885",
                d:
                  "M1819,360.1c-0.4,2.2-1.4,2.5-3,0.9C1816.7,359.9,1817.8,360,1819,360.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2827",
                d:
                  "M2020,597c0-1,0-1.9,0-3c-1.5,0.2-0.8,2.1-2.2,2.2c-0.2-0.1-0.6-0.3-0.6-0.5c-0.1-2.2-0.4-4.7,1.1-6.3      c0.4-0.5,4,0.7,4.3,1.7C2023.3,593.3,2021.5,595.3,2020,597L2020,597z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2827",
                d:
                  "M2020,597c-0.1,1.2-0.5,2.2-1.4,3.2C2017.4,598.3,2018.9,597.8,2020,597L2020,597z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#736965",
                d:
                  "M1918.9,374.1c1.4,1.2,3.2,0.9,4.9,1.1c2,0.6,4.1,1.3,6.1,1.9c0.2,0.3,0.2,0.6,0.1,0.9      c-0.5,0.7-0.1,1.8-1,2.3c-0.6,0.3-1.3,0.4-1.9,0.2c-0.8-0.2-1.6-0.7-2.3-1.2c-0.8-0.7-1.7-1.2-2.8-1.3c-2-0.4-4.1-0.9-6.1-1.3      c-1.9-0.7-3.9-0.4-5.8-0.8c-2-0.6-4-0.7-6-1.1c-1.3-0.4-2.6-0.9-3.2-2.2c0.3-1.4,1.6-1.3,2.6-1.7      C1908.8,370.9,1913.9,372.1,1918.9,374.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#918A89",
                d:
                  "M1939.9,387.1c-3,3.4-0.3,6.1,1.2,8.9c1.8,1.4,2.4,2.9,0.4,4.6c-1.2,0.6-2.4,0.6-3.7,0.2      c-1.7-1.5-0.5-4.1-2.1-5.7c-0.5-1.8-0.7-3.5-0.8-5.4c0-1.6-0.1-3.2-0.6-4.8c-0.2-1-0.3-1.9-0.2-2.9c0.1-0.8,0.4-1.5,1-2      C1936.6,382.4,1938.3,384.7,1939.9,387.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4647",
                d:
                  "M1935,380c0,0.6,0,1.1,0,1.7c-1.1,1-2.4,0.5-3.6,0.4c-1.1-0.4-2.7-0.3-2.4-2.2c0.1-0.7,0-1.5,0.9-1.9      C1930.9,380.5,1934.5,376.4,1935,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1918.9,374.1c-5.3-0.3-10.3-2.5-15.7-2.2c-0.4-0.2-1.1-0.2-1.1-1c2.1-1.7,4.5-0.5,6.8-0.7      c2.7,0.6,5.4,1.2,8.1,1.8c0.5,0.8,1.2,0.9,2,1c0.4,0,0.7,0.3,1,0.5C1919.7,373.7,1919.3,373.9,1918.9,374.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#88847D",
                d:
                  "M1902.1,370.9c0.4,0.3,0.7,0.6,1.1,1c-0.8,0.2-1.7,0.2-2.2,1.1c-5,1.6-9.8,1.6-14-2      c-1-1.4,0.1-2,0.9-2.8c0.3-0.1,0.7-0.1,1,0C1892.8,371.7,1897.5,370.9,1902.1,370.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9A9593",
                d:
                  "M1887,371c4.6,1.4,9.3,1.5,14,2c1,0.3,2,0.7,3,1c-0.2,2.4-2.1,2.1-3.6,2.3c-2.1,0.2-4.3,0-6.3,0.7      c-8.2,1-16.2-1.2-24.3-2c-1-0.1-1.9-0.7-1.8-1.9c3.5,0,6.9,0,10.8,0c-2.1-1.9-4.7-0.3-7.8-2.1c3.5,0,5.8,0,8.1,0      C1881.7,371,1884.3,371,1887,371z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C635C",
                d:
                  "M1405,271c-0.7,0-1.3,0-2,0c-4.2-0.7-8.2-2-12-4c-4-3.4-6.3-9.3-12.9-9c-1.7,0.1-3.3-0.8-4.5-1.9      c-4.4-4.2-10-6.2-15.1-9.1c-1.7-1-3.2-1.8-4.3-3.8c-1.9-3.2-5.7-3.3-8.9-3.3c-3.3,0-5.7-0.8-7.6-3.5c-3.2-4.6-9-6.1-12.8-10.1      c-0.9-1-2.6-0.5-3.9-0.2c-1.3,0.2-2.3,0.1-2.6-1.4c-0.8-2.5-2-3.3-4.8-2.3c-2.5,0.9-8.9-5.5-8.4-8.1c0.3-1.5,2-1.5,3-2.3      c16.1,7,31.7,15,47.4,23c10.9,5.5,21.7,11.4,32.6,17.1c1.7,3.6,6.8,5.9,7.4,8.4c1.7,6.6,7.2,3.7,10.2,6.1      C1400.4,266.9,1406,269.5,1405,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#595E57",
                d:
                  "M1319,224c0.6,2.9,2-0.4,3.3,0.4c1.6,1,5.3-1.6,4.8,3.1c0,0.2,0.8,0.8,0.9,0.7c3.3-2.4,3.7-0.4,3.7,2.4      c3.2-0.1,4.6,2.4,6,4.5c3.6,5.2,9.8,2.7,14.4,4.9c1.7,0.8,2.9,1.3,4,3.5c1.3,2.5,4.9,4.6,7.9,5.2c2.1,0.4,3.5,1.3,5,2.4      c3.8,3.2,7.4,6.8,13.1,6c1.4-0.2,2.6,0.8,3.3,1.9c1.6,2.5,3.2,4.8,6.2,6c1.7,0.7-0.6,1.3-0.6,2.1c-0.7,0-1.3,0-2-0.1      c-4.1-0.3-7.7-1.5-10.9-4.4c-4.4-3.9-9.9-6.2-15.1-8.8c-1.3-0.7-2.6-0.3-3.7,0.5c-0.5,0.1-0.9,0.1-1.4-0.1      c-3.2-5-7.9-8-13.6-9.4c-4-1-8.3-1.3-10.9-5.6c-1.1-1.9-3.6,1.5-5.4,0c-0.6-0.4-1.3-0.7-1.9-1.1c1.6-3.7,1.2-6.2-3.6-6.5      c-2.3-0.1-2.9-4.3-6.4-2.8c-0.9,0.4,1.5-1.8,0-2.7C1316,223.8,1317.4,223.7,1319,224z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#555951",
                d:
                  "M1359,254c0.1-5,3.4-2.1,4.6-1.4c4.7,2.7,10,4.5,14.2,8.2c3.2,2.8,6.6,5.7,11.2,6.2c-3-0.4-6,0.8-9,0      c-4.6-3.4-9.7-5.8-14.8-8.2C1362.7,257.7,1360.1,256.8,1359,254z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#505149",
                d:
                  "M1359,254c6.7,3.4,13.4,6.9,20.1,10.3c1,0.5,0.8,1.7,0.9,2.6c-1.7-0.6-3.3-1.3-5-1.9      c-5.7-2.7-11.3-5.3-17-8c-0.3,0-0.6,0-1,0c-0.7-0.5-1.5-0.9-1.3-2c0.6-0.8,1.3-1.1,2.2-1C1358.3,254,1358.7,254,1359,254z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A4F4F",
                d:
                  "M1979.1,408c-3.7,2.7-7.4-1.2-11.1-0.1c-0.3-0.3-0.5-0.7-0.7-1.1c-1.1-2.1-3.2-1.3-4.8-1.4      c-6.2-0.5-12.4-0.8-18.5-1.8c-0.7-0.5-1.2-1.1-1.3-1.9c1.3-2.5,3.7-1.7,5.8-2c4.5,0,9,1.1,13.5,1.4c1.6-0.8,2.5,2.6,4.2,0.7      c1.5-0.3,2.5,0.6,3.6,1.3c0.4,0.1,0.8,0.1,1.1,0.2c1.7,0.8,3,2.4,5,2.7C1977.3,406.2,1978.6,406.5,1979.1,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#463B3D",
                d:
                  "M1996.1,411.8c-0.8,0.2-1.7,0.3-2.1,1.3c1.1,0.9,3.5,0.4,3,2.9c-4.7-0.8-8.7-3.1-13-5      c0.3-0.4,0.7-0.5,1.2-0.5c0.8,0,1.6-0.1,2.4,0.1c0.7,0-0.1-1,0.1-0.4c0,0-0.1,0.3-0.4,0.3c-0.8,0-1.6,0-2.4-0.2      c-1.3-0.6-2.7-0.6-3.9-1.3l-0.2,0c0.4-1-3.1-3.5,1.2-3c3.3,1,6.6,1.9,9.9,2.9C1993.6,409.4,1995.5,409.6,1996.1,411.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2827",
                d:
                  "M1982,406c-2.8,0,0.5,2.5-1.2,3c-0.6-0.3-1.1-0.6-1.7-0.9c-1.3-0.4-2.6-0.8-4-1.2      c0.3-0.3-0.5-2.9-1.2-3.8C1977.3,402.3,1979.6,404.3,1982,406z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#463B3D",
                d:
                  "M1974,403c0.1,1.4,6.2,0.9,1.2,3.8c-2.2-0.4-3.4-1.9-4.2-3.7C1972,403.1,1973,403.1,1974,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2827",
                d:
                  "M1988,401c1.3-0.6,2-1.6,2.1-3c1.3,1.1,2.6,2.3,4,3.5C1992,402.9,1989.9,403.3,1988,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2827",
                d:
                  "M1974,400.2c3.7,0.3,7.5-1,11,0.8C1981.4,400.6,1977.6,402,1974,400.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E7E3E6",
                d:
                  "M1969.8,403c-1.5,0.5-2.7,0-3.6-1.3c-0.1-1.3,0.6-1.8,1.8-1.7C1968.6,401,1969.2,402,1969.8,403z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4647",
                d:
                  "M2007,413.7c-1.7,0.2-3.6,1-5-0.7C2003.9,411.4,2005.4,413.3,2007,413.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5352",
                d:
                  "M1949.1,401c-2,0.3-4.2-0.5-6.1,0.7c-1.8,0.9-2.1-0.2-2.1-1.7c1.9-1.3,0.6-2.7,0.2-4      c6.7-0.7,13.4-0.8,19,4c-1.9,2-3.9-0.2-5.9,0.1C1952.4,400.3,1950.7,400.1,1949.1,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726867",
                d:
                  "M1949.1,401c3.3-3.8,7.3-1,11-1c0.6,0.4,1.3,0.7,1.9,1.1C1957.7,403.2,1953.4,400.4,1949.1,401z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ADA29E",
                d:
                  "M2022,538.9c-1.5-3.7,3-0.6,2.9-2.8c-2,0-4.1-0.9-5.9,0.8c-4,1-4.2,0.9-3.4-2.2c0.1-0.2,0.3-0.4,0.5-0.6      c0.3-0.3,0.7-0.6,1.1-0.8c1.5-0.5,3.1-0.5,4.6-0.9c0.5,0,0.9,0.1,1.2,0.4l0,0.1c0.9,1.4,3.1,0.6,3.9,2.1      c0.3,0.6,0.6,1.3,0.9,1.9c-0.4,1.7,1.7,3.3,0.3,5c-3.1-0.1-3.1-0.1-4.3-2.7C2023.7,539,2022.6,539.4,2022,538.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#EFDFDA",
                d:
                  "M2022,533c-1.3,2-3.1,0.8-4.8,0.7c-0.7,0.2-1-0.2-1.1-0.9c0.3-0.3,0.7-0.7,1-1c0.3,0,0.6,0,0.9,0      C2019.6,531.3,2021.1,531.2,2022,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#91817E",
                d:
                  "M2026.9,535.1c-1.5-0.4-3.7,0.6-3.9-2.1C2024.6,533.2,2026.8,532.3,2026.9,535.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#867470",
                d:
                  "M2022,533c-1.3-0.4-2.6-0.8-3.9-1.2c2-1.2,3.9-1.9,4.9,1.1C2022.7,533,2022.3,533,2022,533z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ADA29E",
                d:
                  "M2016.1,532.9c0.4,0.3,0.8,0.6,1.1,0.9c-0.1,0.1-0.2,0.3-0.4,0.4c-2.6,2.1-5.9-0.2-8.6,1.3      c-0.5,0.1-0.9,0.1-1.4-0.1c-1-1-3.1-1.1-2.9-3.3c2,0,4-0.1,6-0.1c0.9-0.8,2-1,3.2-1.1C2014.2,531.6,2015.2,532.2,2016.1,532.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6A5F5A",
                d:
                  "M2013.3,530.9c-0.6,1.7-2,1.1-3.2,1.1c0.1-1.1,0.9-1.7,1.9-2.1c0.3,0.1,0.6,0.1,0.9,0.1      C2012.9,530.4,2013,530.7,2013.3,530.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ADA29E",
                d:
                  "M2010.9,547.7c0.1-0.3,0.1-0.7,0.2-1c0.8-0.6,1.7-0.7,2.7-0.6c1.7-0.5,3.8,1.1,5.2-1.1c0-0.3,0-0.7,0-1      c1.1-2.3,3.1-2,5.1-1.9c1.4,0,2.8-0.1,3.9,1c1.3,0.7,2.5,1.7,1.5,3.1c-1.1,1.7-3.1,0.6-4.6,0.9c-0.4-0.5-0.8-0.5-0.9,0.2      c0,0.3-0.1,0.5-0.1,0.8c-2.6,1-5.3,0.7-7.9,0.2C2014.3,548,2012.6,547.9,2010.9,547.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544A4A",
                d:
                  "M2016,548.1c2.6-0.1,5.3-0.1,7.9-0.2c0.7,0.3,1.5,0.6,2.2,1C2022.8,548.7,2019.3,549.9,2016,548.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D0C5C4",
                d:
                  "M2028,543c-1.4,0-2.8-0.1-4.2-0.1c-2.5-1.5-5.5,1.5-7.9-1c1-3.1,3.7-2.8,6.1-3c1.5-0.7,2.8-0.3,4.4,0.6      c-1,0.3-1.8,0.6-2.7,0.9c1.5,1,3.5-0.1,4.5,1.6C2028.1,542.4,2028,542.7,2028,543z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E7DFDD",
                d:
                  "M2024.1,547.2c-0.7-0.5-1.3-1.1-0.4-1.8c0.4-0.3,1.1-0.1,1.7-0.1c-0.1,0.6-0.3,1.1-0.4,1.7      C2024.7,547,2024.4,547.1,2024.1,547.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#555951",
                d:
                  "M1358,254c-0.4,0.8-1.2,1-2,1c-2,0.1-3.5-0.8-5-2l0,0c-2.6-0.9-4.7-2.6-7-4c-5-3.9-11.2-5.8-16-10      c2.2-0.8,4.4-1.6,6.9-2.4c-1.2,5.9,4.4,6.2,6.7,6.4c5.7,0.4,9.6,3.4,14,6.2C1357.6,250.4,1358.2,251.8,1358,254z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1344,249c2.9,0.4,4.9,2.2,7,4C1347.8,253.1,1345.4,251.9,1344,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1351,253c1.7,0.7,3.3,1.4,5,2c0.4,0.7,0.7,1.3,1.1,2C1354.3,256.7,1352.2,255.6,1351,253z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39C93",
                d:
                  "M1953,384c-1,0-2-0.1-3-0.1c-0.3-0.8-1.4-1.8-0.1-2.5c1.5-0.8,2.9,0.3,4.1,0.9      C1954.7,382.7,1953.1,383.3,1953,384z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1817,375.9c1.2,1.7,3.9,1.1,5,3.1c-3.7,1.4-7.4-2.9-11.1,0.1c-2.3-1-4.6-2-6.9-2.9      c-1.3-0.7-2.7-1.4-4-2.1c-0.3-0.3-0.7-0.6-1-0.9C1805.1,373.4,1811.1,374.2,1817,375.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#77706D",
                d:
                  "M1801,364c1,0.2,2.1,0.9,2.8,0.6c7.6-3,14.6,0.8,21.8,1.6c3.1,0.3,6.2,0.7,9.3,0.7      c3.5,1.8,7.4,0.7,11,1.5c2.7,0.6,5.5,0.3,8.4,2.1c-4.5,0.9-8.4-1.5-12.4-0.7c-4.9,2.3-9.7,0-14.6-0.1      c-5.9-0.1-11.7-1.8-17.7-0.7c-2.7,0.5-5.7,0.7-7.6-2.3c-1-1.4-2.8-0.5-4.1-1.2C1798.6,364.4,1800.5,365.4,1801,364z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#928D89",
                d:
                  "M1802.1,366.9c3.5,1.2,6.9,1,10.6,0.5c4.3-0.5,8.8,0.3,13.2,0.8c5.4,0.5,10.7,1.2,16.1,1.8      c0,0.4,0,0.7,0,1.1c-6,2.7-12.3,1.1-18.5,1c-7.3-0.6-14.4-2.5-21.8-1.7c-0.7,0.1-1.3-0.1-1.7-0.6c1.6-2.6-1.8-1.2-2-2.7      C1799.3,367.1,1800.7,367,1802.1,366.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BCB5B0",
                d:
                  "M1799.9,369.8c7.8-1.6,15.4-0.2,23.1,1.1c0.4,0.9,2.5,0.6,1.8,1.8c-0.8,1.5-2.5,0.9-3.9,0.4      c-7.4-0.5-14.8-1.3-22.1-2.9C1799.3,370,1799.6,369.9,1799.9,369.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#837876",
                d:
                  "M1999.2,538.2c0.6-0.4,1.1-0.8,1.7-1.3c3.1-2.1,6.4-1,9.6-0.5c0.6,0.4,0.8,0.9,0.4,1.5      c-1,0.5-2,1-3.4,1.8c1.8,0.2,3.1,0.3,4.5,0.5c-3.8,0.4-7.5,2.1-11.1-0.2c-0.2-0.9-1-1-1.7-1.2l-0.4-0.3L1999.2,538.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F4EBEA",
                d:
                  "M2015.9,541.9c2.6,0.6,5.4-0.9,7.9,1c-1.6,0.3-3.2,0.7-4.9,1c-4.5-0.2-9-0.4-13.4-0.6      C2008.9,541.4,2012.5,542.3,2015.9,541.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CEC9C9",
                d:
                  "M2010.9,537.9c0-0.3,0-0.6,0-0.8c-0.5-0.8-0.5-1.6,0.2-2.3c2-0.2,4-0.6,5.9,0.2      c-0.1,0.8-1.6,1.2-0.8,1.8c0.6,0.5,1.9,0.2,2.8,0.2C2016.4,538.6,2013.8,539.6,2010.9,537.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F7F2F0",
                d:
                  "M2019,545c0.9,0.3,2.4-0.2,2.5,0.9c0.2,1.4-1.2,1.1-2.1,1.1c-1.8,0-3.6-0.1-5.4-0.2      c-0.1-2.3,2.4-0.5,2.9-1.8C2017.7,545,2018.3,545,2019,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F4EBEA",
                d:
                  "M2017,545c-1,0.6-1.9,1.2-2.9,1.8c-1,0-2-0.1-3-0.1C2012.5,543.9,2015,545.5,2017,545z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F3EFEC",
                d:
                  "M1999.2,538.2c0,0.2,0,0.4,0,0.6c-0.2,1.4-0.1,3.5-2.2,3.1c-2.4-0.5-4-2.1-3.9-4.9      C1995.1,537.3,1997.4,536.1,1999.2,538.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524B4A",
                d:
                  "M912.8,296.8c2.3,0.7,5-0.7,7.2,1.1c-3.4,0.1-6.9,0.3-10.2-0.7C910.8,297,911.8,296.9,912.8,296.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B3635",
                d:
                  "M2031,561c-6.7,1-13.3,2-20,3c-1.9,1.2-4.2-0.3-6,1c-1.5-0.1-2.8,0.3-4,1c-2,0.6-4,1.1-6,0      c1.5-1.5,2.9-3.3,5-4c0.2,2.2,1.5,1.4,2.8,1.2c8.9-1.4,17.8-2.8,26.7-4.1c1.1-0.2,2.2,0,3.4,0C2033,560.5,2031.7,560.5,2031,561      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#544C47",
                d:
                  "M1983,553c1.8,1.7,4,0.7,6,1c3.1,2,6.4,2.6,10,2c1.2,2.4-0.5,3.1-2.1,4c-3-4.2-8.2-3.3-12.2-4.9      c-1.2-0.5-2.7,0.2-3.7-1C1981.6,553.7,1982.3,553.4,1983,553z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2827",
                d:
                  "M1995,566c2,0,4,0,6,0c-2.8,1.7-5.9,2.1-9,2C1993,567.3,1994,566.6,1995,566z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C7BCB8",
                d:
                  "M2004.1,532.1c0.6,1.2,3.1,0.6,2.8,2.8c-0.4,0.7-1.1,1-1.8,1c-2.1,0.2-4.1-0.6-6.1-1.1      c-0.3-0.3-0.7-0.6-1-1c0-0.9,0-1.9,0.1-2.8C1999.8,532.8,2001.9,532.8,2004.1,532.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B9292",
                d:
                  "M2004.9,535.1c0.7-0.1,1.3-0.2,2-0.2c0.4,0,0.7,0.1,1.1,0.1c1-0.3,2.1-0.3,3.1,0c-0.1,0.7-0.1,1.4-0.2,2      c-3.3-0.1-6.7-0.1-10-0.2c0-0.2,0-0.5-0.1-0.7C2001.9,534.7,2003.7,536.2,2004.9,535.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#877E7B",
                d:
                  "M2004.9,535.1c-1.1,1.4-2.8,0.7-4.1,1.1c-0.6-0.5-2.3,0.6-1.8-1.3C2001,533.8,2002.9,534.9,2004.9,535.1      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#170D0D",
                d:
                  "M1255,261c-0.2,2.6-2,0.6-2.9,1c-5.9-2.1-9.8-7.4-15.4-9.9c-0.4-0.2-0.8-0.4-1.2-0.7      c-1.1-0.9-2.4-1.4-3.6-1.9c-4.9-2.7-10.1-5.1-15.3-7.1c-2-0.8-4-1.6-1.3-4c3.7-0.9,7.2-2.2,11-2.7c2.3-0.2,4.6-1.9,6.8,0.3      c5.8,1.9,10.3,6.3,16,8.3c2.7,1-1,2.9,0.9,3.7c0.8,0.1,1.4,0.5,1.8,1.2C1252.9,253.1,1254.6,256.9,1255,261z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1C1918",
                d:
                  "M1233,236c-2.3-1.2-4,0.9-6.1,1c-2.5-3.1-6.1-4.6-9.4-6.4c-6.6-3.5-12.8-7.7-19.7-10.6      c-3.1-1.5-5.9-3.6-9-5c-1.5-0.7-2.8-1.6-4.2-2.4c-5.4-2.4-10.5-5.4-15.8-7.9c-6.9-3.4-13.9-6.5-20.8-9.9      c-4.2-2.3-8.7-3.9-13-5.8c-1.8-0.7-3.5-1.6-5.3-2.3c-3.2-1.9-7.6-1.7-9.6-5.8c1.1,0,2.3,0.2,3-1c12.1,3.9,23.4,9.6,34.9,14.8      c9.9,4.4,19.6,9.2,29.1,14.3c1.1,0.2,2,0.6,3,1c0.7,0,1.3,0,2,0c-0.7,2.9,2,3.6,3.5,4.4c12.5,5.9,24.2,13.3,36.3,20.1      C1232.3,234.8,1232.6,235.5,1233,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4D484A",
                d:
                  "M1250.9,249.1c-0.4-0.4-0.7-0.7-1.1-1.1c0.5-0.8,1.2-1,2.1-1c1.6,1.2,2.9,2.7,5,3c1.2,0.4,2.4,0.8,3,2      c7.6,6.2,16.5,10.4,24.6,15.9c14.4,9.8,29,19.3,43.5,29c-2,2.2-3.1,0.1-4.5-0.9c-4.5-3-8.6-6.6-13.6-9c-1.8-0.8-2.7-3.1-5-3.1      c-1.1-0.5-2.4-0.8-3.4-1.4c-0.8-0.4-1.6-0.7-2.4-1.2c-8.4-6.6-17.8-11.6-26.8-17.2c-6.1-3.8-11.8-8-18.1-11.5      C1252.8,251.8,1252,250.4,1250.9,249.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2828",
                d:
                  "M1190,210c-1.4,0.8-2.4,0.6-3-1C1188.7,207.2,1189.2,208.9,1190,210z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2828",
                d:
                  "M1298,269c-4.5-0.1-7.1-3.3-10-6C1291.9,264.1,1295.3,265.9,1298,269z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2828",
                d:
                  "M1288,263c-3.4,0.6-5.3-1.6-7-4C1283.7,259.7,1286.3,260.5,1288,263z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484445",
                d:
                  "M810,181c0.3,0,0.6,0,1,0c0,3.3,0.1,6.7,0.1,10c0,1,0,2-0.1,3c-0.6,0.3-1.1,0.2-1.5-0.3      c-0.8-1.3-0.9-2.7-0.9-4.2C808.9,186.6,807.9,183.6,810,181L810,181z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#625F61",
                d:
                  "M846,223c0,0.8,0.2,1.6,1,2c0,0.3,0,0.7,0,1c-0.3,1.3,1.1,2.7,0,4c-0.5,2.1,1.3,4.7-1.8,6.1      c-1.5,0.7-0.5,1.4,0.5,2c1.5,0.9,0.8,1.3-0.3,1.9c-5.4,3-11.5,3.8-17.2,3.3c-2.9-0.2-6.4-0.7-9.2-1.5c-3.2-0.9-2.6,1.6-3.8,2.2      c-0.4-0.3-0.7-0.7-0.9-1.2c-0.2-0.7-0.3-1.5-0.4-2.3c0-1.9-0.4-3.7-0.9-5.4c-0.5-3.8-0.1-7.8-1-11.6c-0.4-1.6-0.2-3.3,1.2-4.5      c0.2-0.1,0.3-0.1,0.5-0.2c-0.3,3.3,4.4,4.8,2.9,8.6c-1.1,2.7,0.2,4.9,1.2,7.5c1.4,3.6,3.4,3,6.2,2.5c3.1-0.5,5.9,2.1,9.1,1.7      c0.8-0.1,1.8,0.6,2.4,0.3c2-1,3.4-2.4,2.4-4.9c1.7,0,4.1,1.5,4.4-1.8C842.5,229,845.2,226.4,846,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#494749",
                d:
                  "M813.1,219c-0.1,5.7,1.5,11.3,1,17c1.1,1.5-0.3,3.5,0.9,5c0,0.7,0,1.3,0,2c-0.5,0.3-1,0.4-1.5,0.1      c-0.7-0.5-1.1-1.1-1.4-1.9c-0.7-2.8-0.1-5.9-1.1-8.7c-0.7-5-0.1-10.1-1.3-15c-0.1-0.6-0.1-1.1-0.1-1.7c0.1-2.4-0.1-4.9,0-7.3      c-0.1-2.5,0.5-5-0.5-7.5c-0.6-1.2-0.6-2.4-0.4-3.7c0.2-1.2,0.2-2.5,1.4-3.4c0.3,0,0.6,0,0.9,0      C812.4,202.3,812.5,210.6,813.1,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#63605F",
                d:
                  "M852,180c1.7-3.1,1.7-6.6,2.3-10.2c1.8,0.3,3.4,1.8,5.4,0.2c2.8-2.2,5.6-1.1,7.3,1.6      c3,4.7,6.4,4.2,10.5,1.8c1.6-0.9,4-3.1,4.3,1.4c2-1.5,0.5-2.7,0.4-3.8c-0.2-1.8,0.8-1.4,1.8-1c4,4,3,9.6,4.4,14.4      c0.7,2.4,1.9,5.1-0.2,7.6c-3.2-3.8-3.5-8.3-3.5-13.3c0.3,5.6-2.1,7.3-7.1,5.6c-0.7-1.7,1.8-2.3,1.2-4c-0.8-2.2-6.3,0.4-10.9,5.5      c-0.2-3.6-3.6-4-5.2-6.5c-1-1.5-4.8-1.2-5.3,0.7c-1.2,4.6-7,7.6-4.7,11.7c0.7-1.7-3.5-5.3,1.4-8.4      C855.7,182.4,851.2,182.1,852,180z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2E2B2B",
                d:
                  "M888.1,192c-0.7-7.5-2.5-14.7-4.1-22c0.1-3.2-0.7-6.2-1.9-9.1c-1.9-3.8-3.4-7.6-1.2-11.9      c1.9-1.8,1.2-3.9,0.6-6c-0.5-1.7-0.7-3,1.6-3c2.1,2.6,0.6,6,1.8,8.8c0.6,4.3,1.1,8.6,1.9,12.8c0.6,3.4,1.2,6.7,2,10      c0.4,1.8,0.5,3.6,1.1,5.3c0.5,3.4,1,6.7,2,10c0.5,3.2,1.5,6.3,1.4,9.6c0,2.1-0.1,4.3,0.5,6.3c0,0.7,0.1-0.2,0.1,0.5      c0,1.3,0.3,3-1.2,3.3c-2,0.3-0.6-2.1-1.7-2.8c-0.3-0.4-0.7-0.7-1-1.1C890,199.2,889.3,195.5,888.1,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#626061",
                d:
                  "M781.1,145c8.3,0.4,16.6-1.8,24.9-1c-0.3,1.1-0.8,2.2-0.9,3.3c-0.3,3-2.5,4.2-5.7,3.5      c-1.6-0.4-3.5,0.7-5.2,0.8c-2.4,0.2-4.7,1.8-7.3,1.1c0.2-1.3,1.5-0.5,2-1.3c-1.4-0.8-3.7-1.1-4.1,0c-1.7,5.7-3.9,1.4-5.9,0.5      c0.3-0.3,0.8-0.4,1.2-0.5c-0.5,0-0.9,0.1-1.2,0.5c-1.1,0.3-2.3,0.5-3.3,1c-1.9,0.8-3.5,6.9-5.8,0.3c-0.2-0.5-1.5,0.1-1.8,1      c-0.5,1.4-1.5,2.8-1.5,4.2c-0.1,5.1-3.8,3.7-5.3,2.2c-2.8-2.9-4.6-1.8-6.8,0.3c-1.3,1.2-2.4,3.1-3.9-0.2      c-0.8-1.8-2.9-2.3-4.6-0.4c-2.3,2.5-4.8,2.7-8,1.8c-1.9-0.6-4.4-0.7-5.6,1.8c-0.1,0.3-0.5,0.7-0.6,0.7      c-6.1-1.5-9.5,6.7-15.8,4.3c-2.9,1.9-6.1,1.2-9.2,1c-1.2-0.1-2.3-0.8-3.4-0.4c-7.9,3-16.1,1.5-24.1,1.9      c-1.3,0.1-2.5-0.2-3.5,1.2c-5.6,7.1-12.9,7.6-20.9,5.1c-0.8-0.3-1.8-0.7-2.4-0.2c-3.1,2.7-7.4,1.3-10.8,3.1      c-2,1.1-4.4,2.1-5.8-1.2c-0.7-1.8-1.1,0.1-1.6,0.4c-2.2,1.2-4.7,4.3-5.6-1.1c-0.2-1.2-1-0.1-1.4,0.1c-7.8,2.3-16.1,2.8-23.6,6.3      c-0.3,0.1-0.7,0.2-0.9,0.5c-4.7,7.7-12.1,1.9-18.1,3.6c-1.5,0.4-3.3-0.5-4.3-2.1c-0.7-5.4-0.3-5.1,4.5-4.7      c5,0.4,10.3,0.1,14.6-3.5c0.1-0.1,6.6-1.8,6.7-1.7c0.7,0.4,1.7,1.1,2.3,0.6c4.9-3.8,11.7-3.3,16.6-7.5c2.8-2.4,7.3-1.9,11.1-2.2      c5-0.5,10-0.2,15-0.1c2.2,0.1,4.9-1.3,6.1-1.2c4.7,0.5,8.3-4.8,13-1.9c0.1,0.1,0.1-0.2,0.4-0.5c6-5.9,13.7-2.1,20.7-3.3      c0.3-0.1,0.4-1.4,0.1-3.4c-4.7,5.4-11.3,2.8-16.8,4.3c-1.4,0.4-3.1-0.5-3.6-2.1c-0.5-1.4,1.4-1,1.9-1.7c11.7-1.7,23.3-3.5,35-5      c16.6-2.1,33.3-3.9,49.9-5.8c5.9-0.6,11.9-0.9,17.9-1.4C777.6,145.8,779.5,146.3,781.1,145z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#68676A",
                d:
                  "M714,172c5.3-0.9,10.7,2,15.9-0.1c5.4-2.1,11.1-2.2,16.7-3.4c4.4-0.9,8.7-0.7,12.9-1.8      c2.4-0.6,6.1,0.1,6.7-3.9c1.3,1.4,3.2-3.8,4.2,0.4c3.3-1.3,7.8,0.1,10.2-3.1c1.3-1.7,1.5-1.2,3.2-0.8c2.4,0.6,5.7,2.6,7.6-1.8      c0.3-0.7,5.1-0.3,7,0.8c1.5,0.9,3.1,1.6,4.6,2.6c1.4,1.1,3.1,1.9,2.7,4.1c-0.1,0.4-0.3,0.8-0.6,1.2c-0.9,0.8-1.9,1.7-2.7,2.6      c-0.4,0.3-0.7,0.4-1.2,0.4c-1.4-0.5-2.6-1.3-2.5-3c0.5-0.4,0.3-0.4-0.1-0.1c-0.5,0.4,0.1-0.2-0.4,0.2c-4.4,0-8.5,2.1-12.9,1.7      c-1-0.1-2.4-0.6-2.9,0.1c-3.1,4.3-5.2,1.1-7.4-0.7c0,0.5,0-0.7-0.1-0.3c-0.2,1.2,1,3.8-1.4,3.1c-3.2-0.9-6.1,0.7-9.3,0      c-3.3-0.7-6.8,0.1-10.1,1.7c-4,1.9-8.2,3.7-12.9,2.5c-1.7-0.4-4.3-0.9-4.7,1.4c-0.8,3.6-3.6,3.9-6,4c-4.5,0.1-8.7,4.5-13.4,1.4      c-3.7-2.4-7.3-1.9-11.1,0c-2.4,1.3-5.6,0.2-7.7,1.2c-4.1,2-7.7,3.4-12.1,1.4c-1.7-0.8-2.4,0.3-2.5,2.3c-0.2,3.5-1.5,6.1-5.7,3.2      c-2-1.4-4.6,0.1-6.4,0.2c-4.2,0.3-9.3-0.3-12.7,3.7c-0.7,0.7-2.2,1.2-2.8,0.6c-3.2-3.1-5.7-0.1-8.3,0.9      c-1.8,0.6-3.1,0.4-4.2-1.4c-0.2-0.4,1.5-1.7-0.4-1.1c-7.6,2.3-15,5.1-23,5.7c-0.7,0-1.4,0.6-1.9,0.3c-3.9-2.2-7.6-0.5-11.4,0.2      c-1.3-0.8-2.8-1.5-4.2-1.1c-4.4,1.4-8-2.9-12.6-1.2c-2,0.7-1.5-2.1-0.8-3.6c1.3-2.1,3.2-2.8,5.6-2.3c2,0.4,4,0.3,5.9,0.8      c3.1,0.8,5.2,0.2,5.9-3.3c0.2-1.3,0.6-2.8,2.2-3c1.7-0.2,2.1,1.4,2.6,2.6c1.7,4.3,4.7,1.6,7.1,1.4c6.6-0.7,13-3.5,19.8-2.2      c0.3,0.3,0.6,0.6,0.9,0.9c-0.2-0.2-0.3-0.4-0.5-0.7c0.9-2.1,2.8-2.6,4.6-3.2c2.5-0.8,4.1,0.2,4,3c0.4-0.1-0.1-0.3,0-0.5      c3-2.4,6.7-2.1,10.1-2.5c6.8-1,13.4-2.1,19.5-5.7c3.1-1.9,7.1-1.6,10.6-1.6c4.7,0.1,8.7-1,13.1-2.7      C704.7,171.9,709.3,168.8,714,172z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#656366",
                d:
                  "M648,187c-0.6-0.1-1.3-0.2-1.9-0.3c0.7-4.8-1.8-2.6-3.7-1.6c-1.2,0.6-2.3,1.3-3.4,1.9v0      c-4.5,0.7-9.1,1.8-13.3,2c-3.3,0.2-6.4,2.5-9.5,1.5c-2.3-0.8-1.8,2.2-3.5,2.1c-1-2.3-2.9-4.3-2.9-7.1c-0.7,0.2-1.2,0.3-1.3,0.4      c-2.6,7.9-2.6,8-12.8,5.8c-2.4-0.5-4.2-0.7-5.7,1.4c-2.9-0.9-5.5,1.1-7,2.4c-3.4,2.9-4.3,0.8-5.7-1.6c-0.6-1.8-0.6-3.6-0.4-5.4      c0.1-1.3,0-2.9,1.6-3.3c1.2-0.3,1.4,1.7,2.6,1.9c2.8,1.5,5.8,1.2,8.8,0.6c1-0.2,2.3-0.8,2.8-0.4c5.2,4.2,7-0.9,9.7-3.4      c0.3-0.3,0.4-0.7,0.5-1.1c2.6,3.8,3.8-0.4,5.5-1.1c6.4-2.4,13.4-2,19.8-4.4c0.6-0.2,1.6-0.2,1.9,0.2c2.4,2.7,2.3,2.7,5.3-0.6      c0.3-0.3,0.8-0.5,1.8-1c-1.7,6.6,1.4,5.3,4.7,3.4c3.4-1.9,8.1,0.3,10.8-3.7c0.4-0.6,1.5,0.6,2.1,0.7c1.5,0.2,3.4,4.8,4.8-0.3      c0.3-1.1,1.2,0.3,1.8,0.7c2.3,1.5,4.7,3.2,6.8-0.2c0.6-1.1,1.4-1.4,2.4-1c1.2,0.4,1.9-0.2,2.6-0.9c4.8-4.1,4.9-3.5,11.9-3.9      c4.7-0.3,9.6,1,14.4-1.3c5.2-2.6,11,0.8,16.6-0.2c-0.7,1-1.3,2-2,3c-4.1-1.5-7.5,2.5-11.5,1.6c-0.4-0.1-1,0-1.3,0.3      c-3.8,4.2-8.6,2.9-13.4,3.3c-3.6,0.3-7.8-0.6-11.1,2.2c-2.9,2.5-7.8,1.4-10,5.3c-2.8-2.6-5.8-0.2-8.7-0.2      C654.5,184.5,651.3,186,648,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6C6E",
                d:
                  "M805,166c0.4-2.1-1.1-3.4-2-5c2.8,2.2,3.6-0.4,4.9-2c0,2,0.1,4,0.1,6C807.3,166.1,806.5,167.1,805,166z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4B4848",
                d:
                  "M908,275c1.3,5.3,2.7,10.7,4,16c-0.2,1.4,0.5,2.9-0.7,4.6c-3.6-5.1-2.9-11.3-5.3-16.6      c-0.1-4.2-1.4-8.1-3-12c0.5-3.6-2.1-6.5-2-10c-0.3-0.7-0.7-1.3-1-2c-0.3-1.7-0.7-3.3-1-5l0,0c0.4-0.6,0.7-1.4,1.7-1.2      c3.3,4.4,2.8,9.9,4.3,14.8C906.2,267.4,906.5,271.3,908,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383638",
                d:
                  "M908,275c-3.9-6.5-4.1-14.1-6-21.1c-0.5-1.8-0.6-3.6-2.1-4.9c-1.3-2.5-1.1-5.4-2-8c0,0,0,0,0,0      c0.1-3.5-0.6-6.8-2-10c0-3.2-0.4-6.2-2-9c-1-6-2-12-3-17.9c0.5,0.7,0.9,1.3,1.7,2.5c0.1-1.5,0.1-2.5,0.2-3.5      c0.2-0.1,0.4-0.2,0.6-0.3c0.5,0.1,0.8,0.4,1.1,0.8c0.6,1.5,0.6,3.2,1.2,4.7c0.4,1.4,0.6,2.8,1.1,4.1c0.4,1.7,0.5,3.4,1.1,5      c0.9,5,2,10,3,15c0.3,1.9,0.5,3.8,1.1,5.7c0.2,0.9,0.4,1.8,0.6,2.6c0.1,0.4,0.2,0.8,0.3,1.2c0.2,1,0.7,1.8,1.9,1.9      c1.1,0.2,2.3,0.2,3.1,1.1c0.2,0.9-0.1,1.3-1.1,1.2c-4.1-0.6-4.8,1.2-3.9,4.8C905,258.8,907.1,266.8,908,275z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575352",
                d:
                  "M880.9,149.1c0.4,4,0.8,7.9,1.2,11.9c-1.9,1.2-0.4,3.5-1.5,5c-1-0.7-0.5-1.8-0.6-2.6      c-0.2-1.3-0.4-3.3-2-2.8c-2.1,0.8-0.2,2,0.4,2.9c0.7,1,0.4,1.9-0.7,2.4c-0.6,0.3-1.2,0.7-1.8,0.8c-2.1,0.3-0.3,4.5-3,3.5      c-3.7-1.3-7.9-2.7-9.5-6.7c-1.1-2.8-4.4-4.8-3.5-8.5c-6-1.5-1.5-7.6-4.7-10.7c-1.5-1.4,1.7-3,2.2-4.9c0.2-0.6,1.6-0.9,2.5-1.3      c6.3,0,12.6,0,19,0c0,0.3,0.1,0.6,0.1,0.9c1.1,1.5-0.2,3.5,1,5C880.2,145.7,879.4,147.6,880.9,149.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#605C5D",
                d:
                  "M861,220c0.1,0.8,1.3,1.6,0.3,2.5c-0.1,0.1-0.7,0-0.8-0.1C859.8,221.4,860.2,220.6,861,220L861,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5C5D",
                d:
                  "M581,187c-2.2,3.5-1.7-0.5-3-1.6c0,3.3,0,5.9,0,8.6c1.1,1.9,1.3,3.9,1.3,6c0,2.9,0,5.8,0,8.7      c0,2,0,4.1,0,6.1c0,1.5-0.1,3-1.2,4.2c-0.6,0.2-1.2,0.1-1.6-0.4c-1.6-3.2-0.8-6.6-1-9.9c0.1-6.2,0-12.4,0-18.6      c0-3.4,0-6.8,0.1-10.2c0-2,0.3-3.9,2.4-4.9c4-1,8-2,11.9-3c1.5-1.2,3.6,0.2,5.1-1c11.9-2.1,23.8-4.4,35.7-6.4      c14-2.4,28-5.1,42.2-6.6c-2.8,3.8,2,3,2.2,2.8c4.4-3.3,10.8,2.1,14.7-3.5c0.4-0.6,2.5-0.1,3.8-0.2c-3.2,2.5,2.6,3.5,1,5.8      c-0.7,1.1-2,1.3-2.5,0.5c-2.2-3.7-5.2-1.6-8-1.5c-3.4,0.2-6.6,1.8-10.2,1.2c-3.3-0.5-3.2,2.6-3.2,5c-1.8-0.9-0.9-4.3-2-3.5      c-1.6,1.4-4.8-0.9-5.1,2.4c-0.1,0.9-1.2,2-1.4,1.6c-3.3-5.4-5.4,1.4-8.1,0.7c-3.8-1-7.6-0.7-11.4-0.4c-4.2,0.3-9-2.1-12.7,2.2      c-0.7,0.9-1.8-0.3-2.4-1.1c-0.6-0.8-1.5-1.1-1.9,0c-2.1,5.2-7.2,4.2-11.1,5.3c-1.5,0.4-2.2,1.3-3.2,2.1      c-1.6,1.5-3.6,1.9-5.5,1.4c-2.1-0.5-2-0.8-2.3,1.4c-1.1,0.6-4-6-3.7,0.9c0,0.8-1.8,1.6-3,1.2c-3.5-1.2-6.5,0.1-9.4,1.7      c-1.2,0.6-2.2,0.7-3.2-0.1C579.6,179.7,581.4,184.9,581,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#161516",
                d:
                  "M576.9,190c0,6.3,0,12.7,0,19c-1.9,0-2.2-1.5-2.2-2.8c-0.1-11.4-2.3-22.8-0.8-34.2c3-0.6,6-1.3,9-1.9      c-0.1,1.9-1.7,1.6-2.9,2.1c-1.5,0.6-3.9,0.3-4.1,2.8C577.3,179.9,575.7,185.1,576.9,190z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292728",
                d:
                  "M576.9,190c-2-4.9-0.4-10-0.9-15c0.7,0,1.4,0,2,0C575.8,179.9,577.7,185,576.9,190z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#161516",
                d: "M594,169c3.2-2.7,7.5-1.5,11-3C602,169.3,597.9,169,594,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#161516",
                d:
                  "M595.1,171c-1.5,1.4-3.4,0.8-5.1,1C591.4,170.3,593.4,171.2,595.1,171z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#262426",
                d:
                  "M816,267c0.3,0.3,0.7,0.7,1,1c0,1,0,2,0,3c1,1.3,0,2.7,0,4l0,0C813.4,272.7,814.4,269.9,816,267z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C595A",
                d:
                  "M701,147c0.7-0.7,1.3-1.3,2-2c0.7,0,1.3,0,2,0C704.7,147.7,702.6,146.8,701,147z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C595A",
                d:
                  "M737,144c0,0.3,0,0.6-0.1,0.9c-1.6,0-3.3,0-4.9,0C733.4,143.3,735.3,144.2,737,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5A5A",
                d:
                  "M820.7,160.6c-0.1-0.3-0.5-0.6-0.5-1c-0.1-0.5,0.2-1,0.7-0.8c0.3,0.1,0.7,0.6,0.8,1      C821.8,160.4,821.4,160.6,820.7,160.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#525052",
                d:
                  "M898,241c1.4,2.5,2,5.2,2,8c-0.3,0.3-0.7,0.7-1,1C898.7,247,897.5,244.1,898,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#646060",
                d:
                  "M847,230c0.4-1.3-1.8-2.7,0-4C848.4,227.3,848.4,228.7,847,230z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#454345",
                d:
                  "M814,243c0.3,0,0.6,0,1,0c0,0.3,0,0.6,0.1,1c0,0.7,0,1.3,0,2c0,1-0.1,2.1-0.1,3.1      c-0.6,0.2-1.1,0.1-1.5-0.4C812.6,246.7,812.4,244.7,814,243z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151318",
                d:
                  "M814,248.9c0.3,0.1,0.7,0.1,1,0.2c0,1.6,0.1,3.3,0.1,4.9c0.3,4.3,0.6,8.7,1,13c0.4,2.7-1,5.5,1,8      c0.2,5-0.2,10.1,1.9,14.8c-4.3-5.2-10.7-3-16-4.8c3.3-2.4,6.8-1.1,10.3-0.5c-3.2-0.7-4.6-1.9-1.7-4.7c1.7-1.6,2.3-3.8,1.9-6      c-1-6.7,0.4-13.7-1.9-19.9c-1.1,1.9-2.9,2.8-5.6,2.6c-3.1-0.3-6.3,0.4-9.4,0.4c-2.9,0-2.9,0.1-4.7-3c-0.3-0.4-5.5,0.8-6.1,1.1      c-2.8,1.6-2.2,5.3-4.8,7.2c-2.1,1.4-3.6,1.7-5.2,0.1c-1.7-1.7-3.6-3.7-2.3-6.5c0.4-0.8,1.5-0.3,2.2-0.5c0.7,0-0.2-0.9,0.1-0.3      c0.1,0.2,0,0.3-0.3,0.3c-4.2,0.4-8.7,0-11.2,4.7c-0.9,1.7-2.7,2-4.4,1.4c-8.1-2.5-16.4-1.5-24.6-1c-7.4,0.5-14.8-0.6-22.2-0.2      c-6.6,0.4-13,3.3-19.7,1.5c-2.1-0.5-4.4-0.2-5.9-2.1c-1.1-2.1-4.5-0.9-5.3-3.5c1.1-1.7,2.9-1.5,4.6-1.7      c19.8-1,39.6-2.4,59.3-3.9c11.4,0.2,22.7-1.4,34.1-2.2c8.9,0.7,17.6-1.6,26.4-1c2,0.1,4-0.1,6,0.4      C812.9,248.2,813.5,248.5,814,248.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575354",
                d:
                  "M857,136c1.5-1.6,3.5-0.9,5.2-0.9c19.8,0,39.6-0.3,59.4,0.1c7.1,0.2,14.2,0.8,21.4,0.8      c-0.7,2.7-2.9,0.9-4.3,1.5c-7.6-0.1-15.2,0.4-22.7-0.5l0,0c-1.5-1.6-3.4-0.9-5.2-0.9C892.9,136,874.9,136,857,136z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#737172",
                d:
                  "M805,166c1-0.3,2-0.7,3-1c1,5.3,1.1,10.6,1.1,15.9c0.3,0.4,0.3,0.8,0,1.2c-2.5-2.2-5.6-1-8.4-1.1      c-3.1-0.1-6.3,0.2-9.4,0.5c-1.9,0-3-1.8-5.4-1.7c-3,0-4.8-2.7-4-6.2c3.4-3.6,8.2-1.4,12.3-2.9c2.3-0.9,5-2.1,7.8-1.8v0      C802.8,167.8,803.8,166.8,805,166L805,166z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5556",
                d:
                  "M808.9,182c0.1-0.3,0.1-0.7,0.2-1c0.3,0,0.6,0,0.9,0c0,3-0.1,6.1-0.1,9.1c-1.5,0-1.8-1.2-2.1-2.3      C807.7,185.7,807.4,183.7,808.9,182z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292728",
                d:
                  "M574,172c1.2,1.9,1.1,4.1,1,6.2c-0.6,9.6,1.6,19,1.1,28.6c0,0.7,0.6,1.4,0.9,2.2c0,3.3,0.1,6.6,0.1,9.9      c2,2.6,1.2,5.6,1.3,8.5c0.1,1.9,0,3.9,0.7,5.8c0.6,3.7,0.2,7.4,0.4,11.1c0,3.2,0.1,6.5-0.1,9.7c-0.1,1.6,0.3,3.8-2.3,4.1      c0-0.3,0-0.6,0-1c-1.9-2.2-1.2-4.9-1.3-7.4c0-1.9,0.1-3.8-0.5-5.6c-0.3-1.6-0.7-3.2-1.2-4.8c-0.2-5.7-1.4-11.4-1.4-17.1      c0.1-1.7,0.1-3.5,0.1-5.2c0-7.6,0.4-15.1-1.2-22.6c-0.4-1.9-0.5-3.9,0-5.9c0.1-2.1,0-4.2,0.2-6.3c0.4-3.7-0.6-6.3-4.6-7      c-0.4-0.9-1.2-1.1-2.1-1.2C567.9,172.7,570.8,172,574,172z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534C4B",
                d:
                  "M939,137c1.4-0.2,3,0.4,4-1c0.3,0,0.7,0,1,0c1.5,1.2,3.5-0.2,5,1c2.3,0,4.7,0,7,0c3.5,2.1,7.4,0.5,11,1      c3,0.3,6,0.7,9,1c2.2,1.3,4.8-0.3,7,1c3.4-0.1,6.6,1.6,10,1c1.5,1.2,3.5-0.2,5,1c2.7,0.1,5.2,1.5,8,1c0,0.3,0,0.7,0,1      c-11-1.1-22-2.1-33-3.3c-11.3-1.2-22.6-2.8-34-2.8c-0.3-0.2-0.5-0.4-0.4-0.6C938.8,137.1,938.9,137,939,137z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575354",
                d:
                  "M949,137c-1.7-0.2-3.6,0.7-5-1C945.7,136.2,947.6,135.3,949,137z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575354",
                d:
                  "M983,140c-2.3-0.4-4.9,0.9-7-1C978.3,139.4,980.9,138.1,983,140z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#575354",
                d:
                  "M998,142c-1.7-0.2-3.6,0.7-5-1C994.7,141.2,996.6,140.3,998,142z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#676567",
                d:
                  "M564,178.9c0.3,0.1,0.7,0.1,1,0.2c2.5,3.7,1.1,7.7,1.1,11.6c-0.2,1-0.7,1.8-1.1,2.7      c-2.7,5.6-3.9,5.9-8.4,1.8c-2-1.9-4.4-2-6.9-1.9c-5.2,0.1-10.3-0.4-15-2.8c-0.9-0.5-1.8-0.9-1.9-2.1c1.6-3,4.9-3.2,7.6-3.9      C548.2,182.4,555.7,178.8,564,178.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292728",
                d:
                  "M487.2,256.7c-0.2-2.5-1-15.5-1.6-19.9c0-7.9,0-15.8,0-23.8c0-2.1-0.4-4.3,1.4-6.1      c8.6-4.4,17.2-8.8,25.7-13.4c2-1.1,3.5,0.3,5.2,0.3c0.1,0.2,0.2,0.5,0.3,0.7c-2.7,3.8-7.5,4-11.2,6.3c-4.3,2.1-8.8,3.8-12.8,6.5      c-3,1.3-3.9,3.6-3.9,6.8c0.1,12.8,0.1,25.7,0,38.5c0,1.3-0.5,2.4-1.3,3.3C488.6,256.8,488,257,487.2,256.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292728",
                d:
                  "M564,178.9c-10.6,2.6-21.2,5.3-31.2,9.9c-1.4,1.7-3.2,2.2-5.3,1.6c-0.2-0.2-0.4-0.3-0.5-0.5      c-1.1-3,1.8-2.9,3-3.3c7.7-2.7,15.5-5.4,23.5-7.1C557.1,178.7,560.3,176.7,564,178.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3F3B3C",
                d:
                  "M565,192c0-4.3,0-8.6,0-12.8c0-1.5,0.6-2.5,1.9-3.2c2.4,2.6,1.4,5.9,1.6,8.9c0.2,7.5-0.7,15,0.4,22.5      c0.2,0.6,0.3,1.1,0.4,1.7c0.1,3.5,0.4,6.9-0.2,10.4c-0.7,1.8-0.5,3.9-1.8,5.5c-1.5,0.7-1.8-0.5-2.3-1.5      c-0.3-1.3-0.3-2.6-0.3-3.9c-0.1-1.8-0.3-3.6,0-5.4c0.1-1.6-0.1-3.2,0-4.8C565.1,203.5,563.8,197.7,565,192z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#646162",
                d:
                  "M567.1,185.1c-0.1-3-0.2-6.1-0.2-9.1c0.1-0.3,0.1-0.5,0.2-0.8c5.9-1.2,5.9-1.2,6,5c0,2.6,0,5.3,0,7.9      C569.3,190.4,568.3,187.5,567.1,185.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#333133",
                d:
                  "M487,207c0,10,0,20,0,30.1c-0.6,0.2-1.2,0.1-1.5-0.5c-1.4-3.4-0.7-7.1-0.9-10.6      c-0.2-6.6,0.8-13.3-0.5-19.9c0-0.3,0-0.7,0-1C485.5,205,486.9,205,487,207z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#292728",
                d:
                  "M517.9,193.9c1-3.4,4.7-5,9-4c0,0,0.2,0.2,0.2,0.2c-2,3.7-5.1,4.7-9.1,3.9L517.9,193.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6A6464",
                d:
                  "M485.9,226c0,3.6,0.1,7.3,0.1,10.9c0.5,1.3,1,3-0.3,3.9c-1,0.7-1.4-0.8-1.9-1.6c-0.3-1.1-1-2.1-1.2-3.2      c-0.6-2.7-1-5-4.5-2.7c-0.6,0.4-1.6-0.2-2.4-0.5c-2.3-0.8-3.3,0.2-3.8,2.4c-0.5,1.8-0.1,4.5-3.1,4.8c-5.6-4.4-10-9.9-15-15      c1.6-2.7,4.2-4,6.9-5.1c1.1-0.5,2.4-0.2,3.4-0.8c4.6-2.8,18.2-5,18.4-6.5c0.3-1.9-0.2-4,1.2-5.7l0,0c2.7,0.4,1.4,2.5,1.5,3.9      C485.8,215.8,484.9,220.9,485.9,226z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635F5E",
                d:
                  "M483.9,206.9c1.7,5.7-1.9,9.8-4.8,14.3c-1.2-0.1-1.5-1.2-1.7-2.6c-0.1-1.1-1.5-1.9-2-0.7      c-1.5,3.4-3.4,2-5,0.6c-1.9-1.7-2.8,0.2-3.7,0.8c-1.9,1.3-3.6,2.3-5.8,0.7C468.1,214.8,475.8,210.4,483.9,206.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635F5E",
                d:
                  "M485.9,226c-2.1-4.2-0.4-8.7-1-13c-0.3-2,0.8-4.3-1.1-6.1c0-0.3,0-0.6,0.1-0.8c2.5,0.3,1.9,2.2,2,3.8      C486,215.2,486,220.6,485.9,226z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#636162",
                d:
                  "M885.9,162.1c-1.4-4.2-2.1-8.6-2-13c-0.5-4.3,0.4-5.3,4.2-4.1c2.4,0.8,4.2,1.3,6.4-0.4      c1.7-1.3,3.8-0.5,5.8,0c2.7,0.7,5.5,1.4,8.4,0.9c7-1.2,13.9-2.4,21-1c-2.7-0.1-5.2-1-7.8-2.1c6.4-0.9,12.8-1.3,19.2-0.5      c24.1,0.4,47.9,3.6,71.6,7.5c11.2,1.9,22.5,3.8,33.4,7.5c-0.2,0.3-0.5,0.5-0.8,0.5c1,0.5-0.1,1.6,1.2,2.5      c1.8,1.2,0.3,3.1-1.6,3.4c-1.4,0.2-3.3,0.7-4.4-0.2c-2-1.7-3.3-0.6-5,0.4c-3.5,2.1-7.4,3.3-11.3,1.6c-5.5-2.4-11.2-1.1-16.6-0.4      c-2.6,0.4-4.2,1.2-4-2.3c0.1-1.2-0.8-2.3-1.7-2c-3.1,1.1-6-0.4-9.4,0.5c-6,1.7-12.5,2.7-18.6-0.3c-0.4-0.2-1-0.4-1.5-0.2      c-7.7,2.4-15.4-1.8-23.1,0.4c-3.5,1-6.3,0.3-9.8-1.6c-4.8-2.6-10.9-1.2-15.7,1.8c-2.4,1.5-3.5,1.4-4.4-1.2c-1-3-2.8-2.8-5-1.3      c-1.3,0.9-2.6,1.4-4.2,0.6c-1.4-0.7-2.4-0.1-3.5,1c-2.8,2.8-6.7,3-10.2,0.7c-2.7-1.8-5.5-4.1-7.5,1      C888.5,163.1,887,162.4,885.9,162.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#686666",
                d:
                  "M885.9,162.1c0.4-0.8,1.1-0.5,1.8-0.4c-0.7-5.4,3.7-3.6,6.3-4.6c1.8-0.7,2.3,0.5,2.6,1.3      c0.7,1.9,2.2,1.5,3.4,2.1c4.2,2.2,5.7-0.1,7.1-3.1c0.5-1,1.4-1.3,1.9-0.5c2.3,3.1,4.1,1,6.1-0.2c3.6-2.1,4.8-1,6.2,5.5      c1.7-2.2,2.6-4.8,6.4-3.7c1.4,0.4,6.8-2.3,7.8-3.4c0.3,0.1,0.8,0.2,1.1,0.5c0.9,1.1,1.3,3,3.3,2.2c2.2-0.8,3.1-0.5,2.6,2.2      c-0.3,1.3,14.4-1.7,19.9-0.6c3.9,0.8,7.7-1.8,10.5,0.1c4.3,2.9,8.8,0.5,13,1.6c1.8,0.5,4.5,0.5,5.8-0.6      c3.5-2.7,7.1-1.2,10.6-1.3c4.9-0.1,2.4,3.3,2.1,5.6c6.4-2.3,12.6-3.2,18.8-1c4.4,1.5,8.1,1.6,11.7-1.9c1.3-1.3,4.9-1.3,5.3-0.5      c1.5,2.8,4-1.1,5.1,1.3c0.3-0.5,1.1-1.1,1-1.5c-0.4-1.9-2.4-0.2-3.2-1.3c2,0.3,0.9-3.2,3.2-2.6c8.5,1.7,16.9,3.8,25,7      c1.2,2.5,3.9,1.8,5.8,2.6c2.4,1,5,1.7,1,4.1c-1.8,1.1-1.9,4.1-4.6,4c-1.9-0.4-3.8-1.2-5.8-0.4c-0.6,0.3-1.5,0.6-1.9,0.1      c-5.4-5.3-13.3-2.5-19.2-6.3c-2.2-1.4-4.7-0.4-7.1,0.3c-2.7,0.8-8.5,7.9-10.2,8.8c-6.9-3.3-14.2-4.2-21.8-4.3      c-4-0.1-7.9-1.7-12.1-2c-4.3-0.2-8.5,0.6-12.7,0.9c-5.1,0.4-9.2-0.1-13-4.2c0.9,1.7,1.5,3.1-0.6,3.7c-1.7,0.5-3.2,0.1-4.9-0.3      c-3.3-0.9-6.5-2.4-10-0.1c-1.9,1.2-3.6-0.5-5.1-2c-2.3-2.4-8.3-2.1-11,0.3c-1.4,0.5-2.3-0.2-3-1.2c-4.3-3.7-9.2-1.9-14-1.4      c-0.5,0-0.9-0.1-1.4-0.3c-2.9-1.5-5.6-1.8-8.3,0.5c-2.4,1.9-5.3,1.4-8,1.2c-4.3-2-9.1,0.2-13.6-1.4c-0.6-0.2-0.1,0.4-0.1,0.5      c0.1,1.9-0.3,3.6-1.8,4.9C886.6,168.9,886,165.6,885.9,162.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6968",
                d:
                  "M1073,174c3.3-0.4,1.6-6.3,6.4-5.2c-3.6-2.1-7.6-1.6-10.7-4.6c0.9-0.1,1.7-0.2,2.4-0.3      c15.8,4.1,30.8,10.3,46,16.2c0.9,0.4,1.9,0.6,2.8,0.9c3.4,1.7,6.7,3.3,10.1,5c0.1,1.3,1.7,1.2,2.1,2.3c0.1,0.4,0,0.7-0.2,1      c0,0.1-0.5,0-0.2,0.3c0.2,0.1,0.6-0.1,1-0.1c2.1,0.7,1.5,1.8,0.4,3c-0.3,0.6-1.8-0.1-1.3,0.8c0.5,1,1.9,1.8,0.8,2.9      c-1.1,1.1-2.5,0.7-3.6-0.2c-2.5-2-5.1-3.5-8.2-4.5c-3.5-1.1-7.7-0.4-10-4.2c-0.1-0.2-0.6-0.2-0.9-0.2      c-6.1,0.9-10.4-3.2-15.5-5.4c-6.2-0.7-12.2-1.7-17.9-4.4C1075.2,176.5,1072.7,176.8,1073,174z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5B5C",
                d:
                  "M941.1,141.9c-6,0-11.9,0-19.3,0c4.6,2,8.3,0,11.5,1.9c-0.5,1.9-2,2.3-3.1,2.1c-4-1-8.2-0.1-12.2-0.8      c-2.6-0.5-4.7,0.9-7,1.4c-3.6,0.6-6.8,0.3-10.2-0.4c-2.5-0.4-5.8-3.5-7.2,1.8c-0.1,0.2-3.6-0.3-5.4-1.3      c-2.2-1.1-4.7-1.4-4.2,2.6c-1.7-2.9-0.9-6-0.8-9c18.1,0.3,36.1,0.7,54.2,1C938.7,141.1,940,140.9,941.1,141.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#322F30",
                d:
                  "M939,137c0,0.3,0,0.6,0,1c-6.3,0-12.6,0-18.9,0c-1.4,0-3,0.4-4.2-1C923.7,137,931.3,137,939,137z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2E2B2B",
                d:
                  "M880,144c-1.6-1.4-0.8-3.3-1-5C880.7,140.4,879.8,142.3,880,144z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#625C59",
                d:
                  "M1993.1,562.2c-0.7,0.6-1.4,1.2-2.1,1.8c-3,0.7-5.5-0.5-8-2c-1.7-3.3-6.3-2.7-8-6      c4.3,0.3,7.8,2.7,11.5,4.5C1988.7,561.6,1990.8,562.1,1993.1,562.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2827",
                d:
                  "M2005,565c1.8-1.8,4-0.7,6-1C2009.2,565.8,2007,564.7,2005,565z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#AEADAB",
                d:
                  "M1177,154c-11.5-3.4-22.7-7.6-32.9-14.1c-3.7-1.5-6.9-3.7-10.1-6.1c-3.9-1.9-7.7-3.9-11.6-5.8      c0.1-0.4,0.1-0.8,0.2-1.2c2.7,0,5.4,0,8.1,0c5.7,0,11.5,0,17.2,0c0,0.4,0,0.7,0,1.1c-4.7,0-9.4,0-14,0c-0.1,0.5-0.2,0.9-0.3,1.4      c4.6,0.9,9.1,1.9,13.4,3.6c-0.4,0.8-1.2,1.3-2,1.7c-1.3,1.3,0.1,1.7,0.8,2c9.4,4.3,18,10.1,27.6,13.8      C1175,151.2,1177.2,151.5,1177,154z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#484A44",
                d:
                  "M1134,133.9c4,1,6.9,3.7,10.1,6.1c-2.1-0.6-4.2-1-2.4,2.8c-2.7-0.9-3.8-4.1-6.8-2.7      c-2.2-0.6-4.4-1.4-1.1-3.4C1136.1,135.4,1134.4,134.8,1134,133.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BEBFBA",
                d:
                  "M1145,134c0.5-0.8,1.2-0.9,2-1c1.3,0,2.7,0,4,0c4.1-1,8.4-0.2,12.5-0.5c8.9,5.6,18.6,9.6,26.8,16.5      c4.6,3.8,11,6.4,17.7,4c1.8-0.7,3.7-0.6,5.4-0.2c2.1,0.4,4.3,1.8,4.5,4.1c0.1,2.1-2.7,1.5-3.7,2.4c-2.6,2.2-6,0.7-8.5,2.4      c-4.4-0.1-8.3-1.3-12.1-3.6c-7.9-4.8-14.8-11.2-24.1-13.5c-1.3-0.3-2.7-0.9-3.5-1.9c-4.6-5.9-11.3-6.4-17.8-7.4      C1147,135,1145.8,135,1145,134z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B4B4AF",
                d:
                  "M1165,133c-4.7,0-9.3,0-14,0c6.6-1.9,13.4-1.6,20-0.4c11.6,2.2,22.8,5.9,33.9,9.8      c0.9,0.3,1.6,0.4,2.1-0.5c0.3,0,0.7,0,1,0c0.8,1,1.9,1.8,0.9,3.3c-3.1,1-6,0.7-8.8-1c-2.4-1.4-5.1-2.1-7.9-2.4      C1182.2,141.9,1174,136.1,1165,133z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ABA8A3",
                d:
                  "M1209,145c-0.3-1-0.7-2-1-3c6.2,1.9,12.5,3.4,18,7c-0.7,0-1.4,0-2,0c-2.9,2.6-5.9,2.6-9,0.3      C1213.1,147.8,1210.7,146.8,1209,145z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B0B2AB",
                d:
                  "M1405,241c-7.5-2.9-14-7.8-21.1-11.5c-4.9-2.6-9.4-6-14.9-7.5c-4.4-0.4-8-3-11.8-5      c-12.9-6.7-26.2-12.8-39.1-19.5c-5.4-2.8-11.2-4.9-16.6-7.7c-12.5-6.6-25.2-12.4-38.3-17.6c-2.3-0.9-4.7-1.7-6.8-3.1      c-3.8-2.4-8.2-3.3-12.1-5.4c-1.6-0.9-3.1-2.2-3.3-4c-0.2-2,2-1.8,3.1-2.6c2.2,0.7,3.6,2.3,5,4c0.3,0,0.7,0,1,0      c1.9,2.3,4.8,3.8,7.4,3.5c6.9-0.8,12.4,3.1,17.8,5.6c8.9,4.1,18,8.1,26.8,12.4c7.7,3.7,15.1,8,23.4,10.6      c9.8,3.1,18.4,8.8,27.5,13.2c5,2.4,10,4.6,15.1,6.7c2.3,1,4.5,1.9,6,4.1c-1.7,0-3.5,0-5.2,0c0,0.3-0.1,0.6-0.1,0.9      c7.7,4,15.4,7.8,23,12c4.3,2.4,8.9,4.3,12.3,8.1C1404.4,239,1405.6,239.7,1405,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B5B5AF",
                d:
                  "M1244,157c-4.4,3.2-1,4.7,1.5,5.9c3.7,1.9,7.7,3.4,11.5,5.1c-0.8,0.8-1.7,1-2.8,1      c-5.6-2.6-11.3-0.9-16.9,0c-6.8-1.4-6.9-1.4-7.5-8.3c-0.2-1.8-1.5-1.6-2.4-1.8c-6.3-1.4-11.8-4-16-9c-1.4-1.6-3.4-2.2-5.4-1.5      c-5.5,1.9-9.5-2-14-3.7c-2-0.7-1.1-2.4,0.1-3.5c2.3-0.1,4.5,0.1,6.6,1.3c3.2,1.8,6.7,2.6,10.4,2.7c1.8-0.2,3.2,0.5,4.4,1.7      c3,3.2,6.6,3.7,10.6,2.3C1230.2,152.8,1237.1,155,1244,157z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ACAEA6",
                d:
                  "M1418,239c-2.5,0.6-4.4-1-6.5-2c-6.7-3.2-13.6-6-19.6-10.5c-1.1-0.8-0.7-1.7-0.9-2.5      c2.5,0.7,4.1,3.4,7,3c4.3,4.3,10.2,5.8,15.3,8.9C1414.9,236.9,1417,237,1418,239z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ACAEA6",
                d:
                  "M1423,243c-2.3-0.6-4.3-1.5-5-4C1420.8,238.9,1422.2,240.6,1423,243z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2C292C",
                d:
                  "M1302,282c1.4,0.1,2.4,0.7,3,2c-3.2,1.3-6.6,2.6-7.9-2.2c-0.6-2.1-2.1-1.3-3.2-1.3      c-2.9-0.1-5.8,0.2-8.6,0.1c-0.9,0-2.1-0.9-2.6,0.1c-0.7,1.4,1.7,1.4,1.4,3.1c-2.3,0-4.5,1.1-6.7-1.9c-1.1-1.6-4.1,1-6.8-0.5      c-2.2-1.3-3.8-2.3-4.5-4.6c-1-3.7-2.7-7.1-3.2-10.9c-0.6-4.7-3.1-6.8-7.9-4.8c-2.3-3.6-3.5-7.6-4.1-11.9      c14.6,9.1,29.2,18.2,43.8,27.4c1.9,1.2,3.6,2.9,5.3,4.4C1300.6,281.5,1300.7,282.9,1302,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1236,250.9c6.3,2.3,11,6.9,16,11.1c0.9,2.2,3,3,4.9,4c3.2,6.4,0.7,11.8-2.8,17      c-0.1-0.7-0.2-1.5-0.2-2.2c0-0.2,0-0.3,0-0.5c3-7.9,1.1-14.3-6.1-19c-2.6-2.9-6.2-4.4-9.2-6.7      C1237.4,253.6,1235.4,253.3,1236,250.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1254.1,283c1.9-5.5,4.9-10.8,2.8-17c2.7,2.2,3.6,4.9,1.9,8.2c-0.8,1.5-0.9,3.1-0.8,4.8      c-2.4,4.1-1.5,9.9-6.1,13C1252.6,289,1253.4,286,1254.1,283z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2B2828",
                d:
                  "M1259.9,252.1c-1.4-0.1-2.4-0.8-3-2c1.3-0.8,2.7-1.2,3.9-0.1C1262,251.1,1259.9,251.2,1259.9,252.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#25191B",
                d:
                  "M1256,300c-1.4,1.6-3.3,0.7-5,1C1252.4,299.3,1254.3,300.2,1256,300z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#201E1E",
                d:
                  "M1329,300.1c-0.6,0-1.1,0.1-1.7,0.1c-2.4-0.1-4.9-0.3-7.3-0.4C1323.1,299.2,1326.1,298.1,1329,300.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#585F58",
                d:
                  "M1319,224c-1,0.7-2,1.3-3,2c-0.7,0-1.3,0-2,0c-1.2,0.7-1.5-0.3-2-1c-3.2-4.8-8.2-5.3-13.3-6.3      c-1.8-0.3-6.7,1-5.1-4.4c0.4-1.3-1.1-0.4-1.8-0.5c-3.4-0.3-6-3.1-9.6-3c0,0-0.1-1.2-0.2-1.9c0.1-0.1,0.3-0.2,0.4-0.3      c0.8-0.9,2.1,0.6,2.8-0.6c0.1-0.1,0-0.4-0.1-0.4c-1.4-0.5-2,0.8-3,1.4c-3.1-0.1-0.8-3.5-3-5c-1.7-1.2-2.5-2.9-5.3-3.6      c-3.5-1-8.2-1.3-10.3-5.7c-0.8-1.7-5.4-2.6-7.4-1.7c-6.1-5.6-15.1-6.1-21.1-11.6c-2.8-2.6-5.9-1.9-8.9-2.4c0.1-1.8-0.1-3.4-1-5      c0.6-0.6,1.3-0.7,2.1-0.6c14.4,5.8,28.5,12.3,42.7,18.6c3.5,1.8,6.9,3.8,10.6,5c0.4,0.1,0.9,0.3,1.3,0.5      c5.2,2.5,10.2,5.4,15.6,7.5c0.4,0.2,0.8,0.4,1.2,0.6c2.2,1.6,5.1,1.9,7.1,3.9c0.1,0.2,0.2,0.4,0.3,0.6c0.7,0.6,1.4,1.2,2.1,1.8      c-0.1,0.6,1.2,1.6-0.4,1.8c-0.7,0.1-1.8-0.6-1.9,0.7c0,0.8,1,0.4,1.6,0.7c2.3,1-0.9,2,0.1,3.1c1.4,0.6,1.7-2,3-1.4      c1.6,1.4-2.2,3.6,0.8,4.5c2.3,0.7,4.6,0.3,5.7-2.9C1315.9,221.2,1320.2,221.5,1319,224z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C4C6C2",
                d:
                  "M1227,174.2c-0.7-0.1-1.3-0.1-2-0.2c-13.9-6.5-28.3-12-42.6-17.5c-1.8-0.7-3.6-1.6-5.4-2.5      c-6.6-3.4-13.1-6.7-19.7-10.1c-4.4-2.2-8.9-4.3-13.3-6.7c-1-0.5-3-1-2.3-2.7c0.4-1.1,2.1-0.5,3.3-0.6c5.5-0.5,10.6,1.6,15.9,2.2      c0.7,0.1,1.7,0.7,2,1.3c3.6,6.4,10.5,7,16.4,9.3c1.7,0.7,3.7,1,4.5,2.6c1.5,2.8,3.2,4.7,6.8,4.2c2-0.3,1.4,4.5,4.7,2.8      c2.4,4.3,7.2,3,10.7,4.5c8.6,1.7,16.9,4.5,25,7.7c0.3,0.4,0.3,0.8,0.2,1.3C1229.8,171.4,1226.9,171.3,1227,174.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B7163",
                d:
                  "M1886.7,399.1c-0.9,0-1.8,0-2.7-0.1c-0.7-1.1-1.5-2.1-3-2c-1.7-1-3-2.4-4.2-3.9      c-0.1-0.9,0.2-1.3,1.2-1.1C1880.9,394.3,1883.8,396.7,1886.7,399.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#51413E",
                d:
                  "M1878,391.9c-0.4,0.4-0.8,0.8-1.2,1.1c-0.6-0.3-1.3-0.6-1.9-0.9c-0.2-1.1-2.6-0.3-1.9-2.2      c0.3-0.3,0.6-0.6,0.9-1C1875.4,389.7,1877.2,390.2,1878,391.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E392D",
                d:
                  "M1873,390c0.6,0.7,1.3,1.5,1.9,2.2c-1.9-0.2-3.7-0.7-4-3C1871.6,389.4,1872.3,389.7,1873,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C1B2AF",
                d:
                  "M1879,390.1c-1.8-1.2-3.6-2.5-6-1.9c-0.7-0.7-1.4-1.4-2.1-2c0.8-0.2,1.6-0.1,2.1-0.9      c2.1-1.1,3.5,0.5,5.2,1.2c0.8,0.6,1.3,1.4,1.4,2.4C1879.5,389.3,1879.3,389.7,1879,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DAD4CF",
                d:
                  "M1959.6,421.8c-0.9,0.1-1.7,0.2-2.6,0.3c-1.2-1.7-4.7-1.9-2.8-5.6c0.6-1.2-1.9-1.9-2.9-1.4      c-2.9,1.3-5.2-0.5-7.7-1.2c-0.6-1.1-0.5-2.1,0.2-3c1.5-1,3.2-0.7,4.8-0.6c4.2,0.3,8.4,1.5,12.6-0.3c1.2-0.5,2.6,0.1,3.7,0.9      c0.2,0.2,0.5,0.3,0.8,0.3c0.9,0.4,1.6,0.9,1.3,2.1c-1.1,1.7-1.7,3.7-2.6,5.6c-0.4,0.6-0.9,1-1.7,1.1c-0.3,0.4-0.6,0.8-0.9,1.2      C1961.2,421.3,1960.4,421.6,1959.6,421.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#857E7C",
                d:
                  "M1929,425l0.2-0.2l0.3,0.1c1.3-0.9,1.9-2.4,3-3.4c0.5-0.7,2-0.3,1.5-2.1c-0.9-3.5-1.3-7.1-1.2-10.7      c0.1-1.5,0.1-3,1.7-3.9c0.5,0,0.9,0.3,1.2,0.7c1.3,1.6-0.6,4.5,2.1,5.6c1.9,0.6,3.5,1.4,3.7,3.7c-0.2,0.7-0.6,1.2-1.3,1.6      c-1.5,0.1-3.2,0-2.7,2.4c0.9,4,3.9,0,5.5,1.5c-1,3,0.1,7.3-4.9,7.9c-0.4-1.7-1.1-2.8-2.8-1.1      C1932.8,427.1,1930.8,426.3,1929,425z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#57524F",
                d:
                  "M1940.9,415.1c-0.6-2-2.1-2.9-4-3.3c-1-2.1-0.4-4.2-0.2-6.3c2.1-3.4,3.6-2,5,0.6      c1.4,3.2,1.1,6.6,1.1,9.9c0,0.6,0,1.2,0,1.8C1940.5,418.1,1940.2,417,1940.9,415.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#453E3C",
                d:
                  "M1942.8,415.9c-1.2-3.3-1.4-6.7-1.9-10.1c-0.8-1.4-0.2-2.1,1.2-2.4c0.5,0,0.9,0.2,1.2,0.5      c0.6,0.7,1,1.5,1.4,2.3c0.9,1.8,0.6,3.5-0.7,5c-0.2,0.9-0.3,1.8-0.5,2.6C1943.4,414.6,1943.1,415.2,1942.8,415.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B3AAA8",
                d:
                  "M1940.9,415.1c0.3,1.1,0.7,2.2,1.9,2.6c0,0.8,0,1.6,0,2.4c-2.6,1.9-5.1,3.3-6.7-1.1      c0.7-1.7,2.8-1.8,3.8-3.2C1940.2,415.7,1940.6,415.4,1940.9,415.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DAD4CF",
                d:
                  "M1948.9,422.6c-1.5-2-2.4-2.9-3.4-3.8C1947.7,418,1948.9,418.7,1948.9,422.6z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C4BFBA",
                d:
                  "M1821,373c1-0.3,2.3,0.7,3.1-0.6c0.1-0.2-0.7-1-1-1.5c6.3,0.1,12.6,0.1,19,0.2c8.5,2.2,17.3,1.9,26,2      c8.6,1.7,17.3,3,26.1,2.9c3-0.9,5.9,0.3,8.8,0.2c2.8,1.3-0.4,3.1,0.4,4.5c-2.7,3.1-5.5,1.9-8.3,0.3c-0.5-0.2-0.9-0.4-1.4-0.6      c-6.3-2.3-13-2.3-19.5-2.7c-7.4-0.5-14.8-1.1-22.2-1c-3.5,0-7.3,0.7-10.9-0.5C1834.2,375.4,1827.5,374.9,1821,373z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CECAC6",
                d:
                  "M1841,376c10.6-1.6,21.3-0.4,31.9,0c6.3,0.3,12.5,1.3,18.7,2c1.3,0.2,2.6,0.7,3.4,1.9      c-1.2,0.9-2.5,0.3-3.3,0.4c0.8,0.1,2.1,0.5,3.3-0.4c2.6,1.2,5.3,2.4,8,0.4c0.2-0.9,0.9-1.2,1.7-1.3c4.1,0.7,8.3,0.8,12.2,2.6      c0.5,2.4,1.6,4.8-0.9,6.8c-0.5,0-1-0.1-1.5-0.3c-3.3-2.4-7.1-2.7-10.9-2.8c-3-0.1-6-0.3-8.9-0.7c-4.3-2.1-9.7,0-13.6-3.4      c-6-2.2-12.1-1.9-18.3-1c-2.2-0.6-4.7,0.9-6.7-1.2C1851.2,377,1845.8,378.1,1841,376z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ECF3F2",
                d:
                  "M1856.1,379c2.3,0,4.6,0,6.9,0c0.8,1.6,4.2-1.2,3.8,2.3c-1.6,0.6-3.2,0.3-4.7-0.2      c-2.4-0.4-4.7,1.9-7.1-0.1C1855,380.1,1855.2,379.4,1856.1,379z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4C4542",
                d:
                  "M1877.9,387.4c-1.7-0.7-3.3-1.5-5-2.2c-1.3-0.5-2.5-0.9-3.8-1.4c-0.1-1.5,1.1-1.6,2.1-1.9      c2.6-0.3,5.2-0.1,7.6,1.1c1.4,1.1,3.8,1.5,3,4.2C1880.5,388.1,1879.2,387,1877.9,387.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CECAC6",
                d:
                  "M1862.1,381.1c1.6,0,3.2-0.1,4.8-0.1c0.8-0.4,1.1,0.1,1.3,0.8c-0.2,0.7-0.8,0.9-1.4,1.3      C1865.2,382.6,1863.5,382.3,1862.1,381.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#686B66",
                d:
                  "M1866.9,383c0-0.8,0.5-1,1.1-1.2c1.4-0.8,2.6-0.8,3.2,1c-0.7,0.3-1.4,0.7-2.1,1      C1868.4,383.5,1867.7,383.3,1866.9,383z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D0C3C2",
                d:
                  "M1879,390.1c0-0.5,0.1-0.9,0.1-1.4c0.5-0.4,1.1-0.4,1.8-0.2c0.4,0.1,0.8,0.3,1.1,0.5      c0.9,0.6,1.7,1.1,2.6,1.7c1.1,1,2.7,1.6,2.9,3.3c-0.2,0.7-0.5,1.2-1.4,1C1882.7,394.8,1881.8,391.1,1879,390.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9C4C6",
                d:
                  "M1886.1,395c0.3-0.2,0.6-0.3,0.9-0.5c2.8-1.6,3.6,0.6,4.6,2.5c0,0.6-0.2,1.1-0.7,1.4      C1889.4,397.1,1886.7,397.5,1886.1,395z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D3D2CA",
                d:
                  "M1890.8,398.4c0-0.4,0.1-0.8,0.1-1.2c2.4-0.6,3.7,0.4,4,2.8c-0.3,0.3-0.7,0.6-1,0.9      C1893,400.1,1891.9,399.2,1890.8,398.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7E7471",
                d:
                  "M1899,405c1,0.7,2,1.3,3,2c0.3,0.9,0,1.3-1,1c-0.3-0.1-0.5-0.2-0.8-0.3c-0.7-0.6-1.5-1.1-2.2-1.7      C1898.3,405.7,1898.6,405.4,1899,405z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332E2D",
                d:
                  "M1914.9,413c-4.2-2.4-8.2-4.9-12-8c0.5-1,1.6-1.5,2.2-2.3c1.6-3,2.3-7,7.2-6.1c0.3,0.1,0.6-0.3,0.7-0.6      c1-2.6,3.9-3.8,4.6-6.6c2.3-0.4,3.2,0.6,3.1,2.9c-1.3,1.8-2.6,3.6-2.4,6c-1.1,3.7-2.5,7.4,1.7,10.3c0.3,0.4,0.4,0.8,0.4,1.3      C1918.9,411.5,1917.6,413.5,1914.9,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#1B1614",
                d:
                  "M1906,404c-1,0.3-2,0.7-3,1c-2.6-1.7-5.3-3.4-7.9-5c-1.1-1.3-2.4-2.4-4-2.8c-1-1.5-2.2-2.5-4-2.7      c-0.5-1.7-2.5-2-3.3-3.4c2.9-2.1,5.6,0,8.4,0.4c2.1,0.3,4.1,1,6.2,1.5c2.5,1.4,4.4,0.4,6.2-1.4c0.5-0.1,1-0.1,1.6,0.1      c2.2,1.3,2.9,3.5,1.8,5.4C1906.4,399.3,1906.9,401.8,1906,404z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#918A89",
                d:
                  "M1927.1,415.7c0-1.9-0.1-3.8-0.1-5.7c1.1-0.5,1.8,0.1,2.5,0.8c1.2,3.6,2.9,7,2.9,10.8      c-3,0.6-3,0.6-4.7-3.5C1927.5,417.4,1927.5,416.5,1927.1,415.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#494142",
                d:
                  "M1914.9,413c1.9-0.7,2.7-3.2,5.1-3c0.8,1.9,0.4,3.9,0.2,5.9c-0.6,0.3,0.2,2.6-1.4,1.4      C1917.3,416.2,1916.2,414.5,1914.9,413z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ECE4E1",
                d:
                  "M1927.1,415.7c0.3,0.7,0.5,1.5,0.8,2.2c1,1.6,1,3.3,0.3,5c-2.6,0.2-4.7-0.4-6.1-3.2      C1926.8,420.7,1926.8,420.7,1927.1,415.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7B7372",
                d:
                  "M1928.2,422.9c-0.8-1.6-0.3-3.3-0.3-5c2.1,0.6,1.5,4,4.1,4c0.4-0.4,0.7-0.4,0.9,0.1      c-0.2,2.1-2,2.4-3.6,2.9C1929.4,424,1929,423.3,1928.2,422.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7B7372",
                d:
                  "M1929,411c-0.7-0.3-1.3-0.7-2-1c-0.9,0-1.8-0.1-2.7-0.1c-0.5,0-0.7-0.3-0.6-0.8c0.7-1.1,2.8-1.2,2.1-3.2      c-0.4-2.1,0.7-3,2.7-3.2c0.5,0.1,0.9,0.4,1.2,0.9c0.7,2,0.7,4.1,0.2,6.2C1929.7,410.2,1929.4,410.7,1929,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ECE4E1",
                d:
                  "M1923.9,409.1c0.1,0.3,0.2,0.6,0.4,0.8c-5-0.4-2.3,4.3-4,6.1c-0.1-2-0.2-4-0.2-5.9      c0.3-0.2,0.4-0.5,0.3-0.8c0.2-0.4,0.6-0.7,1-0.9C1922.4,408.1,1923.3,408.2,1923.9,409.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D0C8C8",
                d:
                  "M1901,408.1c0.3-0.3,0.6-0.7,1-1c1.1,0.4,1.9,1.1,2.5,2.5C1902.8,409.9,1901.9,409,1901,408.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#595E57",
                d:
                  "M1312,225c0.7,0.3,1.3,0.7,2,1c-1.1,1.2-2.3,1.5-3.6,0.2C1310.9,225.8,1311.5,225.4,1312,225z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534B49",
                d:
                  "M1106,303c0.3,0,0.7,0,1,0c0.2,0.7,0.9,1.5-0.2,2c-0.4,0.2-0.9,0.1-1.3,0.2      C1105.6,304.5,1105.8,303.7,1106,303z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1153,272c-0.5,6.6,2.7,12.5,3,19c-2.1-2.8-4.4-3.6-8.4-3.4c-4.8,0.2-9.9-0.8-14.8-1.4      c-5.8-0.7-11.6-0.7-17.3-0.9c-8.4-0.3-16.8-2.1-25.2-0.9c-2.1,0.3-3.8-0.1-5.7-0.9c-2.9-1.2-5.8-0.8-8.9-0.4      c-2.5,0.3-6.8-8.2-7.8-11.9c-1.3-4.9-2.7-9.7-6.1-13.9c-2.3-3-2.7-7.4-3.9-11.2c3.2-0.5,6.1-4.8,9.8-1c5-4.7,11.1-1.2,16.6-2.3      c1-0.2,2-0.1,3,0c1.4,0.2,3.6,0,3.4,1.8c-0.1,1.7-2.3,1.6-3.7,1.6c-2.5-0.1-5.1,0.4-8.2-0.4c1.5,1.5,2.6,1.7,3.8,1.3      c2.9-0.9,4.9-0.1,5.6,3c0.7,3.2,3.4,3.3,5.8,3.4c2.4,0.2,5.1,0.5,6.3-2.6c0.6-1.7,1.6-2.9,3.6-2.8c0.5,0.1,0.9,0.2,1.4,0.4      c3.6,1.2,6.2-0.5,8.1-3.2c2.5-3.8,5.2-4.1,8.7-1.5c1.7,1.2,3.9,1.7,6,3.3c1.3-2,1.2-5.3,4.8-5.3c2.9,0,4.5,1.5,6.2,3.4      c2.2,2.4,5.2,1.5,8,1.7c2.6,0.2,5,0.7,6.6-2.5c1.2-2.2,4.1-2.6,6.5-3.3c2.3-0.5,4.6-0.5,6.9-0.2c1.1,0.1,2.6,0.2,2.7,1.7      c0.1,1.1-1.1,1.5-2,2c-4,2.1-8.3,3.5-11.8,6.4c-0.9,0.8-1.8,1.5-2.6,2.3c-1.4,1.8-0.3,2.4,1.3,2.6c5.4,2.3,6.6,8.1,2.7,12.4      c-2-0.3-1.8-3.1-4.2-3.6C1153.3,267.1,1151.8,269.4,1153,272z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#141316",
                d:
                  "M1160,242.1c-2,1.8-6.3,0.9-6,5.3c0,0.2-0.8,0.5-1.2,0.8c-3.6,1.8-13.4-0.5-15.9-3.9      c-1.4-1.9-3.3-1.1-5-1.1c-1.9,0.1-1.9,1.6-1.6,3c0.3,1.3,0.2,2.4-1.2,2.7c-1.2,0.3-2.2,0.1-3-1.1c-1.6-2.6-5.3-1.9-7.2-4.4      c-0.6-0.7-2.6-0.4-3,0.8c-1.3,3.5-4.5,4.4-7.1,6.4c-3.1,2.2-2.8-0.2-3.6-1.4c0.6-0.6,0.6-1.3,0.3-2.1c0,0.7,0.4,1.5-0.3,2.1      c-1.3,0.1-3.3-0.2-3.3,1.4c-0.1,6.2-4.7,4.6-7.9,4.5c-3.2-0.1-7-0.2-6.9-5.2c0-1.6-0.9-2.7-2.6-1.7c-3.6,2.1-5.8,0.9-7.2-3      c4.3,0,8.5,0,12.8,0c0-0.3,0-0.6,0-0.9c-6.5,0-13.2-0.9-19.5,0.5c-2.2,0.5-3.5,0.2-5.4,0.1c-2.1-0.1-4.1,3.3-7,1.4      c-1.7-3.7-4.9-2-7.3-1.8c-2.8,0.3-0.6,2.7-0.7,4c-0.3,2.4,0.1,4.8,0.2,7.5c-5.6-0.1-5.6-5.5-6.8-8.4c-1.6-3.7-3.7-4-6.3-3.2      c-3.1,0.9-1.3,4-0.9,5.4c2.4,7.5,5.1,15,8.3,22.2c2.2,4.8,3.7,9.8,5.9,14.5c0.6,1.4-0.3,2.7-1.5,2.3c-1.3-0.4-3.7,1.5-4-1.5      c-0.1-0.8-0.2-1.6-0.3-2.5c-2-0.3-3.1,3.5-5.2,1c-1-1.2-1.9-2.6-2.9-3.9c4.6-1.2,1.3-4.4,1-6.1c-0.6-4.5-0.5-9.6-5.2-12.6      c-1.6-1-0.8-2.2,0.1-3.3c1.4-1.8,1-3.9-0.4-4.9c-3.3-2.3-5.5-6.4-10.7-5.8c-5.1,0.6-10.4-0.1-15.4-1.6c-0.4-0.1-1.1-0.1-1.4,0.1      c-1.1,0.7-2.3,2.3-2.8-0.2c-0.4-2,1.6-0.9,2.5-1.2c0.8-0.3,2.3,0.2,1.8-1.4c-0.1-0.4-1.5-0.4-2.2-0.6c0-0.3,0-0.6,0.1-1      c1.4-1.5,3.2-1.6,5-1.6c8.4,0,16.8-0.2,25.2,0c21-0.4,42,0.7,62.9-0.4c18.5-0.9,36.9-0.5,55.4-0.8      C1155,241,1157.9,239.9,1160,242.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#141316",
                d:
                  "M907,246c0.3-0.3,0.7-0.7,1-1c4.1-2.3,8.7-2.5,13.2-2.5c4.1,0.1,8.1,0,12.2,0      c20.5-0.1,40.9,0.2,61.4-0.1c3.1-0.1,6.4-0.8,9.1,1.5l0.1,0.1c-2.2,1.9-4.8,0.7-7.2,1c-2.4,0.3-5.4-1-6.3,3      c-0.3,1.5-2.3,0.8-3.5,1c-5.5,1-10.6-1.3-16.2-2.3c0.7,2,2.4,0.7,3,1.8c-6.3,1.1-8.4,0.9-18.6-2.5c5.9,0,11.8,0,17.8,0      c0-0.2,0-0.5,0-0.7c-13.6,0-27.1,0-41.8,0c5.2,1.8,10.6-1.1,14.1,3.8c-3.9-0.5-7.8,1.3-11.2-1.6c-0.3-0.3-2.6,1.9-4.4,2.1      c-0.6,0.1-1.2,1.2-1.5,1.1c-6.2-2.7-12.9-0.2-19.2-1.9C907.5,248.4,907.1,247.3,907,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3B312F",
                d:
                  "M1236,250.9c2.2,3.2,6,4.3,8.7,6.8c1.2,1.1,2.8,1.7,3.1,3.5c-6-3.7-12-7.5-18.2-11      c-6.9-3.9-14.4-6.3-21.8-9.1c-4.6-2.2-9.6-1.6-14.5-1.7c-2.9,0-3.4-1-1.3-3.1c8-2.1,15.6-0.5,23,2.7c-1,1.7,0.1,1.6,1.4,2.1      c5.8,2.1,11.4,4.4,16.5,7.9C1233.8,250,1235,250.3,1236,250.9L1236,250.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4F4F4B",
                d:
                  "M1192,237c-1,3.1,1.5,1.8,2.6,1.9c4.5,0.4,9.3-0.8,13.4,2.3c-16.9-4.1-31.6,1.8-46,9.7      c-0.5,0.9-1,1.8-2.2,0.7c-0.6-2.7,1.5-3.4,3.2-4.4c2.7-1.6,5.5-3.1,8.4-4.2c2.1-0.8,1.2-2.1,1.6-3.2      C1179.1,237.3,1185.1,234,1192,237z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1196.2,292.9c-1.4,0.6-3.1-0.4-4.3,1c-2.6,0.2-5-1.8-7.7-1c-7,0.6-13.7-1-20.1-3.7      c-0.3-0.1-0.7-0.3-1-0.4c-0.7-0.9-0.6-2-0.7-3.1c0-1.8-0.7-3.4-1.3-5c-0.3-0.8-0.6-1.7-0.5-2.6c0.2-0.7,0.4-1.3,0.7-1.9      c0.6-1.1,0.5-2.6,1.8-3.4c2.6,3.5,1.7,7.9,3.6,11.7c1.5,3,3,4.7,6.5,5.1C1180.9,290.5,1188.5,291.8,1196.2,292.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1163.1,272.8c-0.3,1.4,0.4,3.1-1.1,4.3c-1.4-0.8-1.8-2.4-2.7-3.6c-0.7-1.4-2.6-1.3-3.3-2.6      c0-0.3,0-0.6,0.1-0.9c0.4-0.6,1-0.9,1.7-1c4.3-2.1,1.2-5.8,1.9-8.7c0.3-0.4,0.7-0.6,1.3-0.5c3.4,2.5,0.3,6.4,2.1,9.2      C1163,270.3,1163.1,271.5,1163.1,272.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6E6464",
                d:
                  "M1159.8,272.9c1.5,1,2,2.5,2.2,4.1c-0.3,0.3-0.7,0.7-1,1c-0.4,0.4-1.6,0.2-1.4,0.7      c0.3,0.9,1.7,0.5,2.4,1.2c0.6,2,2.5,3.7,1,6c-1.7,0-3.3-2.7-5,0c-2.6-4-3.1-8.4-3-13C1156.5,271.7,1158.1,271.8,1159.8,272.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1164.1,289.2c6.6,2,13.4,2.4,20.1,3.7c-2.2,2.3-4.3,2.6-7.3,1.1      C1172.7,292.1,1167.5,293.1,1164.1,289.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#332D30",
                d:
                  "M1157.9,269.7c-0.6,0.1-1.3,0.2-1.9,0.3c-1.7-0.4-3.5-0.9-3,2c-1.4-1.1-1.1-2.7-0.9-4.1      c0.2-1.9-2-5,1.1-5.3c2.3-0.2,4,2.5,3.8,5.4C1157.7,268.4,1158.3,268.8,1157.9,269.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#868483",
                d:
                  "M1158,286c0.2-1.4,0.5-3.3,1.9-3.5c2.5-0.5,1.6,2.7,3.1,3.5c0.5,0.9,0.8,1.8,0.1,2.7      C1160.8,288.9,1158.3,289.5,1158,286z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1208,296c0.7,1.4,1.5,2.8-1,3.1c-1.6,0-3.2-0.2-4.3-1.8C1204,295.2,1206.2,296.2,1208,296z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1159.8,272.9c-1.6,0.1-3.2,0.1-4.8,0.2c-1.1-1.4,0.4-1.6,1-2.2C1157.4,271.3,1159.7,270,1159.8,272.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3D3533",
                d:
                  "M1194,294c1.7,0.2,3.6-0.5,5.1,1C1197.4,294.8,1195.4,295.7,1194,294z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#0F0D0E",
                d:
                  "M1071.9,299.3c-5,1.1-8.9,0.5-12.7,0C1063.1,299.3,1067,299.3,1071.9,299.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C7CCC7",
                d:
                  "M1231,170c0-0.3,0-0.7,0-1c1.6-1.7,3.5-0.2,5.2-0.5c7.8,0.5,14.5,4.4,21.8,6.5      c8.4,2.4,15.8,7.6,24.4,9.3c2.4,0.5,2.8,3.9,5.7,3.2c4.5,0.5,8,2.1,11.7,5.3c4.5,4,10.4,6.9,16.8,7.5c5.6,0.5,9.3,3.8,12.9,7.6      c0.9,1.5,2.2,2.8,2.8,4.5c-0.1,0.2-0.1,0.4-0.2,0.6c-2,0-4,0-6,0c-0.2-0.1-0.3-0.3-0.5-0.4c-0.8-1.5-2.1-0.9-3.2-0.8      c-0.4-0.1-0.8-0.2-1.2-0.4c-0.2-2.7-2.5-0.6-3.5-1.5c-0.4-0.1-0.8-0.3-1.2-0.4c-2.3-1.2-4.2-3-6.9-3.3c-4.1-1-7.9-2.9-11.8-4.4      c-3.6-5.2-9.1-6.9-14.9-8.1c-5.1-2.4-10.5-3.8-15.9-5.4c-4.9-1.4-10.4-3.1-14.3-7.2c-0.9-1-1.8-2.5-3.1-2.3      c-5.4,0.7-9.8-2.7-14.8-3.4C1232.1,175,1229.1,173.9,1231,170z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#CCD1CC",
                d:
                  "M1298,201c4,1.3,8,2.7,12,4c2.3,1.4,4.4,3.1,7,4c0.5,2.3,2.8,1.1,4,2c0.3,0,0.7,0,1,0      c0.9,1.4,3.2,0.2,4,2v0c0.9,4.2-0.7,4.5-4.4,3.4c-5.5-1.6-9.7-6.2-15.7-6.4l0,0c-2.4-1.8-5.2-3.1-8.1-3.9l0.1,0      c-5.7-2.7-11-6.2-17.1-8.1l0.1,0.1c-3.6-2-7.2-3.9-11.2-5.1c-14.3-6.3-28.5-12.6-42.8-18.9c-3-5.6,1.9-3.5,4-4.2      c0.4,3.2,1.7,5.3,5.4,3.7c1.1-0.5,1.5,0.4,2.1,0.8c1.1,0.8,2.3,2.3,3.3,2.1c8.3-1.1,13.3,5.4,19.7,8.5c0.6,0.3,1.4,1.3,2-0.1      c0.7-1.8,1.8-0.6,2.3-0.1c1.5,1.4-1.6,1.3-1,2.4c6.8-0.2,12.9,1.4,18.3,5.6c3.8,3.5,9.2,4.1,13.4,7      C1296.9,200.3,1297.6,200.4,1298,201z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C7CCC7",
                d:
                  "M1337,213c-0.2,4.2,3.6,4.4,6,6c-2.4,3.5-4.7,0.8-6.7-0.3c-2.1-1.2-3.5-3.4-4.3-5.7v0      c0.8-0.8,1.8-1.1,2.9-1C1335.7,212.1,1336.4,212.4,1337,213z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B9BBB7",
                d:
                  "M1421,269.1c-1.7,0-3.2-0.4-4.1-2C1418.5,267,1420,267.6,1421,269.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ABAEA6",
                d:
                  "M1405,241c0-1.1-2.2-1.5-1-3c4,0.5,6.6,3.7,9.9,5.5c12.4,6.6,24.8,13.1,37.2,19.6c1.3,0.7,2.8,1,3.8,2.9      c-3.5-0.7-6.7-1.4-9.9-2C1431.7,256.3,1418.3,248.7,1405,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C3C7C0",
                d:
                  "M1337,213c-0.7,0-1.3,0-2,0c-1.7-1.8-3.9-2.8-6-4c-5-5.6-11.2-8.4-18.8-8.6c-2,0-3.8-2.5-5.9-3.3      c-4.3-1.7-7.1-5.5-11-7.7c-1.8-1-4.3,1.4-5.3-1.5c-2.9-1.5-5.1-4.2-8.3-5.2c-0.8-0.2-1.2-1.2-0.6-2.1c1.2-0.9,2.6-1,3.7-0.3      c6.1,3.5,13,5.3,19.2,8.6c19.2,8.1,37.7,17.7,56.1,27.3c3.6,1.9,7.5,3.3,10.9,5.7c1.1,5.3,6.2,5.7,9.8,7.8      c1.5,0.9,2.3,1.5,2.2,3.2c-0.3,0-0.8,0.1-1,0c-4.8-3.7-10.8-5.4-15.4-9.3c-1.5-1.3-3.1-2.3-5.1-2.8c-2.5-0.7-5.7-0.6-7-3.8      c-0.1-0.3-0.5-0.7-0.5-0.7c-5.8,2.9-7.8-2.1-10.9-5C1338.8,209.1,1338.3,212.3,1337,213z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0E",
                d:
                  "M688,259c4.9,2.8,10.4,2.6,15.4,1.4c2.8-0.7,5.2-1.3,8.1-1c2,0.2,4.1,0.3,6.3-0.2c3.1-0.8,6.3,0,9.4,0.2      c5.4,0.3,11,0.1,16.7-0.9c4.3-0.7,10-0.3,14.8,1.6c1.3,0.5,2.6,1.5,4.1,0.1c6.6-6.1,6.7-6.1,15.1-4.8c-1.1,1.6-3.1,0-4.3,1.5      c0.5,1.1,0.9,2.3,1.5,3.5c0.8,1.4,1.8,2.9,3.8,2.6c-0.8-2.7,5-2.1,2.9-5.5c-0.9-1.5,0.1-1.5,1.1-2.4c3.4-2.9,7.2-1.6,10.9-1.9      c0.2,1.6-2.1,0.9-1.9,3.3c-1.7-5.2,14.6,2.5,20.4-4.7c2.9,7.5,1.5,15.7,2.5,23.6c0.3,2.7-0.6,6-4.2,6.8c0.9,2.1,3.3,2.9,5.9,4.3      c-5.2,0-211.3-13-216.5-15.2c-2.8-1.2-5.8-0.3-8.7-0.6c-1,0-2,0-3-0.1c1.3-3.7,5.4-5.3,8.6-4.3c1.5,0.5-0.3,2.9,2,2.3      c1.4-0.3,3-0.1,4.5,0.1c0.6,0-0.1-1,0-0.4c0,0.2-0.1,0.3-0.3,0.3c-1.4-0.2-2.9,0.4-5.1-1.2c8.3-3.1,16.1-3.6,24.1-2.2      c0.5,0,0.9,0.1,1.4,0.3c6.7,0.5,13.5,1.8,19.1-3.7c1.3-1.2,3.1-0.6,4.8-0.3c2.3,0.5,4.2,1.8,6.2,3c0.4,0.2,0.9,0.2,1.3-0.2      c-0.5,0.2-1.1,0.4-1.4,0.1c-1.7-1.2-1-2.3,0.5-2.9c2-0.9,4.3-1,6.3-0.8c3.8,0.4,7.4-0.4,11.1-0.9c1.5,0,3.1,0,4.6-0.1      C680.1,260.2,684,258.7,688,259z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B6B5B7",
                d:
                  "M568.9,263.4c-0.3,1.6,0,3.6-1.9,4.6c-1.2,0.9-2.4,2.1-4,0.9c-13.4-1.7-26.9-3.3-40.3-5      c-3.3-0.4-6.6-0.7-9.7-2c-0.2-1.6,1.1-1.9,2.2-2.2c3.1-1.2,13.9-3.7,16.9-3.5c7.7,0.4,14.8-2.1,21.9-4.9      c4.1-1.6,8.4-0.4,12.4,0.3c2.6,0.4,1.2,3.8,2,5.6C568.7,259.3,568.1,261.4,568.9,263.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#AFAFB1",
                d:
                  "M567.9,257c-1.1-3.8-2.5-7-7.3-4.1c-5.7-4-9.7,2.4-14.9,2.7c-5.2,0.2-10.9,0.9-15.9,2.2      c-5.5,1.4-11.8,0.7-16.8,4.2c-7.5-0.7-14.1-4.5-21.1-6.9c-0.2-0.1-0.4-0.3-0.6-0.4c-1.3-1.8-1.8-3.7-0.1-5.4      c1.9-1.8,3.5-0.9,5,0.9c0.9,1.1,1.7-0.7,2.7-0.4c3.2,2.7,7.3,1.4,10.8,2.5c1.5,0.3,3.2-0.3,4.6,0.7c1.1,1.4,1.9,3.5,3.8,0.6      c1.1-1.6,2.9-2.5,4.7-2.3c8.6,0.8,17-1.6,25.6-1.2c4.9,0.2,9.1-1.8,13.1-4.3c1.8-1.1,3.4-2.8,5.8-1.6c1.3,2,0.6,4.5,1.4,6.7      c0.2,0.8,0.2,1.6,0.1,2.4C568.2,254.4,568.9,255.9,567.9,257z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#474343",
                d:
                  "M563,268.9c1.3-0.3,2.7-0.6,4-0.9c0.3,0.7,0.6,1.4,1,2C566.3,269.7,564.3,270.7,563,268.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#46403E",
                d:
                  "M489,256c0.1-1.1,0.1-2.1,0.2-3.2c0.4-0.1,0.8-0.1,1.2,0.2c0.5,0.6,1,1.4,1.8,1.7l-0.2,0.4      C491.2,256.2,490.1,255.9,489,256z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C393A",
                d:
                  "M577.1,272.9c0-3.6,0-7.3-0.1-10.9c0.9-0.3,1.3,0.2,1.7,0.9c0.2,0.4,0.3,0.9,0.4,1.3      c0.5,2.2-0.7,4.7,0.9,6.8C579.9,273,578.6,273.1,577.1,272.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2C2F",
                d:
                  "M580,271c-0.9,0.3-1.9,0.8-2-0.9c0-2.1,0-4.1,0-6.2c2.6,1.3,3.5,4,5.1,6c-0.4,0.4-0.8,0.4-1.2,0      C581.2,270.1,580.4,270.2,580,271z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#141318",
                d:
                  "M591,270c3,0.4,6.2-1,9,1c-3,0-6-0.1-8.9-0.1c-0.4-0.2-0.5-0.3-0.4-0.5C590.8,270.1,590.9,270,591,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C393A",
                d:
                  "M591,270c0,0.3,0.1,0.6,0.1,0.9c-3.1-0.2-6.2,0.9-9.1-0.8c0.4,0,0.7-0.1,1.1-0.1c1.7-1.4,3.3-1.4,5,0      C589,270,590,270,591,270z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5C5857",
                d:
                  "M485,238c0.1,0.7-0.3,1.6,0.8,2.2c0.1-1.2,0.2-2.2,0.2-3.3c0.3,0.1,0.6,0.1,0.9,0.1      c0,4.3,0,8.6,0.1,12.9c-0.4,1.5,0.9,3.7-1,4.5c-1.5,0.6-2.4-1.5-3.5-2.3c-3.9-3-8.4-5.3-10.6-10c-1.7-2.8-0.7-5.9,1.3-7      c2.3-1.3,5.8-2.3,8.1,0.7C482.4,237.1,484.3,236.5,485,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635F5E",
                d:
                  "M485,238c-1.4-0.9-3.8,1.1-4.5-2.2c-0.4-1.6-7,0.1-7.5,2c-0.4,1.4-0.6,2.9-0.9,4.3      c-1.4-0.1-2.4-0.8-3-2.1c1.6-1.8,2-4.1,2-6.4c0-1.9,0.9-2.7,2.8-2.6c2.5,0.2,4.8,1.7,7.4-0.5c1.4-1.2,2.7,1.3,2.4,2.1      C482.6,235,484.8,236.2,485,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5E5C5D",
                d:
                  "M575.1,239.9c1.2,1.2,0.7,2.7,0.9,4.1c0.9,1.6,0.3,3.4,0.5,5.1c-0.2,2.6,0.4,5.2-0.4,7.8      c0,1.4-0.3,2.9,0,4.3c0.7,4.3-1.1,5.6-5,4.7c-1.7-3.2-0.8-6.7-0.9-10.1c3.2-1.4,3.7-4,3.6-7.2      C573.7,245.8,572.8,242.6,575.1,239.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2C2F",
                d:
                  "M578,263c-0.3-0.3-0.7-0.7-1-1c0-1.3,0-2.7,0-4c2.1-4.6,0.3-9.5,1.1-14.2c0.6-0.1,1.1,0.1,1.4,0.6      c0.4,0.7,0.6,1.6,0.7,2.4c0.1,4.2,0.1,8.4,0,12.6c0,1.2-0.2,2.3-0.8,3.3C579.1,263.2,578.6,263.3,578,263z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#3C393A",
                d:
                  "M576.1,256.9c0-2.7,0-5.3,0-8c0.3-0.4,0.6-0.4,0.9,0c0,2.7,0,5.3,0,8C576.7,257,576.4,257,576.1,256.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#807D7E",
                d:
                  "M575.1,239.9c0,3.6-0.3,7.2,0,10.7c0.3,3.9-0.9,5.7-5,5.3c-0.1-0.6-0.1-1.2-0.2-1.9      c-1.1-1.7-1-3.8-1.8-5.7c-0.2-5-0.7-9.9-0.5-14.9c-0.2-3.7,0.5-7.3,0.2-11c-0.3-0.8-0.4-1.6,0.1-2.4c0-3.7,0.1-7.4,0.1-11      c3.6,1.9,3.2,5.2,3.5,8.2c0.9-0.6-1.1-3.3,1.5-3.4c0.7,0.9,0.4,2,0.5,3c0.2,1.7-0.6,3.6,0.5,5.2      C574.4,228,574.7,233.9,575.1,239.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#474343",
                d:
                  "M569.1,248.8c1.2,1.6,0.8,3.5,0.8,5.3c-1.8,3-0.4,6.3-1,9.4c-0.3-2.1-0.6-4.3-1-6.4      c0.1-1.3,0.1-2.7,0.2-4C569.1,251.7,567.6,249.9,569.1,248.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5B4E4D",
                d: "M751,285c2-1.5,4-1.5,6,0C755,285,753,285,751,285z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1963,419.9c0.2-0.4,0.5-0.7,0.7-1.1c0.8-0.4,1.5-0.9,2.4-1c5.8,0,11.4,1.4,17.1,2.2      c1,0.1,1.9,0.7,2,1.9c-2.9,1.6-1.1,4.1-1.2,6.2c-2.7-1-5.3-2-8-3.1C1972.5,421.1,1966.9,422.7,1963,419.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#796D6A",
                d:
                  "M1985.2,421.9c-6.3-1-12.6-2-18.9-3c0.2-2.5,2.3-2.3,3.7-2.1c7.7,0.8,15.5,1.1,22.9,3.9      c0.5,2-0.6,1.8-1.9,1.5C1989,422.1,1987.1,422,1985.2,421.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#534A49",
                d:
                  "M1990.9,422.2c0.6-0.3,1.3-0.6,1.9-0.9c0.1-0.8,0.6-1.3,1.4-1.6c2.6,0.5,5.4,0.6,7.8,2.2      c0.3,0.3,0.7,0.6,1,1C1998.8,425.4,1994.9,422.7,1990.9,422.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#393533",
                d:
                  "M1994,420.2c-0.4,0.3-0.8,0.6-1.1,1c-6.5-1-13-2-19.5-2.8c-2.3-0.3-4.8-1.3-7.1,0.5      c-0.9,0-1.7,0-2.6-0.1c1.2-1.9,0.3-5,3.3-5.9c5.7-0.6,10.6,2.3,15.9,3.5c0.7,0.2,1.4,0.4,2.1,0.5c1.7,0.4,3.4,1.3,5.2,1      c0.3,0,0.6,0,0.9,0.1C1991.8,419.2,1993.5,418.8,1994,420.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635A58",
                d:
                  "M1944.1,411.2c0-1.7,0.6-3.4-0.2-5.1c3.7-3.2,6.5-1,9.2,1.6c-0.5,1.6-1.6,1.9-2.6,1.7      c4.4-0.2,9.5-2,14.4,0.6c0.1,0.3,0.1,0.6,0.1,0.8C1958.1,412.7,1951.1,412.2,1944.1,411.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4D4341",
                d:
                  "M1965,410c-6.2,0-12.3,0-18.5,0c1.9-2.5,4.6-0.3,6.5-2c0.2,0,0.4-0.1,0.6-0.1c1.6-0.2,3.4,0.4,4.5-1.4      c0.4-0.6,1-1,1.7-1.2c2.8,0.4,5.8-0.4,8.2,1.8c0,0.3,0,0.5,0,0.8C1967.1,408.8,1963.9,406.3,1965,410z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#594E4C",
                d:
                  "M1983.3,417.7c-5.4-1.8-10.7-4.1-16.4-4.7c-0.4-0.6-0.7-1.2-1.1-1.9c6.3,2,13,2.2,19.2,4.7      C1984.9,416.8,1983.9,417.1,1983.3,417.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#312424",
                d:
                  "M1997,416c-0.4-1.6-2.2-1.7-3-2.9c3.5,0.4,7,1.2,10.2,2.8C2001.8,415.9,1999.4,418.9,1997,416z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#DDD1D1",
                d:
                  "M1994,420.2c-1-0.7-3.4,0.4-2.9-2.2c3.7,0.7,7.6,1.1,10.9,3.2c0,0.2,0,0.4,0,0.7      C1999.3,421.3,1996.6,420.8,1994,420.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F5E4E2",
                d:
                  "M1990.1,418c-1.7,2-3.4-0.1-5-0.2c0-1.8,1-1.3,2-0.9C1988.1,417.1,1989.4,416.8,1990.1,418z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#706463",
                d:
                  "M1981,409c1.4,0.1,3-0.5,4,1c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c-0.3,0-0.7,0-1,0.1      C1983,410.3,1982,409.7,1981,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C5B3B1",
                d:
                  "M1987.1,417c-0.7,0.3-1.3,0.6-2,0.9c-0.6,0-1.2-0.1-1.8-0.1c-0.7-1.8,0.8-1.6,1.7-1.9      C1985.7,416.2,1986.4,416.6,1987.1,417z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#867E7C",
                d:
                  "M1917,382c-4-0.6-8-1.3-12-1.9c-0.2-2.9,3.1-1.4,3.9-3.1c0.1-0.4,0.3-0.7,0.4-1.1      c0.2-0.3,0.4-0.6,0.7-0.9c2,0.3,4.3-0.7,6.1,1c0.2-0.6,0,0.9-0.3,0.3c-0.4-0.6-0.9-0.2-0.3,0.1c1,0.5,2.6-0.5,2.9,1.3      c-0.5,3,1.6,1.6,2.7,1.6c2.7-0.1,4.5,0.6,4.1,3.8C1922.2,384.2,1919.5,383.7,1917,382z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#675F5D",
                d:
                  "M1924.8,383.3c-0.6-4.1-3.4-2.7-5.9-2.3c-1.1,0.2-3,0.7-3.4-0.9c-0.3-1.2,1.5-1.5,2.4-2      c1-1.2,2.3-0.4,3.5-0.5c1.2,0.4,2.4,0.5,3.4,1.4c1,0.1,1.9,0.4,2.3,1.4c0.6,1.4,0.4,2.7-0.9,3.7      C1925.5,384.4,1925,384.1,1924.8,383.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A807F",
                d:
                  "M1910,375c0,0.3,0,0.7,0,1c-1.4,1.4-3.3,1-5,1.2c-0.4,0-0.9-0.1-1.3-0.1c-3.3,0.3-6.5-0.6-9.7-1.2      c2.9-2.6,7,0.6,10-2C1906.1,374,1908.1,373.8,1910,375z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C3BDBB",
                d:
                  "M1926,384.1c0.9-1.1-0.1-2.8,1.2-3.7c0.6-0.1,1.2-0.3,1.9-0.4c0.5,1.5,1.9,0.8,2.9,1.2      c-0.5,1.6,0.1,3.2,0.4,4.8c-1.5,2.4-3.2,0.8-4.8,0.2C1926.7,385.7,1925.7,385.3,1926,384.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A807F",
                d:
                  "M1921.9,378.1c-1.3,0-2.6-0.1-3.9-0.1c-0.9-1.7-2.9-0.5-4.5-1.8c1.1-0.1,1.9-0.2,2.6-0.2      c2.3,0.4,4.6,0.7,6.9,1.1C1923.2,378,1922.9,378.5,1921.9,378.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#867E7C",
                d:
                  "M1921.9,378.1c0.4-0.4,0.8-0.7,1.1-1.1c1.2,0,2,0.5,1.9,1.9C1923.8,379,1922.7,379,1921.9,378.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D0CBC8",
                d:
                  "M1927.9,385.1c1.4,0.3,2.4,2.2,4.1,0.9c0.8-0.9,1.7-1.7,3.1-1.1c1.4,1.5,0.9,3.3,0.8,5      c-0.3,0.3-0.7,0.4-1.1,0.3c-1.8-0.4-1.8,1.1-2.2,2.2c-0.2,0.4-0.5,0.7-1,0.8c-1.7-0.4-3.7-0.4-4.5-2.5      C1926.7,388.8,1926.5,386.9,1927.9,385.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#746B6E",
                d:
                  "M1942.9,404.1c-1.2,0-1.9,0.6-2,1.8c-1.5-2.2-2.8-1.2-4,0.3c-0.6,0.4-1.2,0.4-1.8-0.1      c0-0.4-0.1-0.8-0.1-1.1c-2-3.2-0.1-6.3,0.4-9.5c0.2-0.2,0.4-0.4,0.6-0.6c2.2,1.3,3.3,2.9,1.2,5.2      C1938.4,402.5,1942.3,400.7,1942.9,404.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C4BEBE",
                d:
                  "M1935,390c0.3,0,0.6,0,0.9,0c-0.1,1.7,1.1,3.3,0,4.9c0,0,0,0,0,0c-0.9,1.1,0.2,3.1-1.7,3.7      c-1.3,0.3-2.4-0.1-3.5-0.8c-3.2-3.2-3.1-3.4,1.2-4.8l0.1-0.2C1933.5,392.4,1933.9,390.8,1935,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B5ADAC",
                d:
                  "M1935,384.9c-1,0.4-2,0.7-3.1,1.1c-0.8-1.6-4.6-3.2-0.1-4.8c1,0.2,2,0.4,3,0.6      C1935,382.8,1935,383.9,1935,384.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#D2C7C9",
                d:
                  "M1942.9,404.1c-0.8-1.6-2.2-1.1-3.5-1.1c-2.1,0.1-2.5-1.2-2.3-2.9c1.3,0,2.5-0.1,3.8-0.1      c0.3,1.1,1,1.5,2.1,1.7c0.4,0.4,0.7,0.7,1.1,1.1c0.2,0.3,0.4,0.5,0.3,0.8c0,0.3-0.1,0.5-0.2,0.5      C1943.8,404.3,1943.4,404.3,1942.9,404.1L1942.9,404.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A39A99",
                d:
                  "M1944,403.8c0-0.4,0-0.7,0-1.1c7.1,0.4,14.2,0.7,21.3,1.3c1.4,0.1,5.4-0.9,2.7,3.1c-3-0.4-6-0.8-9-1.2      C1953.7,407.2,1948.9,405.2,1944,403.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#78696C",
                d:
                  "M1985,411c0-0.3,0-0.7,0-1c1.5,0,3.1-0.2,5.9,1.4C1988,411.1,1986.5,411,1985,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#887C7B",
                d:
                  "M2011.1,535c-1,0.5-2.1,0.6-3.1,0c2.6-3.6,6,0,8.9-0.9c0.1,0.3,0.1,0.5,0.1,0.8      C2015,535,2013,535,2011.1,535z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A69B99",
                d:
                  "M2005.6,539.3c-0.3,0.1-0.7,0.4-1.1,0.3c-0.4-0.1-0.6-0.6-0.9-1c0.4-0.2,0.8-0.5,1.2-0.5      C2005.3,538.1,2005.8,538.4,2005.6,539.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5D5857",
                d:
                  "M1192,237c-6.6-0.2-13,1.3-19,4c-1.7,1.7-3.6,0.2-5.4,0.5c-1.1-0.2-1.7-1.1-2-2.1      c-0.2-2.7,3.2-4.1,2.7-6.9c3.3-1.5,4.8-0.6,4.6,3.1c0.8,0.2-1.7,2.3,0.4,1.2c6.6-3.5,14.5-1.9,20.9-6c1-0.6,2.3,0.1,3.9-0.1      c-1.3-1.1-2.6-1.6-3.5-2.5c-1.3-1.2-4-1.7-3.2-4.3c0.8-2.5,2.2-4.7,5.4-4.6c0.5,0,1,0.1,1.3-0.3c10,4.4,19.1,10.4,28.7,15.5      c1.3,0.7,0.7,1.6,0.2,2.5c-4.1-0.1-7.7,2.6-11.8,2.1C1207.4,238.7,1199.9,235.8,1192,237z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1236,251c-1.5,0.1-2.9,0.1-3.1-1.9C1234.4,249,1235.4,249.7,1236,251z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747070",
                d:
                  "M1095,181c2.3,0.6,4.9,0.4,6.4,3.1c1.2,2.3,4.9,1.9,5.7,1.2c2-1.6,3.5-0.1,4,0.6c2,2.6,4.7,3.2,7.6,3.7      c5,0.8,9.1,3.4,13,6.9c1.2-2.7-1.8-2.7-1.7-4.5c1,0,2,0,3,0c2.3,1.3,4.6,2.3,7.4,2c3-0.4,4.9,2.5,7.8,2.7      c0.6,0.3,0.4-0.8,0.2-0.2c0,0.2-0.2,0.1-0.4,0c-1.2-0.2-2.4-0.7-2-2.2c0.3-1,1.2-0.8,2-0.3c7.2,2.8,14.2,6.1,20.9,10      c-0.8,1.8,1,4.5-2.1,5.6c-1,0.3-0.2,0.9,0.1,1.5c2.1,3.6,0,6.5-2.6,8c-5.4,3-11.2,5.9-17.8,3.3c-3.9-0.1-7.6,1.1-11.4,1.6      c-1.1,0.4-2.2,0.9-3.4,1.1c-1.5,0.3-2.9,0.2-4.4,0.3c-2.2-0.3-4.2,1-6.3,1.1c-1.5-0.3-2.8-1-3.4-2.6c1.5-3.5,5.1-2.6,7.7-3.5      c3.4-1.3,6.9-1.8,10.2-3.7c3.3-1.9,7.4-0.1,11.2,0.2c3.3,0.2,6.7-2.2,7.3-5.3c0.4-2.1-0.2-3.6-2.2-4.4      c-5.9-2.4-11.7-5.4-17.9-6.6c-6.9-1.3-13.6-3.9-20.8-3.2c-1.2,0.1-2.3-0.1-3.4-0.6c-1.9-0.9-3.3-2.2-4.2-4      c-2.2,3.7-3.7,0.2-5.4-0.6c-0.8-0.4-1.8-0.5-2.4,0c-5.2,4.8-9.6,0.7-14.1-1.3c-1.1-0.5-1.8-1.2-3.2-0.9      c-8.5,2.3-17-1.3-25.6-0.2c-0.2,0-0.5-0.4-0.7-0.7c-0.7-2-0.5-3.9,1.6-5c1.1-0.6,1.4-1.2,0.8-2.3c0-0.9,0.4-2,1.1-2      c3.7-0.1,7.4-0.2,11,0.2c1.5,0.1,3.8,1.3,5.2,0.7c5.5-2.5,10.3,1.4,15.5,1.3C1091.4,182.1,1093.4,182.5,1095,181z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#615D5C",
                d:
                  "M1198,218.9c-1.2,0.7-2.6,1.3-3.7,2.3c-1.8,1.6-3.5,3.6-0.1,5.3c2.2,1.1,3.5,3.8,6.8,3.6      c-10.4,4-21.1,5.3-31.3,9.1c-0.6-2.6,2-1.8,2.3-3.1c0.2-1.6,3.2-1.8,2.3-3.6c-1.4-3.1-4-1.9-6.3-1c-0.4,0.1-0.9,0.2-1.4,0.2      c-4.3,1.3-8.8,0.8-13.2,1.1c-3.8,0.2-7,1.2-10.3,2.7c-0.5,0-0.9-0.1-1.4-0.3c-0.9-0.7-1.6-2-2.9-1.3c-3.4,2-7-0.4-10.5,0.7      c-1.3,0.4-2.5-0.7-2.7-2.2c0.2-1.3,1.1-2.1,2.1-2.7c2.2-0.4,4.5-0.6,6.4-1.9c0.5-0.1,0.9,0,1.3,0.2c1.2,1.4,2.7,1.5,4.5,1.2      c9.5-1.6,19.2-1.2,28.6-2.9c1.8-0.3,3.7-0.4,4.7-2.3c0.5-1,1.4-1.5,2.4-1.3c3.1,0.6,5.1-0.7,6.3-3.5c0.4-1,1.3-1.6,2.4-1.3      c3.6,1,3.5-1.9,4.5-3.9C1192.3,215,1195.1,217.1,1198,218.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6E6A69",
                d:
                  "M1135,228c-0.3,0-0.7,0-1,0c-0.2,0.1-0.4,0.1-0.7,0.2c-1.7,1-3.7,0.6-5.4,1.3c-0.5,0.2-0.9,0.4-1.4,0.5      c-3.7,0.3-7.5,0.7-10.7-1.9c0.7-3,2.8-2.9,5.1-2.1c1.8-1.3,3.6-2.4,6-2c1.7,1.7,3.3,1.1,5,0c1-0.3,2-0.7,3-1c3.9-1,8.2,0,12-2      c6,2.3,16.4-0.8,19.1-5.6c0.8-1.4,2.4-2.9-1-3.9c-1.8-0.5-1.8-2.6,0.8-3c0.8-0.1,1.6-0.1,2.2-0.8c-0.4-1.3-2.3-0.1-2.6-1.7      c0.5-1.7,2.9-0.4,3.5-2c5.6,2.1,10.8,5,16,8c0.2,1.9-1.3,1.6-2.3,1.7c-2.1,0.2-4,1.1-4.8,3c-2.3,5.2-7.3,6.2-11.7,7.5      c-5.7,1.7-11.7,2.6-17.4,3.4C1144.4,228.2,1139.6,231.6,1135,228z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#666262",
                d:
                  "M1135,228c2,0,4-0.1,6,0c1.4,0.1,3.1,0.8,3.1-1.7c0-0.7,1.1-1.4,1.2-1.2c2.5,4.9,4.7,0,7-0.2      c4.3-0.4,8.6-2.1,12.7-1.7c4.5,0.4,6-5.2,10.7-4c1.6,0.4-1.5-1.9,0.4-3.5c2.7-2.2,5.4-3.7,8.8-3.8c1.7,0,2.7,1.3,4,2      c1.2,2,0.1,5.3-0.6,5.1c-4.5-1.4-5.7,2.2-7.9,4.4c-0.8,0.9-1.6,0.8-2.7,0.7c-1.6-0.2-3.9-1.5-3.6,2.1c0,0.4-4,1.3-6.2,1.5      c-9.3,1-18.6,1.7-27.8,2.8C1137.6,230.8,1135.5,231.4,1135,228z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6E6A69",
                d:
                  "M1148.1,194c-1,0.2-2.2,0.5-0.7,1.6c1.1,0.8,2.8,0.6,3.8,1.9c-4.5,1.7-7.7-3.2-11.7-2.3      c-3.3,0.7-5.2-0.3-6.5-3.1c0.5-1.1,0.8-2.1-1-2c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3v0c0.7-1.2,2.1-0.3,3-1      C1139.5,189.7,1144.1,191.2,1148.1,194z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747070",
                d:
                  "M1135,188c-0.7,1.2-1.9,0.9-3,1c-0.5-1-1.6-0.8-2.4-1.3c-1.7-1-1.1-1.5,0.4-1.8      C1131.7,186.7,1133.4,187.3,1135,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#242224",
                d:
                  "M1302,282c0.2,0.9,1,2.1-0.9,1.9c-2-0.2-1.8-1.6-1.1-3C1300.7,281.3,1301.4,281.6,1302,282z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#848183",
                d:
                  "M809,188c0.3,0.7,0.6,1.4,0.9,2.1c0.1,1.3,0.1,2.6,0.2,3.9c-0.1,1.3-0.1,2.7-0.2,4      c-0.9,0.2-1.3-0.3-1.8-0.9c-2.5-3.3-5.4-4.4-9.6-3.3c-7.4,1.9-15,3.4-22.5,4.9c-2.5,0.5-4.9,0.2-7.1-1.3c0.3-3.7,4.7-7,7.5-5.4      c2.3,1.3,3.8,0,5.6-0.6c1.9-0.6,3.9-0.8,5.8-1.4c6-0.9,10.4-5.7,16.8-6.4c3.6-0.4,4.3-0.1,3.9,3.1      C808.4,187.2,808.6,187.6,809,188z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#595658",
                d:
                  "M815,241c-1.6-1.4-0.8-3.3-0.9-5C815.6,237.4,814.8,239.3,815,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#98989B",
                d:
                  "M810.9,216c0,0.3,0,0.7,0,1c-0.5,4.6-4.3,3.1-5.9,2.2c-5.1-3-8.4,0.9-11.6,3c-3.1,2.1-5.7,3.7-9.3,2.2      c-3-1.2-6.4,0.1-9.3-1.3c0.6,2.7,2.2,5.9-0.8,8.3c-2.8,2.3-3-2.2-5-2.3c0,5.4,2.5,7.9,8.1,6.9c3.8-0.7,4.7,1,5.1,4      c-4,2.3-8,3.8-12.6,1.6c-3.2-1.5-5.9-1.8-9.2,0.7c-4,3-9.5,1.9-14.2,3.4c-3.3,1-6.9,0.8-10.2,2c-1.8,0.6-4,0.5-5.5-1.3      c-1.7-5.6-0.8-6.6,4.8-5.8c2.9,0.4,5.6-0.7,8.2-1.6c4.1-1.5,8.1-2.8,12.7-1c-0.9-3.9-4.1-3.3-6.1-3.5c-5.5-0.5-11-2-15.7,3.6      c-2.6,3-7.6,3.2-11.9,4c2,2.4,5.6,2.2,7.4,4.8c-2.2,5-8.9,6.2-13.4,2.4c3.5-4.3,0.7-8.9,0.7-13.3c0-1.8-2.5-1.6-3.8-1.1      c-4.6,1.8-9.6-0.5-14.2,1.6c-1.9,0.8-3.3-0.9-3.5-3.1c2.5-4.7,4.5-5.4,12.1-4.1c6.6,1.1,12.9,0.7,18.9-2.8      c2.6-1.5,5.1,0.4,7.8,1.1c-0.3-4.1,3.5-4.2,5.3-3.6c5.3,1.8,9.2-1.3,13.5-2.7c1.5-0.5,2.6-1,4.1,0c3.8,2.4,5.6,2.1,7.3-2      c1.6-3.9,3.9-4,7-2.7c2.4,2.3,4.7-0.3,7-0.2c0.4-0.2,0.8-0.4,1.3-0.6c2.9-0.5,6-0.1,8.8,0.1c4.3,0.4,6.8-1.4,8.6-4.5      c1.5-2.5,3-2.9,5.1-1.5C805.4,211.8,810.3,210.9,810.9,216z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9C9BA0",
                d:
                  "M782,240c-1.4-1.5-2-5.6-5-1.5c-2.7-2.2-7.1-1.2-8.8-3.6c-1.2-1.6-1.6-5.1-0.9-8.3      c1.5,0.7,2.9,1.4,4.3,2.1c0.9,0.5-0.6,3.3,2,2.1c1.4-0.7,1.1-2,0.8-3.5c-0.4-2.1-0.1-4.2-0.1-7c0.6,1,0.9,1.9,1.1,1.9      c5-0.6,9.8,2.5,14.8,0.8c0.6-0.2,1.3-0.2,1.9-0.3c-2.2-5.8,3.3-1.6,4.3-3.3c3.6-6.2,8.4,0.4,12.5-1c0.9-0.3,1.1,0,2.1-1.3      c1.1,5.2,1.1,10.5,1.1,15.8c0.8,2.9,0.1,5.9,0.4,8.8c0.3,2.3-1,2.9-2.9,2.7c-1.5-2.6-3.7-3.1-6.8-3.4      c-6.3-0.7-12.4-0.9-18.5,0.9C782.8,242.3,781.8,241.9,782,240z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8D8D8E",
                d:
                  "M809,197c0.3,0.3,0.6,0.7,0.9,1c0.2,0.7-1.1,1.4,0,2c0.8,0.8,0.5,1.8,0.5,2.7c-0.2,0.6-0.3,1.3-0.4,1.9      c-0.4,4.8-0.5,4.8-4.5,2c-0.9-0.6-1.8-0.8-2.8-0.9c-6.5-0.7-12.3,1.1-18,4c-0.4,0.3-0.8,0.5-1.3,0.5c-1.2-0.9-2.2-1.4-3.9-1      c-4.8,1.1-9.8,1-14.5,2.3c-1.2,0.3-2.7,0.4-3.3-1.3c-0.3-3.4-0.8-6.6,4.7-6c1.8,0.2,4.5-0.9,6.4-2.4c1.3-1,2.7-2.4,3.8,0.3      c0.1,0.2-0.4,1,0.3,0.5c5-3.5,11.1-1.9,16.5-3.7c1.3-0.5,2.4-1.1,3.4-1.8c1.3-0.8,2.6-1.7,4.1-1c1.8,0.8,3.4,0.7,5-0.7      C808,193.8,808.3,195.8,809,197z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#949496",
                d:
                  "M803,205c3.3-1.6,3.8,1.9,5.7,2.9c0.9-1.4-0.5-3.5,1.1-4.8c1.3,1.5,0,3.5,1,5.1c0,2.6,0.1,5.2,0.1,7.9      c-1.3-3.4-5.3-2.4-7.6-4.4c-0.7-0.6-2.3-1.7-3.7-1.8c-2.1,5.7-5.3,7.6-11.1,6.6c-0.5-0.1-1,0-1.4,0.1c-1.7,0.4-3.5,3.4-4.8-0.4      c-0.8,0.3-1.5,0.6-2.3,0.9c-0.3-0.4-0.7-0.8-1,0c-3.3,1.9-6.3,1.9-7,0c2.8-4.4,6.5-7.3,12-7l0,0c1.9-2.1,4.8-1.7,7.2-2.2      C795.1,206.9,798.8,204.7,803,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#87868C",
                d:
                  "M809,243.9c2.1-0.4,3.4-1.2,3.1-3.8c-0.3-2.4,0-4.9,0-7.3c1.6,2.9,0.4,6.1,1,9.1      c0.6,1.3,0.2,2.8,0.3,4.2c-2.6,4.7-5,1-7.5-0.1c-0.2-0.4-0.2-0.8,0-1.3C806.9,244,807.9,243.9,809,243.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6B6868",
                d:
                  "M810.9,208.1c-1.3-1.5-0.6-3.4-1-5.1c0-1,0-2,0-3C812,202.5,810.7,205.4,810.9,208.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#595658",
                d:
                  "M812.9,247c0.1-1.7,0.1-3.3,0.2-5c0.3,0.3,0.6,0.7,0.9,1c0,2,0,3.9,0,5.9c-0.4,0-0.7-0.1-1.1-0.1      C812.4,248.2,812.4,247.6,812.9,247z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747273",
                d:
                  "M890.9,187.2c-1.7-3.2-2-6.6-2-10.1c-0.2-1.4-0.5-2.9-0.4-4.4c0-0.6,0.2-1.8,0.7-1.6      c5.1,2.1,8.1-4,12.9-3.1c0.3,0.1,0.6,0,1,0.1c8.6,3.9,17.7,4.5,26.9,4.7c3.9,0.1,7.8,0.3,11.8,1.1c2.3,0.4,5.2-0.6,8,0      c2,0.5,3.8,0.9,5,2.8c1.4,2.1,3.7,3.3,6,2.9c8.2-1.4,15.8,1.5,23.6,2.9c3,0.5,6,0.3,8.9-0.4c2.3-0.6,4.7-2.4,6.1,1.3      c0.4,1.1,0.8-0.2,1.2-0.4c1.9-1.1,4-1.2,5.8-0.3c1.8,0.9,2.5,0.6,3.4-0.9c0.7-1.2,2.7-2.1,3.4-1.1c3.1,4.6,8.2,2.6,12.2,4.1      c2.2,0.8,4.6,1.3,2.1,4.3c-1.4,1.4-4,0.9-4.4,4.2c-0.3,2.4-4,0.4-6,1.1c-1.3,0-2.7,0.3-3.7-1c-0.4-0.5-1.1-1.3-1.6-0.9      c-5,3.3-10.3-1.6-15.3,0.6c-2.9,1.3-4.8-0.3-5.6-3.1c-2.6,3.6-5.3,4.7-8.9,1.6c-2.2-1.9-5.2-1.5-7.6-1.2      c-7.9,1-14.8-2.1-21.5-5.3c-3.3-1.6-6.2-2.2-9.5-1.1c-2.4,0.8-4.3,0.5-6.5-0.9c-2.4-1.5-5.4-0.3-8.2-0.8c-6.2-1-12.6,0-18.4-3.2      c-2.4-1.3-2.3,3.5-4.7,2.1c-1.6-0.9-1.8-3.5-4.5-3.1c-2.7,0.3-3.5,2.2-4.5,4.1C895.4,184.8,895.1,188,890.9,187.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#807C7E",
                d:
                  "M890.9,187.2c1.7-1.4,4.4-2.1,4.1-5.2c5.9-0.1,11.6,1.2,17.4,1.7c2.8,0.2,5.7,0.4,8.6-0.5      c1.4-0.4,2.9-1.3,3.5,1c-0.1,0.3-0.2,0.5-0.3,0.7c0.3,0,0.5-0.2,0.9-0.1c9.6,1.7,19.1,4.5,29,2.4c1.1-0.2,2.9-0.3,3.2,0.7      c1.5,4.2,5.2,4.2,8.5,5.4c2.1,0.8,3.1,3,1,5.2c-3.9,0.7-7.9,1.1-11.9,0.5c-0.8-0.2-1.8-0.5-1.9-1.3c-0.5-3.9-3.2-3.4-5.8-2.9      c-1.2,0.1-2.3-0.2-3.4-0.3c-3.9-0.5-7.7,0.2-11.7-1.4c-3.4-1.4-7.9,0.2-11.9,0.1c-5.3-2.7-11.1-3.6-17-4.1c-0.9-0.1-0.9,1.8-2,2      c-0.3,0.2-0.6,0.1-0.8-0.3c0,0.3,0.2,0.6,0.5,0.8c0.5,1.1,0.8,3-0.8,2.6c-3.3-0.9-4.8,1.2-6.7,2.9c-0.5,0.2-0.8,0.2-1.2-0.2      C891.7,193.7,891.3,190.4,890.9,187.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6B6C",
                d:
                  "M903,169c-2.9,0-5.2,2.2-8.3,2.1c-2.6-0.1-0.9,3-2.2,4.1c-2.1-0.2-1.9-2.3-3-3.3      c-1.3,1.7,0.8,3.5-0.5,5.1c-1.3-1.4-0.8-3.2-1-4.9c-0.8-5.9,3.7-6.6,7.5-6.6c2.4,0,5.3-0.2,7.6,1.4      C903.6,167.7,903.6,168.3,903,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383638",
                d:
                  "M892,196.9c0.3,0.1,0.6,0.2,0.9,0.3c1.7,1.8,1.6,3.7,0.3,5.6c0,0-0.3,0.2-0.3,0.2      C891.3,201.2,892.2,199,892,196.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#666466",
                d:
                  "M779,152c1.1-1.3,2.3-1.3,4.2,0.2C781.4,152.1,780.2,152.1,779,152L779,152z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6C6E",
                d:
                  "M802,169c0,2.7-0.6,3.7-2.5,1c-0.6,3.8-3.6,0.9-4.6,1.6c-4.1,2.7-8.9,0.1-12.9,2.5c-0.2,0-0.5,0-0.7,0      c-7.5-2.3-14.2,1.8-20.7,3.7c-4.4,1.3-8,3.4-12.5,1.2c-4.1,5.1-9.5,3.5-14.8,3.1c-2.5-0.2-3.2,3-4.7,4.8      c-0.4,0.3-0.8,0.5-1.3,0.6c-5.5-1-10.8-2.3-16.3,0.7c-3.4,1.9-7.8,0.4-11.8,0.5c-1.5,0-3-0.6-4.3,0.5c-3.7,3.4-8.8,4.8-13,5.5      c-5.4,0.9-10.4,4.8-16.2,2.8c-3-1-5.1,0.7-7.1,2.5c-1.7,1.4-3,2.5-4.5-0.6c-1-2-3.8-1.5-5.1-0.6c-5.6,4.1-12.2,2.8-18.2,3.2      c-9.2,0.7-18.4,1.8-27.6,1.7c-2.5-0.3-5,0-7.4,0.5c-2.7,0.6-4.5-0.2-5.1-3.1c0.7-3.4,2.7-4.6,6.1-4c3.4,0.6,6.9,0.1,10.3,0.8      c3.4-2.1,6.8-1.5,10.6-1.4c4.6,0.1,10.2,0.6,15.2-2.8c3.3-2.3,8.5-1.9,13-2.7c0.6,1.3-2.3,1-1.1,2.4c0.5,0.6,1.9,1.2,2,0.5      c0.4-2.8,7.4,0.7,3.9-5.5c2.9,1.6,3.7,6.1,7,4.2c1.8-1,8.9-4.8,10.9-3.7c3.9,2.3,9.4-3.7,10.1-1.2c0.3,1.2,1.2,3.3,3.1,1.4      c1.3-1.2,1.6-2.8,0.7-4.6c-0.4-0.9-0.6-1.9,0.4-3.2c2.2,3.5,15-1.2,16.4-0.7c4.7,1.5,7.8-0.9,11.2-2.7c1.4-0.7,2.9-1,3.6,0.1      c2.1,3.3,5.7,1.9,8.5,3c2.8,1.1,0.7-2.5,2-3.3c1.9,1.6,4.2,1.5,6.3,0.8c2.1-0.7,4.8-0.6,4.7-4.4c-0.1-1.9,2.8-1.4,4.3-1.1      c5.7,1,10.8,0,15.6-3.4c1.6-1.1,4.5-1.1,6.7-0.7c4,0.8,8-1.7,12.1,0.8c0-1.7,0-3.2,0-4.9c1.9,1.7,3.6,3.3,6,5.5      c0-3-0.1-4.9,3.6-3.9c2.8,0.8,6.5,2.2,8.9-1.5c1.9,2.1,4.7-1.7,6.5,1C799.7,167.3,800.7,168.3,802,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6B696A",
                d:
                  "M607,198c-2.6,1.8-5.4,1.2-8.1,0.4c-3.7-1-6.6-0.5-7.9,3.6c-0.2,0.1-0.3,0.3-0.5,0.4      c-1,0.4-2.1,0-3.1,0.2c-1.9,1.1-4.1,0.3-6.1,1c-3.1,1.1-1.4-3-3.2-3.6c0-2,0-4,0-6c1.1-0.9,2.1,5,3.6-0.1c0.3-0.9,4.3-1.2,6-3.4      c0.7-0.9,1.6,1.5,2.3,2.4c-0.2,0.8-0.7,1.7-0.5,2.3c0.3,0.7,1.2,0.3,1.7-0.1c2-1.8,3.7-3.7,5.3,0.5c0.6,1.6,2.4,0,3.6,0.4      C602.4,196.7,605.6,194.2,607,198z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#656366",
                d:
                  "M639,187c1.1,0.3,2.6-0.6,3.4,0.9c0.1,0.2-0.4,0.8-0.7,0.9C640.1,189.2,639.2,188.6,639,187L639,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#656366",
                d:
                  "M648,187c0.8,0.5,2.1,1.1,1.5,2.1c-0.6,1.1-1.2,0.2-1.4-0.6C648,188,648,187.5,648,187z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6C6E",
                d:
                  "M800.4,164.3c0.2,0.2,0.8,0.5,0.8,0.8c0.2,1-0.7,0.8-1.3,0.8c-0.3,0-1,0.6-0.9-0.4      C799.2,164.9,799.4,164.3,800.4,164.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6C6E",
                d:
                  "M805,166c-0.6,1.4-1.6,2.4-3,3C802.1,167.1,803.1,166.1,805,166z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#929192",
                d:
                  "M895.9,212.2c-1-1.2-1-2.7-0.9-4.1c-1.6-3.3,0.5-5,3.1-4.4c7.3,1.7,14.7-0.9,22.2,1.5      c4.2,1.3,9.4,2.1,14.2,0.3c1.8-0.7,3.5-0.3,5.3,0.4c3.4,1.3,6.8,2.6,10.2,3.9c3,1.2,5,0.7,7.2-1c3.6,2.1,6.4,5.3,11.5,5.2      c4.1-0.1,8.3,0.4,12.6,0.1c3.9-0.3,4.7,1.4,3.4,5.2c-0.7,1.9,0,4-1.4,5.7c-0.4,0.2-0.9,0.3-1.3,0.2c-0.7-0.4-0.9-1.9-1.7-1.4      c-3.8,2.3-7.9,1.7-11.9,2.3c-3.4,0.5-6.8,2.2-10.3,3.1c-7.9,2-16.1,2.3-23.9,4.6c-1.5,0.4-3,0.4-4.4-0.1      c-1.9-0.6-3.2,0.2-4.3,1.7c-0.4,0.3-0.8,0.5-1.3,0.6c-0.9,0.2-1.9,0.3-2.9,0.3c-1.9,0-3.7-0.2-5.5,0.4c-0.4,0.1-0.9,0.2-1.4,0.3      c-4.6-1-8.6,2.3-13.2,2c-0.5-2-1.4-3.9-1.1-6c0.4-0.3,0.8-0.4,1.2-0.2c4.1-0.3,8.3,0.2,11.9-2.6c0.4-0.3,1-0.6,1.4-0.5      c5.3,2.7,9.8-2.1,14.6-1.8c6.1,0.4,10.4-3.1,15.3-5.3c0.9,1,1.8,1.8,2.9,0.2c1.9-0.2,1.7-1.8,2.2-3.3c-2.3,0.4-1.2,3-2.7,3.7      c-0.7,0.5-1.3,0.4-1.8-0.1c-1.6-1.6-1-4.2-2.8-5.7c-0.8-0.6-2-1.8-2.5-1.4c-4.7,3.6-7.2-4.3-11.6-2c-3.4,1.8-7.1,3.5-9.3-1.9      c-0.6-1.4-3.1-1.7-4-1c-2.7,2.3-5,1.5-7.9,0.5C903.2,210.2,899.6,212.6,895.9,212.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9A989A",
                d:
                  "M895.9,212.2c1.3-2.7,1.3-2.7,3.3-1.4c0.4,0.3,0.8,0.5,1.1,0.8c1.5-3.5,4.5-0.5,6.3-1.5      c1.8-1,2.9-1.8,3.4,1c0.4,2.3,1.4,0.3,1.9,0c3.8-2.2,7.3-3.2,9.2,2.3c0.5,1.5,1.3,1.6,2.7,1.1c4-1.4,8.3-6.5,11.4,1.1      c0.1,0.1,0.5,0.2,0.7,0.2c8-1.1,9.2-0.2,9.2,7.1l0,0c-2,2.7-6.1,2.4-7.8,5.6c-0.3,0.5-1.8,1.1-2.2,0.8c-4.2-3-7.9,1.8-12,0.8      c-2.5-0.6-3.6,2.2-6.1,2.6c-3.3,0.6-11.5-1.2-15.1,2.6c-0.4,0.4-0.6-1.5-0.8-2.4c0.1-2.7,2.2-3.2,4.1-3.5c3.3-0.5,6-2.7,9.2-3.5      c1.8-0.5,2.5-2,1.1-3.3c-1.7-1.6-1.7-5.5-5.8-4.1c-1.3,0.4-3.3-0.5-4.8,0c-2.9,1-5.4,0.2-7.8-1.3      C895.8,215.7,895.9,214,895.9,212.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C8A8B",
                d:
                  "M957,209c-1.1,3.8-2.1,4.6-6.4,2.3c-3.7-2-8.3-3-12.4-4.9c-0.6-0.3-1.5-0.4-1.9-0.2      c-4.5,2.9-9.2,0.2-13.8,0.8c-0.8,0.1-1.9,0.3-2.5-0.1c-6.9-4.4-14.8,0.8-22-2.4c-1.5-0.6-3.6,1-3,3.6c-1.2-1.5-0.9-3.3-1-5      c-0.8-1.2-0.3-2.4-0.4-3.7c1.1-2.5,2.8-0.1,4.2-0.3c3.7-0.4,7.1,0.1,11-1.4c2.4-0.9,7.5,0.3,10.9,2.4c0.7,0.4,1.7,1.5,2,1.2      c4-4.3,8.2,1.3,12.2-0.4c1.6-0.7,3.8-0.4,5.3,0.7c5.8,4.2,12.5,3.6,19.1,3.8c3.8,0.1,4.1,1.5,1.8,4.1      C958.8,210.5,957.8,210.3,957,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9F9FA0",
                d:
                  "M896.9,217.2c0.4-0.5,0.8-1,1.2-1.5c2.4,3.7,5.8,1,8.7,1.3c1.1,0.1,2.5-0.1,3.4,0.4      c4.7,2.8,0.6-1.9,2.2-2.2c2.1,2,1.6,6,5.1,7.5c0.8,0.4,0.3,4-3.2,5.1c-4.5,1.4-9.4,2-13.3,5.2c-0.3,0-0.7,0-1,0      C898.7,227.8,897,222.6,896.9,217.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6E6D72",
                d:
                  "M921,244c-4.3,0.3-8.7,0.7-13,1c-1.3,0-2.7-0.1-4-0.1c-1-4.4,2.4-4,4.8-4.3c7.1-0.7,14.2-0.4,21.2-2      c7.8-1.8,15.8-1.1,23.7-2c6.1-0.7,12.2-1.1,18.3-1.7c2.3,0.1,4.5,0.6,6.8,0.7c1.7,0.1,3.8-0.1,4.4,2.3c-1.6,2.9-4.5,2.4-7,2.5      c-11.2,0.4-22.4,1-33.5,3c-3.2,0.1-6.4,0-9.6,0.1C929.1,243.8,925,242.8,921,244z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#77767B",
                d:
                  "M972,236c-4.7,2.1-9.8,1.5-14.7,1.7c-14.1,0.7-28.1,2.5-42.2,4.2c-2.4,0.3-4.9,0.1-7.4,0.1      c-2.1,0-3.6,0.6-3.8,2.9c-2.3,0.1-2-1.5-2-2.9c1.2-1.7,2.9-2.4,5-2.8c7.3-1.3,14.5-2.7,22-2.5c2.2,0.1,4.2-0.8,6.2-1.6      c2.6-0.6,5.2-0.6,7.8-0.2c2.6,0.9,5.3,0.5,7.9,0.2c5.8-0.9,11.8,0.4,17.5-1.7c1.3-0.5,2.6,0.1,3.6,1.1      C972.3,235,972.3,235.5,972,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#848182",
                d:
                  "M894,199c0,1.4,0,2.7-0.1,4.1c-0.3-0.1-0.5-0.2-0.8-0.3c-0.1-1.9-0.2-3.7-0.3-5.6      c-0.2-2.3,2.5-2.7,2.8-3.6c1.2-3.1,1.8-1.9,3.3-0.4c0.8,0.8,1,0.6,1-2.2c2.4-3.7,6.3-2.9,9.7-2.8c3.4,0.2,6.3,3.2,10.1,2.9      c0,0,0.1,1.2,0.2,1.9c0,0.2,0,0.5,0.1,0.7c-0.2,1.7-0.7,2.7-2.9,2.1c-3.3-1-6.8-0.9-10.3-0.5c-1.9,0.2-3.7,0.1-5.2,2.1      C899.8,200,896.5,197.9,894,199z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828286",
                d:
                  "M935,236c-1.8,2.2-4.4,2-6.9,2c-8.9,0.1-17.6,1.5-26.1,4c-0.1-0.3-0.2-0.6-0.2-0.9c2.5-3.4,5.8-5,10-4.4      c1.2,0.1,2.2,0.1,3.2-0.7l0,0c1.8-1.4,4.2,0.7,6-1c1,0,2,0,3,0C927.7,235.4,931.5,233.3,935,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C8B8C",
                d:
                  "M915,236c-0.5,0.9-1.2,2-2.1,1.7c-4.7-1.8-7.6,1.8-11.1,3.5c-0.8-0.5-0.8-1.3-0.7-2.1      C905.4,236.3,910,235.2,915,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5D5959",
                d:
                  "M878.4,157.1c-1.9,2.7-4.4,3-7.1,2.6C873.1,157.9,874.8,155.5,878.4,157.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#757477",
                d:
                  "M782,174c2.5,5.8,3.5,6.2,7.3,3.4c0.8,1.1-0.4,3.2,1.7,3.6c-1.6,3.5-5.3,4.7-8.2,4.7      c-3.3,0.1-6.4-0.7-9.5,1.3c-1.3,0.9-2.9-0.4-4.4-0.1c-7.8,1.9-15.5,4.7-23.6,4.3c-2.4-0.1-3.9,1.7-6,2c-3.4,0.4-6.3,0.6-9.7,3.2      c-4,3.1-10.1,5.2-15.9,3.6c-3.2-0.9-5.8-0.4-8.3,1.7c-1.4,1.2-3.1,2-5,1.7c-2.1-0.3-3.9,0.2-5.6,1.5c-1,0.8-2.2,1.8-3.4,0.1      c-0.3-0.4-1-1-1.1-0.8c-3.4,5.8-8.6-1.3-12.5,1.8c-3.7,2.9-8.9,2.5-12.9,4.8c-2.1,1.2-3.9-0.3-5.8-0.1c-3.2-1.3-6.2,1.5-9.4,0.7      c-6.1,1.9-12.6-0.2-18.7,1.7c-8.5,2.6-17.4,0.6-25.9,2.7c-1.3,0.3-2.6-0.1-3.8-0.7c-2.4-1.1-5.2-1.5-7.3-0.7      c-5,1.9-9.6,1.8-14.5,0c-0.2-0.1-0.7,0.6-1.3,0.5c0-2,0-4-0.1-6c0.5-1.8,0.4-2.7,3.5-2.4c7.9,0.5,15.7,1.2,23.5,2.2      c2.8,0.4,6.4-0.9,8-4.3c2.8,1.9,6.1,2.4,9.1,1.9c11.1-1.9,22.4-1.7,33.6-2.7c3.2-0.3,6.3-3.8,9.7-0.6c0,0,0.3,0,0.4-0.2      c3.4-6.2,9.7-3,14.5-4.4c2.2-0.7,4.7-0.1,6-2.8c0.1-0.3,0.7-0.7,0.7-0.6c4.3,4.9,8-3.5,12.4-0.4c1.7,1.2,3.2,0.1,4.9-1.8      c2.2-2.5,6.5-4.3,9.8-2.5c4.7,2.6,7.7,0.4,11.1-2c0.8-0.6,1.7-1,2.6-1.4c6.6-2.5,13.5-2.6,20.4-3.1c6.8-0.5,13.5-1.3,19.8-5      C772.2,176.5,777,174.3,782,174L782,174z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7D7C7F",
                d:
                  "M578.1,215c1.1-2.9,3.3-1.1,4.9-0.9c3.3,0.4,6.2,1.9,9.4-1.1c1.2-1.1,5.1-0.9,6.7,0.2      c4.3,2.9,8.5,0.6,12.7,0.6c3.8,0,7.7-0.4,11.6-0.3c1.7,0.1,4.6,0.6,4.9-2.7c3.8,2.6,7.6-1.1,11.4,0c0.8,0.2,7-0.2,7.4-0.7      c1.7-1.9,2.5-1.2,2.9,0.9c-0.1,3.8-3.8,3.8-5.9,5.5c-0.7,0-1.3-0.3-1.9-0.6c-1.4-0.6-3-0.7-4.3-0.1c-4,1.9-8,3.7-12.4,1      c-0.4-0.2-1.2,0.4-1.8,0.7c-1.4,0.5-2.9,0.9-3.8,2.2c-0.3,0.3-0.7,0.6-1.1,0.7c-0.7,0.2-1.4,0.1-2-0.3c-1.9-2.5-4.3-3.3-7.3-2.4      c-3,1-6.6-0.9-9.3,1.9c-2.5,1.5-5,1.3-7.7,0.5c-5.1-1.3-9.9,0.2-14.7,1.6c-0.2-1-0.3-1.9,0.2-2.8C578,217.7,578,216.4,578.1,215      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#717173",
                d:
                  "M613,205c-0.6,0.4-0.9,1-0.6,1.7c0.5,1.1,2.4,2.1,0.8,3.4c-1.5,1.2-1.7-0.8-2.5-1.4      c-0.9-0.7-1.6-0.6-2.5,0.4c-1.6,1.7-3.5,2.7-5.5,0.4c-0.9-1-1.6-1.1-2.4,0c-1.3,1.8-2,1.7-2.1-0.6c0-0.3-0.9-0.8-1-0.7      c-4.7,3.2-9.4-1.7-14.2-0.1c-1.1,0.4-3.4,2.8-3.3-1c-0.6,0.7-1.1,1.3-1.7,2c0-3,0-6,0-9c0.3-0.1,0.8-0.4,0.9-0.3      c1.8,1.8,6.3,2.4,9,1.3c0.8,1.1,1.5,2.3,3,1c3,3.1,6.3-0.2,9.4,0.2c1,0.1,1.9-0.2,2.6,0.8c2.9,0.1,5.7,1.3,8.6,0.6      C612.5,203.4,613.3,203.8,613,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2C2F",
                d:
                  "M577.9,219.1c0.1,1,0.1,1.9,0.2,2.9c1.9,3.7,2.2,7.4-0.2,11c-1.7-4.6-0.5-9.4-0.8-14.2      C577.3,218.9,577.6,219,577.9,219.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#626061",
                d:
                  "M650.5,167.4c1.7-0.4,2.7-0.8,3.6,0.2C653,168.2,652,168.2,650.5,167.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#908F95",
                d:
                  "M809,243.9c-0.7,1.2-1.9,1-3,1c-5.9,0.1-11.9-0.7-17.7,1.2c-4.2,1.4-8.6,0.5-12.9,0.4      c-7.7-0.2-15.1,2.1-22.6,2.7c-0.8,0.1-1.6,0-2.5-0.3c2.5,1.2,5.7-1.4,8,1.8c-4.2,1.6-8.4-0.4-12.3,1.2      c-12.2,0.9-24.4,2-36.7,2.8c-7.8,0.5-15.6,0.8-23.3,1.1c-1.6-1-3.2-0.4-4.8-0.2c-0.8,0.1-1.8-0.2-2-1c-0.3-1,0.7-1.6,1.4-1.7      c5.4-0.6,10.4-3.8,16.1-2.7c5.4,1,10.8-2,15.7,0.2c-0.1,0.1-0.8-0.1-1.1-0.6c-0.4-0.6,0-1.3,0.7-1.6c1.8-0.8,3.5-0.9,5.1,0.6      c4.7,1.5,9,1,13-2c0.1-0.6,0.4-0.9,1-1c6.9,0.9,13.5-0.9,19.8-2.9c2.5-0.8,5.1,0.9,7.2-1.1c5.2-4.6,10.2-2.4,15.8-0.5      c1.6,0.5,5.5-0.4,8.2-1.5c2.1,3,4.5-2.6,6.6,0.3c2.7-3.2,6.2-1.1,9.2-1c2.6,0.2,5.2,0.9,7.8,0.6      C809.1,239.4,809.6,241.2,809,243.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9A9A9F",
                d:
                  "M717,249c-1.6,0-3.3,0-5,0c0.1,1.1,1,0.8,1.4,1.1c1.2,0.9,0.1,0.9-0.4,0.9c-6.4-0.9-12.6,1.6-19.2,0.5      c-4.3-0.7-9,2.8-15,2.4c3,1.8,5.6,0.1,7.2,2.1c-1.4,0.3-2.8,0.6-4.1,0.9c-0.2,0.2-0.4,0.4-0.6,0.6c-3.1,1.2-6.2,1.3-9.3-0.1      c-1.8-3.2,0.2-4.2,2.9-5c-1.4,0.4-2.7,0.7-4.3-1.2c3.6-2.7,8.1-0.8,11.6-2.4c2.5-0.7,3.6-2.4,3.5-5c-0.1-1.9-0.1-3.9,0.5-5.7      c3.1-6.1,3.9-6.5,9.2-5.6c0.2,0.2,0.4,0.4,0.6,0.6c1.3,1.6,2.1,4.7,4.7,0.7c0.8-1.3,3.6,0.5,5.8,0.4c2.8-0.2,5.5-0.5,8.2-1      c2.6-0.4,4.4,0.1,4.4,3.5c0,3.1-1.6,6.9,2.3,9.3c0.8,0.5-0.6,2-1.5,1.8C718.4,247.3,717.9,248.4,717,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#141318",
                d:
                  "M578,263c0.4-0.1,0.9-0.2,1.3-0.2c1-0.9,2.3-1,3.5-1.1c3.4,0.3,19.2-1.1,26.9-1c2.5,0,4.9-0.1,7.3-0.9      c8.1-1.8,16.4-0.8,24.6-2.2c0.9-0.1,1.7-0.1,2.6-0.1c4,0.1,8,0,12,0.1c4.1-0.3,8.3,1.6,12.4-0.3c0.5-0.1,1-0.2,1.5-0.2      c4,0.4,7.9,0.9,11.9-0.3c0,0-0.1,0-0.1,0c2,0.9,5.1-1.6,6.1,2.1c-3.7,2.6-7.9,1.9-12,2c-1.7-0.8-3.3-0.8-5,0      c-5.7,2-11.8-0.2-17.8,1.7c1.7,1.9,3.4-0.8,4.9,0.9c-2,1.1-4,2.2-6.2,0.8c-4.3-2.8-8.2-1.9-12.2,0.7c-5.3,3.4-11,2.3-16.3,0.7      c0.3-0.2,0.1-0.1,0,0c0.3-0.2,0.5-0.3,0.8-0.5c-0.1-0.1-0.2,0-0.7,0.5c-4.6,0.1-8.8-0.2-13-0.1c-3.5,0.1-6.8,2-10.4,2.2      c1.9,0.1,3.8,0.2,5.7,0.4c0,0.2,0,0.3,0,0.5c-3.5,0-7.1,0-10.6,0c-0.1-1.2,1.9-0.1,1.9-1.3c-3.7-1.6-6.1,1.3-9,2.6      c-1.7,0-3.3,0-5,0c-3.5-0.4-4-3.4-5-6C578,263.7,578,263.3,578,263z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#87868C",
                d:
                  "M746,252.1c3.4-2.5,7.5,0,11.9-1.9c-4.1,0-7.4,0-10.6,0c-0.3-1.5,0.8-1.9,1.3-1.8c6.5,1,12.5-3,18.6-2.6      c5.4,0.3,10.6-2,16.1-0.2c2.3,0.8,5.4-1,8.1-1.4c5-0.8,9.9-1.3,14.7,0.8c0,0,0,0,0,0c-2.2,2.3-5.1,2.5-7.8,2.2      c-6.3-0.6-12,2.2-18.1,2.8C768.7,250.9,757.4,252.2,746,252.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7E7E83",
                d:
                  "M780,250c1.2-1,2.1-3.2,4.2-1.1c0.2,0.2,0.8,0.2,0.9,0.1c6.1-5.9,14.2-1.1,20.9-3.9c2.1,1.2,4,3.4,6.9,2      c0,0.6,0,1.2-0.1,1.8C801.9,249.2,791,249.6,780,250z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7D7C7D",
                d:
                  "M769,186c4.9,0.4,9.4-4.3,14.5-1c1.5-3.2,5.5-1.7,7.5-4c2.5-2.8,5.8-0.3,8.7-1.1      c2.1-0.5,4.4,0.3,6.7-0.7c2.8-1.2,0.8,2.6,2.5,2.8c0,2,0.1,4,0.1,6c-1.6-1-0.5-2.8-0.8-3.3c-8-1-13,5.5-20.2,6.3      c-5.8-1.7-11.7-1.6-17.4-0.3c-2.8,0.6-3.6-0.1-3.9-2.5C766.5,186.4,768.2,186.8,769,186z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6C6E",
                d:
                  "M806.8,173.4c-2-0.8-3-1.7-2.2-4.5C806.3,170.2,807,171.4,806.8,173.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828385",
                d:
                  "M577.8,233c0.1-3.7,0.1-7.3,0.2-11c2.7-3,5.7-3.2,9.7-3.2c4,0.1,8.2,2.6,12.2,0.2      c3.4-0.3,6.8,0.1,10.1-1.4c2.4-1.1,5.2-0.2,6.9,2.4c0.7,0,1.3,0,2,0c0.1,2.2-2,2.6-3.3,3.7c-5.9,1.1-11.8,0.5-17.7,0.7      c-4.2,0.1-8.4,1.1-12.8,0.3c-2.8-0.5-5.2,0.9-4.9,4.5c0,1.3,0.1,2.7,0,4c-0.1,2.3,0.1,4.6,0,6.9c-0.1,1.5-0.1,3-1.5,4      c-0.3-0.1-0.5-0.2-0.7-0.4C578,240.2,577.9,236.6,577.8,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6969",
                d:
                  "M573,217c0-1,0-2,0-3c-3-3.4,0.2-7.2-0.6-11c0-0.5-0.9,0.4-0.3,0.1c0.2-0.1,0.3,0,0.3,0.4      c0,1.2,0.7,3.1-0.8,3.4c-1.7,0.4-2.4-1.3-2.5-2.9c-0.1-1.9-1-3.8-0.3-5.8c-1.1,3.2,1.9,6.8-0.8,9.9c-1.9-7.6-0.5-15.3-0.8-23      c1.8,1.3,3,3.8,5.9,2.9c-1,4.9,0.9,9.7,0.9,14.6c0,4.8,0.1,9.6,0.1,14.4C573.6,217.5,573.3,217.4,573,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#767273",
                d:
                  "M573,217c0.3,0,0.6,0,0.9,0c0,1.7,0,3.3,0,5C572.3,220.6,573.2,218.7,573,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2D2C2F",
                d:
                  "M577,249c-0.3,0-0.6,0-0.9,0c0-1.7,0-3.3-0.1-5C577.7,245.4,576.8,247.3,577,249z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6C696C",
                d:
                  "M518.1,194.1c3.2-0.9,6.4-1.9,9.1-3.9c1.9-0.4,3.8-0.9,5.7-1.3c2.8,0.9,6.8,3.3,7.9,2.9      c4.3-1.6,8.1,1.7,12,0.4c2.6-0.8,4.2,1.2,5.6,2.4c3.3,3,3,3.3,5-0.9c0.3-0.7,1.1-1.1,1.7-1.7c1.2,6,1,12,0.9,18      c-2.6-0.5-1.8-2.7-2.2-4.4c0-5,0-5.1-4.7-4.2c-3.6,0.7-7.7,0-10.6,3.3c-0.7,0.8-2.3,0.8-3.3,0c-5.7-4.6-12.3-2.9-18.6-2.8      c-5.4,0.1-10.9,0.5-16.3-0.1c-1.3-0.2-2.6-0.6-3.3-1.9C510.6,198,514.3,196,518.1,194.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#787678",
                d:
                  "M565,205c0.2,1.7-0.6,3.5,0.9,5c0,1.7,0,3.4,0,5c-0.3,0.3-0.6,0.4-1,0.2c-1.7-0.4-1,2-2.3,2      c-0.7-0.2-1.2-0.7-1.5-1.3c-0.6-1.6-0.3-3.2-0.1-4.8c-2.4,2.6-5.5,2.2-8.6,1.9c-4.6-0.4-9.2-0.7-13.6,1.5      c-1.2,0.6-2.7,0.7-3.9,0.1c-2.9-1.6-5.6-1.6-8.5-0.1c-1.9,0.9-3.5-0.4-4.8-1.8c-1.7-1.8-3.1-2.3-5.8-1.1      c-4.1,1.9-8.9,1.8-13.2,1.4c-3.8-0.3-7.4,2.4-11.1,0.1c-0.8,1.3,0,2.6-0.2,3.9c0.1,3.9,0.2,7.8,0,11.8c-0.1,1.8,0.1,3.5,0,5.3      c-0.2,2.4,0,4.8,0,7.2c0.2,4-0.1,7.9-1.5,11.8c-0.3,0-0.6-0.1-0.8-0.2c0-13,0.1-26-0.2-39c-0.1-4.6,1-7.4,5.8-7.9      c3.2-1.9,6.4-2.3,9.8-0.7c1.9,0.9,3.7,1.5,5.9-0.2c1.6-1.3,4.6,0.9,6.3-2.2c0.4-0.8,3.6,2.7,6.5,1.5c1.5-0.6,3.6,1.3,5.4-0.6      c0.7-0.7,2.6-0.1,3.3,0.3c4.9,3.2,10.3,1.1,15.4,2c3.2,0.6,5.7-1.4,8.7-1.4C559,204.6,562,204.3,565,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#727072",
                d:
                  "M565,205c-3,0.3-6,0.6-9,1c-1.8,0.2-4.1-0.9-5.1,1.8c-0.4,1-1.1,0.6-2,0.1c-2.7-1.5-5.6-1.8-8.4-0.2      c-2.3,1.2-4.1-0.5-6-1.2c-1.9-0.7-4.9-0.8-6.8,0.5c-1.1,0.7-1.9-0.1-2.5-0.8c-1.1-1.3-2.3-1.3-3.5-0.4c-2.7,1.8-3.8,0.5-4.1-2.7      c-2.2,1.8-1.4,5.5-4.7,5.6c-1.4-1.2,0.7-2,0.2-3.3c-1.4,0.6-3.4-0.1-3.7,2.2c-0.3,1.9-0.9,1.1-1.8,0.6c-4-2.2-8.1-3.9-12.7-2.1      c3.6-2.9,7.8-4.4,12.1-6c6.6,1.4,13.2,1.2,19.8,0.6c5.3-0.4,10.5-0.1,15.7,0.5c1.4,0.2,1.8,1.4,2.5,2.3c1.3,1.6,3.2,1.4,3.8,0.1      c2.6-5.7,9.2-0.5,12.5-4.8C562.3,197.3,565,200.7,565,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#89888A",
                d:
                  "M566,219c0,1.3,0.1,2.6,0.1,4c-1.3,1.1,0.3,2.8-0.8,3.9c-2.9,1.6-5.8,2.6-9.2,1.3      c-2.2-0.8-4.2,0.8-6.3,1.1c-6.5,1-13,0.3-19.5,0.1c-3.6-0.1-6.9,1.8-10.7,1.2c-3-0.4-6.2,0.7-9.1-1.4c-1-0.8-2.3-0.1-3.2,0.6      c-3.1,2.5-7,1.7-10.6,2.4c-3,0.6-3.2-2.8-4.4-4.6c-0.4-1.1-0.5-2.3-0.4-3.4c0.2-2.9-0.1-4.8,4.4-3c6.2,2.3,13,1.1,19.3-1.5      c1.4-0.6,2.5-1.4,4.1-1.3c11.7,1.1,23.4,0,35.1,0.8C558.6,219.4,562.2,217.2,566,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828284",
                d:
                  "M566,219c-8.4,3.2-17.2,0.5-25.8,1.6c-6,0.8-12.6,0.3-18.8-0.8c-2.9-0.5-4.4,1.4-6.5,1.9      c-5.7,1.3-11.5,2.5-17.4,1.6c-1.8-0.2-3-1.2-4.4-2.5c0,2.6,0,4.9,0,7.2c0.7,1.1,1.1,2.3-0.3,2.9c-1.4,0.6-1.8-1.1-2.6-1.8      c0-4.3,0-8.7-0.1-13c5.7,1.6,11.2,1.1,16.8-0.7c1.6-0.5,3.2-1.7,4.7-0.3c3.5,3.2,7.1,1.9,10.7,0.7c3.4-1.1,6.9-1.4,10.3-0.3      c3,1,6,1,8.8-0.2c3.9-1.7,7.8-1.5,11.5-0.1c3.1,1.2,6.3-0.6,9.3,0.9c0.3,0.3,0.7,0.7,1,1c0.9-0.4,0.1-2.6,2-2c0.3,0,0.6,0,0.9,0      C564.9,216.4,566.3,217.7,566,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#767273",
                d:
                  "M568,208.1c0-3.6,0-7.2,0-10.9c1.6,2.9,1.2,6.4,3.1,9.2c1.7-1.3,0.3-3,1.9-4.9c0,4.6,0,8.6,0,12.5      c-1.6,0.9-0.5,2.8-1.4,4c-1.2-3-2.4-6-3.6-9C567.9,208.7,567.9,208.4,568,208.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#919193",
                d:
                  "M565,227c0.1-1.4-0.5-3,1.1-4c0.3,0.8,0.6,1.5,0.8,2.3c1.9,2.2,0.8,4.8,1.1,7.2c0,1.1,0.1,2.2-0.4,3.2      c-0.3,0.5-0.8,0.7-1.3,0.7c-0.5-0.3-0.8-0.6-1-1.1c-0.7-2.4-0.5-4.9-0.3-7.4C564.9,227.5,564.9,227.2,565,227z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383637",
                d:
                  "M567.1,233c-0.1-2.6-0.2-5.2-0.2-7.8c0.4-1.7-0.5-3.7,1-5.2c0.1,0.7,0.2,1.3,0.2,2      c0.7,3.5,0.2,6.9,0.3,10.4C568.2,233.1,567.8,233.3,567.1,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#686666",
                d:
                  "M902.9,155.3c-0.1,0.7-0.4,1.4-1.2,1.1c-0.3-0.1-0.5-0.8-0.6-1.2c0-0.7,0.3-1.4,1.1-1.4      C903.1,153.9,902.9,154.7,902.9,155.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#686666",
                d:
                  "M1032.6,159.5c1.5-0.6,2.6-0.7,3.6,0C1035.1,160.2,1034.1,160.1,1032.6,159.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#706D6E",
                d:
                  "M903,169c0-0.7,0-1.3,0-2c2.6-0.9,6.2,2,8-2c3,0.6,6.2-1.2,9,1v0c5.2,2.3,10.7-0.5,16,1c0,1.3,0.7,2,2,2      c4.7-1,8.9-1.2,13.6,1.7c5.1,3.2,11.6,2.8,17.6,3.4c5.3,0.6,10.9-2.2,15.9,1.6c0.7,0.6,1.6,0.6,2.3,0.1      c4.1-3.1,9.2-2.5,13.5-2.2c3.5,0.3,6.8-0.3,10.1-0.2c1,0,2.2,0,2.8,0.8c2.8,4,7.1,3.5,11.1,3.7c2.2,0.1,4.2,0.9,6.2,2      c-0.6-1.2-3.1-1-2.2-3c0.3-0.8,0.7-1.5,0.9-2.3c0.5-2.5,1.1-1.8,3.1-3.4c1.9-1.6,4.1-2.4,6-3.9c2.2-1.8,4.6-1.9,7-0.9      c5.4,2.3,11,3.8,16.8,3.4c3.2-0.2,0.8,4.9,3.8,3.5c2.1-1,3.8-1.9,5.8-0.2c0.3,0.2,0.4,0.5,0.7,0.7c3.6,2.3,7.9,2.9,11.6,4.7      c3.4,1.7,7.5-1.1,10.4,2.3c-0.2,1,0.6,2.3-1.5,2.4c-3.9,0.1-8,0.6-11.5-1.5c-3.6-2.2-5.5-1.4-6.5,2.8c-1.3-0.1-2.3-6.3-4-0.5      c-0.1,0.4-1.9-0.1-1.9-0.9c0-3.7-1.3-3.4-3.9-1.7c-1.6,1-3.5,0.8-5.1-0.5c-1.7-1.4-2.7-0.6-3.5,1c-1.5,1.9-3.3,2.4-5.3,0.9      c-4.4-2.4-14-0.9-16.1,2.5c-1.8,4.2-4,5.3-8.2,4.2c-0.1-0.2-0.2-0.5-0.3-0.7c0.7-1.5,1.3-2.8-1.3-3c-3-0.3-5.8-1.2-8.9-1      c-1.6,0.1-3.7,0.9-3.3-2.6c0.2-2-1.7-1.3-2.8-0.4c-1.4,1.1-0.9,3-1.3,4.6c-3-2.4-5.6-5.6-9.3-1c-0.8,1-2.9,0.5-2.1-1.5      c1-2.5-0.9-2.3-1.8-1.8c-7.2,3.6-13.9,0.2-20.9-0.3c-4.1-0.3-8-3.5-12.9-1.1c-3,1.4-7.1,0.1-9.2-3.9c-1.1-2.1-8.3-2.8-9.8-1      c-0.6,0.7-0.9,1-1.3,0.3c-1.6-2.8-4.5-1.6-6.7-1.9c-6.3-0.9-12.7-0.3-19.1-1.1C911.4,172.3,907.3,170.8,903,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6B6C",
                d:
                  "M1029,177c0.4,1.8,2.2,1.1,3.1,1.9c1.1,0.8,1.2,2.1,0.2,3.1c-1.8,1.9-1.2-0.4-1.8-1      c-1.6-1.5-4.3-2.4-5.8-1.7c-2.9,1.4-5.6-2.6-8.3,0.3c-0.6,0.6-1-0.7-1.4-1.5c-2.1-4.5-6.3-4.7-9.3-0.6c-0.4,0.5-0.7,1.2-1.5,0.8      c-0.7-0.3-1.1-0.9-0.8-1.6c0.9-2.7-0.3-2.8-2.5-2.2c-4.8,1.4-10.5-1.1-14.5,3.6c-0.5,0.6-1.3,0.4-1.7-0.3      c-2.4-4.8-7-1.1-9.4-2.3c-4.1-2.1-7.8,2.7-11.5-0.8c-1.8-1.7-5,0-7.8-1.1c-1.8-0.7-3.7-1.2-5.4-2.4c-2.3-1.6-4.7-3.2-7.8-1.7      c-1.7,0.8-3.2,0.2-4.7-0.6c-0.1-2.3-0.2-4.6,3.4-3.1c1.1,0.5,2.4,1.4,3.8,0.4c2.4-1.8,3.8-0.1,4.7,1.7c0.8,1.5,2.5,2.9,3.2,2.3      c4.8-4.7,9.2-0.4,13.7,0.2c0.9,0.1,1.9-0.3,2.8-0.4c0.4-2.1-3.5-1.9-1.6-5.2c4.7,7.2,12.1,6.6,18.6,5.7c3.3-0.5,6.5-0.3,9.8-0.7      c3.6-0.4,7-0.5,9.9,2.1c0.1,0.1,0.3,0.3,0.4,0.3c4.8-4.4,9,1.9,13.8,0.8C1023.9,172.3,1027,173.7,1029,177z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6B6C",
                d:
                  "M936,167c-5.4,0.5-10.9,3.4-16-1c4-1.9,8.2-1.2,12.4-1C934,165.1,935.3,165.5,936,167z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6B6C",
                d:
                  "M920,166c-3-0.6-6.2,0.9-9-1C914.1,164.5,917.4,162.3,920,166z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#636162",
                d:
                  "M971.6,161.4c1.7-0.6,2.5,0.1,3,1.1c0.1,0.2-0.4,1-0.6,1C972.8,163.6,972.1,162.8,971.6,161.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747070",
                d:
                  "M1132,189c0,0.3,0,0.7,0,1c-1,0.4-1.9,1.3-3.1,0.7c-0.2-0.1-0.4-0.6-0.3-0.8      C1129.4,188.4,1130.8,189.3,1132,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BABBB5",
                d:
                  "M1237,169c-2,0-4,0-6,0c-3.6-0.2-22.6-6.3-25-8c1.8,0.8,1.8-6.5,4.6-1c0.7-4.4,4.9-0.9,6.6-2.9      c-4.9-4.4-12.2-4.2-15.4,1c-0.9-3.8-3.3-4.9-6.7-5.1c-2.5-0.1-5.2-1.4-6.4-3.2c-4.2-5.8-11.1-7.3-16.6-10.9      c-1.8-1.2-3.7-3.4-6.8-3.1c-1.8,0.2-0.4-1.7-0.2-2.7c6.3,1.5,12.9,2.4,18.1,6.3c3,2.3,6.2-0.2,8.9,1.7c-0.1,0.8-0.3,2.3-0.2,2.4      c4.1,0.9,7.8,5.5,11.6,4.1c5.3-1.9,8.4,0,11.1,3.6c3.8,5.1,9.8,4.9,14.8,6.9c1.9,0.7,4.7,0.1,1.4,3.1c-1.7,1.6,0.7,3.5-0.8,6.5      c3.7-3.8,4.7,0.8,7.1,0.4c0.2,0.2,0.3,0.4,0.2,0.7C1237.2,168.9,1237.1,169,1237,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BEC0B9",
                d:
                  "M1302,189c-6.2-1.6-12-4.2-17.7-6.9c-1.7-0.8-3.4-1.2-5.3-1.1c-6.7-3.5-14-5.6-20.8-9      c-1.8-0.9-4.2-1.3-4.2-4c1,0,2,0,3,0c11.7,5.2,23.5,10.4,35.2,15.6C1295.6,185.1,1299.3,186.2,1302,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C5C8C1",
                d:
                  "M1254,168c5.5,4.6,12.6,5.7,18.8,8.8c2.3,1.1,5.1,1.3,6.2,4.2c3,2.3,7.2,3.1,9,7c-0.8,0.1-1.1,1.8-1.9,1      c-6.3-6.6-15.6-7-23.2-10.9c-8-4.1-17.2-6.1-25.9-9.1c0-0.3,0-0.7,0-1C1242.7,166.8,1248.3,164.4,1254,168z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1280.9,198.1c2.7-1.2,4.5,0.9,6.6,1.9c2.9,1.3,5.2,3.9,8.8,3.4c2.1-0.3,0.8,2,1.6,2.8      C1291.9,204.2,1286.3,201.4,1280.9,198.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#565951",
                d:
                  "M1282,209c0-1.1,0.7-1.7,1.5-2.4c0.8-0.7,1.3-2,2.8-1.2c1.3,0.7-1.7,2.8,0.9,3.1c-0.7,1-1.6,1.4-2.8,1.1      C1283.6,209.4,1282.8,209.2,1282,209L1282,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C7CCC7",
                d:
                  "M1269.8,193.1c4.3,0.5,8.2,1.8,11.2,5.1C1276.9,197.3,1273.3,195.3,1269.8,193.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1297.9,206.2c3.7-0.9,5.9,1.6,8.1,3.9C1303.1,209.2,1300.2,208.3,1297.9,206.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#625E5E",
                d:
                  "M1881,389.1c-0.6-0.1-1.3-0.3-1.9-0.4c-0.4-0.4-0.8-0.9-1.1-1.3c0.8-2,2-0.7,3.1-0.4      C1881.6,387.7,1881.5,388.4,1881,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A7A09D",
                d:
                  "M1929,411c0-0.3,0-0.6,0.1-1c1.3-2,2.9-2,4.8-0.9c0.4,3.6,0.7,7.1,1.1,10.7c0.2,1.6-0.1,2.5-2,2.3      c-0.3,0-0.6-0.1-0.9-0.1C1931,418.3,1930,414.6,1929,411z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#918A89",
                d:
                  "M1933.9,409.1c-1.6,0.3-3.2,0.6-4.8,0.9c0-2.3-0.1-4.6-0.1-6.9c0.9-0.7,1.4-1.4-0.1-2      c-0.2-0.4-0.1-0.9,0-1.3c1.4-1.5,3.7-0.3,5.1-1.8c1.5-0.5,0.6-2.5,2-3.1c0.8,3.5-1.2,6.6-1,10      C1933.5,406.1,1934.2,407.7,1933.9,409.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#97908E",
                d:
                  "M1939.9,415.9c0.9,3.7-2.5,2.2-3.8,3.2c0.1-1.5-0.8-3.4,0.6-4.5C1937.9,413.6,1938.7,415.7,1939.9,415.9      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#383431",
                d:
                  "M1935.1,406.1c0.6,0,1.2,0.1,1.8,0.1c1.9,1.9,0.4,3.7,0,5.6c-0.6,0.1-1.6,1.3-1.8-0.2      C1934.9,409.8,1935.1,407.9,1935.1,406.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#958B89",
                d:
                  "M1944,403.8c5.1,0.2,10,0.9,14.9,2.2c0,0.6-0.1,1.2-0.1,1.8c-1.9,1.4-3.9,0.3-5.9,0.2l0,0      c-2.9-1.1-5.7-3-9.1-1.8c-0.3-0.7-0.6-1.4-0.9-2.2C1943.4,403.9,1943.7,403.9,1944,403.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8A807F",
                d:
                  "M1910,377c0.7,1.5,0.2,2.1-1.4,2c-1.3,0-2.7-0.3-3.6,1.1c-0.6,0.1-1.3,0.2-1.9,0.3      c-4.3-2,0.4-2.2,0.7-3.2c0.1-0.1,0.3-0.2,0.4-0.3C1906.1,376.3,1908.1,376.2,1910,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#F4F0EF",
                d:
                  "M1927.9,385.1c0.1,2.3,0.1,4.6,0.2,6.9c1,1.1,0.5,2.1-0.1,3.2c-0.9,0.9-2.3,1.2-2.9,2.5      c-0.2,0.4-0.5,0.7-0.8,1.1c-1.7,1-3.2,0.3-4.7-0.5c-1.7-1.9-1-3.6,0.3-5.3c0.8-2.7-0.9-3-2.9-2.9c-0.8,0.3-1.2-0.1-1.5-0.8      c0-0.5,0.1-0.9,0.5-1.2c0.5-2-0.6-4.2,1-6c2.6,0.4,5.2,0.8,7.8,1.3c0.4,0.3,0.8,0.6,1.2,0.8C1926.3,385,1927.1,385,1927.9,385.1      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E5E1E1",
                d:
                  "M1871.3,382.8c-1.1-0.3-2.2-0.6-3.2-1c-0.4-0.3-0.7-0.6-1.1-0.9c-0.9-1.6-3.1-0.4-4-2      c6.4-1.8,12.8-1.1,19,1c-3.2,1.9-6.5,0.8-9.8,0.6c7.8,0.5,15.5,2,23.1,3.8c1.8,0.5,4.8-1.6,5.1,2.3c-0.5,0.8-1.2,1.1-2.1,1.4      c-3.1,0.5-6-0.1-8.9-1c-1.7-0.8-3.5-0.7-5.3-1.1c-1.7-0.6-3.2-1.5-5-1.9C1876.4,383.7,1873.8,383.2,1871.3,382.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A9A4A3",
                d:
                  "M1895,384.7c-8-1.2-15.9-2.4-23.9-3.6c0-0.4,0-0.7,0-1.1c3.6,0,7.2,0,10.8,0c1.3,1.7,3.1,2.1,5.2,2      c2.8-0.1,5.5,0.1,7.9,1.9c0.3,0.2,0.5,0.4,0.3,0.5C1895.2,384.6,1895.1,384.7,1895,384.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ACA6A5",
                d:
                  "M1895,384.7c0-0.3,0-0.5,0-0.8c5.5-0.3,11,0,16.4,1.1c1.6,0.3,3.3,0.7,3.5,2.9c-4.3,1.9-8.5-1-12.8-0.2      c-0.8,0-1.6-0.2-2.1-0.8C1899.4,383.7,1896.6,385.6,1895,384.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E9E3E4",
                d:
                  "M1902,387.1c4.5-1.9,8.6,0.8,13,0.8c0.4,0,0.7,0.1,1.1,0.1c0,0.4,0,0.8-0.1,1.1      c-1.6,1.4-3.5,1.1-5.3,0.8c-1.7-0.5-3.4-0.8-5.1-0.8c-0.7-0.1-1.5-0.2-2.2-0.5C1902.6,388.4,1902.2,387.8,1902,387.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C1BCB9",
                d:
                  "M1895,380c-2.4,1.8-4.9,1-8.6,0.4C1890,378,1892.6,380.9,1895,380L1895,380z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4E4949",
                d:
                  "M1903.4,387.9c0.6,0.1,1.1,0.1,1.7,0.2c0.5,0.4,1.3,0.6,1.3,1.4c-0.2,1-0.7,1.7-1.7,1.9      c-2.1-0.2-4,0.6-6,0.8c-6-0.1-11.8-2.1-17.6-3.1l0,0c0-0.7,0-1.4,0-2c1.2-2.2-1.8-1.6-2-2.9c1.7,0,3.4,0.1,5,0.9      c1.7,1.1,3.8,0,5.5,0.9c2.8,0.9,5.6,1.2,8.5,1.2C1899.7,388,1901.7,387.1,1903.4,387.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#625E5E",
                d:
                  "M1880.9,389.1c4.5-1.7,8.5,1.2,12.7,1.4c1.7,0.1,3.5,0.4,5.3,0.5c1.2,1.2,3.5-0.7,4.4,1.4      c-0.4,3.4-2.7,1.9-4.5,1.7c-5.1-1-10.2-2-15.3-3C1882.4,390.9,1881.7,390,1880.9,389.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#282425",
                d:
                  "M1920.2,397.8c1.3,0.1,2.5,1.3,3.8,0.3c2.1-1.8,4.4-2.3,7-1c1,0.3,2,0.7,2.9,1c-0.3,3.9-3.5,0.9-5,2.1      c-0.6,0.5-1.2,1-1.2,2c0.1,0.4,0.1,0.8,0.1,1.2c-0.9,0.7-1.7,1.5-0.9,2.7c-1,2.9-4.3,1.3-5.9,3l-0.2,0.3l-0.4,0      c-1.6-0.5-4.4,0.5-4.2-2.1c0.2-3.1-2.3-6.9,1.9-9.1C1918.8,397.4,1919.5,397.5,1920.2,397.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#282425",
                d:
                  "M1904.9,391c0.4-0.6,0.8-1.3,1.2-1.9c1.4-0.9,2.8-0.5,4.2-0.2c1.9,0.1,3.8,0.2,5.6,0.3      c0.4,0.3,0.7,0.6,1.1,0.9c0.7,3.7-2.7,7.7-4.1,7.5c-5.7-0.8-5.1,3.9-6.9,6.5c0.1-2.2-0.1-4.4,0.7-6.7c0.7-2,0.7-4.2-1.7-5.4      c-0.3-0.2-0.4-0.4-0.3-0.6C1904.7,391.1,1904.8,391,1904.9,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#797678",
                d:
                  "M1920.2,397.8c-0.7,0-1.4,0.1-2.1,0.1c-1.7-2.5-1.6-4.3,1.8-5C1920.4,394.5,1919,396.2,1920.2,397.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524E4E",
                d:
                  "M1904.9,391c0.1,0.3,0.1,0.7,0,1c-0.3,0-0.5,0.1-0.8,0.1c-0.4,0.5-0.8,0.5-1.1-0.1c-1.4-0.2-3,0.5-4-1      C1901,390.7,1902.9,389.3,1904.9,391z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#4E4949",
                d:
                  "M1903,392c0.4,0,0.7,0,1.1,0.1c-0.5,3.9-2.6,3.5-5.2,2C1900.5,393.8,1902.7,394.7,1903,392z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#474040",
                d:
                  "M1921,409c1.1-2.8,4.2-1.5,5.9-3c2.2,4.1-1.6,2.5-3,3.1C1922.9,409,1922,409,1921,409z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BBB5B4",
                d:
                  "M1928.9,401.2c1.6-0.2,3.2-0.6,4.9,0.5c-1.4,2-3.4,0.9-4.9,1.4c-0.4,0-0.7,0.1-1.1,0.1l0.1-0.2      C1927.4,402,1928.1,401.6,1928.9,401.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#322E2D",
                d:
                  "M1167,241c2,0,4,0,6,0c-0.1,0.7,2.6,1.2,0,2.2c-3.3,1.3-6.4,3.3-9.6,5c-1.6,0.8-3.4,1.5-3.3,3.8l0,0      c-2.5,1.8-5.1,3.2-8.1,0.9c4.5-5.2,10.9-7.5,18.2-10.9c-4.2,0-7.2,0-10.2,0c-2.3,0-4.7-0.1-7-0.1c2.1-4.1,5.9-1.7,8.9-2.4      C1163.6,239.7,1165.5,239.7,1167,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7C7170",
                d:
                  "M1152,252.9c2.8,0.6,5.3-0.9,8.1-0.9c-1.2,2.7-0.5,5.3,0.3,7.8c-0.2,0-0.5,0-0.7,0      c-1.8-1.1-2.1-5.1-5.6-3C1150.6,257,1150.1,255.6,1152,252.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#2F2D2C",
                d:
                  "M1154,257c3.8-2.7,4.4,0.7,5.6,3c1.3,2.3,1.3,4.8,1.5,7.3c0.1,2.4-1.1,2.9-3.1,2.5      c-0.3-0.6-0.6-1.2-0.9-1.8C1160.2,263.2,1158.8,258.1,1154,257z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#535253",
                d:
                  "M1162,241c-3,0.4-6.2-0.9-9,1c-15.6,0-31.3-0.5-46.8,0.3c-24.1,1.3-48.1,0.5-72.2,0.7      c-1.2-1.3-2.2-2.9-1.2-4.5c0.9-1.5,2.4,0,3.6,0.1c3.4,0.3,6.5-1,9.7-1.5c6.5-1.1,12.9-0.3,19.3,0.2c1.4,0.1,2.9,0.6,4.3-0.3      c0.7-0.3,1.3-0.3,1.9,0.2c1.1,1.7,3,1.5,4.5,1.2c8.3-1.8,16.9-1,25.3-2.7c5.3-1,11.1-2.4,16.9-0.7c3.5,1.1,7.2-1.5,10.8-0.6      c4.3,1.2,8.6-0.2,12.9,0.6c0.3,0,0.7,0,1,0c2.9,1.6,5.2-0.3,7.7-1.2c5.3-1.8,11.1-0.7,16.3-2.8l0,0c0.7,0.5,1.1,1.1,1,2      c0.9,0.6,1.8,1.2,3.1,2.1c-2.1,1.1-4.2,1.7-5.1,3.9C1165.4,241.1,1163.1,239.9,1162,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5D5B5D",
                d:
                  "M1066,238c-4.8,1-9.6-1.1-14.4-0.1c-4.3,0.8-8.9,0-13,2.5c-1.9,1.1-3.2-1.3-5.1-1.7      c0.2,1.5,0.4,2.9,0.5,4.3c-8.3,0-16.5,0-24.8,0.1c-1.8,0-3.7-0.5-5.3,0.8c-23.6,0-47.3,0-70.9,0.1c-0.3-0.2-0.4-0.4-0.3-0.6      c0.1-0.2,0.2-0.3,0.3-0.3c3.3,0,6.7,0,10,0c8.2-1.7,16.4-1.6,24.7-1.3c10.7,0.5,21.1-1.5,31.5-3.7c3.9-0.8,7.8-2,12.1-0.3      c2.5,1,5.5-0.6,8.3-0.7c9.4,1.6,18.2-2.6,27.4-2.5c12.1,0.1,24-2.2,36.1-2.2c2,0,4-0.1,5.3,1.9c0.1,0.6-0.1,1.1-0.5,1.6      c-5.5,1.6-11,3.6-16.9,1.3c-0.3,0.3-0.7,0.7-1,1C1068.7,239.4,1067.3,237,1066,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1089.2,250.7c0-1.4,0.9-1.7,2-1.7c1.1,0,1.8,0.6,1.7,1.8c-0.2,1-0.8,1.8-1.9,1.7      C1089.8,252.5,1089.3,251.7,1089.2,250.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1150.1,243.5c0.6,5.9-3.7,2.6-5.9,3.3C1146.3,245.8,1149.2,246.4,1150.1,243.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1104.9,246c1,0.1,2,0.3,1.7,1.3c-0.2,0.6-1,1.1-1.6,1.7c-0.3-0.7-0.7-1.4-1-2.1      C1103.6,245.7,1104.7,246.4,1104.9,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1107.5,244.5c-0.4,0.1-1,0.4-1.6,0.4c-0.7,0-1.4-0.3-0.8-1.1c0.3-0.4,1.1-0.6,1.7-0.6      C1107.3,243.2,1107.7,243.6,1107.5,244.5z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151113",
                d:
                  "M1098.7,251c-0.5-0.3-1.1-0.5-1.2-0.8c-0.2-0.8,0.4-1.1,1.1-1c0.3,0,0.8,0.5,0.9,0.8      C1099.5,250.3,1099,250.6,1098.7,251z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#636367",
                d:
                  "M933,243c0,0.3,0,0.6,0,0.9c-4,0-8,0-12,0C924.9,241.9,929,243.5,933,243z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C8684",
                d:
                  "M1162,280c-0.6,0.2-1.3,0.3-1.9,0.5c-1.1,0.3-2.1-0.1-2.4-1.1c-0.2-0.6,0.1-1.8,0.6-2.3      c1.3-1.2,1.7,0.9,2.8,1C1161.3,278.7,1161.7,279.3,1162,280z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1298,201c-5.9-1.1-11-4.2-16.3-6.9c-0.5-0.3-1.5-0.5-0.2-1c0.4-0.2,1-0.1,1.5-0.1      c6.5-0.6,10.9,3.5,15.6,6.8C1298.6,199.9,1298.2,200.6,1298,201z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C6CBC4",
                d:
                  "M1329,209c3-0.2,5.5,0.4,6,4c-1,0-2,0-3,0C1330.8,211.8,1329.5,210.7,1329,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1326,213c-1.4-0.6-4.1,1.6-4-2C1324.3,209.6,1326.6,208.5,1326,213z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1321,211c-1.9,0.5-4.8,2.9-4-2C1318.2,210,1321.4,206.9,1321,211z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C9D1CA",
                d:
                  "M1317,209c-3.1,0-5.2-1.8-7-4C1312.9,205.4,1314.9,207.2,1317,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C7CCC7",
                d:
                  "M1312.9,197.9c-0.5,0.4-0.8,0.8-1.2,0.9c-0.3,0-0.7-0.3-1-0.5c0.3-0.3,0.5-0.8,0.9-0.9      C1311.9,197.3,1312.3,197.7,1312.9,197.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#151318",
                d: "M671,261c1.7-1.5,3.3-1.5,5,0C674.3,261,672.7,261,671,261z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9F9EA0",
                d:
                  "M566,235c0,0.3,0,0.7,0,1c0.6,3.3,0,5.5-4.1,5.2c-3.8-0.3-7.4,1.3-11.1,2.1c-7.6,1.8-15.3,1.3-23,1.3      c-6.1,0-11.8,2.3-17.9,2.2c-3.6,1.2-8.1-0.7-11,3.2c-0.7,1.1-1.3,2.2-2,3.3c-2-0.9-1.1-5.4-4.5-3.8c-2.7,1.2-0.7,3.4-0.3,5.2      c-1.6,0.6-1.9-0.6-2.1-1.7c0-4,0.1-8,0.1-11.9c7.8,1.1,15.6-1.5,23.4-0.6c0.7,0.1,1.8,0.4,1.9,0.1c2.5-5.6,7.8-1.4,11.3-3.2      c0.6-0.3,1.3-0.4,2-0.2c9.5,3.7,18.1-0.2,26.9-3.2c1.5-0.5,3.3-0.1,4.7-1.2c0.5,0,0.9,0.1,1.2,0.5c0.5,1,0.6,2-0.5,3.3      C562.6,235.1,563.8,233.2,566,235z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A4A4A6",
                d:
                  "M510,246c0.6-0.3,1.1-0.9,1.7-0.9c6.5,0.3,12.8-3.3,18.8-2.3c5.1,0.9,9.8-0.7,14.8,0.3      c1.7,0.4,4.9-0.5,6.7-1.2c4.1-1.7,8-2.2,12.4-2.1c1.6,0-0.1-3.1,1.7-3.9c0.3,0,0.6,0,0.8,0c1.3,2,1.6,4.1,0.2,6.2      c-2.7,1.4-5.7,1.7-8.5,2.5c-2.4,0.6-4.9,1.3-6.6,3.2c-2.4,2.5-4.9,2.3-7.7,1.3c-5.7-2.1-11.2-1.7-16.6,0.9      c-0.4,0.2-0.9,0.7-1.3,0.6c-4.5-1.2-8.2,1.6-12.2,2.4c-1.3,0-2.7,1-4,0c-0.2-0.5-0.1-1.1,0.3-1.3C513.7,249.6,513,247.7,510,246      z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#ABAAAC",
                d:
                  "M514,253c3.1-2.4,6-5.3,10.6-3.3c0.5,0.2,1.4,0.1,1.9-0.2c6-4.3,12.4-3.7,18.7-1.2      c3.8,1.5,4.8-1.6,7.1-2.6c4.6-2,9.5-4,14.8-3.6c0.1,0.2,0.3,0.3,0.4,0.5c0.2,0.6,0.1,1.2-0.6,1.5c-1.7,2.1-5.2,1.8-6.3,5.1      c-0.6,2-3.2-0.8-4.4,0.1c-6.4,4.3-13.4,1.3-20,2.4c-4.4,0.7-8.6,1.4-13.1,0.7c-3.5-0.5-4.6,3.2-6.6,5.8      C515.1,256.4,513.8,255.1,514,253z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B2B2B2",
                d:
                  "M510,246c2.1-0.1,4.3,0,4.6,2.6c0.4,3.2-3.1,2.8-4.6,4.4c-4.5,1.2-10.1-0.3-11-3      c-0.1-2.9,1.1-4.2,4.2-3.9C505.4,246.3,507.7,246,510,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#403E3F",
                d:
                  "M567,242c0-2-0.1-4-0.1-6c0.1-1,0.2-2,0.3-3c0.3,0,0.7,0,1,0c0.4-0.4,0.6-0.4,0.8,0.2      c0.1,5.2,0.1,10.4,0.2,15.6c-0.3,1.4,0.4,3-1,4.2c-0.1-0.6-0.2-1.3-0.3-1.9c-0.9-3,0.3-6.1-0.7-9.1L567,242z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#807D7E",
                d:
                  "M567.1,241.9c1.4,3,0.8,6.1,0.7,9.1c-1.5-2.2-0.5-4.7-1.1-7C566.9,243.3,567,242.6,567.1,241.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A5A5A7",
                d:
                  "M578.8,244.2c0.1-1.4,0.2-2.7,0.3-4.1c1.1-0.8,2.1-1.5,3.6-1.3c10.4,1.7,20.9,1.5,31.4,0.9      c0.9-0.1,1.5,0.7,2.1,1.2c4.3,2.9,9.4,1.6,13.9,1.5c6.3-0.2,12.7-0.4,19-0.2c2.5,0.1,3.3,1.8,4.2,3.5c0.4,0.2,0.7,0.1,1-0.1      c1.8-1.7,4.1-4.2,6.1-1.2c1.5,2.2,1.2,5.4-1.6,7.5c-1.9,1.4-3.9,2.5-6.1,3.5c1.5,0.9,3.8,0,4.4,2.3c-0.2,0.5-0.6,0.8-1.2,0.7      c-4,0.3-8-0.6-12,0.5c-0.7,0-1.3,0-2,0c-1.1-0.9-3.7-0.7-3.4-2.4c0.7-4.5-2.5-4.5-5.3-5.4c-2.8-1-4.9-3.4-8.6-2.8      c-4.5,0.7-9.4-0.8-13.8-0.6c-10.7,0.5-21.1-2.5-31.8-1.9C579,245.4,578.9,244.8,578.8,244.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A9A9AC",
                d:
                  "M579,246c5.4-3,10.9-0.3,16.4-0.5c2.4-0.1,4.9,2.3,7-0.7c0.1-0.2,0.6-0.3,0.9-0.2      c9.4,2.9,12,3.1,24.6,1.7c0.5-0.1,1.3,0,1.4,0.2c2.6,4.8,7.6,4.2,12.7,5.3c-4.9,3.1-2.6,5.2,0.1,7.3c-8.7,0.7-17.3,1.4-26,2.1      c-2.3,0.9-4.7,0.2-7,0.4c-2.2-0.8-1-1.6,0.1-2.1c1.4-0.7,3-0.9,4.2-2.3c1.8-2.1,1.8-4.2-0.8-4.6c-6.4-1.2-12.7-3.7-19.4-0.7      c-3.7,1.7-8-2.1-12.2,0.9c-0.2,1.9,1.4,4.8-1.2,7C578.7,255.2,579.1,250.6,579,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#AFAFB2",
                d:
                  "M579.7,259.7c0.1-3.1,0.3-6.3,0.4-9.5c0.5-0.3,0.7,0.1,0.9,0.5c4.5-3.1,9.3,2.3,14.2-1      c4-2.7,8.9,0.2,13.4,0.5c0.9,0.1,1.9,0.6,2.8,0.8c1.8,0.2,4.6-0.4,4.4,2.3c-0.2,2.6-0.3,6.1-4.2,6.7c-1.3,0.2-2.7-0.3-3.8,0.9      c-1.5,1.3-3.4,0.3-5,0.6c-3.2-1.6-7.4-1.3-9.6-5c-0.4-0.7-1.3-0.6-1.7-0.1c-2.1,2.6-5.7,3.2-7.8,5.8c-0.4,0.3-0.8,0.5-1.2,0.7      c-1.1,0-2.2,0-3.4,0C579.5,261.8,579.6,260.7,579.7,259.7z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#767273",
                d:
                  "M568.9,233.1c-0.3-0.1-0.5-0.2-0.8-0.2c0-3.6,0-7.3,0-10.9C570,225.6,568.6,229.4,568.9,233.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#635A58",
                d:
                  "M1953,408c1.9-1.1,4,0.6,5.9-0.2C1957,409.8,1955,409.4,1953,408z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#776A6A",
                d:
                  "M1910,377c-1.9,0-3.9-0.1-5.8-0.1c1.7-1.7,3.9-0.5,5.8-0.9C1910,376.3,1910,376.7,1910,377z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B6B2B1",
                d:
                  "M1931,397.1c-2.4-0.5-4.6,1-7,1c0-0.3,0-0.7,0-1c0.9-0.9,2.2-1.1,3.1-2c1.1-0.8,0.9-2,1-3      c1.8-1.4,2.6,0.5,3.9,1C1931.7,394.4,1927.5,394.8,1931,397.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#EBE8E4",
                d:
                  "M1935,390c-0.4,1.5,1.2,5.2-3,2.9c-0.5-1.7-0.9-3.5,1.3-4.4C1934.7,387.9,1934.8,389.1,1935,390z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5859",
                d:
                  "M1168,233c-0.8-0.4-1-1.2-1-2c4.4-3.9,7.6-1.7,10.3,2.5c-1.6,0.6-3.7,1.1-5.3,2.5      C1172.8,232.1,1170.3,232.7,1168,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#615D5C",
                d:
                  "M1162,241c1.3-0.7,2.7-1.3,4-2c0.8,0.4,1,1.1,1,2C1165.3,241,1163.7,241,1162,241z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#797575",
                d:
                  "M1017,193c1.8,0,3.6,0,5.5,0c0.7-1.4-2.8-1-1.5-2c1.6-1.2,3.5-3.2,6.1-2v0c1.5,2.5,4.2,3.1,6.7,3.9      c1.1,0.3,2,0.5,2.8-1.1c3.9-7.8,12.1-8.9,18.5-2.8c5.9-2,11.7,0.5,17.5,0.5c3.1,0,6.1,0.3,8.8-1.3c0.8-0.5,1.8-1,2,0      c0.8,3.5,4.2,2.7,6.2,4.1c2.5,1.7,4.8,2.2,6.8-0.8c1.2-1.8,3.5-2.2,4.7-0.5c2.8,4.3,4.1,2.7,5.1-1.6c0.5,5.1,3.1,6.2,7.4,6.9      c5.3,0.9,11.7-2.4,16,3.2c0.2,0.2,0.7,0.4,0.9,0.3c5.6-2.3,9.7,2.3,14.6,3.2c2.8,0.5,4.5,3.5,8,3c1.1-0.2,3.2,2.1,2.7,4.2      c-0.6,2.5-0.9,5.9-3.6,6.5c-2.2,0.5-3.2,2.3-5,2.7c-1.1,0.3-0.9-2.3-3.8-1.8c-3.4,0.6-6.6-0.8-10.3,2c-2.7,2.1-7.1,1.9-10.8,2.6      c-1.6,0.3-3.3,0.5-4.5,1.7c-2.6,2.2-6.4,2.8-9.1,2.6c-6.2-0.3-11.9,1.9-18.1,1.8c-5.6,0-11.6-0.8-16.7,2.7      c-5.7-1.4-11.7,0.8-16.9,0c-6.9-1.1-13,2.6-19.6,1c-2-0.5-3.4,1-5.2,1.3c-7.2,1.2-14.4,1.8-21.7,1.2c-1-0.1-1.8,0.8-2.8,0.8      c-0.5,0-1-0.1-1.5-0.4c-0.9-0.7-1.3-1.6-1.4-2.7c0.1-0.8,0.3-1.6,1.1-2c1.4-0.7,2.9-0.8,4.3-0.7c8.4,0.9,16.5-1.7,24.8-2.3      c7.2-1.3,14.5-1.5,21.8-1.9c2-0.1,3.9-0.2,5.9-0.5c9.4,0.4,18.6-3.4,28.1-1.8c0.6,0.1,1.3,0,2-0.2c5.8-1.8,11.6-3.3,17.6-3.8      c4,0.6,7.2-0.4,10.2-3.5c3.5-3.6,8.8-2.6,12.7-4.3c-6.8-0.9-13-4.8-19.7-7.6c-6.4-2.7-13.9-3.4-21-2.8c-4.7,0.4-8.6-0.5-12-3.8      c-0.4-0.4-0.6,0.8-1,1.3c-0.6,1.4-1.5,2.4-3,2c-7.4-1.9-15.6,1.3-22.5-3.3c-0.8-0.5-1.2-0.1-1.6,0.3c-2,1.9-3.9,0.9-5.9-0.1      c-2.8-1.5-5.7-2.6-6.8,2.1c-0.3,1.2-1.3,1.9-2.7,1.3c-2.9-1.3-6.2-1-9-2.6c-2-1.1-4.1-2-6.2,0.4c-2.1,2.4-3-2-5-1.1      C1014.1,196.2,1015.7,194.6,1017,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747273",
                d:
                  "M1055,189c-0.6-0.2-1.5-0.2-1.9-0.6c-4.7-4.8-9.2-0.3-13.8,0.4c-0.7,0.1-2,1.6-1.8,2.1      c2,7.3-3.1,3.1-5,2.9c-2.6-0.3-5.1-1.6-5.6-4.8c3.8,0.9,6.5-0.2,8-4c5.4-2.6,11.1-3.2,17-3c1.7,2.2,3.3-0.2,5,0      c1.1,0.1,2.5-0.3,2.7,1.3c0.2,1.3-0.9,1.6-1.9,1.6C1054.7,184.9,1055,187,1055,189z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726F6F",
                d:
                  "M1074,231c0.7-2.4,2.3-2.9,4.7-3.3c7.2-1.2,14.7,1.3,21.7-2.4c0.9-0.5,2.6,0.3,3.9,0.4      c1.6,0.1,3.7,0.8,4.8,0.1c2.9-1.7,5.8-2.1,8.9-1.7c1,0.7,2,1.3,3,2c-1.8,0.4-3.6,0.6-5,2c-1.2,1.3-2.9,1.3-4.5,1.3      c-7.5-1.1-14.9,0.8-22.2,1.9c-5,0.7-9.8,0.4-14.7,0.3C1074.4,231.3,1074.2,231.1,1074,231z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726F6F",
                d:
                  "M1147,221c-3.5,3.5-8,1.4-12,2C1139,222.1,1142.8,220.5,1147,221z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726F6F",
                d:
                  "M1132,224c-3.1,2.9-4.3,2.9-5,0C1128.7,224,1130.3,224,1132,224z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5859",
                d:
                  "M1071,237c5.8,0,11.4-0.6,17-2c2.2-1.9,4.6-2.4,7.6-2.6c6.8-0.3,13.7-0.9,20.5-1.6      c3.4-0.3,6.7,0.4,9.9,1.2c0.7,1.3,1.5,2.3,3.1,1.4c3.3-1.7,6.9,1.2,10.3-1.2c1.7-1.2,2.7,0.8,2.6,2.7c-3.8,0.6-7.3,1-11.3,0.5      c-6.4-0.7-13.1,0.4-19.8,0.5c-2.8,0-6.2,0.1-9.3,0.9c-8.9,2.3-18.2,1.2-27.3,2.9C1071.9,240.3,1070.8,239.4,1071,237z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#666262",
                d:
                  "M1126,232c-5.7,0.1-11.5,0.2-17.2,0.4c-5.6,0.2-11,2.1-16.7,1.1c-1.1-0.2-1.7,3.5-4.1,1.5      c0-0.3,0-0.7,0-1c0.7-1-1.1-1.5-0.4-2.5c5.4-2.2,11.2-1.2,16.8-2c1.8-0.3,3.6-0.1,5.5-0.3c5.8,0,11.7,0.2,17.5,0.4      c0.2,0.1,0.4,0.3,0.6,0.4C1127.6,231,1127,231.6,1126,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5859",
                d:
                  "M1167,231c-2.9,2.6-6.7,2.3-10.2,3c-3.2,0.6-6.6,0.4-9.3,2.9c-2.9,2.8-3.3-0.7-4.6-1.9      c3.8-5.1,9.7-2.7,14.6-3.9C1160.6,230.5,1163.9,231,1167,231z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#666262",
                d:
                  "M1134,228c-1,3.5-3.7,2.1-6,2l0,0c-0.3-0.2-0.4-0.4-0.3-0.7c0.1-0.2,0.2-0.3,0.3-0.3v0      C1129.9,228.3,1132,228.3,1134,228L1134,228z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#646264",
                d:
                  "M1128,229c0,0.3,0,0.7,0,1c-4.8,0.5-9.6-1-14.3,0.9c-1,0.4-2.4-0.6-3.7-0.9c-0.6-1.1,0.5-1.4,1-2      c1.7,0,3.3,0,5,0C1119.9,228.9,1124,229.2,1128,229z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#646264",
                d:
                  "M1134,228c-1.9,1.2-3.9,1-6,1C1129.9,227.9,1131.8,226.9,1134,228z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#868688",
                d:
                  "M616,223c-0.2-2.2,2.3-1.7,3-3c0-0.3,0-0.7,0-1c2.4-1.4,4.6,1.8,7,0.1c1.6-0.6,3.2-0.7,4.8-0.6      c4.8,0.6,9.7,0.9,14.5,0c2-1.7,4.1-2.9,6.8-1.9c0.6,0.2,1.4,0.2,2,0c7.4-3.1,15-0.4,22.5-0.5c4.5-0.1,8.2-2.5,12.3-3.4      c0.8-0.2,1.5-1.2,2.2-1.1c9.1,1.6,16.7-5.8,25.8-4.4c6.5,1,11.7-2.1,16.9-5.3c4.9,4.7,10.1,0.1,15.1,0.3c3.3,0.1,6.9-0.3,9.1-3      c3.2-4,7-3.2,11-2.1c4.1,1.2,8-0.2,12-0.6c6.1-0.7,11.5-3.9,17.7-3.5c1,0.1,0.1-3.5,2.2-1.7c2.4,2.1,7,0.6,8,4.8      c0.1,0.3,0,0.7,0,1c-0.3-0.2-0.5-0.4-0.8-0.6c-3.3,4.2-9.4-2-12.3,3.4c-0.6,1.1-1.6,1.5-2.4,0.8c-2.2-1.9-2.9-0.4-4.6,1      c-1.5,1.2-4.9,1.6-6.6,0.7c-5.1-2.7-4.5,1.6-5.8,4c-2.9-0.9-0.4-3.1-1.3-5.1c-1.7,3.9-6.4,2.1-8.4,5.2c-0.1,0.2-1,0.2-1.3,0      c-3.3-2.2-4.2-1.9-2.1,1.9c0.4,0.8-0.6,1.4-1.4,1.8c-1.1,0.8-2.5,0.4-3.7,0.9c-3.2,1.4-6.4-0.4-9.6-0.4c-4.3,0.1-8,1.9-12.2,2      c-11.1,0.2-21.8,3.2-32.6,5.2c-3.4,0.6-6.9,0.8-10.2,1.1c-5.4,0.4-9.5,3.6-14.3,5c-1.8,0.5-7.6,1.3-9.1,0.1      c-1.4-1.1-2.4-0.7-3.6,0c-3.1,1.8-6.2,2-9.6,1c-2.7-0.8-5.6-0.3-8.4-0.1c-2.9,0.2-5.9,1.3-8.4-1.2c-0.2-0.2-0.7-0.3-0.9-0.2      c-5.7,1.7-11.6,1.2-17.4,1.5C619.2,225.1,617.5,225,616,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7F82",
                d:
                  "M769,197c-1.8,0.1-3.5,3.2-5.3-0.1c-0.6-1.1-1.4-0.2-1.8,0.5c-3.3,5.1-8.8,5.8-14.1,6.4      c-2.3,0.3-4.3,0.2-6.6,1.6c-2.2,1.3-6.2,0.9-7.2-3.4c-2.4-2-0.7-3.2,1.1-3.9c2.3-0.9,4.6-1.9,7-2.5c1.5-0.4,3.4-2.1,4.6-0.8      c2.6,2.8,4.3,0.7,5.9-0.7c4.2-3.7,9.9-3.5,14.4-6.1c1.2-0.2,0.2,4,3.2,1.2c2.9-2.6,14.7-0.8,17.8,1.8c-2.9,1.5-6.4,1.1-9.3,3.3      c-1.7,1.3-2.5-2-4.7-2.5C774.3,195.3,770.2,194.6,769,197z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#909092",
                d:
                  "M759,210c1-1.6,2-0.3,3,0c7,0.3,13.7-1.4,21.1-2.8c0.5,0.3-0.5,2.2,0.9,2.8c-0.3,0.4-0.6,1.2-0.8,1.1      c-5.1-0.6-7.3,4.3-11.2,5.9c-2.4,0.2-5.8-2-6.1,3.3c-0.1,1.7-2.9,3.4-4.7,4.8c-2.1,1.6-2.4-0.9-3.2-1.8      c-1.5-1.6-1.6-2.8-4.7-0.8c-3,1.9-7.4,5.2-12.2,2.6c-2.6-1.3-5.5,0.9-5.4,3.9c-3.6-1.1-6.3-2.2-10.8-0.1      c-4.3,2-10.3,3.4-16.2,1.7c-4.1-1.2-9.1-1.8-12.6,2.4l0,0c-4.3-2.2-8.7-1-12.9,0.3c-6,1.8-11.9,1.4-17.7-0.7      c-1.2-0.4-2.2-0.7-3.3,0c-3.7,2.4-7.4,1.1-10.9-0.1c-1.9-0.6-1.4-0.4-1.4,1.3c-0.1,1.5-2.5,1.8-3.8,1.3c-6.4-2.4-13,0-19.4-0.9      c-8-1.1-16.1,0.1-24.1-0.5c-3.6-0.3-7.4-0.7-11,0.9c-2.8,0.9-5.8,0.1-8.6,1.1c-2.1,0.7-3.3-0.7-3.9-2.6c0-1.3,0-2.7,0-4      c2.6-2.5,5.4-3.1,9.1-2.5c6,1,12.2,1.6,18.3,0c1.3-0.3,2.7-0.1,3.9,0.3c8.2,2.8,16.7-0.6,25.1,1.1c2.1,0.4,3.6-2.1,6.4-2      c4,0.1,8-1.4,11.2,2.1c0.2,0.2,1,0,1.5-0.1c9.2-2.4,18.7-1.4,28-2.2c1-0.1,2-0.2,2.7-1c0.8-0.9,1.8-1.7,3-1.5      c6.7,0.9,13.2-2.3,20-1.2c4.1,0.7,8.1-0.1,12-2.2c4.1-2.2,9.2-1.9,13.5-4c0.6-0.3,2.9,1.1,4.8,0.5c3.4-1.1,7-1.1,10.4-2.5      c1.7-0.7,3.5-0.6,4.8,0.3c2,1.4,3.5-0.1,5-0.6C760.9,212.9,757.6,211.1,759,210z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9A9A9F",
                d:
                  "M731,246c-0.3,0.3-0.7,0.7-1,1c-3-1.6-6.7-1.6-9-4.6c-0.6-0.8-1.2-1.8-0.5-2.7c0.8-1,1.6-0.3,2.5,0.2      c2.9,1.4,10.6-1.8,12-4.8c0.3-0.8,0.5-2,1.3-1.8c4.8,1,9.3-2.2,14.5-0.2c3,1.1,6.2,0.9,7.4,4.5c0.5,1.3,0.2,3-1.1,2.2      c-6.2-4.1-11.6,0.3-17.1,1.5c-3.1,0.7-5.7,1.7-8.2-1.3C730.9,242.2,730.1,244,731,246z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9C9BA0",
                d:
                  "M769.7,224.1c0.4-0.2,0.8-0.6,1.2-0.6c0.9,0,1,0.7,0.8,1.3c-0.1,0.3-0.6,0.5-0.9,0.8      C770.6,225.2,770.3,224.9,769.7,224.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#909092",
                d:
                  "M779,217c-0.8-0.5-1.1-1.2-0.7-2.1c0.1-0.2,0.6-0.5,0.8-0.4c1.3,0.4,0.8,1.6,0.9,2.5      C779.7,217,779.3,217,779,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#909092",
                d:
                  "M803,205c-1.3,2.7-4.4,1.3-6.5,2.7c-2.2,1.5-5.8,0.6-8.2,3c-1.3,1.3-2.5-2.1-4.3-0.7      c0.9-5.2,5.5-3.1,8.4-4.1c1.6-0.5,3.3-0.1,4.6-1.7C799.4,201.2,800.9,205.5,803,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7A7779",
                d:
                  "M1017,193c0.5,1.3-2.5,3.5,1,4c0.3,1.4-0.8,1.6-1.7,1.9c-6.9,0-13.8,0.1-20.7-0.9      c-1.9-0.3-4.4-1-6.4,0.5c-0.6,0.5-1.7,0.4-2.4-0.1c-3.9-3-8.6-1.3-12.9-2.4c-2.6-0.7-4.3,2.3-6.9,2c-0.1-2.9-0.7-4.6-4.4-4.3      c-1.9,0.2-5.7,0.9-5-3.9c0.3-1.9-2.1-1.5-3.5-1.4c-6.5,0.5-13.1,2.4-19.3-1.2c-3,3.5-5.7-2.5-8.8-0.3c-0.1,0.1-1.3-1.2-2-1.9v0      c-0.1-2.1-1.5-1.2-2.5-1c-2.2,0.6-8.3,0.6-10.9-0.1c-0.8-0.3-1.1,0.3-1.5,0.8c-0.4,0.5-1,0.8-1.5,1.2c-3.1-4.9-9.1-0.3-12.7-3.9      c0.5-4.8,4.3-5.9,7.9-6.1c2.2-0.2,1.6,3.2,3.4,5.1c0.7-4.9,1.5-4.8,5.7-2.3c4.6,2.7,11.1,2.6,16.9,2.1c1.3-0.1,2.6-1.1,3.2,0.9      c0.1,0.3,0.7,0.5,1.1,0.8c2.4-5.2,3.8-0.1,5.4,0.6c1.3,0.6,2.1,0.4,3.2-0.1c4.2-1.6,7.8-1.3,12.1,1.1c2.4,1.3,5.2,5.1,9.2,2.9      c1-0.5,2.1,0.8,3,1.4c1.9,1.2,3.8,1.3,6.1,1c3.8-0.4,7.7-2.2,11.4,2c1.6,1.8,5.7,0.2,6.8-4.4c0.9,6.5,5.3,4.8,8.6,4.6      c2.9-0.2,6-2.4,8.1,1.5c0.1,0.1,0.3,0.2,0.4,0.3C1010.5,188,1013.9,192.8,1017,193z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828081",
                d:
                  "M967,198c2.6-2.3,5.1-2.7,8.9-2.8c4.6-0.1,8.2,0.9,12.2,2.4c2.6,1,0.7-2.1,1.7-3.4      c1.2,1.5,2.2,4.8,4.5,1.4c3.8,3.3,8.4,0.8,12.4,1.7c3.2,0.7,6.2-0.1,9.2,0.7c3.7,1.6,7.3,3.7,11.6,1c1.9-1.2,3.8,0.6,5.5,1.5      c3.1,1.6,5.7,2.4,9.1,0c4.2-2.9,19.4,1.4,21.7,5.5c0,0.7-0.1,1.4-0.4,2.1c-3.1,2.8-6.5,3.3-9.5,0.3c-1.2-1.3-2-0.6-3-0.4      c-2,0.3-3.9,2.4-5.9,0.1c-0.2-0.3-0.7-0.3-0.9,0c-3.2,5.2-6.8,1.6-9.7,0c-3.8-2.2-6.5,0.9-9.4,1.6c-3.2,0.8-5,0.4-6.8-1.9      c-3-2.6-6.3,0.8-9.5-0.7c-10.4-4.7-21.7,0.4-32.3-2.6c-6.5-1.9-13.7,1.5-19.8-2.7c-1.3-1-3-1.7-2.7-3.9      C958.3,198.6,962.7,196.9,967,198z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#848182",
                d:
                  "M954,198c1,1,2,2,3,3c-1.6,3.2-3.7,4.1-6.2,1.9c-2.8-2.4-5.4-4.4-8.9-1.3c-0.3,0.3-1.2,0.4-1.4,0.1      c-5-6-12.6-2.2-18.5-5.2c-1.6-0.8-3.1-1.3-2-3.6l0,0c1.8,0.2,3-4.8,5.4-0.6c0.3,0.5,2,0,3.1-0.7c1.7-1.1,4-1.6,5.2,0.5      c1.5,2.5,2.7,1.9,4.1,0.2c0.5-0.6,1.4-1.6,1.7-0.3c0.8,4.3,3.1-0.1,4.5,0.9c0.5,1.8,1.5,2.3,3,1      C952.5,192.3,953.3,192.8,954,198z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828081",
                d:
                  "M947,194c-0.6,1.2-1.5,2.3-2.9,1.8c-1.7-0.7-0.3-1.8-0.1-2.8C945,193.3,946,193.7,947,194z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7A7779",
                d:
                  "M924,185c-0.1,0.9-0.1,2-1.3,2.2c-0.1,0-0.5-0.4-0.5-0.6C922.1,185.3,923,185.1,924,185L924,185z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#848182",
                d:
                  "M900,191c-0.8-0.5-2.1-1.1-1.5-2.1c0.6-1.1,1.2-0.2,1.4,0.6C900,190,900,190.5,900,191z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#717173",
                d:
                  "M613,205c-3.7,0.9-6.8-0.4-10-2c3.6-1.6,8-1.8,11.4-1.9c5.7-0.1,11.5-0.2,17.3-0.2      c3.7,0,7.3-2.2,11.2-0.4c0.8,0.4,2.5-1.3,3.7-2.1c4.6-2.8,7.8-2.1,9.4,2.4c3.4-4.4,7.5-6.4,12.8-4c3,1.4,4.2-2.7,7.4-2.6      c2.2,0,6.9,1.6,7.7-3.4c0-0.1,1.4-0.2,1.7,0.1c2,2.1,3.7,0.4,4.9-0.7c2.6-2.5,5.1-3,9-3c4.4,0,10.3,3.1,13.9-2.6      c4.8,1.3,10.2-1.3,14.6,2.3c-1.4,3.8-6.2,3.6-8,7.1c-0.4,0.8-1.4-0.5-1.9-1c-4.1-3.8-8.5-1.1-12.6-0.4c-1.7,0.3-1.2,2.8-0.8,5.4      c-3.2-3.5-10.9-0.3-11,1.1c-1.3-2.7-13.1,0.1-16.6,0.8c-2.5,0.5-5.3,2.8-8.3,0.5c-0.6-0.5-0.6,2.2-1.4,3.3      c-1.5,2.2-2.8,2.4-3.8,0c-0.5-1.1-0.6-1.2-1.6-0.9c-10.6,3.4-21.6,3.2-32.5,3.1c-3.1,0-5.7,1.8-9,1.8      C617.4,207.8,615.1,207.2,613,205z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#717072",
                d:
                  "M782,174c-3.2,2.7-7,4.1-11,4.9c-1,0.2-2.2,0.2-2.8,0.8c-5.3,5.7-12.6,4.5-19.2,5.4      c-1.3,0.2-2.5,0.3-3.7,1.1c-1.4,1-2.1,0.8-1.4-1.2c0.4-1.2-0.7-0.8-1.1-0.6c-4.6,2.7-9.8,2.2-14.8,2.6c2.2-6.5,3.5-7.4,9.5-5.9      c4.9,1.2,4.9,1.2,8.3-3.4c0.2-0.2,0.6-0.6,0.7-0.5c3,1.3,14-1.1,15.8-1c4.2,0,6.9-4.1,11-3.8C776.2,172.4,779.5,171.7,782,174z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6C6E",
                d:
                  "M591,202c-0.3,0.8-0.8,1.6-1.7,1.4c-1.1-0.3-1.2-1.4-1.3-2.4C589,201.3,590,201.7,591,202z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#888687",
                d:
                  "M1019,207c1.8,1.7,3.4,3.4,5.9,0.7c1.1-1.2,5.1,2.7,4.5-2.4c-0.1-1.3,1.1-1.3,1.6-0.7c1.5,2,4,2.2,6,3.2      c2,1,4.5,3.8,5.9-1c0.5-1.6,1.9-1.2,3.4,0.5c1.6,1.8,2.7-0.9,4.4-0.7c1.4,0.2,3,1,4.3,1.6c2.5,1.3,5.3,0.9,7.9-0.4      c1.6,0.9,3.2,1.7,5.1,1.8c2,0.1,3.5,0.9,4,3c0.4,1.9,1.7,2.7,3.4,3.2c1,0.3,1.9,0.8,1.9,2c-0.1,1.5-1.4,1.7-2.5,1.9      c-4.6,0.8-9.3,0.2-13.7,1.8c-1,0.3-1.8,0.7-2.5,1.4c-3.3,1.2-6.6,2.1-9.6-0.8c-1.1-1.1-2.2-0.9-3.5,0c-3.8,2.5-8.1,4.2-12.7,4.8      c-0.9,0.2-1.8,0.4-2.8,0.3c-2.8-1.7-5.1-0.6-7.4,1.1c-5.4,1.9-11.2-0.1-16.5,2c-11.8,1.5-23.6,0.8-35.4,1.7      c-0.8,0-3-0.6-3.7-0.9c-0.3-3.9,2.7-4.8,7.2-5c2.6-0.1,5.6,1.6,7.9-1.2c0.3,0,0.7,0,1,0c2.8-0.3,5.5-0.5,8.3,0      c4.5,0.8,8.8-0.7,13-2c5.6-1.8,11.6-1.9,17.7-4.5c-4.5-2.5-10.2-2.8-13.3-7.2c0.5-2.4,1.2-4.4,4.4-3.5      C1015.1,208.3,1016.8,205.7,1019,207z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C8B8C",
                d:
                  "M1009,211c4,1.3,6.7,5.1,11.8,4.6c2.6-0.3,2.2,4.1,1.9,7.6c-1.9-2.3-3.7-5.1-5.7-0.9      c-0.6,1.3-2.2-0.3-3.2,0c-3.4,0.9-7.4,0.1-10,3.3c-0.2,0.2-0.3,0.5-0.4,0.8c-4.9-3-10.2,3.2-15.3-0.8c-0.7-0.5-3.4,1.3-5.1-0.5      c0.7-2.7-1.5-5.9,1.7-8.2c1-0.7-0.5-0.8-0.9-0.9c-1.5-0.8-3.3-1.4-4.8-0.6c-3,1.7-5.7,1.7-8.7-0.1c-2-1.2-3.6-0.3-3.8,2.4      c-2.4-2.1-4.3-4.5-6.7-5.6c-2.5-1.2-2.7-0.6-2.9-2.9c0.7,0.1,1.3,1.1,2,0c6.6-4.3,13.7-2.6,20.4-0.7c6.6,1.8,12.9,0.5,19.4,0      c2.5,0,4.8,1.1,7.3,1.5c0.7,1.3,0.2,3.1,1.8,3.7c0.5,0.7,0.9-0.2,0.4,0.3c-0.1,0.1-0.2-0.1-0.4-0.3c-0.9-1-2.1-2-0.8-3.3      C1007.8,209.4,1008.6,210.2,1009,211z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C8B8C",
                d:
                  "M982,225c1.9,4.9-2.1,3-3.6,2.8c-4-0.4-8-1.5-10.4,3.2c-0.9,0.8-1-1.6-2.9-0.2      c-3.9,2.8-9.2,1.5-13.9,2.3c-1.6,0.3-3.3-0.4-4.7,0.9c-0.4,0.3-0.9,0.4-1.4,0.5c-5-1.4-9.8,1.6-14.8,0.9      c-1.8-0.2-3.6,0.5-5.3-0.5c0.7-1.2,0.3-4,2.8-2.9c5.9,2.4,11-1.5,16.6-1.6c5.5-0.2,11-2.3,16.5-3.4c1.8-0.3,3.5-0.2,4.7-2      c0.8-1.2,2.9-1.7,3.4-0.7c1.3,2.5,2.5,0.8,3.5,0.2c1.5-0.9,2.7-2,4.3-0.4c0.7,0.7,1.5,0.5,2-0.4c0.6-1.1-0.7-3.7,1.7-3.1      C982.6,221.1,981.9,223.4,982,225z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#848386",
                d:
                  "M925,235c4.6-0.2,9.1,0.6,13.6-1.8c2.1-1.1,5.1-0.7,7.4,0.8c0.8,2.1,0.2,2.8-2,2c-3,0-6,0-9,0      c-3.6-0.5-7.5,1.1-11-1C924.3,235,924.7,235,925,235z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9A989A",
                d:
                  "M947,223c0.7-1.7-2.9-5.5,2.3-4.9c1.9,0.2,2.3,1,0.9,2.4c-1.6,1.7,1.6,2,0.2,3.7      C949.3,224.8,948.4,222.5,947,223L947,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8C8B8C",
                d: "M921,235c-1.6,3-4.1,0.2-6,1C916.8,234.2,919,235.3,921,235z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9A989A",
                d:
                  "M947,223c0,1.4-0.9,2.5-2,2.2c-1.6-0.4,0-1.5,0-2.2l0,0C945.7,223,946.3,223,947,223L947,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#888687",
                d:
                  "M999,209c-1.2,0.8-2,3.2-4,1.1c-2.3-2.6-4.1,4.5-6.5,0.3c-4.4,2.6-8.5-3-12.9-0.5      c-0.6,0.3-0.8,0.5-1.4-0.3c-1.9-2.6-4.6-2.9-7.5-1.9c-2.5,0.9-5,1.7-7.7,1.4c0.5-0.6,1.5-1.3,1.5-1.9c-0.1-1.2-1.2-0.5-1.9-0.5      c-6.8-0.3-13.8,0.9-19.8-4c-1.9-1.5-5.2-1.4-7.2-0.2c-4,2.6-9.1,3.6-13.2-1.7c-1.7-2.2-6.6-0.3-9.5-2.7      c-0.4-0.3-1.2,0.1-1.5,0.9c-1.5,3.5-4.2,2.4-6.6,1.4c-0.9-0.4-1.7-1.6-2.5-0.5c-2.2,3.1-2.8-0.8-4.3-0.8c2.6-2,7.9,0.4,8.3-5.1      c3.7,1.3,7.3-0.7,11-0.2c2.1,0.3,4.7,1.7,6.7-0.7c-0.2,3.4,2.7,2.3,4.3,2.6c3.5,0.6,6.8,3.3,10.7,0.4c1.1-0.8,3.8,1.7,4.6,3.7      c0.7,1.9,1.8,1.4,2.6,0.8c3.8-2.5,5.7-2.4,8.8,1c2.3,2.5,4.2,2,6-0.5c4.7,1.5,9.3,3,14.4,0.6c1.5-0.7,3.9,1.7,6.3,2      c5.4,0.8,10.6,1,16-0.2c2.6-0.6,5.5,0.1,8.2,0.7c4.8,1,9.5,3,14.5,1.3c1.4-0.5,2.1,0.6,2.7,1.7c-2.3,0.9-4.2,3-7.1,1.5      c-2.4-1.2-0.6,3.1-2.9,2.5c-0.7-0.1-2.2-1.2-1.5,0.9c0.6,1.8,2.9,1.8,4.2,3.1c-4.1,0.6-5.3-0.6-5.8-5      C1003.6,210.1,1001.8,206.2,999,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#636367",
                d:
                  "M1020,238c-4,0.2-8.2,4.1-12-0.4c-2.1,2.6-4.9,0.5-7.5,1.3c-4.7,1.5-9.5,2.3-14.4,3.1      c-11.5,2-23.1,0.6-34.7,1c-2.8,0.1-5.6,0-8.5,0c5.6-2.3,11.6-2.6,17.6-3.2c7.5-0.7,15.1,0.1,22.4-1.8c0.3-0.4,0.7-0.8,1.1-1.1      c5.9-1.4,11.9-0.6,17.8-1.8c0.5,0,0.9,0,1.4,0.2c1.4,1.7,2.4-1.4,3.7-0.3l0,0c3.6-0.3,7.3,1,10.9-0.6c1.2-0.5,2.6,0.3,3.7,1      C1023.3,237.6,1020.5,237.1,1020,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747376",
                d:
                  "M984,238c-0.3,0-0.7,0-1,0c-3.4-2.1-7.5-0.2-11-2c0-0.3,0-0.7,0-1c0.8-3,3.4-2,5.3-2.1      c7.1-0.5,14.2-1,21.3-1.1c2.2,0,4.8-2.6,6.3,1.2c0.2,1.1,0.1,2.2-0.8,3.1c-0.3,0-0.7,0-1,0c-5.9-0.4-11.7,1-17.6,0.7      C984.7,236.6,984.4,237.4,984,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7E80",
                d:
                  "M1004,233c-0.3-0.4-0.7-1.2-0.8-1.1c-10.2,2.7-20.9,0.7-31.2,3.1c-5.6-0.4-11.1,1.6-16.8,1.3      c-1.7-0.1-3.5,0-5.2-0.3c-0.1-0.2-0.1-0.5-0.2-0.7c0.5-1.6,1.8-1.8,3.2-1.8c5.8,0.3,11.3-1.5,17-2.5c12-0.9,24-1.3,36-1      c0.3,0.2,0.5,0.4,0.3,0.7c-0.1,0.2-0.2,0.3-0.3,0.3c0,0.7,0,1.3,0,2C1005.3,233.6,1004.7,233.6,1004,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7E80",
                d:
                  "M944,236c1.3,0,2-0.7,2-2l0,0c3-2.7,3.1,0.5,4,2l0,0C948,236.8,946,237.6,944,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7F81",
                d:
                  "M743,197c-3-0.2-5.3,2.1-8.3,2.3c-1.6,0.1-1.2,1.6-0.7,2.7c-0.2,0.8-0.3,2.2-0.5,2.3      c-5.5,0.8-9.8,5.2-16.1,4.2c-4.6-0.7-10-1-13.9,3.4c-0.6,0.7-2.7,0.2-4.2,0.2c-6.4-0.1-11.9,3.1-17.9,4.6      c-5.7,1.4-11.9,1-17.7-0.2c-2.1-0.4-4-0.8-5.4,0.5c-2,1.7-5.3,1.7-6.2,1.1c-3.3-2.1-4.5,0.2-6.1,2c-1.3-1-2.8-1.9-2-4      c2-1.7,4-3.3,6-5c2.9-1.3,5.9-2,9-1c2.8,2.2,5.5,3,8.2-0.1c0.3-0.4,0.9-1,1.2-0.8c5.9,3.7,11.2-2.9,17.6-0.7      c6.2,2.2,12.8-1.2,18.5-4.2c6-3.1,12.8-5,18.9-5c5.6,0.1,9.5-3.1,14.5-3.5C739.8,195.6,742,193.5,743,197z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#79797C",
                d:
                  "M743,197c-5.2-1.3-9.6,1.1-13.9,3.5c-1.9,1.1-3.1,2.3-4.5-0.4c-0.2-0.3-0.8-0.8-1-0.7      c-5.9,2.2-12.3,2.7-18.1,5.5c-7.3,3.4-14.6,7.1-23.1,4.3c-2.5-0.9-5.1,0.1-7.5,1.8c-2.1,1.5-4.8,2.7-6-1.5      c-2.7,5.4-6.7,5.4-10,0.6c7.1,0.1,13.4-2.8,19.7-5.4c2.2-0.9,4.3-1.8,6.2,0.7c1.2,1.7,2,0.7,2.9-0.5c0.9-1.2,1.9-2.2,2.9-3.4      c2.2,0.6,0.7,2.7,1.9,4c2.2-2.3,4.5-4.6,8.4-3.3c3,1,4-2.8,6.6-3.4c1-0.2,1.7-2.1,2.9-1.2c6.4,4.7,12.1-0.9,18.1-1.2      c1.9-0.1,3.4-2.5,3.5-5c0-0.8,0.6-1.2,1.3-1.2c1.2,0,1.3,0.6,0.8,1.6c-0.9,1.8,0.8,1.1,1.1,0.9c2.2-1.5,5.4,0.3,7.5-2.9      c1.1-1.6,4.9,0.4,7.8-0.2c5.5-1.2,11.2-1.8,16.5-3.9c0.5-0.2,1.3,0.2,1.9,0.3c-0.7,0.7-1.3,1.3-2,2c-3,1.9-5.2,5.5-9.6,4.1      c-1.1-0.3-1.9,0.1-1.6,1.6c0.4,2.1-0.8,2.1-2.4,1.6c-0.7-0.3-1.6-0.4-1.9,0.8c-0.6,2.2-3,3-4,1.1      C745.7,193.6,744.5,196.5,743,197z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7F81",
                d:
                  "M631,219c-1.7,0.3-3.3,0.7-5,1c-2.1,0.1-3-1-3-3c1.2-1,2.9-3.2,4.1-1.5c3.2,4.3,6,0.9,8.7-0.1      c2.5-0.9,4.7-1.9,7.2-0.4c-0.4,2.5-1.6,4-4.3,3.5C636,217.9,633.6,220,631,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828385",
                d:
                  "M631,219c2.8-1,5.4-2.9,8.8-1.4c1.6,0.7,1.9-1.9,3.2-2.6c0.3,0.3,0.7,0.7,1,1c0.7,1.3,1.3,2.7,2,4      C641,220,635.8,221.8,631,219z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7F81",
                d:
                  "M617,220c-3-1.9-5.9-2.4-9.3-0.5c-2.3,1.3-5.3,2.1-7.7-0.5c0.2-0.3,0.3-0.7,0.5-0.8      c4.5-2.3,9.4-1.5,14.2-1.6C616,216.6,617,218.3,617,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828385",
                d:
                  "M623,217c1,1,2,2,3,3c-2.8,2.8-4.7-0.6-7-1C619.8,217.2,621.3,216.9,623,217z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#9B9B9D",
                d:
                  "M579,233c1.3,1.5,2.5,2.1,4.7,1.3c2.2-0.9,4.8-1.7,7.3-0.3c10.3,0.4,20.6-0.3,30.9,0.7      c5.9,0.6,11.8-0.2,17.8-0.3c11.5-0.2,23,0.5,34.5-0.3c4-0.3,7.8,1.4,11.7,2.1c0.8,0.2,1.5,0.8,1.2,1.8c0,2-0.2,4,0.1,5.9      c0.5,3.4-0.8,5.3-4,6.1c-0.6-0.3-1.1-0.7-1.2-1.5c-0.7-4.8-4-7.5-8.6-6.5c-3.1,0.7-6,1.8-9-0.4c-0.9-0.7-2.3-0.1-3.4,0.1      c-6.3,1.3-12.5-0.5-18.6-1.3c-6.6-0.9-12.8,1.4-19.2,1.3c-2.6-0.1-5.2,0.6-7.9,0.3c-2.5-2.8-5.3,0.2-8.2-0.4      c-7.7-1.5-15.9,0.7-23.6-1.5c-1.6-0.4-2.7,1.1-4,0C579.1,237.8,579.1,235.4,579,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A09FA2",
                d:
                  "M615,242c2.2-1.6,4.8-1.1,7.2-1.5c8.1-1.1,16.5-3,24.5-1.2c6,1.3,11.4,0.9,17.1,0.1      c0.4-0.1,1.2,0.1,1.3,0.4c2,4.1,4.8,2,7.3,0.9c1.5-0.6,2.7-0.4,4.2,0c5.1,1.2,7.8,3.7,6.4,9.3c-3.5,2-7.3,0.4-11.1,1.2      c1.2,1.5,3,0.1,4.3,1.2c-1.8,1.2-4.7,1.4-4.2,4.6c-0.6,0.8-1.5,0.5-2.2,0.9l-0.4-0.1l-0.4,0.2c-3.9,1.6-8.3,1.2-12.2,1      c-2.1-2.4-4.8-0.9-7.4-2.7c2-2.7,5.6-2.3,7.7-4.4c1.1-1.1,5.3-1.5,1.5-4.5c-1.5-1.1,4.2-1.9,0.4-3.1c-2.3-0.7-3.4,1.5-4.1,3.4      c-0.3,0.7-0.8,1.1-1.5,1.1c-1-0.1-1.4-0.9-1.4-1.8c0.1-3.7-1.7-3.5-4.8-3.2c-4,0.3-8-1.1-12.2-0.1c-4.4,1.1-9.2-0.6-13.6-0.1      C618.7,243.9,617,243.3,615,242z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#969698",
                d:
                  "M687,238c-7.1-1.6-13.9-4.5-21.5-2.2c-3.1,0.9-6.7,1.2-10.1,0.2c-6.5-1.9-13.1-0.9-19.7-0.3      c-9.2,0.8-18.4,0.2-27.5-0.5c-2.9-0.2-6.2-0.3-8.7,0.3c-3.4,0.8-5.7-0.5-8.4-1.4c0.2-1.1-0.5-2.7,1.9-2.5      c7.9,0.9,15.8,2.3,23.6,0c0.7-0.2,1.2,0.1,1.8,0.3c4.5,1.7,9.2,1.5,13.9,1c2.6-0.3,5.4-2.4,7.9,0.4c3.1-3.4,5.5,3.9,9-0.7      c0-0.2-2.3,0-2.2-1.5c2.2,0.1,4.3,0.5,6.2,0.7c2.8,0.3,6.5,3.2,8.9-1.1c0.5-0.9,1.9-0.8,2.7-0.1c2.2,1.7,4.2,4.4,7.2,1.2      c5.8,4.1,10.9-1,16.4-1.1c2.5,0,6-1.5,7.6,2.3C691.4,231.7,689.3,235,687,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#35363A",
                d:
                  "M602,260.9c2,0,4-0.1,6-0.1c2.7,0.1,5.3,0.2,8,0.2c-1.5,1.5-3.5,1-5.2,0.9c-5.1-0.5-10.2,0.2-14.9,1.5      c-2.1,0.6-3.1,3.6-4.5-0.4c0-0.1-0.4-0.1-0.5,0c-2.8,3.6-5.5-0.5-8.2-0.2c0.1-0.2,0.2-0.5,0.3-0.8      C589.2,259.7,595.6,260,602,260.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#A09FA2",
                d:
                  "M657.1,258.1c-0.1,0.3-0.2,0.5-0.4,0.8c-4.3,0-8.5,0.1-12.8,0.1C648.3,256.9,652.8,258.4,657.1,258.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0E",
                d:
                  "M624.4,264.3c0.2,0.2,0.8,0.5,0.8,0.8c0.2,1-0.7,0.8-1.3,0.8c-0.3,0-1,0.6-0.9-0.4      C623.2,264.9,623.4,264.3,624.4,264.3z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#100D0E",
                d:
                  "M649.2,260c0.9,0.1,2.5,0.1,2.5,0.3c0.2,1.2-0.9,0.5-1.5,0.7c-0.4,0.1-0.9-0.2-1.3-0.3      C649,260.5,649.1,260.3,649.2,260z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#8B8C8E",
                d:
                  "M759,210c1,2,3.2,3.5,2.7,6.2c-1.5,1.2-3.8-5-4.8,0.5c-0.1,0.5-1.3-0.5-2-0.8c-2.3-1.2-4.1-2.1-7,0.1      c-1.8,1.4-5.5,0.7-8.4,1.8c-1,0.4-3-1.9-3.2,1.3c0,0.1-0.5,0.3-0.7,0.2c-3.8-1.3-4.5-1.2-8,1c-0.1,0.1-0.3,0.3-0.4,0.3      c-7.3-2.4-13.1,5.5-20.8,2.6c-2.6-1-6.3-1.1-9.4,1.4c-2.3,1.9-5.6-2-8.5,0c-0.3,0.2-0.9-0.3-1.4-0.4c-1.6,5-6.6,3.3-9,3      c-5.7-0.6-11.2,2.2-16.8,0.4c-3.1-1-5,3.2-8.4,1.6c-0.9-0.4-2.4,1.1-2.4-1.4c0-1.1-1.8-1.8-2.2-1.6c-3.3,2.2-7.7-0.5-10.7,2.5      c-0.9,0.9-2.2,1.7-3.1,0.8c-2.3-2.5-5.6-1.7-7.4-1.1c-6.5,2.2-12.4-0.3-18.6-0.8c-3.4-0.3-6.8,1.1-10.4,0.8      c-3.2-0.2-6.5-0.4-9.7-0.7c-2.8-0.2-5.7-2-7.6,1.7c0,0.1-1.2-0.4-1.8-0.6c0.1-4.5,2.7-6.9,7.6-5.8c4.7,1,9.1-0.2,13.7-0.1      c5.2,0.1,10.5,0.2,15.7-0.1c0.9-0.1,2.2-1.9,2.7,0.3c0.2,0.9,0.4,2,1.2,1.1c2.9-3.5,5.8-1.3,8.8-0.4c1.8,0.6,3.2-0.2,4.7-0.7      c3.3-1,6.6-3,10.1,0.6c1.3,1.4,4.3-0.5,6.7-0.5c3.5,0,7-0.7,10.3,1.1c2.3,1.2,4.3-0.8,5.3-1.8c3.7-3.6,7.9-1.8,10.2-1.4      c1.1,0.2-0.4,2.3,1.6,2.9c0.5-1.8,2-2.3,3.8-3.1c5-2,10.1-3.7,15.3-5.1c2.5-0.7,5.3,1.5,8.2,0c5.9-3.1,12.8-1.5,18.9-3.8      c5.2-2,10.8-1.3,16.2-1.4c2.9,0,2.6-1.6,2.5-3C747.8,210.2,753.5,209.7,759,210z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#919193",
                d:
                  "M490.1,229.1c0.9-0.6,3.3,3,2.9-1.1c2,0.4,2.1,3.9,2.9,3.4c3.4-2.1,7.7,0.4,10.6-2.6      c2.1-2.1,3.5-1.2,5.9-0.3c4.5,1.7,9.6,1.4,14.4,0c0.9-0.3,1.6-1.5,2.6-0.8c4.1,3,8.7-1.6,13.2,1.4c1.8,1.2,5.5-1.8,8.7-1.7      c2.4,0.1,4.9-2.4,7.1,0.5c1.9-2,4.2-1.1,6.4-1l0,0c1,6.5,0.7,6.9-4,6v0c-5.1,0.1-9.8,2-15.1,1.7c-6.9-0.3-14.2,1.2-21.2,2.3      c-2.4,0.4-4.8,0.3-6.7-0.1c-6.1-1.3-11.9,0.6-17.9,0.8c-2.7,0.1-5.8-1.6-8,1.6c-0.4,0.5-1.4-0.4-1.6-1.3      c-0.2-1.3,0.4-2.7-0.4-3.9C490.1,232.4,490.1,230.8,490.1,229.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7D7B7E",
                d:
                  "M562,216c-3.7,0.7-7,1.3-11-0.1c-3.1-1-7.2-0.9-10.7,0.8c-1.2,0.6-2.8,1.4-3.8,1      c-6.3-2.9-12.5-1.5-18.8,0.2c-2.4,0.6-5.1,1.6-6.7-2c-0.6-1.4-1.9-0.3-3,0.2c-5,2.3-10.3,2.1-15.6,2c-0.9,0-1.7-1.4-2.5-2.1      c0.1-2.9-1.1-7.3,4.4-3c0.5,0.4,5.2-0.8,7.9-1.2c5.3-0.8,11.1,1.4,15.9-3c1.1-1,3.3,1.8,4.5,3.2c1.7,1.8,2.6,2.4,4.9,0.7      c1.8-1.3,4.5-2.1,6.6,0.3c0.9,1,2.6,1.6,3.7,0.8c5-3.5,10.4-2.4,15.9-1.8c2.8,0.3,5.6-0.1,8.2-2.7C562,212,562,214,562,216z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#99999B",
                d:
                  "M490.1,234.1c1.7,1,0.1,3.3,1.8,4.4c2-0.6,0.5-2.8,1.8-3.9c2.7,2.3,5.9,1.2,9,1.4      c3.3,0.2,6.8-0.1,9.5-0.9c3.9-1.1,6.7,2.8,9.4,1.3c3.7-2.1,7.3-0.6,10.9-1.3c3.7-0.8,7.5-1,11.3-1.6c1.7-0.3,3.6-2.6,4.9,0.8      c0.3,0.8,1.1-0.6,1.5-1.2c0.9-1.4,6.4-2.7,7.1-1.6c1.6,2.9,1.6,0.6,2.4-0.4c0.5-0.6,0.7-0.5,1.4,1.8c-1.1,0.7-1,2.5-3.6,2.1      c-2.8-0.5-5.6,2-8.8,2.7c-2.4,0.5-4.7,1.7-7.4,1.3c-1.5-0.2-3-0.4-4.3,0.7c-2.2,1.8-4.2,1.5-6.2-0.4c-1.6-1.5-3.2-2.3-4.8,0.4      c-1.6,2.7-2.6-0.7-4-0.7c-1.1,0-2.6-2.6-3-0.3c-1.2,6.5-6.1,2.6-8.9,3c-3.1,0.5-6.2-0.2-9.6,1c-3,1-7,0.4-10.2-1.6      C490.1,238.7,490.1,236.4,490.1,234.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7D7B7E",
                d:
                  "M565,215c-0.7,0.7-1.3,1.3-2,2c0-0.8,0-1.7,0.1-2.5c0.1-0.8,0.4-1.9,1.3-1.7      C565.3,213,564.9,214.2,565,215z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#99999B",
                d:
                  "M561,233c4.7,0.3,4.1-3.1,4-6c1.9,2.5,0.5,5.3,1,8c-2-0.4-3.3,0.8-4.8,2.5      C561.1,235.7,561.1,234.4,561,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#747070",
                d:
                  "M1052,182c-5.6,1.4-11.2,2.8-17,3c-0.6-0.1-1.5,0.1-1.9-0.3c-0.8-0.7,0-1.2,0.5-1.4      c3.1-0.9,5.7-3.5,9.5-2.5c2.1,0.5,4.5,0.5,6.7-0.9C1051.5,178.9,1051.8,180.7,1052,182z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6B6C",
                d:
                  "M1011.6,175.8c-0.9,2.5-2.3,2-3.7,2.2C1008.8,176.3,1010.1,176.8,1011.6,175.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6D6B6C",
                d:
                  "M920.7,169c0.7,0.2,1.7-0.2,1.4,0.9c-0.1,0.3-0.7,0.7-1.1,0.8c-0.7,0.1-1.3-0.3-1.3-1      C919.8,169.4,920.5,169.2,920.7,169z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#C1BBBB",
                d:
                  "M1928.9,401.2c-0.3,0.6-0.6,1.2-0.9,1.8c-1.4,0.2-2.3-0.3-2-1.8c0.3-2.1,1.8-1.2,3-1.1      C1928.9,400.5,1928.9,400.9,1928.9,401.2z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#E2DEE0",
                d:
                  "M1927.1,395.1c-0.2,2-1.8,1.7-3.1,2C1924.5,395.6,1925.6,395,1927.1,395.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524E4E",
                d:
                  "M1889.5,385.9c-1.9-0.1-3.9,0.8-5.5-0.9C1885.9,385.2,1887.8,384.8,1889.5,385.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524E4E",
                d:
                  "M1903.4,387.9c-1.8,0-3.7,0.7-5.3-0.8c0.6-0.1,1.3-0.1,1.9-0.2c0.7,0.1,1.3,0.1,2,0.2      C1902.4,387.3,1902.9,387.6,1903.4,387.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#524E4E",
                d:
                  "M1910.3,388.8c-1.4,0.1-2.8,0.1-4.2,0.2c-0.3-0.3-0.7-0.6-1-1C1906.8,387.9,1908.6,387.8,1910.3,388.8z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#5A5859",
                d:
                  "M1066,238c1.3-1.8,2.7,0.4,4,0C1068.7,239.8,1067.3,238.5,1066,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#646264",
                d:
                  "M1020,238c0.7-0.7,1.3-1.3,2-2c1.8-2.7,4.4-0.2,6.6-1.1c6.2-2.6,13.2-3.1,19.3-3.2      c8.7-0.1,17.5-2,26.2-0.1c3.4-0.2,6.8-0.1,10.2-0.1c1.5,0,3-0.1,3.8,1.5c0.4,0.2,0.9,0.3,1.3,0.5c-0.4,0.2-0.9,0.3-1.3,0.5      c-7.1-0.5-14.1,0-21.2,0.6c-4.2,0.4-8.3,1.4-12.7,1.1c-5.8-0.3-11.5-0.3-17.5,1.9C1031.8,239.5,1025.6,239.4,1020,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#B6B7B8",
                d:
                  "M508.6,244.1c-1.1,0-2.1,0-3.5,0C506.5,242.5,507.5,243.1,508.6,244.1z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#BABBBF",
                d:
                  "M602,260.9c-6.3,0.9-12.6,1.3-19,1.1c1.3-4.5,6.9-4,8.9-7.7c0.4-0.7,2.7-0.4,2.7,0.1      C594.3,259.9,601,257.1,602,260.9z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#817E7D",
                d:
                  "M1063,206c-0.2-2.7-3.1-3.2-4.4-3.2c-3.3,0-6.2-0.4-9.3-1.6c-2.8-1.1-5.8-1.2-8.5,1.6      c-2.9,3-5.8-0.1-8.2-1.4c-2.6-1.4-4.3-1.8-7.1-0.3c-3.7,2-6.9-0.3-9.5-3.1c0.8,0,1.6-0.2,2-1c1.7-0.8,1.7-0.8,3.4,2.1      c0.2-4.2,2.7-4.4,5-3c3.9,2.4,8.7,1.6,12.5,4c1.2-5.8,4-6.9,9.3-3.3c1.3,0.9,2.5,1.9,3.8,0.1c0.7-1,1.6-2.1,2.7-2      c2.2,0,0.6,2.4,0.6,2.4c2.3-2.3,4.6,3.7,6.8,0c2.7,3.7,6.4,0.5,9.6,1.3c2.1,0.5,5.2,2.9,7.3-0.5c6.2,1.8,11.7,5.8,18.7,5.1      c2.1-0.2,3.9-1.3,6.1-0.8c9.6,2,12.3,8.7,7.2,17.6c-2.1,1.4-3.7,2.3-6.7,1.2c-2.5-1-5.3,1.9-8.4,2.3c-3,0.4-5.8,1.5-8.9,0.6      c-4.6-1.2-8.8,1.5-13.3,1.5c-3.5,0-7.1,0.2-10.6,0.3c-1.1-3.2,1.7-2.8,3.3-3.5c0.5-0.1,0.9-0.1,1.4-0.1c1.5,0.2,3,0.6,4.3-0.6      c3.6-2.4,7.7-1.4,11.6-1.9c2.5-0.3,5-0.7,7.1-1.8c2-1.1,3.9-1.7,6.1-1.5c1.7,0.1,3.3-0.2,4.6-1.6c1-1,1.3-2.3,0.9-3.7      c-0.4-1.5-1.7-1-2.7-1.4c-3.7-1.4-7.2,0.2-10.8,0.5c-2.3,0.2-4-0.5-6.1-1.4c-2.7-1.2-5.6-6-8.9-0.1c-1,1.9-3-0.8-4.2-2      c-1.5-2-3.4-1.4-5.2-0.6C1063.8,206.4,1063.3,206.3,1063,206z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7E7A7A",
                d:
                  "M1111,220c-0.1-1-0.6-2.5-0.2-2.8c4.5-3.8,1.3-7.2-0.6-10.4c-1.8-3.1-5.4-3.7-8.5-1.6      c-1.5,1-3.4-3.3-4.6,0.4c-6.2-2.2-12.8-3.3-18.1-7.6c0-1.8,1.1-2.7,2.6-3.2c0.4-0.1,0.9,0,1.4,0c-2.3,5.6,4.9,1.7,5.1,5      c0,0.8,1.1,1.3,2,0.9c7.4-3.8,14.5,1.4,22,0.7c3.5-0.3,7.2,2.9,9.6,5.1c3.3,3.1,2.6-4.1,4.7-1c0.8,1.2-2,3.9,2.6,3.8      c6.4-0.2,6.5,0.5,6.9,5.5c-1.7-2.7-3.3-2.9-5.3-1.1c-1,0.8-2.6,3.2-4,0.2c-1,2.4-4.1,1.1-5.5,3.5      C1118.7,221.2,1115,221.5,1111,220z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726F6F",
                d:
                  "M1074,232c-6.3,0.3-12.7,1.2-19,0.9c-11.2-0.6-21.9,3.7-33,3.1c-3.3-1-6.7,0.2-10,0      c-1.7-0.1-3.6,0.6-5-1c2.3-1.3,4.3-1.6,7.2-0.8c2.5,0.7,5.6-1.6,8.6-1c4.8,0.8,9.9-3.3,12.8-2.3c7.1,2.3,13.4-4,20.2-0.3      c2,1,5.4-1,8.2-1.4c3.5-0.5,7-1,9.9,1.8c0,0,0,0,0,0c0.2,0.2,0.3,0.4,0.2,0.7C1074.1,231.9,1074.1,232,1074,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#838182",
                d:
                  "M1067,223c-0.8,1.7-4,0.2-4,3c-6.7,1.5-13.5,1-20.2,1.4c-2.3,0.1-4.3,3.5-6.8,0.6c-2,0.6-3.7,0.6-4-2      c5-1,9.9-2,13.8-5.7c0.6-0.6,1.6-1,2.2-0.2c2.7,3.4,6.5,2.7,10,2.9C1061,220.4,1064,220.4,1067,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#7F7D7F",
                d:
                  "M1032,226c1,1.3,2.4,1.8,4,2c-0.8,1.2-2.3,1.5-3.5,1.5c-8.9,0.2-17.6,2.7-26.5,1.5c0-0.3,0-0.7,0-1      c3.3-2.4,7.1-2,10.9-2c2,0,4.3,0.8,6.1-1c2.3,0.9,4.7-1.4,7,0C1030.7,226.7,1031.3,226.3,1032,226z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726F6F",
                d:
                  "M1004,233c0.7,0,1.3,0,2,0c0.3,0.7,0.7,1.3,1,2c-1.1,0-1.5,2.2-3,1C1004,235,1004,234,1004,233z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#6E6A69",
                d:
                  "M1074,232c0-0.3,0-0.7,0-1c11-0.5,21.8-1.6,32.6-3.6c1.4-0.3,2.9,0.4,4.4,0.6c-0.3,0.7-0.7,1.3-1,2      c-4.5,1.6-9.3,0.2-13.9,1.1c-2.7,0.5-6-1.1-8.1,1.9C1083.5,230.6,1078.6,233.1,1074,232z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#878484",
                d:
                  "M1067,223c-3-0.8-6-1.9-9,0c0.1-1.3-0.2-2.7,1.8-2.9c5.4-0.4,10.7-0.9,16.1-1.4c0.2,0,0.4-0.4,1-1      c-3.4-0.6-6.6-1-6.3-5.5c0.1-1.5-2.1-1.1-3.4-1.1c-2.2,0-4-0.3-4.2-3c0-0.7,0-1.3,0-2c0.3,0,0.7,0,1,0c2,0.1,4,0.1,6,0      c1.3,0.6,1.2,2.9,3.3,2.5c1.2-1.6-1.3-2.1-0.9-3.6c1-0.8,1.5,0.9,2.4,0.7c1.6-0.4,6.3-0.3,6.7,0.5c2.4,4.4,6.8,3.8,9.9,2.6      c3.2-1.3,6.3,1,9.4-0.9c0.7-0.4,2.8,1.7,3,3.4c0.2,2.1-0.1,5.1-2.2,5.5c-5.8,1-11.1,3.2-16.8,4.2c-4.2,0.8-8.7-0.1-12.8,2      c-1.3,0.5-2.7-0.2-4,0C1067.7,223,1067.3,223,1067,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#757477",
                d:
                  "M691.9,194.4c-0.1,0.6-0.3,1.2-0.9,0.8c-0.3-0.2-0.6-0.7-0.7-1.1c-0.1-0.5,0.4-0.9,0.9-0.6      C691.6,193.6,691.7,194.1,691.9,194.4z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#848386",
                d:
                  "M950,236c-1.6-0.1-1.6-3.4-4-2c0.2-1-0.2-3.1,1.4-2.5c4.6,1.6,8.8-1,13.3-0.5c1.4,0.1,3.1,0.6,4.1-1      c2.3-3.4,2,1,3.1,1c0.7,0,1.3,0,2,0c-5.4,3-11.2,4.1-17.3,3.7C951.3,234.6,950.5,234.8,950,236z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#838182",
                d:
                  "M1030,227c-2.3,0.5-4.7,1.8-7,0C1025.3,226.1,1027.7,222.3,1030,227z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#888687",
                d:
                  "M999,209c0-2.5,0.7-3.9,3.4-2.1c1.3,0.9,2.4,2,3.6,3.1C1003.4,211.6,1001.3,209.6,999,209z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#726F6F",
                d:
                  "M984,238c0.3-2.8,2.7-2.1,4.3-2.1c4.3-0.2,8.7-0.2,13-1.3c0.9-0.2,1.4,0.7,1.8,1.4      c-5.4,1.1-10.8,1.7-16.3,1.2C985.9,237.1,984.9,237.7,984,238z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#828081",
                d: "M1070,206c-2,2.6-4,2.6-6,0C1066,203.2,1068,203.2,1070,206z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#838182",
                d:
                  "M1068,223c1.3-1.8,2.7-0.5,4,0C1070.7,224.4,1069.3,224.4,1068,223z"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                fill: "#817E7D",
                d:
                  "M1117.4,208.7c-0.2,3.4,2.2,2.8,3.8,3.5c0.6,0.2,0,1.5-0.5,2.1c-1.3,1.2-2.8,1-3.9-0.1      c-0.9-0.9-2.9-1.5-1.8-3.4C1115.4,210.1,1116.1,209.7,1117.4,208.7z"
              }
            })
          ])
        ])
      ]
    ),
    _vm._v(" "),
    _c("canvas", { attrs: { id: "output-canvas" } })
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6bd97949", module.exports)
  }
}

/***/ }),

/***/ 242:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(243)
}
var normalizeComponent = __webpack_require__(19)
/* script */
var __vue_script__ = __webpack_require__(245)
/* template */
var __vue_template__ = __webpack_require__(246)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\assets\\js\\components\\Wheel2PngComponent.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0719be3c", Component.options)
  } else {
    hotAPI.reload("data-v-0719be3c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 243:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(244);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(41)("6f3268c5", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0719be3c\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Wheel2PngComponent.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0719be3c\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Wheel2PngComponent.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 244:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(32)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ 245:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
    name: 'car-2-png-component',
    data: function data() {
        return {
            bodyBaseColor: '000000',
            diskFillColor: '000000',
            bodyColorRange: [],
            progress: 0,
            canvas: null,
            canvasContext: null
        };
    },
    mounted: function mounted() {
        var that = this;

        var colorInput = document.querySelector('input[name="value_16"]');
        colorInput.addEventListener('change', function () {
            if (colorInput.value != '') {
                that.progress = 0;
                that.diskFillColor = colorInput.value.replace('#', '');
            }
        });

        window.onload = function () {
            that.diskFillColor = colorInput.value.replace('#', '');
        };
    },
    computed: {
        isSelfReady: function isSelfReady() {
            return this.diskFillColor !== null;
        },
        carDiskColor: function carDiskColor() {
            var that = this;
            return that.diskFillColor;
        }
    },
    watch: {
        isSelfReady: function isSelfReady(val) {
            var that = this;
            if (val) {
                console.log('isSelfReady');
            }
        }
    },
    updated: function updated() {
        var that = this;
        that.$nextTick(function () {
            // Code that will run only after the
            // entire view has been re-rendered
            // Ждем пока перекрасится картинка
            console.log('Painting Done', that.progress);
            that.makePng();
        });
    },
    methods: {
        /**
         * Converts an RGB color value to HSL. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes r, g, and b are contained in the set [0, 255] and
         * returns h, s, and l in the set [0, 1].
         *
         * @param   Number  r       The red color value
         * @param   Number  g       The green color value
         * @param   Number  b       The blue color value
         * @return  Array           The HSL representation
         */
        rgbToHsl: function rgbToHsl(r, g, b) {
            r /= 255, g /= 255, b /= 255;
            var max = Math.max(r, g, b),
                min = Math.min(r, g, b);
            var h,
                s,
                l = (max + min) / 2;

            if (max == min) {
                h = s = 0; // achromatic
            } else {
                var d = max - min;
                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                switch (max) {
                    case r:
                        h = (g - b) / d + (g < b ? 6 : 0);
                        break;
                    case g:
                        h = (b - r) / d + 2;
                        break;
                    case b:
                        h = (r - g) / d + 4;
                        break;
                }
                h /= 6;
            }

            return [h, s, l];
        },
        /**
         * Converts an HSL color value to RGB. Conversion formula
         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
         * Assumes h, s, and l are contained in the set [0, 1] and
         * returns r, g, and b in the set [0, 255].
         *
         * @param   Number  h       The hue
         * @param   Number  s       The saturation
         * @param   Number  l       The lightness
         * @return  Array           The RGB representation
         */
        hslToRgb: function hslToRgb(h, s, l) {
            var r, g, b;

            if (s == 0) {
                r = g = b = l; // achromatic
            } else {
                var hue2rgb = function hue2rgb(p, q, t) {
                    if (t < 0) t += 1;
                    if (t > 1) t -= 1;
                    if (t < 1 / 6) return p + (q - p) * 6 * t;
                    if (t < 1 / 2) return q;
                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                    return p;
                };

                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                var p = 2 * l - q;
                r = hue2rgb(p, q, h + 1 / 3);
                g = hue2rgb(p, q, h);
                b = hue2rgb(p, q, h - 1 / 3);
            }

            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];
        },
        hexToRgbArr: function hexToRgbArr(hex) {
            var c;
            if (/([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
                c = hex.split('');
                if (c.length == 3) {
                    c = [c[0], c[0], c[1], c[1], c[2], c[2]];
                }

                //                    var cs = _.chunk(c, 2);
                //                    console.log('c', c);
                //                    return [parseInt(cs[0], 16), parseInt(cs[1], 16), parseInt(cs[2], 16)];
                c = '0x' + c.join('');
                return [c >> 16 & 255, c >> 8 & 255, c & 255];
            }
            throw new Error('Bad Hex ' + hex);
        },
        intToHex: function intToHex(num) {
            var hex = num.toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        },
        rgbToHex: function rgbToHex(r, g, b) {
            return "#" + this.intToHex(r) + this.intToHex(g) + this.intToHex(b);
        },
        setCacheColor: function setCacheColor(base, selected, rendered) {
            localStorage.setItem(base + '_' + selected, rendered);
            return rendered;
        },
        getCachedColor: function getCachedColor(base, selected) {
            var rendered = localStorage.getItem(base + '_' + selected);
            //console.log('rendered', rendered);
            return rendered !== null ? rendered : false;
        },
        diskColorRecalc: function diskColorRecalc(color) {
            var rendered = false;
            if (this.diskFillColor == null) {
                return color;
            }
            if (!(rendered = this.getCachedColor(color, this.diskFillColor))) {
                var currDiskColor = this.hexToRgbArr(color);
                var fillDiskColor = this.hexToRgbArr(this.diskFillColor);

                var curr_hsl = this.rgbToHsl(currDiskColor[0], currDiskColor[1], currDiskColor[2]);
                var fill_hsl = this.rgbToHsl(fillDiskColor[0], fillDiskColor[1], fillDiskColor[2]);

                if (fillDiskColor[0] == fillDiskColor[1] && fillDiskColor[0] == fillDiskColor[2]) {
                    var L = 0.2126 * (currDiskColor[0] + fillDiskColor[0]) / 2 + 0.7152 * (currDiskColor[1] + fillDiskColor[1]) / 2 + 0.0722 * (currDiskColor[2] + fillDiskColor[2]) / 2;
                    fill_hsl[2] = L / 180;
                } else {
                    fill_hsl[2] = curr_hsl[2] + 0.18;
                }

                var idx = this.hslToRgb(fill_hsl[0], fill_hsl[1], fill_hsl[2]);

                rendered = 'rgb(' + idx.join(',') + ')';

                this.setCacheColor(color, this.diskFillColor, rendered);
            }
            return rendered;
        },
        makePng: function makePng() {
            var that = this;
            var svg = '',
                wheelSvg = document.querySelector('#car-wheel'),
                wheelPolishedSvg = document.querySelector('#car-wheel-polish'),
                wheelContainer = document.querySelector('#wheel-container');
            if (wheelSvg) {
                if (typeof window.XMLSerializer != "undefined") {
                    var wheelXml = new XMLSerializer().serializeToString(wheelSvg);
                    var wheelPolishXml = new XMLSerializer().serializeToString(wheelPolishedSvg);
                } else if (typeof wheelSvg.xml != "undefined") {
                    var wheelXml = wheelSvg.xml;
                    var wheelPolishXml = wheelSvg.xml;
                }

                var wheel_canvas = document.createElement("canvas");
                var wheel_polished_canvas = document.createElement("canvas");
                wheel_canvas.setAttribute('id', 'output-wheel-canvas');
                wheel_polished_canvas.setAttribute('id', 'output-wheel-polished-canvas');
                var wheel_canvasContext = wheel_canvas.getContext("2d");
                var wheel_polished_canvasContext = wheel_polished_canvas.getContext("2d");
                wheel_canvas.setAttribute('width', 350);
                wheel_canvas.setAttribute('height', 350);
                wheelContainer.appendChild(wheel_canvas);
                wheel_polished_canvas.setAttribute('width', 350);
                wheel_polished_canvas.setAttribute('height', 350);
                wheelContainer.appendChild(wheel_polished_canvas);

                wheel_canvas.height = wheelSvg.getAttribute('height');
                wheel_canvas.width = wheelSvg.getAttribute('width');
                canvg(wheel_canvas, wheelXml);
                wheel_polished_canvas.height = wheelSvg.getAttribute('height');
                wheel_polished_canvas.width = wheelSvg.getAttribute('width');
                canvg(wheel_polished_canvas, wheelPolishXml);

                var wheel_canvasdata = wheel_canvas.toDataURL("image/png"); //.replace("image/png", "image/octet-stream");
                var wheel_polished_canvasdata = wheel_polished_canvas.toDataURL("image/png"); //.replace("image/png", "image/octet-stream");

                var wheel_render_img = document.querySelector('input[name="wheel_img"]');
                var wheel_polished_render_img = document.querySelector('input[name="wheel_polished_img"]');
                wheel_render_img.value = wheel_canvasdata;
                wheel_polished_render_img.value = wheel_polished_canvasdata;
                wheelContainer.removeChild(wheel_canvas);
                wheelContainer.removeChild(wheel_polished_canvas);
            }
        }
    }
});

/***/ }),

/***/ 246:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "car", attrs: { id: "wheel-container" } }, [
    _c(
      "svg",
      {
        attrs: {
          viewBox: "0 0 350 350",
          width: "350",
          height: "350",
          id: "car-wheel"
        }
      },
      [
        _c(
          "g",
          {
            staticClass: "car-wheel",
            attrs: {
              id: "car-wheel",
              height: "200",
              width: "200",
              transform: "translate(-225,-425)"
            }
          },
          [
            _c("g", { attrs: { id: "tire" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M271,522.9c-0.1-1.6,1-2.8,1.8-4c2.2-2,3.8-4.5,5.1-7.1c15.7-22.2,36.4-38.2,61.3-48.8\n\t\t\t\t\t\t\tc7.3-3.1,14.8-6,22.8-7.2c0.2,2.7-2.2,2.7-3.7,3.1c-8.4,2.3-15.9,6.8-24.1,9.4c-2.3,0.7-3.3,2.1-2.8,4.5\n\t\t\t\t\t\t\tc-0.6,4.2-4.2,5.2-7.3,6.7c-0.4,0-0.9-0.2-1.3-0.4c-6.2,1.9-10.8,6.1-15,10.6c-2,2.2-3.4,5-5.6,6.9c-1.4,1.2-2.3,2.1-4.7,2.3\n\t\t\t\t\t\t\tc-3.5,0.3-6.8,4-7.6,7.6c-0.8,3.8-2.6,6.6-5,10c13.7-18.3,30.2-32.5,50.1-42.6c2.8-1.4,4.8-4.2,8.2-4.5\n\t\t\t\t\t\t\tc1.3,0.3,2.6,0.1,3.8-0.4c9.9-4.2,20.4-6.4,30.7-8.9c0.5-0.1,1,0,1.5,0c7.1,1.6,14.2-1.2,21.4-0.4c6.1,0.7,12.2,1.6,18.4,1.1\n\t\t\t\t\t\t\tc2.4-0.2,4.1,2,6.4,2.5c4.5,1.1,9,2.2,13.5,3.6c16.3,5.1,30.1,14.4,43.6,24.5c2,1.5,4.3,2.7,5.2,5.3c-1.9,3.5-5.4,4.8-7.9,2.6\n\t\t\t\t\t\t\tc-2.6-2.3-6.4-4-8-6.4c-2.3-3.4-4.8-4.3-8.1-6.1c-4.2-2.3-9.1-2.2-12.9-5.3c0.7,2.3,4.8,3.5,2.2,6.2c-2,2-4.3-0.1-6.2-1.4\n\t\t\t\t\t\t\tc-1.9-1.2-3.4-2.6-6.2-1.1c-3,1.6-3.7-2.3-5.5-3.7c-1.7,2.7-3.8,1.8-5.8,0.4c-0.7-0.5-0.5-1.6-0.9-2.3\n\t\t\t\t\t\t\tc-0.7-1.1-1.6-1.6-2.9-1.2c-0.7,0.2-1.1,0.9-1.1,1.6c0,1.5,1.4,1.1,2.2,1.4c10.1,3.6,20.7,6.1,30.2,11.4\n\t\t\t\t\t\t\tc7.3,4.1,14.4,8.5,21.2,13.2c4.5,3.1,8.3,7.6,12.3,11.5c9.6,9.5,18.7,19.4,24.4,31.9c0.5,1.2,1.3,2.3,2.5,3.1\n\t\t\t\t\t\t\tc2.3-1.9,2.2-6.4,6.5-6c0.4,0.2,0.7,0.6,0.8,1c-0.3,2-1.2,3.9-1,6c-1.9,3.4-1.9,6.8-0.7,10.5c3.5,10.6,4.7,21.7,6.4,32.6\n\t\t\t\t\t\t\tc0.2,1.4,0,2.7-0.5,3.9c-2.5,6.4-1.7,13.2-1.6,19.7c0.2,6.4-1.5,12.4-2.3,18.5c-0.2,1.9-1.2,3.7-1.2,5.8c0,2.3-0.6,4-2.9,5.3\n\t\t\t\t\t\t\tc-2.3,1.4-3.6,3.5-1.7,6.6c1.1,1.8,1.2,4.5,0,6.2c-2.3,3.4-4,6.7-4.2,10.9c-0.1,1.1-1.2,1.3,0.6,2.4c2.4,1.5,1.2,4.6,0.2,6.8\n\t\t\t\t\t\t\tc-1.5,3.5-3.2,6.9-5.9,9.8c-2.7,2.6-4,6.3-8.1,7.8c-1.8,0.7-1.8,4.3-3.9,6c-4.4,3.7-9.6,6.1-14,9.7c-1.8,1.5-4.1,2.3-4.3,5.1\n\t\t\t\t\t\t\tc-0.1,1.7-1.5,2.5-2.8,3.2c-2.7,1.4-5.1,3.1-7.8,4.5c-4.9,2.7-4.7,2.7-8.7-0.5c-2.1-1.7-2.1-3.1,0-4.2\n\t\t\t\t\t\t\tc6.2-3.4,11.5-8.2,17.4-11.9c5.5-3.4,10.5-7.8,14.9-12.8c0.9-1.1,0.8-2.5,1.2-3.8c0.8-2.5,1.6-5.1,5.3-3.4\n\t\t\t\t\t\t\tc0.9,0.4,1.6-0.5,4.3-5.4c-2,4-4.7,6.3-9.1,3.6c-1.9,2.5-4.8,3.9-6.4,6.9c-3,5.8-8.4,11.2-13.9,12.1\n\t\t\t\t\t\t\tc-7.2,1.3-12.2,5.7-18.4,8.1c-6.5,2.5-13.1,4.8-19.6,7.4c-34.6,8.8-67.5,4.8-98.8-12.5c-0.5-0.2-0.9-0.5-1.3-0.8\n\t\t\t\t\t\t\tc-3.1-2.8-6.7-5-10.2-7.2c-1.5-1.1-3-2-4.5-3.2c-4.1-4.8-10-7.9-13.7-13.1c-13.8-15.9-24.5-33.7-29.8-54.2\n\t\t\t\t\t\t\tc-2.8-10.7-5.5-21.6-4.2-33c0.2-2.1,0.5-4.4-0.1-6.5c-2.5-9.5,1.1-18.2,3.7-27c2.5-8.6,5.8-16.9,10.4-24.6\n\t\t\t\t\t\t\tc-0.3-0.1-0.2,0.2-0.4,0.5c-7.5,7.8-7.7,18.6-11.3,28c-3.3,8.7-4.6,17.8-3.1,27.2c0.5,3-1,6.1-0.6,9.4\n\t\t\t\t\t\t\tc1.6,12.9,2.9,25.9,7.8,38.2c0.5,1.3,0.8,2.6,0.6,3.9c-1,5.8-0.8,11.5-0.1,17.3c0.7,5.1-0.2,5.6-5.6,4.2\n\t\t\t\t\t\t\tc-2.1-1.4-3-3.8-4.4-5.7c-1.6-2.2-2.9-4.7-5.9-5.4c-1.4-0.8-2.1-2-2.2-3.6c1.1-2.8,3-2,4.8-0.8c2.4,1.6,3.9,3.9,5.2,6.4\n\t\t\t\t\t\t\tc-4.2-7.9-8-15.9-12.4-23.6c-0.6-1-1.2-2.1-1.1-3.3c0.3-3.9-1.8,1-2.1-0.6c-2.2-1.5-2.3-3.8-2.4-6.1c0.2-0.8,0.6-1.3,1.4-1.6\n\t\t\t\t\t\t\tc6.3,0.6,6.2,6.1,7.9,9.9c-0.3-2.3-2.4-4.7-1-7.5c1.2-2.1,4.6,2.1,5.4-2.1c0.8-4-2.1-3.3-4-4.1c-1.9-0.8-1.8-2.1-0.5-3.5\n\t\t\t\t\t\t\tc0.9-1,2.4-1,3.4-1.9c-1.1-2.5-5.8,1-5.5-3.2c0.2-2.7,2.3-3.3,4.9-3.3c-0.5-2.5-4.4-2.3-4.1-5.2c0.2-1.3,0.3-2.6,0.2-3.9\n\t\t\t\t\t\t\tc1.3-2.2-2-6,2.5-6.9c-0.9-2.4-6.1-0.5-4.3-4.3c0.8-1.8,2.8-3.4,3.6-5.4c-3.5,0.5-5-1.8-4.2-5.1c0.8-3.4,0.7-6.8,1.4-10.2\n\t\t\t\t\t\t\tc0.2-1.1-0.1-2.7,1.1-3.1c5.6-2.1,3.8-6,2.6-9.8c-0.8-4.8,1.8-8.1,4.8-11.2c2.4-3,5.4-5.6,5-10.1c-0.1-1.4,1.1-3.1,2.3-4.2\n\t\t\t\t\t\t\tc2-1.7,2.3-3.8,2-6.2c-0.3-4.8,1.2-9.1,3.3-11.7c-1.9,4.5-6.1,9.6-8.1,15.7c-4,1.2-5.4,0.2-4.6-3.5\n\t\t\t\t\t\t\tC270,525.4,270.3,524.1,271,522.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2A2525",
                    d:
                      "M437,724c7-3.9,14.9-5.5,22-9.3c4.4-2.3,8.3-5.4,13.1-7.5c1.3-0.1-1.9,4.9,1.6,2\n\t\t\t\t\t\t\tc5.1-4.2,11.2-7.2,14.2-13.9c1.4-3.2,5.5-5.1,8.6-7.8c0.8,1.6-1.2,2.3-1,4c1.9-1.7,6,0.5,5.6-4.5c-0.1-0.7,2.8-1.7,4.8-2.8\n\t\t\t\t\t\t\tc0,5.4-4.6,7.5-6.6,11c-0.3,0.5-1.5,0.8-1.6,0.1c-0.2-0.8,0.4-1.8,0.7-2.8c-1.5-0.4-2.5,0.9-2.6,1.7\n\t\t\t\t\t\t\tc-0.6,6.8-4.6,10.4-10.4,13.3c-1.2,0.6-2.9,3.9-4.9,5c-6.3,3.3-11.6,7.9-17.4,11.9c-1.1,0.8-3.7,0.3-3.1,2.3\n\t\t\t\t\t\t\tc0.7,2.2,2.8,0.5,4.3,0.5c1.2,1.9-1.9,1.8-1.1,3.8c3.6-0.8,6.3-3.7,9.4-5.4c2.6-1.4,7.1-2.1,6.4-7.1c-0.1-0.9,1.3-1.2,2.1-1.8\n\t\t\t\t\t\t\tc5.5-3.7,10.8-7.5,16.2-11.3c0.4-0.3,0.9-0.5,1.2-0.9c1.8-1.6,1-4.2,2-6c0.7-1.3,3.5,1.2,4.7-1.6c0.8-1.9,2.6-3.4,3.9-5.1\n\t\t\t\t\t\t\tc1.8,0.8,2.1,2.3,2,4.1c-0.8,2.5-0.3,5.2-1.5,7.6c-0.6,0.7-1.2,0.6-1.9,0c-1.5-1.9-2.7-1.3-3.8,0.5\n\t\t\t\t\t\t\tc-4.6,7.2-11.6,12.5-15.8,20c0,0.3-0.1,0.6-0.3,0.7c-7.9,3.6-15,8.6-22.7,12.5c-3-1.4-4.9,0.8-7.4,1.7c-4.1,1.4-8,3-11.9,4.8\n\t\t\t\t\t\t\tc-2,0.9-3.8,2-5.7,3.1c-5.4,2.1-11.2,3.1-16.9,3.3c-16.7,0.5-33.4,1.1-50.1-1.2c-1.6-1.4-3.7,0-5.3-1c-1.3,0-2.7,0.2-3.9-0.6\n\t\t\t\t\t\t\tc0-1.8-3.5-0.1-2.8-2.5c0.6-1.9,2.4-1.4,3.9-1.2c0.8,0.1,1.5,0.6,2.4,0.3c-2.8-2.4-8.1,1.2-9.7-3.9c1.6-2.3,1.7-2.4,3.6-1\n\t\t\t\t\t\t\tc0.6,0.4,1.1,0.3,1.7,0.4c9.8,0.3,19,4.5,27.5,4c-3.1,0.1-7.6-0.2-11.1-3.6c-0.7-0.7-1.8-0.9-2.8-1.1\n\t\t\t\t\t\t\tc-21.6-4.5-41.1-13.5-58.3-27.3c-12.5-10-24.1-20.8-32-35.6c-0.4,2-0.5,4-2.1,5.2c-3.7-1.7-6.2-4.8-9.1-7.5\n\t\t\t\t\t\t\tc-0.7-0.7-0.8-1.8,0-2.7c2.2,0.1,5.7,2.9,4.3-3.2c-1.3-5.8-1.7-12,0.2-18c0.2-0.6,0.1-1.4-0.1-1.9c-4.6-9.3-5.2-19.7-7.4-29.6\n\t\t\t\t\t\t\tc-1.4-6.3-0.2-12.4-0.5-18.5c-0.4-7.2,0.4-14.1,1.3-21.1c0.4-3,1.1-6.1,2.1-8.7c2.4-6.1,4.4-12.1,5.2-18.6\n\t\t\t\t\t\t\tc0.3-2,1.2-4,3.2-4.8c3.2-1.2,3.2-4.7,5.7-7.6c-1.2,6.4-3.6,11.2-5.8,16.1c-2.3,5.2-4.6,10.3-5.4,15.9\n\t\t\t\t\t\t\tc-0.6,4.2-2.8,7.8-3.8,11.8c-0.7,2.6,0,4.5,0.4,6.5c1.3,7.2-0.4,14.5,0.5,21.7c2.1,17,5.8,33.3,14.4,48.5\n\t\t\t\t\t\t\tc5.8,10.2,12.1,19.8,19.6,28.7c-0.4,2.4,1.7,3.3,3,4.4c3.3,2.9,6.6,5.8,10,8.5c1.5,0.8,3.3,1.2,4,3c3.3,2.4,6.6,4.8,10,7l0,0\n\t\t\t\t\t\t\tc13,8.3,27.1,13.4,42.2,16.1c3.5,0.6,8.5-0.1,8.5,6c0,1.1-1,1.9-0.9,3.1c1.5-1.3,1.5-3.1,1.5-4.9c0.6-2.4,2.6-2.3,4.4-2.3\n\t\t\t\t\t\t\tc7.3,0,14.6,0.4,21.8-0.2C421.5,728.2,429.5,727.3,437,724z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2B2726",
                    d:
                      "M510,696c0.2-1.5-0.3-2.8-1-4c3.3-3.9,5.8-8.3,6.7-13.4c0.2-1.3,0.7-2.6-1.5-1.4\n\t\t\t\t\t\t\tc-1.7,0.9-2.5-0.7-2.8-1.9c-0.4-1.2,0.5-1.8,1.8-1.7c0.3,0,0.7,0,1,0c-2.1-6.4,7.3-11.1,4-15.6c-2.8-3.9-0.9-6.2,0.3-7.3\n\t\t\t\t\t\t\tc6.5-5.9,4.8-14.1,6.6-21.2c1.7-6.7,0.4-13.6,1-20.4c0.3-3.1-0.2-6.2,1.8-9c1-1.4-0.2-3.1-0.3-4.6c-0.3-7.5-2.5-14.6-3.4-21.9\n\t\t\t\t\t\t\tc-0.4-3.5-1.6-6.7-2.8-10c-1.4-3.8-1.4-7.4,1.7-10.5c0.5-1.2,1.3-2.1,2.5-2.6c2.1-0.5,3.7,0.3,4.7,2c1.9,3.3,4.4,6.3,4.7,10.3\n\t\t\t\t\t\t\tc-0.1,0.5-0.3,0.9-0.5,1.4c-5.2-0.1-3.9-5.4-6.1-7.3c1.5,2.8,2.2,6.5,5.6,8.6c1.3,0.8,2,2.4,1.5,3.9c-0.6,1.9-2.4,0.2-3.8,1\n\t\t\t\t\t\t\tc3.7,3.5,3.3,8.4,4.3,12.8c-0.4-1.4-1.4-3.1,0.6-3.8c1.4-0.5,2.1,1.2,2.8,2.3c1,1.6,1,3.5,0.9,5.3c0,0.7-0.1,1.4-0.2,2.1\n\t\t\t\t\t\t\tc0.7,3.2,0,6.9,3.7,9.1c1.9,1.1-0.3,3.1,0.4,4.5c0.5,1.2,1.5,2.3,1.4,3.7c-0.8,2.8,0.9,6-1,8.7c-0.3,0.5-2.2,0.4-0.6,1.7\n\t\t\t\t\t\t\tc0.8,0.7,1.7,1.4,1.4,2.7c0,3.4-1.7,6.7-0.2,9.9c0.2-3.1,0.7-6.4,0.4-9.7c0.2-0.7,0.4-1.3,0.7-2c0.9-1.7,0.4-3.8,1.5-5.4\n\t\t\t\t\t\t\tc1.2-0.9,1.7-0.1,2.2,0.8c0,2.6,0.1,5.2,0.1,7.8c-1.3,2.6,0.6,5.6-1.1,8.2l0.1-0.1c-0.4,3.7-0.9,7.4-1.9,11\n\t\t\t\t\t\t\tc-1,1-1.1,3.8-2.5,3c-3-1.7-0.7-4.7-0.9-7.4c-1,2.5-0.3,5.4-2.1,7.5c-0.3,0.9-4.1-1.2-1.6,1.9c0.6,0.8,0.9,1.7,0.8,2.8\n\t\t\t\t\t\t\tc-0.2,5.3-2.9,10.2-2.3,15.5l0,0c-0.7,2.3-4.3,1-4.6,3.8c-0.3,0.6-0.7,1.2-1,1.8c-1.6,2.2-1.3,4.7-1.6,7.2\n\t\t\t\t\t\t\tc-0.1,0.7-0.3,1.4-0.7,1.9c-6.1-1.9-6.2,3.1-7.5,6.6c-0.2,0.4-0.5,0.8-0.8,1.1c-2.1,1.9-3.7,4.5-6.9,4.5\n\t\t\t\t\t\t\tc-0.5,0.1-0.3-0.9-0.9-0.6c0.3,0.4,0.9,0.4,1.2,0.9c0.4,1.7-0.3,2.9-1.6,3.9C512.3,694.4,511.7,696.4,510,696z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#181413",
                    d:
                      "M534,564c0-0.3,0-0.7,0-1c1.4-1.6,3.1,0.3,4.6-0.5c0.5-2.9-1.1-4.7-3.3-6.1c-1.2-0.8-2.4-1.8-1.2-3.6\n\t\t\t\t\t\t\tc2.4-3.5,1.2-6.2-3.2-8c-2.5-1-5.7-0.7-7.4-3.4c-0.5-2.2,0.5-3.1,2.7-3c1.6,0.1,3.2,0.5,5.2,0.9c-1.6-2.7-2.9-4.9-6.3-5.5\n\t\t\t\t\t\t\tc-2.3-0.4-3.4-3.4-4.9-5.3c-1-1.3-2.1-2.6-1.8-4.5c1.1-2.3,2.5-1.6,3.9-0.4c1.1,1,1.4,2.5,2.4,3.6c-1.5-4.4-4.7-6.1-9-6\n\t\t\t\t\t\t\tc-2.1-0.2-3.9-0.9-4.8-2.9c0.4-3.5,3.7-1.7,5.7-3c-2.1-4-5.1-6.2-9.8-5.7c-1.6-0.5-2.4-1.6-2.4-3.3c0.1-1.7,1.8-1.7,2.6-2.5\n\t\t\t\t\t\t\tc-3.4-5.1-8.5-5.9-14-5.7c-1-0.2-1.9-0.6-2.3-1.6c-0.1-0.8,0.1-1.4,0.6-2c1.3-1.9,3.2-1.8,4.7-1.4c-2.8-4.2-7.3-5.1-12.2-4.9\n\t\t\t\t\t\t\tc-2.1-0.5-3.7-1.5-4.1-3.7c0.5-2.6,2.2-1.7,3.6-1.3c-3.8-5.4-9.9-3.6-15.3-4.2c-0.4-0.2-0.8-0.5-1.1-0.9\n\t\t\t\t\t\t\tc-0.3-3.4,2-3.6,4.5-3.4c-4.9-2.3-9.7-5.2-15.4-3.5c-7-3.5-14.8-4.4-22.2-6.5c-6-1.7-12.2-3.4-18.3-5\n\t\t\t\t\t\t\tc-5.4-1.4-10.8-2-16.3-0.5c-2,0.5-4,1-5.9-1.1c-1.4-1.5-3.8-0.4-5.8-0.3c-0.4,0.1-0.9,0.2-1.3,0.3c-2.4,0-4.9-0.1-7.2,0.9\n\t\t\t\t\t\t\tc-5.1,0.3-9.9,2.4-14.9,3.2c-4.3-0.4-8.5,0-12.4,2c-7.1,2.4-13.5,6.2-20.4,9c-2.1-2.3-0.7-4.7,2.9-6\n\t\t\t\t\t\t\tc9.4-3.5,18.7-7.4,28.1-11.1c7.4-2.6,15.2-3.4,22.9-4c70.8-5,126.9,32.3,152.8,89.3c1.8,3.9,3.3,7.9,5,11.9\n\t\t\t\t\t\t\tc3.3,8.1,5.4,16.4,6.2,25.1l-0.1-0.1c1.5,2.2,0.3,4.6,0.7,6.9c-0.1,1.6,0.2,3.3-0.6,5.9c-3.1-4.1-5.2-7.6-4.8-12.4\n\t\t\t\t\t\t\tc0.3-3.6,0.4-7.4-3.7-9.4C537.9,567.9,534.1,568.1,534,564z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272222",
                    d:
                      "M263,606c0.3,0.7,0.7,2.2,0.9,2.1c4.4-0.5,3.3,3.3,5,5.5c-5.5-0.9-5.5-0.9-6.5,2.4\n\t\t\t\t\t\t\tc2,0.9,4.7-2.1,6,0.6c2.3,4.8-4.7,2.4-4.9,5.5c1.2,1.3,2.6,0.6,3.8,0.8c1,0.1,2.1,0,2.4,1.2c0.6,2.1-0.9,4.4,0.2,6.5\n\t\t\t\t\t\t\tc-2.1,0.6-4.1,0.9-6-0.6c-0.2-0.2-0.6-0.1-1-0.2c-4.2-5.8-5.9-12.6-7.1-18.5c-0.8,4.1,3.2,8.3,2.4,13.4\n\t\t\t\t\t\t\tc-0.3,1.7-0.6,2.8-2.3,3.1c-0.3,0.4-0.7,0.7-1,1.1c-0.9,4.6,3,8,3.1,12.3c-0.3,1.2-0.1,2.9-2.1,2.7c-3.7-9.5-5-19.6-5.8-29.6\n\t\t\t\t\t\t\tc-0.7-8.7-0.1-17.6,0-26.4c3.4,1,1.2,3.9,1.9,5.3c1.7-3.8-2.2-7.5-1.2-11.7c1-13.8,4-27.2,9.9-39.8c2.6-2,3.4-4.8,3.4-7.9\n\t\t\t\t\t\t\tc0.8-1.8,1.3-3.7,2.7-5.1c1.5-1.4,2.7-3,3.1-5.1c0.4-0.3,0.7-0.6,1.1-0.9c0,1.3,0.3,2.7-0.1,3.8c-1.1,3.3,0.5,3.8,3.1,3.3\n\t\t\t\t\t\t\tc0.8,2.7,0.8,2.7-0.7,4.9c2.1-0.4,1.5-2.5,2.3-3.6c1.3-1.9,1.2-5,4.4-5.3c0.9,2.7,0.5,4.8-1.7,7.1c-1.4,1.5-3.5,3.1-2.1,6.7\n\t\t\t\t\t\t\tc1,2.6-3.6,4.5-5.2,7.2c-2.3,0.6-4,0.3-3.5-2.7c0.2-1.5,0.6-2.9,0.7-4.2c-1.4,5.8-3.2,11.7-2.1,17.9c2.8,5.1,2.2,7-2.3,10.1\n\t\t\t\t\t\t\tc-1.8,1.2-0.7,3.9-1.5,5.7c1.7,0.5,0.7,1.2,0.4,2.2c-2.8,7.9-2.7,7.9,5,9.9c-5-0.6-1.8,7-7.6,5.4c1.8,2.3,3.5,1.4,4.8,2\n\t\t\t\t\t\t\tc1.6,0.7,2,2,1.8,3.1c-0.3,2.2-1.3-0.2-2,0c-1.6,0.5-1.8,1.5-0.8,2.6c1.6,1.8-0.4,2.6-0.8,3.9c-2.5-1.1-3.6-3.4-4.7-6.2\n\t\t\t\t\t\t\tc-1.2,5.3,1.4,9.8,1.6,14.5c1.3-2.1-2-4.9,0.9-6.7C261.7,604.1,262.5,605,263,606z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312C2A",
                    d:
                      "M275,671c0,1.7,1,2.9,2.3,3.6c2.9,1.5,4.9,3.8,6.7,6.4c4.4,3.2,7.1,8,10.7,11.9c2.3,2.6,0.1,4-2.6,4.5\n\t\t\t\t\t\t\tc-1.1-0.1-1.6-0.9-1.6-1.9c-3.2-4.2-5.7-9.3-12-9.6c-0.8,0.3-1.7,0.7-2.6,0.2l0,0c-0.4-4.6-2.9-8.1-5.2-11.9\n\t\t\t\t\t\t\tc-0.9-1.6-1.7-1.4-3-1c-1-0.4-0.8-1.3-0.8-2.1c-1.1-1.7,1.2-3.1,0.3-4.8c0.2-1.8-0.3-3.2-2-4c-0.7-0.7-1.1-1.4-0.3-2.2\n\t\t\t\t\t\t\tc4.3-0.4,4.9,3.8,7,6C273.2,667.4,274,669.3,275,671z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221D1B",
                    d:
                      "M541,568c4.8,1.6,4.6,6,4.3,9.5c-0.4,4.5,1.6,7.9,3.4,12.2c0.2-1.8,0.3-3,0.4-4.1\n\t\t\t\t\t\t\tc0.4,0,0.6,0.2,0.8,0.5c0,8.9-0.1,17.9-0.1,26.8c-0.6-0.3-1.2-0.7-1.8-1c-1.6-1.7-2.4-3.8-3-6c-0.7-1-1.3-2-2-3\n\t\t\t\t\t\t\tc4.2-3.7,3.8-6.3-1.1-9.8c-1.5-1-3.1-1.9-2.9-4.2c0-0.7,0-1.4,0-2c1.7-0.7,2.7,0.8,4.4,1.2C542.1,581.4,539.6,574.9,541,568z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#363231",
                    d:
                      "M291,695c0,0.8,0.2,1.6,1,2c5.8,1,8.7,6.1,12.9,9.3c2,1.6,4.5,2.8,6.2,4.8c0.6,0.7,1.4,1.6,0.8,2.6\n\t\t\t\t\t\t\tc-0.6,1.1-1.7,0.7-2.7,0.5c-2.2-0.6-4.4-2-6.4,0.2c-0.7,0.2-1.4,0-2-0.2c-0.5-0.5-1.1-1-1.6-1.5c-2.5-5.7-6.7-9.8-12.2-12.7\n\t\t\t\t\t\t\tc-1.5-1.5-3.7-2.5-4-5c0.1-0.1,0.3-0.3,0.4-0.4c1.7-1.2-0.3-1.6-0.6-2.4c-0.5-1.5-2.8-2.5-1.5-4.6c2.3-1,3.8,0.3,5,1.9\n\t\t\t\t\t\t\tC287.6,691.5,289.9,692.7,291,695z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#302B29",
                    d:
                      "M255.9,644c1.2-0.7,1-1.9,1.1-3c1.6-2-2.2-4,0-6c0.5-0.7,0.9-1.3,1.4-2.1\n\t\t\t\t\t\t\tc5.4,10.7,10.9,21.4,16.7,32.9c-4-2.1-4.9-5.9-7.7-7.9c-1.4-1-2.5-3.1-4.5-0.9c-3.3-1.8-2.5-5.6-4.1-8.2\n\t\t\t\t\t\t\tc-0.8-1.4-0.2-3.8-2.9-3.8C256,644.7,256,644.3,255.9,644z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#373230",
                    d:
                      "M358,740c1.5,3,4.3,2.1,6.6,1.9c3.1-0.3,4.4,0.9,4.6,3.9c-2.4-0.5-4.7-0.9-7.1-1.3\n\t\t\t\t\t\t\tc-0.7,2.1,2.2,1.4,1.8,3c-4.7-1.2-9.5-2.2-13.9-4.5c-2.6-0.9-4.8-2.4-7.2-3.8c-1.3-0.8-3-1.7-1.4-3.7\n\t\t\t\t\t\t\tC347.4,735.1,352.7,737.7,358,740z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3B3634",
                    d:
                      "M488.1,724.2c0.9-5.6,5.1-9.2,8.6-13.1c2.5-2.7,5.3-5.2,6.6-8.5c0.9-2.2,2.8-0.9,3.9-2\n\t\t\t\t\t\t\tc0.4-0.4,0.6,1.5,0.8,2.4c-0.5,2.5-1.7,4.5-3.6,6.1c-1.6,1.4-3.2,2.8-3.5,5c-0.2,0.6-0.4,1.3-1,1.7\n\t\t\t\t\t\t\tC496.1,718.9,492.6,722.3,488.1,724.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#403B38",
                    d:
                      "M440,747c4.5-4.7,10-7.4,16.4-8.3c0.9-0.1,1.9-0.1,2.1-0.8c1.6-5.4,4.2-1.7,6.5-0.8\n\t\t\t\t\t\t\tc0.5,0.4,0.6,0.8,0.1,1.2C457.1,742.1,448.9,745.5,440,747z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#56504D",
                    d:
                      "M256.1,645c1.3,0.6,3.2-0.3,3.5,2.6c0.4,3.2,2.2,6.3,3.4,9.5c0.7,1,1.3,2,2,3c0.3,0.7,0.7,1.3,1,2\n\t\t\t\t\t\t\tc1.2,1,1.9,2.4,2,4c1,2-0.6,3.4-1,5.1c-3.5-5.7-5.4-12.1-7.9-18.3C258.1,650.2,257.1,647.6,256.1,645z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#514A4A",
                    d:
                      "M465.1,738.2c0-0.4,0-0.8-0.1-1.2c5.3-5.6,13.3-6.9,19-12c1.2-1.1,2.5-0.2,3.8-0.1\n\t\t\t\t\t\t\tC480.8,730.4,473.2,734.8,465.1,738.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#5D5756",
                    d:
                      "M286.9,700.1c2.7-0.5,4.9,0.5,6.3,2.8c1.4,2.1,3.1,3.9,5.2,5.2c2.4,1.5,1.7,2.9,0.7,4.7\n\t\t\t\t\t\t\tC294.4,709.1,290.1,705.1,286.9,700.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4D4844",
                    d:
                      "M538.2,663.2c-1.7-2.9-1.9-6-0.3-8.8c1.4-2.4,0.1-5.3,2.1-7.4c1.8-0.4,1.9,1.3,2.7,2.1\n\t\t\t\t\t\t\tc0.2,0.4,0.4,0.8,0.5,1.2C542.2,654.8,540.7,659.2,538.2,663.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#46413E",
                    d:
                      "M540.9,643c0.5-3.5,1.1-6.9,1.7-10.8c4.5,2.8,0.4,6.7,1.6,9.8c0.6-0.7,1.2-1.4,1.8-2\n\t\t\t\t\t\t\tc0.6,1.4,0.9,2.7-0.3,3.9c-0.8,2.1-1.7,4.2-2.5,6.4c-0.2-0.2-0.3-0.4-0.5-0.6C542.2,647.4,539.6,645.8,540.9,643z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#56504D",
                    d:
                      "M267.8,673.1c1-0.1,1.1-2.2,2.7-1.1c3,2.1,6.3,10.6,5.4,14C272.5,682.2,270,677.8,267.8,673.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#5B5554",
                    d:
                      "M333,736c-6.6-2.7-12.6-6.3-18.2-10.7c0.2-0.4,0.6-0.7,1.1-0.8c7.3,0.4,12.6,4.2,17.2,9.6\n\t\t\t\t\t\t\tc0.1,0.2,0.2,0.4,0.3,0.7C333.4,735.1,333.3,735.6,333,736z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#5F5958",
                    d:
                      "M300.7,714.2c0.8-0.1,1.5-0.2,2.3-0.3c0.4-0.3,0.8-0.4,1.3-0.3c3.8,1.1,6.4,4,9.4,6.3\n\t\t\t\t\t\t\tc1.5,1.2,2.3,2.8,1.5,4.8c-0.1,0.2-0.3,0.3-0.5,0.4C309.6,722.2,304.8,718.6,300.7,714.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4B4543",
                    d:
                      "M333,736c0-0.3,0-0.6,0-1c2.8-1.1,5.6-1.7,8,1c2,3.6,6.5,4,9,7C344,741.6,338.4,738.9,333,736z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#544E4B",
                    d:
                      "M521,693.1c-2.4,3.9-5.6,7.1-8.9,10.1c-0.7-0.5-0.9-1.2-1-1.9c0-0.5,0-1,0.2-1.5\n\t\t\t\t\t\t\tc1.6-2.4,3.7-4.5,5.1-7.1c1.2-2.1,2.8-2.7,4.8-1C521.5,692.2,521.4,692.7,521,693.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3935",
                    d:
                      "M508,703c0.3,0.3,0.7,0.7,1,1c1.5-0.5,0.6-3.3,2.9-3c0.1,0.7,0.1,1.5,0.2,2.2c-0.5,1.7-1.7,2.8-3,3.9\n\t\t\t\t\t\t\tc-3.6,1.6-4.9,6.2-9.1,7"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3937",
                    d:
                      "M250.9,581.7c-0.1,2.7,2,4.6,2.5,7.2c0.4,2.6-1,4.7-0.1,7.9c-3.9-2.7-0.8-6.6-3.1-8.8\n\t\t\t\t\t\t\tC250,585.9,249.6,583.7,250.9,581.7z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#534D49",
                    d:
                      "M529.8,677.9c0.1-0.6,0.2-1.3,0.3-1.9c0.7-2.7,0.4-5.6,1.9-8c0.3-0.3,0.6-0.7,1-1\n\t\t\t\t\t\t\tc1.3-0.4,1.7,1.9,3.2,1.1c-1.6,3.9-3.4,7.7-5.9,11.1c-0.2-0.1-0.3-0.2-0.5-0.3C529.5,678.5,529.6,678.2,529.8,677.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#534D49",
                    d:
                      "M530.2,679.2c-0.3,0.6-0.7,1.3-1,1.9c-1.6,1.4-2.5,3.3-3.8,5c-0.9,1.2-1.7,3-3.8,1.7\n\t\t\t\t\t\t\tc-0.5-1-0.4-1.9,0.4-2.8v0c1-1.7,2.3-3.1,3-5.1c0.9-2.4,2.7-2.7,4.7-1.2C529.9,678.9,530,679,530.2,679.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#56504D",
                    d:
                      "M275.9,686.1c0.7-0.3,1.4-0.7,2-1c1.6,0.4,2.2,1.7,2.5,3.2c0.4,2.4,4.6,3.4,2.6,6.8l-0.2,0\n\t\t\t\t\t\t\tC279.3,693,277.7,689.5,275.9,686.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#7A7471",
                    d:
                      "M522.1,688.1c3.2-1.5,3.7-5.7,7.1-7c-2,4.5-4.8,8.4-8.1,12c-0.1-0.4-0.1-0.8-0.2-1.1\n\t\t\t\t\t\t\tC520.4,690.4,520.8,689.1,522.1,688.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4D4844",
                    d:
                      "M536.1,668c-1.5,1-2.3-0.4-3.2-1.1c-0.8-4.8,3.2-3,5.3-3.8C538.1,665,537.3,666.6,536.1,668z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#453E3D",
                    d:
                      "M264.1,534c1.5,3.8,0.9,6.6-3.4,7.9C261.9,539.3,263,536.6,264.1,534z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#504A47",
                    d:
                      "M277.9,511.8c-0.3,3.4-2,5.8-5.1,7.1C274.1,516.2,275.6,513.7,277.9,511.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#494342",
                    d:
                      "M269.9,523.8c0.4,2.6-0.7,4.2-3.1,5.1C267.6,527.1,268.4,525.2,269.9,523.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#373230",
                    d:
                      "M367.7,748.1c1.8,0,3.8-0.8,5.3,1C371.2,749.3,369.4,748.9,367.7,748.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M524,547c-4.9,0.6-3.8,6.3-7.8,8.6c-7.6-20-22.4-34.9-38.2-47.8c-16.2-13.1-35.2-22.8-56.8-26\n\t\t\t\t\t\t\tc0.7-2.1,2.8-2.2,2.9-4.3c0-1,2.7-0.7,4-0.3c1.3,0.4,2.9,1.1,2,3.2c-1,2.4,1.6,2,2.2,2c2.2,0,0.2-1.1,0.3-1.7\n\t\t\t\t\t\t\tc0-0.4,0.2-0.9,0.3-1.3c1.3,0.3,3.5,0.4,3.6,0.9c1,4.4,2.6,6.1,6.6,2.5c0.3-0.2,1.9,1,2.9,1.6c0.7,0.4,1.4,0.9,2,1.4\n\t\t\t\t\t\t\tc1.4,1,3.5,2.7,4.6,1c1.2-1.8-1.7-2.3-2.7-3.4c-0.6-0.7-2.1-0.2-2.3-1.7c2.5-3.2,4.9-1.1,7.3,0.1c1.9,1,3.6,3.4,5.9,0.5\n\t\t\t\t\t\t\tc0.4-0.5,1.2-0.6,1.5,0.8c0.9,3.8,1.5,3.9,4.5,2.2c1.3-0.7,2.3,0,3.2,0.7c1.1,0.9,2.9,2.8,2,3.4c-3.4,2.4-0.5,2.9,0.9,3.3\n\t\t\t\t\t\t\tc3.1,0.9,4.9,3.3,6.9,5.4c1.6,1.7,2.1,1.9,3.7-0.4c1.3-1.8,3.3,2.7,3.5-0.8c5.9,2.5,9.5,7.6,13.5,12.3\n\t\t\t\t\t\t\tc1.3,1.3,2.3,2.9,3.4,4.3c3.5,3.1,5.7,7.1,8,11.1c1.2,3.6,2.6,7.1,2.8,11.3c1-2,2.1-3,3.8-1.2\n\t\t\t\t\t\t\tC520.7,538.7,524.1,542.1,524,547z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2A29",
                    d:
                      "M467,478c0.3,0,0.7,0,1,0c4.5,1,9.1,1.8,12,6c0.9,1.6,2,2.9,4,3c2.3,1.3,4.5,2.7,6.6,4.4\n\t\t\t\t\t\t\tc1.1,0.9,2.6,1.8,1.4,3.6c-0.3,0.3-0.7,0.7-1,1c-1.6,1.4-2.9,0.5-4.2-0.6c-1.4-1.2-2.7-2.6-4.8-2.4\n\t\t\t\t\t\t\tc-10.5-9.3-23.1-15.3-35.2-22.1c-6.1-3.4-14-3.6-20.7-6c-9.7-3.4-19.7-2.6-29.6-3.9c-4.3-0.6-8.5,1.6-12.8,1\n\t\t\t\t\t\t\tc-1.6-0.2-3.4,0.5-4.7-1c0.8-3.9,5.3-1.5,7-4c4.4-1.6,4.9-1.5,8.6,1.1c0.4,0.3,1.3,0.1,1.9-0.1c10.2-3.5,20.1,0,29.6,2.5\n\t\t\t\t\t\t\tc7.5,2,15.1,3.6,22.5,5.7c2.8,0.8,4.5,3.4,7.4,3.8C460.9,471,465.4,472.4,467,478z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M374,476c0-0.2,0-0.3,0-0.5c0.8-2.4-3.1-2.5-2.4-4.9c3.3,1.2,5.6-1.8,8.6-2.3c5.3-0.9,10.6,0,16-0.8\n\t\t\t\t\t\t\tc6.3-0.9,13.2,0.2,19.5,1.8c5.7,1.5,11.7,1.6,17.2,3.8c4,1.6,8.1,2.9,12.1,4.5c0.9,0.3,2.1,0.8,1.4,2.1\n\t\t\t\t\t\t\tc-0.6,1.1-1.4,0.5-2.4,0.4c-8.9-1.2-16.9-5.5-25.8-6.7c-4.8-0.7-9.4-1.3-14.3-1.4c-3.1-0.1-4.3,1.1-3.9,4.1\n\t\t\t\t\t\t\tc-2.6,0.7-5.1,0.8-7.2-1.3c-0.3-1.9,2.2-1.5,2.6-2.7c-1.4,0.8-2.9,1.5-4.2,2.7c-4.4,1.7-9,1.6-13.6,2.3\n\t\t\t\t\t\t\tC376.3,477.3,375,477.1,374,476z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#322F2E",
                    d:
                      "M331,473c5.6-5.5,13.2-7,20-10c1.4-0.7,2.7-0.8,4.2,0.2c-1.4,3.2-4.8,3.6-7.2,5.2\n\t\t\t\t\t\t\tc-1.6,0.6-2.9,2.4-5,1.6c-9.8,7.2-21.1,12.2-30.6,19.9c-6.2,5-11.7,10.6-17.2,16.1c-4.1,4.1-7.6,8.9-11.8,13.2\n\t\t\t\t\t\t\tc4.4-6.1,3.8-14.6,10.4-19.5c1.9-1.4,1.7-1.6,5-1.2c1.3,0.2,1.5-1.1,2.1-1.8c5.5-7.9,12.4-14.4,20.9-19\n\t\t\t\t\t\t\tc0.5-0.3,1.1-1.6,1.8-0.4c0.2,0.4-0.4,1.2-0.6,1.8c-0.9,0.6-1.8,1.2-2.6,2c0.8-0.8,1.7-1.4,2.6-2\n\t\t\t\t\t\t\tC326.4,477.9,329.1,476,331,473z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2929",
                    d:
                      "M374,476c4.9-0.8,10-0.1,14.7-2.4c0.8-0.4,2.2,0.3,3.3,0.4c0.3-0.3,0.7-0.3,1,0c2,2,5,0.2,7,2\n\t\t\t\t\t\t\tc0.8,2.1,0.1,2.8-2,2c-10.9-0.2-21.6,0.9-32.2,3.7c-10.4,2.7-20.6,5.7-30,11.1c3.9-1.5,4.4-8.8,10.5-6.2\n\t\t\t\t\t\t\tc0.2,0.1,1.1-0.5,1.1-0.8c0.9-5.2,5.8-4.6,9.1-5.7c5.1-1.6,10-4.7,15.8-3.2C372.8,477,373.4,476.3,374,476z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2E",
                    d:
                      "M386,734c-0.2-5.3-4.5-5.2-8-5.9c-13.8-2.8-27.1-6.8-39.3-14.2c-1.2-0.7-2.1-1.6-2.7-2.8\n\t\t\t\t\t\t\tc8.2,3.6,16.2,7.8,24.6,10.6c23.6,7.9,47.7,8.7,72,3c1.4-0.3,2.9-0.5,4.4-0.7c-2.3,2.3-10.6,4.6-15.5,5.1\n\t\t\t\t\t\t\tc-10,1-20.1,0.9-30.1,0.9c-2.2,0-3.6,0.5-3.4,3C387.6,733.8,387.1,734.5,386,734z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#332E2C",
                    d:
                      "M524,547c-2-4-4-8-6-12c0.1-2,1.2-1.1,1.9-0.6c2.2,1.6,2.9,4.3,4.1,6.6c1.9,1.8,4.5,1.8,6.8,2.4\n\t\t\t\t\t\t\tc2.7,0.7,4.6,2.2,5.8,4.8c1.3,2.8,3,5.5-4.1,5.2c5.5,2.7,9.1,5.4,7.1,10.1c-0.9,2.1-3.7-0.7-5.7-0.5\n\t\t\t\t\t\t\tc-0.6-3.8-3.4-6.6-4.8-10.1c-0.7-1.6-2.4-2.1-4.2-1.9c-1.4-0.7-1.9-1.6-1-3C524,547.7,524,547.3,524,547z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#332F2F",
                    d:
                      "M343,470c1.3-0.7,2.7-1.3,4-2c3.2-1.3,6.5-2.5,9.1-4.7c2.3-1.9,5.3-1.4,7.9-2.3c4.9-1.3,9.6-3.7,15-3\n\t\t\t\t\t\t\tc2.2-1.3,4.8,0.3,7-1l0,0c2.2,0.6,1.5,1.4,0,1.8c-2.3,0.7-4.9,0.7-7,2.2c-11.1,3.4-22.8,4.9-33.3,10.1\n\t\t\t\t\t\t\tC344.3,471.8,343.6,471.2,343,470z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#363230",
                    d:
                      "M482,493c2.1-1.7,3.3,0.2,4.6,1.2c1.3,1.1,2.6,2,4.4,1.8c0.4,0.8,1.2,1,2,1c5.9,0.5,8.9,4.8,12,9\n\t\t\t\t\t\t\tc0,1.4,0.7,2.4,2,3c0.6,0.3-0.1-0.1,0.4,0.2c2.5,1.5,6.3,3.6,4.4,6.4c-2,2.9-4.1-1.4-6.3-2.4c-1.8-0.9-2.8-2.7-4.7-3.5\n\t\t\t\t\t\t\tc-0.3,0.1-0.6,0.3-0.9,0.4c-4.3-4.3-8.7-8.7-13-13C485.3,495.7,483.7,494.3,482,493z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2E2928",
                    d:
                      "M256,628c2.4-2.5,1.3-6.1,0.5-8c-1.8-4.4-1.5-8.6-0.8-13.1c1.5,8,4.7,15.5,7.3,23.1c0.6,3,1.2,6,2,9.5\n\t\t\t\t\t\t\tC260.8,636.1,261.7,629.5,256,628z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M398,478c1.3,0,2-0.7,2-2c3.6,0.9,5.9-3.4,9.8-2.1c2.8,1,5.9,0.8,8.8,1.5c1.1,0.3,3.2,0.1,2.9,1.9\n\t\t\t\t\t\t\tc-0.3,1.6-2,3.6-3.4,3.2c-3-1-6.4,0.5-9.1-1.5c-1.8-1.4-1.8-1.4-4.7-1.4c1.3,0.3,3.3-1.2,3.7,1.4\n\t\t\t\t\t\t\tC404.7,478.5,401.2,480,398,478z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2C",
                    d:
                      "M280,526c-3.1,2.8-3,7.7-6.8,11.1c0.4-3,0.6-5.1,0.8-7.1c-1.1-4.1,2.2-6.3,3.9-9.1\n\t\t\t\t\t\t\tc2.1-3.6,4.3-7.3,7-10.6C282.3,515.3,280.5,520.4,280,526z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2E2928",
                    d:
                      "M263,606c-2.6-0.4-2.9-0.2-2.2,1.2c1.5,3-0.1,5.5-1,8.2c-0.3-7-5.5-13.6-1.3-21.1\n\t\t\t\t\t\t\tc0.4,3.6,3.4,5.6,4.5,8.7C263.6,604,263.6,605,263,606z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2F2B2C",
                    d:
                      "M266,558c-0.7,0.1-2.1,0.8-1.8-0.4c1.4-6.2,0.1-12.9,3.5-18.7c0.5-0.9,0.7-2.7,2.2-2\n\t\t\t\t\t\t\tc1.7,0.8-0.1,1.8-0.2,2.7c-0.3,2.6-3.2,5.8,1.4,7.5C268.3,550.2,265.6,553.4,266,558z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2E",
                    d:
                      "M322,701c-5.3-2.9-9.7-6.8-13.6-11.4c-0.5-0.5,0-1.2,0.6-1.6C312.4,693.3,318.7,695.6,322,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#403B39",
                    d:
                      "M257,635c-0.8,2,2.2,4,0,6c-0.6-4-4.4-7.4-2-11.9C255.7,631,256.3,633,257,635z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2E",
                    d:
                      "M336,711c-4.2-1.1-7.3-3.8-10-7C329.8,705.7,333.4,707.6,336,711z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2929",
                    d:
                      "M408,479c-1.6-2-4.2-0.2-6.2-1.7c3-0.6,5.7-0.5,8.4,0.6c0.5,0.2,1.7,0.2,0.3,1c-0.4,0.2-1,0.1-1.5,0.1\n\t\t\t\t\t\t\tC408.7,479,408.3,479,408,479z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M524,548c0.3,1,0.7,2,1,3c0,1.3-0.7,2-2,2C520.9,550.9,522.9,549.5,524,548z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272222",
                    d:
                      "M268,581.9c-1.3,0-2.6,0-3.9,0c0-0.2-0.2-0.6-0.1-0.7C265.5,579,266.7,580.5,268,581.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272222",
                    d:
                      "M263.3,578.6c0.2-0.2,0.5-0.8,0.8-0.8c1-0.2,0.8,0.7,0.8,1.3c0,0.3,0.6,1-0.4,0.9\n\t\t\t\t\t\t\tC263.9,579.8,263.3,579.6,263.3,578.6z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M341,736c-2.5-1.2-5.4-0.3-8-1l0,0c-0.1-3,2.1-2.7,4.5-3.1c-10.6-4.6-20.6-9.5-29.5-16.3\n\t\t\t\t\t\t\tc-1.2-0.9-2.8-0.8-4.1-1.6c-0.3,0-0.7-0.1-1-0.1c-0.2-1-2-2.8,0.9-2.4c2.4,0.4,4.7,1.4,7.4,1.7c-6.8-5-12.4-11.3-19.2-16.3\n\t\t\t\t\t\t\tc2.3-1.3,3.6-2.4,0.8-4.8c-3.7-3.1-6.6-6.9-8.8-11.2c0.6-2.4,1.3-4.7,1-7.8c4,2.3,4.2,6.4,6.5,9.1c4.3,5.2,9,10.2,13.5,15.1\n\t\t\t\t\t\t\tc6,6.5,12.7,11.8,19.4,17.3c8.3,6.8,18.1,10.8,27.8,15.1c3.9,1.7,8.4,2.5,11.9,4.4c5.1,2.8,11.3,1.3,15.7,4.7\n\t\t\t\t\t\t\tc4.4,3.4,9.7,3.4,16,5c-12.3,1.1-22.6-2.4-33.1-3.3c-1.6-0.1-2.6-4.6-4.5-0.7C351.9,740.3,346.9,736.4,341,736z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M511.9,701c-1.6,0.4-0.2,3.7-2.9,3c0.1-2.7-0.5-5.5,1-8c1.5,0.1,0.2-4,3-2c2.6,2.5-1.6,3.8-1,6\n\t\t\t\t\t\t\tC512,700.3,512,700.6,511.9,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#403C3B",
                    d:
                      "M386,734c0.7-0.3,1.3-0.7,2-1c0.9,2.8-1.7,3.6-2.9,5.4C385.3,736.8,382.5,734.8,386,734z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M280.7,674.5c-0.1-0.2-0.4-0.7-0.3-1c0.1-0.4,0.6-0.6,1-0.8c0.2,0.4,0.4,0.8,0.4,1.1\n\t\t\t\t\t\t\tC281.8,674.3,281.5,674.7,280.7,674.5z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#322E2D",
                    d:
                      "M541,568c1.7,7.4,1.6,15.1,4.8,22.6c-3.1-0.2-4.6-2.6-6.8-3.6c0.2-2.7-0.1-5.3-2.5-7.2\n\t\t\t\t\t\t\tc-1.1,2.2,1.9,4.2,0.3,6.9c-2-2.4-2.6-5-2.8-7.7c-0.2-2.3-0.6-4.6-2.2-6.4c-1-1.1-3.1-1.7-1.4-3.9c1.9-2.5,2.6,0.9,4.8,0.5\n\t\t\t\t\t\t\tc-3.5-5-8.2-9.1-8.4-16c3.4,3.3,3,8.7,7.2,10.9C535.2,567.3,538.7,566.6,541,568z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#35302D",
                    d:
                      "M539,589c0.8,1.5,1.9,2.8,3.5,3.2c4.1,1,4.4,4,4.6,7.5c0.2,3.5-1.1,4.3-4.1,3.3\n\t\t\t\t\t\t\tc-1.2-0.9-1.2-1.8-0.2-2.9c0.4-0.4,1.2-0.7,0.2-1.5C540.1,596.1,538.7,592.7,539,589z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3935",
                    d:
                      "M512,700c-1.9-2.4,2.1-3.8,1-6c1.3-1,1.8-2.4,2-4v0c2.3-1.7,4.7-3.3,7-5c0,1,0.1,2.1,0.1,3.1\n\t\t\t\t\t\t\tc-0.4,1.3-0.8,2.5-1.2,3.8c-1.7-0.4-2.9-0.2-3.8,1.7C515.9,696.1,514.3,698.4,512,700z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#423D3A",
                    d:
                      "M545,606c2.3,1.4,2.9,3.6,3,6c-0.3,2,0.8,4.3-1,6c-1.6-0.4-2.6-1.4-3-3\n\t\t\t\t\t\t\tC545.3,612.1,542.5,608.7,545,606z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#494441",
                    d:
                      "M546,619c0.4,2.1,1.4,4,0.8,6.2c-0.5,1.9-0.8,3.8-1.2,6c-4.4-4-2.3-8.2-0.6-12.3\n\t\t\t\t\t\t\tC545.4,618.7,545.7,618.7,546,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3935",
                    d:
                      "M529.8,678.7c-1.8-0.2-3.4-0.4-4.2,2c-0.6,1.8-1.7,3.5-3.6,4.3c0.6-1.9,0.9-3.9,1.5-5.8\n\t\t\t\t\t\t\tc1.6-5,3.6-3.8,6.3-1.3C529.9,678.2,529.9,678.5,529.8,678.7z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#1C1816",
                    d:
                      "M540.9,643c0.2,2.3,2.5,4.1,1.8,6.6c-2.3,0.5-1.3-2.3-2.7-2.7c-0.5-0.6-0.9-1.3-1.5-1.9\n\t\t\t\t\t\t\tc-1.2-1.2-2.5-3-1-4.2C539.5,639.3,539.6,642.5,540.9,643z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#15110F",
                    d:
                      "M546,619c-0.3,0-0.6-0.1-0.9-0.1c-1-0.8-2.1-1.6-3-2.5c-0.8-0.8-1.7-2-0.3-2.9\n\t\t\t\t\t\t\tc1.1-0.6,1.4,1.2,2.3,1.4c1.3,0.7,2.3,1.7,3,3C546.6,618.4,546.3,618.7,546,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4D4844",
                    d:
                      "M532,667.9c-0.4,2.7-0.6,5.5-1.9,8C530.1,673.1,529.5,670.2,532,667.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M515,690c-1.7-0.3-1.7-0.3-0.1-2.6C515.9,688.2,514.7,689.1,515,690L515,690z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2C2927",
                    d:
                      "M524,541c-2.9-1.1-2.4-5.6-6-6c-0.6-0.1-1.8-0.6-1.6-0.1c1.3,4.3-2.2,2.1-3.7,2.8\n\t\t\t\t\t\t\tc2.2-4.7-1.1-8.5-1.7-12.7c2.2-2.8,3.7-0.6,5.2,0.9c1.4,1.4,2.3,3.4,4.8,2.1c2.1,1.9,3,4.7,7,5.1c2.2,0.2,3.9,4.8,6.4,8.2\n\t\t\t\t\t\t\tc-3.4-0.7-5.9-1.3-8.5-1.9C524.5,539.1,524.2,539.9,524,541z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#373331",
                    d:
                      "M521,528c-0.6,3.1-1.5,3.6-3.9,0.9c-1.6-1.8-2.3-5.6-6.2-3.9c-2.7-3.7-5.3-7.3-8-11\n\t\t\t\t\t\t\tc0.2-0.7,0.6-1.2,1.3-1.4c2.9,0.9,5,2.9,6.6,5.4c1.6,0.9,2.9,2.4,5,2c1.3,1.1,2.4,2.3,3,4C518.9,525.7,520.4,526.6,521,528z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M511,518c-2.3-1.7-4.7-3.3-7-5c-1.9-0.8-2.8-2.5-4-4c-1-3.6,0.9-1.4,1.6-0.8c3.1,2.5,6.2,5.2,10.3,8.7\n\t\t\t\t\t\t\tc-0.7-4.5-3.9-5.5-4.9-7.9c5.1-1.6,8.1,0.3,11.3,7.4C516.1,518,513,515.8,511,518z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#25211E",
                    d:
                      "M505,506c-2.5-0.5-3.7-2.7-5.2-4.4c-1.9-2.1-4.2-3.5-6.8-4.7c7.3-1.1,12.7,1.7,16.6,8.1\n\t\t\t\t\t\t\tC508.3,506.5,506,503.8,505,506z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#201B19",
                    d:
                      "M480,484c-4-2-8-4-12-6c11.7-0.1,11.7-0.1,18.5,5.9C484.4,487.4,482.1,481.6,480,484z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#201B19",
                    d:
                      "M467,478c-2.7-4-7.1-5.7-11-8c6.5-2.7,11.2,1.1,16.4,4.3C470.4,475.6,467.4,474.9,467,478z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#201B19",
                    d:
                      "M492,495c-1.4-3.9-6.5-4.2-8-8c6.6-1.2,10.8,2.4,14.9,7C496.5,494.8,493.8,492.4,492,495z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2C2927",
                    d:
                      "M519,524c-1.6-0.9-2.9-2-3-4c6.3-0.3,8.8,4,11.2,9c-2.8,0.7-3.8-0.5-4.6-2.6\n\t\t\t\t\t\t\tC522,525,521.8,522.2,519,524z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M364,461c-5.8,2.1-10.8,5.9-17,7c2.4-1.4,4.7-2.9,7.2-4.4c-0.9-1.1-2.1-0.4-3.2-0.6\n\t\t\t\t\t\t\tC355,460.4,359.4,460.1,364,461z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2A29",
                    d:
                      "M386,457c-2.1,1.9-4.7,0.6-7,1C381.1,455.7,383.6,457,386,457z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3D3838",
                    d:
                      "M251.5,600c1.5,3.5,1.5,7.2,1.4,11.9C249.8,607.5,251.5,603.7,251.5,600z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#413D3C",
                    d:
                      "M252.3,614.4c1.7,4,2.2,7.3,2.2,10.7C252.3,622.2,251.9,620.1,252.3,614.4z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3F3938",
                    d:
                      "M255.5,568.9c-0.7-2.9-0.7-5.5,1.1-8.1C257.7,563.9,255.4,566.3,255.5,568.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#423C3B",
                    d:
                      "M258.5,553.8c0.7,1,0.6,2.1,0,3.4C257.8,555.9,257.8,554.9,258.5,553.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M280,688c-0.7-1-1.4-2-2-2.9c3.8-2.4,5.8,1.2,8,2.8c2.1,1.6,3.5,4.2,6,5.8c1.2,0.8-0.1,1.2-0.9,1.3\n\t\t\t\t\t\t\tc-3.7-1.7-5-7-10-7C280.7,688.5,280.3,688.5,280,688z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M268,666c-1.2-1-1.8-2.4-2-4C268.7,662.3,269.2,663.7,268,666z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#595453",
                    d:
                      "M280,688c0.3,0,0.7,0,1,0c1.9,2.6,3.8,5.2,6.2,8.4c-1.8-0.6-3-1-4.2-1.4\n\t\t\t\t\t\t\tC283.7,691.9,280,690.8,280,688z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#393433",
                    d:
                      "M304,714c1.7-0.1,3.3-0.1,4.8,0.9c9.7,6.8,20.3,11.9,31.1,16.7c0.4,0.2,0.5,0.7,1.1,1.5\n\t\t\t\t\t\t\tc-2.7,1-6.2-1.9-7.8,1.8c-5-5.1-10.7-8.8-17.8-10.2C313.4,719.2,308,717.4,304,714z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3A3634",
                    d:
                      "M500,509c1.7,1,3,2.3,4,4c-0.3,0.3-0.7,0.7-1,1c-1-1.3-2-2.7-3-4C500,509.7,500,509.3,500,509z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M393,474c-0.3,0-0.7,0-1,0c-0.1-3,3.8-2.4,4.4-4.8c0.4,0.2,1,0.3,1.2,0.6c0.5,0.7,0.3,1.6-0.3,2.2\n\t\t\t\t\t\t\tC396.1,473.2,394.7,473.8,393,474z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M323,479c-1.2,2-2.8,3.6-5.1,4.4C319.2,481.5,320.2,479.3,323,479L323,479z"
                  }
                })
              ]),
              _vm._v(" "),
              _c("g", { attrs: { id: "bar" } }, [
                _c("circle", {
                  attrs: { fill: "#393533", cx: "402", cy: "605", r: "85.5" }
                })
              ])
            ]),
            _vm._v(" "),
            _c("g", { attrs: { id: "disk" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("E7D6D5"),
                    d: "M341,707c0.8-1,1.5-2,2.9-2.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M400.8,567.4c0.1,1.2,0.5,3.5,0.4,4.9c-3,2.1-3.5,3.6-2.4,8.1c0,2.2-1.6,3.1-3.2,4\n\t\t\t\t\t\t\t\tc-2.2,1.2-4.4,2.3-6.1,4.1c-2.4,2.5-5,2.8-8,1.5c-4.5-1.1-6.1,1.8-7.3,5.3c-0.5,1.5,0.2,3.3-0.9,4.7c-4.3-0.7-7.9,2.7-12.2,2\n\t\t\t\t\t\t\t\tc-0.8,0-1.6-0.2-2-1c0.2-3.1,2.2-4.5,5-4.9c1.6-0.2,3.2-0.7,4.5-1.6c0.3-0.3,0.5-0.7,0.7-1c0.2-1,0.2-2,0.2-2.9\n\t\t\t\t\t\t\t\tc0.1-2.4,1.5-4.8,0.8-7.2c-0.9-2.8-4-1.6-5.8-2.9c-0.6-0.5-0.8-1-0.3-1.6c1-0.6,3.8-5.1,4.7-4.3c12.5-2.2,8.8-1,11.4-11.3\n\t\t\t\t\t\t\t\tc2.9,0.4,13.6,2.3,17.1,1.6"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M358.8,577.2c1.5,0.7,3.2,0.7,4.7,1.3c0.2,0.2,0.3,0.3,0.5,0.5c0.2,0.2,0.4,0.6,0.7,0.6\n\t\t\t\t\t\t\t\tc7.6,1.8,7.7,1.8,6.1,9.9c-0.4,1.8,1.2,4-0.8,5.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M367.7,592.1c1.5,0.4,2.2,1.4,2.3,2.9h0c-4.1,1-8.8,0.5-11.3,5.2c-0.3,0.6-1.8,0.5-2.7-0.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8F3038"),
                    d:
                      "M366,612c0-0.3,0-0.7,0-1c2.7,0.2,5.2,0.3,7.6-2c1.4-1.4,4.1-2.2,5.5,0.9c-0.6,1.3-2.8,1-2.8,3.1\n\t\t\t\t\t\t\t\tc2.4,0.2,1.9-2.1,2.7-3.1c3.1-1.7,2.5,3,4.7,2.8c2.3,2.3,3.9,4.7,0.8,7.6c-2,1.4-2.3,3.6-2.5,5.8c-0.6,2.3-2.1,2.6-3.6,1\n\t\t\t\t\t\t\t\tc-2.7-2.9-5.4-2.3-8.3-0.4c-0.4,0.6-0.8,1.2-1.5,1.5c-0.6,0-1-0.3-1.2-0.7c-0.8-1.5-0.7-3.1-0.8-4.6\n\t\t\t\t\t\t\t\tC366.7,619.3,364.4,615.8,366,612z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M379,610c-2-1.8-4.5-1.6-5.6,0.3c-2.4,4.2-6.5,2.9-9.1,1.3c-7.8-3.9-1.2-6.8-3.3-9.6\n\t\t\t\t\t\t\t\tc2.5-2.4,6.5-1.1,9-4c1.3-1.5,1.7,1.8,3.1,2c1.7-0.4,2.7,0.9,4,1.6c5.4,2.9,7.2,6.3,5.9,11.5c-0.5,1.8-1.2,2.7-1.9,0.2\n\t\t\t\t\t\t\t\tC380.7,611.8,381.1,610.1,379,610L379,610z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M366,612c0.7,3.7,1.3,7.4,2,11c-1.3,0.7-0.6,3.3-2.9,3c0.2-4-0.2-7.9-1.4-11.8\n\t\t\t\t\t\t\t\tC362.9,611.9,363.6,611,366,612z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A14E56"),
                    d:
                      "M356,575.2c3.3,0.8,6.5,2.1,10,1.8c1.7-0.1,1.2,1,1,2c-1,0-2,0-3,0l0,0c-1.5-1.1-3.4,0.1-5-0.8"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M356,600c1.1-0.1,2.2,0,3-1.1c2.7-3.9,6.4-5.1,11-3.9c-1.9,1.1-3.6,2.6-6.2,2.2\n\t\t\t\t\t\t\t\tc-2.7-0.4-3.2,2.6-4.8,3.8C357.9,601,356.7,601.2,356,600z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("5C1216"),
                    d:
                      "M419.8,567.5c-0.2,1.2-1.4,4.1-2.5,4c-0.8-0.1-1.8-1.1-2.2-0.2c-1.5,3-4.1,1.9-6.4,2.2\n\t\t\t\t\t\t\t\tc-1.4,0-6.6,0.1-7.5-1.1c0-1-1.5-10.7-1.3-13.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3A40"),
                    d:
                      "M438.3,638.2c-1.1-3-4.2-5.2-3.8-8.9c2-2.3,1.8-4.5,0-6.8c-0.4-2.7,1-5,1.7-7.5\n\t\t\t\t\t\t\t\tc0.8-1.7,1.5-3.5,1.9-5.4c1.9-6.1,6-10.1,11.8-12.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3A40"),
                    d:
                      "M448.3,601.9c-3.3,1.5-5.3,4.5-6.6,7.8c-3.9,9.9-5.9,19.2,1.5,29"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86262D"),
                    d:
                      "M419.9,648c-1.3-1-2.6-2-3.9-3c-1.3-0.7-2.3-1.7-3-3c2.2-2.5,4.6-4.8,6.8-7.3\n\t\t\t\t\t\t\t\tc2.7-3.2,4.4-3.1,7.2,0.2c1.8,2.2,3.3,4.6,4.8,7"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A74D4E"),
                    d:
                      "M324,696c0.7,0.7,1.3,1.3,2,2c0,0.3,0,0.7,0,1c-4.1-1.1-6.2-4.7-8.9-7.3c-2.3-2.3,0.9-3.9,1.9-5.7\n\t\t\t\t\t\t\t\tC319.5,689.9,322.1,692.8,324,696z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4B1014"),
                    d:
                      "M376,602c-0.9-0.7-1.9-1.4-2.8-2.1c-1-4.7-0.3-8.7,4.4-11.2c1.2-0.6,2.4-1.1,3.5,0.2\n\t\t\t\t\t\t\t\tc2.2,1.9,6.4,1,7,5.1c-0.1,2.6-0.8,5.1-2.1,7.4C382.9,606.6,379.3,602.7,376,602z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("501115"),
                    d:
                      "M405,572c1.5-0.1,2.8,0.3,4,1c3,1.4,3.2,4,2.9,6.9c-0.6,2.3-1.2,4.7-3.5,6c-2.2,1.4-4.4,1.7-6.7,0.3\n\t\t\t\t\t\t\t\tc-2.4-1.3-3.2-3.6-3.7-6.1c-1.9-4.3,0.2-6.6,4.1-8C403,572,404,572,405,572z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("5A1216"),
                    d:
                      "M397.9,580c1.3,1.7,2.2,3.8,4.1,5c-5.7,1.9-10.1,5.7-15,8.9c-0.5-3.4-4.6-2.6-6-5.1\n\t\t\t\t\t\t\t\tc3.1,0.9,5.9,1,8.1-1.9C391.4,583.9,396.6,584.3,397.9,580z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("230809"),
                    d:
                      "M389.9,580.9c0,1.6-0.6,2.7-1.9,2.7c-1.7-0.1-3.3-0.8-3.7-2.6c-0.4-1.7,1-2.4,2.3-2.6\n\t\t\t\t\t\t\t\tC388.5,578.1,389.3,579.7,389.9,580.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M367,630c0.4-0.7,0.7-1.3,1.1-2c0.3,0,0.6,0,0.9,0c1.4,0.5,2.2,2.5,4.5,1.7c-0.5-2.5-3.5-2-4.5-3.7\n\t\t\t\t\t\t\t\tc2.6-2.8,7.1-3,9.3-0.4c1.1,1.3,1.1,1.3,2.7,0.3c1.6-0.3,1.6,0.9,2.3,1.8c-1.8,2.5-1.3,1.6-2.7,3.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A161A"),
                    d:
                      "M376,602c3-0.5,6.5,3.7,9-1c0.7,0.5,1.1,1.3,1.1,2.1c-0.3,5.5,2.2,10,5.1,14.4\n\t\t\t\t\t\t\t\tc-1.7,2.1-4,2.9-6.6,2.9c-0.2-0.2-0.4-0.3-0.6-0.5c3-2.7,0.2-4.7-0.9-6.9C382.5,608.2,380.7,604.1,376,602z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M369,626c1.1,0.2,2.3,0.3,3.3,0.7c1.3,0.4,3.2,0.4,3.3,2.3c0.1,1.3-1,2-2,2.6c-1.9,1-3.1-0.4-4-1.7\n\t\t\t\t\t\t\t\tc-0.4-0.5-0.4-1.2-0.6-1.8C369,627.3,369,626.7,369,626z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("240605"),
                    d:
                      "M379,610c1.1,1.9,1.8,3.8-1,4.8c-1.8,0.6-3.7-0.1-3.7-2.1C374.2,609.4,376.9,610.1,379,610L379,610z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A161A"),
                    d:
                      "M383,628c-0.7-0.7-1.3-1.4-2-2c0-2.5-0.2-5.1,2.9-6c0,0,0.1,0.1,0.1,0.1c0.4,2.3-0.7,4.6-0.3,6.9\n\t\t\t\t\t\t\t\tC383.6,627.4,383.3,627.7,383,628z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("581216"),
                    d:
                      "M383,628c0-0.3,0.6-0.6,0.6-0.9c3.4,0.3,5,3,8.1,3.9c2.3,2.8,5.3,4.3,8.9,4.9c2,0.3,4.2,0.6,6.1,3.2\n\t\t\t\t\t\t\t\tc-6.2,0.9-12.1-0.1-17.6,2l0,0c-1.4,0.6-8.6-9.8-9.6-8.6"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1519"),
                    d:
                      "M419,570c-5.7-7.4,14.1,2.2,15,9c0.1,1.8-1.3,2-2.3,1.7c-5.7-1.6-11.5-3.4-14.9-9\n\t\t\t\t\t\t\t\tc0.1-0.2,0.1-0.5,0.2-0.7C417.8,571,418.5,570.8,419,570z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1519"),
                    d:
                      "M411,580c0.4-2.6-0.8-4.8-2-7c1.8-1.5,5.8,0,5.6-4.2c1.4,0.1,1.8,1.2,2.4,2.2l0,0\n\t\t\t\t\t\t\t\tc-1,1.1-0.3,2.1,0.1,3.1c1,2.6-0.1,3.6-2.7,3.5c-1.4,0.2-1.5,1.7-2.3,2.5C411.7,580.3,411.4,580.3,411,580z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1C24"),
                    d:
                      "M436.3,593.9c-0.5-0.1-0.9-0.2-1.3-0.5c-1.1-1-2-2.3-3.6-2.8c-2.6-1.3-5,0.8-7.6,0.6\n\t\t\t\t\t\t\t\tc-3.2-1.7-6-4.4-10.2-3.4c-0.8,0.2-1.5-0.5-1.9-1.3c0.2-1.1,0.7-2.2-0.2-3.2c-1-1.2-1-2.4,0.5-3.3c0.2-1.6-0.7-3.7,2-4\n\t\t\t\t\t\t\t\tc1.2,2.4,5.1,2.1,5.6,5.3c0.2,0.4,0.4,0.8,0.6,1.2c1.2,3,2.9,2.9,6.1,2.7c5.4-0.4,8.7-5.1,14-5.3c1.8-0.1,0.1-0.1,0-0.2\n\t\t\t\t\t\t\t\tc-0.5-0.1-0.9-0.3-1.3-0.6c-0.1-0.8,0-1.4,1.1-1.1"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71161B"),
                    d:
                      "M419,582c-0.7-2.8-4.8-2.8-5-6c1.5,0.5,3.7,1.8,1.9-1.5c-0.9-1.7-1.6-3,1.1-3.5c4.8,4.6,9.6,8.9,17,8\n\t\t\t\t\t\t\t\tc0.7-0.1,1.4-0.1,2-0.2c1-0.7,2-0.7,2.9,0.1c1.3,0,2.6,0,5,0c-4.6,2.6-8.8,3.3-12.2,6.4c-1.4,1.4-5.8,1.7-8.8,2.1\n\t\t\t\t\t\t\t\tC420.4,587.8,419.5,584.5,419,582c0.5-0.5,1.7-0.1,1.9-1.2C419.9,580.6,419.6,581.6,419,582z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("571116"),
                    d:
                      "M452.7,597.2c-6.2,2.5-11.5,6-13.7,12.8c-1,1.5-1.2,3.4-2,5c-0.6,2.7-1.3,5.3-1.9,8\n\t\t\t\t\t\t\t\tc1.2,2,1.3,4-0.1,6c0.3,3.4,3.6,5.5,4.1,8.9c0.7,1,0.6,1.8-0.5,2.4c-1.9,0-2.7-1.6-3.7-3c-0.7,1.9,0.6,4.1-1,5.8\n\t\t\t\t\t\t\t\tc-0.4,0.2-0.9,0.2-1.3,0c-2-1.6-3.2-3.8-4.4-5.9c-1.5-2.7-3.5-4.8-6.3-6c-0.2-2.8-1.1-5.6,0.5-8.5c1.4-2.6-2.6-2.5-2.6-4.5\n\t\t\t\t\t\t\t\tc0.8-1.3,2.8-1.3,3.3-2.9c1.8-3.9,4.6-7.6,2.7-12.3c1.8-1.9,4.9-2.2,5.8-5.2c0.7-0.1,1.6,0.9,2.1-0.1c0.2-0.5-0.6-1-0.9-1.6\n\t\t\t\t\t\t\t\tc-0.1-1.6,0.7-4.2,2-4.8"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A9605E"),
                    d:
                      "M435,629c0-2,0.1-4,0.1-6c4-0.6,1.4,2.4,1.8,3.6C437.2,627.6,437.9,630,435,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7A2023"),
                    d:
                      "M437,615c-0.1-2,0.4-3.7,2-5C439.1,612,438.6,613.7,437,615z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("601317"),
                    d:
                      "M422,631c2.5-0.2,3.9,1.1,5.1,3.1c1.9,3,3.9,6,5.9,9c-0.7,0.5-1.3,0.5-2,0c-0.2-0.3-0.3-0.6-0.5-0.9\n\t\t\t\t\t\t\t\tc-2.5-2.8-3.5-8.1-7.1-8.4c-3.1-0.2-5,4.6-7.4,7.1c-0.9,1-2,1-3.1,1.2c-7.9-3.2-15.9-1.6-23.9-1c4.9-3.2,10.5-1.6,16.3-2.2\n\t\t\t\t\t\t\t\tc-3.9-2.4-8.6-1.1-11.9-4c-1.3-1.1-2.7-1.8-2.4-3.8c4.2-3.8,1.7-8.1,1.1-12.3c1.2-0.6,2.6-0.3,3.1,0.7\n\t\t\t\t\t\t\t\tc2.3,4,6.4,7.1,6.8,12.2c0.4,0.9,0.8,2,1.9,1.4c1.7-1,0-2.1-0.2-3.2c0.3-2.6,2.2-3.7,4.4-3.7c2.2,0,2.8-1.2,3-3\n\t\t\t\t\t\t\t\tc0.2-0.5,0.4-0.8,0.8-1.2c0.5-0.2,0.9-0.1,1.3,0.1c1.6,2.4,0.6,5.9,3.3,7.9c1.3,1.2,2.8,0.9,4.3,0.7\n\t\t\t\t\t\t\t\tC421.3,630.5,421.7,630.7,422,631z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("601317"),
                    d:
                      "M385,643.1c0.7-1.9,2.3-2.2,4-2C388,642.2,386.6,642.8,385,643.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7E1C23"),
                    d:
                      "M431,643c0.7,0,1.3,0,2,0l0,0c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7E2027"),
                    d:
                      "M412,586c3.5,1.2,7.8-0.3,10.8,3.1c0.6,0.6,1.1,1.1,1.2,1.9c0.3,0.9-0.2,1.2-0.9,1.5\n\t\t\t\t\t\t\t\tc-0.5,0-0.9-0.1-1.3-0.3c-2.5-2.5-5.3-3.5-8.8-2.4c-0.7,0.2-1.4,0.2-2.1,0.2c-0.5,0-1-0.1-1.4-0.2\n\t\t\t\t\t\t\t\tc-12.6-0.8-17,2.7-19.3,11.5c-1.4,5.4,1.4,9.9,3.4,14.6c0.2,1.5-0.1,2.6-1.9,2.6c-0.2-0.1-0.4-0.3-0.7-0.4\n\t\t\t\t\t\t\t\tc-5.8-4.3-6.4-10.5-6-17c0.7-2.3,1.3-4.7,2-7c3.8-5,8.2-9,15-8.9c2,1.8,4,0.8,6-0.1C409.5,584.7,410.9,584.7,412,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71161B"),
                    d:
                      "M412,586c-1.5,0.1-2.8-0.3-4-1c2.1-1,1.6-3.6,3-5c0.3,0,0.7,0,1,0c-1.1,1.8,0.2,2.6,1.3,3.7\n\t\t\t\t\t\t\t\tC416.1,586.2,413.6,585.9,412,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M392,619c4.6,6.1,4.4,9-1,12c-3.9,1.2-5.5-2.4-8-4c-1.2-2.5-0.5-4.8,1-7c2.4-0.4,4.2-2.9,7-2l0,0\n\t\t\t\t\t\t\t\tC391.3,618.4,391.9,618.4,392,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M423,592c0.3-0.3,0.7-0.7,1-1c2.5-1.8,5-3.2,8-1c1.2,0.8,2.2,1.8,3,3l0,0c0.1,1.5-1.4,2-2,3\n\t\t\t\t\t\t\t\tc0.5,1.1-0.1,1.6-1,2c-1.2,4.6-1.2,4.6-6,4.8c-0.2,0.1-0.4,0.3-0.6,0.4c-0.5-0.1-1-0.3-1.3-0.7\n\t\t\t\t\t\t\t\tC420,597.4,419.8,595.7,423,592z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("571116"),
                    d:
                      "M435,593c-1.4-0.6-2.4-1.6-3-3C433.9,590.1,434.9,591.1,435,593z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("3A0D0E"),
                    d:
                      "M419,582c0.2-1.3-0.7-3.2,1.3-3.7c1.7-0.4,2,1.3,2.5,2.4c0.3,0.8,0.2,1.7-0.4,2.3\n\t\t\t\t\t\t\t\tC420.8,584.3,420.1,582.2,419,582L419,582z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M423,592c-2.9,4.3,0.5,7.5,2.1,11c-0.1,1.4-2.3-2.4-2.2,1.1c0.1,3.2,0.2,7.1-3.4,9.2\n\t\t\t\t\t\t\t\tc-1,0.1-1.6-1.5-2.5-0.8c-0.7,0.5,0,1.5,0.4,2.2c1.8,2.5,4.6,0.1,6.7,1.4c-0.3,2.7-2.4,1.8-4,2c-2.2,1.6-4.5,3-7,4\n\t\t\t\t\t\t\t\tc-0.3,0-0.7,0-1,0c-4-0.1-8.1,2.9-12.1,0c-0.2-0.4-0.2-0.9,0.1-1.3c1-0.9,2.4-0.6,3.7-1c-0.5-0.7-1.3-1-1.8-1.6\n\t\t\t\t\t\t\t\tc-6.4-8.5-5.4-18.3,2.8-24.7c4.2-3.3,8.8-1.5,13.2,0c0.7-0.3,2.1,2.7,2.4-0.5c0.1-0.7,0.8-1.4,1.7-1\n\t\t\t\t\t\t\t\tC422.3,592,422.7,592,423,592z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("470F13"),
                    d:
                      "M413,622c1.5-2.7,3.9-4,7-4c3.3,1.2,6.7,2.5,2.7,6.6c-2,2,2.3,4.6-0.7,6.4c-0.3,0-0.7,0-1,0\n\t\t\t\t\t\t\t\tc-1.7,0.7-3.3,0.7-5,0C412.5,628.8,412.9,625.4,413,622z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8A2A31"),
                    d:
                      "M424,616c-1.9,1.2-4,1-6.1,1c-1.7,0-1.1-1.1-0.9-2c0.4-0.3,0.8-0.5,1.2-0.6c3-0.2,3.4-2.8,4.4-4.8\n\t\t\t\t\t\t\t\tc1.1-2.2,1.2-4.9,3.4-6.6c0,0,0-0.3,0-0.3c3,1.7,2,4.1,1.1,6.4C426.1,611.5,425,613.8,424,616z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("601317"),
                    d:
                      "M433,644c0-0.3,0-0.6,0-1c1-2.7,0.5-5.4,0-8.7c3,1.3,3.5,3.9,5,5.7c-3,1.5-1.7,4-1.2,6.7\n\t\t\t\t\t\t\t\tC435.3,645.6,434.1,644.8,433,644z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6C151A"),
                    d:
                      "M432,598c0.3-0.7,0.7-1.3,1-2c1.2,0.1,2.8-0.3,2.8,1.7c0,1.1-0.7,1.8-1.7,2.1\n\t\t\t\t\t\t\t\tC432.7,600.2,432.1,599.3,432,598z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M392,619c-0.3-0.3-0.7-0.7-1-1c1.3,0,1.9-0.7,2-2c3.3,0.3,5.6,2,7,4.9l0,0.1c1.8,3.2,5.6,4.5,9,3.2\n\t\t\t\t\t\t\t\tc1-0.4,1.6-1.7,3-1.3c0,2.3,0.9,5.2-3.4,4.1c-2.2-0.5-3.6,1.1-4.6,2.9c-0.5,1.5-1.5,2-3,2C400.3,628,395.2,620.5,392,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("89292F"),
                    d:
                      "M412,623c-3.1,4.4-11.7,4-14-1c-0.7-1.4,1.3-0.7,2-1c2.9,1.7,5.9,1.2,8.9,0c1.4-0.6,2.8-1.7,3.2,1\n\t\t\t\t\t\t\t\tC412,622.3,412,622.7,412,623z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4F1015"),
                    d:
                      "M401,632c1-0.7,2-1.3,3-2c1.4,0.2,2.9,0.5,2.6,2.3c-0.3,1.6-1.6,2.5-3.2,2.7\n\t\t\t\t\t\t\t\tC401.2,635.1,401,633.6,401,632z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("571116"),
                    d:
                      "M416,631c1.7,0,3.3,0,5,0C419.3,632.5,417.7,632.5,416,631z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("170505"),
                    d:
                      "M410,589c0.3,0,0.6,0,0.9,0c2.6,3.2-0.7,2.9-2.1,3.2c-6.5,1.6-10.3,5.3-11.3,11.4\n\t\t\t\t\t\t\t\tc-0.5,3.3-0.1,6.6,0.1,9.9c-1.4,3.6-3.4,2.5-5.1,0.4c-6.8-8.4-3-20.5,7.3-23.9C403.3,588.9,406.5,587.7,410,589z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1518"),
                    d:
                      "M397,613c-2.4-7.2-0.8-13.6,4.3-19.2c1.5-1.6,3.5-1.5,5.5-1.9c1.6-0.4,4.7,0.8,4.2-2.8\n\t\t\t\t\t\t\t\tc0.7,0,1.4,0,2,0c2.5,0.8,4.2,2.5,5,5c-0.1,0.6-0.4,1.7-1,1.2c-3.6-3.1-8.2-3.7-11.3-0.9c-4.5,4-8.3,9.2-6.4,16.2\n\t\t\t\t\t\t\t\tc0.7,2.7,2,5.3,3.7,7.5C398.5,619.3,398.2,615.6,397,613z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("541114"),
                    d:
                      "M397,613c2,1.7,2.8,4.8,6,5c1.1,0.8,2.8,0.7,3.3,3c-2.2,0-4.2,0-6.3,0c-2.3-1.6-4.7-3.3-7-4.9\n\t\t\t\t\t\t\t\tc-5.6-6.7-5.9-16.6-0.6-22.9c3.4-4,12.1-6.1,17.6-4.1c-8-0.1-15.1,1.7-18.9,9.8c-2.3,4.9-1,11.5,2.9,15.1\n\t\t\t\t\t\t\t\tC395.7,615.5,396.6,615.2,397,613z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D2D34"),
                    d:
                      "M418,594c-2-1.3-3.7-3-5-5c4.6-1.7,7.8-0.7,9,3C420.5,592.3,421.4,597.5,418,594z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("943A3F"),
                    d:
                      "M426,603.1c-1.2,3.7-1.8,7.7-4.3,10.9c-1,1.3-1.8,3.1-3.7,1c-0.5-1.1,0.1-1.6,1-1.9\n\t\t\t\t\t\t\t\tc2.7-2.5,2.4-6,2.8-9.1c0.5-3.9,2-1.4,3.3-1.1C425.4,603,425.7,603,426,603.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6D1618"),
                    d:
                      "M419,613c-0.3,0.6-0.7,1.3-1,1.9c-0.3,0-0.7,0-1,0c-2.5-0.4-2.1-2.1-1.8-3.8c0.2-1,1.1-1.2,2-1.1\n\t\t\t\t\t\t\t\tC419.1,610.2,418.9,611.8,419,613z"
                  }
                })
              ]),
              _vm._v(" "),
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M455.5,707c-2.2-3.8-27.9-33.3-38-45.8c-14.5-17.1-24.7-7.9-31.1-3c-12.9,13.2-30,29.3-42.2,46.5\n\t\t\t\t\t\t\tc-1.4,1.9-6.1-2-7.2-4.1c1.9-3.6,53.3-59.7,53.7-60c5-1,14.4-1.2,20.6,0.8c12,13.8,39.1,47.6,51.1,61.4\n\t\t\t\t\t\t\tC463.9,704,457.7,710.2,455.5,707z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M316.6,685.1c9.7-12.8,24.3-35.4,33.2-48.8c11.9-18.9,0.1-25.9-6.6-30.6\n\t\t\t\t\t\t\tc-16.5-8.3-38.4-16.7-58.4-23.2c-2.3-0.7,0.1-6.4,1.8-8.1c4,0.7,74.4,29.8,74.9,30.1c2.4,4.5,6.8,12.3,6.8,18.8\n\t\t\t\t\t\t\tc-9.5,15.6-34.9,52.7-44.5,68.3C322.9,693.5,314.3,688.1,316.6,685.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M294.6,550.9c15.3,4.8,41.5,10.9,57.1,14.7c21.8,4.8,24.4-8.7,26.6-16.5c2.3-18.3,6.1-41.5,5.4-62.5\n\t\t\t\t\t\t\tc-0.1-2.4,6-2.1,8.2-1.1c0.7,4-5.7,79.2-5.8,79.7c-3.4,3.8-11.3,10.3-17.4,12.5c-17.9-3.7-59.9-14.2-77.9-17.9\n\t\t\t\t\t\t\tC288.8,559.7,290.9,549.7,294.6,550.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M409,484.1c-0.5-1.9,7.7-3.2,7.7,0.7c-0.2,16.1,3.6,43.3,4.5,59.3c1.8,22.3,15.5,20.8,23.5,20.6\n\t\t\t\t\t\t\tc18.2-3.2,43.7-7,63.6-13.8c2.2-0.8,4,5,3.7,7.4c-3.6,1.9-76.3,18.5-78.5,18.5c-4.6-2.2-14.4-6.3-18.2-11.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M518.4,582.7c-15.2,5.2-50.7,19.3-55.5,21.3c-20.5,9-14.6,21.5-11.7,29c2.4,4.9,27.3,49.4,31.7,53.9\n\t\t\t\t\t\t\tc1.7,1.7-2.7,5-5.1,5.4c-3-2.8-42.5-67.5-42.7-67.9c0.5-5.1,2.7-14.5,6.3-19.9c16.6-7.6,58.1-23.6,74.8-31.2\n\t\t\t\t\t\t\tC517.8,572.2,522,581.5,518.4,582.7z"
                  }
                })
              ]),
              _vm._v(" "),
              _c("g", [
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M470.1,697.6l-3.8,2.4l-4.4,2.8c0,0-18.8-23-26.7-32.8c-5.9-7.3-23.9-28.7-23.9-28.7s2.8-2.1,5.7-4.5\n\t\t\t\t\t\t\t\tc2.9-2.4,4.9-5.6,4.9-5.6L470.1,697.6z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M421.9,631.2c0,0,3.9-0.8,8.1-3.1c3.5-1.9,5.1-3.6,5.1-3.6l42.5,66.8l-7.5,6.2L421.9,631.2z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M329.8,695.1l-3.3-3l-3.9-3.5c0,0,17.4-23.7,24.8-34c5.5-7.7,20.8-31.3,20.8-31.3s2.8,2.1,5.8,4.3\n\t\t\t\t\t\t\t\tc3.1,2.2,6.7,3.2,6.7,3.2L329.8,695.1z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M380.8,630.8c0,0,1.8,3.5,5.2,7c2.8,2.8,4.7,2.8,4.7,2.8l-26.8,29.6l-26,30.4l-8-5.5L380.8,630.8z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M289.7,566.4l1.6-4.2l1.9-4.9c0,0,28.3,8,40.5,11.3c9.1,2.4,36.6,8.5,36.6,8.5s-1,3.3-2,7\n\t\t\t\t\t\t\t\tc-0.9,3.6-0.6,7.4-0.6,7.4L289.7,566.4z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M367.8,591.5c0,0-2.7,2.9-4.7,7.3c-1.7,3.6-2,5.9-2,5.9l-36.1-15.2l-37.6-13.7l2.3-9.4L367.8,591.5z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M400,485.3l4.5,0.2l5.2,0.3l5.6,79.5c0,0-3.5,0.1-7.3,0.3c-3.8,0.2-7.2,1.7-7.2,1.7L400,485.3z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M400.8,567.4c0,0-3.6-1.6-8.5-2.2c-3.9-0.5-6.2,0-6.2,0l4.2-79.1l9.7-0.7L400.8,567.4z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M513.7,567l1.1,4.4l1.2,5.1c0,0-27.8,9.7-39.7,14c-8.8,3.2-34.9,14-34.9,14s-1.1-3.3-2.4-6.9\n\t\t\t\t\t\t\t\tc-1.3-3.5-3.7-6.4-3.7-6.4L513.7,567z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M435.2,591.2c0,0,0.5-3.9-0.4-8.7c-0.7-3.9-1.8-6-1.8-6l38.3-8.2l38.7-10.4l3.5,9.1L435.2,591.2z"
                    }
                  })
                ])
              ]),
              _vm._v(" "),
              _c("circle", {
                attrs: {
                  fill: "none",
                  stroke: _vm.diskColorRecalc("85242C"),
                  "stroke-width": "10",
                  "stroke-miterlimit": "10",
                  cx: "402",
                  cy: "602.4",
                  r: "121.9"
                }
              })
            ])
          ]
        )
      ]
    ),
    _vm._v(" "),
    _c(
      "svg",
      {
        attrs: {
          viewBox: "0 0 350 350",
          width: "350",
          height: "350",
          id: "car-wheel-polish"
        }
      },
      [
        _c(
          "g",
          {
            staticClass: "car-wheel",
            attrs: {
              id: "car-wheel",
              height: "200",
              width: "200",
              transform: "translate(-225,-425)"
            }
          },
          [
            _c("g", { attrs: { id: "tire" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M271,522.9c-0.1-1.6,1-2.8,1.8-4c2.2-2,3.8-4.5,5.1-7.1c15.7-22.2,36.4-38.2,61.3-48.8\n\t\t\t\t\t\t\tc7.3-3.1,14.8-6,22.8-7.2c0.2,2.7-2.2,2.7-3.7,3.1c-8.4,2.3-15.9,6.8-24.1,9.4c-2.3,0.7-3.3,2.1-2.8,4.5\n\t\t\t\t\t\t\tc-0.6,4.2-4.2,5.2-7.3,6.7c-0.4,0-0.9-0.2-1.3-0.4c-6.2,1.9-10.8,6.1-15,10.6c-2,2.2-3.4,5-5.6,6.9c-1.4,1.2-2.3,2.1-4.7,2.3\n\t\t\t\t\t\t\tc-3.5,0.3-6.8,4-7.6,7.6c-0.8,3.8-2.6,6.6-5,10c13.7-18.3,30.2-32.5,50.1-42.6c2.8-1.4,4.8-4.2,8.2-4.5\n\t\t\t\t\t\t\tc1.3,0.3,2.6,0.1,3.8-0.4c9.9-4.2,20.4-6.4,30.7-8.9c0.5-0.1,1,0,1.5,0c7.1,1.6,14.2-1.2,21.4-0.4c6.1,0.7,12.2,1.6,18.4,1.1\n\t\t\t\t\t\t\tc2.4-0.2,4.1,2,6.4,2.5c4.5,1.1,9,2.2,13.5,3.6c16.3,5.1,30.1,14.4,43.6,24.5c2,1.5,4.3,2.7,5.2,5.3c-1.9,3.5-5.4,4.8-7.9,2.6\n\t\t\t\t\t\t\tc-2.6-2.3-6.4-4-8-6.4c-2.3-3.4-4.8-4.3-8.1-6.1c-4.2-2.3-9.1-2.2-12.9-5.3c0.7,2.3,4.8,3.5,2.2,6.2c-2,2-4.3-0.1-6.2-1.4\n\t\t\t\t\t\t\tc-1.9-1.2-3.4-2.6-6.2-1.1c-3,1.6-3.7-2.3-5.5-3.7c-1.7,2.7-3.8,1.8-5.8,0.4c-0.7-0.5-0.5-1.6-0.9-2.3\n\t\t\t\t\t\t\tc-0.7-1.1-1.6-1.6-2.9-1.2c-0.7,0.2-1.1,0.9-1.1,1.6c0,1.5,1.4,1.1,2.2,1.4c10.1,3.6,20.7,6.1,30.2,11.4\n\t\t\t\t\t\t\tc7.3,4.1,14.4,8.5,21.2,13.2c4.5,3.1,8.3,7.6,12.3,11.5c9.6,9.5,18.7,19.4,24.4,31.9c0.5,1.2,1.3,2.3,2.5,3.1\n\t\t\t\t\t\t\tc2.3-1.9,2.2-6.4,6.5-6c0.4,0.2,0.7,0.6,0.8,1c-0.3,2-1.2,3.9-1,6c-1.9,3.4-1.9,6.8-0.7,10.5c3.5,10.6,4.7,21.7,6.4,32.6\n\t\t\t\t\t\t\tc0.2,1.4,0,2.7-0.5,3.9c-2.5,6.4-1.7,13.2-1.6,19.7c0.2,6.4-1.5,12.4-2.3,18.5c-0.2,1.9-1.2,3.7-1.2,5.8c0,2.3-0.6,4-2.9,5.3\n\t\t\t\t\t\t\tc-2.3,1.4-3.6,3.5-1.7,6.6c1.1,1.8,1.2,4.5,0,6.2c-2.3,3.4-4,6.7-4.2,10.9c-0.1,1.1-1.2,1.3,0.6,2.4c2.4,1.5,1.2,4.6,0.2,6.8\n\t\t\t\t\t\t\tc-1.5,3.5-3.2,6.9-5.9,9.8c-2.7,2.6-4,6.3-8.1,7.8c-1.8,0.7-1.8,4.3-3.9,6c-4.4,3.7-9.6,6.1-14,9.7c-1.8,1.5-4.1,2.3-4.3,5.1\n\t\t\t\t\t\t\tc-0.1,1.7-1.5,2.5-2.8,3.2c-2.7,1.4-5.1,3.1-7.8,4.5c-4.9,2.7-4.7,2.7-8.7-0.5c-2.1-1.7-2.1-3.1,0-4.2\n\t\t\t\t\t\t\tc6.2-3.4,11.5-8.2,17.4-11.9c5.5-3.4,10.5-7.8,14.9-12.8c0.9-1.1,0.8-2.5,1.2-3.8c0.8-2.5,1.6-5.1,5.3-3.4\n\t\t\t\t\t\t\tc0.9,0.4,1.6-0.5,4.3-5.4c-2,4-4.7,6.3-9.1,3.6c-1.9,2.5-4.8,3.9-6.4,6.9c-3,5.8-8.4,11.2-13.9,12.1\n\t\t\t\t\t\t\tc-7.2,1.3-12.2,5.7-18.4,8.1c-6.5,2.5-13.1,4.8-19.6,7.4c-34.6,8.8-67.5,4.8-98.8-12.5c-0.5-0.2-0.9-0.5-1.3-0.8\n\t\t\t\t\t\t\tc-3.1-2.8-6.7-5-10.2-7.2c-1.5-1.1-3-2-4.5-3.2c-4.1-4.8-10-7.9-13.7-13.1c-13.8-15.9-24.5-33.7-29.8-54.2\n\t\t\t\t\t\t\tc-2.8-10.7-5.5-21.6-4.2-33c0.2-2.1,0.5-4.4-0.1-6.5c-2.5-9.5,1.1-18.2,3.7-27c2.5-8.6,5.8-16.9,10.4-24.6\n\t\t\t\t\t\t\tc-0.3-0.1-0.2,0.2-0.4,0.5c-7.5,7.8-7.7,18.6-11.3,28c-3.3,8.7-4.6,17.8-3.1,27.2c0.5,3-1,6.1-0.6,9.4\n\t\t\t\t\t\t\tc1.6,12.9,2.9,25.9,7.8,38.2c0.5,1.3,0.8,2.6,0.6,3.9c-1,5.8-0.8,11.5-0.1,17.3c0.7,5.1-0.2,5.6-5.6,4.2\n\t\t\t\t\t\t\tc-2.1-1.4-3-3.8-4.4-5.7c-1.6-2.2-2.9-4.7-5.9-5.4c-1.4-0.8-2.1-2-2.2-3.6c1.1-2.8,3-2,4.8-0.8c2.4,1.6,3.9,3.9,5.2,6.4\n\t\t\t\t\t\t\tc-4.2-7.9-8-15.9-12.4-23.6c-0.6-1-1.2-2.1-1.1-3.3c0.3-3.9-1.8,1-2.1-0.6c-2.2-1.5-2.3-3.8-2.4-6.1c0.2-0.8,0.6-1.3,1.4-1.6\n\t\t\t\t\t\t\tc6.3,0.6,6.2,6.1,7.9,9.9c-0.3-2.3-2.4-4.7-1-7.5c1.2-2.1,4.6,2.1,5.4-2.1c0.8-4-2.1-3.3-4-4.1c-1.9-0.8-1.8-2.1-0.5-3.5\n\t\t\t\t\t\t\tc0.9-1,2.4-1,3.4-1.9c-1.1-2.5-5.8,1-5.5-3.2c0.2-2.7,2.3-3.3,4.9-3.3c-0.5-2.5-4.4-2.3-4.1-5.2c0.2-1.3,0.3-2.6,0.2-3.9\n\t\t\t\t\t\t\tc1.3-2.2-2-6,2.5-6.9c-0.9-2.4-6.1-0.5-4.3-4.3c0.8-1.8,2.8-3.4,3.6-5.4c-3.5,0.5-5-1.8-4.2-5.1c0.8-3.4,0.7-6.8,1.4-10.2\n\t\t\t\t\t\t\tc0.2-1.1-0.1-2.7,1.1-3.1c5.6-2.1,3.8-6,2.6-9.8c-0.8-4.8,1.8-8.1,4.8-11.2c2.4-3,5.4-5.6,5-10.1c-0.1-1.4,1.1-3.1,2.3-4.2\n\t\t\t\t\t\t\tc2-1.7,2.3-3.8,2-6.2c-0.3-4.8,1.2-9.1,3.3-11.7c-1.9,4.5-6.1,9.6-8.1,15.7c-4,1.2-5.4,0.2-4.6-3.5\n\t\t\t\t\t\t\tC270,525.4,270.3,524.1,271,522.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2A2525",
                    d:
                      "M437,724c7-3.9,14.9-5.5,22-9.3c4.4-2.3,8.3-5.4,13.1-7.5c1.3-0.1-1.9,4.9,1.6,2\n\t\t\t\t\t\t\tc5.1-4.2,11.2-7.2,14.2-13.9c1.4-3.2,5.5-5.1,8.6-7.8c0.8,1.6-1.2,2.3-1,4c1.9-1.7,6,0.5,5.6-4.5c-0.1-0.7,2.8-1.7,4.8-2.8\n\t\t\t\t\t\t\tc0,5.4-4.6,7.5-6.6,11c-0.3,0.5-1.5,0.8-1.6,0.1c-0.2-0.8,0.4-1.8,0.7-2.8c-1.5-0.4-2.5,0.9-2.6,1.7\n\t\t\t\t\t\t\tc-0.6,6.8-4.6,10.4-10.4,13.3c-1.2,0.6-2.9,3.9-4.9,5c-6.3,3.3-11.6,7.9-17.4,11.9c-1.1,0.8-3.7,0.3-3.1,2.3\n\t\t\t\t\t\t\tc0.7,2.2,2.8,0.5,4.3,0.5c1.2,1.9-1.9,1.8-1.1,3.8c3.6-0.8,6.3-3.7,9.4-5.4c2.6-1.4,7.1-2.1,6.4-7.1c-0.1-0.9,1.3-1.2,2.1-1.8\n\t\t\t\t\t\t\tc5.5-3.7,10.8-7.5,16.2-11.3c0.4-0.3,0.9-0.5,1.2-0.9c1.8-1.6,1-4.2,2-6c0.7-1.3,3.5,1.2,4.7-1.6c0.8-1.9,2.6-3.4,3.9-5.1\n\t\t\t\t\t\t\tc1.8,0.8,2.1,2.3,2,4.1c-0.8,2.5-0.3,5.2-1.5,7.6c-0.6,0.7-1.2,0.6-1.9,0c-1.5-1.9-2.7-1.3-3.8,0.5\n\t\t\t\t\t\t\tc-4.6,7.2-11.6,12.5-15.8,20c0,0.3-0.1,0.6-0.3,0.7c-7.9,3.6-15,8.6-22.7,12.5c-3-1.4-4.9,0.8-7.4,1.7c-4.1,1.4-8,3-11.9,4.8\n\t\t\t\t\t\t\tc-2,0.9-3.8,2-5.7,3.1c-5.4,2.1-11.2,3.1-16.9,3.3c-16.7,0.5-33.4,1.1-50.1-1.2c-1.6-1.4-3.7,0-5.3-1c-1.3,0-2.7,0.2-3.9-0.6\n\t\t\t\t\t\t\tc0-1.8-3.5-0.1-2.8-2.5c0.6-1.9,2.4-1.4,3.9-1.2c0.8,0.1,1.5,0.6,2.4,0.3c-2.8-2.4-8.1,1.2-9.7-3.9c1.6-2.3,1.7-2.4,3.6-1\n\t\t\t\t\t\t\tc0.6,0.4,1.1,0.3,1.7,0.4c9.8,0.3,19,4.5,27.5,4c-3.1,0.1-7.6-0.2-11.1-3.6c-0.7-0.7-1.8-0.9-2.8-1.1\n\t\t\t\t\t\t\tc-21.6-4.5-41.1-13.5-58.3-27.3c-12.5-10-24.1-20.8-32-35.6c-0.4,2-0.5,4-2.1,5.2c-3.7-1.7-6.2-4.8-9.1-7.5\n\t\t\t\t\t\t\tc-0.7-0.7-0.8-1.8,0-2.7c2.2,0.1,5.7,2.9,4.3-3.2c-1.3-5.8-1.7-12,0.2-18c0.2-0.6,0.1-1.4-0.1-1.9c-4.6-9.3-5.2-19.7-7.4-29.6\n\t\t\t\t\t\t\tc-1.4-6.3-0.2-12.4-0.5-18.5c-0.4-7.2,0.4-14.1,1.3-21.1c0.4-3,1.1-6.1,2.1-8.7c2.4-6.1,4.4-12.1,5.2-18.6\n\t\t\t\t\t\t\tc0.3-2,1.2-4,3.2-4.8c3.2-1.2,3.2-4.7,5.7-7.6c-1.2,6.4-3.6,11.2-5.8,16.1c-2.3,5.2-4.6,10.3-5.4,15.9\n\t\t\t\t\t\t\tc-0.6,4.2-2.8,7.8-3.8,11.8c-0.7,2.6,0,4.5,0.4,6.5c1.3,7.2-0.4,14.5,0.5,21.7c2.1,17,5.8,33.3,14.4,48.5\n\t\t\t\t\t\t\tc5.8,10.2,12.1,19.8,19.6,28.7c-0.4,2.4,1.7,3.3,3,4.4c3.3,2.9,6.6,5.8,10,8.5c1.5,0.8,3.3,1.2,4,3c3.3,2.4,6.6,4.8,10,7l0,0\n\t\t\t\t\t\t\tc13,8.3,27.1,13.4,42.2,16.1c3.5,0.6,8.5-0.1,8.5,6c0,1.1-1,1.9-0.9,3.1c1.5-1.3,1.5-3.1,1.5-4.9c0.6-2.4,2.6-2.3,4.4-2.3\n\t\t\t\t\t\t\tc7.3,0,14.6,0.4,21.8-0.2C421.5,728.2,429.5,727.3,437,724z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2B2726",
                    d:
                      "M510,696c0.2-1.5-0.3-2.8-1-4c3.3-3.9,5.8-8.3,6.7-13.4c0.2-1.3,0.7-2.6-1.5-1.4\n\t\t\t\t\t\t\tc-1.7,0.9-2.5-0.7-2.8-1.9c-0.4-1.2,0.5-1.8,1.8-1.7c0.3,0,0.7,0,1,0c-2.1-6.4,7.3-11.1,4-15.6c-2.8-3.9-0.9-6.2,0.3-7.3\n\t\t\t\t\t\t\tc6.5-5.9,4.8-14.1,6.6-21.2c1.7-6.7,0.4-13.6,1-20.4c0.3-3.1-0.2-6.2,1.8-9c1-1.4-0.2-3.1-0.3-4.6c-0.3-7.5-2.5-14.6-3.4-21.9\n\t\t\t\t\t\t\tc-0.4-3.5-1.6-6.7-2.8-10c-1.4-3.8-1.4-7.4,1.7-10.5c0.5-1.2,1.3-2.1,2.5-2.6c2.1-0.5,3.7,0.3,4.7,2c1.9,3.3,4.4,6.3,4.7,10.3\n\t\t\t\t\t\t\tc-0.1,0.5-0.3,0.9-0.5,1.4c-5.2-0.1-3.9-5.4-6.1-7.3c1.5,2.8,2.2,6.5,5.6,8.6c1.3,0.8,2,2.4,1.5,3.9c-0.6,1.9-2.4,0.2-3.8,1\n\t\t\t\t\t\t\tc3.7,3.5,3.3,8.4,4.3,12.8c-0.4-1.4-1.4-3.1,0.6-3.8c1.4-0.5,2.1,1.2,2.8,2.3c1,1.6,1,3.5,0.9,5.3c0,0.7-0.1,1.4-0.2,2.1\n\t\t\t\t\t\t\tc0.7,3.2,0,6.9,3.7,9.1c1.9,1.1-0.3,3.1,0.4,4.5c0.5,1.2,1.5,2.3,1.4,3.7c-0.8,2.8,0.9,6-1,8.7c-0.3,0.5-2.2,0.4-0.6,1.7\n\t\t\t\t\t\t\tc0.8,0.7,1.7,1.4,1.4,2.7c0,3.4-1.7,6.7-0.2,9.9c0.2-3.1,0.7-6.4,0.4-9.7c0.2-0.7,0.4-1.3,0.7-2c0.9-1.7,0.4-3.8,1.5-5.4\n\t\t\t\t\t\t\tc1.2-0.9,1.7-0.1,2.2,0.8c0,2.6,0.1,5.2,0.1,7.8c-1.3,2.6,0.6,5.6-1.1,8.2l0.1-0.1c-0.4,3.7-0.9,7.4-1.9,11\n\t\t\t\t\t\t\tc-1,1-1.1,3.8-2.5,3c-3-1.7-0.7-4.7-0.9-7.4c-1,2.5-0.3,5.4-2.1,7.5c-0.3,0.9-4.1-1.2-1.6,1.9c0.6,0.8,0.9,1.7,0.8,2.8\n\t\t\t\t\t\t\tc-0.2,5.3-2.9,10.2-2.3,15.5l0,0c-0.7,2.3-4.3,1-4.6,3.8c-0.3,0.6-0.7,1.2-1,1.8c-1.6,2.2-1.3,4.7-1.6,7.2\n\t\t\t\t\t\t\tc-0.1,0.7-0.3,1.4-0.7,1.9c-6.1-1.9-6.2,3.1-7.5,6.6c-0.2,0.4-0.5,0.8-0.8,1.1c-2.1,1.9-3.7,4.5-6.9,4.5\n\t\t\t\t\t\t\tc-0.5,0.1-0.3-0.9-0.9-0.6c0.3,0.4,0.9,0.4,1.2,0.9c0.4,1.7-0.3,2.9-1.6,3.9C512.3,694.4,511.7,696.4,510,696z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#181413",
                    d:
                      "M534,564c0-0.3,0-0.7,0-1c1.4-1.6,3.1,0.3,4.6-0.5c0.5-2.9-1.1-4.7-3.3-6.1c-1.2-0.8-2.4-1.8-1.2-3.6\n\t\t\t\t\t\t\tc2.4-3.5,1.2-6.2-3.2-8c-2.5-1-5.7-0.7-7.4-3.4c-0.5-2.2,0.5-3.1,2.7-3c1.6,0.1,3.2,0.5,5.2,0.9c-1.6-2.7-2.9-4.9-6.3-5.5\n\t\t\t\t\t\t\tc-2.3-0.4-3.4-3.4-4.9-5.3c-1-1.3-2.1-2.6-1.8-4.5c1.1-2.3,2.5-1.6,3.9-0.4c1.1,1,1.4,2.5,2.4,3.6c-1.5-4.4-4.7-6.1-9-6\n\t\t\t\t\t\t\tc-2.1-0.2-3.9-0.9-4.8-2.9c0.4-3.5,3.7-1.7,5.7-3c-2.1-4-5.1-6.2-9.8-5.7c-1.6-0.5-2.4-1.6-2.4-3.3c0.1-1.7,1.8-1.7,2.6-2.5\n\t\t\t\t\t\t\tc-3.4-5.1-8.5-5.9-14-5.7c-1-0.2-1.9-0.6-2.3-1.6c-0.1-0.8,0.1-1.4,0.6-2c1.3-1.9,3.2-1.8,4.7-1.4c-2.8-4.2-7.3-5.1-12.2-4.9\n\t\t\t\t\t\t\tc-2.1-0.5-3.7-1.5-4.1-3.7c0.5-2.6,2.2-1.7,3.6-1.3c-3.8-5.4-9.9-3.6-15.3-4.2c-0.4-0.2-0.8-0.5-1.1-0.9\n\t\t\t\t\t\t\tc-0.3-3.4,2-3.6,4.5-3.4c-4.9-2.3-9.7-5.2-15.4-3.5c-7-3.5-14.8-4.4-22.2-6.5c-6-1.7-12.2-3.4-18.3-5\n\t\t\t\t\t\t\tc-5.4-1.4-10.8-2-16.3-0.5c-2,0.5-4,1-5.9-1.1c-1.4-1.5-3.8-0.4-5.8-0.3c-0.4,0.1-0.9,0.2-1.3,0.3c-2.4,0-4.9-0.1-7.2,0.9\n\t\t\t\t\t\t\tc-5.1,0.3-9.9,2.4-14.9,3.2c-4.3-0.4-8.5,0-12.4,2c-7.1,2.4-13.5,6.2-20.4,9c-2.1-2.3-0.7-4.7,2.9-6\n\t\t\t\t\t\t\tc9.4-3.5,18.7-7.4,28.1-11.1c7.4-2.6,15.2-3.4,22.9-4c70.8-5,126.9,32.3,152.8,89.3c1.8,3.9,3.3,7.9,5,11.9\n\t\t\t\t\t\t\tc3.3,8.1,5.4,16.4,6.2,25.1l-0.1-0.1c1.5,2.2,0.3,4.6,0.7,6.9c-0.1,1.6,0.2,3.3-0.6,5.9c-3.1-4.1-5.2-7.6-4.8-12.4\n\t\t\t\t\t\t\tc0.3-3.6,0.4-7.4-3.7-9.4C537.9,567.9,534.1,568.1,534,564z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272222",
                    d:
                      "M263,606c0.3,0.7,0.7,2.2,0.9,2.1c4.4-0.5,3.3,3.3,5,5.5c-5.5-0.9-5.5-0.9-6.5,2.4\n\t\t\t\t\t\t\tc2,0.9,4.7-2.1,6,0.6c2.3,4.8-4.7,2.4-4.9,5.5c1.2,1.3,2.6,0.6,3.8,0.8c1,0.1,2.1,0,2.4,1.2c0.6,2.1-0.9,4.4,0.2,6.5\n\t\t\t\t\t\t\tc-2.1,0.6-4.1,0.9-6-0.6c-0.2-0.2-0.6-0.1-1-0.2c-4.2-5.8-5.9-12.6-7.1-18.5c-0.8,4.1,3.2,8.3,2.4,13.4\n\t\t\t\t\t\t\tc-0.3,1.7-0.6,2.8-2.3,3.1c-0.3,0.4-0.7,0.7-1,1.1c-0.9,4.6,3,8,3.1,12.3c-0.3,1.2-0.1,2.9-2.1,2.7c-3.7-9.5-5-19.6-5.8-29.6\n\t\t\t\t\t\t\tc-0.7-8.7-0.1-17.6,0-26.4c3.4,1,1.2,3.9,1.9,5.3c1.7-3.8-2.2-7.5-1.2-11.7c1-13.8,4-27.2,9.9-39.8c2.6-2,3.4-4.8,3.4-7.9\n\t\t\t\t\t\t\tc0.8-1.8,1.3-3.7,2.7-5.1c1.5-1.4,2.7-3,3.1-5.1c0.4-0.3,0.7-0.6,1.1-0.9c0,1.3,0.3,2.7-0.1,3.8c-1.1,3.3,0.5,3.8,3.1,3.3\n\t\t\t\t\t\t\tc0.8,2.7,0.8,2.7-0.7,4.9c2.1-0.4,1.5-2.5,2.3-3.6c1.3-1.9,1.2-5,4.4-5.3c0.9,2.7,0.5,4.8-1.7,7.1c-1.4,1.5-3.5,3.1-2.1,6.7\n\t\t\t\t\t\t\tc1,2.6-3.6,4.5-5.2,7.2c-2.3,0.6-4,0.3-3.5-2.7c0.2-1.5,0.6-2.9,0.7-4.2c-1.4,5.8-3.2,11.7-2.1,17.9c2.8,5.1,2.2,7-2.3,10.1\n\t\t\t\t\t\t\tc-1.8,1.2-0.7,3.9-1.5,5.7c1.7,0.5,0.7,1.2,0.4,2.2c-2.8,7.9-2.7,7.9,5,9.9c-5-0.6-1.8,7-7.6,5.4c1.8,2.3,3.5,1.4,4.8,2\n\t\t\t\t\t\t\tc1.6,0.7,2,2,1.8,3.1c-0.3,2.2-1.3-0.2-2,0c-1.6,0.5-1.8,1.5-0.8,2.6c1.6,1.8-0.4,2.6-0.8,3.9c-2.5-1.1-3.6-3.4-4.7-6.2\n\t\t\t\t\t\t\tc-1.2,5.3,1.4,9.8,1.6,14.5c1.3-2.1-2-4.9,0.9-6.7C261.7,604.1,262.5,605,263,606z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312C2A",
                    d:
                      "M275,671c0,1.7,1,2.9,2.3,3.6c2.9,1.5,4.9,3.8,6.7,6.4c4.4,3.2,7.1,8,10.7,11.9c2.3,2.6,0.1,4-2.6,4.5\n\t\t\t\t\t\t\tc-1.1-0.1-1.6-0.9-1.6-1.9c-3.2-4.2-5.7-9.3-12-9.6c-0.8,0.3-1.7,0.7-2.6,0.2l0,0c-0.4-4.6-2.9-8.1-5.2-11.9\n\t\t\t\t\t\t\tc-0.9-1.6-1.7-1.4-3-1c-1-0.4-0.8-1.3-0.8-2.1c-1.1-1.7,1.2-3.1,0.3-4.8c0.2-1.8-0.3-3.2-2-4c-0.7-0.7-1.1-1.4-0.3-2.2\n\t\t\t\t\t\t\tc4.3-0.4,4.9,3.8,7,6C273.2,667.4,274,669.3,275,671z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221D1B",
                    d:
                      "M541,568c4.8,1.6,4.6,6,4.3,9.5c-0.4,4.5,1.6,7.9,3.4,12.2c0.2-1.8,0.3-3,0.4-4.1\n\t\t\t\t\t\t\tc0.4,0,0.6,0.2,0.8,0.5c0,8.9-0.1,17.9-0.1,26.8c-0.6-0.3-1.2-0.7-1.8-1c-1.6-1.7-2.4-3.8-3-6c-0.7-1-1.3-2-2-3\n\t\t\t\t\t\t\tc4.2-3.7,3.8-6.3-1.1-9.8c-1.5-1-3.1-1.9-2.9-4.2c0-0.7,0-1.4,0-2c1.7-0.7,2.7,0.8,4.4,1.2C542.1,581.4,539.6,574.9,541,568z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#363231",
                    d:
                      "M291,695c0,0.8,0.2,1.6,1,2c5.8,1,8.7,6.1,12.9,9.3c2,1.6,4.5,2.8,6.2,4.8c0.6,0.7,1.4,1.6,0.8,2.6\n\t\t\t\t\t\t\tc-0.6,1.1-1.7,0.7-2.7,0.5c-2.2-0.6-4.4-2-6.4,0.2c-0.7,0.2-1.4,0-2-0.2c-0.5-0.5-1.1-1-1.6-1.5c-2.5-5.7-6.7-9.8-12.2-12.7\n\t\t\t\t\t\t\tc-1.5-1.5-3.7-2.5-4-5c0.1-0.1,0.3-0.3,0.4-0.4c1.7-1.2-0.3-1.6-0.6-2.4c-0.5-1.5-2.8-2.5-1.5-4.6c2.3-1,3.8,0.3,5,1.9\n\t\t\t\t\t\t\tC287.6,691.5,289.9,692.7,291,695z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#302B29",
                    d:
                      "M255.9,644c1.2-0.7,1-1.9,1.1-3c1.6-2-2.2-4,0-6c0.5-0.7,0.9-1.3,1.4-2.1\n\t\t\t\t\t\t\tc5.4,10.7,10.9,21.4,16.7,32.9c-4-2.1-4.9-5.9-7.7-7.9c-1.4-1-2.5-3.1-4.5-0.9c-3.3-1.8-2.5-5.6-4.1-8.2\n\t\t\t\t\t\t\tc-0.8-1.4-0.2-3.8-2.9-3.8C256,644.7,256,644.3,255.9,644z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#373230",
                    d:
                      "M358,740c1.5,3,4.3,2.1,6.6,1.9c3.1-0.3,4.4,0.9,4.6,3.9c-2.4-0.5-4.7-0.9-7.1-1.3\n\t\t\t\t\t\t\tc-0.7,2.1,2.2,1.4,1.8,3c-4.7-1.2-9.5-2.2-13.9-4.5c-2.6-0.9-4.8-2.4-7.2-3.8c-1.3-0.8-3-1.7-1.4-3.7\n\t\t\t\t\t\t\tC347.4,735.1,352.7,737.7,358,740z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3B3634",
                    d:
                      "M488.1,724.2c0.9-5.6,5.1-9.2,8.6-13.1c2.5-2.7,5.3-5.2,6.6-8.5c0.9-2.2,2.8-0.9,3.9-2\n\t\t\t\t\t\t\tc0.4-0.4,0.6,1.5,0.8,2.4c-0.5,2.5-1.7,4.5-3.6,6.1c-1.6,1.4-3.2,2.8-3.5,5c-0.2,0.6-0.4,1.3-1,1.7\n\t\t\t\t\t\t\tC496.1,718.9,492.6,722.3,488.1,724.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#403B38",
                    d:
                      "M440,747c4.5-4.7,10-7.4,16.4-8.3c0.9-0.1,1.9-0.1,2.1-0.8c1.6-5.4,4.2-1.7,6.5-0.8\n\t\t\t\t\t\t\tc0.5,0.4,0.6,0.8,0.1,1.2C457.1,742.1,448.9,745.5,440,747z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#56504D",
                    d:
                      "M256.1,645c1.3,0.6,3.2-0.3,3.5,2.6c0.4,3.2,2.2,6.3,3.4,9.5c0.7,1,1.3,2,2,3c0.3,0.7,0.7,1.3,1,2\n\t\t\t\t\t\t\tc1.2,1,1.9,2.4,2,4c1,2-0.6,3.4-1,5.1c-3.5-5.7-5.4-12.1-7.9-18.3C258.1,650.2,257.1,647.6,256.1,645z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#514A4A",
                    d:
                      "M465.1,738.2c0-0.4,0-0.8-0.1-1.2c5.3-5.6,13.3-6.9,19-12c1.2-1.1,2.5-0.2,3.8-0.1\n\t\t\t\t\t\t\tC480.8,730.4,473.2,734.8,465.1,738.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#5D5756",
                    d:
                      "M286.9,700.1c2.7-0.5,4.9,0.5,6.3,2.8c1.4,2.1,3.1,3.9,5.2,5.2c2.4,1.5,1.7,2.9,0.7,4.7\n\t\t\t\t\t\t\tC294.4,709.1,290.1,705.1,286.9,700.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4D4844",
                    d:
                      "M538.2,663.2c-1.7-2.9-1.9-6-0.3-8.8c1.4-2.4,0.1-5.3,2.1-7.4c1.8-0.4,1.9,1.3,2.7,2.1\n\t\t\t\t\t\t\tc0.2,0.4,0.4,0.8,0.5,1.2C542.2,654.8,540.7,659.2,538.2,663.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#46413E",
                    d:
                      "M540.9,643c0.5-3.5,1.1-6.9,1.7-10.8c4.5,2.8,0.4,6.7,1.6,9.8c0.6-0.7,1.2-1.4,1.8-2\n\t\t\t\t\t\t\tc0.6,1.4,0.9,2.7-0.3,3.9c-0.8,2.1-1.7,4.2-2.5,6.4c-0.2-0.2-0.3-0.4-0.5-0.6C542.2,647.4,539.6,645.8,540.9,643z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#56504D",
                    d:
                      "M267.8,673.1c1-0.1,1.1-2.2,2.7-1.1c3,2.1,6.3,10.6,5.4,14C272.5,682.2,270,677.8,267.8,673.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#5B5554",
                    d:
                      "M333,736c-6.6-2.7-12.6-6.3-18.2-10.7c0.2-0.4,0.6-0.7,1.1-0.8c7.3,0.4,12.6,4.2,17.2,9.6\n\t\t\t\t\t\t\tc0.1,0.2,0.2,0.4,0.3,0.7C333.4,735.1,333.3,735.6,333,736z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#5F5958",
                    d:
                      "M300.7,714.2c0.8-0.1,1.5-0.2,2.3-0.3c0.4-0.3,0.8-0.4,1.3-0.3c3.8,1.1,6.4,4,9.4,6.3\n\t\t\t\t\t\t\tc1.5,1.2,2.3,2.8,1.5,4.8c-0.1,0.2-0.3,0.3-0.5,0.4C309.6,722.2,304.8,718.6,300.7,714.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4B4543",
                    d:
                      "M333,736c0-0.3,0-0.6,0-1c2.8-1.1,5.6-1.7,8,1c2,3.6,6.5,4,9,7C344,741.6,338.4,738.9,333,736z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#544E4B",
                    d:
                      "M521,693.1c-2.4,3.9-5.6,7.1-8.9,10.1c-0.7-0.5-0.9-1.2-1-1.9c0-0.5,0-1,0.2-1.5\n\t\t\t\t\t\t\tc1.6-2.4,3.7-4.5,5.1-7.1c1.2-2.1,2.8-2.7,4.8-1C521.5,692.2,521.4,692.7,521,693.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3935",
                    d:
                      "M508,703c0.3,0.3,0.7,0.7,1,1c1.5-0.5,0.6-3.3,2.9-3c0.1,0.7,0.1,1.5,0.2,2.2c-0.5,1.7-1.7,2.8-3,3.9\n\t\t\t\t\t\t\tc-3.6,1.6-4.9,6.2-9.1,7"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3937",
                    d:
                      "M250.9,581.7c-0.1,2.7,2,4.6,2.5,7.2c0.4,2.6-1,4.7-0.1,7.9c-3.9-2.7-0.8-6.6-3.1-8.8\n\t\t\t\t\t\t\tC250,585.9,249.6,583.7,250.9,581.7z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#534D49",
                    d:
                      "M529.8,677.9c0.1-0.6,0.2-1.3,0.3-1.9c0.7-2.7,0.4-5.6,1.9-8c0.3-0.3,0.6-0.7,1-1\n\t\t\t\t\t\t\tc1.3-0.4,1.7,1.9,3.2,1.1c-1.6,3.9-3.4,7.7-5.9,11.1c-0.2-0.1-0.3-0.2-0.5-0.3C529.5,678.5,529.6,678.2,529.8,677.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#534D49",
                    d:
                      "M530.2,679.2c-0.3,0.6-0.7,1.3-1,1.9c-1.6,1.4-2.5,3.3-3.8,5c-0.9,1.2-1.7,3-3.8,1.7\n\t\t\t\t\t\t\tc-0.5-1-0.4-1.9,0.4-2.8v0c1-1.7,2.3-3.1,3-5.1c0.9-2.4,2.7-2.7,4.7-1.2C529.9,678.9,530,679,530.2,679.2z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#56504D",
                    d:
                      "M275.9,686.1c0.7-0.3,1.4-0.7,2-1c1.6,0.4,2.2,1.7,2.5,3.2c0.4,2.4,4.6,3.4,2.6,6.8l-0.2,0\n\t\t\t\t\t\t\tC279.3,693,277.7,689.5,275.9,686.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#7A7471",
                    d:
                      "M522.1,688.1c3.2-1.5,3.7-5.7,7.1-7c-2,4.5-4.8,8.4-8.1,12c-0.1-0.4-0.1-0.8-0.2-1.1\n\t\t\t\t\t\t\tC520.4,690.4,520.8,689.1,522.1,688.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4D4844",
                    d:
                      "M536.1,668c-1.5,1-2.3-0.4-3.2-1.1c-0.8-4.8,3.2-3,5.3-3.8C538.1,665,537.3,666.6,536.1,668z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#453E3D",
                    d:
                      "M264.1,534c1.5,3.8,0.9,6.6-3.4,7.9C261.9,539.3,263,536.6,264.1,534z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#504A47",
                    d:
                      "M277.9,511.8c-0.3,3.4-2,5.8-5.1,7.1C274.1,516.2,275.6,513.7,277.9,511.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#494342",
                    d:
                      "M269.9,523.8c0.4,2.6-0.7,4.2-3.1,5.1C267.6,527.1,268.4,525.2,269.9,523.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#373230",
                    d:
                      "M367.7,748.1c1.8,0,3.8-0.8,5.3,1C371.2,749.3,369.4,748.9,367.7,748.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M524,547c-4.9,0.6-3.8,6.3-7.8,8.6c-7.6-20-22.4-34.9-38.2-47.8c-16.2-13.1-35.2-22.8-56.8-26\n\t\t\t\t\t\t\tc0.7-2.1,2.8-2.2,2.9-4.3c0-1,2.7-0.7,4-0.3c1.3,0.4,2.9,1.1,2,3.2c-1,2.4,1.6,2,2.2,2c2.2,0,0.2-1.1,0.3-1.7\n\t\t\t\t\t\t\tc0-0.4,0.2-0.9,0.3-1.3c1.3,0.3,3.5,0.4,3.6,0.9c1,4.4,2.6,6.1,6.6,2.5c0.3-0.2,1.9,1,2.9,1.6c0.7,0.4,1.4,0.9,2,1.4\n\t\t\t\t\t\t\tc1.4,1,3.5,2.7,4.6,1c1.2-1.8-1.7-2.3-2.7-3.4c-0.6-0.7-2.1-0.2-2.3-1.7c2.5-3.2,4.9-1.1,7.3,0.1c1.9,1,3.6,3.4,5.9,0.5\n\t\t\t\t\t\t\tc0.4-0.5,1.2-0.6,1.5,0.8c0.9,3.8,1.5,3.9,4.5,2.2c1.3-0.7,2.3,0,3.2,0.7c1.1,0.9,2.9,2.8,2,3.4c-3.4,2.4-0.5,2.9,0.9,3.3\n\t\t\t\t\t\t\tc3.1,0.9,4.9,3.3,6.9,5.4c1.6,1.7,2.1,1.9,3.7-0.4c1.3-1.8,3.3,2.7,3.5-0.8c5.9,2.5,9.5,7.6,13.5,12.3\n\t\t\t\t\t\t\tc1.3,1.3,2.3,2.9,3.4,4.3c3.5,3.1,5.7,7.1,8,11.1c1.2,3.6,2.6,7.1,2.8,11.3c1-2,2.1-3,3.8-1.2\n\t\t\t\t\t\t\tC520.7,538.7,524.1,542.1,524,547z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2A29",
                    d:
                      "M467,478c0.3,0,0.7,0,1,0c4.5,1,9.1,1.8,12,6c0.9,1.6,2,2.9,4,3c2.3,1.3,4.5,2.7,6.6,4.4\n\t\t\t\t\t\t\tc1.1,0.9,2.6,1.8,1.4,3.6c-0.3,0.3-0.7,0.7-1,1c-1.6,1.4-2.9,0.5-4.2-0.6c-1.4-1.2-2.7-2.6-4.8-2.4\n\t\t\t\t\t\t\tc-10.5-9.3-23.1-15.3-35.2-22.1c-6.1-3.4-14-3.6-20.7-6c-9.7-3.4-19.7-2.6-29.6-3.9c-4.3-0.6-8.5,1.6-12.8,1\n\t\t\t\t\t\t\tc-1.6-0.2-3.4,0.5-4.7-1c0.8-3.9,5.3-1.5,7-4c4.4-1.6,4.9-1.5,8.6,1.1c0.4,0.3,1.3,0.1,1.9-0.1c10.2-3.5,20.1,0,29.6,2.5\n\t\t\t\t\t\t\tc7.5,2,15.1,3.6,22.5,5.7c2.8,0.8,4.5,3.4,7.4,3.8C460.9,471,465.4,472.4,467,478z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M374,476c0-0.2,0-0.3,0-0.5c0.8-2.4-3.1-2.5-2.4-4.9c3.3,1.2,5.6-1.8,8.6-2.3c5.3-0.9,10.6,0,16-0.8\n\t\t\t\t\t\t\tc6.3-0.9,13.2,0.2,19.5,1.8c5.7,1.5,11.7,1.6,17.2,3.8c4,1.6,8.1,2.9,12.1,4.5c0.9,0.3,2.1,0.8,1.4,2.1\n\t\t\t\t\t\t\tc-0.6,1.1-1.4,0.5-2.4,0.4c-8.9-1.2-16.9-5.5-25.8-6.7c-4.8-0.7-9.4-1.3-14.3-1.4c-3.1-0.1-4.3,1.1-3.9,4.1\n\t\t\t\t\t\t\tc-2.6,0.7-5.1,0.8-7.2-1.3c-0.3-1.9,2.2-1.5,2.6-2.7c-1.4,0.8-2.9,1.5-4.2,2.7c-4.4,1.7-9,1.6-13.6,2.3\n\t\t\t\t\t\t\tC376.3,477.3,375,477.1,374,476z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#322F2E",
                    d:
                      "M331,473c5.6-5.5,13.2-7,20-10c1.4-0.7,2.7-0.8,4.2,0.2c-1.4,3.2-4.8,3.6-7.2,5.2\n\t\t\t\t\t\t\tc-1.6,0.6-2.9,2.4-5,1.6c-9.8,7.2-21.1,12.2-30.6,19.9c-6.2,5-11.7,10.6-17.2,16.1c-4.1,4.1-7.6,8.9-11.8,13.2\n\t\t\t\t\t\t\tc4.4-6.1,3.8-14.6,10.4-19.5c1.9-1.4,1.7-1.6,5-1.2c1.3,0.2,1.5-1.1,2.1-1.8c5.5-7.9,12.4-14.4,20.9-19\n\t\t\t\t\t\t\tc0.5-0.3,1.1-1.6,1.8-0.4c0.2,0.4-0.4,1.2-0.6,1.8c-0.9,0.6-1.8,1.2-2.6,2c0.8-0.8,1.7-1.4,2.6-2\n\t\t\t\t\t\t\tC326.4,477.9,329.1,476,331,473z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2929",
                    d:
                      "M374,476c4.9-0.8,10-0.1,14.7-2.4c0.8-0.4,2.2,0.3,3.3,0.4c0.3-0.3,0.7-0.3,1,0c2,2,5,0.2,7,2\n\t\t\t\t\t\t\tc0.8,2.1,0.1,2.8-2,2c-10.9-0.2-21.6,0.9-32.2,3.7c-10.4,2.7-20.6,5.7-30,11.1c3.9-1.5,4.4-8.8,10.5-6.2\n\t\t\t\t\t\t\tc0.2,0.1,1.1-0.5,1.1-0.8c0.9-5.2,5.8-4.6,9.1-5.7c5.1-1.6,10-4.7,15.8-3.2C372.8,477,373.4,476.3,374,476z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2E",
                    d:
                      "M386,734c-0.2-5.3-4.5-5.2-8-5.9c-13.8-2.8-27.1-6.8-39.3-14.2c-1.2-0.7-2.1-1.6-2.7-2.8\n\t\t\t\t\t\t\tc8.2,3.6,16.2,7.8,24.6,10.6c23.6,7.9,47.7,8.7,72,3c1.4-0.3,2.9-0.5,4.4-0.7c-2.3,2.3-10.6,4.6-15.5,5.1\n\t\t\t\t\t\t\tc-10,1-20.1,0.9-30.1,0.9c-2.2,0-3.6,0.5-3.4,3C387.6,733.8,387.1,734.5,386,734z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#332E2C",
                    d:
                      "M524,547c-2-4-4-8-6-12c0.1-2,1.2-1.1,1.9-0.6c2.2,1.6,2.9,4.3,4.1,6.6c1.9,1.8,4.5,1.8,6.8,2.4\n\t\t\t\t\t\t\tc2.7,0.7,4.6,2.2,5.8,4.8c1.3,2.8,3,5.5-4.1,5.2c5.5,2.7,9.1,5.4,7.1,10.1c-0.9,2.1-3.7-0.7-5.7-0.5\n\t\t\t\t\t\t\tc-0.6-3.8-3.4-6.6-4.8-10.1c-0.7-1.6-2.4-2.1-4.2-1.9c-1.4-0.7-1.9-1.6-1-3C524,547.7,524,547.3,524,547z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#332F2F",
                    d:
                      "M343,470c1.3-0.7,2.7-1.3,4-2c3.2-1.3,6.5-2.5,9.1-4.7c2.3-1.9,5.3-1.4,7.9-2.3c4.9-1.3,9.6-3.7,15-3\n\t\t\t\t\t\t\tc2.2-1.3,4.8,0.3,7-1l0,0c2.2,0.6,1.5,1.4,0,1.8c-2.3,0.7-4.9,0.7-7,2.2c-11.1,3.4-22.8,4.9-33.3,10.1\n\t\t\t\t\t\t\tC344.3,471.8,343.6,471.2,343,470z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#363230",
                    d:
                      "M482,493c2.1-1.7,3.3,0.2,4.6,1.2c1.3,1.1,2.6,2,4.4,1.8c0.4,0.8,1.2,1,2,1c5.9,0.5,8.9,4.8,12,9\n\t\t\t\t\t\t\tc0,1.4,0.7,2.4,2,3c0.6,0.3-0.1-0.1,0.4,0.2c2.5,1.5,6.3,3.6,4.4,6.4c-2,2.9-4.1-1.4-6.3-2.4c-1.8-0.9-2.8-2.7-4.7-3.5\n\t\t\t\t\t\t\tc-0.3,0.1-0.6,0.3-0.9,0.4c-4.3-4.3-8.7-8.7-13-13C485.3,495.7,483.7,494.3,482,493z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2E2928",
                    d:
                      "M256,628c2.4-2.5,1.3-6.1,0.5-8c-1.8-4.4-1.5-8.6-0.8-13.1c1.5,8,4.7,15.5,7.3,23.1c0.6,3,1.2,6,2,9.5\n\t\t\t\t\t\t\tC260.8,636.1,261.7,629.5,256,628z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M398,478c1.3,0,2-0.7,2-2c3.6,0.9,5.9-3.4,9.8-2.1c2.8,1,5.9,0.8,8.8,1.5c1.1,0.3,3.2,0.1,2.9,1.9\n\t\t\t\t\t\t\tc-0.3,1.6-2,3.6-3.4,3.2c-3-1-6.4,0.5-9.1-1.5c-1.8-1.4-1.8-1.4-4.7-1.4c1.3,0.3,3.3-1.2,3.7,1.4\n\t\t\t\t\t\t\tC404.7,478.5,401.2,480,398,478z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2C",
                    d:
                      "M280,526c-3.1,2.8-3,7.7-6.8,11.1c0.4-3,0.6-5.1,0.8-7.1c-1.1-4.1,2.2-6.3,3.9-9.1\n\t\t\t\t\t\t\tc2.1-3.6,4.3-7.3,7-10.6C282.3,515.3,280.5,520.4,280,526z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2E2928",
                    d:
                      "M263,606c-2.6-0.4-2.9-0.2-2.2,1.2c1.5,3-0.1,5.5-1,8.2c-0.3-7-5.5-13.6-1.3-21.1\n\t\t\t\t\t\t\tc0.4,3.6,3.4,5.6,4.5,8.7C263.6,604,263.6,605,263,606z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2F2B2C",
                    d:
                      "M266,558c-0.7,0.1-2.1,0.8-1.8-0.4c1.4-6.2,0.1-12.9,3.5-18.7c0.5-0.9,0.7-2.7,2.2-2\n\t\t\t\t\t\t\tc1.7,0.8-0.1,1.8-0.2,2.7c-0.3,2.6-3.2,5.8,1.4,7.5C268.3,550.2,265.6,553.4,266,558z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2E",
                    d:
                      "M322,701c-5.3-2.9-9.7-6.8-13.6-11.4c-0.5-0.5,0-1.2,0.6-1.6C312.4,693.3,318.7,695.6,322,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#403B39",
                    d:
                      "M257,635c-0.8,2,2.2,4,0,6c-0.6-4-4.4-7.4-2-11.9C255.7,631,256.3,633,257,635z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#312D2E",
                    d:
                      "M336,711c-4.2-1.1-7.3-3.8-10-7C329.8,705.7,333.4,707.6,336,711z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2929",
                    d:
                      "M408,479c-1.6-2-4.2-0.2-6.2-1.7c3-0.6,5.7-0.5,8.4,0.6c0.5,0.2,1.7,0.2,0.3,1c-0.4,0.2-1,0.1-1.5,0.1\n\t\t\t\t\t\t\tC408.7,479,408.3,479,408,479z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M524,548c0.3,1,0.7,2,1,3c0,1.3-0.7,2-2,2C520.9,550.9,522.9,549.5,524,548z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272222",
                    d:
                      "M268,581.9c-1.3,0-2.6,0-3.9,0c0-0.2-0.2-0.6-0.1-0.7C265.5,579,266.7,580.5,268,581.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272222",
                    d:
                      "M263.3,578.6c0.2-0.2,0.5-0.8,0.8-0.8c1-0.2,0.8,0.7,0.8,1.3c0,0.3,0.6,1-0.4,0.9\n\t\t\t\t\t\t\tC263.9,579.8,263.3,579.6,263.3,578.6z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M341,736c-2.5-1.2-5.4-0.3-8-1l0,0c-0.1-3,2.1-2.7,4.5-3.1c-10.6-4.6-20.6-9.5-29.5-16.3\n\t\t\t\t\t\t\tc-1.2-0.9-2.8-0.8-4.1-1.6c-0.3,0-0.7-0.1-1-0.1c-0.2-1-2-2.8,0.9-2.4c2.4,0.4,4.7,1.4,7.4,1.7c-6.8-5-12.4-11.3-19.2-16.3\n\t\t\t\t\t\t\tc2.3-1.3,3.6-2.4,0.8-4.8c-3.7-3.1-6.6-6.9-8.8-11.2c0.6-2.4,1.3-4.7,1-7.8c4,2.3,4.2,6.4,6.5,9.1c4.3,5.2,9,10.2,13.5,15.1\n\t\t\t\t\t\t\tc6,6.5,12.7,11.8,19.4,17.3c8.3,6.8,18.1,10.8,27.8,15.1c3.9,1.7,8.4,2.5,11.9,4.4c5.1,2.8,11.3,1.3,15.7,4.7\n\t\t\t\t\t\t\tc4.4,3.4,9.7,3.4,16,5c-12.3,1.1-22.6-2.4-33.1-3.3c-1.6-0.1-2.6-4.6-4.5-0.7C351.9,740.3,346.9,736.4,341,736z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M511.9,701c-1.6,0.4-0.2,3.7-2.9,3c0.1-2.7-0.5-5.5,1-8c1.5,0.1,0.2-4,3-2c2.6,2.5-1.6,3.8-1,6\n\t\t\t\t\t\t\tC512,700.3,512,700.6,511.9,701z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#403C3B",
                    d:
                      "M386,734c0.7-0.3,1.3-0.7,2-1c0.9,2.8-1.7,3.6-2.9,5.4C385.3,736.8,382.5,734.8,386,734z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M280.7,674.5c-0.1-0.2-0.4-0.7-0.3-1c0.1-0.4,0.6-0.6,1-0.8c0.2,0.4,0.4,0.8,0.4,1.1\n\t\t\t\t\t\t\tC281.8,674.3,281.5,674.7,280.7,674.5z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#322E2D",
                    d:
                      "M541,568c1.7,7.4,1.6,15.1,4.8,22.6c-3.1-0.2-4.6-2.6-6.8-3.6c0.2-2.7-0.1-5.3-2.5-7.2\n\t\t\t\t\t\t\tc-1.1,2.2,1.9,4.2,0.3,6.9c-2-2.4-2.6-5-2.8-7.7c-0.2-2.3-0.6-4.6-2.2-6.4c-1-1.1-3.1-1.7-1.4-3.9c1.9-2.5,2.6,0.9,4.8,0.5\n\t\t\t\t\t\t\tc-3.5-5-8.2-9.1-8.4-16c3.4,3.3,3,8.7,7.2,10.9C535.2,567.3,538.7,566.6,541,568z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#35302D",
                    d:
                      "M539,589c0.8,1.5,1.9,2.8,3.5,3.2c4.1,1,4.4,4,4.6,7.5c0.2,3.5-1.1,4.3-4.1,3.3\n\t\t\t\t\t\t\tc-1.2-0.9-1.2-1.8-0.2-2.9c0.4-0.4,1.2-0.7,0.2-1.5C540.1,596.1,538.7,592.7,539,589z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3935",
                    d:
                      "M512,700c-1.9-2.4,2.1-3.8,1-6c1.3-1,1.8-2.4,2-4v0c2.3-1.7,4.7-3.3,7-5c0,1,0.1,2.1,0.1,3.1\n\t\t\t\t\t\t\tc-0.4,1.3-0.8,2.5-1.2,3.8c-1.7-0.4-2.9-0.2-3.8,1.7C515.9,696.1,514.3,698.4,512,700z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#423D3A",
                    d:
                      "M545,606c2.3,1.4,2.9,3.6,3,6c-0.3,2,0.8,4.3-1,6c-1.6-0.4-2.6-1.4-3-3\n\t\t\t\t\t\t\tC545.3,612.1,542.5,608.7,545,606z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#494441",
                    d:
                      "M546,619c0.4,2.1,1.4,4,0.8,6.2c-0.5,1.9-0.8,3.8-1.2,6c-4.4-4-2.3-8.2-0.6-12.3\n\t\t\t\t\t\t\tC545.4,618.7,545.7,618.7,546,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3E3935",
                    d:
                      "M529.8,678.7c-1.8-0.2-3.4-0.4-4.2,2c-0.6,1.8-1.7,3.5-3.6,4.3c0.6-1.9,0.9-3.9,1.5-5.8\n\t\t\t\t\t\t\tc1.6-5,3.6-3.8,6.3-1.3C529.9,678.2,529.9,678.5,529.8,678.7z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#1C1816",
                    d:
                      "M540.9,643c0.2,2.3,2.5,4.1,1.8,6.6c-2.3,0.5-1.3-2.3-2.7-2.7c-0.5-0.6-0.9-1.3-1.5-1.9\n\t\t\t\t\t\t\tc-1.2-1.2-2.5-3-1-4.2C539.5,639.3,539.6,642.5,540.9,643z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#15110F",
                    d:
                      "M546,619c-0.3,0-0.6-0.1-0.9-0.1c-1-0.8-2.1-1.6-3-2.5c-0.8-0.8-1.7-2-0.3-2.9\n\t\t\t\t\t\t\tc1.1-0.6,1.4,1.2,2.3,1.4c1.3,0.7,2.3,1.7,3,3C546.6,618.4,546.3,618.7,546,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#4D4844",
                    d:
                      "M532,667.9c-0.4,2.7-0.6,5.5-1.9,8C530.1,673.1,529.5,670.2,532,667.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M515,690c-1.7-0.3-1.7-0.3-0.1-2.6C515.9,688.2,514.7,689.1,515,690L515,690z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2C2927",
                    d:
                      "M524,541c-2.9-1.1-2.4-5.6-6-6c-0.6-0.1-1.8-0.6-1.6-0.1c1.3,4.3-2.2,2.1-3.7,2.8\n\t\t\t\t\t\t\tc2.2-4.7-1.1-8.5-1.7-12.7c2.2-2.8,3.7-0.6,5.2,0.9c1.4,1.4,2.3,3.4,4.8,2.1c2.1,1.9,3,4.7,7,5.1c2.2,0.2,3.9,4.8,6.4,8.2\n\t\t\t\t\t\t\tc-3.4-0.7-5.9-1.3-8.5-1.9C524.5,539.1,524.2,539.9,524,541z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#373331",
                    d:
                      "M521,528c-0.6,3.1-1.5,3.6-3.9,0.9c-1.6-1.8-2.3-5.6-6.2-3.9c-2.7-3.7-5.3-7.3-8-11\n\t\t\t\t\t\t\tc0.2-0.7,0.6-1.2,1.3-1.4c2.9,0.9,5,2.9,6.6,5.4c1.6,0.9,2.9,2.4,5,2c1.3,1.1,2.4,2.3,3,4C518.9,525.7,520.4,526.6,521,528z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#272423",
                    d:
                      "M511,518c-2.3-1.7-4.7-3.3-7-5c-1.9-0.8-2.8-2.5-4-4c-1-3.6,0.9-1.4,1.6-0.8c3.1,2.5,6.2,5.2,10.3,8.7\n\t\t\t\t\t\t\tc-0.7-4.5-3.9-5.5-4.9-7.9c5.1-1.6,8.1,0.3,11.3,7.4C516.1,518,513,515.8,511,518z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#25211E",
                    d:
                      "M505,506c-2.5-0.5-3.7-2.7-5.2-4.4c-1.9-2.1-4.2-3.5-6.8-4.7c7.3-1.1,12.7,1.7,16.6,8.1\n\t\t\t\t\t\t\tC508.3,506.5,506,503.8,505,506z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#201B19",
                    d:
                      "M480,484c-4-2-8-4-12-6c11.7-0.1,11.7-0.1,18.5,5.9C484.4,487.4,482.1,481.6,480,484z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#201B19",
                    d:
                      "M467,478c-2.7-4-7.1-5.7-11-8c6.5-2.7,11.2,1.1,16.4,4.3C470.4,475.6,467.4,474.9,467,478z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#201B19",
                    d:
                      "M492,495c-1.4-3.9-6.5-4.2-8-8c6.6-1.2,10.8,2.4,14.9,7C496.5,494.8,493.8,492.4,492,495z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2C2927",
                    d:
                      "M519,524c-1.6-0.9-2.9-2-3-4c6.3-0.3,8.8,4,11.2,9c-2.8,0.7-3.8-0.5-4.6-2.6\n\t\t\t\t\t\t\tC522,525,521.8,522.2,519,524z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M364,461c-5.8,2.1-10.8,5.9-17,7c2.4-1.4,4.7-2.9,7.2-4.4c-0.9-1.1-2.1-0.4-3.2-0.6\n\t\t\t\t\t\t\tC355,460.4,359.4,460.1,364,461z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#2D2A29",
                    d:
                      "M386,457c-2.1,1.9-4.7,0.6-7,1C381.1,455.7,383.6,457,386,457z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3D3838",
                    d:
                      "M251.5,600c1.5,3.5,1.5,7.2,1.4,11.9C249.8,607.5,251.5,603.7,251.5,600z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#413D3C",
                    d:
                      "M252.3,614.4c1.7,4,2.2,7.3,2.2,10.7C252.3,622.2,251.9,620.1,252.3,614.4z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3F3938",
                    d:
                      "M255.5,568.9c-0.7-2.9-0.7-5.5,1.1-8.1C257.7,563.9,255.4,566.3,255.5,568.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#423C3B",
                    d:
                      "M258.5,553.8c0.7,1,0.6,2.1,0,3.4C257.8,555.9,257.8,554.9,258.5,553.8z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M280,688c-0.7-1-1.4-2-2-2.9c3.8-2.4,5.8,1.2,8,2.8c2.1,1.6,3.5,4.2,6,5.8c1.2,0.8-0.1,1.2-0.9,1.3\n\t\t\t\t\t\t\tc-3.7-1.7-5-7-10-7C280.7,688.5,280.3,688.5,280,688z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M268,666c-1.2-1-1.8-2.4-2-4C268.7,662.3,269.2,663.7,268,666z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#595453",
                    d:
                      "M280,688c0.3,0,0.7,0,1,0c1.9,2.6,3.8,5.2,6.2,8.4c-1.8-0.6-3-1-4.2-1.4\n\t\t\t\t\t\t\tC283.7,691.9,280,690.8,280,688z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#393433",
                    d:
                      "M304,714c1.7-0.1,3.3-0.1,4.8,0.9c9.7,6.8,20.3,11.9,31.1,16.7c0.4,0.2,0.5,0.7,1.1,1.5\n\t\t\t\t\t\t\tc-2.7,1-6.2-1.9-7.8,1.8c-5-5.1-10.7-8.8-17.8-10.2C313.4,719.2,308,717.4,304,714z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#3A3634",
                    d:
                      "M500,509c1.7,1,3,2.3,4,4c-0.3,0.3-0.7,0.7-1,1c-1-1.3-2-2.7-3-4C500,509.7,500,509.3,500,509z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M393,474c-0.3,0-0.7,0-1,0c-0.1-3,3.8-2.4,4.4-4.8c0.4,0.2,1,0.3,1.2,0.6c0.5,0.7,0.3,1.6-0.3,2.2\n\t\t\t\t\t\t\tC396.1,473.2,394.7,473.8,393,474z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: "#221E1F",
                    d:
                      "M323,479c-1.2,2-2.8,3.6-5.1,4.4C319.2,481.5,320.2,479.3,323,479L323,479z"
                  }
                })
              ]),
              _vm._v(" "),
              _c("g", { attrs: { id: "bar" } }, [
                _c("circle", {
                  attrs: { fill: "#393533", cx: "402", cy: "605", r: "85.5" }
                })
              ])
            ]),
            _vm._v(" "),
            _c("g", { attrs: { id: "disk" } }, [
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("E7D6D5"),
                    d: "M341,707c0.8-1,1.5-2,2.9-2.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M400.8,567.4c0.1,1.2,0.5,3.5,0.4,4.9c-3,2.1-3.5,3.6-2.4,8.1c0,2.2-1.6,3.1-3.2,4\n\t\t\t\t\t\t\t\tc-2.2,1.2-4.4,2.3-6.1,4.1c-2.4,2.5-5,2.8-8,1.5c-4.5-1.1-6.1,1.8-7.3,5.3c-0.5,1.5,0.2,3.3-0.9,4.7c-4.3-0.7-7.9,2.7-12.2,2\n\t\t\t\t\t\t\t\tc-0.8,0-1.6-0.2-2-1c0.2-3.1,2.2-4.5,5-4.9c1.6-0.2,3.2-0.7,4.5-1.6c0.3-0.3,0.5-0.7,0.7-1c0.2-1,0.2-2,0.2-2.9\n\t\t\t\t\t\t\t\tc0.1-2.4,1.5-4.8,0.8-7.2c-0.9-2.8-4-1.6-5.8-2.9c-0.6-0.5-0.8-1-0.3-1.6c1-0.6,3.8-5.1,4.7-4.3c12.5-2.2,8.8-1,11.4-11.3\n\t\t\t\t\t\t\t\tc2.9,0.4,13.6,2.3,17.1,1.6"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M358.8,577.2c1.5,0.7,3.2,0.7,4.7,1.3c0.2,0.2,0.3,0.3,0.5,0.5c0.2,0.2,0.4,0.6,0.7,0.6\n\t\t\t\t\t\t\t\tc7.6,1.8,7.7,1.8,6.1,9.9c-0.4,1.8,1.2,4-0.8,5.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M367.7,592.1c1.5,0.4,2.2,1.4,2.3,2.9h0c-4.1,1-8.8,0.5-11.3,5.2c-0.3,0.6-1.8,0.5-2.7-0.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8F3038"),
                    d:
                      "M366,612c0-0.3,0-0.7,0-1c2.7,0.2,5.2,0.3,7.6-2c1.4-1.4,4.1-2.2,5.5,0.9c-0.6,1.3-2.8,1-2.8,3.1\n\t\t\t\t\t\t\t\tc2.4,0.2,1.9-2.1,2.7-3.1c3.1-1.7,2.5,3,4.7,2.8c2.3,2.3,3.9,4.7,0.8,7.6c-2,1.4-2.3,3.6-2.5,5.8c-0.6,2.3-2.1,2.6-3.6,1\n\t\t\t\t\t\t\t\tc-2.7-2.9-5.4-2.3-8.3-0.4c-0.4,0.6-0.8,1.2-1.5,1.5c-0.6,0-1-0.3-1.2-0.7c-0.8-1.5-0.7-3.1-0.8-4.6\n\t\t\t\t\t\t\t\tC366.7,619.3,364.4,615.8,366,612z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M379,610c-2-1.8-4.5-1.6-5.6,0.3c-2.4,4.2-6.5,2.9-9.1,1.3c-7.8-3.9-1.2-6.8-3.3-9.6\n\t\t\t\t\t\t\t\tc2.5-2.4,6.5-1.1,9-4c1.3-1.5,1.7,1.8,3.1,2c1.7-0.4,2.7,0.9,4,1.6c5.4,2.9,7.2,6.3,5.9,11.5c-0.5,1.8-1.2,2.7-1.9,0.2\n\t\t\t\t\t\t\t\tC380.7,611.8,381.1,610.1,379,610L379,610z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M366,612c0.7,3.7,1.3,7.4,2,11c-1.3,0.7-0.6,3.3-2.9,3c0.2-4-0.2-7.9-1.4-11.8\n\t\t\t\t\t\t\t\tC362.9,611.9,363.6,611,366,612z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A14E56"),
                    d:
                      "M356,575.2c3.3,0.8,6.5,2.1,10,1.8c1.7-0.1,1.2,1,1,2c-1,0-2,0-3,0l0,0c-1.5-1.1-3.4,0.1-5-0.8"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M356,600c1.1-0.1,2.2,0,3-1.1c2.7-3.9,6.4-5.1,11-3.9c-1.9,1.1-3.6,2.6-6.2,2.2\n\t\t\t\t\t\t\t\tc-2.7-0.4-3.2,2.6-4.8,3.8C357.9,601,356.7,601.2,356,600z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("5C1216"),
                    d:
                      "M419.8,567.5c-0.2,1.2-1.4,4.1-2.5,4c-0.8-0.1-1.8-1.1-2.2-0.2c-1.5,3-4.1,1.9-6.4,2.2\n\t\t\t\t\t\t\t\tc-1.4,0-6.6,0.1-7.5-1.1c0-1-1.5-10.7-1.3-13.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3A40"),
                    d:
                      "M438.3,638.2c-1.1-3-4.2-5.2-3.8-8.9c2-2.3,1.8-4.5,0-6.8c-0.4-2.7,1-5,1.7-7.5\n\t\t\t\t\t\t\t\tc0.8-1.7,1.5-3.5,1.9-5.4c1.9-6.1,6-10.1,11.8-12.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("9F3A40"),
                    d:
                      "M448.3,601.9c-3.3,1.5-5.3,4.5-6.6,7.8c-3.9,9.9-5.9,19.2,1.5,29"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("86262D"),
                    d:
                      "M419.9,648c-1.3-1-2.6-2-3.9-3c-1.3-0.7-2.3-1.7-3-3c2.2-2.5,4.6-4.8,6.8-7.3\n\t\t\t\t\t\t\t\tc2.7-3.2,4.4-3.1,7.2,0.2c1.8,2.2,3.3,4.6,4.8,7"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A74D4E"),
                    d:
                      "M324,696c0.7,0.7,1.3,1.3,2,2c0,0.3,0,0.7,0,1c-4.1-1.1-6.2-4.7-8.9-7.3c-2.3-2.3,0.9-3.9,1.9-5.7\n\t\t\t\t\t\t\t\tC319.5,689.9,322.1,692.8,324,696z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4B1014"),
                    d:
                      "M376,602c-0.9-0.7-1.9-1.4-2.8-2.1c-1-4.7-0.3-8.7,4.4-11.2c1.2-0.6,2.4-1.1,3.5,0.2\n\t\t\t\t\t\t\t\tc2.2,1.9,6.4,1,7,5.1c-0.1,2.6-0.8,5.1-2.1,7.4C382.9,606.6,379.3,602.7,376,602z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("501115"),
                    d:
                      "M405,572c1.5-0.1,2.8,0.3,4,1c3,1.4,3.2,4,2.9,6.9c-0.6,2.3-1.2,4.7-3.5,6c-2.2,1.4-4.4,1.7-6.7,0.3\n\t\t\t\t\t\t\t\tc-2.4-1.3-3.2-3.6-3.7-6.1c-1.9-4.3,0.2-6.6,4.1-8C403,572,404,572,405,572z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("5A1216"),
                    d:
                      "M397.9,580c1.3,1.7,2.2,3.8,4.1,5c-5.7,1.9-10.1,5.7-15,8.9c-0.5-3.4-4.6-2.6-6-5.1\n\t\t\t\t\t\t\t\tc3.1,0.9,5.9,1,8.1-1.9C391.4,583.9,396.6,584.3,397.9,580z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("230809"),
                    d:
                      "M389.9,580.9c0,1.6-0.6,2.7-1.9,2.7c-1.7-0.1-3.3-0.8-3.7-2.6c-0.4-1.7,1-2.4,2.3-2.6\n\t\t\t\t\t\t\t\tC388.5,578.1,389.3,579.7,389.9,580.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M367,630c0.4-0.7,0.7-1.3,1.1-2c0.3,0,0.6,0,0.9,0c1.4,0.5,2.2,2.5,4.5,1.7c-0.5-2.5-3.5-2-4.5-3.7\n\t\t\t\t\t\t\t\tc2.6-2.8,7.1-3,9.3-0.4c1.1,1.3,1.1,1.3,2.7,0.3c1.6-0.3,1.6,0.9,2.3,1.8c-1.8,2.5-1.3,1.6-2.7,3.2"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A161A"),
                    d:
                      "M376,602c3-0.5,6.5,3.7,9-1c0.7,0.5,1.1,1.3,1.1,2.1c-0.3,5.5,2.2,10,5.1,14.4\n\t\t\t\t\t\t\t\tc-1.7,2.1-4,2.9-6.6,2.9c-0.2-0.2-0.4-0.3-0.6-0.5c3-2.7,0.2-4.7-0.9-6.9C382.5,608.2,380.7,604.1,376,602z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M369,626c1.1,0.2,2.3,0.3,3.3,0.7c1.3,0.4,3.2,0.4,3.3,2.3c0.1,1.3-1,2-2,2.6c-1.9,1-3.1-0.4-4-1.7\n\t\t\t\t\t\t\t\tc-0.4-0.5-0.4-1.2-0.6-1.8C369,627.3,369,626.7,369,626z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("240605"),
                    d:
                      "M379,610c1.1,1.9,1.8,3.8-1,4.8c-1.8,0.6-3.7-0.1-3.7-2.1C374.2,609.4,376.9,610.1,379,610L379,610z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A161A"),
                    d:
                      "M383,628c-0.7-0.7-1.3-1.4-2-2c0-2.5-0.2-5.1,2.9-6c0,0,0.1,0.1,0.1,0.1c0.4,2.3-0.7,4.6-0.3,6.9\n\t\t\t\t\t\t\t\tC383.6,627.4,383.3,627.7,383,628z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("581216"),
                    d:
                      "M383,628c0-0.3,0.6-0.6,0.6-0.9c3.4,0.3,5,3,8.1,3.9c2.3,2.8,5.3,4.3,8.9,4.9c2,0.3,4.2,0.6,6.1,3.2\n\t\t\t\t\t\t\t\tc-6.2,0.9-12.1-0.1-17.6,2l0,0c-1.4,0.6-8.6-9.8-9.6-8.6"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1519"),
                    d:
                      "M419,570c-5.7-7.4,14.1,2.2,15,9c0.1,1.8-1.3,2-2.3,1.7c-5.7-1.6-11.5-3.4-14.9-9\n\t\t\t\t\t\t\t\tc0.1-0.2,0.1-0.5,0.2-0.7C417.8,571,418.5,570.8,419,570z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1519"),
                    d:
                      "M411,580c0.4-2.6-0.8-4.8-2-7c1.8-1.5,5.8,0,5.6-4.2c1.4,0.1,1.8,1.2,2.4,2.2l0,0\n\t\t\t\t\t\t\t\tc-1,1.1-0.3,2.1,0.1,3.1c1,2.6-0.1,3.6-2.7,3.5c-1.4,0.2-1.5,1.7-2.3,2.5C411.7,580.3,411.4,580.3,411,580z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1C24"),
                    d:
                      "M436.3,593.9c-0.5-0.1-0.9-0.2-1.3-0.5c-1.1-1-2-2.3-3.6-2.8c-2.6-1.3-5,0.8-7.6,0.6\n\t\t\t\t\t\t\t\tc-3.2-1.7-6-4.4-10.2-3.4c-0.8,0.2-1.5-0.5-1.9-1.3c0.2-1.1,0.7-2.2-0.2-3.2c-1-1.2-1-2.4,0.5-3.3c0.2-1.6-0.7-3.7,2-4\n\t\t\t\t\t\t\t\tc1.2,2.4,5.1,2.1,5.6,5.3c0.2,0.4,0.4,0.8,0.6,1.2c1.2,3,2.9,2.9,6.1,2.7c5.4-0.4,8.7-5.1,14-5.3c1.8-0.1,0.1-0.1,0-0.2\n\t\t\t\t\t\t\t\tc-0.5-0.1-0.9-0.3-1.3-0.6c-0.1-0.8,0-1.4,1.1-1.1"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71161B"),
                    d:
                      "M419,582c-0.7-2.8-4.8-2.8-5-6c1.5,0.5,3.7,1.8,1.9-1.5c-0.9-1.7-1.6-3,1.1-3.5c4.8,4.6,9.6,8.9,17,8\n\t\t\t\t\t\t\t\tc0.7-0.1,1.4-0.1,2-0.2c1-0.7,2-0.7,2.9,0.1c1.3,0,2.6,0,5,0c-4.6,2.6-8.8,3.3-12.2,6.4c-1.4,1.4-5.8,1.7-8.8,2.1\n\t\t\t\t\t\t\t\tC420.4,587.8,419.5,584.5,419,582c0.5-0.5,1.7-0.1,1.9-1.2C419.9,580.6,419.6,581.6,419,582z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("571116"),
                    d:
                      "M452.7,597.2c-6.2,2.5-11.5,6-13.7,12.8c-1,1.5-1.2,3.4-2,5c-0.6,2.7-1.3,5.3-1.9,8\n\t\t\t\t\t\t\t\tc1.2,2,1.3,4-0.1,6c0.3,3.4,3.6,5.5,4.1,8.9c0.7,1,0.6,1.8-0.5,2.4c-1.9,0-2.7-1.6-3.7-3c-0.7,1.9,0.6,4.1-1,5.8\n\t\t\t\t\t\t\t\tc-0.4,0.2-0.9,0.2-1.3,0c-2-1.6-3.2-3.8-4.4-5.9c-1.5-2.7-3.5-4.8-6.3-6c-0.2-2.8-1.1-5.6,0.5-8.5c1.4-2.6-2.6-2.5-2.6-4.5\n\t\t\t\t\t\t\t\tc0.8-1.3,2.8-1.3,3.3-2.9c1.8-3.9,4.6-7.6,2.7-12.3c1.8-1.9,4.9-2.2,5.8-5.2c0.7-0.1,1.6,0.9,2.1-0.1c0.2-0.5-0.6-1-0.9-1.6\n\t\t\t\t\t\t\t\tc-0.1-1.6,0.7-4.2,2-4.8"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("A9605E"),
                    d:
                      "M435,629c0-2,0.1-4,0.1-6c4-0.6,1.4,2.4,1.8,3.6C437.2,627.6,437.9,630,435,629z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7A2023"),
                    d:
                      "M437,615c-0.1-2,0.4-3.7,2-5C439.1,612,438.6,613.7,437,615z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("601317"),
                    d:
                      "M422,631c2.5-0.2,3.9,1.1,5.1,3.1c1.9,3,3.9,6,5.9,9c-0.7,0.5-1.3,0.5-2,0c-0.2-0.3-0.3-0.6-0.5-0.9\n\t\t\t\t\t\t\t\tc-2.5-2.8-3.5-8.1-7.1-8.4c-3.1-0.2-5,4.6-7.4,7.1c-0.9,1-2,1-3.1,1.2c-7.9-3.2-15.9-1.6-23.9-1c4.9-3.2,10.5-1.6,16.3-2.2\n\t\t\t\t\t\t\t\tc-3.9-2.4-8.6-1.1-11.9-4c-1.3-1.1-2.7-1.8-2.4-3.8c4.2-3.8,1.7-8.1,1.1-12.3c1.2-0.6,2.6-0.3,3.1,0.7\n\t\t\t\t\t\t\t\tc2.3,4,6.4,7.1,6.8,12.2c0.4,0.9,0.8,2,1.9,1.4c1.7-1,0-2.1-0.2-3.2c0.3-2.6,2.2-3.7,4.4-3.7c2.2,0,2.8-1.2,3-3\n\t\t\t\t\t\t\t\tc0.2-0.5,0.4-0.8,0.8-1.2c0.5-0.2,0.9-0.1,1.3,0.1c1.6,2.4,0.6,5.9,3.3,7.9c1.3,1.2,2.8,0.9,4.3,0.7\n\t\t\t\t\t\t\t\tC421.3,630.5,421.7,630.7,422,631z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("601317"),
                    d:
                      "M385,643.1c0.7-1.9,2.3-2.2,4-2C388,642.2,386.6,642.8,385,643.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7E1C23"),
                    d:
                      "M431,643c0.7,0,1.3,0,2,0l0,0c0.3,0.2,0.4,0.4,0.3,0.6c-0.1,0.2-0.2,0.3-0.3,0.3"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7E2027"),
                    d:
                      "M412,586c3.5,1.2,7.8-0.3,10.8,3.1c0.6,0.6,1.1,1.1,1.2,1.9c0.3,0.9-0.2,1.2-0.9,1.5\n\t\t\t\t\t\t\t\tc-0.5,0-0.9-0.1-1.3-0.3c-2.5-2.5-5.3-3.5-8.8-2.4c-0.7,0.2-1.4,0.2-2.1,0.2c-0.5,0-1-0.1-1.4-0.2\n\t\t\t\t\t\t\t\tc-12.6-0.8-17,2.7-19.3,11.5c-1.4,5.4,1.4,9.9,3.4,14.6c0.2,1.5-0.1,2.6-1.9,2.6c-0.2-0.1-0.4-0.3-0.7-0.4\n\t\t\t\t\t\t\t\tc-5.8-4.3-6.4-10.5-6-17c0.7-2.3,1.3-4.7,2-7c3.8-5,8.2-9,15-8.9c2,1.8,4,0.8,6-0.1C409.5,584.7,410.9,584.7,412,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("71161B"),
                    d:
                      "M412,586c-1.5,0.1-2.8-0.3-4-1c2.1-1,1.6-3.6,3-5c0.3,0,0.7,0,1,0c-1.1,1.8,0.2,2.6,1.3,3.7\n\t\t\t\t\t\t\t\tC416.1,586.2,413.6,585.9,412,586z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M392,619c4.6,6.1,4.4,9-1,12c-3.9,1.2-5.5-2.4-8-4c-1.2-2.5-0.5-4.8,1-7c2.4-0.4,4.2-2.9,7-2l0,0\n\t\t\t\t\t\t\t\tC391.3,618.4,391.9,618.4,392,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("490F13"),
                    d:
                      "M423,592c0.3-0.3,0.7-0.7,1-1c2.5-1.8,5-3.2,8-1c1.2,0.8,2.2,1.8,3,3l0,0c0.1,1.5-1.4,2-2,3\n\t\t\t\t\t\t\t\tc0.5,1.1-0.1,1.6-1,2c-1.2,4.6-1.2,4.6-6,4.8c-0.2,0.1-0.4,0.3-0.6,0.4c-0.5-0.1-1-0.3-1.3-0.7\n\t\t\t\t\t\t\t\tC420,597.4,419.8,595.7,423,592z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("571116"),
                    d:
                      "M435,593c-1.4-0.6-2.4-1.6-3-3C433.9,590.1,434.9,591.1,435,593z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("3A0D0E"),
                    d:
                      "M419,582c0.2-1.3-0.7-3.2,1.3-3.7c1.7-0.4,2,1.3,2.5,2.4c0.3,0.8,0.2,1.7-0.4,2.3\n\t\t\t\t\t\t\t\tC420.8,584.3,420.1,582.2,419,582L419,582z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M423,592c-2.9,4.3,0.5,7.5,2.1,11c-0.1,1.4-2.3-2.4-2.2,1.1c0.1,3.2,0.2,7.1-3.4,9.2\n\t\t\t\t\t\t\t\tc-1,0.1-1.6-1.5-2.5-0.8c-0.7,0.5,0,1.5,0.4,2.2c1.8,2.5,4.6,0.1,6.7,1.4c-0.3,2.7-2.4,1.8-4,2c-2.2,1.6-4.5,3-7,4\n\t\t\t\t\t\t\t\tc-0.3,0-0.7,0-1,0c-4-0.1-8.1,2.9-12.1,0c-0.2-0.4-0.2-0.9,0.1-1.3c1-0.9,2.4-0.6,3.7-1c-0.5-0.7-1.3-1-1.8-1.6\n\t\t\t\t\t\t\t\tc-6.4-8.5-5.4-18.3,2.8-24.7c4.2-3.3,8.8-1.5,13.2,0c0.7-0.3,2.1,2.7,2.4-0.5c0.1-0.7,0.8-1.4,1.7-1\n\t\t\t\t\t\t\t\tC422.3,592,422.7,592,423,592z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("470F13"),
                    d:
                      "M413,622c1.5-2.7,3.9-4,7-4c3.3,1.2,6.7,2.5,2.7,6.6c-2,2,2.3,4.6-0.7,6.4c-0.3,0-0.7,0-1,0\n\t\t\t\t\t\t\t\tc-1.7,0.7-3.3,0.7-5,0C412.5,628.8,412.9,625.4,413,622z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8A2A31"),
                    d:
                      "M424,616c-1.9,1.2-4,1-6.1,1c-1.7,0-1.1-1.1-0.9-2c0.4-0.3,0.8-0.5,1.2-0.6c3-0.2,3.4-2.8,4.4-4.8\n\t\t\t\t\t\t\t\tc1.1-2.2,1.2-4.9,3.4-6.6c0,0,0-0.3,0-0.3c3,1.7,2,4.1,1.1,6.4C426.1,611.5,425,613.8,424,616z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("601317"),
                    d:
                      "M433,644c0-0.3,0-0.6,0-1c1-2.7,0.5-5.4,0-8.7c3,1.3,3.5,3.9,5,5.7c-3,1.5-1.7,4-1.2,6.7\n\t\t\t\t\t\t\t\tC435.3,645.6,434.1,644.8,433,644z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6C151A"),
                    d:
                      "M432,598c0.3-0.7,0.7-1.3,1-2c1.2,0.1,2.8-0.3,2.8,1.7c0,1.1-0.7,1.8-1.7,2.1\n\t\t\t\t\t\t\t\tC432.7,600.2,432.1,599.3,432,598z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("7B1D22"),
                    d:
                      "M392,619c-0.3-0.3-0.7-0.7-1-1c1.3,0,1.9-0.7,2-2c3.3,0.3,5.6,2,7,4.9l0,0.1c1.8,3.2,5.6,4.5,9,3.2\n\t\t\t\t\t\t\t\tc1-0.4,1.6-1.7,3-1.3c0,2.3,0.9,5.2-3.4,4.1c-2.2-0.5-3.6,1.1-4.6,2.9c-0.5,1.5-1.5,2-3,2C400.3,628,395.2,620.5,392,619z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("89292F"),
                    d:
                      "M412,623c-3.1,4.4-11.7,4-14-1c-0.7-1.4,1.3-0.7,2-1c2.9,1.7,5.9,1.2,8.9,0c1.4-0.6,2.8-1.7,3.2,1\n\t\t\t\t\t\t\t\tC412,622.3,412,622.7,412,623z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("4F1015"),
                    d:
                      "M401,632c1-0.7,2-1.3,3-2c1.4,0.2,2.9,0.5,2.6,2.3c-0.3,1.6-1.6,2.5-3.2,2.7\n\t\t\t\t\t\t\t\tC401.2,635.1,401,633.6,401,632z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("571116"),
                    d:
                      "M416,631c1.7,0,3.3,0,5,0C419.3,632.5,417.7,632.5,416,631z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("170505"),
                    d:
                      "M410,589c0.3,0,0.6,0,0.9,0c2.6,3.2-0.7,2.9-2.1,3.2c-6.5,1.6-10.3,5.3-11.3,11.4\n\t\t\t\t\t\t\t\tc-0.5,3.3-0.1,6.6,0.1,9.9c-1.4,3.6-3.4,2.5-5.1,0.4c-6.8-8.4-3-20.5,7.3-23.9C403.3,588.9,406.5,587.7,410,589z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6A1518"),
                    d:
                      "M397,613c-2.4-7.2-0.8-13.6,4.3-19.2c1.5-1.6,3.5-1.5,5.5-1.9c1.6-0.4,4.7,0.8,4.2-2.8\n\t\t\t\t\t\t\t\tc0.7,0,1.4,0,2,0c2.5,0.8,4.2,2.5,5,5c-0.1,0.6-0.4,1.7-1,1.2c-3.6-3.1-8.2-3.7-11.3-0.9c-4.5,4-8.3,9.2-6.4,16.2\n\t\t\t\t\t\t\t\tc0.7,2.7,2,5.3,3.7,7.5C398.5,619.3,398.2,615.6,397,613z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("541114"),
                    d:
                      "M397,613c2,1.7,2.8,4.8,6,5c1.1,0.8,2.8,0.7,3.3,3c-2.2,0-4.2,0-6.3,0c-2.3-1.6-4.7-3.3-7-4.9\n\t\t\t\t\t\t\t\tc-5.6-6.7-5.9-16.6-0.6-22.9c3.4-4,12.1-6.1,17.6-4.1c-8-0.1-15.1,1.7-18.9,9.8c-2.3,4.9-1,11.5,2.9,15.1\n\t\t\t\t\t\t\t\tC395.7,615.5,396.6,615.2,397,613z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("8D2D34"),
                    d:
                      "M418,594c-2-1.3-3.7-3-5-5c4.6-1.7,7.8-0.7,9,3C420.5,592.3,421.4,597.5,418,594z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("943A3F"),
                    d:
                      "M426,603.1c-1.2,3.7-1.8,7.7-4.3,10.9c-1,1.3-1.8,3.1-3.7,1c-0.5-1.1,0.1-1.6,1-1.9\n\t\t\t\t\t\t\t\tc2.7-2.5,2.4-6,2.8-9.1c0.5-3.9,2-1.4,3.3-1.1C425.4,603,425.7,603,426,603.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("6D1618"),
                    d:
                      "M419,613c-0.3,0.6-0.7,1.3-1,1.9c-0.3,0-0.7,0-1,0c-2.5-0.4-2.1-2.1-1.8-3.8c0.2-1,1.1-1.2,2-1.1\n\t\t\t\t\t\t\t\tC419.1,610.2,418.9,611.8,419,613z"
                  }
                })
              ]),
              _vm._v(" "),
              _c("g", [
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M455.5,707c-2.2-3.8-27.9-33.3-38-45.8c-14.5-17.1-24.7-7.9-31.1-3c-12.9,13.2-30,29.3-42.2,46.5\n\t\t\t\t\t\t\tc-1.4,1.9-6.1-2-7.2-4.1c1.9-3.6,53.3-59.7,53.7-60c5-1,14.4-1.2,20.6,0.8c12,13.8,39.1,47.6,51.1,61.4\n\t\t\t\t\t\t\tC463.9,704,457.7,710.2,455.5,707z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M316.6,685.1c9.7-12.8,24.3-35.4,33.2-48.8c11.9-18.9,0.1-25.9-6.6-30.6\n\t\t\t\t\t\t\tc-16.5-8.3-38.4-16.7-58.4-23.2c-2.3-0.7,0.1-6.4,1.8-8.1c4,0.7,74.4,29.8,74.9,30.1c2.4,4.5,6.8,12.3,6.8,18.8\n\t\t\t\t\t\t\tc-9.5,15.6-34.9,52.7-44.5,68.3C322.9,693.5,314.3,688.1,316.6,685.1z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M294.6,550.9c15.3,4.8,41.5,10.9,57.1,14.7c21.8,4.8,24.4-8.7,26.6-16.5c2.3-18.3,6.1-41.5,5.4-62.5\n\t\t\t\t\t\t\tc-0.1-2.4,6-2.1,8.2-1.1c0.7,4-5.7,79.2-5.8,79.7c-3.4,3.8-11.3,10.3-17.4,12.5c-17.9-3.7-59.9-14.2-77.9-17.9\n\t\t\t\t\t\t\tC288.8,559.7,290.9,549.7,294.6,550.9z"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M409,484.1c-0.5-1.9,7.7-3.2,7.7,0.7c-0.2,16.1,3.6,43.3,4.5,59.3c1.8,22.3,15.5,20.8,23.5,20.6\n\t\t\t\t\t\t\tc18.2-3.2,43.7-7,63.6-13.8c2.2-0.8,4,5,3.7,7.4c-3.6,1.9-76.3,18.5-78.5,18.5c-4.6-2.2-14.4-6.3-18.2-11.5"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    fill: _vm.diskColorRecalc("982E36"),
                    d:
                      "M518.4,582.7c-15.2,5.2-50.7,19.3-55.5,21.3c-20.5,9-14.6,21.5-11.7,29c2.4,4.9,27.3,49.4,31.7,53.9\n\t\t\t\t\t\t\tc1.7,1.7-2.7,5-5.1,5.4c-3-2.8-42.5-67.5-42.7-67.9c0.5-5.1,2.7-14.5,6.3-19.9c16.6-7.6,58.1-23.6,74.8-31.2\n\t\t\t\t\t\t\tC517.8,572.2,522,581.5,518.4,582.7z"
                  }
                })
              ]),
              _vm._v(" "),
              _c("g", [
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M470.1,697.6l-3.8,2.4l-4.4,2.8c0,0-18.8-23-26.7-32.8c-5.9-7.3-23.9-28.7-23.9-28.7s2.8-2.1,5.7-4.5\n\t\t\t\t\t\t\t\tc2.9-2.4,4.9-5.6,4.9-5.6L470.1,697.6z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M421.9,631.2c0,0,3.9-0.8,8.1-3.1c3.5-1.9,5.1-3.6,5.1-3.6l42.5,66.8l-7.5,6.2L421.9,631.2z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M329.8,695.1l-3.3-3l-3.9-3.5c0,0,17.4-23.7,24.8-34c5.5-7.7,20.8-31.3,20.8-31.3s2.8,2.1,5.8,4.3\n\t\t\t\t\t\t\t\tc3.1,2.2,6.7,3.2,6.7,3.2L329.8,695.1z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M380.8,630.8c0,0,1.8,3.5,5.2,7c2.8,2.8,4.7,2.8,4.7,2.8l-26.8,29.6l-26,30.4l-8-5.5L380.8,630.8z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M289.7,566.4l1.6-4.2l1.9-4.9c0,0,28.3,8,40.5,11.3c9.1,2.4,36.6,8.5,36.6,8.5s-1,3.3-2,7\n\t\t\t\t\t\t\t\tc-0.9,3.6-0.6,7.4-0.6,7.4L289.7,566.4z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M367.8,591.5c0,0-2.7,2.9-4.7,7.3c-1.7,3.6-2,5.9-2,5.9l-36.1-15.2l-37.6-13.7l2.3-9.4L367.8,591.5z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M400,485.3l4.5,0.2l5.2,0.3l5.6,79.5c0,0-3.5,0.1-7.3,0.3c-3.8,0.2-7.2,1.7-7.2,1.7L400,485.3z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M400.8,567.4c0,0-3.6-1.6-8.5-2.2c-3.9-0.5-6.2,0-6.2,0l4.2-79.1l9.7-0.7L400.8,567.4z"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("g", [
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("85242C"),
                      d:
                        "M513.7,567l1.1,4.4l1.2,5.1c0,0-27.8,9.7-39.7,14c-8.8,3.2-34.9,14-34.9,14s-1.1-3.3-2.4-6.9\n\t\t\t\t\t\t\t\tc-1.3-3.5-3.7-6.4-3.7-6.4L513.7,567z"
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    attrs: {
                      fill: _vm.diskColorRecalc("70161B"),
                      d:
                        "M435.2,591.2c0,0,0.5-3.9-0.4-8.7c-0.7-3.9-1.8-6-1.8-6l38.3-8.2l38.7-10.4l3.5,9.1L435.2,591.2z"
                    }
                  })
                ])
              ]),
              _vm._v(" "),
              _c("circle", {
                attrs: {
                  fill: "none",
                  stroke: _vm.diskColorRecalc("85242C"),
                  "stroke-width": "10",
                  "stroke-miterlimit": "10",
                  cx: "402",
                  cy: "602.4",
                  r: "121.9"
                }
              })
            ]),
            _vm._v(" "),
            _c("g", { attrs: { id: "polish" } }, [
              _c("path", {
                attrs: {
                  fill: "#C6C6C6",
                  stroke: "#B2B2B2",
                  "stroke-width": "2",
                  "stroke-miterlimit": "10",
                  d:
                    "M455.3,707c-2.2-3.8-27.9-33.3-38-45.8\n\t\t\t\t\t\tc-14.5-17.1-24.7-7.9-31.1-3c-12.9,13.2-30,29.3-42.2,46.5c-1.4,1.9-6.1-2-7.2-4.1c1.9-3.6,53.3-59.7,53.7-60\n\t\t\t\t\t\tc5-1,14.4-1.2,20.6,0.8c12,13.8,39.1,47.6,51.1,61.4C463.8,704,457.5,710.2,455.3,707z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C6C6C6",
                  stroke: "#B2B2B2",
                  "stroke-width": "2",
                  "stroke-miterlimit": "10",
                  d:
                    "M316.4,685.1c9.7-12.8,24.3-35.4,33.2-48.8\n\t\t\t\t\t\tc11.9-18.9,0.1-25.9-6.6-30.6c-16.5-8.3-38.4-16.7-58.4-23.2c-2.3-0.7,0.1-6.4,1.8-8.1c4,0.7,74.4,29.8,74.9,30.1\n\t\t\t\t\t\tc2.4,4.5,6.8,12.3,6.8,18.8c-9.5,15.6-34.9,52.7-44.5,68.3C322.7,693.5,314.1,688.1,316.4,685.1z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C6C6C6",
                  stroke: "#B2B2B2",
                  "stroke-width": "2",
                  "stroke-miterlimit": "10",
                  d:
                    "M294.4,550.9c15.3,4.8,41.5,10.9,57.1,14.7\n\t\t\t\t\t\tc21.8,4.8,24.4-8.7,26.6-16.5c2.3-18.3,6.1-41.5,5.4-62.5c-0.1-2.4,6-2.1,8.2-1.1c0.7,4-5.7,79.2-5.8,79.7\n\t\t\t\t\t\tc-3.4,3.8-11.3,10.3-17.4,12.5c-17.9-3.7-59.9-14.2-77.9-17.9C288.6,559.7,290.7,549.7,294.4,550.9z"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C6C6C6",
                  stroke: "#B2B2B2",
                  "stroke-width": "2",
                  "stroke-miterlimit": "10",
                  d:
                    "M408.8,484.1c-0.5-1.9,7.7-3.2,7.7,0.7\n\t\t\t\t\t\tc-0.2,16.1,3.6,43.3,4.5,59.3c1.8,22.3,15.5,20.8,23.5,20.6c18.2-3.2,43.7-7,63.6-13.8c2.2-0.8,4,5,3.7,7.4\n\t\t\t\t\t\tc-3.6,1.9-76.3,18.5-78.5,18.5c-4.6-2.2-14.4-6.3-18.2-11.5"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  fill: "#C6C6C6",
                  stroke: "#B2B2B2",
                  "stroke-width": "2",
                  "stroke-miterlimit": "10",
                  d:
                    "M518.2,582.7c-15.2,5.2-50.7,19.3-55.5,21.3\n\t\t\t\t\t\tc-20.5,9-14.6,21.5-11.7,29c2.4,4.9,27.3,49.4,31.7,53.9c1.7,1.7-2.7,5-5.1,5.4c-3-2.8-42.5-67.5-42.7-67.9\n\t\t\t\t\t\tc0.5-5.1,2.7-14.5,6.3-19.9c16.6-7.6,58.1-23.6,74.8-31.2C517.7,572.2,521.8,581.5,518.2,582.7z"
                }
              }),
              _vm._v(" "),
              _c("circle", {
                attrs: {
                  fill: "none",
                  stroke: "#C6C6C6",
                  "stroke-width": "10",
                  "stroke-miterlimit": "10",
                  cx: "401.8",
                  cy: "602.4",
                  r: "121.9"
                }
              })
            ])
          ]
        )
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0719be3c", module.exports)
  }
}

/***/ }),

/***/ 247:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(19)
/* script */
var __vue_script__ = __webpack_require__(248)
/* template */
var __vue_template__ = __webpack_require__(252)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\assets\\js\\components\\DiskGalleryUploadComponent.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-02a64d04", Component.options)
  } else {
    hotAPI.reload("data-v-02a64d04", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 248:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue2_dropzone__ = __webpack_require__(249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue2_dropzone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue2_dropzone__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue2_dropzone_dist_vue2Dropzone_min_css__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue2_dropzone_dist_vue2Dropzone_min_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_vue2_dropzone_dist_vue2Dropzone_min_css__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["default"] = ({
    name: 'disk-gallery-upload',
    data: function data() {
        return {
            dataProps: {
                colorId: 0,
                serviceId: 0,
                name: ''
            },
            colorList: [],
            serviceList: [],
            dropzoneOptions: {
                url: '/admin/disk-gallery',
                paramName: 'picture',
                thumbnailWidth: 150,
                maxFilesize: 0.5,
                headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
                dictDefaultMessage: "<i class='fa fa-cloud-upload'></i>Загрузить работы"
            }
        };
    },
    components: {
        vueDropzone: __WEBPACK_IMPORTED_MODULE_1_vue2_dropzone___default.a
    },
    mounted: function mounted() {
        var that = this;
        that.getDataLists();
    },
    computed: {
        color: function color() {
            return __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.find(this.colorList, { id: this.dataProps.colorId });
        },
        service: function service() {
            return __WEBPACK_IMPORTED_MODULE_0_lodash___default.a.find(this.serviceList, { id: this.dataProps.serviceId });
        }
    },
    watch: {
        color: function color(val) {
            if (val) {
                this.dataProps.name = val.name;
            }
        },
        service: function service(val) {
            if (val) {
                this.dataProps.name = val.name;
            }
        }
    },
    methods: {
        sendingEvent: function sendingEvent(file, xhr, formData) {
            formData.append('type_slug', 'disk-gallery');
            formData.append('name', this.dataProps.name);
            formData.append('description', '');
            formData.append('calc_color_id', this.dataProps.colorId);
            formData.append('disk_uslugi_id', this.dataProps.serviceId);
        },

        getDataLists: function getDataLists() {
            var that = this;
            //gallery-lists
            axios.get('/admin/gallery-lists').then(function (response) {
                //console.log(response.data)
                that.colorList = response.data.data.colors;
                that.serviceList = response.data.data.services;
            });
        }
    }
});

/***/ }),

/***/ 249:
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):e.vue2Dropzone=t()}(this,function(){"use strict";var n={getSignedURL:function(o,s){var a={filePath:o.name,contentType:o.type};return new Promise(function(e,t){var n=new FormData,r=new XMLHttpRequest,i="function"==typeof s.signingURL?s.signingURL(o):s.signingURL;r.open("POST",i),r.onload=function(){200==r.status?e(JSON.parse(r.response)):t(r.statusText)},r.onerror=function(e){console.error("Network Error : Could not send request to AWS (Maybe CORS errors)"),t(e)},Object.entries(s.headers||{}).forEach(function(e){var t=e[0],i=e[1];r.setRequestHeader(t,i)}),a=Object.assign(a,s.params||{}),Object.entries(a).forEach(function(e){var t=e[0],i=e[1];n.append(t,i)}),r.send(n)})},sendFile:function(t,e,i){var n=i?this.setResponseHandler:this.sendS3Handler;return this.getSignedURL(t,e).then(function(e){return n(e,t)}).catch(function(e){return e})},setResponseHandler:function(e,t){t.s3Signature=e.signature,t.s3Url=e.postEndpoint},sendS3Handler:function(e,t){var o=new FormData,i=e.signature;return Object.keys(i).forEach(function(e){o.append(e,i[e])}),o.append("file",t),new Promise(function(i,n){var r=new XMLHttpRequest;r.open("POST",e.postEndpoint),r.onload=function(){if(201==r.status){var e=(new window.DOMParser).parseFromString(r.response,"text/xml").firstChild.children[0].innerHTML;i({success:!0,message:e})}else{var t=(new window.DOMParser).parseFromString(r.response,"text/xml").firstChild.children[0].innerHTML;n({success:!1,message:t+". Request is marked as resolved when returns as status 201"})}},r.onerror=function(e){var t=(new window.DOMParser).parseFromString(r.response,"text/xml").firstChild.children[1].innerHTML;n({success:!1,message:t})},r.send(o)})}};var e,t=(function(e){var t=function(){function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}();function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(){l(this,e)}return t(e,[{key:"on",value:function(e,t){return this._callbacks=this._callbacks||{},this._callbacks[e]||(this._callbacks[e]=[]),this._callbacks[e].push(t),this}},{key:"emit",value:function(e){this._callbacks=this._callbacks||{};var t=this._callbacks[e];if(t){for(var i=arguments.length,n=Array(1<i?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];for(var o=0,s=s=t;;){if(o>=s.length)break;s[o++].apply(this,n)}}return this}},{key:"off",value:function(e,t){if(!this._callbacks||0===arguments.length)return this._callbacks={},this;var i=this._callbacks[e];if(!i)return this;if(1===arguments.length)return delete this._callbacks[e],this;for(var n=0;n<i.length;n++){if(i[n]===t){i.splice(n,1);break}}return this}}]),e}(),r=function(e){function b(e,t){l(this,b);var i,n=a(this,(b.__proto__||Object.getPrototypeOf(b)).call(this)),r=void 0;if(n.element=e,n.version=b.version,n.defaultOptions.previewTemplate=n.defaultOptions.previewTemplate.replace(/\n*/g,""),n.clickableElements=[],n.listeners=[],n.files=[],"string"==typeof n.element&&(n.element=document.querySelector(n.element)),!n.element||null==n.element.nodeType)throw new Error("Invalid dropzone element.");if(n.element.dropzone)throw new Error("Dropzone already attached.");b.instances.push(n),n.element.dropzone=n;var o,s=null!=(i=b.optionsForElement(n.element))?i:{};if(n.options=b.extend({},n.defaultOptions,s,null!=t?t:{}),n.options.forceFallback||!b.isBrowserSupported())return o=n.options.fallback.call(n),a(n,o);if(null==n.options.url&&(n.options.url=n.element.getAttribute("action")),!n.options.url)throw new Error("No URL provided.");if(n.options.acceptedFiles&&n.options.acceptedMimeTypes)throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");if(n.options.uploadMultiple&&n.options.chunking)throw new Error("You cannot set both: uploadMultiple and chunking.");return n.options.acceptedMimeTypes&&(n.options.acceptedFiles=n.options.acceptedMimeTypes,delete n.options.acceptedMimeTypes),null!=n.options.renameFilename&&(n.options.renameFile=function(e){return n.options.renameFilename.call(n,e.name,e)}),n.options.method=n.options.method.toUpperCase(),(r=n.getExistingFallback())&&r.parentNode&&r.parentNode.removeChild(r),!1!==n.options.previewsContainer&&(n.options.previewsContainer?n.previewsContainer=b.getElement(n.options.previewsContainer,"previewsContainer"):n.previewsContainer=n.element),n.options.clickable&&(!0===n.options.clickable?n.clickableElements=[n.element]:n.clickableElements=b.getElements(n.options.clickable,"clickable")),n.init(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(b,i),t(b,null,[{key:"initClass",value:function(){this.prototype.Emitter=i,this.prototype.events=["drop","dragstart","dragend","dragenter","dragover","dragleave","addedfile","addedfiles","removedfile","thumbnail","error","errormultiple","processing","processingmultiple","uploadprogress","totaluploadprogress","sending","sendingmultiple","success","successmultiple","canceled","canceledmultiple","complete","completemultiple","reset","maxfilesexceeded","maxfilesreached","queuecomplete"],this.prototype.defaultOptions={url:null,method:"post",withCredentials:!1,timeout:3e4,parallelUploads:2,uploadMultiple:!1,chunking:!1,forceChunking:!1,chunkSize:2e6,parallelChunkUploads:!1,retryChunks:!1,retryChunksLimit:3,maxFilesize:256,paramName:"file",createImageThumbnails:!0,maxThumbnailFilesize:10,thumbnailWidth:120,thumbnailHeight:120,thumbnailMethod:"crop",resizeWidth:null,resizeHeight:null,resizeMimeType:null,resizeQuality:.8,resizeMethod:"contain",filesizeBase:1e3,maxFiles:null,headers:null,clickable:!0,ignoreHiddenFiles:!0,acceptedFiles:null,acceptedMimeTypes:null,autoProcessQueue:!0,autoQueue:!0,addRemoveLinks:!1,previewsContainer:null,hiddenInputContainer:"body",capture:null,renameFilename:null,renameFile:null,forceFallback:!1,dictDefaultMessage:"Drop files here to upload",dictFallbackMessage:"Your browser does not support drag'n'drop file uploads.",dictFallbackText:"Please use the fallback form below to upload your files like in the olden days.",dictFileTooBig:"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",dictInvalidFileType:"You can't upload files of this type.",dictResponseError:"Server responded with {{statusCode}} code.",dictCancelUpload:"Cancel upload",dictUploadCanceled:"Upload canceled.",dictCancelUploadConfirmation:"Are you sure you want to cancel this upload?",dictRemoveFile:"Remove file",dictRemoveFileConfirmation:null,dictMaxFilesExceeded:"You can not upload any more files.",dictFileSizeUnits:{tb:"TB",gb:"GB",mb:"MB",kb:"KB",b:"b"},init:function(){},params:function(e,t,i){if(i)return{dzuuid:i.file.upload.uuid,dzchunkindex:i.index,dztotalfilesize:i.file.size,dzchunksize:this.options.chunkSize,dztotalchunkcount:i.file.upload.totalChunkCount,dzchunkbyteoffset:i.index*this.options.chunkSize}},accept:function(e,t){return t()},chunksUploaded:function(e,t){t()},fallback:function(){var e=void 0;this.element.className=this.element.className+" dz-browser-not-supported";for(var t=0,i=i=this.element.getElementsByTagName("div");;){if(t>=i.length)break;var n=i[t++];if(/(^| )dz-message($| )/.test(n.className)){(e=n).className="dz-message";break}}e||(e=b.createElement('<div class="dz-message"><span></span></div>'),this.element.appendChild(e));var r=e.getElementsByTagName("span")[0];return r&&(null!=r.textContent?r.textContent=this.options.dictFallbackMessage:null!=r.innerText&&(r.innerText=this.options.dictFallbackMessage)),this.element.appendChild(this.getFallbackForm())},resize:function(e,t,i,n){var r={srcX:0,srcY:0,srcWidth:e.width,srcHeight:e.height},o=e.width/e.height;null==t&&null==i?(t=r.srcWidth,i=r.srcHeight):null==t?t=i*o:null==i&&(i=t/o);var s=(t=Math.min(t,r.srcWidth))/(i=Math.min(i,r.srcHeight));if(r.srcWidth>t||r.srcHeight>i)if("crop"===n)s<o?(r.srcHeight=e.height,r.srcWidth=r.srcHeight*s):(r.srcWidth=e.width,r.srcHeight=r.srcWidth/s);else{if("contain"!==n)throw new Error("Unknown resizeMethod '"+n+"'");s<o?i=t/o:t=i*o}return r.srcX=(e.width-r.srcWidth)/2,r.srcY=(e.height-r.srcHeight)/2,r.trgWidth=t,r.trgHeight=i,r},transformFile:function(e,t){return(this.options.resizeWidth||this.options.resizeHeight)&&e.type.match(/image.*/)?this.resizeImage(e,this.options.resizeWidth,this.options.resizeHeight,this.options.resizeMethod,t):t(e)},previewTemplate:'<div class="dz-preview dz-file-preview">\n  <div class="dz-image"><img data-dz-thumbnail /></div>\n  <div class="dz-details">\n    <div class="dz-size"><span data-dz-size></span></div>\n    <div class="dz-filename"><span data-dz-name></span></div>\n  </div>\n  <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n  <div class="dz-error-message"><span data-dz-errormessage></span></div>\n  <div class="dz-success-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Check</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <path d="M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" stroke-opacity="0.198794158" stroke="#747474" fill-opacity="0.816519475" fill="#FFFFFF" sketch:type="MSShapeGroup"></path>\n      </g>\n    </svg>\n  </div>\n  <div class="dz-error-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Error</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <g id="Check-+-Oval-2" sketch:type="MSLayerGroup" stroke="#747474" stroke-opacity="0.198794158" fill="#FFFFFF" fill-opacity="0.816519475">\n          <path d="M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" sketch:type="MSShapeGroup"></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n</div>',drop:function(e){return this.element.classList.remove("dz-drag-hover")},dragstart:function(e){},dragend:function(e){return this.element.classList.remove("dz-drag-hover")},dragenter:function(e){return this.element.classList.add("dz-drag-hover")},dragover:function(e){return this.element.classList.add("dz-drag-hover")},dragleave:function(e){return this.element.classList.remove("dz-drag-hover")},paste:function(e){},reset:function(){return this.element.classList.remove("dz-started")},addedfile:function(t){var i=this;if(this.element===this.previewsContainer&&this.element.classList.add("dz-started"),this.previewsContainer){t.previewElement=b.createElement(this.options.previewTemplate.trim()),t.previewTemplate=t.previewElement,this.previewsContainer.appendChild(t.previewElement);for(var e=0,n=n=t.previewElement.querySelectorAll("[data-dz-name]");;){if(e>=n.length)break;var r=n[e++];r.textContent=t.name}for(var o=0,s=s=t.previewElement.querySelectorAll("[data-dz-size]");!(o>=s.length);)(r=s[o++]).innerHTML=this.filesize(t.size);this.options.addRemoveLinks&&(t._removeLink=b.createElement('<a class="dz-remove" href="javascript:undefined;" data-dz-remove>'+this.options.dictRemoveFile+"</a>"),t.previewElement.appendChild(t._removeLink));for(var a=function(e){return e.preventDefault(),e.stopPropagation(),t.status===b.UPLOADING?b.confirm(i.options.dictCancelUploadConfirmation,function(){return i.removeFile(t)}):i.options.dictRemoveFileConfirmation?b.confirm(i.options.dictRemoveFileConfirmation,function(){return i.removeFile(t)}):i.removeFile(t)},l=0,u=u=t.previewElement.querySelectorAll("[data-dz-remove]");;){if(l>=u.length)break;u[l++].addEventListener("click",a)}}},removedfile:function(e){return null!=e.previewElement&&null!=e.previewElement.parentNode&&e.previewElement.parentNode.removeChild(e.previewElement),this._updateMaxFilesReachedClass()},thumbnail:function(e,t){if(e.previewElement){e.previewElement.classList.remove("dz-file-preview");for(var i=0,n=n=e.previewElement.querySelectorAll("[data-dz-thumbnail]");;){if(i>=n.length)break;var r=n[i++];r.alt=e.name,r.src=t}return setTimeout(function(){return e.previewElement.classList.add("dz-image-preview")},1)}},error:function(e,t){if(e.previewElement){e.previewElement.classList.add("dz-error"),"String"!=typeof t&&t.error&&(t=t.error);for(var i=0,n=n=e.previewElement.querySelectorAll("[data-dz-errormessage]");;){if(i>=n.length)break;n[i++].textContent=t}}},errormultiple:function(){},processing:function(e){if(e.previewElement&&(e.previewElement.classList.add("dz-processing"),e._removeLink))return e._removeLink.textContent=this.options.dictCancelUpload},processingmultiple:function(){},uploadprogress:function(e,t,i){if(e.previewElement)for(var n=0,r=r=e.previewElement.querySelectorAll("[data-dz-uploadprogress]");;){if(n>=r.length)break;var o=r[n++];"PROGRESS"===o.nodeName?o.value=t:o.style.width=t+"%"}},totaluploadprogress:function(){},sending:function(){},sendingmultiple:function(){},success:function(e){if(e.previewElement)return e.previewElement.classList.add("dz-success")},successmultiple:function(){},canceled:function(e){return this.emit("error",e,this.options.dictUploadCanceled)},canceledmultiple:function(){},complete:function(e){if(e._removeLink&&(e._removeLink.textContent=this.options.dictRemoveFile),e.previewElement)return e.previewElement.classList.add("dz-complete")},completemultiple:function(){},maxfilesexceeded:function(){},maxfilesreached:function(){},queuecomplete:function(){},addedfiles:function(){}},this.prototype._thumbnailQueue=[],this.prototype._processingThumbnail=!1}},{key:"extend",value:function(e){for(var t=arguments.length,i=Array(1<t?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];for(var r=0,o=o=i;;){if(r>=o.length)break;var s=o[r++];for(var a in s){var l=s[a];e[a]=l}}return e}}]),t(b,[{key:"getAcceptedFiles",value:function(){return this.files.filter(function(e){return e.accepted}).map(function(e){return e})}},{key:"getRejectedFiles",value:function(){return this.files.filter(function(e){return!e.accepted}).map(function(e){return e})}},{key:"getFilesWithStatus",value:function(t){return this.files.filter(function(e){return e.status===t}).map(function(e){return e})}},{key:"getQueuedFiles",value:function(){return this.getFilesWithStatus(b.QUEUED)}},{key:"getUploadingFiles",value:function(){return this.getFilesWithStatus(b.UPLOADING)}},{key:"getAddedFiles",value:function(){return this.getFilesWithStatus(b.ADDED)}},{key:"getActiveFiles",value:function(){return this.files.filter(function(e){return e.status===b.UPLOADING||e.status===b.QUEUED}).map(function(e){return e})}},{key:"init",value:function(){var o=this;if("form"===this.element.tagName&&this.element.setAttribute("enctype","multipart/form-data"),this.element.classList.contains("dropzone")&&!this.element.querySelector(".dz-message")&&this.element.appendChild(b.createElement('<div class="dz-default dz-message"><span>'+this.options.dictDefaultMessage+"</span></div>")),this.clickableElements.length){!function r(){return o.hiddenFileInput&&o.hiddenFileInput.parentNode.removeChild(o.hiddenFileInput),o.hiddenFileInput=document.createElement("input"),o.hiddenFileInput.setAttribute("type","file"),(null===o.options.maxFiles||1<o.options.maxFiles)&&o.hiddenFileInput.setAttribute("multiple","multiple"),o.hiddenFileInput.className="dz-hidden-input",null!==o.options.acceptedFiles&&o.hiddenFileInput.setAttribute("accept",o.options.acceptedFiles),null!==o.options.capture&&o.hiddenFileInput.setAttribute("capture",o.options.capture),o.hiddenFileInput.style.visibility="hidden",o.hiddenFileInput.style.position="absolute",o.hiddenFileInput.style.top="0",o.hiddenFileInput.style.left="0",o.hiddenFileInput.style.height="0",o.hiddenFileInput.style.width="0",document.querySelector(o.options.hiddenInputContainer).appendChild(o.hiddenFileInput),o.hiddenFileInput.addEventListener("change",function(){var e=o.hiddenFileInput.files;if(e.length)for(var t=0,i=i=e;!(t>=i.length);){var n=i[t++];o.addFile(n)}return o.emit("addedfiles",e),r()})}()}this.URL=null!==window.URL?window.URL:window.webkitURL;for(var e=0,t=t=this.events;;){if(e>=t.length)break;var i=t[e++];this.on(i,this.options[i])}this.on("uploadprogress",function(){return o.updateTotalUploadProgress()}),this.on("removedfile",function(){return o.updateTotalUploadProgress()}),this.on("canceled",function(e){return o.emit("complete",e)}),this.on("complete",function(e){if(0===o.getAddedFiles().length&&0===o.getUploadingFiles().length&&0===o.getQueuedFiles().length)return setTimeout(function(){return o.emit("queuecomplete")},0)});var n=function(e){return e.stopPropagation(),e.preventDefault?e.preventDefault():e.returnValue=!1};return this.listeners=[{element:this.element,events:{dragstart:function(e){return o.emit("dragstart",e)},dragenter:function(e){return n(e),o.emit("dragenter",e)},dragover:function(e){var t=void 0;try{t=e.dataTransfer.effectAllowed}catch(e){}return e.dataTransfer.dropEffect="move"===t||"linkMove"===t?"move":"copy",n(e),o.emit("dragover",e)},dragleave:function(e){return o.emit("dragleave",e)},drop:function(e){return n(e),o.drop(e)},dragend:function(e){return o.emit("dragend",e)}}}],this.clickableElements.forEach(function(t){return o.listeners.push({element:t,events:{click:function(e){return(t!==o.element||e.target===o.element||b.elementInside(e.target,o.element.querySelector(".dz-message")))&&o.hiddenFileInput.click(),!0}}})}),this.enable(),this.options.init.call(this)}},{key:"destroy",value:function(){return this.disable(),this.removeAllFiles(!0),(null!=this.hiddenFileInput?this.hiddenFileInput.parentNode:void 0)&&(this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput),this.hiddenFileInput=null),delete this.element.dropzone,b.instances.splice(b.instances.indexOf(this),1)}},{key:"updateTotalUploadProgress",value:function(){var e=void 0,t=0,i=0;if(this.getActiveFiles().length){for(var n=0,r=r=this.getActiveFiles();;){if(n>=r.length)break;var o=r[n++];t+=o.upload.bytesSent,i+=o.upload.total}e=100*t/i}else e=100;return this.emit("totaluploadprogress",e,i,t)}},{key:"_getParamName",value:function(e){return"function"==typeof this.options.paramName?this.options.paramName(e):this.options.paramName+(this.options.uploadMultiple?"["+e+"]":"")}},{key:"_renameFile",value:function(e){return"function"!=typeof this.options.renameFile?e.name:this.options.renameFile(e)}},{key:"getFallbackForm",value:function(){var e,t=void 0;if(e=this.getExistingFallback())return e;var i='<div class="dz-fallback">';this.options.dictFallbackText&&(i+="<p>"+this.options.dictFallbackText+"</p>"),i+='<input type="file" name="'+this._getParamName(0)+'" '+(this.options.uploadMultiple?'multiple="multiple"':void 0)+' /><input type="submit" value="Upload!"></div>';var n=b.createElement(i);return"FORM"!==this.element.tagName?(t=b.createElement('<form action="'+this.options.url+'" enctype="multipart/form-data" method="'+this.options.method+'"></form>')).appendChild(n):(this.element.setAttribute("enctype","multipart/form-data"),this.element.setAttribute("method",this.options.method)),null!=t?t:n}},{key:"getExistingFallback",value:function(){for(var e=function(e){for(var t=0,i=i=e;;){if(t>=i.length)break;var n=i[t++];if(/(^| )fallback($| )/.test(n.className))return n}},t=["div","form"],i=0;i<t.length;i++){var n,r=t[i];if(n=e(this.element.getElementsByTagName(r)))return n}}},{key:"setupEventListeners",value:function(){return this.listeners.map(function(n){return function(){var e=[];for(var t in n.events){var i=n.events[t];e.push(n.element.addEventListener(t,i,!1))}return e}()})}},{key:"removeEventListeners",value:function(){return this.listeners.map(function(n){return function(){var e=[];for(var t in n.events){var i=n.events[t];e.push(n.element.removeEventListener(t,i,!1))}return e}()})}},{key:"disable",value:function(){var t=this;return this.clickableElements.forEach(function(e){return e.classList.remove("dz-clickable")}),this.removeEventListeners(),this.disabled=!0,this.files.map(function(e){return t.cancelUpload(e)})}},{key:"enable",value:function(){return delete this.disabled,this.clickableElements.forEach(function(e){return e.classList.add("dz-clickable")}),this.setupEventListeners()}},{key:"filesize",value:function(e){var t=0,i="b";if(0<e){for(var n=["tb","gb","mb","kb","b"],r=0;r<n.length;r++){var o=n[r];if(Math.pow(this.options.filesizeBase,4-r)/10<=e){t=e/Math.pow(this.options.filesizeBase,4-r),i=o;break}}t=Math.round(10*t)/10}return"<strong>"+t+"</strong> "+this.options.dictFileSizeUnits[i]}},{key:"_updateMaxFilesReachedClass",value:function(){return null!=this.options.maxFiles&&this.getAcceptedFiles().length>=this.options.maxFiles?(this.getAcceptedFiles().length===this.options.maxFiles&&this.emit("maxfilesreached",this.files),this.element.classList.add("dz-max-files-reached")):this.element.classList.remove("dz-max-files-reached")}},{key:"drop",value:function(e){if(e.dataTransfer){this.emit("drop",e);for(var t=[],i=0;i<e.dataTransfer.files.length;i++)t[i]=e.dataTransfer.files[i];if(this.emit("addedfiles",t),t.length){var n=e.dataTransfer.items;n&&n.length&&null!=n[0].webkitGetAsEntry?this._addFilesFromItems(n):this.handleFiles(t)}}}},{key:"paste",value:function(e){if(null!=(t=null!=e?e.clipboardData:void 0,i=function(e){return e.items},null!=t?i(t):void 0)){var t,i;this.emit("paste",e);var n=e.clipboardData.items;return n.length?this._addFilesFromItems(n):void 0}}},{key:"handleFiles",value:function(e){for(var t=0,i=i=e;;){if(t>=i.length)break;var n=i[t++];this.addFile(n)}}},{key:"_addFilesFromItems",value:function(o){var s=this;return function(){for(var e=[],t=0,i=i=o;;){if(t>=i.length)break;var n,r=i[t++];null!=r.webkitGetAsEntry&&(n=r.webkitGetAsEntry())?n.isFile?e.push(s.addFile(r.getAsFile())):n.isDirectory?e.push(s._addFilesFromDirectory(n,n.name)):e.push(void 0):null!=r.getAsFile&&(null==r.kind||"file"===r.kind)?e.push(s.addFile(r.getAsFile())):e.push(void 0)}return e}()}},{key:"_addFilesFromDirectory",value:function(e,o){var s=this,t=e.createReader(),i=function(t){return e=console,i="log",n=function(e){return e.log(t)},null!=e&&"function"==typeof e[i]?n(e,i):void 0;var e,i,n};return function r(){return t.readEntries(function(e){if(0<e.length){for(var t=0,i=i=e;!(t>=i.length);){var n=i[t++];n.isFile?n.file(function(e){if(!s.options.ignoreHiddenFiles||"."!==e.name.substring(0,1))return e.fullPath=o+"/"+e.name,s.addFile(e)}):n.isDirectory&&s._addFilesFromDirectory(n,o+"/"+n.name)}r()}return null},i)}()}},{key:"accept",value:function(e,t){return e.size>1024*this.options.maxFilesize*1024?t(this.options.dictFileTooBig.replace("{{filesize}}",Math.round(e.size/1024/10.24)/100).replace("{{maxFilesize}}",this.options.maxFilesize)):b.isValidFile(e,this.options.acceptedFiles)?null!=this.options.maxFiles&&this.getAcceptedFiles().length>=this.options.maxFiles?(t(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}",this.options.maxFiles)),this.emit("maxfilesexceeded",e)):this.options.accept.call(this,e,t):t(this.options.dictInvalidFileType)}},{key:"addFile",value:function(t){var i=this;return t.upload={uuid:b.uuidv4(),progress:0,total:t.size,bytesSent:0,filename:this._renameFile(t),chunked:this.options.chunking&&(this.options.forceChunking||t.size>this.options.chunkSize),totalChunkCount:Math.ceil(t.size/this.options.chunkSize)},this.files.push(t),t.status=b.ADDED,this.emit("addedfile",t),this._enqueueThumbnail(t),this.accept(t,function(e){return e?(t.accepted=!1,i._errorProcessing([t],e)):(t.accepted=!0,i.options.autoQueue&&i.enqueueFile(t)),i._updateMaxFilesReachedClass()})}},{key:"enqueueFiles",value:function(e){for(var t=0,i=i=e;;){if(t>=i.length)break;var n=i[t++];this.enqueueFile(n)}return null}},{key:"enqueueFile",value:function(e){var t=this;if(e.status!==b.ADDED||!0!==e.accepted)throw new Error("This file can't be queued because it has already been processed or was rejected.");if(e.status=b.QUEUED,this.options.autoProcessQueue)return setTimeout(function(){return t.processQueue()},0)}},{key:"_enqueueThumbnail",value:function(e){var t=this;if(this.options.createImageThumbnails&&e.type.match(/image.*/)&&e.size<=1024*this.options.maxThumbnailFilesize*1024)return this._thumbnailQueue.push(e),setTimeout(function(){return t._processThumbnailQueue()},0)}},{key:"_processThumbnailQueue",value:function(){var t=this;if(!this._processingThumbnail&&0!==this._thumbnailQueue.length){this._processingThumbnail=!0;var i=this._thumbnailQueue.shift();return this.createThumbnail(i,this.options.thumbnailWidth,this.options.thumbnailHeight,this.options.thumbnailMethod,!0,function(e){return t.emit("thumbnail",i,e),t._processingThumbnail=!1,t._processThumbnailQueue()})}}},{key:"removeFile",value:function(e){if(e.status===b.UPLOADING&&this.cancelUpload(e),this.files=n(this.files,e),this.emit("removedfile",e),0===this.files.length)return this.emit("reset")}},{key:"removeAllFiles",value:function(e){null==e&&(e=!1);for(var t=0,i=i=this.files.slice();;){if(t>=i.length)break;var n=i[t++];(n.status!==b.UPLOADING||e)&&this.removeFile(n)}return null}},{key:"resizeImage",value:function(r,e,t,i,o){var s=this;return this.createThumbnail(r,e,t,i,!1,function(e,t){if(null==t)return o(r);var i=s.options.resizeMimeType;null==i&&(i=r.type);var n=t.toDataURL(i,s.options.resizeQuality);return"image/jpeg"!==i&&"image/jpg"!==i||(n=u.restore(r.dataURL,n)),o(b.dataURItoBlob(n))})}},{key:"createThumbnail",value:function(e,t,i,n,r,o){var s=this,a=new FileReader;return a.onload=function(){if(e.dataURL=a.result,"image/svg+xml"!==e.type)return s.createThumbnailFromUrl(e,t,i,n,r,o);null!=o&&o(a.result)},a.readAsDataURL(e)}},{key:"createThumbnailFromUrl",value:function(o,s,a,l,t,u,e){var d=this,c=document.createElement("img");return e&&(c.crossOrigin=e),c.onload=function(){var e=function(e){return e(1)};return"undefined"!=typeof EXIF&&null!==EXIF&&t&&(e=function(e){return EXIF.getData(c,function(){return e(EXIF.getTag(this,"Orientation"))})}),e(function(e){o.width=c.width,o.height=c.height;var t=d.options.resize.call(d,o,s,a,l),i=document.createElement("canvas"),n=i.getContext("2d");switch(i.width=t.trgWidth,i.height=t.trgHeight,4<e&&(i.width=t.trgHeight,i.height=t.trgWidth),e){case 2:n.translate(i.width,0),n.scale(-1,1);break;case 3:n.translate(i.width,i.height),n.rotate(Math.PI);break;case 4:n.translate(0,i.height),n.scale(1,-1);break;case 5:n.rotate(.5*Math.PI),n.scale(1,-1);break;case 6:n.rotate(.5*Math.PI),n.translate(0,-i.height);break;case 7:n.rotate(.5*Math.PI),n.translate(i.width,-i.height),n.scale(-1,1);break;case 8:n.rotate(-.5*Math.PI),n.translate(-i.width,0)}p(n,c,null!=t.srcX?t.srcX:0,null!=t.srcY?t.srcY:0,t.srcWidth,t.srcHeight,null!=t.trgX?t.trgX:0,null!=t.trgY?t.trgY:0,t.trgWidth,t.trgHeight);var r=i.toDataURL("image/png");if(null!=u)return u(r,i)})},null!=u&&(c.onerror=u),c.src=o.dataURL}},{key:"processQueue",value:function(){var e=this.options.parallelUploads,t=this.getUploadingFiles().length,i=t;if(!(e<=t)){var n=this.getQueuedFiles();if(0<n.length){if(this.options.uploadMultiple)return this.processFiles(n.slice(0,e-t));for(;i<e;){if(!n.length)return;this.processFile(n.shift()),i++}}}}},{key:"processFile",value:function(e){return this.processFiles([e])}},{key:"processFiles",value:function(e){for(var t=0,i=i=e;;){if(t>=i.length)break;var n=i[t++];n.processing=!0,n.status=b.UPLOADING,this.emit("processing",n)}return this.options.uploadMultiple&&this.emit("processingmultiple",e),this.uploadFiles(e)}},{key:"_getFilesWithXhr",value:function(t){return this.files.filter(function(e){return e.xhr===t}).map(function(e){return e})}},{key:"cancelUpload",value:function(e){if(e.status===b.UPLOADING){for(var t=this._getFilesWithXhr(e.xhr),i=0,n=n=t;;){if(i>=n.length)break;n[i++].status=b.CANCELED}void 0!==e.xhr&&e.xhr.abort();for(var r=0,o=o=t;;){if(r>=o.length)break;var s=o[r++];this.emit("canceled",s)}this.options.uploadMultiple&&this.emit("canceledmultiple",t)}else e.status!==b.ADDED&&e.status!==b.QUEUED||(e.status=b.CANCELED,this.emit("canceled",e),this.options.uploadMultiple&&this.emit("canceledmultiple",[e]));if(this.options.autoProcessQueue)return this.processQueue()}},{key:"resolveOption",value:function(e){if("function"==typeof e){for(var t=arguments.length,i=Array(1<t?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];return e.apply(this,i)}return e}},{key:"uploadFile",value:function(e){return this.uploadFiles([e])}},{key:"uploadFiles",value:function(a){var l=this;this._transformFiles(a,function(e){if(a[0].upload.chunked){var r=a[0],o=e[0];r.upload.chunks=[];var n=function(){for(var e=0;void 0!==r.upload.chunks[e];)e++;if(!(e>=r.upload.totalChunkCount)){0;var t=e*l.options.chunkSize,i=Math.min(t+l.options.chunkSize,r.size),n={name:l._getParamName(0),data:o.webkitSlice?o.webkitSlice(t,i):o.slice(t,i),filename:r.upload.filename,chunkIndex:e};r.upload.chunks[e]={file:r,index:e,dataBlock:n,status:b.UPLOADING,progress:0,retries:0},l._uploadData(a,[n])}};if(r.upload.finishedChunkUpload=function(e){var t=!0;e.status=b.SUCCESS,e.dataBlock=null;for(var i=0;i<r.upload.totalChunkCount;i++){if(void 0===r.upload.chunks[i])return n();r.upload.chunks[i].status!==b.SUCCESS&&(t=!1)}t&&l.options.chunksUploaded(r,function(){l._finished(a,"",null)})},l.options.parallelChunkUploads)for(var t=0;t<r.upload.totalChunkCount;t++)n();else n()}else{for(var i=[],s=0;s<a.length;s++)i[s]={name:l._getParamName(s),data:e[s],filename:a[s].upload.filename};l._uploadData(a,i)}})}},{key:"_getChunk",value:function(e,t){for(var i=0;i<e.upload.totalChunkCount;i++)if(void 0!==e.upload.chunks[i]&&e.upload.chunks[i].xhr===t)return e.upload.chunks[i]}},{key:"_uploadData",value:function(t,e){for(var i=this,n=new XMLHttpRequest,r=0,o=o=t;;){if(r>=o.length)break;o[r++].xhr=n}t[0].upload.chunked&&(t[0].upload.chunks[e[0].chunkIndex].xhr=n);var s=this.resolveOption(this.options.method,t),a=this.resolveOption(this.options.url,t);n.open(s,a,!0),n.timeout=this.resolveOption(this.options.timeout,t),n.withCredentials=!!this.options.withCredentials,n.onload=function(e){i._finishedUploading(t,n,e)},n.onerror=function(){i._handleUploadError(t,n)},(null!=n.upload?n.upload:n).onprogress=function(e){return i._updateFilesUploadProgress(t,n,e)};var l={Accept:"application/json","Cache-Control":"no-cache","X-Requested-With":"XMLHttpRequest"};for(var u in this.options.headers&&b.extend(l,this.options.headers),l){var d=l[u];d&&n.setRequestHeader(u,d)}var c=new FormData;if(this.options.params){var p=this.options.params;for(var h in"function"==typeof p&&(p=p.call(this,t,n,t[0].upload.chunked?this._getChunk(t[0],n):null)),p){var f=p[h];c.append(h,f)}}for(var m=0,v=v=t;;){if(m>=v.length)break;var g=v[m++];this.emit("sending",g,n,c)}this.options.uploadMultiple&&this.emit("sendingmultiple",t,n,c),this._addFormElementData(c);for(var k=0;k<e.length;k++){var y=e[k];c.append(y.name,y.data,y.filename)}this.submitRequest(n,c,t)}},{key:"_transformFiles",value:function(i,n){for(var e=this,r=[],o=0,t=function(t){e.options.transformFile.call(e,i[t],function(e){r[t]=e,++o===i.length&&n(r)})},s=0;s<i.length;s++)t(s)}},{key:"_addFormElementData",value:function(e){if("FORM"===this.element.tagName)for(var t=0,i=i=this.element.querySelectorAll("input, textarea, select, button");;){if(t>=i.length)break;var n=i[t++],r=n.getAttribute("name"),o=n.getAttribute("type");if(o&&(o=o.toLowerCase()),null!=r)if("SELECT"===n.tagName&&n.hasAttribute("multiple"))for(var s=0,a=a=n.options;;){if(s>=a.length)break;var l=a[s++];l.selected&&e.append(r,l.value)}else(!o||"checkbox"!==o&&"radio"!==o||n.checked)&&e.append(r,n.value)}}},{key:"_updateFilesUploadProgress",value:function(e,t,i){var n=void 0;if(void 0!==i){if(n=100*i.loaded/i.total,e[0].upload.chunked){var r=e[0],o=this._getChunk(r,t);o.progress=n,o.total=i.total,o.bytesSent=i.loaded;r.upload.progress=0,r.upload.total=0;for(var s=r.upload.bytesSent=0;s<r.upload.totalChunkCount;s++)void 0!==r.upload.chunks[s]&&void 0!==r.upload.chunks[s].progress&&(r.upload.progress+=r.upload.chunks[s].progress,r.upload.total+=r.upload.chunks[s].total,r.upload.bytesSent+=r.upload.chunks[s].bytesSent);r.upload.progress=r.upload.progress/r.upload.totalChunkCount}else for(var a=0,l=l=e;;){if(a>=l.length)break;var u=l[a++];u.upload.progress=n,u.upload.total=i.total,u.upload.bytesSent=i.loaded}for(var d=0,c=c=e;;){if(d>=c.length)break;var p=c[d++];this.emit("uploadprogress",p,p.upload.progress,p.upload.bytesSent)}}else{var h=!0;n=100;for(var f=0,m=m=e;;){if(f>=m.length)break;var v=m[f++];100===v.upload.progress&&v.upload.bytesSent===v.upload.total||(h=!1),v.upload.progress=n,v.upload.bytesSent=v.upload.total}if(h)return;for(var g=0,k=k=e;;){if(g>=k.length)break;var y=k[g++];this.emit("uploadprogress",y,n,y.upload.bytesSent)}}}},{key:"_finishedUploading",value:function(e,t,i){var n=void 0;if(e[0].status!==b.CANCELED&&4===t.readyState){if("arraybuffer"!==t.responseType&&"blob"!==t.responseType&&(n=t.responseText,t.getResponseHeader("content-type")&&~t.getResponseHeader("content-type").indexOf("application/json")))try{n=JSON.parse(n)}catch(e){i=e,n="Invalid JSON response from server."}this._updateFilesUploadProgress(e),200<=t.status&&t.status<300?e[0].upload.chunked?e[0].upload.finishedChunkUpload(this._getChunk(e[0],t)):this._finished(e,n,i):this._handleUploadError(e,t,n)}}},{key:"_handleUploadError",value:function(e,t,i){if(e[0].status!==b.CANCELED){if(e[0].upload.chunked&&this.options.retryChunks){var n=this._getChunk(e[0],t);if(n.retries++<this.options.retryChunksLimit)return void this._uploadData(e,[n.dataBlock]);console.warn("Retried this chunk too often. Giving up.")}for(var r=0,o=o=e;;){if(r>=o.length)break;o[r++];this._errorProcessing(e,i||this.options.dictResponseError.replace("{{statusCode}}",t.status),t)}}}},{key:"submitRequest",value:function(e,t,i){e.send(t)}},{key:"_finished",value:function(e,t,i){for(var n=0,r=r=e;;){if(n>=r.length)break;var o=r[n++];o.status=b.SUCCESS,this.emit("success",o,t,i),this.emit("complete",o)}if(this.options.uploadMultiple&&(this.emit("successmultiple",e,t,i),this.emit("completemultiple",e)),this.options.autoProcessQueue)return this.processQueue()}},{key:"_errorProcessing",value:function(e,t,i){for(var n=0,r=r=e;;){if(n>=r.length)break;var o=r[n++];o.status=b.ERROR,this.emit("error",o,t,i),this.emit("complete",o)}if(this.options.uploadMultiple&&(this.emit("errormultiple",e,t,i),this.emit("completemultiple",e)),this.options.autoProcessQueue)return this.processQueue()}}],[{key:"uuidv4",value:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}}]),b}();r.initClass(),r.version="5.4.0",r.options={},r.optionsForElement=function(e){return e.getAttribute("id")?r.options[o(e.getAttribute("id"))]:void 0},r.instances=[],r.forElement=function(e){if("string"==typeof e&&(e=document.querySelector(e)),null==(null!=e?e.dropzone:void 0))throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");return e.dropzone},r.autoDiscover=!0,r.discover=function(){var o=void 0;if(document.querySelectorAll)o=document.querySelectorAll(".dropzone");else{o=[];var e=function(r){return function(){for(var e=[],t=0,i=i=r;;){if(t>=i.length)break;var n=i[t++];/(^| )dropzone($| )/.test(n.className)?e.push(o.push(n)):e.push(void 0)}return e}()};e(document.getElementsByTagName("div")),e(document.getElementsByTagName("form"))}return function(){for(var e=[],t=0,i=i=o;;){if(t>=i.length)break;var n=i[t++];!1!==r.optionsForElement(n)?e.push(new r(n)):e.push(void 0)}return e}()},r.blacklistedBrowsers=[/opera.*(Macintosh|Windows Phone).*version\/12/i],r.isBrowserSupported=function(){var e=!0;if(window.File&&window.FileReader&&window.FileList&&window.Blob&&window.FormData&&document.querySelector)if("classList"in document.createElement("a"))for(var t=0,i=i=r.blacklistedBrowsers;;){if(t>=i.length)break;i[t++].test(navigator.userAgent)&&(e=!1)}else e=!1;else e=!1;return e},r.dataURItoBlob=function(e){for(var t=atob(e.split(",")[1]),i=e.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(t.length),r=new Uint8Array(n),o=0,s=t.length,a=0<=s;a?o<=s:s<=o;a?o++:o--)r[o]=t.charCodeAt(o);return new Blob([n],{type:i})};var n=function(e,t){return e.filter(function(e){return e!==t}).map(function(e){return e})},o=function(e){return e.replace(/[\-_](\w)/g,function(e){return e.charAt(1).toUpperCase()})};r.createElement=function(e){var t=document.createElement("div");return t.innerHTML=e,t.childNodes[0]},r.elementInside=function(e,t){if(e===t)return!0;for(;e=e.parentNode;)if(e===t)return!0;return!1},r.getElement=function(e,t){var i=void 0;if("string"==typeof e?i=document.querySelector(e):null!=e.nodeType&&(i=e),null==i)throw new Error("Invalid `"+t+"` option provided. Please provide a CSS selector or a plain HTML element.");return i},r.getElements=function(e,t){var i=void 0,n=void 0;if(e instanceof Array){n=[];try{for(var r=0,o=o=e;!(r>=o.length);)i=o[r++],n.push(this.getElement(i,t))}catch(e){n=null}}else if("string"==typeof e){n=[];for(var s=0,a=a=document.querySelectorAll(e);!(s>=a.length);)i=a[s++],n.push(i)}else null!=e.nodeType&&(n=[e]);if(null==n||!n.length)throw new Error("Invalid `"+t+"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");return n},r.confirm=function(e,t,i){return window.confirm(e)?t():null!=i?i():void 0},r.isValidFile=function(e,t){if(!t)return!0;t=t.split(",");for(var i=e.type,n=i.replace(/\/.*$/,""),r=0,o=o=t;;){if(r>=o.length)break;var s=o[r++];if("."===(s=s.trim()).charAt(0)){if(-1!==e.name.toLowerCase().indexOf(s.toLowerCase(),e.name.length-s.length))return!0}else if(/\/\*$/.test(s)){if(n===s.replace(/\/.*$/,""))return!0}else if(i===s)return!0}return!1},"undefined"!=typeof jQuery&&null!==jQuery&&(jQuery.fn.dropzone=function(e){return this.each(function(){return new r(this,e)})}),null!==e?e.exports=r:window.Dropzone=r,r.ADDED="added",r.QUEUED="queued",r.ACCEPTED=r.QUEUED,r.UPLOADING="uploading",r.PROCESSING=r.UPLOADING,r.CANCELED="canceled",r.ERROR="error",r.SUCCESS="success";var p=function(e,t,i,n,r,o,s,a,l,u){var d=function(e){e.naturalWidth;var t=e.naturalHeight,i=document.createElement("canvas");i.width=1,i.height=t;var n=i.getContext("2d");n.drawImage(e,0,0);for(var r=n.getImageData(1,0,1,t).data,o=0,s=t,a=t;o<a;)0===r[4*(a-1)+3]?s=a:o=a,a=s+o>>1;var l=a/t;return 0===l?1:l}(t);return e.drawImage(t,i,n,r,o,s,a,l,u/d)},u=function(){function e(){l(this,e)}return t(e,null,[{key:"initClass",value:function(){this.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}},{key:"encode64",value:function(e){for(var t="",i=void 0,n=void 0,r="",o=void 0,s=void 0,a=void 0,l="",u=0;o=(i=e[u++])>>2,s=(3&i)<<4|(n=e[u++])>>4,a=(15&n)<<2|(r=e[u++])>>6,l=63&r,isNaN(n)?a=l=64:isNaN(r)&&(l=64),t=t+this.KEY_STR.charAt(o)+this.KEY_STR.charAt(s)+this.KEY_STR.charAt(a)+this.KEY_STR.charAt(l),i=n=r="",o=s=a=l="",u<e.length;);return t}},{key:"restore",value:function(e,t){if(!e.match("data:image/jpeg;base64,"))return t;var i=this.decode64(e.replace("data:image/jpeg;base64,","")),n=this.slice2Segments(i),r=this.exifManipulation(t,n);return"data:image/jpeg;base64,"+this.encode64(r)}},{key:"exifManipulation",value:function(e,t){var i=this.getExifArray(t),n=this.insertExif(e,i);return new Uint8Array(n)}},{key:"getExifArray",value:function(e){for(var t=void 0,i=0;i<e.length;){if(255===(t=e[i])[0]&225===t[1])return t;i++}return[]}},{key:"insertExif",value:function(e,t){var i=e.replace("data:image/jpeg;base64,",""),n=this.decode64(i),r=n.indexOf(255,3),o=n.slice(0,r),s=n.slice(r),a=o;return a=(a=a.concat(t)).concat(s)}},{key:"slice2Segments",value:function(e){for(var t=0,i=[];;){if(255===e[t]&218===e[t+1])break;if(255===e[t]&216===e[t+1])t+=2;else{var n=t+(256*e[t+2]+e[t+3])+2,r=e.slice(t,n);i.push(r),t=n}if(t>e.length)break}return i}},{key:"decode64",value:function(e){var t=void 0,i=void 0,n="",r=void 0,o=void 0,s="",a=0,l=[];for(/[^A-Za-z0-9\+\/\=]/g.exec(e)&&console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");t=this.KEY_STR.indexOf(e.charAt(a++))<<2|(r=this.KEY_STR.indexOf(e.charAt(a++)))>>4,i=(15&r)<<4|(o=this.KEY_STR.indexOf(e.charAt(a++)))>>2,n=(3&o)<<6|(s=this.KEY_STR.indexOf(e.charAt(a++))),l.push(t),64!==o&&l.push(i),64!==s&&l.push(n),t=i=n="",r=o=s="",a<e.length;);return l}}]),e}();u.initClass();r._autoDiscoverFunction=function(){if(r.autoDiscover)return r.discover()},function(i,n){var r=!1,e=!0,o=i.document,s=o.documentElement,t=o.addEventListener?"addEventListener":"attachEvent",a=o.addEventListener?"removeEventListener":"detachEvent",l=o.addEventListener?"":"on",u=function e(t){if("readystatechange"!==t.type||"complete"===o.readyState)return("load"===t.type?i:o)[a](l+t.type,e,!1),!r&&(r=!0)?n.call(i,t.type||t):void 0};if("complete"!==o.readyState){if(o.createEventObject&&s.doScroll){try{e=!i.frameElement}catch(e){}e&&function t(){try{s.doScroll("left")}catch(e){return void setTimeout(t,50)}return u("poll")}()}o[t](l+"DOMContentLoaded",u,!1),o[t](l+"readystatechange",u,!1),i[t](l+"load",u,!1)}}(window,r._autoDiscoverFunction)}(e={exports:{}},e.exports),e.exports);return t.autoDiscover=!1,{render:function(){var e=this.$createElement;return(this._self._c||e)("div",{ref:"dropzoneElement",class:{"vue-dropzone dropzone":this.includeStyling},attrs:{id:this.id}})},staticRenderFns:[],props:{id:{type:String,required:!0},options:{type:Object,required:!0},includeStyling:{type:Boolean,default:!0,required:!1},awss3:{type:Object,required:!1,default:null},destroyDropzone:{type:Boolean,default:!0,required:!1}},data:function(){return{isS3:!1,isS3OverridesServerPropagation:!1,wasQueueAutoProcess:!0}},computed:{dropzoneSettings:function(){var t={thumbnailWidth:200,thumbnailHeight:200};return Object.keys(this.options).forEach(function(e){t[e]=this.options[e]},this),null!==this.awss3&&(t.autoProcessQueue=!1,this.isS3=!0,this.isS3OverridesServerPropagation=!1===this.awss3.sendFileToServer,void 0!==this.options.autoProcessQueue&&(this.wasQueueAutoProcess=this.options.autoProcessQueue),this.isS3OverridesServerPropagation&&(t.url=function(e){return e[0].s3Url})),t}},methods:{manuallyAddFile:function(e,t){e.manuallyAdded=!0,this.dropzone.emit("addedfile",e),t&&this.dropzone.emit("thumbnail",e,t);for(var i=e.previewElement.querySelectorAll("[data-dz-thumbnail]"),n=0;n<i.length;n++)i[n].style.width=this.dropzoneSettings.thumbnailWidth+"px",i[n].style.height=this.dropzoneSettings.thumbnailHeight+"px",i[n].style["object-fit"]="contain";this.dropzone.emit("complete",e),this.dropzone.options.maxFiles&&this.dropzone.options.maxFiles--,this.dropzone.files.push(e),this.$emit("vdropzone-file-added-manually",e)},setOption:function(e,t){this.dropzone.options[e]=t},removeAllFiles:function(e){this.dropzone.removeAllFiles(e)},processQueue:function(){var t=this,e=this.dropzone;this.isS3&&!this.wasQueueAutoProcess?this.getQueuedFiles().forEach(function(e){t.getSignedAndUploadToS3(e)}):this.dropzone.processQueue(),this.dropzone.on("success",function(){e.options.autoProcessQueue=!0}),this.dropzone.on("queuecomplete",function(){e.options.autoProcessQueue=!1})},init:function(){return this.dropzone.init()},destroy:function(){return this.dropzone.destroy()},updateTotalUploadProgress:function(){return this.dropzone.updateTotalUploadProgress()},getFallbackForm:function(){return this.dropzone.getFallbackForm()},getExistingFallback:function(){return this.dropzone.getExistingFallback()},setupEventListeners:function(){return this.dropzone.setupEventListeners()},removeEventListeners:function(){return this.dropzone.removeEventListeners()},disable:function(){return this.dropzone.disable()},enable:function(){return this.dropzone.enable()},filesize:function(e){return this.dropzone.filesize(e)},accept:function(e,t){return this.dropzone.accept(e,t)},addFile:function(e){return this.dropzone.addFile(e)},removeFile:function(e){this.dropzone.removeFile(e)},getAcceptedFiles:function(){return this.dropzone.getAcceptedFiles()},getRejectedFiles:function(){return this.dropzone.getRejectedFiles()},getFilesWithStatus:function(){return this.dropzone.getFilesWithStatus()},getQueuedFiles:function(){return this.dropzone.getQueuedFiles()},getUploadingFiles:function(){return this.dropzone.getUploadingFiles()},getAddedFiles:function(){return this.dropzone.getAddedFiles()},getActiveFiles:function(){return this.dropzone.getActiveFiles()},getSignedAndUploadToS3:function(t){var i=this,e=n.sendFile(t,this.awss3,this.isS3OverridesServerPropagation);this.isS3OverridesServerPropagation?e.then(function(){setTimeout(function(){return i.dropzone.processFile(t)})}):e.then(function(e){e.success?(t.s3ObjectLocation=e.message,setTimeout(function(){return i.dropzone.processFile(t)}),i.$emit("vdropzone-s3-upload-success",e.message)):void 0!==e.message?i.$emit("vdropzone-s3-upload-error",e.message):i.$emit("vdropzone-s3-upload-error","Network Error : Could not send request to AWS. (Maybe CORS error)")}),e.catch(function(e){alert(e)})},setAWSSigningURL:function(e){this.isS3&&(this.awss3.signingURL=e)}},mounted:function(){if(!this.$isServer||!this.hasBeenMounted){this.hasBeenMounted=!0,this.dropzone=new t(this.$refs.dropzoneElement,this.dropzoneSettings);var r=this;this.dropzone.on("thumbnail",function(e,t){r.$emit("vdropzone-thumbnail",e,t)}),this.dropzone.on("addedfile",function(t){r.duplicateCheck&&this.files.length&&this.files.forEach(function(e){e.name===t.name&&(this.removeFile(t),r.$emit("duplicate-file",t))},this),r.$emit("vdropzone-file-added",t),r.isS3&&r.wasQueueAutoProcess&&r.getSignedAndUploadToS3(t)}),this.dropzone.on("addedfiles",function(e){r.$emit("vdropzone-files-added",e)}),this.dropzone.on("removedfile",function(e){r.$emit("vdropzone-removed-file",e),e.manuallyAdded&&r.dropzone.options.maxFiles++}),this.dropzone.on("success",function(e,t){if(r.$emit("vdropzone-success",e,t),r.isS3){if(r.isS3OverridesServerPropagation){var i=(new window.DOMParser).parseFromString(t,"text/xml").firstChild.children[0].innerHTML;r.$emit("vdropzone-s3-upload-success",i)}r.wasQueueAutoProcess&&r.setOption("autoProcessQueue",!1)}}),this.dropzone.on("successmultiple",function(e,t){r.$emit("vdropzone-success-multiple",e,t)}),this.dropzone.on("error",function(e,t,i){r.$emit("vdropzone-error",e,t,i),this.isS3&&r.$emit("vdropzone-s3-upload-error")}),this.dropzone.on("errormultiple",function(e,t,i){r.$emit("vdropzone-error-multiple",e,t,i)}),this.dropzone.on("sending",function(e,t,i){if(r.isS3)if(r.isS3OverridesServerPropagation){var n=e.s3Signature;Object.keys(n).forEach(function(e){i.append(e,n[e])})}else i.append("s3ObjectLocation",e.s3ObjectLocation);r.$emit("vdropzone-sending",e,t,i)}),this.dropzone.on("sendingmultiple",function(e,t,i){r.$emit("vdropzone-sending-multiple",e,t,i)}),this.dropzone.on("complete",function(e){r.$emit("vdropzone-complete",e)}),this.dropzone.on("completemultiple",function(e){r.$emit("vdropzone-complete-multiple",e)}),this.dropzone.on("canceled",function(e){r.$emit("vdropzone-canceled",e)}),this.dropzone.on("canceledmultiple",function(e){r.$emit("vdropzone-canceled-multiple",e)}),this.dropzone.on("maxfilesreached",function(e){r.$emit("vdropzone-max-files-reached",e)}),this.dropzone.on("maxfilesexceeded",function(e){r.$emit("vdropzone-max-files-exceeded",e)}),this.dropzone.on("processing",function(e){r.$emit("vdropzone-processing",e)}),this.dropzone.on("processing",function(e){r.$emit("vdropzone-processing",e)}),this.dropzone.on("processingmultiple",function(e){r.$emit("vdropzone-processing-multiple",e)}),this.dropzone.on("uploadprogress",function(e,t,i){r.$emit("vdropzone-upload-progress",e,t,i)}),this.dropzone.on("totaluploadprogress",function(e,t,i){r.$emit("vdropzone-total-upload-progress",e,t,i)}),this.dropzone.on("reset",function(){r.$emit("vdropzone-reset")}),this.dropzone.on("queuecomplete",function(){r.$emit("vdropzone-queue-complete")}),this.dropzone.on("drop",function(e){r.$emit("vdropzone-drop",e)}),this.dropzone.on("dragstart",function(e){r.$emit("vdropzone-drag-start",e)}),this.dropzone.on("dragend",function(e){r.$emit("vdropzone-drag-end",e)}),this.dropzone.on("dragenter",function(e){r.$emit("vdropzone-drag-enter",e)}),this.dropzone.on("dragover",function(e){r.$emit("vdropzone-drag-over",e)}),this.dropzone.on("dragleave",function(e){r.$emit("vdropzone-drag-leave",e)}),r.$emit("vdropzone-mounted")}},beforeDestroy:function(){this.destroyDropzone&&this.dropzone.destroy()}}});
//# sourceMappingURL=vue2Dropzone.js.map


/***/ }),

/***/ 25:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ 250:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(251);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(233)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../css-loader/index.js!./vue2Dropzone.min.css", function() {
			var newContent = require("!!../../css-loader/index.js!./vue2Dropzone.min.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 251:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(32)(false);
// imports


// module
exports.push([module.i, "@-webkit-keyframes passing-through{0%{opacity:0;-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-ms-transform:translateY(40px);-o-transform:translateY(40px);transform:translateY(40px)}30%,70%{opacity:1;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}100%{opacity:0;-webkit-transform:translateY(-40px);-moz-transform:translateY(-40px);-ms-transform:translateY(-40px);-o-transform:translateY(-40px);transform:translateY(-40px)}}@-moz-keyframes passing-through{0%{opacity:0;-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-ms-transform:translateY(40px);-o-transform:translateY(40px);transform:translateY(40px)}30%,70%{opacity:1;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}100%{opacity:0;-webkit-transform:translateY(-40px);-moz-transform:translateY(-40px);-ms-transform:translateY(-40px);-o-transform:translateY(-40px);transform:translateY(-40px)}}@keyframes passing-through{0%{opacity:0;-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-ms-transform:translateY(40px);-o-transform:translateY(40px);transform:translateY(40px)}30%,70%{opacity:1;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}100%{opacity:0;-webkit-transform:translateY(-40px);-moz-transform:translateY(-40px);-ms-transform:translateY(-40px);-o-transform:translateY(-40px);transform:translateY(-40px)}}@-webkit-keyframes slide-in{0%{opacity:0;-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-ms-transform:translateY(40px);-o-transform:translateY(40px);transform:translateY(40px)}30%{opacity:1;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}}@-moz-keyframes slide-in{0%{opacity:0;-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-ms-transform:translateY(40px);-o-transform:translateY(40px);transform:translateY(40px)}30%{opacity:1;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}}@keyframes slide-in{0%{opacity:0;-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-ms-transform:translateY(40px);-o-transform:translateY(40px);transform:translateY(40px)}30%{opacity:1;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}10%{-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-ms-transform:scale(1.1);-o-transform:scale(1.1);transform:scale(1.1)}20%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-moz-keyframes pulse{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}10%{-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-ms-transform:scale(1.1);-o-transform:scale(1.1);transform:scale(1.1)}20%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}10%{-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-ms-transform:scale(1.1);-o-transform:scale(1.1);transform:scale(1.1)}20%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}.dropzone,.dropzone *{box-sizing:border-box}.dropzone{min-height:150px;border:2px solid rgba(0,0,0,0.3);background:white;padding:20px 20px}.dropzone.dz-clickable{cursor:pointer}.dropzone.dz-clickable *{cursor:default}.dropzone.dz-clickable .dz-message,.dropzone.dz-clickable .dz-message *{cursor:pointer}.dropzone.dz-started .dz-message{display:none}.dropzone.dz-drag-hover{border-style:solid}.dropzone.dz-drag-hover .dz-message{opacity:.5}.dropzone .dz-message{text-align:center;margin:2em 0}.dropzone .dz-preview{position:relative;display:inline-block;vertical-align:top;margin:16px;min-height:100px}.dropzone .dz-preview:hover{z-index:1000}.dropzone .dz-preview:hover .dz-details{opacity:1}.dropzone .dz-preview.dz-file-preview .dz-image{border-radius:20px;background:#999;background:linear-gradient(to bottom,#eee,#ddd)}.dropzone .dz-preview.dz-file-preview .dz-details{opacity:1}.dropzone .dz-preview.dz-image-preview{background:white}.dropzone .dz-preview.dz-image-preview .dz-details{-webkit-transition:opacity .2s linear;-moz-transition:opacity .2s linear;-ms-transition:opacity .2s linear;-o-transition:opacity .2s linear;transition:opacity .2s linear}.dropzone .dz-preview .dz-remove{font-size:14px;text-align:center;display:block;cursor:pointer;border:0}.dropzone .dz-preview .dz-remove:hover{text-decoration:underline}.dropzone .dz-preview:hover .dz-details{opacity:1}.dropzone .dz-preview .dz-details{z-index:20;position:absolute;top:0;left:0;opacity:0;font-size:13px;min-width:100%;max-width:100%;padding:2em 1em;text-align:center;color:rgba(0,0,0,0.9);line-height:150%}.dropzone .dz-preview .dz-details .dz-size{margin-bottom:1em;font-size:16px}.dropzone .dz-preview .dz-details .dz-filename{white-space:nowrap}.dropzone .dz-preview .dz-details .dz-filename:hover span{border:1px solid rgba(200,200,200,0.8);background-color:rgba(255,255,255,0.8)}.dropzone .dz-preview .dz-details .dz-filename:not(:hover){overflow:hidden;text-overflow:ellipsis}.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span{border:1px solid transparent}.dropzone .dz-preview .dz-details .dz-filename span,.dropzone .dz-preview .dz-details .dz-size span{background-color:rgba(255,255,255,0.4);padding:0 .4em;border-radius:3px}.dropzone .dz-preview:hover .dz-image img{-webkit-transform:scale(1.05,1.05);-moz-transform:scale(1.05,1.05);-ms-transform:scale(1.05,1.05);-o-transform:scale(1.05,1.05);transform:scale(1.05,1.05);-webkit-filter:blur(8px);filter:blur(8px)}.dropzone .dz-preview .dz-image{border-radius:20px;overflow:hidden;width:120px;height:120px;position:relative;display:block;z-index:10}.dropzone .dz-preview .dz-image img{display:block}.dropzone .dz-preview.dz-success .dz-success-mark{-webkit-animation:passing-through 3s cubic-bezier(0.77,0,0.175,1);-moz-animation:passing-through 3s cubic-bezier(0.77,0,0.175,1);-ms-animation:passing-through 3s cubic-bezier(0.77,0,0.175,1);-o-animation:passing-through 3s cubic-bezier(0.77,0,0.175,1);animation:passing-through 3s cubic-bezier(0.77,0,0.175,1)}.dropzone .dz-preview.dz-error .dz-error-mark{opacity:1;-webkit-animation:slide-in 3s cubic-bezier(0.77,0,0.175,1);-moz-animation:slide-in 3s cubic-bezier(0.77,0,0.175,1);-ms-animation:slide-in 3s cubic-bezier(0.77,0,0.175,1);-o-animation:slide-in 3s cubic-bezier(0.77,0,0.175,1);animation:slide-in 3s cubic-bezier(0.77,0,0.175,1)}.dropzone .dz-preview .dz-success-mark,.dropzone .dz-preview .dz-error-mark{pointer-events:none;opacity:0;z-index:500;position:absolute;display:block;top:50%;left:50%;margin-left:-27px;margin-top:-27px}.dropzone .dz-preview .dz-success-mark svg,.dropzone .dz-preview .dz-error-mark svg{display:block;width:54px;height:54px}.dropzone .dz-preview.dz-processing .dz-progress{opacity:1;-webkit-transition:all .2s linear;-moz-transition:all .2s linear;-ms-transition:all .2s linear;-o-transition:all .2s linear;transition:all .2s linear}.dropzone .dz-preview.dz-complete .dz-progress{opacity:0;-webkit-transition:opacity .4s ease-in;-moz-transition:opacity .4s ease-in;-ms-transition:opacity .4s ease-in;-o-transition:opacity .4s ease-in;transition:opacity .4s ease-in}.dropzone .dz-preview:not(.dz-processing) .dz-progress{-webkit-animation:pulse 6s ease infinite;-moz-animation:pulse 6s ease infinite;-ms-animation:pulse 6s ease infinite;-o-animation:pulse 6s ease infinite;animation:pulse 6s ease infinite}.dropzone .dz-preview .dz-progress{opacity:1;z-index:1000;pointer-events:none;position:absolute;height:16px;left:50%;top:50%;margin-top:-8px;width:80px;margin-left:-40px;background:rgba(255,255,255,0.9);-webkit-transform:scale(1);border-radius:8px;overflow:hidden}.dropzone .dz-preview .dz-progress .dz-upload{background:#333;background:linear-gradient(to bottom,#666,#444);position:absolute;top:0;left:0;bottom:0;width:0;-webkit-transition:width 300ms ease-in-out;-moz-transition:width 300ms ease-in-out;-ms-transition:width 300ms ease-in-out;-o-transition:width 300ms ease-in-out;transition:width 300ms ease-in-out}.dropzone .dz-preview.dz-error .dz-error-message{display:block}.dropzone .dz-preview.dz-error:hover .dz-error-message{opacity:1;pointer-events:auto}.dropzone .dz-preview .dz-error-message{pointer-events:none;z-index:1000;position:absolute;display:block;display:none;opacity:0;-webkit-transition:opacity .3s ease;-moz-transition:opacity .3s ease;-ms-transition:opacity .3s ease;-o-transition:opacity .3s ease;transition:opacity .3s ease;border-radius:8px;font-size:13px;top:130px;left:-10px;width:140px;background:#be2626;background:linear-gradient(to bottom,#be2626,#a92222);padding:.5em 1.2em;color:white}.dropzone .dz-preview .dz-error-message:after{content:'';position:absolute;top:-6px;left:64px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #be2626}.vue-dropzone{border:2px solid #e5e5e5;font-family:'Arial',sans-serif;letter-spacing:.2px;color:#777;transition:background-color .2s linear}.vue-dropzone:hover{background-color:#f6f6f6}.vue-dropzone i{color:#CCC}.vue-dropzone .dz-preview .dz-image{border-radius:0;width:100%;height:100%}.vue-dropzone .dz-preview .dz-image img:not([src]){width:200px;height:200px}.vue-dropzone .dz-preview .dz-image:hover img{transform:none;-webkit-filter:none}.vue-dropzone .dz-preview .dz-details{bottom:0;top:0;color:white;background-color:rgba(33,150,243,0.8);transition:opacity .2s linear;text-align:left}.vue-dropzone .dz-preview .dz-details .dz-filename{overflow:hidden}.vue-dropzone .dz-preview .dz-details .dz-filename span,.vue-dropzone .dz-preview .dz-details .dz-size span{background-color:transparent}.vue-dropzone .dz-preview .dz-details .dz-filename:not(:hover) span{border:0}.vue-dropzone .dz-preview .dz-details .dz-filename:hover span{background-color:transparent;border:0}.vue-dropzone .dz-preview .dz-progress .dz-upload{background:#ccc}.vue-dropzone .dz-preview .dz-remove{position:absolute;z-index:30;color:white;margin-left:15px;padding:10px;top:inherit;bottom:15px;border:2px white solid;text-decoration:none;text-transform:uppercase;font-size:.8rem;font-weight:800;letter-spacing:1.1px;opacity:0}.vue-dropzone .dz-preview:hover .dz-remove{opacity:1}.vue-dropzone .dz-preview .dz-success-mark,.vue-dropzone .dz-preview .dz-error-mark{margin-left:auto;margin-top:auto;width:100%;top:35%;left:0}.vue-dropzone .dz-preview .dz-success-mark svg,.vue-dropzone .dz-preview .dz-error-mark svg{margin-left:auto;margin-right:auto}.vue-dropzone .dz-preview .dz-error-message{top:calc(15%);margin-left:auto;margin-right:auto;left:0;width:100%}.vue-dropzone .dz-preview .dz-error-message:after{bottom:-6px;top:initial;border-top:6px solid #a92222;border-bottom:0}", ""]);

// exports


/***/ }),

/***/ 252:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "disk-gallery-upload panel panel-default" }, [
    _vm._m(0),
    _vm._v(" "),
    _c("div", { staticClass: "panel-body" }, [
      _c("div", { staticClass: "row" }, [
        _c("div", { staticClass: "col-md-4" }, [
          _c("div", { staticClass: "form-group" }, [
            _c("label", [_vm._v("Укажите услугу:")]),
            _vm._v(" "),
            _c(
              "select",
              {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.dataProps.serviceId,
                    expression: "dataProps.serviceId"
                  }
                ],
                staticClass: "form-control",
                on: {
                  change: function($event) {
                    var $$selectedVal = Array.prototype.filter
                      .call($event.target.options, function(o) {
                        return o.selected
                      })
                      .map(function(o) {
                        var val = "_value" in o ? o._value : o.value
                        return val
                      })
                    _vm.$set(
                      _vm.dataProps,
                      "serviceId",
                      $event.target.multiple ? $$selectedVal : $$selectedVal[0]
                    )
                  }
                }
              },
              _vm._l(_vm.serviceList, function(service) {
                return _c("option", { domProps: { value: service.id } }, [
                  _vm._v(_vm._s(service.name))
                ])
              })
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "form-group" }, [
            _c("label", [_vm._v("Укажите цвет:")]),
            _vm._v(" "),
            _c(
              "select",
              {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.dataProps.colorId,
                    expression: "dataProps.colorId"
                  }
                ],
                staticClass: "form-control",
                on: {
                  change: function($event) {
                    var $$selectedVal = Array.prototype.filter
                      .call($event.target.options, function(o) {
                        return o.selected
                      })
                      .map(function(o) {
                        var val = "_value" in o ? o._value : o.value
                        return val
                      })
                    _vm.$set(
                      _vm.dataProps,
                      "colorId",
                      $event.target.multiple ? $$selectedVal : $$selectedVal[0]
                    )
                  }
                }
              },
              _vm._l(_vm.colorList, function(color) {
                return _c("option", { domProps: { value: color.id } }, [
                  _vm._v(_vm._s(color.name))
                ])
              })
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "form-group" }, [
            _c("label", [_vm._v("Название:")]),
            _vm._v(" "),
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.dataProps.name,
                  expression: "dataProps.name"
                }
              ],
              staticClass: "form-control",
              attrs: { type: "text" },
              domProps: { value: _vm.dataProps.name },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.$set(_vm.dataProps, "name", $event.target.value)
                }
              }
            })
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "col-md-8" }, [
          _vm.dataProps.serviceId > 0
            ? _c(
                "div",
                { staticStyle: { padding: "10px" } },
                [
                  _c("vue-dropzone", {
                    ref: "myVueDropzone",
                    attrs: { id: "dropzone", options: _vm.dropzoneOptions },
                    on: { "vdropzone-sending": _vm.sendingEvent }
                  })
                ],
                1
              )
            : _vm._e()
        ])
      ])
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "panel-heading text-center" }, [
      _c("h4", { staticStyle: { padding: "12px 15px", margin: "0" } }, [
        _vm._v("Загрузить изображения выполненных работ.")
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-02a64d04", module.exports)
  }
}

/***/ }),

/***/ 26:
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ 27:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var settle = __webpack_require__(56);
var buildURL = __webpack_require__(58);
var parseHeaders = __webpack_require__(59);
var isURLSameOrigin = __webpack_require__(60);
var createError = __webpack_require__(28);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(61);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("development" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(62);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(57);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ 29:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ 30:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ 31:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
 * Vue.js v2.5.16
 * (c) 2014-2018 Evan You
 * Released under the MIT License.
 */


/*  */

var emptyObject = Object.freeze({});

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value e.g. [object Object]
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it... e.g.
 * PhantomJS 1.x. Technically we don't need this anymore since native bind is
 * now more performant in most browsers, but removing it would be breaking for
 * code that was able to run in PhantomJS 1.x, so this must be kept for
 * backwards compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
})

/*  */

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm || {};
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  if (!getter && arguments.length === 2) {
    val = obj[key];
  }
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ("development" !== 'production' && customSetter) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ("development" !== 'production' &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "development" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ("development" !== 'production' &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "development" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "development" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
    "development" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'can only contain alphanumeric characters and the hyphen, ' +
      'and must start with a letter.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ("development" !== 'production' && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ("development" !== 'production' && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      "Invalid prop: type check failed for prop \"" + name + "\"." +
      " Expected " + (expectedTypes.map(capitalize).join(', ')) +
      ", got " + (toRawType(value)) + ".",
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

/*  */

function handleError (err, vm, info) {
  if (vm) {
    var cur = vm;
    while ((cur = cur.$parent)) {
      var hooks = cur.$options.errorCaptured;
      if (hooks) {
        for (var i = 0; i < hooks.length; i++) {
          try {
            var capture = hooks[i].call(cur, err, vm, info) === false;
            if (capture) { return }
          } catch (e) {
            globalHandleError(e, cur, 'errorCaptured hook');
          }
        }
      }
    }
  }
  globalHandleError(err, vm, info);
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      logError(e, null, 'config.errorHandler');
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */
/* globals MessageChannel */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using both microtasks and (macro) tasks.
// In < 2.4 we used microtasks everywhere, but there are some scenarios where
// microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690) or even between bubbling of the same
// event (#6566). However, using (macro) tasks everywhere also has subtle problems
// when state is changed right before repaint (e.g. #6813, out-in transitions).
// Here we use microtask by default, but expose a way to force (macro) task when
// needed (e.g. in event handlers attached by v-on).
var microTimerFunc;
var macroTimerFunc;
var useMacroTask = false;

// Determine (macro) task defer implementation.
// Technically setImmediate should be the ideal choice, but it's only available
// in IE. The only polyfill that consistently queues the callback after all DOM
// events triggered in the same loop is by using MessageChannel.
/* istanbul ignore if */
if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  macroTimerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else if (typeof MessageChannel !== 'undefined' && (
  isNative(MessageChannel) ||
  // PhantomJS
  MessageChannel.toString() === '[object MessageChannelConstructor]'
)) {
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = flushCallbacks;
  macroTimerFunc = function () {
    port.postMessage(1);
  };
} else {
  /* istanbul ignore next */
  macroTimerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

// Determine microtask defer implementation.
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  microTimerFunc = function () {
    p.then(flushCallbacks);
    // in problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else {
  // fallback to macro
  microTimerFunc = macroTimerFunc;
}

/**
 * Wrap a function so that if any code inside triggers state change,
 * the changes are queued using a (macro) task instead of a microtask.
 */
function withMacroTask (fn) {
  return fn._withTask || (fn._withTask = function () {
    useMacroTask = true;
    var res = fn.apply(null, arguments);
    useMacroTask = false;
    return res
  })
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    if (useMacroTask) {
      macroTimerFunc();
    } else {
      microTimerFunc();
    }
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, def, cur, old, event;
  for (name in on) {
    def = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    /* istanbul ignore if */
    if (isUndef(cur)) {
      "development" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "development" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once) {
  if (once) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$off(event[i], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    if (fn) {
      // specific handler
      var cb;
      var i$1 = cbs.length;
      while (i$1--) {
        cb = cbs[i$1];
        if (cb === fn || cb.fn === fn) {
          cbs.splice(i$1, 1);
          break
        }
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, ("event handler for \"" + event + "\""));
        }
      }
    }
    return vm
  };
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if ("development" !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure(("vue " + name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure(("vue " + name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ("development" !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$1 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$1; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "development" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "development" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      "development" !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ("development" !== 'production' && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : userDef;
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  if ("development" !== 'production' &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (methods[key] == null) {
        warn(
          "Method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject).filter(function (key) {
        /* istanbul ignore next */
        return Object.getOwnPropertyDescriptor(inject, key).enumerable
      })
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ("development" !== 'production' && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes) {
      if ("development" !== 'production' && slotNodes._rendered) {
        warn(
          "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
          "- this will likely cause render errors.",
          this
        );
      }
      slotNodes._rendered = true;
    }
    nodes = slotNodes || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      "development" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "development" !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () { return resolveSlots(children, parent); };

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = data.scopedSlots || emptyObject;
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */




// Register the component hook to weex native render engine.
// The hook will be triggered by native, not javascript.


// Updates the state of the component to weex native render engine.

/*  */

// https://github.com/Hanks10100/weex-native-directive/tree/master/component

// listening on native callback

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  // Weex specific: invoke recycle-list optimized @render function for
  // extracting cell-slot template.
  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
  /* istanbul ignore if */
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var options = {
    _isComponent: true,
    parent: parent,
    _parentVnode: vnode,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    hooks[key] = componentVNodeHooks[key];
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "development" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ("development" !== 'production' &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    // reset _rendered flag on slots for duplicate slot check
    if (true) {
      for (var key in vm.$slots) {
        // $flow-disable-line
        vm.$slots[key]._rendered = false;
      }
    }

    if (_parentVnode) {
      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (true) {
        if (vm.$options.renderError) {
          try {
            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
          } catch (e) {
            handleError(e, vm, "renderError");
            vnode = vm._vnode;
          }
        } else {
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ("development" !== 'production' && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ("development" !== 'production' && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if ("development" !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue (options) {
  if ("development" !== 'production' &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ("development" !== 'production' && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ("development" !== 'production' && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache, key, this$1.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
}

var builtInComponents = {
  KeepAlive: KeepAlive
}

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.5.16';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "development" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
}

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove () {
      if (--remove.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove.listeners = listeners;
    return remove
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (true) {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if ("development" !== 'production' && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (true) {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (true) {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (true) {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ("development" !== 'production' &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ("development" !== 'production' &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (true) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
}

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
]

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
}

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
}

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
  }
}

/*  */

function baseWarn (msg) {
  console.error(("[Vue compiler]: " + msg));
}

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
  el.plain = false;
}

function addAttr (el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
  el.plain = false;
}

// add a raw attr (use this in preTransforms)
function addRawAttr (el, name, value) {
  el.attrsMap[name] = value;
  el.attrsList.push({ name: name, value: value });
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  modifiers
) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
  el.plain = false;
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn
) {
  modifiers = modifiers || emptyObject;
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
    "development" !== 'production' && warn &&
    modifiers.prevent && modifiers.passive
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.'
    );
  }

  // check capture modifier
  if (modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }

  // normalize click.right and click.middle since they don't actually fire
  // this is technically browser-specific, but at least for now browsers are
  // the only target envs that have right/middle clicks.
  if (name === 'click') {
    if (modifiers.right) {
      name = 'contextmenu';
      delete modifiers.right;
    } else if (modifiers.middle) {
      name = 'mouseup';
    }
  }

  var events;
  if (modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }

  var newHandler = {
    value: value.trim()
  };
  if (modifiers !== emptyObject) {
    newHandler.modifiers = modifiers;
  }

  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }

  el.plain = false;
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.
function getAndRemoveAttr (
  el,
  name,
  removeFromMap
) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  if (removeFromMap) {
    delete el.attrsMap[name];
  }
  return val
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
      "? " + baseValueExpression + ".trim()" +
      ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: ("\"" + value + "\""),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var res = parseModel(value);
  if (res.key === null) {
    return (value + "=" + assignment)
  } else {
    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
  }
}

/**
 * Parse a v-model expression into a base path and a final key segment.
 * Handles both dot-path and possible square brackets.
 *
 * Possible cases:
 *
 * - test
 * - test[key]
 * - test[test1[key]]
 * - test["a"][key]
 * - xxx.test[a[a].test1[key]]
 * - test.xxx.a["asa"][test1[key]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;



function parseModel (val) {
  // Fix https://github.com/vuejs/vue/pull/7730
  // allow v-model="obj.val " (trailing whitespace)
  val = val.trim();
  len = val.length;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    index$1 = val.lastIndexOf('.');
    if (index$1 > -1) {
      return {
        exp: val.slice(0, index$1),
        key: '"' + val.slice(index$1 + 1) + '"'
      }
    } else {
      return {
        exp: val,
        key: null
      }
    }
  }

  str = val;
  index$1 = expressionPos = expressionEndPos = 0;

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.slice(0, expressionPos),
    key: val.slice(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (true) {
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead."
      );
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (true) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.'
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
    "?_i(" + value + "," + valueBinding + ")>-1" + (
      trueValueBinding === 'true'
        ? (":(" + value + ")")
        : (":_q(" + value + "," + trueValueBinding + ")")
    )
  );
  addHandler(el, 'change',
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
      "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;

  // warn if v-bind:value conflicts with v-model
  // except for inputs with v-bind:type
  if (true) {
    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (value$1 && !typeBinding) {
      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
      warn$1(
        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
        'because the latter already expands to a value binding internally'
      );
    }
  }

  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler (handler, event, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  handler = withMacroTask(handler);
  if (once$$1) { handler = createOnceHandler(handler, event, capture); }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    event,
    handler._withTask || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
}

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.lazy) {
      // inputs with lazy should only be updated when not in focus
      return false
    }
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
}

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def) {
  if (!def) {
    return
  }
  /* istanbul ignore else */
  if (typeof def === 'object') {
    var res = {};
    if (def.css !== false) {
      extend(res, autoCssTransition(def.name || 'v'));
    }
    extend(res, def);
    return res
  } else if (typeof def === 'string') {
    return autoCssTransition(def)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if ("development" !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {}

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
]

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "development" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
}

var platformDirectives = {
  model: directive,
  show: show
}

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if ("development" !== 'production' && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if ("development" !== 'production' &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
}

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (true) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
}

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
}

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        "development" !== 'production' &&
        "development" !== 'test' &&
        isChrome
      ) {
        console[console.info ? 'info' : 'log'](
          'Download the Vue Devtools extension for a better development experience:\n' +
          'https://github.com/vuejs/vue-devtools'
        );
      }
    }
    if ("development" !== 'production' &&
      "development" !== 'test' &&
      config.productionTip !== false &&
      typeof console !== 'undefined'
    ) {
      console[console.info ? 'info' : 'log'](
        "You are running Vue in development mode.\n" +
        "Make sure to turn on production mode when deploying for production.\n" +
        "See more tips at https://vuejs.org/guide/deployment.html"
      );
    }
  }, 0);
}

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});



function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var rawTokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index, tokenValue;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      rawTokens.push(tokenValue = text.slice(lastIndex, index));
      tokens.push(JSON.stringify(tokenValue));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    rawTokens.push({ '@binding': exp });
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    rawTokens.push(tokenValue = text.slice(lastIndex));
    tokens.push(JSON.stringify(tokenValue));
  }
  return {
    expression: tokens.join('+'),
    tokens: rawTokens
  }
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if ("development" !== 'production' && staticClass) {
    var res = parseText(staticClass, options.delimiters);
    if (res) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.'
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
}

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (true) {
      var res = parseText(staticStyle, options.delimiters);
      if (res) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.'
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
}

/*  */

var decoder;

var he = {
  decode: function decode (html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent
  }
}

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
var startTagOpen = new RegExp(("^<" + qnameCapture));
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
var doctype = /^<!DOCTYPE [^>]+>/i;
// #7298: escape - to avoid being pased as HTML comment when inlined in page
var comment = /^<!\--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n',
  '&#9;': '\t'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd));
            }
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(lastTag, html)) {
            advance(1);
          }
          continue
        }
      }

      var text = (void 0), rest = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (
          !endTag.test(rest) &&
          !startTagOpen.test(rest) &&
          !comment.test(rest) &&
          !conditionalComment.test(rest)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if ("development" !== 'production' && !stack.length && options.warn) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') { delete args[3]; }
        if (args[4] === '') { delete args[4]; }
        if (args[5] === '') { delete args[5]; }
      }
      var value = args[3] || args[4] || args[5] || '';
      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
        ? options.shouldDecodeNewlinesForHref
        : options.shouldDecodeNewlines;
      attrs[i] = {
        name: args[1],
        value: decodeAttr(value, shouldDecodeNewlines)
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if ("development" !== 'production' &&
          (i > pos || !tagName) &&
          options.warn
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /([^]*?)\s+(?:in|of)\s+([^]*)/;
var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
var stripParensRE = /^\(|\)$/g;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(he.decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;



function createASTElement (
  tag,
  attrs,
  parent
) {
  return {
    type: 1,
    tag: tag,
    attrsList: attrs,
    attrsMap: makeAttrsMap(attrs),
    parent: parent,
    children: []
  }
}

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;

  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function closeElement (element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
    // apply post-transforms
    for (var i = 0; i < postTransforms.length; i++) {
      postTransforms[i](element, options);
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
    shouldKeepComment: options.comments,
    start: function start (tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = createASTElement(tag, attrs, currentParent);
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "development" !== 'production' && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.'
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        element = preTransforms[i](element, options) || element;
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else if (!element.processed) {
        // structural directives
        processFor(element);
        processIf(element);
        processOnce(element);
        // element-scope stuff
        processElement(element, options);
      }

      function checkRootConstraints (el) {
        if (true) {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce(
              "Cannot use <" + (el.tag) + "> as component root element because it may " +
              'contain multiple nodes.'
            );
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce(
              'Cannot use v-for on stateful component root element because ' +
              'it renders multiple elements.'
            );
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (true) {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead."
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) { // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        closeElement(element);
      }
    },

    end: function end () {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      closeElement(element);
    },

    chars: function chars (text) {
      if (!currentParent) {
        if (true) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.'
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored.")
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      text = inPre || text.trim()
        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var res;
        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: res.expression,
            tokens: res.tokens,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    },
    comment: function comment (text) {
      currentParent.children.push({
        type: 3,
        text: text,
        isComment: true
      });
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processElement (element, options) {
  processKey(element);

  // determine whether this is a plain element after
  // removing structural attributes
  element.plain = !element.key && !element.attrsList.length;

  processRef(element);
  processSlot(element);
  processComponent(element);
  for (var i = 0; i < transforms.length; i++) {
    element = transforms[i](element, options) || element;
  }
  processAttrs(element);
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if ("development" !== 'production' && el.tag === 'template') {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var res = parseFor(exp);
    if (res) {
      extend(el, res);
    } else if (true) {
      warn$2(
        ("Invalid v-for expression: " + exp)
      );
    }
  }
}



function parseFor (exp) {
  var inMatch = exp.match(forAliasRE);
  if (!inMatch) { return }
  var res = {};
  res.for = inMatch[2].trim();
  var alias = inMatch[1].trim().replace(stripParensRE, '');
  var iteratorMatch = alias.match(forIteratorRE);
  if (iteratorMatch) {
    res.alias = alias.replace(forIteratorRE, '');
    res.iterator1 = iteratorMatch[1].trim();
    if (iteratorMatch[2]) {
      res.iterator2 = iteratorMatch[2].trim();
    }
  } else {
    res.alias = alias;
  }
  return res
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (true) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if."
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if ("development" !== 'production' && children[i].text !== ' ') {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored."
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if ("development" !== 'production' && el.key) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead."
      );
    }
  } else {
    var slotScope;
    if (el.tag === 'template') {
      slotScope = getAndRemoveAttr(el, 'scope');
      /* istanbul ignore if */
      if ("development" !== 'production' && slotScope) {
        warn$2(
          "the \"scope\" attribute for scoped slots have been deprecated and " +
          "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
          "can also be used on plain elements in addition to <template> to " +
          "denote scoped slots.",
          true
        );
      }
      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
      /* istanbul ignore if */
      if ("development" !== 'production' && el.attrsMap['v-for']) {
        warn$2(
          "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
          "(v-for takes higher priority). Use a wrapper <template> for the " +
          "scoped slot to make it clearer.",
          true
        );
      }
      el.slotScope = slotScope;
    }
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
      // preserve slot as an attribute for native shadow DOM compat
      // only for non-scoped slots.
      if (el.tag !== 'template' && !el.slotScope) {
        addAttr(el, 'slot', slotTarget);
      }
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(
              el,
              ("update:" + (camelize(name))),
              genAssignmentCode(value, "$event")
            );
          }
        }
        if (isProp || (
          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
        )) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if ("development" !== 'production' && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (true) {
        var res = parseText(value, delimiters);
        if (res) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.'
          );
        }
      }
      addAttr(el, name, JSON.stringify(value));
      // #6887 firefox doesn't update muted state if set via attribute
      // even immediately after element creation
      if (!el.component &&
          name === 'muted' &&
          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
        addProp(el, name, 'true');
      }
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
      "development" !== 'production' &&
      map[attrs[i].name] && !isIE && !isEdge
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead."
      );
    }
    _el = _el.parent;
  }
}

/*  */

/**
 * Expand input[v-model] with dyanmic type bindings into v-if-else chains
 * Turn this:
 *   <input v-model="data[type]" :type="type">
 * into this:
 *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
 *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
 *   <input v-else :type="type" v-model="data[type]">
 */

function preTransformNode (el, options) {
  if (el.tag === 'input') {
    var map = el.attrsMap;
    if (!map['v-model']) {
      return
    }

    var typeBinding;
    if (map[':type'] || map['v-bind:type']) {
      typeBinding = getBindingAttr(el, 'type');
    }
    if (!map.type && !typeBinding && map['v-bind']) {
      typeBinding = "(" + (map['v-bind']) + ").type";
    }

    if (typeBinding) {
      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
      // 1. checkbox
      var branch0 = cloneASTElement(el);
      // process for on the main node
      processFor(branch0);
      addRawAttr(branch0, 'type', 'checkbox');
      processElement(branch0, options);
      branch0.processed = true; // prevent it from double-processed
      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
      addIfCondition(branch0, {
        exp: branch0.if,
        block: branch0
      });
      // 2. add radio else-if condition
      var branch1 = cloneASTElement(el);
      getAndRemoveAttr(branch1, 'v-for', true);
      addRawAttr(branch1, 'type', 'radio');
      processElement(branch1, options);
      addIfCondition(branch0, {
        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
        block: branch1
      });
      // 3. other
      var branch2 = cloneASTElement(el);
      getAndRemoveAttr(branch2, 'v-for', true);
      addRawAttr(branch2, ':type', typeBinding);
      processElement(branch2, options);
      addIfCondition(branch0, {
        exp: ifCondition,
        block: branch2
      });

      if (hasElse) {
        branch0.else = true;
      } else if (elseIfCondition) {
        branch0.elseif = elseIfCondition;
      }

      return branch0
    }
  }
}

function cloneASTElement (el) {
  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
}

var model$2 = {
  preTransformNode: preTransformNode
}

var modules$1 = [
  klass$1,
  style$1,
  model$2
]

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
}

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

// KeyboardEvent.keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// KeyboardEvent.key aliases
var keyNames = {
  esc: 'Escape',
  tab: 'Tab',
  enter: 'Enter',
  space: ' ',
  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
  up: ['Up', 'ArrowUp'],
  left: ['Left', 'ArrowLeft'],
  right: ['Right', 'ArrowRight'],
  down: ['Down', 'ArrowDown'],
  'delete': ['Backspace', 'Delete']
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative,
  warn
) {
  var res = isNative ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    res += "\"" + name + "\":" + (genHandler(name, events[name])) + ",";
  }
  return res.slice(0, -1) + '}'
}

function genHandler (
  name,
  handler
) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    if (isMethodPath || isFunctionExpression) {
      return handler.value
    }
    /* istanbul ignore if */
    return ("function($event){" + (handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else if (key === 'exact') {
        var modifiers = (handler.modifiers);
        genModifierCode += genGuard(
          ['ctrl', 'shift', 'alt', 'meta']
            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
            .join('||')
        );
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? ("return " + (handler.value) + "($event)")
      : isFunctionExpression
        ? ("return (" + (handler.value) + ")($event)")
        : handler.value;
    /* istanbul ignore if */
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var keyCode = keyCodes[key];
  var keyName = keyNames[key];
  return (
    "_k($event.keyCode," +
    (JSON.stringify(key)) + "," +
    (JSON.stringify(keyCode)) + "," +
    "$event.key," +
    "" + (JSON.stringify(keyName)) +
    ")"
  )
}

/*  */

function on (el, dir) {
  if ("development" !== 'production' && dir.modifiers) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
}

/*  */

var CodegenState = function CodegenState (options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
  this.onceId = 0;
  this.staticRenderFns = [];
};



function generate (
  ast,
  options
) {
  var state = new CodegenState(options);
  var code = ast ? genElement(ast, state) : '_c("div")';
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: state.staticRenderFns
  }
}

function genElement (el, state) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state)
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el, state) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el, state)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data = el.plain ? undefined : genData$2(el, state);

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el, state) {
  el.staticProcessed = true;
  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
      "development" !== 'production' && state.warn(
        "v-once can only be used inside v-for that is keyed. "
      );
      return genElement(el, state)
    }
    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
  } else {
    return genStatic(el, state)
  }
}

function genIf (
  el,
  state,
  altGen,
  altEmpty
) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
}

function genIfConditions (
  conditions,
  state,
  altGen,
  altEmpty
) {
  if (!conditions.length) {
    return altEmpty || '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return altGen
      ? altGen(el, state)
      : el.once
        ? genOnce(el, state)
        : genElement(el, state)
  }
}

function genFor (
  el,
  state,
  altGen,
  altHelper
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if ("development" !== 'production' &&
    state.maybeComponent(el) &&
    el.tag !== 'slot' &&
    el.tag !== 'template' &&
    !el.key
  ) {
    state.warn(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + ((altGen || genElement)(el, state)) +
    '})'
}

function genData$2 (el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + (genProps(el.attrs)) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + (genProps(el.props)) + "},";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false, state.warn)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
  }
  // slot target
  // only for non-scoped slots
  if (el.slotTarget && !el.slotScope) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el.scopedSlots, state)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data
}

function genDirectives (el, state) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el, state) {
  var ast = el.children[0];
  if ("development" !== 'production' && (
    el.children.length !== 1 || ast.type !== 1
  )) {
    state.warn('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (
  slots,
  state
) {
  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
      return genScopedSlot(key, slots[key], state)
    }).join(',')) + "])")
}

function genScopedSlot (
  key,
  el,
  state
) {
  if (el.for && !el.forProcessed) {
    return genForScopedSlot(key, el, state)
  }
  var fn = "function(" + (String(el.slotScope)) + "){" +
    "return " + (el.tag === 'template'
      ? el.if
        ? ((el.if) + "?" + (genChildren(el, state) || 'undefined') + ":undefined")
        : genChildren(el, state) || 'undefined'
      : genElement(el, state)) + "}";
  return ("{key:" + key + ",fn:" + fn + "}")
}

function genForScopedSlot (
  key,
  el,
  state
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genScopedSlot(key, el, state)) +
    '})'
}

function genChildren (
  el,
  state,
  checkSkip,
  altGenElement,
  altGenNode
) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      return (altGenElement || genElement)(el$1, state)
    }
    var normalizationType = checkSkip
      ? getNormalizationType(children, state.maybeComponent)
      : 0;
    var gen = altGenNode || genNode;
    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (
  children,
  maybeComponent
) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function genNode (node, state) {
  if (node.type === 1) {
    return genElement(node, state)
  } if (node.type === 3 && node.isComment) {
    return genComment(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genComment (comment) {
  return ("_e(" + (JSON.stringify(comment.text)) + ")")
}

function genSlot (el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? ("," + children) : '');
  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (
  componentName,
  el,
  state
) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    /* istanbul ignore if */
    {
      res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
    }
  }
  return res.slice(0, -1)
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors
}

function checkNode (node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), errors);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), errors);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent (exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
    );
  }
  checkExpression(exp, text, errors);
}

function checkFor (node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier (
  ident,
  type,
  text,
  errors
) {
  if (typeof ident === 'string') {
    try {
      new Function(("var " + ident + "=_"));
    } catch (e) {
      errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
    }
  }
}

function checkExpression (exp, text, errors) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim())
      );
    } else {
      errors.push(
        "invalid expression: " + (e.message) + " in\n\n" +
        "    " + exp + "\n\n" +
        "  Raw expression: " + (text.trim()) + "\n"
      );
    }
  }
}

/*  */

function createFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompileToFunctionFn (compile) {
  var cache = Object.create(null);

  return function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = extend({}, options);
    var warn$$1 = options.warn || warn;
    delete options.warn;

    /* istanbul ignore if */
    if (true) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn$$1(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (cache[key]) {
      return cache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (true) {
      if (compiled.errors && compiled.errors.length) {
        warn$$1(
          "Error compiling template:\n\n" + template + "\n\n" +
          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
          vm
        );
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors)
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (true) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn$$1(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (cache[key] = res)
  }
}

/*  */

function createCompilerCreator (baseCompile) {
  return function createCompiler (baseOptions) {
    function compile (
      template,
      options
    ) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];
      finalOptions.warn = function (msg, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        // merge custom modules
        if (options.modules) {
          finalOptions.modules =
            (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(
            Object.create(baseOptions.directives || null),
            options.directives
          );
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      var compiled = baseCompile(template, finalOptions);
      if (true) {
        errors.push.apply(errors, detectErrors(compiled.ast));
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    }
  }
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  if (options.optimize !== false) {
    optimize(ast, options);
  }
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

// check whether current browser encodes a char inside attribute values
var div;
function getShouldDecode (href) {
  div = div || document.createElement('div');
  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
  return div.innerHTML.indexOf('&#10;') > 0
}

// #3663: IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
// #6828: chrome encodes content in a[href]
var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue.prototype.$mount;
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    "development" !== 'production' && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if ("development" !== 'production' && !template) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (true) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile end');
        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue.compile = compileToFunctions;

module.exports = Vue;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(70).setImmediate))

/***/ }),

/***/ 32:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ 41:
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(72)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ 5:
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 50:
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ 51:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(52);

/***/ }),

/***/ 52:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var bind = __webpack_require__(25);
var Axios = __webpack_require__(54);
var defaults = __webpack_require__(17);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(30);
axios.CancelToken = __webpack_require__(68);
axios.isCancel = __webpack_require__(29);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(69);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ 53:
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),

/***/ 54:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(17);
var utils = __webpack_require__(0);
var InterceptorManager = __webpack_require__(63);
var dispatchRequest = __webpack_require__(64);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ 55:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ 56:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(28);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ 57:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),

/***/ 58:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ 59:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ 60:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),

/***/ 61:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),

/***/ 62:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),

/***/ 63:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ 64:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var transformData = __webpack_require__(65);
var isCancel = __webpack_require__(29);
var defaults = __webpack_require__(17);
var isAbsoluteURL = __webpack_require__(66);
var combineURLs = __webpack_require__(67);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ 65:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ 66:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ 67:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ 68:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(30);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ 70:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(71);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),

/***/ 71:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(26)))

/***/ }),

/***/ 72:
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),

/***/ 74:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash__);




__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */].Store({
    state: {
        isReady: false,
        isInProgress: true,
        app: {
            car: {
                bodyColor: null,
                diskColorSection: null,
                diskColor: null,
                diskSize: null,
                isPolished: false,
                isMounted: false,
                isLights: false,
                isMove: false,
                moveDirection: 'IN'
            }
        },
        data: {
            values: {
                carColorList: [],
                diskColorList: [],
                diskSizeList: [],
                diskColorSections: []
            },
            moveDuration: 4
        },
        calcFunction: undefined
    },
    getters: {
        isReady: function isReady(state) {
            return state.isReady;
        },
        defaults: function defaults(state) {
            return state.data.defaults;
        },
        values: function values(state) {
            return state.data.values;
        },
        car: function car(state) {
            return state.app.car;
        },
        moveDuration: function moveDuration(state) {
            return parseInt(state.data.moveDuration);
        },
        calcFunction: function calcFunction(state) {
            return state.calcFunction;
        }
    },
    mutations: {
        setReady: function setReady(state) {
            state.isReady = true;
        },
        setValues: function setValues(state, val) {
            state.data.values = val;
            state.app.car.bodyColor = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.carColorList);
            state.app.car.diskColor = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.diskColorList);
            state.app.car.diskColorSection = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.diskColorSections);
            state.app.car.diskSize = __WEBPACK_IMPORTED_MODULE_2_lodash___default.a.first(state.data.values.diskSizeList);
        },
        setCalcFunction: function setCalcFunction(state, f) {
            if (typeof f === 'function') {
                state.calcFunction = f;
            }
        },
        setMoveDuration: function setMoveDuration(state, val) {
            state.data.moveDuration = parseInt(val);
        },

        // Цвет автомобиля
        setCarColor: function setCarColor(state, val) {
            state.app.car.bodyColor = val;
        },

        // Цвет диска
        setDiskColor: function setDiskColor(state, val) {
            state.app.car.diskColor = val;
        },

        // Размер диска
        setDiskSize: function setDiskSize(state, val) {
            state.app.car.diskSize = val;
        },

        // Алмазная полировка
        setDiskPolished: function setDiskPolished(state, val) {
            state.app.car.isPolished = val;
        },

        // Шиномонтаж
        setDiskMounted: function setDiskMounted(state, val) {
            state.app.car.isMounted = val;
        },

        // Включить фары
        switchOnLigt: function switchOnLigt(state) {
            state.app.car.isLights = true;
        },

        // Выключить фары
        switchOffLigt: function switchOffLigt(state) {
            state.app.car.isLights = false;
        },

        // Автомобиль приезжает
        moveInCar: function moveInCar(state) {
            state.app.car.moveDirection = 'IN';
            state.app.car.isMove = true;
        },

        // Автомобиль уезжает
        moveOutCar: function moveOutCar(state) {
            state.app.car.moveDirection = 'OUT';
            state.app.car.isMove = true;
        },

        // Автомобиль останавливается
        stopMovingCar: function stopMovingCar(state) {
            state.app.car.isMove = false;
        }
    }
}));

/***/ }),

/***/ 75:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Store */
/* unused harmony export install */
/* unused harmony export mapState */
/* unused harmony export mapMutations */
/* unused harmony export mapGetters */
/* unused harmony export mapActions */
/* unused harmony export createNamespacedHelpers */
/**
 * vuex v3.0.1
 * (c) 2017 Evan You
 * @license MIT
 */
var applyMixin = function (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
};

var devtoolHook =
  typeof window !== 'undefined' &&
  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */


/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  this._children = Object.create(null);
  this._rawModule = rawModule;
  var rawState = rawModule.state;
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors$1 = { namespaced: { configurable: true } };

prototypeAccessors$1.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors$1 );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if (true) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

function update (path, targetModule, newModule) {
  if (true) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if (true) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if (true) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "Store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  var state = options.state; if ( state === void 0 ) state = {};
  if (typeof state === 'function') {
    state = state() || {};
  }

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  if (Vue.config.devtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors = { state: { configurable: true } };

prototypeAccessors.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors.state.set = function (v) {
  if (true) {
    assert(false, "Use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });
  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    "development" !== 'production' &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });

  return entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload)
};

Store.prototype.subscribe = function subscribe (fn) {
  return genericSubscribe(fn, this._subscribers)
};

Store.prototype.subscribeAction = function subscribeAction (fn) {
  return genericSubscribe(fn, this._actionSubscribers)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if (true) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors );

function genericSubscribe (fn, subs) {
  if (subs.indexOf(fn) < 0) {
    subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    computed[key] = function () { return fn(store); };
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  var gettersProxy = {};

  var splitPos = namespace.length;
  Object.keys(store.getters).forEach(function (type) {
    // skip if the target getter is not match this namespace
    if (type.slice(0, splitPos) !== namespace) { return }

    // extract local getter type
    var localType = type.slice(splitPos);

    // Add a port to the getters proxy.
    // Define as getter property because
    // we do not want to evaluate the getters in this time.
    Object.defineProperty(gettersProxy, localType, {
      get: function () { return store.getters[type]; },
      enumerable: true
    });
  });

  return gettersProxy
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload, cb) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload, cb);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if (true) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if (true) {
      assert(store._committing, "Do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.length
    ? path.reduce(function (state, key) { return state[key]; }, state)
    : state
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if (true) {
    assert(typeof type === 'string', ("Expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if (true) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if ("development" !== 'production' && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

function normalizeMap (map) {
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if ("development" !== 'production' && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index_esm = {
  Store: Store,
  install: install,
  version: '3.0.1',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};


/* harmony default export */ __webpack_exports__["a"] = (index_esm);


/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.10';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Gets the value at `key`, unless `key` is "__proto__".
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function safeGet(object, key) {
    return key == '__proto__'
      ? undefined
      : object[key];
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });

        return result;
      }

      if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });

        return result;
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(50)(module)))

/***/ })

/******/ });